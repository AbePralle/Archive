//=============================================================================
//  slagc_xc.cpp
//  Generated by slagc 2020.09.17 23:50:52
//=============================================================================

#include "slag.h"
#include "slagc_xc.h"

const char* sxc_identifiers[] =
{
  "ReaderType",
  "Reader<<Qualifiers>>",
  "Object",
  "ManagerCreates",
  "WeakReference",
  "Weak<<SignalListener>>",
  "ListOrdering<<Int64>>",
  "ReadableType",
  "Readable<<Byte>>",
  "Int32",
  "ParsePos",
  "Collection<<Char>>",
  "Readable<<Char>>",
  "String",
  "Token",
  "Cmd",
  "CmdBinary",
  "CmdBitwiseMovement<<CmdLeftShifted,left_shifted,cmd_left_shifted>>",
  "CmdLeftShifted",
  "GenericArray",
  "Array<<BigInt>>",
  "ListType",
  "Collection<<BigInt>>",
  "Readable<<BigInt>>",
  "List<<BigInt>>",
  "ListOperations<<BigInt,ArrayList<<BigInt>>>>",
  "ArrayList<<BigInt>>",
  "Real64",
  "Collection<<ControlStructureInfo>>",
  "Array<<HashTableBin<<Object,Object>>>>",
  "Collection<<HashTableBin<<Object,Object>>>>",
  "Readable<<HashTableBin<<Object,Object>>>>",
  "List<<HashTableBin<<Object,Object>>>>",
  "ListOperations<<HashTableBin<<Object,Object>>,ArrayList<<HashTableBin<<Object,Object>>>>>>",
  "ArrayList<<HashTableBin<<Object,Object>>>>",
  "GenericHashTable<<Object,Object>>",
  "Readable<<MethodInfo[]>>",
  "HashTableBase<<String,MethodInfo[],Object,Object>>",
  "HashTable<<String,MethodInfo[]>>",
  "MethodTable",
  "Array<<Int64>>",
  "Logical",
  "System",
  "Array<<Cmd>>",
  "Collection<<Cmd>>",
  "Readable<<Cmd>>",
  "List<<Cmd>>",
  "ListOperations<<Cmd,ArrayList<<Cmd>>>>",
  "ArrayList<<Cmd>>",
  "CmdStatementList",
  "BitFlags<<Qualifiers>>",
  "EnumCategory<<Qualifiers>>",
  "Qualifiers",
  "Array<<ArrayList<<Token>>>>",
  "Collection<<ArrayList<<Token>>>>",
  "Readable<<ArrayList<<Token>>>>",
  "List<<ArrayList<<Token>>>>",
  "ListOperations<<ArrayList<<Token>>,ArrayList<<ArrayList<<Token>>>>>>",
  "ArrayList<<ArrayList<<Token>>>>",
  "Array<<TypeInfo>>",
  "Collection<<TypeInfo>>",
  "Readable<<TypeInfo>>",
  "List<<TypeInfo>>",
  "ListOperations<<TypeInfo,ArrayList<<TypeInfo>>>>",
  "ArrayList<<TypeInfo>>",
  "Array<<MethodInfo>>",
  "Collection<<MethodInfo>>",
  "Readable<<MethodInfo>>",
  "List<<MethodInfo>>",
  "ListOperations<<MethodInfo,ArrayList<<MethodInfo>>>>",
  "ArrayList<<MethodInfo>>",
  "Array<<PropertyInfo>>",
  "Collection<<PropertyInfo>>",
  "Readable<<PropertyInfo>>",
  "List<<PropertyInfo>>",
  "ListOperations<<PropertyInfo,ArrayList<<PropertyInfo>>>>",
  "ArrayList<<PropertyInfo>>",
  "Array<<CategoryInfo>>",
  "Collection<<CategoryInfo>>",
  "Readable<<CategoryInfo>>",
  "List<<CategoryInfo>>",
  "ListOperations<<CategoryInfo,ArrayList<<CategoryInfo>>>>",
  "ArrayList<<CategoryInfo>>",
  "HashTableBase<<String,PropertyInfo,Object,Object>>",
  "HashTable<<String,PropertyInfo>>",
  "HashTableBase<<String,MethodInfo,Object,Object>>",
  "HashTable<<String,MethodInfo>>",
  "Array<<TypeMapping>>",
  "Collection<<TypeMapping>>",
  "Readable<<TypeMapping>>",
  "List<<TypeMapping>>",
  "ListOperations<<TypeMapping,ArrayList<<TypeMapping>>>>",
  "ArrayList<<TypeMapping>>",
  "TypeInfo",
  "Array<<ParameterInfo>>",
  "Collection<<ParameterInfo>>",
  "Readable<<ParameterInfo>>",
  "List<<ParameterInfo>>",
  "ListOperations<<ParameterInfo,ArrayList<<ParameterInfo>>>>",
  "ArrayList<<ParameterInfo>>",
  "Readable<<String>>",
  "HashTableBase<<String,String,Object,Object>>",
  "HashTable<<String,String>>",
  "Set<<String>>",
  "HashSet<<String>>",
  "MethodGroup",
  "Array<<LocalVarInfo>>",
  "Collection<<LocalVarInfo>>",
  "Readable<<LocalVarInfo>>",
  "List<<LocalVarInfo>>",
  "ListOperations<<LocalVarInfo,ArrayList<<LocalVarInfo>>>>",
  "ArrayList<<LocalVarInfo>>",
  "MethodInfo",
  "GenericVarInfo",
  "MethodVarInfo",
  "LocalVarInfo",
  "CmdStructure",
  "CmdForEach",
  "Collection<<String>>",
  "CmdMathOp<<CmdExp,\"^\",^=,cmd_exp>>",
  "QualifiersManager",
  "Readable<<KeywordPairing>>",
  "Collection<<CmdCatch>>",
  "Readable<<CmdCatch>>",
  "List<<CmdCatch>>",
  "ListOperations<<CmdCatch,ArrayList<<CmdCatch>>>>",
  "Array<<SlagFile>>",
  "Collection<<SlagFile>>",
  "Reader<<SlagFile>>",
  "ArrayReader<<SlagFile>>",
  "Collection<<Mapping<<Int32,Object>>>>",
  "Readable<<Mapping<<Int32,Object>>>>",
  "List<<Mapping<<Int32,Object>>>>",
  "HashTableBase<<String,LocalVarInfo,Object,Object>>",
  "HashTable<<String,LocalVarInfo>>",
  "CmdList",
  "CmdCall",
  "CmdNewObject",
  "Reader<<ArrayList<<Token>>>>",
  "ArrayReader<<ArrayList<<Token>>>>",
  "CmdBitwiseOp<<CmdAnd,\"&\",&=,cmd_and>>",
  "CmdAnd",
  "Collection<<TypeTemplate>>",
  "Readable<<TypeTemplate>>",
  "List<<TypeTemplate>>",
  "ListOperations<<TypeTemplate,ArrayList<<TypeTemplate>>>>",
  "Array<<TypeTemplate>>",
  "Reader<<TypeTemplate>>",
  "ArrayReader<<TypeTemplate>>",
  "Collection<<Signal>>",
  "Array<<Mapping<<Object,Int32>>>>",
  "Collection<<Mapping<<Object,Int32>>>>",
  "Readable<<Mapping<<Object,Int32>>>>",
  "List<<Mapping<<Object,Int32>>>>",
  "ListOperations<<Mapping<<Object,Int32>>,ArrayList<<Mapping<<Object,Int32>>>>>>",
  "ArrayList<<Mapping<<Object,Int32>>>>",
  "Writer<<Char>>",
  "TextWriter",
  "StdOutWriter",
  "CmdConstruct",
  "CmdUnary",
  "CmdMemberAccess",
  "Array<<HashTableBin<<Int32,Int32>>>>",
  "Collection<<HashTableBin<<Int32,Int32>>>>",
  "Readable<<HashTableBin<<Int32,Int32>>>>",
  "List<<HashTableBin<<Int32,Int32>>>>",
  "ListOperations<<HashTableBin<<Int32,Int32>>,ArrayList<<HashTableBin<<Int32,Int32>>>>>>",
  "ArrayList<<HashTableBin<<Int32,Int32>>>>",
  "GenericHashTable<<Int32,Int32>>",
  "Readable<<Int32>>",
  "HashTableBase<<Int32,Int32,Int32,Int32>>",
  "Array<<HashTableBin<<Object,Int32>>>>",
  "Collection<<HashTableBin<<Object,Int32>>>>",
  "Readable<<HashTableBin<<Object,Int32>>>>",
  "List<<HashTableBin<<Object,Int32>>>>",
  "ListOperations<<HashTableBin<<Object,Int32>>,ArrayList<<HashTableBin<<Object,Int32>>>>>>",
  "ArrayList<<HashTableBin<<Object,Int32>>>>",
  "GenericHashTable<<Object,Int32>>",
  "HashTableBase<<String,Int32,Object,Int32>>",
  "HashTable<<String,Int32>>",
  "Array<<String>>",
  "ListAspect3048",
  "List<<String>>",
  "ListOperations<<String,ArrayList<<String>>>>",
  "ArrayList<<String>>",
  "TokenManager",
  "Reader<<HashTableBin<<Object,Int32>>>>",
  "ArrayReader<<HashTableBin<<Object,Int32>>>>",
  "CmdTerm",
  "CmdThisReference",
  "CmdCoerceAs",
  "Array<<Int32>>",
  "Collection<<Int32>>",
  "Reader<<Int32>>",
  "ArrayReader<<Int32>>",
  "Array<<HashTableBin<<Int32,Object>>>>",
  "Reader<<ParameterInfo>>",
  "ParseReaderMarkManager",
  "Reader<<HashTableBin<<Int32,Object>>>>",
  "Reader<<Mapping<<Int32,Object>>>>",
  "Reader<<Object>>",
  "HashTableValueReader<<Int32,Object>>",
  "Math",
  "Collection<<StackTraceInfo>>",
  "Collection<<HashTableBin<<Int32,Object>>>>",
  "Readable<<HashTableBin<<Int32,Object>>>>",
  "List<<HashTableBin<<Int32,Object>>>>",
  "ListOperations<<HashTableBin<<Int32,Object>>,ArrayList<<HashTableBin<<Int32,Object>>>>>>",
  "Array<<CMD>>",
  "Collection<<CMD>>",
  "Readable<<CMD>>",
  "List<<CMD>>",
  "ListOperations<<CMD,ArrayList<<CMD>>>>",
  "ArrayList<<CMD>>",
  "HashTableBase<<String,CMD,Object,Object>>",
  "HashTable<<String,CMD>>",
  "EnumCategory<<CMD>>",
  "CMD",
  "GenericEnum",
  "Enum<<CMD>>",
  "CmdManager",
  "Reader<<StackTraceInfo>>",
  "DelegateType",
  "Delegate____",
  "SignalHandler",
  "SpecializedSignalHandler_460",
  "Array<<ParamInfo>>",
  "Collection<<ParamInfo>>",
  "Readable<<ParamInfo>>",
  "List<<ParamInfo>>",
  "ListOperations<<ParamInfo,ArrayList<<ParamInfo>>>>",
  "ArrayList<<ParamInfo>>",
  "PropertyInfo",
  "CmdStatementWithOperand",
  "CmdModifyAndAssign<<CmdThisPropertySubAndAssign,PropertyInfo,cmd_this_property_sub_and_assign>>",
  "CmdThisPropertySubAndAssign",
  "Reader<<PropertyInfo>>",
  "CoerceReader<<PropertyInfo>>",
  "Readable<<MethodGroup>>",
  "HashTableBase<<String,MethodGroup,Object,Object>>",
  "Array<<CmdCatch>>",
  "ArrayList<<CmdCatch>>",
  "CmdTry",
  "Collection<<CmdElseIf>>",
  "Int64",
  "CmdLiteralPrimitive",
  "CmdLiteralInt64",
  "CmdModifyAndAssign<<CmdThisPropertyMulAndAssign,PropertyInfo,cmd_this_property_mul_and_assign>>",
  "CmdThisPropertyMulAndAssign",
  "Readable<<ControlStructureInfo>>",
  "List<<ControlStructureInfo>>",
  "Collection<<SlagError>>",
  "Readable<<SlagError>>",
  "List<<SlagError>>",
  "CmdMathOp<<CmdAdd,\"+\",+=,cmd_add>>",
  "Array<<Char>>",
  "ListOrdering<<Char>>",
  "List<<Char>>",
  "ListOperations<<Char,ArrayList<<Char>>>>",
  "ArrayList<<Char>>",
  "Readable<<CmdElseIf>>",
  "Array<<Token>>",
  "Collection<<Token>>",
  "Readable<<Token>>",
  "List<<Token>>",
  "ListOperations<<Token,ArrayList<<Token>>>>",
  "ArrayList<<Token>>",
  "CmdStructureControl",
  "CmdCompare",
  "CmdCmpEquivalance<<CmdCmpNE,!=,true,cmd_cmp_ne>>",
  "Readable<<Object>>",
  "Collection<<Int64>>",
  "Readable<<Int64>>",
  "List<<Int64>>",
  "ListOperations<<Int64,ArrayList<<Int64>>>>",
  "ArrayList<<Int64>>",
  "StackTrace",
  "Exception",
  "Error",
  "SlagError",
  "Array<<Byte>>",
  "SignalListener",
  "CmdLiteralNull",
  "CmdVarAccess",
  "CmdMemberVarAccess",
  "CmdMemberVarRead",
  "Collection<<HashTable<<String,LocalVarInfo>>>>",
  "Readable<<HashTable<<String,LocalVarInfo>>>>",
  "List<<HashTable<<String,LocalVarInfo>>>>",
  "ListOperations<<HashTable<<String,LocalVarInfo>>,ArrayList<<HashTable<<String,LocalVarInfo>>>>>>",
  "CmdSingletonReference",
  "CmdRange",
  "CmdRangeLE",
  "CmdStatement",
  "Array<<Mapping<<Int32,Int32>>>>",
  "Collection<<Mapping<<Int32,Int32>>>>",
  "Readable<<Mapping<<Int32,Int32>>>>",
  "List<<Mapping<<Int32,Int32>>>>",
  "ListOperations<<Mapping<<Int32,Int32>>,ArrayList<<Mapping<<Int32,Int32>>>>>>",
  "ArrayList<<Mapping<<Int32,Int32>>>>",
  "HashTableBin<<Int32,Int32>>",
  "CmdCmpEquivalance<<CmdCmpEQ,==,false,cmd_cmp_eq>>",
  "CmdCmpEQ",
  "Collection<<ArrayList<<TypeTemplate>>>>",
  "Reader<<HashTableBin<<Int32,Int32>>>>",
  "Reader<<Mapping<<Int32,Int32>>>>",
  "HashTableValueReader<<Int32,Int32>>",
  "CmdStepVar<<CmdLocalVarIncrement,MethodVarInfo,cmd_local_var_increment>>",
  "CmdLocalVarIncrement",
  "Reader<<Mapping<<Object,Int32>>>>",
  "Readable<<ArrayList<<TypeTemplate>>>>",
  "Readable<<Qualifiers>>",
  "ArrayList<<TypeTemplate>>",
  "Mapping<<String,TypeTemplate[]>>",
  "Reader<<Token>>",
  "Readable<<Token[]>>",
  "HashTableBase<<String,Token[],Object,Object>>",
  "HashTable<<String,Token[]>>",
  "TokenReader",
  "TemplateReader",
  "CmdModifyAndAssign<<CmdLocalVarDivAndAssign,MethodVarInfo,cmd_local_var_div_and_assign>>",
  "CmdLocalVarDivAndAssign",
  "HashTableBase<<String,TypeInfo,Object,Object>>",
  "HashTable<<String,TypeInfo>>",
  "Readable<<TypeTemplate[]>>",
  "HashTableBase<<String,TypeTemplate[],Object,Object>>",
  "HashTable<<String,TypeTemplate[]>>",
  "HashTableBase<<String,TypeTemplate,Object,Object>>",
  "HashTable<<String,TypeTemplate>>",
  "HashTable<<String,MethodGroup>>",
  "Array<<MethodGroup>>",
  "Collection<<MethodGroup>>",
  "List<<MethodGroup>>",
  "ListOperations<<MethodGroup,ArrayList<<MethodGroup>>>>",
  "ArrayList<<MethodGroup>>",
  "StringTable",
  "TypeManager",
  "Array<<Object>>",
  "SlagAnalyzer",
  "Readable<<SlagFile>>",
  "List<<SlagFile>>",
  "ListOperations<<SlagFile,ArrayList<<SlagFile>>>>",
  "CmdPrimitiveCast",
  "CmdCastToInt64",
  "CmdRangeLT",
  "CmdMathOp<<CmdDiv,\"/\",/=,cmd_div>>",
  "HashTableMappingReader<<Int32,Int32>>",
  "null",
  "MethodTableManager",
  "Readable<<StackTraceInfo>>",
  "Reader<<TypeTemplate[]>>",
  "CoerceReader<<TypeTemplate[]>>",
  "Readable<<StructureType>>",
  "HashTableBase<<String,StructureType,Object,Object>>",
  "CmdCloseScope",
  "Array<<Mapping<<Int32,Object>>>>",
  "ListOperations<<Mapping<<Int32,Object>>,ArrayList<<Mapping<<Int32,Object>>>>>>",
  "ArrayList<<Mapping<<Int32,Object>>>>",
  "HashTableBin<<Int32,Object>>",
  "FileError",
  "CmdCmpRelative<<CmdCmpLT,<,CmdCmpEQ,ffffffff,cmd_cmp_lt>>",
  "Reader<<MethodGroup>>",
  "ArrayReader<<MethodGroup>>",
  "CmdAssign",
  "NullReferenceError",
  "HashTable<<Int32,Int32>>",
  "Array<<HashTable<<String,LocalVarInfo>>>>",
  "ArrayList<<HashTable<<String,LocalVarInfo>>>>",
  "Reader<<HashTableBin<<Object,Object>>>>",
  "Reader<<Mapping<<Object,Object>>>>",
  "HashTableValueReader<<Object,Object>>",
  "InvalidStateError",
  "CmdCmpIs",
  "ArrayList<<SlagFile>>",
  "CmdContextCall",
  "CmdStaticCall",
  "Mapping<<String,MethodInfo[]>>",
  "Reader<<Cmd>>",
  "Array<<CmdWhichCase>>",
  "Collection<<CmdWhichCase>>",
  "Reader<<CmdWhichCase>>",
  "ArrayReader<<CmdWhichCase>>",
  "Array<<Qualifiers>>",
  "Array<<CmdElseIf>>",
  "List<<CmdElseIf>>",
  "ListOperations<<CmdElseIf,ArrayList<<CmdElseIf>>>>",
  "ArrayList<<CmdElseIf>>",
  "Collection<<Object>>",
  "Array<<Mapping<<String,SignalHandler>>>>",
  "ReferenceTable<<String,SignalHandler>>",
  "ArrayReader<<HashTableBin<<Object,Object>>>>",
  "Mapping<<String,Token[]>>",
  "CmdCmpInstanceOf",
  "Array<<ArrayList<<TypeTemplate>>>>",
  "List<<ArrayList<<TypeTemplate>>>>",
  "ListOperations<<ArrayList<<TypeTemplate>>,ArrayList<<ArrayList<<TypeTemplate>>>>>>",
  "ArrayList<<ArrayList<<TypeTemplate>>>>",
  "ArrayReader<<Token>>",
  "ListOperations<<SlagError,ArrayList<<SlagError>>>>",
  "CmdLocalVarAccess",
  "CmdLocalVarWrite",
  "Reader<<Int64>>",
  "ArrayReader<<Int64>>",
  "BigInt",
  "ParamInfo",
  "EnumCategory<<StructureType>>",
  "StructureType",
  "CmdInitialAssignment",
  "CmdBitwiseMovement<<CmdRightXShifted,right_xshifted,cmd_right_xshifted>>",
  "CmdModifyAndAssign<<CmdThisPropertyAddAndAssign,PropertyInfo,cmd_this_property_add_and_assign>>",
  "CmdCmpIsNotNull",
  "CmdLiteralReal64",
  "CmdCastToReal64",
  "Array<<StructureType>>",
  "ArrayReader<<Mapping<<Int32,Int32>>>>",
  "Real32",
  "CmdInitialConstructor",
  "RangeIteratorDescending<<Int32>>",
  "ListOperations<<ControlStructureInfo,ArrayList<<ControlStructureInfo>>>>",
  "Array<<Signal>>",
  "Readable<<Signal>>",
  "List<<Signal>>",
  "ListOperations<<Signal,ArrayList<<Signal>>>>",
  "ArrayList<<Signal>>",
  "Signal",
  "Collection<<Byte>>",
  "ListOrdering<<Byte>>",
  "List<<Byte>>",
  "ListOperations<<Byte,ArrayList<<Byte>>>>",
  "ArrayList<<Byte>>",
  "CmdSingletonWrite",
  "Reader<<MethodInfo>>",
  "ArrayReader<<MethodInfo>>",
  "ListOrdering<<Int32>>",
  "List<<Int32>>",
  "ListOperations<<Int32,ArrayList<<Int32>>>>",
  "LocalVarTable",
  "Set<<Int32>>",
  "HashSet<<Int32>>",
  "ArrayList<<HashTableBin<<Int32,Object>>>>",
  "GenericHashTable<<Int32,Object>>",
  "HashTableBase<<Int32,Cmd,Int32,Object>>",
  "HashTable<<Int32,Cmd>>",
  "ArrayList<<Int32>>",
  "Context",
  "Array<<SlagError>>",
  "CPPWriter",
  "NumberConversions",
  "Reader<<LocalVarInfo>>",
  "ArrayReader<<LocalVarInfo>>",
  "CmdRightXShifted",
  "CategoryInfo",
  "CmdStepVar<<CmdThisPropertyIncrement,PropertyInfo,cmd_this_property_increment>>",
  "CmdThisPropertyIncrement",
  "Reader<<CategoryInfo>>",
  "Readable<<RuntimeType>>",
  "HashTableBase<<String,RuntimeType,Object,Object>>",
  "HashTable<<String,RuntimeType>>",
  "CmdMathOp<<CmdMod,\"%\",%=,cmd_mod>>",
  "CmdMod",
  "BitWriter",
  "ETCWriter",
  "HashTableBase<<Int32,String,Int32,Object>>",
  "HashTable<<Int32,String>>",
  "TypeMapping",
  "Reader<<String>>",
  "CoerceReader<<String>>",
  "Collection<<Mapping<<Object,Object>>>>",
  "Readable<<Mapping<<Object,Object>>>>",
  "List<<Mapping<<Object,Object>>>>",
  "List<<StackTraceInfo>>",
  "Readable<<CmdWhichCase>>",
  "List<<CmdWhichCase>>",
  "ListOperations<<CmdWhichCase,ArrayList<<CmdWhichCase>>>>",
  "NoNextValueError",
  "Mapping<<Object,Int32>>",
  "CmdBitwiseOp<<CmdXor,\"~\",~=,cmd_xor>>",
  "CoerceReader<<MethodInfo>>",
  "Mapping<<String,String>>",
  "Reader<<SlagError>>",
  "CmdIf",
  "CmdRemoveCurrent",
  "Writable<<Char>>",
  "File",
  "SlagCompiler",
  "ArrayReader<<PropertyInfo>>",
  "Array<<ControlStructureInfo>>",
  "Reader<<ControlStructureInfo>>",
  "ArrayReader<<ControlStructureInfo>>",
  "CmdNot",
  "BitwiseOperations",
  "CmdXor",
  "ListOperations<<Mapping<<Object,Object>>,ArrayList<<Mapping<<Object,Object>>>>>>",
  "CmdDuplicate",
  "CmdModifyAndAssign<<CmdThisPropertyModAndAssign,PropertyInfo,cmd_this_property_mod_and_assign>>",
  "CmdThisPropertyModAndAssign",
  "CmdLiteralInt32",
  "CmdCmpNE",
  "Comparator<<MethodInfo>>",
  "SpecializedComparator_2167",
  "ArrayList<<CmdWhichCase>>",
  "CmdWhich",
  "CmdAs",
  "CmdArrayDuplicate",
  "Byte",
  "CmdLiteralByte",
  "CmdCastToByte",
  "CmdReturnNil",
  "FileManager",
  "ArrayReader<<Mapping<<Int32,Object>>>>",
  "Mapping<<String,SignalHandler>>",
  "RequiresCleanup",
  "NativeData",
  "CmdThrow",
  "NoSuchElementError",
  "CmdAssignNewObject",
  "SocketError",
  "CmdCastToInt32",
  "Collection<<StructureType>>",
  "Mapping<<String,TypeInfo>>",
  "CmdWhichCase",
  "CmdCmpRelative<<CmdCmpGT,>,CmdCmpEQ,1,cmd_cmp_gt>>",
  "SpecializedDelegate____<<SignalHandler,delegate_dummy>>",
  "CmdUnresolvedNewObject",
  "ArrayReader<<ParameterInfo>>",
  "HeapSort<<MethodInfo>>",
  "CmdMathOp<<CmdMul,\"*\",*=,cmd_mul>>",
  "HashTableBase<<Int32,KeywordPairing,Int32,Object>>",
  "HashTable<<Int32,KeywordPairing>>",
  "List<<Object>>",
  "ListOperations<<Object,ArrayList<<Object>>>>",
  "ArrayList<<Object>>",
  "ParseReaderMark",
  "Reader<<Char>>",
  "ParseReader",
  "ArrayReader<<Cmd>>",
  "List<<StructureType>>",
  "CmdLiteralString",
  "StringReader",
  "ArrayReverseReader<<Cmd>>",
  "Mapping<<Int32,Cmd>>",
  "CmdNextIteration",
  "CmdEscape",
  "CmdForEachOf",
  "CmdNewCompound",
  "FileWriter",
  "Reader<<ParamInfo>>",
  "ArrayReader<<ParamInfo>>",
  "HashTableKeyReader<<Object,Int32>>",
  "Collection<<Qualifiers>>",
  "List<<Qualifiers>>",
  "ListOperations<<Qualifiers,ArrayList<<Qualifiers>>>>",
  "StackTraceInfo",
  "ArrayReader<<Qualifiers>>",
  "CmdModifyAndAssign<<CmdLocalVarAddAndAssign,MethodVarInfo,cmd_local_var_add_and_assign>>",
  "CmdLocalVarAddAndAssign",
  "HashTableBase<<String,Qualifiers,Object,Object>>",
  "HashTable<<String,Qualifiers>>",
  "ListOperations<<Char,StringBuilder>>",
  "StringBuilder",
  "SlagScanner",
  "SlagPreprocessor",
  "CmdBreakpoint",
  "CmdContingent",
  "CmdBitwiseMovement<<CmdRightShifted,right_shifted,cmd_right_shifted>>",
  "CmdLoop",
  "Date",
  "StringManager",
  "Mapping<<Int32,Object>>",
  "CmdLiteralReal32",
  "CmdCastToReal32",
  "JavaWriter",
  "CmdStepVar<<CmdLocalVarDecrement,MethodVarInfo,cmd_local_var_decrement>>",
  "RangeType",
  "MissingReturnError",
  "SlagScannerManager",
  "ArrayList<<Qualifiers>>",
  "ArrayReader<<Char>>",
  "CmdDynamicCall",
  "CmdReturnValue",
  "CmdAdd",
  "LiteralTerm",
  "ArrayList<<SlagError>>",
  "CmdExp",
  "ListOperations<<StructureType,ArrayList<<StructureType>>>>",
  "Global",
  "ArrayReader<<Mapping<<Object,Int32>>>>",
  "ArrayReverseReader<<ParameterInfo>>",
  "Reader<<CmdElseIf>>",
  "ArrayReader<<CmdElseIf>>",
  "CmdLocalVarDecrement",
  "CmdWhile",
  "CmdCmpRelative<<CmdCmpGE,>=,CmdCmpNE,ffffffff,cmd_cmp_ge>>",
  "CmdCmpGE",
  "SignalObjectArg",
  "Runtime",
  "CmdCast",
  "CmdNarrowingCast",
  "CmdPropertyWrite",
  "CmdContingentControl",
  "CmdSufficient",
  "CmdBlock",
  "CmdModifyAndAssign<<CmdThisPropertyDivAndAssign,PropertyInfo,cmd_this_property_div_and_assign>>",
  "CmdThisPropertyDivAndAssign",
  "ArrayReader<<String>>",
  "DegreesManager",
  "BigIntManager",
  "CmdArrayGet",
  "TypeCastError",
  "RangeIteratorGE<<Int32>>",
  "CmdArraySet",
  "CmdModifyAndAssign<<CmdLocalVarSubAndAssign,MethodVarInfo,cmd_local_var_sub_and_assign>>",
  "CmdLocalVarSubAndAssign",
  "CmdCmpGT",
  "Reader<<Signal>>",
  "ArrayReader<<Signal>>",
  "CmdModifyAndAssign<<CmdLocalVarMulAndAssign,MethodVarInfo,cmd_local_var_mul_and_assign>>",
  "CmdLocalVarMulAndAssign",
  "SignalManager",
  "Char",
  "StdInReader",
  "Array<<Mapping<<Object,Object>>>>",
  "CmdLogicalize",
  "HashTable<<String,StructureType>>",
  "OutOfBoundsError",
  "ArrayReverseReader<<ControlStructureInfo>>",
  "WeakReferenceManager",
  "CmdArrayCreate",
  "CmdLiteralChar",
  "CmdCastToChar",
  "SlagFile",
  "HashTableMappingReader<<Object,Object>>",
  "PriorSlagError",
  "ParameterInfo",
  "CmdCompoundPropertyRead",
  "CmdNecessary",
  "StringTriplet",
  "TypeTemplate",
  "Mapping<<String,TypeTemplate>>",
  "FileNotFoundError",
  "CmdLiteralLogical",
  "CmdElseIf",
  "CompilerError",
  "CmdCmpIsNot",
  "Reader<<TypeInfo>>",
  "ArrayReader<<TypeInfo>>",
  "RandomNumberGenerator",
  "Reader<<HashTable<<String,LocalVarInfo>>>>",
  "CmdCastToLogical",
  "CmdLocalVarRead",
  "CSWriter",
  "CmdBitwiseOp<<CmdOr,\"|\",|=,cmd_or>>",
  "KeywordPairing",
  "Mapping<<Int32,KeywordPairing>>",
  "UnsupportedMethodError",
  "CmdExplicitListLiteral",
  "CmdForEachInWithRemoveCurrent",
  "CmdStepVar<<CmdThisPropertyDecrement,PropertyInfo,cmd_this_property_decrement>>",
  "CmdThisPropertyDecrement",
  "Range<<Int32>>",
  "RangeGE<<Int32>>",
  "CmdCmpRelative<<CmdCmpLE,<=,CmdCmpNE,1,cmd_cmp_le>>",
  "CoerceReader<<MethodGroup>>",
  "CmdAccessIndex",
  "CmdUnderlyingCall",
  "CmdWideningCast",
  "Array<<StackTraceInfo>>",
  "SignalHandlerManager",
  "CmdLazyAnd",
  "ListOperations<<StackTraceInfo,ArrayList<<StackTraceInfo>>>>",
  "CmdLocalVarDeclaration",
  "CmdLazyOr",
  "CmdAssignZeroValue",
  "CmdMathOp<<CmdSub,\"-\",-=,cmd_sub>>",
  "CmdSub",
  "Stopwatch",
  "LiteralLogical",
  "HashTableMappingReader<<Object,Int32>>",
  "RangeIteratorAscending<<Int32>>",
  "Enum<<Qualifiers>>",
  "DelegateMaker",
  "Mapping<<Int32,Int32>>",
  "CmdMul",
  "ArrayReader<<Mapping<<Object,Object>>>>",
  "ArrayReader<<HashTable<<String,LocalVarInfo>>>>",
  "CmdDiv",
  "ArrayReader<<HashTableBin<<Int32,Int32>>>>",
  "Reader<<CmdCatch>>",
  "ArrayReader<<CmdCatch>>",
  "ArrayReverseReader<<PropertyInfo>>",
  "ArrayList<<StructureType>>",
  "CmdCmpLE",
  "HasDefaultInit",
  "CmdNegate",
  "CmdOr",
  "SpecializedComparator_2189",
  "Mapping<<Object,Object>>",
  "RadiansManager",
  "CmdOpenScope",
  "SignalDataArg",
  "ListOf<<MethodInfo>>",
  "CmdRangeGE",
  "CmdModifyAndAssign<<CmdLocalVarModAndAssign,MethodVarInfo,cmd_local_var_mod_and_assign>>",
  "CmdLocalVarModAndAssign",
  "CmdCmpLT",
  "ArrayReverseReader<<Char>>",
  "FileReader",
  "CmdRightShifted",
  "CallStackLimitReached",
  "DivideByZeroError",
  "HashTableValueReader<<Object,Int32>>",
  "ArrayReader<<HashTableBin<<Int32,Object>>>>",
  "CmdPropertyRead",
  "LineReader",
  "Mapping<<String,Int32>>",
  "CoerceReader<<TypeInfo>>",
  "Mapping<<String,MethodGroup>>",
  "CmdRangeGT",
  "ArrayList<<ControlStructureInfo>>",
  "CmdCatch",
  "ArrayReader<<CategoryInfo>>",
  "ObjectManager",
  "ControlStructureInfo",
  "StringIDAccess",
  "ArrayList<<StackTraceInfo>>",
  "ArrayList<<Mapping<<Object,Object>>>>",
  "HashTableBin<<Object,Object>>",
  "CmdLogicalNot",
  "CmdLogicalXor",
  "ArrayReader<<SlagError>>",
  "SlagParser",
  "CmdFormattedString",
  "CoerceReader<<Int32>>",
  "CompareFn<<MethodInfo,a<b>>",
  "Mapping<<String,MethodInfo>>",
  "CoerceReader<<Cmd>>",
  "Mapping<<String,LocalVarInfo>>",
  "ConcurrentModificationError",
  "CmdThisPropertyAddAndAssign",
  "CmdCmpIsNull",
  "HashTableBin<<Object,Int32>>",
  "InvalidOperandError",
  "CmdForEachIn",
  "SlagParserManager",
  "InlineClassPropertyDeclaration",
  "HashTableMappingReader<<Int32,Object>>",
  "ArrayReader<<StackTraceInfo>>",
  "Mapping<<String,PropertyInfo>>",
  "Enum<<StructureType>>",
  "ParsePosManager",
  "Errors",
  "CmdImplicitListLiteral",
  "init",
  "hash_code",
  "create_duplicate",
  "to_String",
  "op==",
  "op<>",
  "type_name",
  "init_object",
  "object",
  "weak_reference",
  "line",
  "column",
  "count",
  "modification_count",
  "last",
  "index_of",
  "last_index_of",
  "get",
  "consolidate",
  "op+",
  "substring",
  "reversed",
  "begins_with",
  "ends_with",
  "replace",
  "rightmost",
  "excluding_rightmost",
  "before_first",
  "after_last",
  "after_first",
  "from_first",
  "before_last",
  "to_uppercase",
  "to_lowercase",
  "split",
  "trim",
  "word_wrap",
  "to_utf8",
  "to_Array",
  "x_compatible",
  "type",
  "file_index",
  "pos",
  "content",
  "t",
  "is_statement_list",
  "error",
  "finalize_calls",
  "finalize_structure_info",
  "group_dynamic_methods",
  "resolve",
  "optimize",
  "to_inline",
  "no_side_effects",
  "write_etc",
  "to_cpp",
  "statement_to_cpp",
  "to_cs",
  "statement_to_cs",
  "to_java",
  "statement_to_java",
  "lhs",
  "rhs",
  "copy_from",
  "clear",
  "ensure_count",
  "data",
  "add",
  "create_reader",
  "bins",
  "num_entries",
  "average_bin_size",
  "max_entries",
  "max_bins",
  "hash_mask",
  "set",
  "find",
  "contains",
  "remove",
  "get_bin",
  "expand_table",
  "values",
  "dummy_int64_array",
  "fatal_error_called",
  "exit_program",
  "stack_trace",
  "os",
  "raw_exe_filepath",
  "exe_filepath",
  "format",
  "subset",
  "from",
  "reverse_order",
  "statements",
  "trim_to_count",
  "default_next_flag",
  "flags",
  "ordinal",
  "name",
  "remove_last",
  "remove_value",
  "swap",
  "qualifiers",
  "base_name",
  "doc_comment",
  "substitution_tokens",
  "substitution_types",
  "placeholder_types",
  "augments",
  "base_types",
  "flat_base_types",
  "methods",
  "properties",
  "singletons",
  "categories",
  "next_enumerate_value",
  "properties_by_name",
  "methods_by_name",
  "methods_by_signature",
  "get_methods",
  "set_methods",
  "type_mappings",
  "organized",
  "finding_base_types",
  "runtime_check",
  "mapped",
  "prepped",
  "visited",
  "resolved",
  "collected",
  "properties_collected",
  "methods_collected",
  "sizes_and_offsets_calculated",
  "is_extended",
  "dispatch_table",
  "index",
  "element_type",
  "incorporating_classes",
  "x_name",
  "singleton_index",
  "data_size",
  "stack_size",
  "is_valid_type",
  "is_logical",
  "is_numerical",
  "is_real",
  "is_integer",
  "display",
  "generic_type",
  "base_class",
  "discover_runtime_types",
  "organize",
  "instantiate_templates",
  "incorporate_specialized_augment",
  "collect_flat_base_types",
  "check_compound_dependencies",
  "collect_singletons",
  "prep",
  "collect_properties",
  "inherit_aspect_properties",
  "collect_property",
  "store_property_init",
  "collect_methods",
  "organize_method",
  "collect_underlying_methods",
  "collect_overlaying_methods",
  "collect_method",
  "find_method",
  "must_find_method",
  "instance_of",
  "find_property",
  "manager_name",
  "manager_class",
  "reader_type",
  "readable_type",
  "find_reader_element_type",
  "find_readable_element_type",
  "is_lower_precision_than",
  "is_compatible_with",
  "calculate_sizes_and_offsets",
  "wiki_name",
  "help_name",
  "rename_lists",
  "write_slagdoc",
  "write_help",
  "build_slagdoc",
  "build_help",
  "anchor_name",
  "wiki_anchor",
  "wiki_signature",
  "help_signature",
  "format_doc_comment",
  "format_help_comment",
  "signature",
  "method_hash",
  "mark_called",
  "type_context",
  "parameters",
  "return_type",
  "body",
  "original_body",
  "full_signature",
  "underlying_m",
  "prior_m",
  "group",
  "local_vars",
  "resolve_if_class_resolved",
  "called",
  "min_params",
  "num_catches",
  "overrides",
  "param_ref_count",
  "param_data_size",
  "local_ref_count",
  "local_data_size",
  "supports_inlining",
  "context_read_count",
  "inlining_lock",
  "is_aspect_method",
  "base_return_type",
  "resolve_overrides",
  "resolve_if_ancestor_resolved",
  "calculate_local_var_offsets",
  "offset",
  "method_context",
  "read_count",
  "is_catch_var",
  "id",
  "referenced",
  "remap_id",
  "var_info",
  "control",
  "collection",
  "counter",
  "last_exclusive",
  "original_modification_count",
  "to_List",
  "has_another",
  "remaining",
  "read",
  "method_info",
  "args",
  "of_type",
  "write",
  "flush",
  "close",
  "clean_up",
  "print",
  "println",
  "type_or_id",
  "operand",
  "member",
  "join",
  "eof",
  "eol",
  "defined_value",
  "comment",
  "identifier",
  "placeholder_id",
  "literal_string",
  "literal_int",
  "literal_hex_int",
  "literal_char",
  "literal_real",
  "literal_logical",
  "literal_null",
  "symbol_open_template",
  "symbol_close_template",
  "symbol_dimension",
  "symbol_defined",
  "symbol_deferred",
  "symbol_singleton",
  "symbol_runtime",
  "symbol_class",
  "symbol_aspect",
  "symbol_enum",
  "symbol_augment",
  "symbol_compound",
  "symbol_with",
  "symbol_endclass",
  "symbol_endaspect",
  "symbol_endenum",
  "symbol_endaugment",
  "symbol_endwith",
  "symbol_methods",
  "symbol_properties",
  "symbol_class_methods",
  "symbol_class_properties",
  "symbol_categories",
  "symbol_enumerate",
  "symbol_singletons",
  "symbol_open_bracket",
  "symbol_close_bracket",
  "symbol_underlying",
  "symbol_overlaying",
  "symbol_public",
  "symbol_private",
  "symbol_readonly",
  "symbol_requisite",
  "symbol_propagated",
  "symbol_abstract",
  "symbol_generic",
  "symbol_native",
  "symbol_method",
  "symbol_local",
  "symbol_scope",
  "symbol_if",
  "symbol_elseif",
  "symbol_else",
  "symbol_endif",
  "symbol_which",
  "symbol_whichis",
  "symbol_case",
  "symbol_casenext",
  "symbol_others",
  "symbol_endwhich",
  "symbol_endwhichis",
  "symbol_contingent",
  "symbol_satisfied",
  "symbol_unsatisfied",
  "symbol_endcontingent",
  "symbol_necessary",
  "symbol_sufficient",
  "symbol_block",
  "symbol_endblock",
  "symbol_try",
  "symbol_catch",
  "symbol_endtry",
  "symbol_throw",
  "symbol_loop",
  "symbol_endloop",
  "symbol_while",
  "symbol_endwhile",
  "symbol_foreach",
  "symbol_in",
  "symbol_of",
  "symbol_endforeach",
  "symbol_escapeif",
  "symbol_escapewhich",
  "symbol_escapewhichis",
  "symbol_escapecontingent",
  "symbol_escapeblock",
  "symbol_escapetry",
  "symbol_escapeloop",
  "symbol_escapewhile",
  "symbol_escapeforeach",
  "symbol_nextiteration",
  "symbol_removecurrent",
  "symbol_increment",
  "symbol_decrement",
  "symbol_assign",
  "symbol_bitwise_xor_with_assign",
  "symbol_bitwise_or_with_assign",
  "symbol_bitwise_and_with_assign",
  "symbol_add_with_assign",
  "symbol_subtract_with_assign",
  "symbol_multiply_with_assign",
  "symbol_divide_with_assign",
  "symbol_mod_with_assign",
  "symbol_power_with_assign",
  "symbol_member_with_assign",
  "symbol_insert_underlying",
  "symbol_duplicate",
  "symbol_breakpoint",
  "symbol_noaction",
  "symbol_return",
  "symbol_upto",
  "symbol_uptolessthan",
  "symbol_downto",
  "symbol_downtogreaterthan",
  "symbol_step",
  "symbol_logical_xor",
  "symbol_logical_or",
  "symbol_logical_and",
  "symbol_instanceof",
  "symbol_notinstanceof",
  "symbol_as",
  "symbol_coerce_as",
  "symbol_is",
  "symbol_isnot",
  "symbol_compare",
  "symbol_eq",
  "symbol_ne",
  "symbol_le",
  "symbol_ge",
  "symbol_lt",
  "symbol_gt",
  "symbol_bitwise_xor",
  "symbol_bitwise_or",
  "symbol_ampersand",
  "symbol_plus",
  "symbol_minus",
  "symbol_times",
  "symbol_divide",
  "symbol_mod",
  "symbol_power",
  "symbol_bitwise_not",
  "symbol_logical_not",
  "symbol_logicalize",
  "symbol_comma",
  "symbol_colon",
  "symbol_semicolon",
  "symbol_member_access",
  "symbol_open_paren",
  "symbol_close_paren",
  "symbol_open_brace",
  "symbol_close_brace",
  "symbol_close_comment",
  "symbol_framework",
  "symbol_endframework",
  "symbol_useframework",
  "first_type_def",
  "last_type_def",
  "first_non_statement_start_symbol",
  "last_non_statement_start_symbol",
  "filenames",
  "filename_list",
  "as_type",
  "entries",
  "available",
  "prep_next",
  "e",
  "next_unique_Int32",
  "floor",
  "fractional_part",
  "max",
  "is_NaN",
  "unique_Int32",
  "by_ordinal",
  "by_name",
  "cmd_set_filename_and_line",
  "cmd_set_line",
  "cmd_inc_line",
  "cmd_structure_id",
  "cmd_return_value",
  "cmd_return_nil",
  "cmd_block",
  "cmd_trycatch",
  "cmd_throw",
  "cmd_if",
  "cmd_contingent",
  "cmd_necessary",
  "cmd_sufficient",
  "cmd_while",
  "cmd_loop",
  "cmd_escape",
  "cmd_next_iteration",
  "cmd_breakpoint",
  "cmd_literal_string",
  "cmd_literal_int64",
  "cmd_literal_int32",
  "cmd_literal_char",
  "cmd_literal_byte",
  "cmd_literal_real64",
  "cmd_literal_real32",
  "cmd_literal_logical_true",
  "cmd_literal_logical_false",
  "cmd_literal_logical_void",
  "cmd_literal_null",
  "cmd_this_reference",
  "cmd_singleton_reference",
  "cmd_singleton_write",
  "cmd_property_read",
  "cmd_compound_property_read",
  "cmd_local_var_read",
  "cmd_property_write",
  "cmd_local_var_write",
  "cmd_static_call",
  "cmd_dynamic_call",
  "cmd_new_object",
  "cmd_new_compound",
  "cmd_array_create",
  "cmd_array_get",
  "cmd_array_set",
  "cmd_narrowing_cast",
  "cmd_widening_cast",
  "cmd_cast_to_int64",
  "cmd_cast_to_int32",
  "cmd_cast_to_char",
  "cmd_cast_to_byte",
  "cmd_cast_to_real64",
  "cmd_cast_to_real32",
  "cmd_cast_to_logical",
  "cmd_as",
  "cmd_coerce_as",
  "cmd_cmp_instance_of",
  "cmd_cmp_is",
  "cmd_cmp_is_not",
  "cmd_cmp_is_null",
  "cmd_cmp_is_not_null",
  "cmd_cmp_eq",
  "cmd_cmp_ne",
  "cmd_cmp_le",
  "cmd_cmp_lt",
  "cmd_cmp_gt",
  "cmd_cmp_ge",
  "cmd_not",
  "cmd_negate",
  "cmd_add",
  "cmd_sub",
  "cmd_mul",
  "cmd_div",
  "cmd_mod",
  "cmd_exp",
  "cmd_and",
  "cmd_or",
  "cmd_xor",
  "cmd_lazy_and",
  "cmd_lazy_or",
  "cmd_left_shifted",
  "cmd_right_shifted",
  "cmd_right_xshifted",
  "cmd_this_property_add_and_assign",
  "cmd_this_property_sub_and_assign",
  "cmd_this_property_mul_and_assign",
  "cmd_this_property_div_and_assign",
  "cmd_this_property_mod_and_assign",
  "cmd_local_var_add_and_assign",
  "cmd_local_var_sub_and_assign",
  "cmd_local_var_mul_and_assign",
  "cmd_local_var_div_and_assign",
  "cmd_local_var_mod_and_assign",
  "cmd_this_property_increment",
  "cmd_this_property_decrement",
  "cmd_local_var_increment",
  "cmd_local_var_decrement",
  "cmd_array_duplicate",
  "no_action",
  "event_id",
  "next_handler",
  "listener",
  "callback",
  "order",
  "on",
  "handle",
  "delegate_dummy",
  "initial_value",
  "src",
  "catches",
  "value",
  "reverse",
  "ensure_capacity",
  "insert",
  "history",
  "native_history",
  "describe",
  "message",
  "filename",
  "common_path_length",
  "get_context",
  "context",
  "first",
  "increment",
  "resolve_range",
  "index_of_entry",
  "find_entry",
  "add_entry",
  "key",
  "buffer",
  "peek",
  "mappings",
  "strings",
  "map",
  "types",
  "templates",
  "frameworks",
  "used_frameworks",
  "method_groups",
  "main_class",
  "doc_type",
  "help_type",
  "type_list",
  "method_list",
  "method_group_list",
  "identifiers",
  "type_int64",
  "type_int32",
  "type_char",
  "type_byte",
  "type_real64",
  "type_real32",
  "type_logical",
  "type_object",
  "type_null",
  "type_string",
  "type_string_builder",
  "type_exception",
  "type_global",
  "type_generic_enum",
  "type_reader_type",
  "type_readable_type",
  "type_list_type",
  "type_generic_array",
  "type_requires_cleanup",
  "type_manager_creates",
  "type_runtime",
  "type_string_id_access",
  "type_delegate_type",
  "type_var",
  "init_singleton",
  "store",
  "store_framework",
  "get_type_reference",
  "define_type",
  "analyze_parsed_types",
  "collect_type",
  "store_general_augments",
  "make_zero_value",
  "visit_with_implicit_context",
  "require_value",
  "require_reference",
  "bad_value_mesg",
  "require_standard_numerical",
  "require_standard_primitive",
  "require_standard_integer",
  "require_standard_integer_or_logical",
  "require_type",
  "require_int32",
  "require_logical",
  "type_is_standard_numerical",
  "cast_compatible",
  "create_cast",
  "cast_operands_to_standard_numerical",
  "cast_operands_to_standard_value_types",
  "cast_operands_to_standard_integer_or_logical",
  "determine_compatible_op_type",
  "prep_binary_operator",
  "operator_method_check",
  "create_property_get",
  "create_property_set",
  "resolve_call",
  "create_call_signature",
  "other_method_closer_precision",
  "other_method_improves_precision",
  "other_method_improves_references",
  "find_common_element_type",
  "determine_common_data_type",
  "assemble_list",
  "empty_list",
  "inline_check",
  "discard_from",
  "open_spots",
  "find_key",
  "new_value",
  "sign_flag",
  "left_shifted",
  "right_shifted",
  "normalized",
  "internal_to_Int64",
  "is_valid_Int32",
  "is_valid_Int64",
  "to_Int32",
  "to_Int64",
  "is_zero",
  "op-",
  "op*",
  "op/",
  "op^",
  "is_loop",
  "expression",
  "next_value",
  "last_value",
  "step_size",
  "transfer_from",
  "argument",
  "this_method",
  "scopes",
  "define",
  "discard_last",
  "local_var_table",
  "implicit_context",
  "this_type",
  "id_remap_table",
  "referenced_structures",
  "next_iteration_injections",
  "foreach_fixups",
  "out",
  "indent",
  "col",
  "lines",
  "num_files",
  "output_filename",
  "use_longjmp",
  "num_method_lists",
  "do_indent",
  "print_header",
  "assign_cross_compile_names",
  "print_compound_defs",
  "print_type_defs",
  "print_identifiers",
  "print_property_info",
  "print_type_info_defs",
  "print_base_type_index_table",
  "print_method_pointers",
  "print_method_info",
  "print_dispatch_table",
  "print_configuration_function",
  "print_miscellaneous",
  "print_literal_strings",
  "print_function_typedefs",
  "print_method_prototypes",
  "print_method_defs",
  "write_continue_id",
  "write_end_id",
  "native_call",
  "to_digit",
  "is_digit",
  "to_value",
  "Int64_to_String",
  "Real64_to_String",
  "parse_Int64",
  "parse_Int32",
  "parse_Real64",
  "construct",
  "dest",
  "bit_buffer",
  "bit_count",
  "write_Int64",
  "etc_version",
  "platform",
  "cur_filename",
  "cur_line",
  "param_info_table",
  "param_info_list",
  "write_header",
  "write_type_meta",
  "write_param_info",
  "write_method_meta",
  "write_type_def",
  "write_method_body",
  "writeX",
  "write_utf8",
  "string_to_utf8",
  "write_source_position",
  "write_structure_id",
  "old_name",
  "new_name",
  "condition",
  "elseifs",
  "else_cmd",
  "filepath",
  "exists",
  "is_directory",
  "path",
  "absolute_filepath",
  "directory_listing",
  "version",
  "byte_alignment",
  "source_dirs",
  "dest_dir",
  "exe_dir",
  "includes",
  "thorough",
  "quiet",
  "output_name",
  "error_log_name",
  "nostdlib",
  "code_target",
  "force_native",
  "inspect",
  "slagdoc_type",
  "allow_generic",
  "java_package",
  "print_usage",
  "process_args",
  "set_dest_path",
  "compile",
  "find_file",
  "left_rotated",
  "right_rotated",
  "is_power_of_two",
  "min_bits",
  "rounded_up_to_power_of_two",
  "a_before_b",
  "cases",
  "case_others",
  "use_is_comparison",
  "handled_foreach_fixup",
  "relative",
  "absolute",
  "recursive",
  "ignore_hidden",
  "path_separator",
  "directory_separator",
  "constructor",
  "default_comparator",
  "sort",
  "discard",
  "consume",
  "spaces_per_tab",
  "current_mark",
  "read_line",
  "prep_data",
  "cur_pos",
  "string",
  "native_data",
  "method_name",
  "native_copy",
  "next",
  "text_buffer",
  "allow_defines",
  "exhausted",
  "value_0x80000000",
  "value_0xffffffff",
  "value_signed_64_low",
  "value_signed_64_high",
  "must_consume",
  "consume_ws",
  "scan_number",
  "scan_integer",
  "scan_fraction",
  "scan_id",
  "check_for_keywords",
  "scan_string",
  "scan_alternate_string",
  "scan_literal_char",
  "scan_symbol",
  "check_for_special",
  "scan_single_line_comment",
  "scan_multi_line_comment",
  "scanner",
  "discard_tokens",
  "ifdef_stack",
  "preprocessor_evaluate_literal_expression",
  "evaluate_literal_or",
  "evaluate_literal_and",
  "evaluate_literal_not",
  "evaluate_literal_term",
  "satisfied_body",
  "unsatisfied_body",
  "year",
  "month",
  "day",
  "hour",
  "minute",
  "second",
  "millisecond",
  "consolidation_table",
  "url_encoding_map",
  "create_from",
  "base_path",
  "open_file",
  "fix_array_type",
  "print_globals",
  "print_types",
  "print_constructor",
  "print_prototype",
  "print_method",
  "keywords",
  "defines",
  "reverse_keyword_lookup",
  "add_define",
  "set_up_keywords",
  "add_overrides_to_group",
  "as_Logical",
  "command_line_args",
  "stdin",
  "stdout",
  "set_up_stdio",
  "time_ms",
  "format_string",
  "requisite_kludges",
  "abs",
  "is_odd",
  "x",
  "y",
  "to_type",
  "last_modulo",
  "zero",
  "one",
  "ten",
  "ten_e144",
  "ten_e72",
  "ten_e36",
  "ten_e18",
  "i64_limit",
  "index_expr",
  "value_expr",
  "signal_handlers",
  "pending_signals",
  "native_signals",
  "active_signals",
  "find_signal_id",
  "queue",
  "queue_native",
  "raise",
  "raise_pending",
  "install_default_signal_handlers",
  "has_next",
  "native_read_char",
  "size_expr",
  "prior_filename",
  "prior_pos",
  "default_value",
  "middle",
  "end_type",
  "end_symbol",
  "definition",
  "next_random",
  "initial_seed",
  "rewind",
  "advance_random",
  "print_helper_functions",
  "print_runtime_helpers",
  "open",
  "append",
  "exclusive",
  "pending_deactivate",
  "short_circuit_id",
  "start_ms",
  "stop_ms",
  "elapsed_ms",
  "qual_class",
  "qual_aspect",
  "qual_primitive",
  "qual_compound",
  "qual_singleton",
  "qual_managed",
  "qual_deferred",
  "qual_underlying",
  "qual_overlaying",
  "qual_requisite",
  "qual_limited",
  "qual_native",
  "qual_abstract",
  "qual_automatic",
  "qual_propagated",
  "qual_public",
  "qual_private",
  "qual_readonly",
  "qual_class_scope",
  "qual_contains_throw",
  "qual_empty_body",
  "qual_augment",
  "qual_enum",
  "qual_generic",
  "qual_constant",
  "qual_requires_cleanup",
  "qual_array",
  "qual_reference_array",
  "qual_runtime",
  "qual_access_mask",
  "filter",
  "flag",
  "create",
  "node",
  "label",
  "no_terminators",
  "block_terminators",
  "try_terminators",
  "if_terminators",
  "else_terminators",
  "others_terminators",
  "loop_terminators",
  "loop_while_terminators",
  "while_terminators",
  "foreach_terminators",
  "which_terminators",
  "whichis_terminators",
  "contingent_terminators",
  "satisfied_terminators",
  "unsatisfied_terminators",
  "out_of_place_keywords",
  "shorthand_ops",
  "requisite_all",
  "control_structure_stack",
  "src_paths",
  "pending_files",
  "processed_files",
  "parse_pending",
  "parse_framework",
  "include",
  "include_dir",
  "already_included",
  "next_is_end_cmd",
  "next_elseif_is_not_at_eol",
  "consume_id",
  "must_consume_id",
  "discard_eols",
  "consume_eol",
  "consume_end_cmd",
  "must_consume_eol",
  "must_consume_end_cmd",
  "must_read_identifier",
  "must_read_string",
  "parse_next",
  "parse_directive",
  "parse_data_type",
  "parse_substitution_tokens",
  "parse_list_dimensions",
  "parse_type_qualifiers",
  "parse_property_qualifiers",
  "parse_method_qualifiers",
  "parse_type_def",
  "parse_compound_def",
  "parse_placeholder_types",
  "parse_placeholder_type",
  "parse_doc_comment",
  "parse_param_list",
  "parse_param",
  "parse_member_defs",
  "parse_method",
  "next_is_method",
  "parse_construct",
  "parse_singletons",
  "parse_category_defs",
  "parse_enumerate_defs",
  "parse_properties",
  "parse_property_decl_list",
  "parse_property_decl",
  "parse_opX",
  "parse_multi_line_statements",
  "next_is_statement",
  "check_out_of_place_keywords",
  "parse_single_line_statements",
  "parse_statement",
  "parse_label_def",
  "create_escape_cmd",
  "must_find_structure_id",
  "must_find_iteration_id",
  "must_find_foreach_in_with_named_var",
  "push_structure_info",
  "parse_block",
  "parse_if_statement",
  "parse_which_statement",
  "parse_contingent",
  "parse_try_statement",
  "parse_loop",
  "parse_while_statement",
  "parse_foreach_loop",
  "parse_local_vars",
  "parse_op_range",
  "parse_op_logical_xor",
  "parse_op_logical_or",
  "parse_op_logical_and",
  "parse_op_relational",
  "parse_op_bitwise_xor",
  "parse_op_bitwise_or",
  "parse_op_bitwise_and",
  "parse_op_summation",
  "parse_op_product",
  "parse_op_exponent",
  "parse_op_unary",
  "parse_op_query_valid",
  "parse_op_member",
  "parse_op_term",
  "parse_meta_expression",
  "parse_anonymous_class",
  "parse_arg_list",
  "parse_arg",
  "text",
  "split_around_next_marker",
  "contains_remove_current",
  "convert_to_while",
  "next_unique_id",
  "value_2e63",
  "value_2e64",
  "delegate_types",
  "unique_id",
  "block_stmt",
  "if_stmt",
  "which_stmt",
  "whichis_stmt",
  "contingent_stmt",
  "try_stmt",
  "forEach_stmt",
  "while_stmt",
  "loop_stmt",
  "errors",
  "()",
  "(Object)",
  "(Char,Int32)",
  "(Int32)",
  "(String)",
  "(Char)",
  "(Int32,Int32)",
  "(String,Int32)",
  "(String,String)",
  "(Int32,String,ParsePos,String)",
  "(Token)",
  "(CmdList)",
  "(Token,Cmd,Cmd)",
  "(GenericArray,Int32,Int32,Int32)",
  "(BigInt)",
  "(HashTableBin<<Object,Object>>)",
  "(Int32,Real64)",
  "(Object,Object)",
  "(Mapping<<Object,Object>>)",
  "(GenericHashTable<<Object,Object>>)",
  "(String,MethodInfo)",
  "(Int32,String)",
  "(Readable<<Cmd>>)",
  "(String,String,String)",
  "(Cmd)",
  "(Token,Int32)",
  "(Qualifiers)",
  "(ArrayList<<Token>>)",
  "(TypeInfo,Int32)",
  "(Readable<<TypeInfo>>)",
  "(TypeInfo)",
  "(MethodInfo,Int32)",
  "(Readable<<MethodInfo>>)",
  "(MethodInfo)",
  "(Int32,MethodInfo)",
  "(Readable<<PropertyInfo>>)",
  "(PropertyInfo)",
  "(Readable<<CategoryInfo>>)",
  "(CategoryInfo)",
  "(TypeMapping)",
  "(Token,String,Qualifiers,ArrayList<<ArrayList<<Token>>>>)",
  "(ArrayList<<TypeTemplate>>)",
  "(TypeTemplate,HashTable<<String,Token[]>>)",
  "(PropertyInfo,MethodInfo)",
  "(MethodInfo,Logical)",
  "(String,Logical)",
  "(ParameterInfo)",
  "(LocalVarInfo)",
  "(Token,Qualifiers,TypeInfo,String)",
  "(Token,MethodInfo,TypeInfo,String,Int32)",
  "(Token,Int32,CmdStatementList)",
  "(Token,Int32,LocalVarInfo,Cmd,CmdStatementList)",
  "(Collection<<SlagFile>>,Array<<SlagFile>>,Int32,Int32)",
  "(Cmd,Cmd)",
  "(Cmd,Cmd,Cmd)",
  "(Token,TypeInfo,MethodInfo,CmdList)",
  "(Collection<<ArrayList<<Token>>>>,Array<<ArrayList<<Token>>>>,Int32,Int32)",
  "(Collection<<TypeTemplate>>,Array<<TypeTemplate>>,Int32,Int32)",
  "(Mapping<<Object,Int32>>)",
  "(Token,TypeInfo,CmdList)",
  "(Token,String,CmdList)",
  "(Token,Cmd)",
  "(Token,Cmd,CmdConstruct)",
  "(HashTableBin<<Int32,Int32>>)",
  "(Mapping<<Int32,Int32>>)",
  "(GenericHashTable<<Int32,Int32>>)",
  "(HashTableBin<<Object,Int32>>)",
  "(Object,Int32)",
  "(GenericHashTable<<Object,Int32>>)",
  "(Readable<<String>>)",
  "(Collection<<HashTableBin<<Object,Int32>>>>,Array<<HashTableBin<<Object,Int32>>>>,Int32,Int32)",
  "(Token,TypeInfo)",
  "(Token,Cmd,TypeInfo)",
  "(Collection<<Int32>>,Array<<Int32>>,Int32,Int32)",
  "(Reader<<HashTableBin<<Int32,Object>>>>)",
  "(Real64)",
  "(CMD)",
  "(CMD,String)",
  "(Signal)",
  "(ParamInfo)",
  "(Token,TypeInfo,Qualifiers,TypeInfo,String,Cmd,Int32)",
  "(Token,PropertyInfo,Cmd)",
  "(Reader<<Object>>)",
  "(CmdCatch)",
  "(Token,Int64)",
  "(Array<<Char>>,Logical)",
  "(Readable<<Token>>)",
  "(Array<<Int64>>,Logical)",
  "(Int64)",
  "(Array<<Int64>>)",
  "(Logical)",
  "(Token,String)",
  "(String,ParsePos)",
  "(Token,Cmd,PropertyInfo)",
  "(Token,Cmd,Cmd,Cmd)",
  "(Reader<<HashTableBin<<Int32,Int32>>>>)",
  "(Token,MethodVarInfo)",
  "(TypeTemplate)",
  "(ArrayList<<Token>>,HashTable<<String,Token[]>>)",
  "(Token,MethodVarInfo,Cmd)",
  "(MethodGroup)",
  "(String,Token)",
  "(Token,String,TypeInfo)",
  "(Token,String,ArrayList<<ArrayList<<Token>>>>)",
  "(Cmd,TypeInfo)",
  "(Cmd,String,Token)",
  "(Token,TypeInfo,String)",
  "(Cmd,Token)",
  "(Cmd,TypeInfo,Logical)",
  "(CmdBinary)",
  "(Token,TypeInfo,TypeInfo)",
  "(CmdBinary,String)",
  "(Token,TypeInfo,Cmd,String)",
  "(Token,TypeInfo,Cmd,String,Cmd)",
  "(Token,TypeInfo,Cmd,String,CmdList)",
  "(MethodInfo,CmdList,ArrayList<<MethodInfo>>)",
  "(TypeInfo,TypeInfo)",
  "(Token,ArrayList<<Cmd>>)",
  "(Token,TypeInfo,ArrayList<<Cmd>>,Int32)",
  "(Mapping<<Int32,Object>>)",
  "(Int32,Object)",
  "(Collection<<MethodGroup>>,Array<<MethodGroup>>,Int32,Int32)",
  "(HashTable<<String,LocalVarInfo>>)",
  "(Reader<<HashTableBin<<Object,Object>>>>)",
  "(SlagFile)",
  "(Token,Cmd,MethodInfo,CmdList)",
  "(Collection<<CmdWhichCase>>,Array<<CmdWhichCase>>,Int32,Int32)",
  "(CmdElseIf)",
  "(String,SignalHandler)",
  "(Collection<<HashTableBin<<Object,Object>>>>,Array<<HashTableBin<<Object,Object>>>>,Int32,Int32)",
  "(Collection<<Token>>,Array<<Token>>,Int32,Int32)",
  "(Collection<<Int64>>,Array<<Int64>>,Int32,Int32)",
  "(ArrayList<<ParameterInfo>>)",
  "(StructureType)",
  "(Token,Real64)",
  "(Collection<<Mapping<<Int32,Int32>>>>,Array<<Mapping<<Int32,Int32>>>>,Int32,Int32)",
  "(Token,CmdList)",
  "(Int32,Int32,Int32)",
  "(Readable<<Signal>>)",
  "(List<<Signal>>)",
  "(String,Object)",
  "(Array<<Byte>>,Logical)",
  "(Byte)",
  "(Token,TypeInfo,Cmd)",
  "(Collection<<MethodInfo>>,Array<<MethodInfo>>,Int32,Int32)",
  "(HashTableBin<<Int32,Object>>)",
  "(GenericHashTable<<Int32,Object>>)",
  "(Readable<<Int32>>)",
  "(TypeInfo,MethodInfo,Logical)",
  "(CmdStructure)",
  "(MethodInfo,String,CmdList)",
  "(MethodInfo,String,ArrayList<<String>>)",
  "(Int64,Int32,Int32)",
  "(Real64,Int32,Int32,Int32,Char)",
  "(Collection<<LocalVarInfo>>,Array<<LocalVarInfo>>,Int32,Int32)",
  "(CmdConstruct)",
  "(Token,PropertyInfo)",
  "(Writer<<Char>>)",
  "(Token,Int32,Cmd)",
  "(Token,Int32,Cmd,CmdStatementList)",
  "(ArrayList<<String>>)",
  "(Collection<<PropertyInfo>>,Array<<PropertyInfo>>,Int32,Int32)",
  "(Collection<<ControlStructureInfo>>,Array<<ControlStructureInfo>>,Int32,Int32)",
  "(MethodInfo,MethodInfo)",
  "(CmdWhichCase)",
  "(Token,Int32,Cmd,Logical)",
  "(Token,Byte)",
  "(Token,Logical)",
  "(Collection<<Mapping<<Int32,Object>>>>,Array<<Mapping<<Int32,Object>>>>,Int32,Int32)",
  "(Token,LocalVarInfo,CmdInitialConstructor)",
  "(SignalHandler)",
  "(Collection<<ParameterInfo>>,Array<<ParameterInfo>>,Int32,Int32)",
  "(ArrayList<<MethodInfo>>,Comparator<<MethodInfo>>)",
  "(Reader<<Char>>)",
  "(ArrayList<<Char>>)",
  "(Array<<Char>>)",
  "(Collection<<Cmd>>,Array<<Cmd>>,Int32,Int32)",
  "(Token,String,Int32)",
  "(String,Int32,Int32)",
  "(Collection<<Cmd>>,Array<<Cmd>>)",
  "(Collection<<Cmd>>,Array<<Cmd>>,Int32,Int32,Int32)",
  "(Collection<<ParamInfo>>,Array<<ParamInfo>>,Int32,Int32)",
  "(Reader<<HashTableBin<<Object,Int32>>>>)",
  "(Collection<<Qualifiers>>,Array<<Qualifiers>>,Int32,Int32)",
  "(String,Array<<Char>>,Int32)",
  "(LiteralTerm)",
  "(Array<<Char>>,Int32)",
  "(Token,Real32)",
  "(TypeInfo,MethodInfo)",
  "(String,String,String,CmdList)",
  "(String,String,String,ArrayList<<String>>)",
  "(Collection<<Char>>,Array<<Char>>,Int32,Int32)",
  "(MethodInfo,MethodGroup)",
  "(Token,Cmd,Logical)",
  "(SlagError)",
  "(Exception)",
  "(Int64,Int32)",
  "(Byte,Int32)",
  "(String,Int32,Int32,Char)",
  "(Real64,Int32,Int32,Char)",
  "(Int32,Int32,Int32,Char)",
  "(Object,Int32,Int32,Char)",
  "(Collection<<Mapping<<Object,Int32>>>>,Array<<Mapping<<Object,Int32>>>>,Int32,Int32)",
  "(Collection<<ParameterInfo>>,Array<<ParameterInfo>>)",
  "(Collection<<ParameterInfo>>,Array<<ParameterInfo>>,Int32,Int32,Int32)",
  "(Collection<<CmdElseIf>>,Array<<CmdElseIf>>,Int32,Int32)",
  "(Object,Real64,Real64)",
  "(Token,Cmd,PropertyInfo,Cmd)",
  "(Token,Cmd,Int32)",
  "(Collection<<String>>,Array<<String>>,Int32,Int32)",
  "(Collection<<Signal>>,Array<<Signal>>,Int32,Int32)",
  "(Collection<<ControlStructureInfo>>,Array<<ControlStructureInfo>>)",
  "(Collection<<ControlStructureInfo>>,Array<<ControlStructureInfo>>,Int32,Int32,Int32)",
  "(Token,Char)",
  "(Token,String,String)",
  "(Token,String,Token)",
  "(Token,MethodInfo,TypeInfo,String,Cmd,Int32)",
  "(Token,Qualifiers,String,ArrayList<<String>>,Int32,String)",
  "(Token,Cmd,CmdStatementList)",
  "(Collection<<TypeInfo>>,Array<<TypeInfo>>,Int32,Int32)",
  "(RandomNumberGenerator)",
  "(Token,TypeInfo,ArrayList<<Cmd>>)",
  "(Token,Cmd,CmdList)",
  "(Token,Cmd,Cmd,Int32)",
  "(Token,LocalVarInfo,Cmd)",
  "(Token,LocalVarInfo)",
  "(Qualifiers,String)",
  "(Collection<<Mapping<<Object,Object>>>>,Array<<Mapping<<Object,Object>>>>,Int32,Int32)",
  "(Collection<<HashTable<<String,LocalVarInfo>>>>,Array<<HashTable<<String,LocalVarInfo>>>>,Int32,Int32)",
  "(Collection<<HashTableBin<<Int32,Int32>>>>,Array<<HashTableBin<<Int32,Int32>>>>,Int32,Int32)",
  "(Collection<<CmdCatch>>,Array<<CmdCatch>>,Int32,Int32)",
  "(Collection<<PropertyInfo>>,Array<<PropertyInfo>>)",
  "(Collection<<PropertyInfo>>,Array<<PropertyInfo>>,Int32,Int32,Int32)",
  "(Int32,Int32,Logical,Real64,Real64)",
  "(Collection<<Char>>,Array<<Char>>)",
  "(Collection<<Char>>,Array<<Char>>,Int32,Int32,Int32)",
  "(Array<<Char>>,Int32,Int32)",
  "(Collection<<HashTableBin<<Int32,Object>>>>,Array<<HashTableBin<<Int32,Object>>>>,Int32,Int32)",
  "(ControlStructureInfo)",
  "(Token,LocalVarInfo,CmdStatementList)",
  "(Collection<<CategoryInfo>>,Array<<CategoryInfo>>,Int32,Int32)",
  "(StructureType,CmdStructure,String)",
  "(StackTraceInfo)",
  "(Collection<<SlagError>>,Array<<SlagError>>,Int32,Int32)",
  "(TokenReader)",
  "(Token,Qualifiers,Int32,String)",
  "(TokenReader,TypeInfo,Qualifiers,Int32,String)",
  "(Token,Qualifiers)",
  "(TokenReader,TypeInfo)",
  "(TypeInfo,Int32,String)",
  "(TypeInfo,Logical)",
  "(ArrayList<<Int32>>)",
  "(CmdStatementList,Logical)",
  "(Token,StructureType)",
  "(StructureType,String,Token)",
  "(StructureType,Token)",
  "(CmdStatementList)",
  "(Int32,Int32,String,String,Logical)",
  "(Logical,Int32)",
  "(Reader<<Int32>>)",
  "(Token,Int32,LocalVarInfo,Cmd,CmdStatementList,Logical)",
  "(TypeInfo,String,Cmd)",
  "(Collection<<StackTraceInfo>>,Array<<StackTraceInfo>>,Int32,Int32)",
  "(StructureType,String)"
};


SlagTypeInfo*   sxc_types[752] = {NULL};
int             sxc_types_count = 752;
SlagObject*     sxc_singletons[39] = {NULL};
int             sxc_singletons_count = 39;
SlagMethodInfo  sxc_methods[4191];

SlagTypeInfo type_AspectReaderType(0,514,0,-1,0,sizeof(AspectReaderType),0);
SlagTypeInfo type_AspectReader_of_Qualifiers(1,130,1,-1,1,sizeof(AspectReader_of_Qualifiers),0);
SlagTypeInfo type_ClassObject(2,4609,2,-1,0,sizeof(ClassObject),0);
SlagTypeInfo type_AspectManagerCreates(3,514,3,-1,0,sizeof(AspectManagerCreates),0);
SlagTypeInfo type_ClassWeakReference(4,513,4,-1,2,sizeof(ClassWeakReference),0);
SlagTypeInfo type_ClassWeak_of_SignalListener(5,1,5,-1,1,sizeof(ClassWeak_of_SignalListener),1);
SlagTypeInfo type_AspectListOrdering_of_Int64(6,130,6,-1,0,sizeof(AspectListOrdering_of_Int64),0);
SlagTypeInfo type_AspectReadableType(7,514,7,-1,0,sizeof(AspectReadableType),0);
SlagTypeInfo type_AspectReadable_of_Byte(8,130,8,-1,1,sizeof(AspectReadable_of_Byte),0);
SlagTypeInfo type_SlagInt32(9,516,9,-1,0,sizeof(SlagInt32),0);
SlagTypeInfo type_CompoundParsePos(10,8,10,-1,0,sizeof(CompoundParsePos),0);
SlagTypeInfo type_AspectCollection_of_Char(11,2,11,-1,0,sizeof(AspectCollection_of_Char),0);
SlagTypeInfo type_AspectReadable_of_Char(12,130,12,-1,1,sizeof(AspectReadable_of_Char),0);
SlagTypeInfo type_ClassString(13,513,13,-1,5,sizeof(ClassString),0);
SlagTypeInfo type_ClassToken(14,1,14,-1,1,sizeof(ClassToken),1);
SlagTypeInfo type_ClassCmd(15,1,15,-1,1,sizeof(ClassCmd),1);
SlagTypeInfo type_ClassCmdBinary(16,1,16,-1,2,sizeof(ClassCmdBinary),3);
SlagTypeInfo type_ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted(17,1,17,-1,3,sizeof(ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted),3);
SlagTypeInfo type_ClassCmdLeftShifted(18,1,18,-1,4,sizeof(ClassCmdLeftShifted),3);
SlagTypeInfo type_ClassGenericArray(19,513,19,-1,1,sizeof(ClassGenericArray),0);
SlagTypeInfo type_ClassArray_of_BigInt(20,201326593,20,-1,2,sizeof(ClassArray_of_BigInt),0);
SlagTypeInfo type_AspectListType(21,514,21,-1,0,sizeof(AspectListType),0);
SlagTypeInfo type_AspectCollection_of_BigInt(22,2,22,-1,0,sizeof(AspectCollection_of_BigInt),0);
SlagTypeInfo type_AspectReadable_of_BigInt(23,130,23,-1,1,sizeof(AspectReadable_of_BigInt),0);
SlagTypeInfo type_AspectList_of_BigInt(24,130,24,-1,4,sizeof(AspectList_of_BigInt),0);
SlagTypeInfo type_AspectListOperations_of_BigInt_and_ArrayList_of_BigInt(25,130,25,-1,5,sizeof(AspectListOperations_of_BigInt_and_ArrayList_of_BigInt),0);
SlagTypeInfo type_ClassArrayList_of_BigInt(26,1,26,-1,7,sizeof(ClassArrayList_of_BigInt),1);
SlagTypeInfo type_SlagReal64(27,516,27,-1,0,sizeof(SlagReal64),0);
SlagTypeInfo type_AspectCollection_of_ControlStructureInfo(28,2,28,-1,0,sizeof(AspectCollection_of_ControlStructureInfo),0);
SlagTypeInfo type_ClassArray_of_HashTableBin_of_Object_and_Object(29,201326593,29,-1,2,sizeof(ClassArray_of_HashTableBin_of_Object_and_Object),0);
SlagTypeInfo type_AspectCollection_of_HashTableBin_of_Object_and_Object(30,2,30,-1,0,sizeof(AspectCollection_of_HashTableBin_of_Object_and_Object),0);
SlagTypeInfo type_AspectReadable_of_HashTableBin_of_Object_and_Object(31,130,31,-1,1,sizeof(AspectReadable_of_HashTableBin_of_Object_and_Object),0);
SlagTypeInfo type_AspectList_of_HashTableBin_of_Object_and_Object(32,130,32,-1,4,sizeof(AspectList_of_HashTableBin_of_Object_and_Object),0);
SlagTypeInfo type_AspectListOperations_of_HashTableBin_of_Object_and_Object_and_ArrayList_of_HashTableBin_of_Object_and_Object(33,130,33,-1,5,sizeof(AspectListOperations_of_HashTableBin_of_Object_and_Object_and_ArrayList_of_HashTableBin_of_Object_and_Object),0);
SlagTypeInfo type_ClassArrayList_of_HashTableBin_of_Object_and_Object(34,1,34,-1,7,sizeof(ClassArrayList_of_HashTableBin_of_Object_and_Object),1);
SlagTypeInfo type_ClassGenericHashTable_of_Object_and_Object(35,1,35,-1,1,sizeof(ClassGenericHashTable_of_Object_and_Object),1);
SlagTypeInfo type_AspectReadable_of_MethodInfo__(36,130,36,-1,1,sizeof(AspectReadable_of_MethodInfo__),0);
SlagTypeInfo type_ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object(37,1,37,-1,3,sizeof(ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_MethodInfo__(38,1,38,-1,4,sizeof(ClassHashTable_of_String_and_MethodInfo__),1);
SlagTypeInfo type_ClassMethodTable(39,1,39,-1,5,sizeof(ClassMethodTable),1);
SlagTypeInfo type_ClassArray_of_Int64(40,67108865,40,-1,2,sizeof(ClassArray_of_Int64),0);
SlagTypeInfo type_SlagLogical(41,516,41,-1,0,sizeof(SlagLogical),0);
SlagTypeInfo type_ClassSystem(42,529,42,0,1,sizeof(ClassSystem),1);
SlagTypeInfo type_ClassArray_of_Cmd(43,201326593,43,-1,2,sizeof(ClassArray_of_Cmd),0);
SlagTypeInfo type_AspectCollection_of_Cmd(44,2,44,-1,0,sizeof(AspectCollection_of_Cmd),0);
SlagTypeInfo type_AspectReadable_of_Cmd(45,130,45,-1,1,sizeof(AspectReadable_of_Cmd),0);
SlagTypeInfo type_AspectList_of_Cmd(46,130,46,-1,4,sizeof(AspectList_of_Cmd),0);
SlagTypeInfo type_AspectListOperations_of_Cmd_and_ArrayList_of_Cmd(47,130,47,-1,5,sizeof(AspectListOperations_of_Cmd_and_ArrayList_of_Cmd),0);
SlagTypeInfo type_ClassArrayList_of_Cmd(48,1,48,-1,7,sizeof(ClassArrayList_of_Cmd),1);
SlagTypeInfo type_ClassCmdStatementList(49,1,49,-1,2,sizeof(ClassCmdStatementList),2);
SlagTypeInfo type_AspectBitFlags_of_Qualifiers(50,258,50,-1,0,sizeof(AspectBitFlags_of_Qualifiers),0);
SlagTypeInfo type_AspectEnumCategory_of_Qualifiers(51,130,51,-1,0,sizeof(AspectEnumCategory_of_Qualifiers),1);
SlagTypeInfo type_ClassQualifiers(52,1,52,-1,3,sizeof(ClassQualifiers),1);
SlagTypeInfo type_ClassArray_of_ArrayList_of_Token(53,201326593,53,-1,2,sizeof(ClassArray_of_ArrayList_of_Token),0);
SlagTypeInfo type_AspectCollection_of_ArrayList_of_Token(54,2,54,-1,0,sizeof(AspectCollection_of_ArrayList_of_Token),0);
SlagTypeInfo type_AspectReadable_of_ArrayList_of_Token(55,130,55,-1,1,sizeof(AspectReadable_of_ArrayList_of_Token),0);
SlagTypeInfo type_AspectList_of_ArrayList_of_Token(56,130,56,-1,4,sizeof(AspectList_of_ArrayList_of_Token),0);
SlagTypeInfo type_AspectListOperations_of_ArrayList_of_Token_and_ArrayList_of_ArrayList_of_Token(57,130,57,-1,5,sizeof(AspectListOperations_of_ArrayList_of_Token_and_ArrayList_of_ArrayList_of_Token),0);
SlagTypeInfo type_ClassArrayList_of_ArrayList_of_Token(58,1,58,-1,7,sizeof(ClassArrayList_of_ArrayList_of_Token),1);
SlagTypeInfo type_ClassArray_of_TypeInfo(59,201326593,59,-1,2,sizeof(ClassArray_of_TypeInfo),0);
SlagTypeInfo type_AspectCollection_of_TypeInfo(60,2,60,-1,0,sizeof(AspectCollection_of_TypeInfo),0);
SlagTypeInfo type_AspectReadable_of_TypeInfo(61,130,61,-1,1,sizeof(AspectReadable_of_TypeInfo),0);
SlagTypeInfo type_AspectList_of_TypeInfo(62,130,62,-1,4,sizeof(AspectList_of_TypeInfo),0);
SlagTypeInfo type_AspectListOperations_of_TypeInfo_and_ArrayList_of_TypeInfo(63,130,63,-1,5,sizeof(AspectListOperations_of_TypeInfo_and_ArrayList_of_TypeInfo),0);
SlagTypeInfo type_ClassArrayList_of_TypeInfo(64,1,64,-1,7,sizeof(ClassArrayList_of_TypeInfo),1);
SlagTypeInfo type_ClassArray_of_MethodInfo(65,201326593,65,-1,2,sizeof(ClassArray_of_MethodInfo),0);
SlagTypeInfo type_AspectCollection_of_MethodInfo(66,2,66,-1,0,sizeof(AspectCollection_of_MethodInfo),0);
SlagTypeInfo type_AspectReadable_of_MethodInfo(67,130,67,-1,1,sizeof(AspectReadable_of_MethodInfo),0);
SlagTypeInfo type_AspectList_of_MethodInfo(68,130,68,-1,4,sizeof(AspectList_of_MethodInfo),0);
SlagTypeInfo type_AspectListOperations_of_MethodInfo_and_ArrayList_of_MethodInfo(69,130,69,-1,5,sizeof(AspectListOperations_of_MethodInfo_and_ArrayList_of_MethodInfo),0);
SlagTypeInfo type_ClassArrayList_of_MethodInfo(70,1,70,-1,7,sizeof(ClassArrayList_of_MethodInfo),1);
SlagTypeInfo type_ClassArray_of_PropertyInfo(71,201326593,71,-1,2,sizeof(ClassArray_of_PropertyInfo),0);
SlagTypeInfo type_AspectCollection_of_PropertyInfo(72,2,72,-1,0,sizeof(AspectCollection_of_PropertyInfo),0);
SlagTypeInfo type_AspectReadable_of_PropertyInfo(73,130,73,-1,1,sizeof(AspectReadable_of_PropertyInfo),0);
SlagTypeInfo type_AspectList_of_PropertyInfo(74,130,74,-1,4,sizeof(AspectList_of_PropertyInfo),0);
SlagTypeInfo type_AspectListOperations_of_PropertyInfo_and_ArrayList_of_PropertyInfo(75,130,75,-1,5,sizeof(AspectListOperations_of_PropertyInfo_and_ArrayList_of_PropertyInfo),0);
SlagTypeInfo type_ClassArrayList_of_PropertyInfo(76,1,76,-1,7,sizeof(ClassArrayList_of_PropertyInfo),1);
SlagTypeInfo type_ClassArray_of_CategoryInfo(77,201326593,77,-1,2,sizeof(ClassArray_of_CategoryInfo),0);
SlagTypeInfo type_AspectCollection_of_CategoryInfo(78,2,78,-1,0,sizeof(AspectCollection_of_CategoryInfo),0);
SlagTypeInfo type_AspectReadable_of_CategoryInfo(79,130,79,-1,1,sizeof(AspectReadable_of_CategoryInfo),0);
SlagTypeInfo type_AspectList_of_CategoryInfo(80,130,80,-1,4,sizeof(AspectList_of_CategoryInfo),0);
SlagTypeInfo type_AspectListOperations_of_CategoryInfo_and_ArrayList_of_CategoryInfo(81,130,81,-1,5,sizeof(AspectListOperations_of_CategoryInfo_and_ArrayList_of_CategoryInfo),0);
SlagTypeInfo type_ClassArrayList_of_CategoryInfo(82,1,82,-1,7,sizeof(ClassArrayList_of_CategoryInfo),1);
SlagTypeInfo type_ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object(83,1,83,-1,3,sizeof(ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_PropertyInfo(84,1,84,-1,4,sizeof(ClassHashTable_of_String_and_PropertyInfo),1);
SlagTypeInfo type_ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object(85,1,85,-1,3,sizeof(ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_MethodInfo(86,1,86,-1,4,sizeof(ClassHashTable_of_String_and_MethodInfo),1);
SlagTypeInfo type_ClassArray_of_TypeMapping(87,201326593,87,-1,2,sizeof(ClassArray_of_TypeMapping),0);
SlagTypeInfo type_AspectCollection_of_TypeMapping(88,2,88,-1,0,sizeof(AspectCollection_of_TypeMapping),0);
SlagTypeInfo type_AspectReadable_of_TypeMapping(89,130,89,-1,1,sizeof(AspectReadable_of_TypeMapping),0);
SlagTypeInfo type_AspectList_of_TypeMapping(90,130,90,-1,4,sizeof(AspectList_of_TypeMapping),0);
SlagTypeInfo type_AspectListOperations_of_TypeMapping_and_ArrayList_of_TypeMapping(91,130,91,-1,5,sizeof(AspectListOperations_of_TypeMapping_and_ArrayList_of_TypeMapping),0);
SlagTypeInfo type_ClassArrayList_of_TypeMapping(92,1,92,-1,7,sizeof(ClassArrayList_of_TypeMapping),1);
SlagTypeInfo type_ClassTypeInfo(93,1,93,-1,1,sizeof(ClassTypeInfo),25);
SlagTypeInfo type_ClassArray_of_ParameterInfo(94,201326593,94,-1,2,sizeof(ClassArray_of_ParameterInfo),0);
SlagTypeInfo type_AspectCollection_of_ParameterInfo(95,2,95,-1,0,sizeof(AspectCollection_of_ParameterInfo),0);
SlagTypeInfo type_AspectReadable_of_ParameterInfo(96,130,96,-1,1,sizeof(AspectReadable_of_ParameterInfo),0);
SlagTypeInfo type_AspectList_of_ParameterInfo(97,130,97,-1,4,sizeof(AspectList_of_ParameterInfo),0);
SlagTypeInfo type_AspectListOperations_of_ParameterInfo_and_ArrayList_of_ParameterInfo(98,130,98,-1,5,sizeof(AspectListOperations_of_ParameterInfo_and_ArrayList_of_ParameterInfo),0);
SlagTypeInfo type_ClassArrayList_of_ParameterInfo(99,1,99,-1,7,sizeof(ClassArrayList_of_ParameterInfo),1);
SlagTypeInfo type_AspectReadable_of_String(100,130,100,-1,1,sizeof(AspectReadable_of_String),0);
SlagTypeInfo type_ClassHashTableBase_of_String_and_String_and_Object_and_Object(101,1,101,-1,3,sizeof(ClassHashTableBase_of_String_and_String_and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_String(102,1,102,-1,4,sizeof(ClassHashTable_of_String_and_String),1);
SlagTypeInfo type_AspectSet_of_String(103,130,103,-1,2,sizeof(AspectSet_of_String),0);
SlagTypeInfo type_ClassHashSet_of_String(104,1,104,-1,6,sizeof(ClassHashSet_of_String),1);
SlagTypeInfo type_ClassMethodGroup(105,1,105,-1,1,sizeof(ClassMethodGroup),4);
SlagTypeInfo type_ClassArray_of_LocalVarInfo(106,201326593,106,-1,2,sizeof(ClassArray_of_LocalVarInfo),0);
SlagTypeInfo type_AspectCollection_of_LocalVarInfo(107,2,107,-1,0,sizeof(AspectCollection_of_LocalVarInfo),0);
SlagTypeInfo type_AspectReadable_of_LocalVarInfo(108,130,108,-1,1,sizeof(AspectReadable_of_LocalVarInfo),0);
SlagTypeInfo type_AspectList_of_LocalVarInfo(109,130,109,-1,4,sizeof(AspectList_of_LocalVarInfo),0);
SlagTypeInfo type_AspectListOperations_of_LocalVarInfo_and_ArrayList_of_LocalVarInfo(110,130,110,-1,5,sizeof(AspectListOperations_of_LocalVarInfo_and_ArrayList_of_LocalVarInfo),0);
SlagTypeInfo type_ClassArrayList_of_LocalVarInfo(111,1,111,-1,7,sizeof(ClassArrayList_of_LocalVarInfo),1);
SlagTypeInfo type_ClassMethodInfo(112,1,112,-1,1,sizeof(ClassMethodInfo),17);
SlagTypeInfo type_ClassGenericVarInfo(113,1,113,-1,1,sizeof(ClassGenericVarInfo),4);
SlagTypeInfo type_ClassMethodVarInfo(114,1,114,-1,2,sizeof(ClassMethodVarInfo),5);
SlagTypeInfo type_ClassLocalVarInfo(115,1,115,-1,3,sizeof(ClassLocalVarInfo),5);
SlagTypeInfo type_ClassCmdStructure(116,1,116,-1,2,sizeof(ClassCmdStructure),2);
SlagTypeInfo type_ClassCmdForEach(117,1,117,-1,3,sizeof(ClassCmdForEach),4);
SlagTypeInfo type_AspectCollection_of_String(118,2,118,-1,0,sizeof(AspectCollection_of_String),0);
SlagTypeInfo type_ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp(119,1,119,-1,3,sizeof(ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp),3);
SlagTypeInfo type_ClassQualifiersManager(120,17,120,1,1,sizeof(ClassQualifiersManager),0);
SlagTypeInfo type_AspectReadable_of_KeywordPairing(121,130,121,-1,1,sizeof(AspectReadable_of_KeywordPairing),0);
SlagTypeInfo type_AspectCollection_of_CmdCatch(122,2,122,-1,0,sizeof(AspectCollection_of_CmdCatch),0);
SlagTypeInfo type_AspectReadable_of_CmdCatch(123,130,123,-1,1,sizeof(AspectReadable_of_CmdCatch),0);
SlagTypeInfo type_AspectList_of_CmdCatch(124,130,124,-1,4,sizeof(AspectList_of_CmdCatch),0);
SlagTypeInfo type_AspectListOperations_of_CmdCatch_and_ArrayList_of_CmdCatch(125,130,125,-1,5,sizeof(AspectListOperations_of_CmdCatch_and_ArrayList_of_CmdCatch),0);
SlagTypeInfo type_ClassArray_of_SlagFile(126,201326593,126,-1,2,sizeof(ClassArray_of_SlagFile),0);
SlagTypeInfo type_AspectCollection_of_SlagFile(127,2,127,-1,0,sizeof(AspectCollection_of_SlagFile),0);
SlagTypeInfo type_AspectReader_of_SlagFile(128,130,128,-1,1,sizeof(AspectReader_of_SlagFile),0);
SlagTypeInfo type_ClassArrayReader_of_SlagFile(129,1,129,-1,3,sizeof(ClassArrayReader_of_SlagFile),2);
SlagTypeInfo type_AspectCollection_of_Mapping_of_Int32_and_Object(130,2,130,-1,0,sizeof(AspectCollection_of_Mapping_of_Int32_and_Object),0);
SlagTypeInfo type_AspectReadable_of_Mapping_of_Int32_and_Object(131,130,131,-1,1,sizeof(AspectReadable_of_Mapping_of_Int32_and_Object),0);
SlagTypeInfo type_AspectList_of_Mapping_of_Int32_and_Object(132,130,132,-1,4,sizeof(AspectList_of_Mapping_of_Int32_and_Object),0);
SlagTypeInfo type_ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object(133,1,133,-1,3,sizeof(ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_LocalVarInfo(134,1,134,-1,4,sizeof(ClassHashTable_of_String_and_LocalVarInfo),1);
SlagTypeInfo type_ClassCmdList(135,1,135,-1,8,sizeof(ClassCmdList),1);
SlagTypeInfo type_ClassCmdCall(136,1,136,-1,2,sizeof(ClassCmdCall),3);
SlagTypeInfo type_ClassCmdNewObject(137,1,137,-1,3,sizeof(ClassCmdNewObject),4);
SlagTypeInfo type_AspectReader_of_ArrayList_of_Token(138,130,138,-1,1,sizeof(AspectReader_of_ArrayList_of_Token),0);
SlagTypeInfo type_ClassArrayReader_of_ArrayList_of_Token(139,1,139,-1,3,sizeof(ClassArrayReader_of_ArrayList_of_Token),2);
SlagTypeInfo type_ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and(140,1,140,-1,3,sizeof(ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and),3);
SlagTypeInfo type_ClassCmdAnd(141,1,141,-1,4,sizeof(ClassCmdAnd),3);
SlagTypeInfo type_AspectCollection_of_TypeTemplate(142,2,142,-1,0,sizeof(AspectCollection_of_TypeTemplate),0);
SlagTypeInfo type_AspectReadable_of_TypeTemplate(143,130,143,-1,1,sizeof(AspectReadable_of_TypeTemplate),0);
SlagTypeInfo type_AspectList_of_TypeTemplate(144,130,144,-1,4,sizeof(AspectList_of_TypeTemplate),0);
SlagTypeInfo type_AspectListOperations_of_TypeTemplate_and_ArrayList_of_TypeTemplate(145,130,145,-1,5,sizeof(AspectListOperations_of_TypeTemplate_and_ArrayList_of_TypeTemplate),0);
SlagTypeInfo type_ClassArray_of_TypeTemplate(146,201326593,146,-1,2,sizeof(ClassArray_of_TypeTemplate),0);
SlagTypeInfo type_AspectReader_of_TypeTemplate(147,130,147,-1,1,sizeof(AspectReader_of_TypeTemplate),0);
SlagTypeInfo type_ClassArrayReader_of_TypeTemplate(148,1,148,-1,3,sizeof(ClassArrayReader_of_TypeTemplate),2);
SlagTypeInfo type_AspectCollection_of_Signal(149,2,149,-1,0,sizeof(AspectCollection_of_Signal),0);
SlagTypeInfo type_ClassArray_of_Mapping_of_Object_and_Int32(150,201326593,150,-1,2,sizeof(ClassArray_of_Mapping_of_Object_and_Int32),0);
SlagTypeInfo type_AspectCollection_of_Mapping_of_Object_and_Int32(151,2,151,-1,0,sizeof(AspectCollection_of_Mapping_of_Object_and_Int32),0);
SlagTypeInfo type_AspectReadable_of_Mapping_of_Object_and_Int32(152,130,152,-1,1,sizeof(AspectReadable_of_Mapping_of_Object_and_Int32),0);
SlagTypeInfo type_AspectList_of_Mapping_of_Object_and_Int32(153,130,153,-1,4,sizeof(AspectList_of_Mapping_of_Object_and_Int32),0);
SlagTypeInfo type_AspectListOperations_of_Mapping_of_Object_and_Int32_and_ArrayList_of_Mapping_of_Object_and_Int32(154,130,154,-1,5,sizeof(AspectListOperations_of_Mapping_of_Object_and_Int32_and_ArrayList_of_Mapping_of_Object_and_Int32),0);
SlagTypeInfo type_ClassArrayList_of_Mapping_of_Object_and_Int32(155,1,155,-1,7,sizeof(ClassArrayList_of_Mapping_of_Object_and_Int32),1);
SlagTypeInfo type_AspectWriter_of_Char(156,130,156,-1,0,sizeof(AspectWriter_of_Char),0);
SlagTypeInfo type_ClassTextWriter(157,1,157,-1,2,sizeof(ClassTextWriter),0);
SlagTypeInfo type_ClassStdOutWriter(158,513,158,-1,3,sizeof(ClassStdOutWriter),0);
SlagTypeInfo type_ClassCmdConstruct(159,1,159,-1,2,sizeof(ClassCmdConstruct),3);
SlagTypeInfo type_ClassCmdUnary(160,1,160,-1,2,sizeof(ClassCmdUnary),2);
SlagTypeInfo type_ClassCmdMemberAccess(161,1,161,-1,3,sizeof(ClassCmdMemberAccess),3);
SlagTypeInfo type_ClassArray_of_HashTableBin_of_Int32_and_Int32(162,201326593,162,-1,2,sizeof(ClassArray_of_HashTableBin_of_Int32_and_Int32),0);
SlagTypeInfo type_AspectCollection_of_HashTableBin_of_Int32_and_Int32(163,2,163,-1,0,sizeof(AspectCollection_of_HashTableBin_of_Int32_and_Int32),0);
SlagTypeInfo type_AspectReadable_of_HashTableBin_of_Int32_and_Int32(164,130,164,-1,1,sizeof(AspectReadable_of_HashTableBin_of_Int32_and_Int32),0);
SlagTypeInfo type_AspectList_of_HashTableBin_of_Int32_and_Int32(165,130,165,-1,4,sizeof(AspectList_of_HashTableBin_of_Int32_and_Int32),0);
SlagTypeInfo type_AspectListOperations_of_HashTableBin_of_Int32_and_Int32_and_ArrayList_of_HashTableBin_of_Int32_and_Int32(166,130,166,-1,5,sizeof(AspectListOperations_of_HashTableBin_of_Int32_and_Int32_and_ArrayList_of_HashTableBin_of_Int32_and_Int32),0);
SlagTypeInfo type_ClassArrayList_of_HashTableBin_of_Int32_and_Int32(167,1,167,-1,7,sizeof(ClassArrayList_of_HashTableBin_of_Int32_and_Int32),1);
SlagTypeInfo type_ClassGenericHashTable_of_Int32_and_Int32(168,1,168,-1,1,sizeof(ClassGenericHashTable_of_Int32_and_Int32),1);
SlagTypeInfo type_AspectReadable_of_Int32(169,130,169,-1,1,sizeof(AspectReadable_of_Int32),0);
SlagTypeInfo type_ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32(170,1,170,-1,3,sizeof(ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32),1);
SlagTypeInfo type_ClassArray_of_HashTableBin_of_Object_and_Int32(171,201326593,171,-1,2,sizeof(ClassArray_of_HashTableBin_of_Object_and_Int32),0);
SlagTypeInfo type_AspectCollection_of_HashTableBin_of_Object_and_Int32(172,2,172,-1,0,sizeof(AspectCollection_of_HashTableBin_of_Object_and_Int32),0);
SlagTypeInfo type_AspectReadable_of_HashTableBin_of_Object_and_Int32(173,130,173,-1,1,sizeof(AspectReadable_of_HashTableBin_of_Object_and_Int32),0);
SlagTypeInfo type_AspectList_of_HashTableBin_of_Object_and_Int32(174,130,174,-1,4,sizeof(AspectList_of_HashTableBin_of_Object_and_Int32),0);
SlagTypeInfo type_AspectListOperations_of_HashTableBin_of_Object_and_Int32_and_ArrayList_of_HashTableBin_of_Object_and_Int32(175,130,175,-1,5,sizeof(AspectListOperations_of_HashTableBin_of_Object_and_Int32_and_ArrayList_of_HashTableBin_of_Object_and_Int32),0);
SlagTypeInfo type_ClassArrayList_of_HashTableBin_of_Object_and_Int32(176,1,176,-1,7,sizeof(ClassArrayList_of_HashTableBin_of_Object_and_Int32),1);
SlagTypeInfo type_ClassGenericHashTable_of_Object_and_Int32(177,1,177,-1,1,sizeof(ClassGenericHashTable_of_Object_and_Int32),1);
SlagTypeInfo type_ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32(178,1,178,-1,3,sizeof(ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32),1);
SlagTypeInfo type_ClassHashTable_of_String_and_Int32(179,1,179,-1,4,sizeof(ClassHashTable_of_String_and_Int32),1);
SlagTypeInfo type_ClassArray_of_String(180,201326593,180,-1,2,sizeof(ClassArray_of_String),0);
SlagTypeInfo type_AspectListAspect3048(181,2097410,181,-1,0,sizeof(AspectListAspect3048),0);
SlagTypeInfo type_AspectList_of_String(182,130,182,-1,5,sizeof(AspectList_of_String),0);
SlagTypeInfo type_AspectListOperations_of_String_and_ArrayList_of_String(183,130,183,-1,6,sizeof(AspectListOperations_of_String_and_ArrayList_of_String),0);
SlagTypeInfo type_ClassArrayList_of_String(184,1,184,-1,8,sizeof(ClassArrayList_of_String),1);
SlagTypeInfo type_ClassTokenManager(185,17,185,2,1,sizeof(ClassTokenManager),2);
SlagTypeInfo type_AspectReader_of_HashTableBin_of_Object_and_Int32(186,130,186,-1,1,sizeof(AspectReader_of_HashTableBin_of_Object_and_Int32),0);
SlagTypeInfo type_ClassArrayReader_of_HashTableBin_of_Object_and_Int32(187,1,187,-1,3,sizeof(ClassArrayReader_of_HashTableBin_of_Object_and_Int32),2);
SlagTypeInfo type_ClassCmdTerm(188,1,188,-1,2,sizeof(ClassCmdTerm),1);
SlagTypeInfo type_ClassCmdThisReference(189,1,189,-1,3,sizeof(ClassCmdThisReference),2);
SlagTypeInfo type_ClassCmdCoerceAs(190,1,190,-1,3,sizeof(ClassCmdCoerceAs),3);
SlagTypeInfo type_ClassArray_of_Int32(191,67108865,191,-1,2,sizeof(ClassArray_of_Int32),0);
SlagTypeInfo type_AspectCollection_of_Int32(192,2,192,-1,0,sizeof(AspectCollection_of_Int32),0);
SlagTypeInfo type_AspectReader_of_Int32(193,130,193,-1,1,sizeof(AspectReader_of_Int32),0);
SlagTypeInfo type_ClassArrayReader_of_Int32(194,1,194,-1,3,sizeof(ClassArrayReader_of_Int32),2);
SlagTypeInfo type_ClassArray_of_HashTableBin_of_Int32_and_Object(195,201326593,195,-1,2,sizeof(ClassArray_of_HashTableBin_of_Int32_and_Object),0);
SlagTypeInfo type_AspectReader_of_ParameterInfo(196,130,196,-1,1,sizeof(AspectReader_of_ParameterInfo),0);
SlagTypeInfo type_ClassParseReaderMarkManager(197,17,197,3,1,sizeof(ClassParseReaderMarkManager),0);
SlagTypeInfo type_AspectReader_of_HashTableBin_of_Int32_and_Object(198,130,198,-1,1,sizeof(AspectReader_of_HashTableBin_of_Int32_and_Object),0);
SlagTypeInfo type_AspectReader_of_Mapping_of_Int32_and_Object(199,130,199,-1,1,sizeof(AspectReader_of_Mapping_of_Int32_and_Object),0);
SlagTypeInfo type_AspectReader_of_Object(200,130,200,-1,1,sizeof(AspectReader_of_Object),0);
SlagTypeInfo type_ClassHashTableValueReader_of_Int32_and_Object(201,1,201,-1,3,sizeof(ClassHashTableValueReader_of_Int32_and_Object),2);
SlagTypeInfo type_ClassMath(202,17,202,4,1,sizeof(ClassMath),0);
SlagTypeInfo type_AspectCollection_of_StackTraceInfo(203,2,203,-1,0,sizeof(AspectCollection_of_StackTraceInfo),0);
SlagTypeInfo type_AspectCollection_of_HashTableBin_of_Int32_and_Object(204,2,204,-1,0,sizeof(AspectCollection_of_HashTableBin_of_Int32_and_Object),0);
SlagTypeInfo type_AspectReadable_of_HashTableBin_of_Int32_and_Object(205,130,205,-1,1,sizeof(AspectReadable_of_HashTableBin_of_Int32_and_Object),0);
SlagTypeInfo type_AspectList_of_HashTableBin_of_Int32_and_Object(206,130,206,-1,4,sizeof(AspectList_of_HashTableBin_of_Int32_and_Object),0);
SlagTypeInfo type_AspectListOperations_of_HashTableBin_of_Int32_and_Object_and_ArrayList_of_HashTableBin_of_Int32_and_Object(207,130,207,-1,5,sizeof(AspectListOperations_of_HashTableBin_of_Int32_and_Object_and_ArrayList_of_HashTableBin_of_Int32_and_Object),0);
SlagTypeInfo type_ClassArray_of_CMD(208,201326593,208,-1,2,sizeof(ClassArray_of_CMD),0);
SlagTypeInfo type_AspectCollection_of_CMD(209,2,209,-1,0,sizeof(AspectCollection_of_CMD),0);
SlagTypeInfo type_AspectReadable_of_CMD(210,130,210,-1,1,sizeof(AspectReadable_of_CMD),0);
SlagTypeInfo type_AspectList_of_CMD(211,130,211,-1,4,sizeof(AspectList_of_CMD),0);
SlagTypeInfo type_AspectListOperations_of_CMD_and_ArrayList_of_CMD(212,130,212,-1,5,sizeof(AspectListOperations_of_CMD_and_ArrayList_of_CMD),0);
SlagTypeInfo type_ClassArrayList_of_CMD(213,1,213,-1,7,sizeof(ClassArrayList_of_CMD),1);
SlagTypeInfo type_ClassHashTableBase_of_String_and_CMD_and_Object_and_Object(214,1,214,-1,3,sizeof(ClassHashTableBase_of_String_and_CMD_and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_CMD(215,1,215,-1,4,sizeof(ClassHashTable_of_String_and_CMD),1);
SlagTypeInfo type_AspectEnumCategory_of_CMD(216,130,216,-1,0,sizeof(AspectEnumCategory_of_CMD),1);
SlagTypeInfo type_ClassCMD(217,1,217,-1,2,sizeof(ClassCMD),1);
SlagTypeInfo type_AspectGenericEnum(218,2,218,-1,0,sizeof(AspectGenericEnum),0);
SlagTypeInfo type_ClassEnum_of_CMD(219,17,219,5,2,sizeof(ClassEnum_of_CMD),99);
SlagTypeInfo type_ClassCmdManager(220,17,220,6,1,sizeof(ClassCmdManager),1);
SlagTypeInfo type_AspectReader_of_StackTraceInfo(221,130,221,-1,1,sizeof(AspectReader_of_StackTraceInfo),0);
SlagTypeInfo type_ClassDelegateType(222,513,222,-1,1,sizeof(ClassDelegateType),0);
SlagTypeInfo type_ClassDelegate____(223,1,223,-1,2,sizeof(ClassDelegate____),0);
SlagTypeInfo type_ClassSignalHandler(224,1,224,-1,1,sizeof(ClassSignalHandler),4);
SlagTypeInfo type_ClassSpecializedSignalHandler_460(225,1,225,-1,2,sizeof(ClassSpecializedSignalHandler_460),4);
SlagTypeInfo type_ClassArray_of_ParamInfo(226,201326593,226,-1,2,sizeof(ClassArray_of_ParamInfo),0);
SlagTypeInfo type_AspectCollection_of_ParamInfo(227,2,227,-1,0,sizeof(AspectCollection_of_ParamInfo),0);
SlagTypeInfo type_AspectReadable_of_ParamInfo(228,130,228,-1,1,sizeof(AspectReadable_of_ParamInfo),0);
SlagTypeInfo type_AspectList_of_ParamInfo(229,130,229,-1,4,sizeof(AspectList_of_ParamInfo),0);
SlagTypeInfo type_AspectListOperations_of_ParamInfo_and_ArrayList_of_ParamInfo(230,130,230,-1,5,sizeof(AspectListOperations_of_ParamInfo_and_ArrayList_of_ParamInfo),0);
SlagTypeInfo type_ClassArrayList_of_ParamInfo(231,1,231,-1,7,sizeof(ClassArrayList_of_ParamInfo),1);
SlagTypeInfo type_ClassPropertyInfo(232,1,232,-1,2,sizeof(ClassPropertyInfo),8);
SlagTypeInfo type_ClassCmdStatementWithOperand(233,1,233,-1,2,sizeof(ClassCmdStatementWithOperand),2);
SlagTypeInfo type_ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign(234,1,234,-1,3,sizeof(ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign),3);
SlagTypeInfo type_ClassCmdThisPropertySubAndAssign(235,1,235,-1,4,sizeof(ClassCmdThisPropertySubAndAssign),3);
SlagTypeInfo type_AspectReader_of_PropertyInfo(236,130,236,-1,1,sizeof(AspectReader_of_PropertyInfo),0);
SlagTypeInfo type_ClassCoerceReader_of_PropertyInfo(237,1,237,-1,3,sizeof(ClassCoerceReader_of_PropertyInfo),1);
SlagTypeInfo type_AspectReadable_of_MethodGroup(238,130,238,-1,1,sizeof(AspectReadable_of_MethodGroup),0);
SlagTypeInfo type_ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object(239,1,239,-1,3,sizeof(ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object),1);
SlagTypeInfo type_ClassArray_of_CmdCatch(240,201326593,240,-1,2,sizeof(ClassArray_of_CmdCatch),0);
SlagTypeInfo type_ClassArrayList_of_CmdCatch(241,1,241,-1,7,sizeof(ClassArrayList_of_CmdCatch),1);
SlagTypeInfo type_ClassCmdTry(242,1,242,-1,3,sizeof(ClassCmdTry),3);
SlagTypeInfo type_AspectCollection_of_CmdElseIf(243,2,243,-1,0,sizeof(AspectCollection_of_CmdElseIf),0);
SlagTypeInfo type_SlagInt64(244,516,244,-1,0,sizeof(SlagInt64),0);
SlagTypeInfo type_ClassCmdLiteralPrimitive(245,1,245,-1,3,sizeof(ClassCmdLiteralPrimitive),1);
SlagTypeInfo type_ClassCmdLiteralInt64(246,1,246,-1,4,sizeof(ClassCmdLiteralInt64),1);
SlagTypeInfo type_ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign(247,1,247,-1,3,sizeof(ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign),3);
SlagTypeInfo type_ClassCmdThisPropertyMulAndAssign(248,1,248,-1,4,sizeof(ClassCmdThisPropertyMulAndAssign),3);
SlagTypeInfo type_AspectReadable_of_ControlStructureInfo(249,130,249,-1,1,sizeof(AspectReadable_of_ControlStructureInfo),0);
SlagTypeInfo type_AspectList_of_ControlStructureInfo(250,130,250,-1,4,sizeof(AspectList_of_ControlStructureInfo),0);
SlagTypeInfo type_AspectCollection_of_SlagError(251,2,251,-1,0,sizeof(AspectCollection_of_SlagError),0);
SlagTypeInfo type_AspectReadable_of_SlagError(252,130,252,-1,1,sizeof(AspectReadable_of_SlagError),0);
SlagTypeInfo type_AspectList_of_SlagError(253,130,253,-1,4,sizeof(AspectList_of_SlagError),0);
SlagTypeInfo type_ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add(254,1,254,-1,3,sizeof(ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add),3);
SlagTypeInfo type_ClassArray_of_Char(255,67108865,255,-1,2,sizeof(ClassArray_of_Char),0);
SlagTypeInfo type_AspectListOrdering_of_Char(256,130,256,-1,0,sizeof(AspectListOrdering_of_Char),0);
SlagTypeInfo type_AspectList_of_Char(257,130,257,-1,5,sizeof(AspectList_of_Char),0);
SlagTypeInfo type_AspectListOperations_of_Char_and_ArrayList_of_Char(258,130,258,-1,6,sizeof(AspectListOperations_of_Char_and_ArrayList_of_Char),0);
SlagTypeInfo type_ClassArrayList_of_Char(259,1,259,-1,8,sizeof(ClassArrayList_of_Char),1);
SlagTypeInfo type_AspectReadable_of_CmdElseIf(260,130,260,-1,1,sizeof(AspectReadable_of_CmdElseIf),0);
SlagTypeInfo type_ClassArray_of_Token(261,201326593,261,-1,2,sizeof(ClassArray_of_Token),0);
SlagTypeInfo type_AspectCollection_of_Token(262,2,262,-1,0,sizeof(AspectCollection_of_Token),0);
SlagTypeInfo type_AspectReadable_of_Token(263,130,263,-1,1,sizeof(AspectReadable_of_Token),0);
SlagTypeInfo type_AspectList_of_Token(264,130,264,-1,4,sizeof(AspectList_of_Token),0);
SlagTypeInfo type_AspectListOperations_of_Token_and_ArrayList_of_Token(265,130,265,-1,5,sizeof(AspectListOperations_of_Token_and_ArrayList_of_Token),0);
SlagTypeInfo type_ClassArrayList_of_Token(266,1,266,-1,7,sizeof(ClassArrayList_of_Token),1);
SlagTypeInfo type_ClassCmdStructureControl(267,1,267,-1,2,sizeof(ClassCmdStructureControl),1);
SlagTypeInfo type_ClassCmdCompare(268,1,268,-1,3,sizeof(ClassCmdCompare),3);
SlagTypeInfo type_ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne(269,1,269,-1,4,sizeof(ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne),3);
SlagTypeInfo type_AspectReadable_of_Object(270,130,270,-1,1,sizeof(AspectReadable_of_Object),0);
SlagTypeInfo type_AspectCollection_of_Int64(271,2,271,-1,0,sizeof(AspectCollection_of_Int64),0);
SlagTypeInfo type_AspectReadable_of_Int64(272,130,272,-1,1,sizeof(AspectReadable_of_Int64),0);
SlagTypeInfo type_AspectList_of_Int64(273,130,273,-1,5,sizeof(AspectList_of_Int64),0);
SlagTypeInfo type_AspectListOperations_of_Int64_and_ArrayList_of_Int64(274,130,274,-1,6,sizeof(AspectListOperations_of_Int64_and_ArrayList_of_Int64),0);
SlagTypeInfo type_ClassArrayList_of_Int64(275,1,275,-1,8,sizeof(ClassArrayList_of_Int64),1);
SlagTypeInfo type_ClassStackTrace(276,513,276,-1,1,sizeof(ClassStackTrace),1);
SlagTypeInfo type_ClassException(277,4609,277,-1,1,sizeof(ClassException),2);
SlagTypeInfo type_ClassError(278,1,278,-1,2,sizeof(ClassError),2);
SlagTypeInfo type_ClassSlagError(279,1,279,-1,3,sizeof(ClassSlagError),3);
SlagTypeInfo type_ClassArray_of_Byte(280,67108865,280,-1,2,sizeof(ClassArray_of_Byte),0);
SlagTypeInfo type_AspectSignalListener(281,2,281,-1,0,sizeof(AspectSignalListener),0);
SlagTypeInfo type_ClassCmdLiteralNull(282,1,282,-1,3,sizeof(ClassCmdLiteralNull),1);
SlagTypeInfo type_ClassCmdVarAccess(283,1,283,-1,2,sizeof(ClassCmdVarAccess),1);
SlagTypeInfo type_ClassCmdMemberVarAccess(284,1,284,-1,3,sizeof(ClassCmdMemberVarAccess),3);
SlagTypeInfo type_ClassCmdMemberVarRead(285,1,285,-1,4,sizeof(ClassCmdMemberVarRead),3);
SlagTypeInfo type_AspectCollection_of_HashTable_of_String_and_LocalVarInfo(286,2,286,-1,0,sizeof(AspectCollection_of_HashTable_of_String_and_LocalVarInfo),0);
SlagTypeInfo type_AspectReadable_of_HashTable_of_String_and_LocalVarInfo(287,130,287,-1,1,sizeof(AspectReadable_of_HashTable_of_String_and_LocalVarInfo),0);
SlagTypeInfo type_AspectList_of_HashTable_of_String_and_LocalVarInfo(288,130,288,-1,4,sizeof(AspectList_of_HashTable_of_String_and_LocalVarInfo),0);
SlagTypeInfo type_AspectListOperations_of_HashTable_of_String_and_LocalVarInfo_and_ArrayList_of_HashTable_of_String_and_LocalVarInfo(289,130,289,-1,5,sizeof(AspectListOperations_of_HashTable_of_String_and_LocalVarInfo_and_ArrayList_of_HashTable_of_String_and_LocalVarInfo),0);
SlagTypeInfo type_ClassCmdSingletonReference(290,1,290,-1,3,sizeof(ClassCmdSingletonReference),2);
SlagTypeInfo type_ClassCmdRange(291,1,291,-1,2,sizeof(ClassCmdRange),4);
SlagTypeInfo type_ClassCmdRangeLE(292,1,292,-1,3,sizeof(ClassCmdRangeLE),4);
SlagTypeInfo type_ClassCmdStatement(293,1,293,-1,2,sizeof(ClassCmdStatement),1);
SlagTypeInfo type_ClassArray_of_Mapping_of_Int32_and_Int32(294,201326593,294,-1,2,sizeof(ClassArray_of_Mapping_of_Int32_and_Int32),0);
SlagTypeInfo type_AspectCollection_of_Mapping_of_Int32_and_Int32(295,2,295,-1,0,sizeof(AspectCollection_of_Mapping_of_Int32_and_Int32),0);
SlagTypeInfo type_AspectReadable_of_Mapping_of_Int32_and_Int32(296,130,296,-1,1,sizeof(AspectReadable_of_Mapping_of_Int32_and_Int32),0);
SlagTypeInfo type_AspectList_of_Mapping_of_Int32_and_Int32(297,130,297,-1,4,sizeof(AspectList_of_Mapping_of_Int32_and_Int32),0);
SlagTypeInfo type_AspectListOperations_of_Mapping_of_Int32_and_Int32_and_ArrayList_of_Mapping_of_Int32_and_Int32(298,130,298,-1,5,sizeof(AspectListOperations_of_Mapping_of_Int32_and_Int32_and_ArrayList_of_Mapping_of_Int32_and_Int32),0);
SlagTypeInfo type_ClassArrayList_of_Mapping_of_Int32_and_Int32(299,1,299,-1,7,sizeof(ClassArrayList_of_Mapping_of_Int32_and_Int32),1);
SlagTypeInfo type_ClassHashTableBin_of_Int32_and_Int32(300,1,300,-1,1,sizeof(ClassHashTableBin_of_Int32_and_Int32),1);
SlagTypeInfo type_ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq(301,1,301,-1,4,sizeof(ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq),3);
SlagTypeInfo type_ClassCmdCmpEQ(302,1,302,-1,5,sizeof(ClassCmdCmpEQ),3);
SlagTypeInfo type_AspectCollection_of_ArrayList_of_TypeTemplate(303,2,303,-1,0,sizeof(AspectCollection_of_ArrayList_of_TypeTemplate),0);
SlagTypeInfo type_AspectReader_of_HashTableBin_of_Int32_and_Int32(304,130,304,-1,1,sizeof(AspectReader_of_HashTableBin_of_Int32_and_Int32),0);
SlagTypeInfo type_AspectReader_of_Mapping_of_Int32_and_Int32(305,130,305,-1,1,sizeof(AspectReader_of_Mapping_of_Int32_and_Int32),0);
SlagTypeInfo type_ClassHashTableValueReader_of_Int32_and_Int32(306,1,306,-1,3,sizeof(ClassHashTableValueReader_of_Int32_and_Int32),2);
SlagTypeInfo type_ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment(307,1,307,-1,3,sizeof(ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment),2);
SlagTypeInfo type_ClassCmdLocalVarIncrement(308,1,308,-1,4,sizeof(ClassCmdLocalVarIncrement),2);
SlagTypeInfo type_AspectReader_of_Mapping_of_Object_and_Int32(309,130,309,-1,1,sizeof(AspectReader_of_Mapping_of_Object_and_Int32),0);
SlagTypeInfo type_AspectReadable_of_ArrayList_of_TypeTemplate(310,130,310,-1,1,sizeof(AspectReadable_of_ArrayList_of_TypeTemplate),0);
SlagTypeInfo type_AspectReadable_of_Qualifiers(311,130,311,-1,1,sizeof(AspectReadable_of_Qualifiers),0);
SlagTypeInfo type_ClassArrayList_of_TypeTemplate(312,1,312,-1,7,sizeof(ClassArrayList_of_TypeTemplate),1);
SlagTypeInfo type_ClassMapping_of_String_and_TypeTemplate__(313,1,313,-1,1,sizeof(ClassMapping_of_String_and_TypeTemplate__),2);
SlagTypeInfo type_AspectReader_of_Token(314,130,314,-1,1,sizeof(AspectReader_of_Token),0);
SlagTypeInfo type_AspectReadable_of_Token__(315,130,315,-1,1,sizeof(AspectReadable_of_Token__),0);
SlagTypeInfo type_ClassHashTableBase_of_String_and_Token___and_Object_and_Object(316,1,316,-1,3,sizeof(ClassHashTableBase_of_String_and_Token___and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_Token__(317,1,317,-1,4,sizeof(ClassHashTable_of_String_and_Token__),1);
SlagTypeInfo type_ClassTokenReader(318,1,318,-1,3,sizeof(ClassTokenReader),1);
SlagTypeInfo type_ClassTemplateReader(319,1,319,-1,4,sizeof(ClassTemplateReader),4);
SlagTypeInfo type_ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign(320,1,320,-1,3,sizeof(ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign),3);
SlagTypeInfo type_ClassCmdLocalVarDivAndAssign(321,1,321,-1,4,sizeof(ClassCmdLocalVarDivAndAssign),3);
SlagTypeInfo type_ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object(322,1,322,-1,3,sizeof(ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_TypeInfo(323,1,323,-1,4,sizeof(ClassHashTable_of_String_and_TypeInfo),1);
SlagTypeInfo type_AspectReadable_of_TypeTemplate__(324,130,324,-1,1,sizeof(AspectReadable_of_TypeTemplate__),0);
SlagTypeInfo type_ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object(325,1,325,-1,3,sizeof(ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_TypeTemplate__(326,1,326,-1,4,sizeof(ClassHashTable_of_String_and_TypeTemplate__),1);
SlagTypeInfo type_ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object(327,1,327,-1,3,sizeof(ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_TypeTemplate(328,1,328,-1,4,sizeof(ClassHashTable_of_String_and_TypeTemplate),1);
SlagTypeInfo type_ClassHashTable_of_String_and_MethodGroup(329,1,329,-1,4,sizeof(ClassHashTable_of_String_and_MethodGroup),1);
SlagTypeInfo type_ClassArray_of_MethodGroup(330,201326593,330,-1,2,sizeof(ClassArray_of_MethodGroup),0);
SlagTypeInfo type_AspectCollection_of_MethodGroup(331,2,331,-1,0,sizeof(AspectCollection_of_MethodGroup),0);
SlagTypeInfo type_AspectList_of_MethodGroup(332,130,332,-1,4,sizeof(AspectList_of_MethodGroup),0);
SlagTypeInfo type_AspectListOperations_of_MethodGroup_and_ArrayList_of_MethodGroup(333,130,333,-1,5,sizeof(AspectListOperations_of_MethodGroup_and_ArrayList_of_MethodGroup),0);
SlagTypeInfo type_ClassArrayList_of_MethodGroup(334,1,334,-1,7,sizeof(ClassArrayList_of_MethodGroup),1);
SlagTypeInfo type_ClassStringTable(335,1,335,-1,3,sizeof(ClassStringTable),2);
SlagTypeInfo type_ClassTypeManager(336,17,336,7,1,sizeof(ClassTypeManager),38);
SlagTypeInfo type_ClassArray_of_Object(337,201326593,337,-1,2,sizeof(ClassArray_of_Object),0);
SlagTypeInfo type_ClassSlagAnalyzer(338,17,338,8,1,sizeof(ClassSlagAnalyzer),0);
SlagTypeInfo type_AspectReadable_of_SlagFile(339,130,339,-1,1,sizeof(AspectReadable_of_SlagFile),0);
SlagTypeInfo type_AspectList_of_SlagFile(340,130,340,-1,4,sizeof(AspectList_of_SlagFile),0);
SlagTypeInfo type_AspectListOperations_of_SlagFile_and_ArrayList_of_SlagFile(341,130,341,-1,5,sizeof(AspectListOperations_of_SlagFile_and_ArrayList_of_SlagFile),0);
SlagTypeInfo type_ClassCmdPrimitiveCast(342,1,342,-1,3,sizeof(ClassCmdPrimitiveCast),2);
SlagTypeInfo type_ClassCmdCastToInt64(343,1,343,-1,4,sizeof(ClassCmdCastToInt64),2);
SlagTypeInfo type_ClassCmdRangeLT(344,1,344,-1,3,sizeof(ClassCmdRangeLT),4);
SlagTypeInfo type_ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div(345,1,345,-1,3,sizeof(ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div),3);
SlagTypeInfo type_ClassHashTableMappingReader_of_Int32_and_Int32(346,1,346,-1,3,sizeof(ClassHashTableMappingReader_of_Int32_and_Int32),2);
SlagTypeInfo type_ClassMethodTableManager(348,17,348,9,1,sizeof(ClassMethodTableManager),1);
SlagTypeInfo type_AspectReadable_of_StackTraceInfo(349,130,349,-1,1,sizeof(AspectReadable_of_StackTraceInfo),0);
SlagTypeInfo type_AspectReader_of_TypeTemplate__(350,130,350,-1,1,sizeof(AspectReader_of_TypeTemplate__),0);
SlagTypeInfo type_ClassCoerceReader_of_TypeTemplate__(351,1,351,-1,3,sizeof(ClassCoerceReader_of_TypeTemplate__),1);
SlagTypeInfo type_AspectReadable_of_StructureType(352,130,352,-1,1,sizeof(AspectReadable_of_StructureType),0);
SlagTypeInfo type_ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object(353,1,353,-1,3,sizeof(ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object),1);
SlagTypeInfo type_ClassCmdCloseScope(354,1,354,-1,3,sizeof(ClassCmdCloseScope),1);
SlagTypeInfo type_ClassArray_of_Mapping_of_Int32_and_Object(355,201326593,355,-1,2,sizeof(ClassArray_of_Mapping_of_Int32_and_Object),0);
SlagTypeInfo type_AspectListOperations_of_Mapping_of_Int32_and_Object_and_ArrayList_of_Mapping_of_Int32_and_Object(356,130,356,-1,5,sizeof(AspectListOperations_of_Mapping_of_Int32_and_Object_and_ArrayList_of_Mapping_of_Int32_and_Object),0);
SlagTypeInfo type_ClassArrayList_of_Mapping_of_Int32_and_Object(357,1,357,-1,7,sizeof(ClassArrayList_of_Mapping_of_Int32_and_Object),1);
SlagTypeInfo type_ClassHashTableBin_of_Int32_and_Object(358,1,358,-1,1,sizeof(ClassHashTableBin_of_Int32_and_Object),1);
SlagTypeInfo type_ClassFileError(359,513,359,-1,3,sizeof(ClassFileError),2);
SlagTypeInfo type_ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt(360,1,360,-1,4,sizeof(ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt),3);
SlagTypeInfo type_AspectReader_of_MethodGroup(361,130,361,-1,1,sizeof(AspectReader_of_MethodGroup),0);
SlagTypeInfo type_ClassArrayReader_of_MethodGroup(362,1,362,-1,3,sizeof(ClassArrayReader_of_MethodGroup),2);
SlagTypeInfo type_ClassCmdAssign(363,1,363,-1,3,sizeof(ClassCmdAssign),3);
SlagTypeInfo type_ClassNullReferenceError(364,513,364,-1,3,sizeof(ClassNullReferenceError),2);
SlagTypeInfo type_ClassHashTable_of_Int32_and_Int32(365,1,365,-1,4,sizeof(ClassHashTable_of_Int32_and_Int32),1);
SlagTypeInfo type_ClassArray_of_HashTable_of_String_and_LocalVarInfo(366,201326593,366,-1,2,sizeof(ClassArray_of_HashTable_of_String_and_LocalVarInfo),0);
SlagTypeInfo type_ClassArrayList_of_HashTable_of_String_and_LocalVarInfo(367,1,367,-1,7,sizeof(ClassArrayList_of_HashTable_of_String_and_LocalVarInfo),1);
SlagTypeInfo type_AspectReader_of_HashTableBin_of_Object_and_Object(368,130,368,-1,1,sizeof(AspectReader_of_HashTableBin_of_Object_and_Object),0);
SlagTypeInfo type_AspectReader_of_Mapping_of_Object_and_Object(369,130,369,-1,1,sizeof(AspectReader_of_Mapping_of_Object_and_Object),0);
SlagTypeInfo type_ClassHashTableValueReader_of_Object_and_Object(370,1,370,-1,3,sizeof(ClassHashTableValueReader_of_Object_and_Object),2);
SlagTypeInfo type_ClassInvalidStateError(371,513,371,-1,3,sizeof(ClassInvalidStateError),2);
SlagTypeInfo type_ClassCmdCmpIs(372,1,372,-1,4,sizeof(ClassCmdCmpIs),3);
SlagTypeInfo type_ClassArrayList_of_SlagFile(373,1,373,-1,7,sizeof(ClassArrayList_of_SlagFile),1);
SlagTypeInfo type_ClassCmdContextCall(374,1,374,-1,3,sizeof(ClassCmdContextCall),4);
SlagTypeInfo type_ClassCmdStaticCall(375,1,375,-1,4,sizeof(ClassCmdStaticCall),4);
SlagTypeInfo type_ClassMapping_of_String_and_MethodInfo__(376,1,376,-1,1,sizeof(ClassMapping_of_String_and_MethodInfo__),2);
SlagTypeInfo type_AspectReader_of_Cmd(377,130,377,-1,1,sizeof(AspectReader_of_Cmd),0);
SlagTypeInfo type_ClassArray_of_CmdWhichCase(378,201326593,378,-1,2,sizeof(ClassArray_of_CmdWhichCase),0);
SlagTypeInfo type_AspectCollection_of_CmdWhichCase(379,2,379,-1,0,sizeof(AspectCollection_of_CmdWhichCase),0);
SlagTypeInfo type_AspectReader_of_CmdWhichCase(380,130,380,-1,1,sizeof(AspectReader_of_CmdWhichCase),0);
SlagTypeInfo type_ClassArrayReader_of_CmdWhichCase(381,1,381,-1,3,sizeof(ClassArrayReader_of_CmdWhichCase),2);
SlagTypeInfo type_ClassArray_of_Qualifiers(382,201326593,382,-1,2,sizeof(ClassArray_of_Qualifiers),0);
SlagTypeInfo type_ClassArray_of_CmdElseIf(383,201326593,383,-1,2,sizeof(ClassArray_of_CmdElseIf),0);
SlagTypeInfo type_AspectList_of_CmdElseIf(384,130,384,-1,4,sizeof(AspectList_of_CmdElseIf),0);
SlagTypeInfo type_AspectListOperations_of_CmdElseIf_and_ArrayList_of_CmdElseIf(385,130,385,-1,5,sizeof(AspectListOperations_of_CmdElseIf_and_ArrayList_of_CmdElseIf),0);
SlagTypeInfo type_ClassArrayList_of_CmdElseIf(386,1,386,-1,7,sizeof(ClassArrayList_of_CmdElseIf),1);
SlagTypeInfo type_AspectCollection_of_Object(387,2,387,-1,0,sizeof(AspectCollection_of_Object),0);
SlagTypeInfo type_ClassArray_of_Mapping_of_String_and_SignalHandler(388,201326593,388,-1,2,sizeof(ClassArray_of_Mapping_of_String_and_SignalHandler),0);
SlagTypeInfo type_ClassReferenceTable_of_String_and_SignalHandler(389,1,389,-1,1,sizeof(ClassReferenceTable_of_String_and_SignalHandler),1);
SlagTypeInfo type_ClassArrayReader_of_HashTableBin_of_Object_and_Object(390,1,390,-1,3,sizeof(ClassArrayReader_of_HashTableBin_of_Object_and_Object),2);
SlagTypeInfo type_ClassMapping_of_String_and_Token__(391,1,391,-1,1,sizeof(ClassMapping_of_String_and_Token__),2);
SlagTypeInfo type_ClassCmdCmpInstanceOf(392,1,392,-1,3,sizeof(ClassCmdCmpInstanceOf),3);
SlagTypeInfo type_ClassArray_of_ArrayList_of_TypeTemplate(393,201326593,393,-1,2,sizeof(ClassArray_of_ArrayList_of_TypeTemplate),0);
SlagTypeInfo type_AspectList_of_ArrayList_of_TypeTemplate(394,130,394,-1,4,sizeof(AspectList_of_ArrayList_of_TypeTemplate),0);
SlagTypeInfo type_AspectListOperations_of_ArrayList_of_TypeTemplate_and_ArrayList_of_ArrayList_of_TypeTemplate(395,130,395,-1,5,sizeof(AspectListOperations_of_ArrayList_of_TypeTemplate_and_ArrayList_of_ArrayList_of_TypeTemplate),0);
SlagTypeInfo type_ClassArrayList_of_ArrayList_of_TypeTemplate(396,1,396,-1,7,sizeof(ClassArrayList_of_ArrayList_of_TypeTemplate),1);
SlagTypeInfo type_ClassArrayReader_of_Token(397,1,397,-1,3,sizeof(ClassArrayReader_of_Token),2);
SlagTypeInfo type_AspectListOperations_of_SlagError_and_ArrayList_of_SlagError(398,130,398,-1,5,sizeof(AspectListOperations_of_SlagError_and_ArrayList_of_SlagError),0);
SlagTypeInfo type_ClassCmdLocalVarAccess(399,1,399,-1,3,sizeof(ClassCmdLocalVarAccess),2);
SlagTypeInfo type_ClassCmdLocalVarWrite(400,1,400,-1,4,sizeof(ClassCmdLocalVarWrite),3);
SlagTypeInfo type_AspectReader_of_Int64(401,130,401,-1,1,sizeof(AspectReader_of_Int64),0);
SlagTypeInfo type_ClassArrayReader_of_Int64(402,1,402,-1,3,sizeof(ClassArrayReader_of_Int64),2);
SlagTypeInfo type_ClassBigInt(403,1,403,-1,1,sizeof(ClassBigInt),1);
SlagTypeInfo type_ClassParamInfo(404,1,404,-1,1,sizeof(ClassParamInfo),1);
SlagTypeInfo type_AspectEnumCategory_of_StructureType(405,130,405,-1,0,sizeof(AspectEnumCategory_of_StructureType),1);
SlagTypeInfo type_ClassStructureType(406,1,406,-1,2,sizeof(ClassStructureType),1);
SlagTypeInfo type_ClassCmdInitialAssignment(407,1,407,-1,2,sizeof(ClassCmdInitialAssignment),2);
SlagTypeInfo type_ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted(408,1,408,-1,3,sizeof(ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted),3);
SlagTypeInfo type_ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign(409,1,409,-1,3,sizeof(ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign),3);
SlagTypeInfo type_ClassCmdCmpIsNotNull(410,1,410,-1,3,sizeof(ClassCmdCmpIsNotNull),2);
SlagTypeInfo type_ClassCmdLiteralReal64(411,1,411,-1,4,sizeof(ClassCmdLiteralReal64),1);
SlagTypeInfo type_ClassCmdCastToReal64(412,1,412,-1,4,sizeof(ClassCmdCastToReal64),2);
SlagTypeInfo type_ClassArray_of_StructureType(413,201326593,413,-1,2,sizeof(ClassArray_of_StructureType),0);
SlagTypeInfo type_ClassArrayReader_of_Mapping_of_Int32_and_Int32(414,1,414,-1,3,sizeof(ClassArrayReader_of_Mapping_of_Int32_and_Int32),2);
SlagTypeInfo type_SlagReal32(415,516,415,-1,0,sizeof(SlagReal32),0);
SlagTypeInfo type_ClassCmdInitialConstructor(416,1,416,-1,2,sizeof(ClassCmdInitialConstructor),2);
SlagTypeInfo type_ClassRangeIteratorDescending_of_Int32(417,1,417,-1,3,sizeof(ClassRangeIteratorDescending_of_Int32),0);
SlagTypeInfo type_AspectListOperations_of_ControlStructureInfo_and_ArrayList_of_ControlStructureInfo(418,130,418,-1,5,sizeof(AspectListOperations_of_ControlStructureInfo_and_ArrayList_of_ControlStructureInfo),0);
SlagTypeInfo type_ClassArray_of_Signal(419,201326593,419,-1,2,sizeof(ClassArray_of_Signal),0);
SlagTypeInfo type_AspectReadable_of_Signal(420,130,420,-1,1,sizeof(AspectReadable_of_Signal),0);
SlagTypeInfo type_AspectList_of_Signal(421,130,421,-1,4,sizeof(AspectList_of_Signal),0);
SlagTypeInfo type_AspectListOperations_of_Signal_and_ArrayList_of_Signal(422,130,422,-1,5,sizeof(AspectListOperations_of_Signal_and_ArrayList_of_Signal),0);
SlagTypeInfo type_ClassArrayList_of_Signal(423,1,423,-1,7,sizeof(ClassArrayList_of_Signal),1);
SlagTypeInfo type_ClassSignal(424,513,424,-1,1,sizeof(ClassSignal),2);
SlagTypeInfo type_AspectCollection_of_Byte(425,2,425,-1,0,sizeof(AspectCollection_of_Byte),0);
SlagTypeInfo type_AspectListOrdering_of_Byte(426,130,426,-1,0,sizeof(AspectListOrdering_of_Byte),0);
SlagTypeInfo type_AspectList_of_Byte(427,130,427,-1,5,sizeof(AspectList_of_Byte),0);
SlagTypeInfo type_AspectListOperations_of_Byte_and_ArrayList_of_Byte(428,130,428,-1,6,sizeof(AspectListOperations_of_Byte_and_ArrayList_of_Byte),0);
SlagTypeInfo type_ClassArrayList_of_Byte(429,1,429,-1,8,sizeof(ClassArrayList_of_Byte),1);
SlagTypeInfo type_ClassCmdSingletonWrite(430,1,430,-1,2,sizeof(ClassCmdSingletonWrite),3);
SlagTypeInfo type_AspectReader_of_MethodInfo(431,130,431,-1,1,sizeof(AspectReader_of_MethodInfo),0);
SlagTypeInfo type_ClassArrayReader_of_MethodInfo(432,1,432,-1,3,sizeof(ClassArrayReader_of_MethodInfo),2);
SlagTypeInfo type_AspectListOrdering_of_Int32(433,130,433,-1,0,sizeof(AspectListOrdering_of_Int32),0);
SlagTypeInfo type_AspectList_of_Int32(434,130,434,-1,5,sizeof(AspectList_of_Int32),0);
SlagTypeInfo type_AspectListOperations_of_Int32_and_ArrayList_of_Int32(435,130,435,-1,6,sizeof(AspectListOperations_of_Int32_and_ArrayList_of_Int32),0);
SlagTypeInfo type_ClassLocalVarTable(436,1,436,-1,1,sizeof(ClassLocalVarTable),2);
SlagTypeInfo type_AspectSet_of_Int32(437,130,437,-1,2,sizeof(AspectSet_of_Int32),0);
SlagTypeInfo type_ClassHashSet_of_Int32(438,1,438,-1,6,sizeof(ClassHashSet_of_Int32),1);
SlagTypeInfo type_ClassArrayList_of_HashTableBin_of_Int32_and_Object(439,1,439,-1,7,sizeof(ClassArrayList_of_HashTableBin_of_Int32_and_Object),1);
SlagTypeInfo type_ClassGenericHashTable_of_Int32_and_Object(440,1,440,-1,1,sizeof(ClassGenericHashTable_of_Int32_and_Object),1);
SlagTypeInfo type_ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object(441,1,441,-1,3,sizeof(ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_Int32_and_Cmd(442,1,442,-1,4,sizeof(ClassHashTable_of_Int32_and_Cmd),1);
SlagTypeInfo type_ClassArrayList_of_Int32(443,1,443,-1,8,sizeof(ClassArrayList_of_Int32),1);
SlagTypeInfo type_ClassContext(444,17,444,10,1,sizeof(ClassContext),9);
SlagTypeInfo type_ClassArray_of_SlagError(445,201326593,445,-1,2,sizeof(ClassArray_of_SlagError),0);
SlagTypeInfo type_ClassCPPWriter(446,17,446,11,1,sizeof(ClassCPPWriter),4);
SlagTypeInfo type_ClassNumberConversions(447,17,447,12,1,sizeof(ClassNumberConversions),0);
SlagTypeInfo type_AspectReader_of_LocalVarInfo(448,130,448,-1,1,sizeof(AspectReader_of_LocalVarInfo),0);
SlagTypeInfo type_ClassArrayReader_of_LocalVarInfo(449,1,449,-1,3,sizeof(ClassArrayReader_of_LocalVarInfo),2);
SlagTypeInfo type_ClassCmdRightXShifted(450,1,450,-1,4,sizeof(ClassCmdRightXShifted),3);
SlagTypeInfo type_ClassCategoryInfo(451,1,451,-1,1,sizeof(ClassCategoryInfo),3);
SlagTypeInfo type_ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment(452,1,452,-1,3,sizeof(ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment),2);
SlagTypeInfo type_ClassCmdThisPropertyIncrement(453,1,453,-1,4,sizeof(ClassCmdThisPropertyIncrement),2);
SlagTypeInfo type_AspectReader_of_CategoryInfo(454,130,454,-1,1,sizeof(AspectReader_of_CategoryInfo),0);
SlagTypeInfo type_AspectReadable_of_RuntimeType(455,130,455,-1,1,sizeof(AspectReadable_of_RuntimeType),0);
SlagTypeInfo type_ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object(456,1,456,-1,3,sizeof(ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_RuntimeType(457,1,457,-1,4,sizeof(ClassHashTable_of_String_and_RuntimeType),1);
SlagTypeInfo type_ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod(458,1,458,-1,3,sizeof(ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod),3);
SlagTypeInfo type_ClassCmdMod(459,1,459,-1,4,sizeof(ClassCmdMod),3);
SlagTypeInfo type_ClassBitWriter(460,1,460,-1,2,sizeof(ClassBitWriter),1);
SlagTypeInfo type_ClassETCWriter(461,17,461,13,1,sizeof(ClassETCWriter),7);
SlagTypeInfo type_ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object(462,1,462,-1,3,sizeof(ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_Int32_and_String(463,1,463,-1,4,sizeof(ClassHashTable_of_Int32_and_String),1);
SlagTypeInfo type_ClassTypeMapping(464,1,464,-1,1,sizeof(ClassTypeMapping),2);
SlagTypeInfo type_AspectReader_of_String(465,130,465,-1,1,sizeof(AspectReader_of_String),0);
SlagTypeInfo type_ClassCoerceReader_of_String(466,1,466,-1,3,sizeof(ClassCoerceReader_of_String),1);
SlagTypeInfo type_AspectCollection_of_Mapping_of_Object_and_Object(467,2,467,-1,0,sizeof(AspectCollection_of_Mapping_of_Object_and_Object),0);
SlagTypeInfo type_AspectReadable_of_Mapping_of_Object_and_Object(468,130,468,-1,1,sizeof(AspectReadable_of_Mapping_of_Object_and_Object),0);
SlagTypeInfo type_AspectList_of_Mapping_of_Object_and_Object(469,130,469,-1,4,sizeof(AspectList_of_Mapping_of_Object_and_Object),0);
SlagTypeInfo type_AspectList_of_StackTraceInfo(470,130,470,-1,4,sizeof(AspectList_of_StackTraceInfo),0);
SlagTypeInfo type_AspectReadable_of_CmdWhichCase(471,130,471,-1,1,sizeof(AspectReadable_of_CmdWhichCase),0);
SlagTypeInfo type_AspectList_of_CmdWhichCase(472,130,472,-1,4,sizeof(AspectList_of_CmdWhichCase),0);
SlagTypeInfo type_AspectListOperations_of_CmdWhichCase_and_ArrayList_of_CmdWhichCase(473,130,473,-1,5,sizeof(AspectListOperations_of_CmdWhichCase_and_ArrayList_of_CmdWhichCase),0);
SlagTypeInfo type_ClassNoNextValueError(474,513,474,-1,3,sizeof(ClassNoNextValueError),2);
SlagTypeInfo type_ClassMapping_of_Object_and_Int32(475,1,475,-1,1,sizeof(ClassMapping_of_Object_and_Int32),1);
SlagTypeInfo type_ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor(476,1,476,-1,3,sizeof(ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor),3);
SlagTypeInfo type_ClassCoerceReader_of_MethodInfo(477,1,477,-1,3,sizeof(ClassCoerceReader_of_MethodInfo),1);
SlagTypeInfo type_ClassMapping_of_String_and_String(478,1,478,-1,1,sizeof(ClassMapping_of_String_and_String),2);
SlagTypeInfo type_AspectReader_of_SlagError(479,130,479,-1,1,sizeof(AspectReader_of_SlagError),0);
SlagTypeInfo type_ClassCmdIf(480,1,480,-1,3,sizeof(ClassCmdIf),5);
SlagTypeInfo type_ClassCmdRemoveCurrent(481,1,481,-1,3,sizeof(ClassCmdRemoveCurrent),1);
SlagTypeInfo type_AspectWritable_of_Char(482,130,482,-1,0,sizeof(AspectWritable_of_Char),0);
SlagTypeInfo type_ClassFile(483,513,483,-1,4,sizeof(ClassFile),1);
SlagTypeInfo type_ClassSlagCompiler(484,529,484,14,1,sizeof(ClassSlagCompiler),15);
SlagTypeInfo type_ClassArrayReader_of_PropertyInfo(485,1,485,-1,3,sizeof(ClassArrayReader_of_PropertyInfo),2);
SlagTypeInfo type_ClassArray_of_ControlStructureInfo(486,201326593,486,-1,2,sizeof(ClassArray_of_ControlStructureInfo),0);
SlagTypeInfo type_AspectReader_of_ControlStructureInfo(487,130,487,-1,1,sizeof(AspectReader_of_ControlStructureInfo),0);
SlagTypeInfo type_ClassArrayReader_of_ControlStructureInfo(488,1,488,-1,3,sizeof(ClassArrayReader_of_ControlStructureInfo),2);
SlagTypeInfo type_ClassCmdNot(489,1,489,-1,3,sizeof(ClassCmdNot),2);
SlagTypeInfo type_ClassBitwiseOperations(490,17,490,15,1,sizeof(ClassBitwiseOperations),0);
SlagTypeInfo type_ClassCmdXor(491,1,491,-1,4,sizeof(ClassCmdXor),3);
SlagTypeInfo type_AspectListOperations_of_Mapping_of_Object_and_Object_and_ArrayList_of_Mapping_of_Object_and_Object(492,130,492,-1,5,sizeof(AspectListOperations_of_Mapping_of_Object_and_Object_and_ArrayList_of_Mapping_of_Object_and_Object),0);
SlagTypeInfo type_ClassCmdDuplicate(493,1,493,-1,3,sizeof(ClassCmdDuplicate),2);
SlagTypeInfo type_ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign(494,1,494,-1,3,sizeof(ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign),3);
SlagTypeInfo type_ClassCmdThisPropertyModAndAssign(495,1,495,-1,4,sizeof(ClassCmdThisPropertyModAndAssign),3);
SlagTypeInfo type_ClassCmdLiteralInt32(496,1,496,-1,4,sizeof(ClassCmdLiteralInt32),1);
SlagTypeInfo type_ClassCmdCmpNE(497,1,497,-1,5,sizeof(ClassCmdCmpNE),3);
SlagTypeInfo type_AspectComparator_of_MethodInfo(498,130,498,-1,0,sizeof(AspectComparator_of_MethodInfo),0);
SlagTypeInfo type_ClassSpecializedComparator_2167(499,1,499,-1,2,sizeof(ClassSpecializedComparator_2167),0);
SlagTypeInfo type_ClassArrayList_of_CmdWhichCase(500,1,500,-1,7,sizeof(ClassArrayList_of_CmdWhichCase),1);
SlagTypeInfo type_ClassCmdWhich(501,1,501,-1,3,sizeof(ClassCmdWhich),5);
SlagTypeInfo type_ClassCmdAs(502,1,502,-1,3,sizeof(ClassCmdAs),3);
SlagTypeInfo type_ClassCmdArrayDuplicate(503,1,503,-1,2,sizeof(ClassCmdArrayDuplicate),2);
SlagTypeInfo type_SlagByte(504,516,504,-1,0,sizeof(SlagByte),0);
SlagTypeInfo type_ClassCmdLiteralByte(505,1,505,-1,4,sizeof(ClassCmdLiteralByte),1);
SlagTypeInfo type_ClassCmdCastToByte(506,1,506,-1,4,sizeof(ClassCmdCastToByte),2);
SlagTypeInfo type_ClassCmdReturnNil(507,1,507,-1,3,sizeof(ClassCmdReturnNil),1);
SlagTypeInfo type_ClassFileManager(508,529,508,16,1,sizeof(ClassFileManager),0);
SlagTypeInfo type_ClassArrayReader_of_Mapping_of_Int32_and_Object(509,1,509,-1,3,sizeof(ClassArrayReader_of_Mapping_of_Int32_and_Object),2);
SlagTypeInfo type_ClassMapping_of_String_and_SignalHandler(510,1,510,-1,1,sizeof(ClassMapping_of_String_and_SignalHandler),2);
SlagTypeInfo type_AspectRequiresCleanup(511,33555074,511,-1,0,sizeof(AspectRequiresCleanup),0);
SlagTypeInfo type_ClassNativeData(512,33554945,512,-1,2,sizeof(ClassNativeData),0);
SlagTypeInfo type_ClassCmdThrow(513,1,513,-1,3,sizeof(ClassCmdThrow),2);
SlagTypeInfo type_ClassNoSuchElementError(514,513,514,-1,3,sizeof(ClassNoSuchElementError),2);
SlagTypeInfo type_ClassCmdAssignNewObject(515,1,515,-1,2,sizeof(ClassCmdAssignNewObject),3);
SlagTypeInfo type_ClassSocketError(516,513,516,-1,3,sizeof(ClassSocketError),2);
SlagTypeInfo type_ClassCmdCastToInt32(517,1,517,-1,4,sizeof(ClassCmdCastToInt32),2);
SlagTypeInfo type_AspectCollection_of_StructureType(518,2,518,-1,0,sizeof(AspectCollection_of_StructureType),0);
SlagTypeInfo type_ClassMapping_of_String_and_TypeInfo(519,1,519,-1,1,sizeof(ClassMapping_of_String_and_TypeInfo),2);
SlagTypeInfo type_ClassCmdWhichCase(520,1,520,-1,2,sizeof(ClassCmdWhichCase),3);
SlagTypeInfo type_ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt(521,1,521,-1,4,sizeof(ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt),3);
SlagTypeInfo type_ClassSpecializedDelegate_____of_SignalHandler_and_delegate_dummy(522,1,522,-1,3,sizeof(ClassSpecializedDelegate_____of_SignalHandler_and_delegate_dummy),1);
SlagTypeInfo type_ClassCmdUnresolvedNewObject(523,1,523,-1,2,sizeof(ClassCmdUnresolvedNewObject),3);
SlagTypeInfo type_ClassArrayReader_of_ParameterInfo(524,1,524,-1,3,sizeof(ClassArrayReader_of_ParameterInfo),2);
SlagTypeInfo type_ClassHeapSort_of_MethodInfo(525,17,525,17,1,sizeof(ClassHeapSort_of_MethodInfo),1);
SlagTypeInfo type_ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul(526,1,526,-1,3,sizeof(ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul),3);
SlagTypeInfo type_ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object(527,1,527,-1,3,sizeof(ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_Int32_and_KeywordPairing(528,1,528,-1,4,sizeof(ClassHashTable_of_Int32_and_KeywordPairing),1);
SlagTypeInfo type_AspectList_of_Object(529,130,529,-1,4,sizeof(AspectList_of_Object),0);
SlagTypeInfo type_AspectListOperations_of_Object_and_ArrayList_of_Object(530,130,530,-1,5,sizeof(AspectListOperations_of_Object_and_ArrayList_of_Object),0);
SlagTypeInfo type_ClassArrayList_of_Object(531,1,531,-1,7,sizeof(ClassArrayList_of_Object),1);
SlagTypeInfo type_CompoundParseReaderMark(532,8,532,-1,0,sizeof(CompoundParseReaderMark),0);
SlagTypeInfo type_AspectReader_of_Char(533,130,533,-1,1,sizeof(AspectReader_of_Char),0);
SlagTypeInfo type_ClassParseReader(534,513,534,-1,3,sizeof(ClassParseReader),1);
SlagTypeInfo type_ClassArrayReader_of_Cmd(535,1,535,-1,3,sizeof(ClassArrayReader_of_Cmd),2);
SlagTypeInfo type_AspectList_of_StructureType(536,130,536,-1,4,sizeof(AspectList_of_StructureType),0);
SlagTypeInfo type_ClassCmdLiteralString(537,1,537,-1,3,sizeof(ClassCmdLiteralString),2);
SlagTypeInfo type_ClassStringReader(538,1,538,-1,3,sizeof(ClassStringReader),1);
SlagTypeInfo type_ClassArrayReverseReader_of_Cmd(539,1,539,-1,4,sizeof(ClassArrayReverseReader_of_Cmd),2);
SlagTypeInfo type_ClassMapping_of_Int32_and_Cmd(540,1,540,-1,1,sizeof(ClassMapping_of_Int32_and_Cmd),1);
SlagTypeInfo type_ClassCmdNextIteration(541,1,541,-1,3,sizeof(ClassCmdNextIteration),1);
SlagTypeInfo type_ClassCmdEscape(542,1,542,-1,3,sizeof(ClassCmdEscape),1);
SlagTypeInfo type_ClassCmdForEachOf(543,1,543,-1,4,sizeof(ClassCmdForEachOf),4);
SlagTypeInfo type_ClassCmdNewCompound(544,1,544,-1,2,sizeof(ClassCmdNewCompound),3);
SlagTypeInfo type_ClassFileWriter(545,33554945,545,-1,4,sizeof(ClassFileWriter),1);
SlagTypeInfo type_AspectReader_of_ParamInfo(546,130,546,-1,1,sizeof(AspectReader_of_ParamInfo),0);
SlagTypeInfo type_ClassArrayReader_of_ParamInfo(547,1,547,-1,3,sizeof(ClassArrayReader_of_ParamInfo),2);
SlagTypeInfo type_ClassHashTableKeyReader_of_Object_and_Int32(548,1,548,-1,3,sizeof(ClassHashTableKeyReader_of_Object_and_Int32),2);
SlagTypeInfo type_AspectCollection_of_Qualifiers(549,2,549,-1,0,sizeof(AspectCollection_of_Qualifiers),0);
SlagTypeInfo type_AspectList_of_Qualifiers(550,130,550,-1,4,sizeof(AspectList_of_Qualifiers),0);
SlagTypeInfo type_AspectListOperations_of_Qualifiers_and_ArrayList_of_Qualifiers(551,130,551,-1,5,sizeof(AspectListOperations_of_Qualifiers_and_ArrayList_of_Qualifiers),0);
SlagTypeInfo type_ClassStackTraceInfo(552,1,552,-1,1,sizeof(ClassStackTraceInfo),2);
SlagTypeInfo type_ClassArrayReader_of_Qualifiers(553,1,553,-1,3,sizeof(ClassArrayReader_of_Qualifiers),2);
SlagTypeInfo type_ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign(554,1,554,-1,3,sizeof(ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign),3);
SlagTypeInfo type_ClassCmdLocalVarAddAndAssign(555,1,555,-1,4,sizeof(ClassCmdLocalVarAddAndAssign),3);
SlagTypeInfo type_ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object(556,1,556,-1,3,sizeof(ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object),1);
SlagTypeInfo type_ClassHashTable_of_String_and_Qualifiers(557,1,557,-1,4,sizeof(ClassHashTable_of_String_and_Qualifiers),1);
SlagTypeInfo type_AspectListOperations_of_Char_and_StringBuilder(558,130,558,-1,6,sizeof(AspectListOperations_of_Char_and_StringBuilder),0);
SlagTypeInfo type_ClassStringBuilder(559,513,559,-1,10,sizeof(ClassStringBuilder),1);
SlagTypeInfo type_ClassSlagScanner(560,1,560,-1,3,sizeof(ClassSlagScanner),8);
SlagTypeInfo type_ClassSlagPreprocessor(561,1,561,-1,4,sizeof(ClassSlagPreprocessor),4);
SlagTypeInfo type_ClassCmdBreakpoint(562,1,562,-1,3,sizeof(ClassCmdBreakpoint),1);
SlagTypeInfo type_ClassCmdContingent(563,1,563,-1,3,sizeof(ClassCmdContingent),4);
SlagTypeInfo type_ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted(564,1,564,-1,3,sizeof(ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted),3);
SlagTypeInfo type_ClassCmdLoop(565,1,565,-1,3,sizeof(ClassCmdLoop),2);
SlagTypeInfo type_ClassDate(566,1,566,-1,1,sizeof(ClassDate),0);
SlagTypeInfo type_ClassStringManager(567,17,567,18,1,sizeof(ClassStringManager),2);
SlagTypeInfo type_ClassMapping_of_Int32_and_Object(568,1,568,-1,1,sizeof(ClassMapping_of_Int32_and_Object),1);
SlagTypeInfo type_ClassCmdLiteralReal32(569,1,569,-1,4,sizeof(ClassCmdLiteralReal32),1);
SlagTypeInfo type_ClassCmdCastToReal32(570,1,570,-1,4,sizeof(ClassCmdCastToReal32),2);
SlagTypeInfo type_ClassJavaWriter(571,17,571,19,1,sizeof(ClassJavaWriter),5);
SlagTypeInfo type_ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement(572,1,572,-1,3,sizeof(ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement),2);
SlagTypeInfo type_AspectRangeType(573,2,573,-1,0,sizeof(AspectRangeType),0);
SlagTypeInfo type_ClassMissingReturnError(574,513,574,-1,3,sizeof(ClassMissingReturnError),2);
SlagTypeInfo type_ClassSlagScannerManager(575,17,575,20,1,sizeof(ClassSlagScannerManager),3);
SlagTypeInfo type_ClassArrayList_of_Qualifiers(576,1,576,-1,7,sizeof(ClassArrayList_of_Qualifiers),1);
SlagTypeInfo type_ClassArrayReader_of_Char(577,1,577,-1,3,sizeof(ClassArrayReader_of_Char),2);
SlagTypeInfo type_ClassCmdDynamicCall(578,1,578,-1,4,sizeof(ClassCmdDynamicCall),4);
SlagTypeInfo type_ClassCmdReturnValue(579,1,579,-1,3,sizeof(ClassCmdReturnValue),2);
SlagTypeInfo type_ClassCmdAdd(580,1,580,-1,4,sizeof(ClassCmdAdd),3);
SlagTypeInfo type_ClassLiteralTerm(581,1,581,-1,2,sizeof(ClassLiteralTerm),1);
SlagTypeInfo type_ClassArrayList_of_SlagError(582,1,582,-1,7,sizeof(ClassArrayList_of_SlagError),1);
SlagTypeInfo type_ClassCmdExp(583,1,583,-1,4,sizeof(ClassCmdExp),3);
SlagTypeInfo type_AspectListOperations_of_StructureType_and_ArrayList_of_StructureType(584,130,584,-1,5,sizeof(AspectListOperations_of_StructureType_and_ArrayList_of_StructureType),0);
SlagTypeInfo type_ClassGlobal(585,529,585,21,1,sizeof(ClassGlobal),3);
SlagTypeInfo type_ClassArrayReader_of_Mapping_of_Object_and_Int32(586,1,586,-1,3,sizeof(ClassArrayReader_of_Mapping_of_Object_and_Int32),2);
SlagTypeInfo type_ClassArrayReverseReader_of_ParameterInfo(587,1,587,-1,4,sizeof(ClassArrayReverseReader_of_ParameterInfo),2);
SlagTypeInfo type_AspectReader_of_CmdElseIf(588,130,588,-1,1,sizeof(AspectReader_of_CmdElseIf),0);
SlagTypeInfo type_ClassArrayReader_of_CmdElseIf(589,1,589,-1,3,sizeof(ClassArrayReader_of_CmdElseIf),2);
SlagTypeInfo type_ClassCmdLocalVarDecrement(590,1,590,-1,4,sizeof(ClassCmdLocalVarDecrement),2);
SlagTypeInfo type_ClassCmdWhile(591,1,591,-1,3,sizeof(ClassCmdWhile),3);
SlagTypeInfo type_ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge(592,1,592,-1,4,sizeof(ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge),3);
SlagTypeInfo type_ClassCmdCmpGE(593,1,593,-1,5,sizeof(ClassCmdCmpGE),3);
SlagTypeInfo type_ClassSignalObjectArg(594,513,594,-1,2,sizeof(ClassSignalObjectArg),3);
SlagTypeInfo type_ClassRuntime(595,529,595,22,1,sizeof(ClassRuntime),1);
SlagTypeInfo type_ClassCmdCast(596,1,596,-1,3,sizeof(ClassCmdCast),3);
SlagTypeInfo type_ClassCmdNarrowingCast(597,1,597,-1,4,sizeof(ClassCmdNarrowingCast),3);
SlagTypeInfo type_ClassCmdPropertyWrite(598,1,598,-1,4,sizeof(ClassCmdPropertyWrite),4);
SlagTypeInfo type_ClassCmdContingentControl(599,1,599,-1,3,sizeof(ClassCmdContingentControl),2);
SlagTypeInfo type_ClassCmdSufficient(600,1,600,-1,4,sizeof(ClassCmdSufficient),2);
SlagTypeInfo type_ClassCmdBlock(601,1,601,-1,3,sizeof(ClassCmdBlock),2);
SlagTypeInfo type_ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign(602,1,602,-1,3,sizeof(ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign),3);
SlagTypeInfo type_ClassCmdThisPropertyDivAndAssign(603,1,603,-1,4,sizeof(ClassCmdThisPropertyDivAndAssign),3);
SlagTypeInfo type_ClassArrayReader_of_String(604,1,604,-1,3,sizeof(ClassArrayReader_of_String),2);
SlagTypeInfo type_ClassDegreesManager(605,17,605,23,1,sizeof(ClassDegreesManager),0);
SlagTypeInfo type_ClassBigIntManager(606,17,606,24,1,sizeof(ClassBigIntManager),10);
SlagTypeInfo type_ClassCmdArrayGet(607,1,607,-1,2,sizeof(ClassCmdArrayGet),3);
SlagTypeInfo type_ClassTypeCastError(608,513,608,-1,3,sizeof(ClassTypeCastError),2);
SlagTypeInfo type_ClassRangeIteratorGE_of_Int32(609,1,609,-1,3,sizeof(ClassRangeIteratorGE_of_Int32),0);
SlagTypeInfo type_ClassCmdArraySet(610,1,610,-1,2,sizeof(ClassCmdArraySet),4);
SlagTypeInfo type_ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign(611,1,611,-1,3,sizeof(ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign),3);
SlagTypeInfo type_ClassCmdLocalVarSubAndAssign(612,1,612,-1,4,sizeof(ClassCmdLocalVarSubAndAssign),3);
SlagTypeInfo type_ClassCmdCmpGT(613,1,613,-1,5,sizeof(ClassCmdCmpGT),3);
SlagTypeInfo type_AspectReader_of_Signal(614,130,614,-1,1,sizeof(AspectReader_of_Signal),0);
SlagTypeInfo type_ClassArrayReader_of_Signal(615,1,615,-1,3,sizeof(ClassArrayReader_of_Signal),2);
SlagTypeInfo type_ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign(616,1,616,-1,3,sizeof(ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign),3);
SlagTypeInfo type_ClassCmdLocalVarMulAndAssign(617,1,617,-1,4,sizeof(ClassCmdLocalVarMulAndAssign),3);
SlagTypeInfo type_ClassSignalManager(618,529,618,25,1,sizeof(ClassSignalManager),4);
SlagTypeInfo type_SlagChar(619,516,619,-1,0,sizeof(SlagChar),0);
SlagTypeInfo type_ClassStdInReader(620,513,620,-1,3,sizeof(ClassStdInReader),0);
SlagTypeInfo type_ClassArray_of_Mapping_of_Object_and_Object(621,201326593,621,-1,2,sizeof(ClassArray_of_Mapping_of_Object_and_Object),0);
SlagTypeInfo type_ClassCmdLogicalize(622,1,622,-1,3,sizeof(ClassCmdLogicalize),2);
SlagTypeInfo type_ClassHashTable_of_String_and_StructureType(623,1,623,-1,4,sizeof(ClassHashTable_of_String_and_StructureType),1);
SlagTypeInfo type_ClassOutOfBoundsError(624,513,624,-1,3,sizeof(ClassOutOfBoundsError),2);
SlagTypeInfo type_ClassArrayReverseReader_of_ControlStructureInfo(625,1,625,-1,4,sizeof(ClassArrayReverseReader_of_ControlStructureInfo),2);
SlagTypeInfo type_ClassWeakReferenceManager(626,17,626,26,1,sizeof(ClassWeakReferenceManager),0);
SlagTypeInfo type_ClassCmdArrayCreate(627,1,627,-1,2,sizeof(ClassCmdArrayCreate),3);
SlagTypeInfo type_ClassCmdLiteralChar(628,1,628,-1,4,sizeof(ClassCmdLiteralChar),1);
SlagTypeInfo type_ClassCmdCastToChar(629,1,629,-1,4,sizeof(ClassCmdCastToChar),2);
SlagTypeInfo type_ClassSlagFile(630,1,630,-1,1,sizeof(ClassSlagFile),3);
SlagTypeInfo type_ClassHashTableMappingReader_of_Object_and_Object(631,1,631,-1,3,sizeof(ClassHashTableMappingReader_of_Object_and_Object),2);
SlagTypeInfo type_ClassPriorSlagError(632,1,632,-1,4,sizeof(ClassPriorSlagError),4);
SlagTypeInfo type_ClassParameterInfo(633,1,633,-1,3,sizeof(ClassParameterInfo),6);
SlagTypeInfo type_ClassCmdCompoundPropertyRead(634,1,634,-1,5,sizeof(ClassCmdCompoundPropertyRead),3);
SlagTypeInfo type_ClassCmdNecessary(635,1,635,-1,4,sizeof(ClassCmdNecessary),2);
SlagTypeInfo type_ClassStringTriplet(636,1,636,-1,1,sizeof(ClassStringTriplet),3);
SlagTypeInfo type_ClassTypeTemplate(637,1,637,-1,1,sizeof(ClassTypeTemplate),6);
SlagTypeInfo type_ClassMapping_of_String_and_TypeTemplate(638,1,638,-1,1,sizeof(ClassMapping_of_String_and_TypeTemplate),2);
SlagTypeInfo type_ClassFileNotFoundError(639,513,639,-1,4,sizeof(ClassFileNotFoundError),2);
SlagTypeInfo type_ClassCmdLiteralLogical(640,1,640,-1,4,sizeof(ClassCmdLiteralLogical),1);
SlagTypeInfo type_ClassCmdElseIf(641,1,641,-1,2,sizeof(ClassCmdElseIf),3);
SlagTypeInfo type_ClassCompilerError(642,1,642,-1,3,sizeof(ClassCompilerError),2);
SlagTypeInfo type_ClassCmdCmpIsNot(643,1,643,-1,4,sizeof(ClassCmdCmpIsNot),3);
SlagTypeInfo type_AspectReader_of_TypeInfo(644,130,644,-1,1,sizeof(AspectReader_of_TypeInfo),0);
SlagTypeInfo type_ClassArrayReader_of_TypeInfo(645,1,645,-1,3,sizeof(ClassArrayReader_of_TypeInfo),2);
SlagTypeInfo type_ClassRandomNumberGenerator(646,17,646,27,1,sizeof(ClassRandomNumberGenerator),0);
SlagTypeInfo type_AspectReader_of_HashTable_of_String_and_LocalVarInfo(647,130,647,-1,1,sizeof(AspectReader_of_HashTable_of_String_and_LocalVarInfo),0);
SlagTypeInfo type_ClassCmdCastToLogical(648,1,648,-1,4,sizeof(ClassCmdCastToLogical),2);
SlagTypeInfo type_ClassCmdLocalVarRead(649,1,649,-1,4,sizeof(ClassCmdLocalVarRead),2);
SlagTypeInfo type_ClassCSWriter(650,17,650,28,1,sizeof(ClassCSWriter),4);
SlagTypeInfo type_ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or(651,1,651,-1,3,sizeof(ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or),3);
SlagTypeInfo type_ClassKeywordPairing(652,1,652,-1,1,sizeof(ClassKeywordPairing),2);
SlagTypeInfo type_ClassMapping_of_Int32_and_KeywordPairing(653,1,653,-1,1,sizeof(ClassMapping_of_Int32_and_KeywordPairing),1);
SlagTypeInfo type_ClassUnsupportedMethodError(654,513,654,-1,3,sizeof(ClassUnsupportedMethodError),2);
SlagTypeInfo type_ClassCmdExplicitListLiteral(655,1,655,-1,2,sizeof(ClassCmdExplicitListLiteral),3);
SlagTypeInfo type_ClassCmdForEachInWithRemoveCurrent(656,1,656,-1,4,sizeof(ClassCmdForEachInWithRemoveCurrent),4);
SlagTypeInfo type_ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement(657,1,657,-1,3,sizeof(ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement),2);
SlagTypeInfo type_ClassCmdThisPropertyDecrement(658,1,658,-1,4,sizeof(ClassCmdThisPropertyDecrement),2);
SlagTypeInfo type_ClassRange_of_Int32(659,1,659,-1,4,sizeof(ClassRange_of_Int32),0);
SlagTypeInfo type_ClassRangeGE_of_Int32(660,1,660,-1,5,sizeof(ClassRangeGE_of_Int32),0);
SlagTypeInfo type_ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le(661,1,661,-1,4,sizeof(ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le),3);
SlagTypeInfo type_ClassCoerceReader_of_MethodGroup(662,1,662,-1,3,sizeof(ClassCoerceReader_of_MethodGroup),1);
SlagTypeInfo type_ClassCmdAccessIndex(663,1,663,-1,3,sizeof(ClassCmdAccessIndex),3);
SlagTypeInfo type_ClassCmdUnderlyingCall(664,1,664,-1,3,sizeof(ClassCmdUnderlyingCall),1);
SlagTypeInfo type_ClassCmdWideningCast(665,1,665,-1,4,sizeof(ClassCmdWideningCast),3);
SlagTypeInfo type_ClassArray_of_StackTraceInfo(666,201326593,666,-1,2,sizeof(ClassArray_of_StackTraceInfo),0);
SlagTypeInfo type_ClassSignalHandlerManager(667,17,667,29,1,sizeof(ClassSignalHandlerManager),0);
SlagTypeInfo type_ClassCmdLazyAnd(668,1,668,-1,3,sizeof(ClassCmdLazyAnd),3);
SlagTypeInfo type_AspectListOperations_of_StackTraceInfo_and_ArrayList_of_StackTraceInfo(669,130,669,-1,5,sizeof(AspectListOperations_of_StackTraceInfo_and_ArrayList_of_StackTraceInfo),0);
SlagTypeInfo type_ClassCmdLocalVarDeclaration(670,1,670,-1,2,sizeof(ClassCmdLocalVarDeclaration),3);
SlagTypeInfo type_ClassCmdLazyOr(671,1,671,-1,3,sizeof(ClassCmdLazyOr),3);
SlagTypeInfo type_ClassCmdAssignZeroValue(672,1,672,-1,2,sizeof(ClassCmdAssignZeroValue),2);
SlagTypeInfo type_ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub(673,1,673,-1,3,sizeof(ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub),3);
SlagTypeInfo type_ClassCmdSub(674,1,674,-1,4,sizeof(ClassCmdSub),3);
SlagTypeInfo type_ClassStopwatch(675,1,675,-1,1,sizeof(ClassStopwatch),0);
SlagTypeInfo type_ClassLiteralLogical(676,1,676,-1,3,sizeof(ClassLiteralLogical),1);
SlagTypeInfo type_ClassHashTableMappingReader_of_Object_and_Int32(677,1,677,-1,3,sizeof(ClassHashTableMappingReader_of_Object_and_Int32),2);
SlagTypeInfo type_ClassRangeIteratorAscending_of_Int32(678,1,678,-1,3,sizeof(ClassRangeIteratorAscending_of_Int32),0);
SlagTypeInfo type_ClassEnum_of_Qualifiers(679,17,679,30,2,sizeof(ClassEnum_of_Qualifiers),32);
SlagTypeInfo type_ClassDelegateMaker(680,17,680,31,1,sizeof(ClassDelegateMaker),0);
SlagTypeInfo type_ClassMapping_of_Int32_and_Int32(681,1,681,-1,1,sizeof(ClassMapping_of_Int32_and_Int32),0);
SlagTypeInfo type_ClassCmdMul(682,1,682,-1,4,sizeof(ClassCmdMul),3);
SlagTypeInfo type_ClassArrayReader_of_Mapping_of_Object_and_Object(683,1,683,-1,3,sizeof(ClassArrayReader_of_Mapping_of_Object_and_Object),2);
SlagTypeInfo type_ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo(684,1,684,-1,3,sizeof(ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo),2);
SlagTypeInfo type_ClassCmdDiv(685,1,685,-1,4,sizeof(ClassCmdDiv),3);
SlagTypeInfo type_ClassArrayReader_of_HashTableBin_of_Int32_and_Int32(686,1,686,-1,3,sizeof(ClassArrayReader_of_HashTableBin_of_Int32_and_Int32),2);
SlagTypeInfo type_AspectReader_of_CmdCatch(687,130,687,-1,1,sizeof(AspectReader_of_CmdCatch),0);
SlagTypeInfo type_ClassArrayReader_of_CmdCatch(688,1,688,-1,3,sizeof(ClassArrayReader_of_CmdCatch),2);
SlagTypeInfo type_ClassArrayReverseReader_of_PropertyInfo(689,1,689,-1,4,sizeof(ClassArrayReverseReader_of_PropertyInfo),2);
SlagTypeInfo type_ClassArrayList_of_StructureType(690,1,690,-1,7,sizeof(ClassArrayList_of_StructureType),1);
SlagTypeInfo type_ClassCmdCmpLE(691,1,691,-1,5,sizeof(ClassCmdCmpLE),3);
SlagTypeInfo type_AspectHasDefaultInit(692,514,692,-1,0,sizeof(AspectHasDefaultInit),0);
SlagTypeInfo type_ClassCmdNegate(693,1,693,-1,3,sizeof(ClassCmdNegate),2);
SlagTypeInfo type_ClassCmdOr(694,1,694,-1,4,sizeof(ClassCmdOr),3);
SlagTypeInfo type_ClassSpecializedComparator_2189(695,1,695,-1,2,sizeof(ClassSpecializedComparator_2189),0);
SlagTypeInfo type_ClassMapping_of_Object_and_Object(696,1,696,-1,1,sizeof(ClassMapping_of_Object_and_Object),2);
SlagTypeInfo type_ClassRadiansManager(697,17,697,32,1,sizeof(ClassRadiansManager),0);
SlagTypeInfo type_ClassCmdOpenScope(698,1,698,-1,3,sizeof(ClassCmdOpenScope),1);
SlagTypeInfo type_ClassSignalDataArg(699,513,699,-1,1,sizeof(ClassSignalDataArg),0);
SlagTypeInfo type_ClassListOf_of_MethodInfo(700,17,700,33,1,sizeof(ClassListOf_of_MethodInfo),0);
SlagTypeInfo type_ClassCmdRangeGE(701,1,701,-1,3,sizeof(ClassCmdRangeGE),4);
SlagTypeInfo type_ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign(702,1,702,-1,3,sizeof(ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign),3);
SlagTypeInfo type_ClassCmdLocalVarModAndAssign(703,1,703,-1,4,sizeof(ClassCmdLocalVarModAndAssign),3);
SlagTypeInfo type_ClassCmdCmpLT(704,1,704,-1,5,sizeof(ClassCmdCmpLT),3);
SlagTypeInfo type_ClassArrayReverseReader_of_Char(705,1,705,-1,4,sizeof(ClassArrayReverseReader_of_Char),2);
SlagTypeInfo type_ClassFileReader(706,33554945,706,-1,4,sizeof(ClassFileReader),1);
SlagTypeInfo type_ClassCmdRightShifted(707,1,707,-1,4,sizeof(ClassCmdRightShifted),3);
SlagTypeInfo type_ClassCallStackLimitReached(708,513,708,-1,3,sizeof(ClassCallStackLimitReached),2);
SlagTypeInfo type_ClassDivideByZeroError(709,513,709,-1,3,sizeof(ClassDivideByZeroError),2);
SlagTypeInfo type_ClassHashTableValueReader_of_Object_and_Int32(710,1,710,-1,3,sizeof(ClassHashTableValueReader_of_Object_and_Int32),2);
SlagTypeInfo type_ClassArrayReader_of_HashTableBin_of_Int32_and_Object(711,1,711,-1,3,sizeof(ClassArrayReader_of_HashTableBin_of_Int32_and_Object),2);
SlagTypeInfo type_ClassCmdPropertyRead(712,1,712,-1,5,sizeof(ClassCmdPropertyRead),3);
SlagTypeInfo type_ClassLineReader(713,1,713,-1,3,sizeof(ClassLineReader),2);
SlagTypeInfo type_ClassMapping_of_String_and_Int32(714,1,714,-1,1,sizeof(ClassMapping_of_String_and_Int32),1);
SlagTypeInfo type_ClassCoerceReader_of_TypeInfo(715,1,715,-1,3,sizeof(ClassCoerceReader_of_TypeInfo),1);
SlagTypeInfo type_ClassMapping_of_String_and_MethodGroup(716,1,716,-1,1,sizeof(ClassMapping_of_String_and_MethodGroup),2);
SlagTypeInfo type_ClassCmdRangeGT(717,1,717,-1,3,sizeof(ClassCmdRangeGT),4);
SlagTypeInfo type_ClassArrayList_of_ControlStructureInfo(718,1,718,-1,7,sizeof(ClassArrayList_of_ControlStructureInfo),1);
SlagTypeInfo type_ClassCmdCatch(719,1,719,-1,2,sizeof(ClassCmdCatch),3);
SlagTypeInfo type_ClassArrayReader_of_CategoryInfo(720,1,720,-1,3,sizeof(ClassArrayReader_of_CategoryInfo),2);
SlagTypeInfo type_ClassObjectManager(721,17,721,34,1,sizeof(ClassObjectManager),0);
SlagTypeInfo type_ClassControlStructureInfo(722,1,722,-1,1,sizeof(ClassControlStructureInfo),3);
SlagTypeInfo type_AspectStringIDAccess(723,514,723,-1,0,sizeof(AspectStringIDAccess),0);
SlagTypeInfo type_ClassArrayList_of_StackTraceInfo(724,1,724,-1,7,sizeof(ClassArrayList_of_StackTraceInfo),1);
SlagTypeInfo type_ClassArrayList_of_Mapping_of_Object_and_Object(725,1,725,-1,7,sizeof(ClassArrayList_of_Mapping_of_Object_and_Object),1);
SlagTypeInfo type_ClassHashTableBin_of_Object_and_Object(726,1,726,-1,1,sizeof(ClassHashTableBin_of_Object_and_Object),1);
SlagTypeInfo type_ClassCmdLogicalNot(727,1,727,-1,4,sizeof(ClassCmdLogicalNot),2);
SlagTypeInfo type_ClassCmdLogicalXor(728,1,728,-1,5,sizeof(ClassCmdLogicalXor),3);
SlagTypeInfo type_ClassArrayReader_of_SlagError(729,1,729,-1,3,sizeof(ClassArrayReader_of_SlagError),2);
SlagTypeInfo type_ClassSlagParser(730,1,730,-1,1,sizeof(ClassSlagParser),25);
SlagTypeInfo type_ClassCmdFormattedString(731,1,731,-1,2,sizeof(ClassCmdFormattedString),3);
SlagTypeInfo type_ClassCoerceReader_of_Int32(732,1,732,-1,3,sizeof(ClassCoerceReader_of_Int32),1);
SlagTypeInfo type_ClassCompareFn_of_MethodInfo_and_a_of_(733,1,733,-1,2,sizeof(ClassCompareFn_of_MethodInfo_and_a_of_),0);
SlagTypeInfo type_ClassMapping_of_String_and_MethodInfo(734,1,734,-1,1,sizeof(ClassMapping_of_String_and_MethodInfo),2);
SlagTypeInfo type_ClassCoerceReader_of_Cmd(735,1,735,-1,3,sizeof(ClassCoerceReader_of_Cmd),1);
SlagTypeInfo type_ClassMapping_of_String_and_LocalVarInfo(736,1,736,-1,1,sizeof(ClassMapping_of_String_and_LocalVarInfo),2);
SlagTypeInfo type_ClassConcurrentModificationError(737,1,737,-1,3,sizeof(ClassConcurrentModificationError),2);
SlagTypeInfo type_ClassCmdThisPropertyAddAndAssign(738,1,738,-1,4,sizeof(ClassCmdThisPropertyAddAndAssign),3);
SlagTypeInfo type_ClassCmdCmpIsNull(739,1,739,-1,3,sizeof(ClassCmdCmpIsNull),2);
SlagTypeInfo type_ClassHashTableBin_of_Object_and_Int32(740,1,740,-1,1,sizeof(ClassHashTableBin_of_Object_and_Int32),1);
SlagTypeInfo type_ClassInvalidOperandError(741,513,741,-1,3,sizeof(ClassInvalidOperandError),2);
SlagTypeInfo type_ClassCmdForEachIn(742,1,742,-1,4,sizeof(ClassCmdForEachIn),4);
SlagTypeInfo type_ClassSlagParserManager(743,17,743,35,1,sizeof(ClassSlagParserManager),3);
SlagTypeInfo type_ClassInlineClassPropertyDeclaration(744,1,744,-1,2,sizeof(ClassInlineClassPropertyDeclaration),4);
SlagTypeInfo type_ClassHashTableMappingReader_of_Int32_and_Object(745,1,745,-1,3,sizeof(ClassHashTableMappingReader_of_Int32_and_Object),2);
SlagTypeInfo type_ClassArrayReader_of_StackTraceInfo(746,1,746,-1,3,sizeof(ClassArrayReader_of_StackTraceInfo),2);
SlagTypeInfo type_ClassMapping_of_String_and_PropertyInfo(747,1,747,-1,1,sizeof(ClassMapping_of_String_and_PropertyInfo),2);
SlagTypeInfo type_ClassEnum_of_StructureType(748,17,748,36,2,sizeof(ClassEnum_of_StructureType),11);
SlagTypeInfo type_ClassParsePosManager(749,17,749,37,1,sizeof(ClassParsePosManager),0);
SlagTypeInfo type_ClassErrors(750,17,750,38,1,sizeof(ClassErrors),1);
SlagTypeInfo type_ClassCmdImplicitListLiteral(751,1,751,-1,2,sizeof(ClassCmdImplicitListLiteral),2);

int sxc_property_info[] =
{
  4,761,
  9,762,9,763,
  9,792,9,793,10,794,13,795,
  14,796,
  14,796,15,813,15,814,
  14,796,15,813,15,814,
  14,796,15,813,15,814,
  20,818,9,764,9,765,
  29,818,9,764,9,765,
  34,821,9,822,27,823,27,824,9,825,9,826,
  35,818,
  35,818,
  35,818,
  40,834,41,835,
  43,818,9,764,9,765,
  14,796,48,845,
  9,848,9,849,13,850,
  53,818,9,764,9,765,
  59,818,9,764,9,765,
  65,818,9,764,9,765,
  71,818,9,764,9,765,
  77,818,9,764,9,765,
  35,818,
  35,818,
  35,818,
  35,818,
  87,818,9,764,9,765,
  14,796,52,854,13,850,13,855,13,856,58,857,64,858,64,859,64,860,64,861,64,862,70,863,76,864,64,865,82,866,9,867,84,868,39,869,86,870,86,871,86,872,92,873,41,874,41,875,41,876,41,877,41,878,41,879,41,880,41,881,41,882,41,883,41,884,41,885,70,886,9,887,93,888,64,889,13,890,9,891,9,892,9,893,
  94,818,9,764,9,765,
  35,818,
  35,818,
  35,818,
  13,945,13,890,9,887,70,863,104,946,
  106,818,9,764,9,765,
  14,796,52,854,93,948,13,850,99,949,93,950,49,951,49,952,13,856,13,945,13,953,112,954,112,955,105,956,111,957,9,887,41,958,41,880,41,881,41,877,41,959,9,960,9,961,70,962,13,890,9,963,9,964,9,965,9,966,41,967,9,968,41,969,
  14,796,9,887,93,792,13,850,13,890,9,975,
  14,796,9,887,93,792,13,850,13,890,9,975,112,976,9,977,
  14,796,9,887,93,792,13,850,13,890,9,975,112,976,9,977,41,978,
  14,796,9,979,49,951,41,980,
  14,796,9,979,49,951,41,980,115,982,15,983,
  14,796,15,813,15,814,
  9,847,
  126,818,127,984,9,985,9,986,9,987,
  35,818,
  35,818,
  43,818,9,764,9,765,
  14,796,112,992,135,993,
  14,796,112,992,135,993,93,994,
  53,818,54,984,9,985,9,986,9,987,
  14,796,15,813,15,814,
  14,796,15,813,15,814,
  146,818,142,984,9,985,9,986,9,987,
  150,818,9,764,9,765,
  14,796,93,1001,135,993,
  14,796,15,1002,
  14,796,15,1002,159,1003,
  162,818,9,764,9,765,
  167,821,9,822,27,823,27,824,9,825,9,826,
  168,818,
  171,818,9,764,9,765,
  176,821,9,822,27,823,27,824,9,825,9,826,
  177,818,
  177,818,
  180,818,9,764,9,765,
  9,1005,9,1006,9,1007,9,1008,9,1009,9,1010,9,1011,9,1012,9,1013,9,1014,9,1015,9,1016,9,1017,9,1018,9,1019,9,1020,9,1021,9,1022,9,1023,9,1024,9,1025,9,1026,9,1027,9,1028,9,1029,9,1030,9,1031,9,1032,9,1033,9,1034,9,1035,9,1036,9,1037,9,1038,9,1039,9,1040,9,1041,9,1042,9,1043,9,1044,9,1045,9,1046,9,1047,9,1048,9,1049,9,1050,9,1051,9,1052,9,1053,9,1054,9,1055,9,1056,9,1057,9,1058,9,1059,9,1060,9,1061,9,1062,9,1063,9,1064,9,1065,9,1066,9,1067,9,1068,9,1069,9,1070,9,1071,9,1072,9,1073,9,1074,9,1075,9,1076,9,1077,9,1078,9,1079,9,1080,9,1081,9,1082,9,1083,9,1084,9,1085,9,1086,9,1087,9,1088,9,1089,9,1090,9,1091,9,1092,9,1093,9,1094,9,1095,9,1096,9,1097,9,1098,9,1099,9,1100,9,1101,9,1102,9,1103,9,1104,9,1105,9,1106,9,1107,9,1108,9,1109,9,1110,9,1111,9,1112,9,1113,9,1114,9,1115,9,1116,9,1117,9,1118,9,1119,9,1120,9,1121,9,1122,9,1123,9,1124,9,1125,9,1126,9,1127,9,1128,9,1129,9,1130,9,1131,9,1132,9,1133,9,1134,9,1135,9,1136,9,1137,9,1138,9,1139,9,1140,9,1141,9,1142,9,1143,9,1144,9,1145,9,1146,9,1147,9,1148,9,1149,9,1150,9,1151,9,1152,9,1153,9,1154,9,1155,9,1156,9,1157,9,1158,9,1159,9,1160,9,1161,9,1162,9,1163,9,1164,9,1165,9,1166,179,1167,184,1168,
  171,818,172,984,9,985,9,986,9,987,
  14,796,
  14,796,93,994,
  14,796,15,1002,93,1169,
  191,818,192,984,9,985,9,986,9,987,
  198,821,199,1170,
  27,1173,9,1174,
  208,818,9,764,9,765,
  35,818,
  35,818,
  9,849,13,850,
  213,1180,215,1181,217,1182,217,1183,217,1184,217,1185,217,1186,217,1187,217,1188,217,1189,217,1190,217,1191,217,1192,217,1193,217,1194,217,1195,217,1196,217,1197,217,1198,217,1199,217,1200,217,1201,217,1202,217,1203,217,1204,217,1205,217,1206,217,1207,217,1208,217,1209,217,1210,217,1211,217,1212,217,1213,217,1214,217,1215,217,1216,217,1217,217,1218,217,1219,217,1220,217,1221,217,1222,217,1223,217,1224,217,1225,217,1226,217,1227,217,1228,217,1229,217,1230,217,1231,217,1232,217,1233,217,1234,217,1235,217,1236,217,1237,217,1238,217,1239,217,1240,217,1241,217,1242,217,1243,217,1244,217,1245,217,1246,217,1247,217,1248,217,1249,217,1250,217,1251,217,1252,217,1253,217,1254,217,1255,217,1256,217,1257,217,1258,217,1259,217,1260,217,1261,217,1262,217,1263,217,1264,217,1265,217,1266,217,1267,217,1268,217,1269,217,1270,217,1271,217,1272,217,1273,217,1274,217,1275,217,1276,217,1277,217,1278,
  15,1279,
  13,1280,224,1281,5,1282,223,1283,9,1284,
  13,1280,224,1281,5,1282,223,1283,9,1284,
  226,818,9,764,9,765,
  14,796,9,887,93,792,13,850,13,890,9,975,93,948,52,854,15,1288,13,856,
  14,796,15,1002,
  14,796,15,1002,232,982,
  14,796,15,1002,232,982,
  200,1289,
  35,818,
  240,818,9,764,9,765,
  14,796,9,979,49,951,41,980,241,1290,
  14,796,
  14,796,244,1291,
  14,796,15,1002,232,982,
  14,796,15,1002,232,982,
  14,796,15,813,15,814,
  255,818,9,764,9,765,
  261,818,9,764,9,765,
  14,796,9,979,
  14,796,15,813,15,814,
  14,796,15,813,15,814,
  40,818,9,764,9,765,
  275,1295,
  13,1298,276,837,
  13,1298,276,837,
  13,1298,276,837,13,1299,10,794,9,1300,
  14,796,
  14,796,
  14,796,15,1302,232,982,
  14,796,15,1302,232,982,
  14,796,93,994,
  14,796,15,1303,15,766,15,1304,
  14,796,15,1303,15,766,15,1304,
  14,796,
  294,818,9,764,9,765,
  299,1170,
  14,796,15,813,15,814,
  14,796,15,813,15,814,
  304,821,305,1170,
  14,796,114,982,
  14,796,114,982,
  146,818,9,764,9,765,
  13,1309,312,1291,
  35,818,
  35,818,
  266,1310,
  266,1310,14,1303,314,1289,317,1312,
  14,796,15,1002,114,982,
  14,796,15,1002,114,982,
  35,818,
  35,818,
  35,818,
  35,818,
  35,818,
  35,818,
  35,818,
  330,818,9,764,9,765,
  184,1313,179,1314,
  323,1315,326,1316,328,1317,64,1318,329,1319,64,860,93,1320,93,1321,93,1322,64,1323,70,1324,334,1325,335,1326,335,1313,93,1327,93,1328,93,1329,93,1330,93,1331,93,1332,93,1333,93,1334,93,1335,93,1336,93,1337,93,1338,93,1339,93,1340,93,1341,93,1342,93,1343,93,1344,93,1345,93,1346,93,1347,93,1348,93,1349,93,1350,
  14,796,15,1002,
  14,796,15,1002,
  14,796,15,1303,15,766,15,1304,
  14,796,15,813,15,814,
  304,821,305,1170,
  70,1390,
  200,1289,
  35,818,
  14,796,
  355,818,9,764,9,765,
  357,1170,
  13,1298,276,837,
  14,796,15,813,15,814,
  330,818,331,984,9,985,9,986,9,987,
  14,796,15,813,15,814,
  13,1298,276,837,
  168,818,
  366,818,9,764,9,765,
  368,821,369,1170,
  13,1298,276,837,
  14,796,15,813,15,814,
  126,818,9,764,9,765,
  14,796,112,992,135,993,15,1302,
  14,796,112,992,135,993,15,1302,
  13,1309,70,1291,
  378,818,379,984,9,985,9,986,9,987,
  383,818,9,764,9,765,
  388,1170,9,1393,
  29,818,30,984,9,985,9,986,9,987,
  13,1309,266,1291,
  14,796,15,1002,93,994,
  393,818,9,764,9,765,
  261,818,262,984,9,985,9,986,9,987,
  14,796,114,982,
  14,796,114,982,15,1395,
  40,818,271,984,9,985,9,986,9,987,
  259,818,9,1396,
  99,949,
  41,1410,9,849,13,850,
  14,796,15,1411,
  14,796,15,813,15,814,
  14,796,15,1002,232,982,
  14,796,15,1002,
  14,796,27,1291,
  14,796,15,1002,
  294,818,295,984,9,985,9,986,9,987,
  14,796,135,993,
  9,1412,9,1413,9,1414,
  419,818,9,764,9,765,
  13,979,2,1416,
  280,818,9,764,9,765,
  14,796,93,994,15,1395,
  65,818,66,984,9,985,9,986,9,987,
  112,1417,367,1418,
  168,818,
  195,818,9,764,9,765,
  439,821,9,822,27,823,27,824,9,825,9,826,
  440,818,
  440,818,
  191,818,9,764,9,765,
  436,1421,64,1422,93,1423,112,1417,112,954,365,1424,438,1425,442,1426,443,1427,
  157,1428,9,1429,9,1430,9,1431,9,1432,13,1433,13,855,112,1417,41,1434,9,1435,
  106,818,107,984,9,985,9,986,9,987,
  14,796,15,813,15,814,
  14,796,159,1465,13,856,
  14,796,232,982,
  14,796,232,982,
  35,818,
  35,818,
  14,796,15,813,15,814,
  14,796,15,813,15,814,
  156,1466,244,1467,9,1468,
  9,1470,13,1471,460,1428,13,1472,9,1473,179,1474,231,1475,93,1423,112,1417,
  440,818,
  440,818,
  13,1487,13,1488,
  200,1289,
  13,1298,276,837,
  2,1309,9,1291,
  14,796,15,813,15,814,
  200,1289,
  13,1309,13,1291,
  14,796,9,979,49,951,41,980,15,1489,386,1490,49,1491,
  14,796,9,979,
  13,1492,
  13,1498,9,1499,184,1167,184,1500,483,1501,483,1502,184,1503,41,1504,41,1505,13,1506,13,1507,41,1508,13,1509,13,1471,184,1510,13,1511,13,1512,13,1322,41,1513,13,1514,
  71,818,72,984,9,985,9,986,9,987,
  486,818,28,984,9,985,9,986,9,987,
  14,796,15,1002,
  14,796,15,813,15,814,
  14,796,15,1002,
  14,796,15,1002,232,982,
  14,796,15,1002,232,982,
  14,796,9,1291,
  14,796,15,813,15,814,
  378,818,9,764,9,765,
  14,796,9,979,49,951,41,980,15,1411,500,1526,49,1527,41,1528,
  14,796,15,1002,93,1169,
  14,796,15,1302,
  14,796,504,1291,
  14,796,15,1002,
  14,796,41,1529,
  9,1530,9,1531,9,1532,9,1533,
  355,818,130,984,9,985,9,986,9,987,
  13,1309,224,1291,
  14,796,15,1002,
  13,1298,276,837,
  14,796,115,982,416,1536,
  13,1298,276,837,
  14,796,15,1002,
  13,1309,93,1291,
  14,796,135,833,49,951,
  14,796,15,813,15,814,
  224,1302,
  14,796,93,994,135,993,
  94,818,95,984,9,985,9,986,9,987,
  498,1537,
  14,796,15,813,15,814,
  440,818,
  440,818,
  337,818,9,764,9,765,
  9,762,9,763,9,794,9,990,
  9,762,9,763,9,794,9,990,9,1541,255,818,532,1542,
  43,818,44,984,9,985,9,986,9,987,
  14,796,9,887,13,1291,
  13,1546,9,985,9,986,
  43,818,44,984,9,985,9,986,9,987,
  9,1309,15,1291,
  14,796,9,979,
  14,796,9,979,
  14,796,9,979,49,951,41,980,115,982,15,983,
  14,796,93,994,135,993,
  512,1547,
  226,818,227,984,9,985,9,986,9,987,
  186,821,309,1170,
  13,1548,13,1299,9,762,
  382,818,549,984,9,985,9,986,9,987,
  14,796,15,1002,114,982,
  14,796,15,1002,114,982,
  35,818,
  35,818,
  259,818,
  13,1299,534,1289,14,1550,559,1551,41,1552,41,1553,403,1554,403,1555,403,1556,403,1557,
  266,1310,560,1572,14,1550,41,1573,443,1574,
  14,796,9,979,
  14,796,9,979,49,951,41,980,49,1580,49,1581,
  14,796,15,813,15,814,
  14,796,9,979,49,951,41,980,
  9,1582,9,1583,9,1584,9,1585,9,1586,9,1587,9,1588,
  104,1589,13,1590,
  9,1309,2,1291,
  14,796,415,1291,
  14,796,15,1002,
  157,1428,9,1429,9,1430,9,1431,9,1432,13,1433,13,855,13,1592,112,1417,
  14,796,114,982,
  13,1298,276,837,
  179,1600,102,1601,463,1602,
  382,818,9,764,9,765,
  255,818,11,984,9,985,9,986,9,987,
  14,796,112,992,135,993,15,1302,
  14,796,15,1002,41,1529,
  14,796,15,813,15,814,
  14,796,
  445,818,9,764,9,765,
  14,796,15,813,15,814,
  184,1607,533,1608,157,1609,
  150,818,151,984,9,985,9,986,9,987,
  94,818,95,984,9,985,9,986,9,987,
  383,818,243,984,9,985,9,986,9,987,
  14,796,114,982,
  14,796,9,979,49,951,41,980,15,1489,
  14,796,15,813,15,814,
  14,796,15,813,15,814,
  13,979,2,1416,2,760,27,1616,27,1617,
  457,1315,
  14,796,15,1002,93,1618,
  14,796,15,1002,93,1618,
  14,796,15,1302,232,982,15,1395,
  14,796,15,1002,9,979,
  14,796,15,1002,9,979,
  14,796,9,979,49,951,41,980,
  14,796,15,1002,232,982,
  14,796,15,1002,232,982,
  180,818,118,984,9,985,9,986,9,987,
  403,1619,26,833,403,1620,403,1621,403,1622,403,1623,403,1624,403,1625,403,1626,403,1627,
  14,796,15,1302,15,1628,
  13,1298,276,837,
  9,1412,9,1413,9,1414,
  14,796,15,1302,15,1628,15,1629,
  14,796,15,1002,114,982,
  14,796,15,1002,114,982,
  14,796,15,813,15,814,
  419,818,149,984,9,985,9,986,9,987,
  14,796,15,1002,114,982,
  14,796,15,1002,114,982,
  389,1630,423,1631,423,1632,423,1633,
  619,1550,41,1640,
  14,796,15,1002,
  35,818,
  13,1298,276,837,
  486,818,28,984,9,985,9,986,9,987,
  14,796,93,994,15,1642,
  14,796,619,1291,
  14,796,15,1002,
  14,796,13,1299,13,818,
  368,821,369,1170,
  13,1298,276,837,13,1299,10,794,9,1300,13,1643,10,1644,
  14,796,9,887,93,792,13,850,13,890,9,975,112,976,9,977,15,1645,
  14,796,15,1302,232,982,
  14,796,15,1002,9,979,
  13,1303,13,1646,13,766,
  14,796,52,854,13,850,184,859,9,1647,13,1648,266,1649,
  13,1309,637,1291,
  13,1298,276,837,
  14,796,41,1291,
  14,796,15,1489,49,951,
  13,1298,276,837,
  14,796,15,813,15,814,
  59,818,60,984,9,985,9,986,9,987,
  244,1650,244,1651,
  14,796,15,1002,
  14,796,114,982,
  157,1428,9,1429,9,1430,9,1431,9,1432,13,1433,13,855,112,1417,
  14,796,15,813,15,814,
  13,1656,13,997,
  9,1309,652,1291,
  13,1298,276,837,
  14,796,93,994,48,993,
  14,796,9,979,49,951,41,980,115,982,15,983,
  14,796,232,982,
  14,796,232,982,
  9,1303,9,766,9,1414,
  9,1303,9,766,9,1414,
  14,796,15,813,15,814,
  200,1289,
  14,796,15,1002,135,993,
  14,796,
  14,796,15,1002,93,1618,
  9,1294,9,1657,9,1658,9,1659,
  14,796,15,813,15,814,9,1660,
  14,796,115,982,15,1288,
  14,796,15,813,15,814,9,1660,
  14,796,115,982,
  14,796,15,813,15,814,
  14,796,15,813,15,814,
  244,1661,244,1662,
  14,796,41,1291,
  186,821,309,1170,
  9,1412,9,1413,9,1414,
  576,1180,557,1181,52,1664,52,1665,52,1666,52,1667,52,1668,52,1669,52,1670,52,1671,52,1672,52,1673,52,1674,52,1675,52,1676,52,1677,52,1678,52,1679,52,1680,52,1681,52,1682,52,1683,52,1684,52,1685,52,1686,52,1687,52,1688,52,1689,52,1690,52,1691,52,1692,52,1693,
  9,1309,9,1291,
  14,796,15,813,15,814,
  621,818,467,984,9,985,9,986,9,987,
  366,818,286,984,9,985,9,986,9,987,
  14,796,15,813,15,814,
  162,818,163,984,9,985,9,986,9,987,
  240,818,122,984,9,985,9,986,9,987,
  71,818,72,984,9,985,9,986,9,987,
  413,818,9,764,9,765,
  14,796,15,813,15,814,
  14,796,15,1002,
  14,796,15,813,15,814,
  2,1309,2,1291,
  14,796,
  9,979,9,887,41,1695,27,1616,27,1617,
  14,796,15,1303,15,766,15,1304,
  14,796,15,1002,114,982,
  14,796,15,1002,114,982,
  14,796,15,813,15,814,
  255,818,11,984,9,985,9,986,9,987,
  512,1547,
  14,796,15,813,15,814,
  13,1298,276,837,
  13,1298,276,837,
  186,821,309,1170,
  195,818,204,984,9,985,9,986,9,987,
  14,796,15,1302,232,982,
  533,1289,13,1550,
  13,1309,9,1291,
  200,1289,
  13,1309,105,1291,
  14,796,15,1303,15,766,15,1304,
  486,818,9,764,9,765,
  14,796,115,982,49,951,
  77,818,78,984,9,985,9,986,9,987,
  406,792,116,1697,13,1698,
  666,818,9,764,9,765,
  621,818,9,764,9,765,
  725,1170,
  14,796,15,1002,
  14,796,15,813,15,814,
  445,818,251,984,9,985,9,986,9,987,
  443,1699,443,1700,443,1701,443,1702,443,1703,443,1704,443,1705,443,1706,443,1707,443,1708,443,1709,443,1710,443,1711,443,1712,443,1713,528,1714,443,1715,318,1572,41,1716,718,1717,93,1423,112,1417,184,1718,373,1503,373,1719,373,1720,
  14,796,13,1802,135,993,
  193,1289,
  13,1309,112,1291,
  200,1289,
  13,1309,115,1291,
  13,1298,276,837,
  14,796,15,1002,232,982,
  14,796,15,1002,
  155,1170,
  13,1298,276,837,
  14,796,9,979,49,951,41,980,115,982,15,983,41,1804,
  9,1806,403,1807,403,1808,104,1809,
  14,796,93,994,13,979,15,1411,
  198,821,199,1170,
  666,818,203,984,9,985,9,986,9,987,
  13,1309,232,1291,
  690,1180,623,1181,406,1811,406,1812,406,1813,406,1814,406,1815,406,1816,406,1817,406,1818,406,1819,
  582,1820,
  14,796,48,993
};


void Object__hash_code();
static SlagInt32 Object__hash_code( SXCRef context );
static SlagObject* Object__create_duplicate( SXCRef context );
static SlagLogical Object__opEQ__Object( SXCRef context, SXCRef local_0_other );
static SlagInt32 Object__opCMP__Object( SXCRef context, SXCRef local_0_other );
void WeakReference__object();
static SlagObject* WeakReference__object( SXCRef context );
static SlagChar String__last( SXCRef context );
static SlagInt32 String__index_of__Char_Int32( SXCRef context, SlagChar local_0_value, SlagInt32 local_1_starting_index );
static SlagInt32 String__last_index_of__Char_Int32( SXCRef context, SlagChar local_0_value, SlagInt32 local_1_starting_index );
static SlagObject* String__init( SXCRef context );
void String__count();
static SlagInt32 String__count( SXCRef context );
void String__hash_code();
static SlagInt32 String__hash_code( SXCRef context );
void String__get__Int32();
static SlagChar String__get__Int32( SXCRef context, SlagInt32 local_0_index );
static SlagObject* String__consolidate( SXCRef context );
static SlagObject* String__to_String( SXCRef context );
static SlagInt32 String__modification_count( SXCRef context );
static SlagObject* String__create_duplicate( SXCRef context );
static SlagLogical String__opEQ__Object( SXCRef context, SXCRef local_0_other );
void String__opEQ__String();
static SlagLogical String__opEQ__String( SXCRef context, SXCRef local_0_other );
void String__opCMP__String();
static SlagInt32 String__opCMP__String( SXCRef context, SXCRef local_0_other );
void String__opADD__String();
static SlagObject* String__opADD__String( SXCRef context, SXCRef local_0_other );
void String__opADD__Char();
static SlagObject* String__opADD__Char( SXCRef context, SlagChar local_0_ch );
void String__substring__Int32_Int32();
static SlagObject* String__substring__Int32_Int32( SXCRef context, SlagInt32 local_0_first_index, SlagInt32 local_1_last_index );
static SlagObject* String__substring__Int32( SXCRef context, SlagInt32 local_0_first_index );
static SlagObject* String__reversed( SXCRef context );
static SlagInt32 String__index_of__String_Int32( SXCRef context, SXCRef local_0_other, SlagInt32 local_1_starting_index );
static SlagInt32 String__last_index_of__String_Int32( SXCRef context, SXCRef local_0_other, SlagInt32 local_1_starting_index );
static SlagLogical String__begins_with__Char( SXCRef context, SlagChar local_0_ch );
static SlagLogical String__ends_with__String( SXCRef context, SXCRef local_0_st );
static SlagLogical String__ends_with__Char( SXCRef context, SlagChar local_0_ch );
static SlagObject* String__replace__String_String( SXCRef context, SXCRef local_0_look_for, SXCRef local_1_replace_with );
static SlagObject* String__rightmost__Int32( SXCRef context, SlagInt32 local_0_num_chars );
static SlagObject* String__excluding_rightmost__Int32( SXCRef context, SlagInt32 local_0_num_chars );
static SlagObject* String__before_first__Char( SXCRef context, SlagChar local_0_ch );
static SlagObject* String__after_last__Char( SXCRef context, SlagChar local_0_ch );
static SlagObject* String__after_first__Char( SXCRef context, SlagChar local_0_ch );
static SlagObject* String__from_first__Char( SXCRef context, SlagChar local_0_ch );
static SlagObject* String__before_first__String( SXCRef context, SXCRef local_0_st );
static SlagObject* String__before_last__String( SXCRef context, SXCRef local_0_st );
static SlagObject* String__after_first__String( SXCRef context, SXCRef local_0_st );
static SlagObject* String__to_uppercase( SXCRef context );
static SlagObject* String__to_lowercase( SXCRef context );
static SlagObject* String__split__Char( SXCRef context, SlagChar local_0_divider_char );
static SlagObject* String__trim( SXCRef context );
static SlagObject* String__word_wrap__Int32( SXCRef context, SlagInt32 local_0_width );
static SlagObject* String__to_utf8( SXCRef context );
void String__to_Array();
static SlagObject* String__to_Array( SXCRef context );
static SlagObject* String__x_compatible( SXCRef context );
static SlagObject* Token__init__Int32_String_ParsePos_String( SXCRef context, SlagInt32 local_0_type_4667, SXCRef local_1_filename, CompoundParsePos local_2_pos_4666, SXCRef local_3_content_4665 );
static SlagObject* Token__create_duplicate( SXCRef context );
static SlagObject* Cmd__init__Token( SXCRef context, SXCRef local_0_t_6333 );
static SlagObject* Cmd__type( SXCRef context );
static SlagLogical Cmd__is_statement_list( SXCRef context );
static SlagObject* Cmd__error__String( SXCRef context, SXCRef local_0_mesg );
static SlagObject* Cmd__finalize_calls( SXCRef context );
static void Cmd__finalize_structure_info( SXCRef context );
static void Cmd__group_dynamic_methods( SXCRef context );
static SlagObject* Cmd__resolve( SXCRef context );
static SlagObject* Cmd__optimize( SXCRef context );
static SlagObject* Cmd__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagLogical Cmd__no_side_effects( SXCRef context );
static void Cmd__write_etc( SXCRef context );
static SlagObject* Cmd__to_cpp( SXCRef context );
static SlagObject* Cmd__statement_to_cpp( SXCRef context );
static SlagObject* Cmd__to_cs( SXCRef context );
static SlagObject* Cmd__statement_to_cs( SXCRef context );
static SlagObject* Cmd__to_java( SXCRef context );
static SlagObject* Cmd__statement_to_java( SXCRef context );
static SlagObject* CmdBinary__init__Token_Cmd_Cmd( SXCRef context, SXCRef local_0_t_7722, SXCRef local_1_lhs_7721, SXCRef local_2_rhs_7720 );
static SlagObject* CmdBinary__type( SXCRef context );
static SlagObject* CmdBinary__finalize_calls( SXCRef context );
static void CmdBinary__finalize_structure_info( SXCRef context );
static void CmdBinary__group_dynamic_methods( SXCRef context );
static SlagObject* CmdBinary__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__create_duplicate( SXCRef context );
static SlagObject* CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__resolve( SXCRef context );
static SlagObject* CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__optimize( SXCRef context );
static void CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__write_etc( SXCRef context );
static SlagObject* CmdLeftShifted__to_cpp( SXCRef context );
static SlagObject* CmdLeftShifted__to_cs( SXCRef context );
static SlagObject* CmdLeftShifted__to_java( SXCRef context );
void GenericArray__count();
static SlagInt32 GenericArray__count( SXCRef context );
void GenericArray__copy_from__GenericArray_Int32_Int32_Int32();
static void GenericArray__copy_from__GenericArray_Int32_Int32_Int32( SXCRef context, SXCRef local_0_src_array, SlagInt32 local_1_src_index, SlagInt32 local_2_dest_index, SlagInt32 local_3_number );
void GenericArray__clear__Int32_Int32();
static void GenericArray__clear__Int32_Int32( SXCRef context, SlagInt32 local_0_first_index, SlagInt32 local_1_last_index );
static SlagObject* Array_of_BigInt__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_BigInt__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_BigInt__create_duplicate( SXCRef context );
static SlagObject* Array_of_HashTableBin_of_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__to_String( SXCRef context );
static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__init( SXCRef context );
static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_HashTableBin_of_Object_and_Object__count( SXCRef context );
static SlagInt32 ArrayList_of_HashTableBin_of_Object_and_Object__modification_count( SXCRef context );
static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* GenericHashTable_of_Object_and_Object__init( SXCRef context );
static SlagObject* GenericHashTable_of_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size_3627 );
static void GenericHashTable_of_Object_and_Object__set__Object_Object( SXCRef context, SXCRef local_0_key, SXCRef local_1_value );
static void GenericHashTable_of_Object_and_Object__set__Mapping_of_Object_and_Object( SXCRef context, SXCRef local_0_entry );
static SlagObject* GenericHashTable_of_Object_and_Object__get__Object( SXCRef context, SXCRef local_0_key );
static SlagObject* GenericHashTable_of_Object_and_Object__find__Object( SXCRef context, SXCRef local_0_key );
static SlagLogical GenericHashTable_of_Object_and_Object__contains__Object( SXCRef context, SXCRef local_0_key );
static SlagObject* GenericHashTable_of_Object_and_Object__remove__Object( SXCRef context, SXCRef local_0_key );
static SlagObject* GenericHashTable_of_Object_and_Object__get_bin__Object( SXCRef context, SXCRef local_0_key );
static void GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object( SXCRef context, SXCRef local_0_other );
static void GenericHashTable_of_Object_and_Object__expand_table( SXCRef context );
static SlagObject* GenericHashTable_of_Object_and_Object__to_String( SXCRef context );
static SlagObject* GenericHashTable_of_Object_and_Object__values( SXCRef context );
static SlagObject* HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* MethodTable__get__String( SXCRef context, SXCRef local_0_key );
static void MethodTable__add__String_MethodInfo( SXCRef context, SXCRef local_0_key, SXCRef local_1_m );
static SlagObject* Array_of_Int64__create_duplicate( SXCRef context );
void System__exit_program__Int32_String();
static void System__exit_program__Int32_String( SXCRef context, SlagInt32 local_0_error_code, SXCRef local_1_mesg );
static SlagObject* System__stack_trace( SXCRef context );
void System__get__String();
static SlagObject* System__get__String( SXCRef context, SXCRef local_0_property_name );
void System__os();
static SlagObject* System__os( SXCRef context );
void System__raw_exe_filepath();
static SlagObject* System__raw_exe_filepath( SXCRef context );
static SlagObject* System__exe_filepath( SXCRef context );
static SlagObject* Array_of_Cmd__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_Cmd__last( SXCRef context );
static SlagObject* ArrayList_of_Cmd__add__Readable_of_Cmd( SXCRef context, SXCRef local_0_source );
static SlagObject* ArrayList_of_Cmd__format__String_String_String( SXCRef context, SXCRef local_0_prefix, SXCRef local_1_prepeat, SXCRef local_2_suffix );
static SlagObject* ArrayList_of_Cmd__format__String_String( SXCRef context, SXCRef local_0_str_format, SXCRef local_1_repeater_chars );
static SlagObject* ArrayList_of_Cmd__subset__Int32_Int32( SXCRef context, SlagInt32 local_0_first_index, SlagInt32 local_1_last_index );
static SlagObject* ArrayList_of_Cmd__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Cmd__create_reader( SXCRef context );
static SlagObject* ArrayList_of_Cmd__from__Int32( SXCRef context, SlagInt32 local_0_starting_index );
static SlagObject* ArrayList_of_Cmd__reverse_order( SXCRef context );
static SlagInt32 ArrayList_of_Cmd__count( SXCRef context );
static SlagInt32 ArrayList_of_Cmd__modification_count( SXCRef context );
static SlagObject* ArrayList_of_Cmd__create_duplicate( SXCRef context );
static SlagObject* CmdStatementList__init__Token_Int32( SXCRef context, SXCRef local_0_t_6403, SlagInt32 local_1_num_statements );
static SlagObject* CmdStatementList__init__Cmd( SXCRef context, SXCRef local_0_statement );
static SlagObject* CmdStatementList__create_duplicate( SXCRef context );
static SlagLogical CmdStatementList__is_statement_list( SXCRef context );
static SlagObject* CmdStatementList__trim_to_count( SXCRef context );
static SlagObject* CmdStatementList__resolve( SXCRef context );
static SlagObject* CmdStatementList__finalize_calls( SXCRef context );
static void CmdStatementList__finalize_structure_info( SXCRef context );
static void CmdStatementList__group_dynamic_methods( SXCRef context );
static SlagObject* CmdStatementList__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdStatementList__write_etc( SXCRef context );
static SlagObject* CmdStatementList__to_cpp( SXCRef context );
static SlagObject* CmdStatementList__to_cs( SXCRef context );
static SlagObject* CmdStatementList__to_java( SXCRef context );
static SlagInt32 Qualifiers__opCMP__Qualifiers( SXCRef context, SXCRef local_0_other );
static SlagInt32 Qualifiers__hash_code( SXCRef context );
static SlagObject* Qualifiers__init__Int32( SXCRef context, SlagInt32 local_0_flags_5554 );
static SlagObject* Qualifiers__init__Qualifiers( SXCRef context, SXCRef local_0_existing );
static SlagLogical Qualifiers__opEQ__Object( SXCRef context, SXCRef local_0_other );
static SlagObject* Array_of_ArrayList_of_Token__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_ArrayList_of_Token__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_ArrayList_of_Token__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_ArrayList_of_Token__count( SXCRef context );
static SlagInt32 ArrayList_of_ArrayList_of_Token__modification_count( SXCRef context );
static SlagObject* ArrayList_of_ArrayList_of_Token__create_duplicate( SXCRef context );
static SlagObject* Array_of_TypeInfo__create_duplicate( SXCRef context );
static SlagInt32 ArrayList_of_TypeInfo__index_of__TypeInfo_Int32( SXCRef context, SXCRef local_0_value, SlagInt32 local_1_starting_index );
static SlagObject* ArrayList_of_TypeInfo__add__Readable_of_TypeInfo( SXCRef context, SXCRef local_0_source );
static SlagObject* ArrayList_of_TypeInfo__remove_last( SXCRef context );
static SlagLogical ArrayList_of_TypeInfo__remove_value__TypeInfo( SXCRef context, SXCRef local_0_value );
static SlagObject* ArrayList_of_TypeInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_TypeInfo__create_reader( SXCRef context );
static SlagObject* ArrayList_of_TypeInfo__from__Int32( SXCRef context, SlagInt32 local_0_starting_index );
static SlagInt32 ArrayList_of_TypeInfo__count( SXCRef context );
static SlagInt32 ArrayList_of_TypeInfo__modification_count( SXCRef context );
static SlagObject* ArrayList_of_TypeInfo__create_duplicate( SXCRef context );
static SlagObject* Array_of_MethodInfo__create_duplicate( SXCRef context );
static SlagInt32 ArrayList_of_MethodInfo__index_of__MethodInfo_Int32( SXCRef context, SXCRef local_0_value, SlagInt32 local_1_starting_index );
static void ArrayList_of_MethodInfo__swap__Int32_Int32( SXCRef context, SlagInt32 local_0_index_a, SlagInt32 local_1_index_b );
static SlagObject* ArrayList_of_MethodInfo__add__Readable_of_MethodInfo( SXCRef context, SXCRef local_0_source );
static SlagLogical ArrayList_of_MethodInfo__remove_value__MethodInfo( SXCRef context, SXCRef local_0_value );
static SlagObject* ArrayList_of_MethodInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_MethodInfo__init__Int32_MethodInfo( SXCRef context, SlagInt32 local_0_initial_capacity, SXCRef local_1_content );
static SlagObject* ArrayList_of_MethodInfo__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_MethodInfo__count( SXCRef context );
static SlagInt32 ArrayList_of_MethodInfo__modification_count( SXCRef context );
static SlagObject* ArrayList_of_MethodInfo__create_duplicate( SXCRef context );
static SlagObject* Array_of_PropertyInfo__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_PropertyInfo__add__Readable_of_PropertyInfo( SXCRef context, SXCRef local_0_source );
static SlagObject* ArrayList_of_PropertyInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_PropertyInfo__create_reader( SXCRef context );
static SlagObject* ArrayList_of_PropertyInfo__from__Int32( SXCRef context, SlagInt32 local_0_starting_index );
static SlagObject* ArrayList_of_PropertyInfo__reverse_order( SXCRef context );
static SlagInt32 ArrayList_of_PropertyInfo__count( SXCRef context );
static SlagInt32 ArrayList_of_PropertyInfo__modification_count( SXCRef context );
static SlagObject* ArrayList_of_PropertyInfo__create_duplicate( SXCRef context );
static SlagObject* Array_of_CategoryInfo__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_CategoryInfo__add__Readable_of_CategoryInfo( SXCRef context, SXCRef local_0_source );
static SlagObject* ArrayList_of_CategoryInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_CategoryInfo__create_reader( SXCRef context );
static SlagObject* ArrayList_of_CategoryInfo__from__Int32( SXCRef context, SlagInt32 local_0_starting_index );
static SlagInt32 ArrayList_of_CategoryInfo__count( SXCRef context );
static SlagInt32 ArrayList_of_CategoryInfo__modification_count( SXCRef context );
static SlagObject* ArrayList_of_CategoryInfo__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__create_reader( SXCRef context );
static SlagObject* HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__create_reader( SXCRef context );
static SlagObject* Array_of_TypeMapping__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_TypeMapping__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_TypeMapping__create_duplicate( SXCRef context );
static SlagObject* TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token( SXCRef context, SXCRef local_0_t_6318, SXCRef local_1_name_6317, SXCRef local_2_qualifiers_6316, SXCRef local_3_substitution_tokens_6315 );
static SlagObject* TypeInfo__init__TypeInfo( SXCRef context, SXCRef local_0_existing );
static SlagObject* TypeInfo__base_name( SXCRef context );
static SlagLogical TypeInfo__is_valid_type( SXCRef context );
static SlagLogical TypeInfo__is_logical( SXCRef context );
static SlagLogical TypeInfo__is_numerical( SXCRef context );
static SlagLogical TypeInfo__is_real( SXCRef context );
static SlagLogical TypeInfo__is_integer( SXCRef context );
static SlagObject* TypeInfo__error__String( SXCRef context, SXCRef local_0_message );
static void TypeInfo__display( SXCRef context );
static SlagObject* TypeInfo__generic_type( SXCRef context );
static SlagObject* TypeInfo__base_class( SXCRef context );
static void TypeInfo__discover_runtime_types( SXCRef context );
static void TypeInfo__organize( SXCRef context );
static void TypeInfo__instantiate_templates__ArrayList_of_TypeTemplate( SXCRef context, SXCRef local_0_templates );
static void TypeInfo__incorporate_specialized_augment__TypeTemplate_HashTable_of_String_and_Token__( SXCRef context, SXCRef local_0_template, SXCRef local_1_mappings );
static void TypeInfo__collect_flat_base_types__TypeInfo( SXCRef context, SXCRef local_0_base_type );
static void TypeInfo__check_compound_dependencies( SXCRef context );
static void TypeInfo__collect_singletons__TypeInfo( SXCRef context, SXCRef local_0_s );
static void TypeInfo__resolve( SXCRef context );
static void TypeInfo__prep__Token( SXCRef context, SXCRef local_0_context_t );
static void TypeInfo__collect_properties( SXCRef context );
static void TypeInfo__inherit_aspect_properties__TypeInfo( SXCRef context, SXCRef local_0_base_type );
static void TypeInfo__collect_property__PropertyInfo( SXCRef context, SXCRef local_0_p );
static void TypeInfo__store_property_init__PropertyInfo_MethodInfo( SXCRef context, SXCRef local_0_p, SXCRef local_1_m_init_object );
static void TypeInfo__collect_methods( SXCRef context );
static void TypeInfo__organize_method__MethodInfo( SXCRef context, SXCRef local_0_m );
static void TypeInfo__collect_underlying_methods__TypeInfo( SXCRef context, SXCRef local_0_base_type );
static void TypeInfo__collect_overlaying_methods__TypeInfo( SXCRef context, SXCRef local_0_base_type );
static void TypeInfo__collect_method__MethodInfo_Logical( SXCRef context, SXCRef local_0_m, SlagLogical local_1_do_layering );
static SlagObject* TypeInfo__find_method__String( SXCRef context, SXCRef local_0_sig );
static SlagObject* TypeInfo__must_find_method__String( SXCRef context, SXCRef local_0_sig );
static SlagLogical TypeInfo__instance_of__TypeInfo( SXCRef context, SXCRef local_0_ancestor_type );
static SlagObject* TypeInfo__find_property__String( SXCRef context, SXCRef local_0_var_name );
static SlagObject* TypeInfo__manager_name( SXCRef context );
static SlagObject* TypeInfo__manager_class( SXCRef context );
static SlagObject* TypeInfo__reader_type( SXCRef context );
static SlagObject* TypeInfo__readable_type( SXCRef context );
static SlagObject* TypeInfo__find_reader_element_type( SXCRef context );
static SlagObject* TypeInfo__find_readable_element_type( SXCRef context );
static SlagLogical TypeInfo__is_lower_precision_than__TypeInfo( SXCRef context, SXCRef local_0_other );
static SlagLogical TypeInfo__is_compatible_with__TypeInfo( SXCRef context, SXCRef local_0_other );
static SlagObject* TypeInfo__x_name( SXCRef context );
static void TypeInfo__calculate_sizes_and_offsets( SXCRef context );
static SlagObject* TypeInfo__wiki_name( SXCRef context );
static SlagObject* TypeInfo__help_name( SXCRef context );
static SlagObject* TypeInfo__rename_lists__String( SXCRef context, SXCRef local_0_st );
static void TypeInfo__write_slagdoc( SXCRef context );
static void TypeInfo__write_help( SXCRef context );
static SlagObject* TypeInfo__build_slagdoc( SXCRef context );
static SlagObject* TypeInfo__build_help( SXCRef context );
static SlagObject* TypeInfo__anchor_name__String( SXCRef context, SXCRef local_0_st );
static SlagObject* TypeInfo__wiki_anchor__MethodInfo_Logical( SXCRef context, SXCRef local_0_m, SlagLogical local_1_short );
static SlagObject* TypeInfo__wiki_signature__MethodInfo_Logical( SXCRef context, SXCRef local_0_m, SlagLogical local_1_short );
static SlagObject* TypeInfo__help_signature__MethodInfo( SXCRef context, SXCRef local_0_m );
static SlagObject* TypeInfo__format_doc_comment__String_Logical( SXCRef context, SXCRef local_0_comment, SlagLogical local_1_first_sentence );
static SlagObject* TypeInfo__format_help_comment__String( SXCRef context, SXCRef local_0_comment );
static SlagObject* Array_of_ParameterInfo__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_ParameterInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_ParameterInfo__create_reader( SXCRef context );
static SlagObject* ArrayList_of_ParameterInfo__from__Int32( SXCRef context, SlagInt32 local_0_starting_index );
static SlagObject* ArrayList_of_ParameterInfo__reverse_order( SXCRef context );
static SlagInt32 ArrayList_of_ParameterInfo__count( SXCRef context );
static SlagInt32 ArrayList_of_ParameterInfo__modification_count( SXCRef context );
static SlagObject* ArrayList_of_ParameterInfo__get__Int32( SXCRef context, SlagInt32 local_0_index );
static SlagObject* ArrayList_of_ParameterInfo__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_String_and_String_and_Object_and_Object__init( SXCRef context );
static SlagObject* HashTableBase_of_String_and_String_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_String_and_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_String_and_String_and_Object_and_Object__to_String( SXCRef context );
static SlagObject* HashTableBase_of_String_and_String_and_Object_and_Object__create_reader( SXCRef context );
static SlagObject* HashSet_of_String__add__String( SXCRef context, SXCRef local_0_value );
static SlagObject* HashSet_of_String__create_reader( SXCRef context );
static SlagObject* MethodGroup__init__String_MethodInfo( SXCRef context, SXCRef local_0_signature_6406, SXCRef local_1_m );
static void MethodGroup__add__MethodInfo( SXCRef context, SXCRef local_0_m );
static void MethodGroup__mark_called( SXCRef context );
static SlagObject* Array_of_LocalVarInfo__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_LocalVarInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_LocalVarInfo__create_reader( SXCRef context );
static SlagObject* ArrayList_of_LocalVarInfo__from__Int32( SXCRef context, SlagInt32 local_0_starting_index );
static SlagInt32 ArrayList_of_LocalVarInfo__count( SXCRef context );
static SlagInt32 ArrayList_of_LocalVarInfo__modification_count( SXCRef context );
static SlagObject* ArrayList_of_LocalVarInfo__create_duplicate( SXCRef context );
static SlagObject* MethodInfo__init__Token_Qualifiers_TypeInfo_String( SXCRef context, SXCRef local_0_t_6423, SXCRef local_1_qualifiers_6422, SXCRef local_2_type_context_6421, SXCRef local_3_name_6420 );
static SlagObject* MethodInfo__create_duplicate( SXCRef context );
static SlagLogical MethodInfo__is_aspect_method( SXCRef context );
static SlagInt32 MethodInfo__min_params( SXCRef context );
static SlagObject* MethodInfo__base_return_type( SXCRef context );
static void MethodInfo__resolve( SXCRef context );
static void MethodInfo__resolve_overrides( SXCRef context );
static SlagLogical MethodInfo__resolve_if_ancestor_resolved( SXCRef context );
static SlagLogical MethodInfo__finalize_calls( SXCRef context );
static SlagLogical MethodInfo__finalize_structure_info( SXCRef context );
static SlagObject* MethodInfo__x_name( SXCRef context );
static void MethodInfo__calculate_local_var_offsets( SXCRef context );
static SlagObject* MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32( SXCRef context, SXCRef local_0_t_6847, SXCRef local_1_method_context_6846, SXCRef local_2_type_6845, SXCRef local_3_name_6844, SlagInt32 local_4_index_6843 );
static SlagObject* LocalVarInfo__x_name( SXCRef context );
static SlagObject* CmdStructure__init__Token_Int32_CmdStatementList( SXCRef context, SXCRef local_0_t_6791, SlagInt32 local_1_id_6790, SXCRef local_2_body_6789 );
static void CmdStructure__remap_id( SXCRef context );
static SlagObject* CmdStructure__finalize_calls( SXCRef context );
static void CmdStructure__finalize_structure_info( SXCRef context );
static void CmdStructure__group_dynamic_methods( SXCRef context );
static SlagObject* CmdStructure__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdForEach__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList( SXCRef context, SXCRef local_0_t_7647, SlagInt32 local_1_id_7646, SXCRef local_2_var_info_7645, SXCRef local_3_control_7644, SXCRef local_4_body_7643 );
static SlagObject* CmdForEach__resolve( SXCRef context );
static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__create_duplicate( SXCRef context );
static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__resolve( SXCRef context );
static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__optimize( SXCRef context );
static void CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__write_etc( SXCRef context );
static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_cpp( SXCRef context );
static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_cs( SXCRef context );
static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_java( SXCRef context );
static SlagObject* Array_of_SlagFile__create_duplicate( SXCRef context );
static SlagObject* ArrayReader_of_SlagFile__to_List( SXCRef context );
static SlagObject* ArrayReader_of_SlagFile__init__Collection_of_SlagFile_Array_of_SlagFile_Int32_Int32( SXCRef context, SXCRef local_0_collection_6812, SXCRef local_1_data_6811, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_SlagFile__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_SlagFile__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_SlagFile__remaining( SXCRef context );
static SlagObject* ArrayReader_of_SlagFile__read( SXCRef context );
static SlagObject* HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* CmdList__init__Int32( SXCRef context, SlagInt32 local_0_capacity );
static SlagObject* CmdList__init__Cmd( SXCRef context, SXCRef local_0_cmd );
static SlagObject* CmdList__init__Cmd_Cmd( SXCRef context, SXCRef local_0_cmd1, SXCRef local_1_cmd2 );
static SlagObject* CmdList__init__Cmd_Cmd_Cmd( SXCRef context, SXCRef local_0_cmd1, SXCRef local_1_cmd2, SXCRef local_2_cmd3 );
static SlagObject* CmdList__create_duplicate( SXCRef context );
static void CmdList__resolve( SXCRef context );
static void CmdList__finalize_calls( SXCRef context );
static void CmdList__finalize_structure_info( SXCRef context );
static void CmdList__group_dynamic_methods( SXCRef context );
static void CmdList__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdList__write_etc( SXCRef context );
static SlagObject* CmdList__to_cpp( SXCRef context );
static SlagObject* CmdList__to_cs( SXCRef context );
static SlagObject* CmdList__to_java( SXCRef context );
static SlagObject* CmdCall__type( SXCRef context );
static SlagObject* CmdNewObject__init__Token_TypeInfo_MethodInfo_CmdList( SXCRef context, SXCRef local_0_t_9321, SXCRef local_1_of_type_9320, SXCRef local_2_method_info_9319, SXCRef local_3_args_9318 );
static SlagObject* CmdNewObject__create_duplicate( SXCRef context );
static SlagObject* CmdNewObject__type( SXCRef context );
static SlagObject* CmdNewObject__resolve( SXCRef context );
static SlagObject* CmdNewObject__finalize_calls( SXCRef context );
static void CmdNewObject__finalize_structure_info( SXCRef context );
static void CmdNewObject__group_dynamic_methods( SXCRef context );
static SlagObject* CmdNewObject__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdNewObject__write_etc( SXCRef context );
static SlagObject* CmdNewObject__to_cpp( SXCRef context );
static SlagObject* CmdNewObject__to_cs( SXCRef context );
static SlagObject* CmdNewObject__to_java( SXCRef context );
static SlagObject* ArrayReader_of_ArrayList_of_Token__to_List( SXCRef context );
static SlagObject* ArrayReader_of_ArrayList_of_Token__init__Collection_of_ArrayList_of_Token_Array_of_ArrayList_of_Token_Int32_Int32( SXCRef context, SXCRef local_0_collection_6977, SXCRef local_1_data_6976, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_ArrayList_of_Token__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_ArrayList_of_Token__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_ArrayList_of_Token__remaining( SXCRef context );
static SlagObject* ArrayReader_of_ArrayList_of_Token__read( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__create_duplicate( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__resolve( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__optimize( SXCRef context );
static void CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__write_etc( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_cpp( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_cs( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_java( SXCRef context );
static SlagObject* Array_of_TypeTemplate__create_duplicate( SXCRef context );
static SlagObject* ArrayReader_of_TypeTemplate__to_List( SXCRef context );
static SlagObject* ArrayReader_of_TypeTemplate__init__Collection_of_TypeTemplate_Array_of_TypeTemplate_Int32_Int32( SXCRef context, SXCRef local_0_collection_8171, SXCRef local_1_data_8170, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_TypeTemplate__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_TypeTemplate__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_TypeTemplate__remaining( SXCRef context );
static SlagObject* ArrayReader_of_TypeTemplate__read( SXCRef context );
static SlagObject* Array_of_Mapping_of_Object_and_Int32__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_Mapping_of_Object_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Mapping_of_Object_and_Int32__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_Mapping_of_Object_and_Int32__count( SXCRef context );
static SlagInt32 ArrayList_of_Mapping_of_Object_and_Int32__modification_count( SXCRef context );
static SlagObject* ArrayList_of_Mapping_of_Object_and_Int32__create_duplicate( SXCRef context );
static void TextWriter__flush( SXCRef context );
static void TextWriter__close( SXCRef context );
static void TextWriter__write__Char( SXCRef context, SlagChar local_0_ch );
static void TextWriter__print__Char( SXCRef context, SlagChar local_0_ch );
static void TextWriter__print__String( SXCRef context, SXCRef local_0_st );
static void TextWriter__print__Object( SXCRef context, SXCRef local_0_obj );
static void TextWriter__println__String( SXCRef context, SXCRef local_0_st );
static void TextWriter__println__Object( SXCRef context, SXCRef local_0_obj );
static SlagObject* StdOutWriter__init( SXCRef context );
void StdOutWriter__write__Char();
static void StdOutWriter__write__Char( SXCRef context, SlagChar local_0_ch );
void StdOutWriter__print__Char();
static void StdOutWriter__print__Char( SXCRef context, SlagChar local_0_ch );
void StdOutWriter__print__String();
static void StdOutWriter__print__String( SXCRef context, SXCRef local_0_st );
void StdOutWriter__flush();
static void StdOutWriter__flush( SXCRef context );
static SlagObject* CmdConstruct__init__Token_TypeInfo_CmdList( SXCRef context, SXCRef local_0_t_6906, SXCRef local_1_type_or_id_6905, SXCRef local_2_args_6904 );
static SlagObject* CmdConstruct__init__Token_String_CmdList( SXCRef context, SXCRef local_0_t_6908, SXCRef local_1_name, SXCRef local_2_args_6907 );
static SlagObject* CmdConstruct__create_duplicate( SXCRef context );
static SlagObject* CmdConstruct__resolve( SXCRef context );
static SlagObject* CmdUnary__init__Token_Cmd( SXCRef context, SXCRef local_0_t_7176, SXCRef local_1_operand_7175 );
static SlagObject* CmdUnary__type( SXCRef context );
static SlagObject* CmdUnary__finalize_calls( SXCRef context );
static void CmdUnary__finalize_structure_info( SXCRef context );
static void CmdUnary__group_dynamic_methods( SXCRef context );
static SlagObject* CmdUnary__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdMemberAccess__init__Token_Cmd_CmdConstruct( SXCRef context, SXCRef local_0_t_7797, SXCRef local_1_operand_7796, SXCRef local_2_member_7795 );
static SlagObject* CmdMemberAccess__create_duplicate( SXCRef context );
static SlagObject* CmdMemberAccess__resolve( SXCRef context );
static SlagObject* Array_of_HashTableBin_of_Int32_and_Int32__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Int32__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_HashTableBin_of_Int32_and_Int32__count( SXCRef context );
static SlagInt32 ArrayList_of_HashTableBin_of_Int32_and_Int32__modification_count( SXCRef context );
static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Int32__create_duplicate( SXCRef context );
static SlagObject* GenericHashTable_of_Int32_and_Int32__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size_8661 );
static void GenericHashTable_of_Int32_and_Int32__set__Int32_Int32( SXCRef context, SlagInt32 local_0_key, SlagInt32 local_1_value );
static void GenericHashTable_of_Int32_and_Int32__set__Mapping_of_Int32_and_Int32( SXCRef context, SXCRef local_0_entry );
static SlagInt32 GenericHashTable_of_Int32_and_Int32__get__Int32( SXCRef context, SlagInt32 local_0_key );
static SlagLogical GenericHashTable_of_Int32_and_Int32__contains__Int32( SXCRef context, SlagInt32 local_0_key );
static SlagObject* GenericHashTable_of_Int32_and_Int32__get_bin__Int32( SXCRef context, SlagInt32 local_0_key );
static void GenericHashTable_of_Int32_and_Int32__add__GenericHashTable_of_Int32_and_Int32( SXCRef context, SXCRef local_0_other );
static void GenericHashTable_of_Int32_and_Int32__expand_table( SXCRef context );
static SlagObject* GenericHashTable_of_Int32_and_Int32__values( SXCRef context );
static SlagObject* HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__create_reader( SXCRef context );
static SlagObject* Array_of_HashTableBin_of_Object_and_Int32__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Int32__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_HashTableBin_of_Object_and_Int32__count( SXCRef context );
static SlagInt32 ArrayList_of_HashTableBin_of_Object_and_Int32__modification_count( SXCRef context );
static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Int32__create_duplicate( SXCRef context );
static SlagObject* GenericHashTable_of_Object_and_Int32__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size_4541 );
static void GenericHashTable_of_Object_and_Int32__set__Object_Int32( SXCRef context, SXCRef local_0_key, SlagInt32 local_1_value );
static void GenericHashTable_of_Object_and_Int32__set__Mapping_of_Object_and_Int32( SXCRef context, SXCRef local_0_entry );
static SlagInt32 GenericHashTable_of_Object_and_Int32__get__Object( SXCRef context, SXCRef local_0_key );
static SlagObject* GenericHashTable_of_Object_and_Int32__find__Object( SXCRef context, SXCRef local_0_key );
static SlagLogical GenericHashTable_of_Object_and_Int32__contains__Object( SXCRef context, SXCRef local_0_key );
static SlagObject* GenericHashTable_of_Object_and_Int32__get_bin__Object( SXCRef context, SXCRef local_0_key );
static void GenericHashTable_of_Object_and_Int32__add__GenericHashTable_of_Object_and_Int32( SXCRef context, SXCRef local_0_other );
static void GenericHashTable_of_Object_and_Int32__expand_table( SXCRef context );
static SlagObject* GenericHashTable_of_Object_and_Int32__values( SXCRef context );
static SlagObject* HashTableBase_of_String_and_Int32_and_Object_and_Int32__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_Int32_and_Object_and_Int32__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_String_and_Int32_and_Object_and_Int32__create_reader( SXCRef context );
static SlagObject* Array_of_String__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_String__last( SXCRef context );
static SlagInt32 ArrayList_of_String__index_of__String_Int32( SXCRef context, SXCRef local_0_value, SlagInt32 local_1_starting_index );
static SlagObject* ArrayList_of_String__add__Readable_of_String( SXCRef context, SXCRef local_0_source );
static SlagObject* ArrayList_of_String__copy_from__Readable_of_String( SXCRef context, SXCRef local_0_source );
static SlagObject* ArrayList_of_String__format__String_String_String( SXCRef context, SXCRef local_0_prefix, SXCRef local_1_prepeat, SXCRef local_2_suffix );
static SlagObject* ArrayList_of_String__format__String_String( SXCRef context, SXCRef local_0_str_format, SXCRef local_1_repeater_chars );
static SlagObject* ArrayList_of_String__init( SXCRef context );
static SlagObject* ArrayList_of_String__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_String__create_reader( SXCRef context );
static SlagObject* ArrayList_of_String__from__Int32( SXCRef context, SlagInt32 local_0_starting_index );
static SlagInt32 ArrayList_of_String__count( SXCRef context );
static SlagInt32 ArrayList_of_String__modification_count( SXCRef context );
static SlagObject* ArrayList_of_String__get__Int32( SXCRef context, SlagInt32 local_0_index );
static SlagObject* ArrayList_of_String__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_String__join__String( SXCRef context, SXCRef local_0_joiner );
static SlagObject* ArrayList_of_String__to_String( SXCRef context );
static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Int32__to_List( SXCRef context );
static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Int32__init__Collection_of_HashTableBin_of_Object_and_Int32_Array_of_HashTableBin_of_Object_and_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_5035, SXCRef local_1_data_5034, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Int32__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_HashTableBin_of_Object_and_Int32__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_HashTableBin_of_Object_and_Int32__remaining( SXCRef context );
static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Int32__read( SXCRef context );
static SlagObject* CmdTerm__resolve( SXCRef context );
static SlagObject* CmdTerm__finalize_calls( SXCRef context );
static void CmdTerm__finalize_structure_info( SXCRef context );
static void CmdTerm__group_dynamic_methods( SXCRef context );
static SlagObject* CmdTerm__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdThisReference__init__Token_TypeInfo( SXCRef context, SXCRef local_0_t_8875, SXCRef local_1_of_type_8874 );
static SlagObject* CmdThisReference__create_duplicate( SXCRef context );
static SlagObject* CmdThisReference__type( SXCRef context );
static SlagObject* CmdThisReference__resolve( SXCRef context );
static void CmdThisReference__finalize_structure_info( SXCRef context );
static SlagObject* CmdThisReference__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdThisReference__write_etc( SXCRef context );
static SlagObject* CmdThisReference__to_cpp( SXCRef context );
static SlagObject* CmdThisReference__to_cs( SXCRef context );
static SlagObject* CmdThisReference__to_java( SXCRef context );
static SlagObject* CmdCoerceAs__init__Token_Cmd_TypeInfo( SXCRef context, SXCRef local_0_t_7977, SXCRef local_1_operand_7976, SXCRef local_2_as_type_7975 );
static SlagObject* CmdCoerceAs__create_duplicate( SXCRef context );
static SlagObject* CmdCoerceAs__type( SXCRef context );
static SlagObject* CmdCoerceAs__resolve( SXCRef context );
static SlagObject* CmdCoerceAs__finalize_calls( SXCRef context );
static void CmdCoerceAs__write_etc( SXCRef context );
static SlagObject* CmdCoerceAs__statement_to_cpp( SXCRef context );
static SlagObject* CmdCoerceAs__to_cpp( SXCRef context );
static SlagObject* CmdCoerceAs__statement_to_cs( SXCRef context );
static SlagObject* CmdCoerceAs__to_cs( SXCRef context );
static SlagObject* CmdCoerceAs__statement_to_java( SXCRef context );
static SlagObject* CmdCoerceAs__to_java( SXCRef context );
static SlagObject* Array_of_Int32__create_duplicate( SXCRef context );
static SlagObject* ArrayReader_of_Int32__to_List( SXCRef context );
static SlagObject* ArrayReader_of_Int32__init__Collection_of_Int32_Array_of_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_6699, SXCRef local_1_data_6698, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_Int32__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Int32__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_Int32__remaining( SXCRef context );
static SlagInt32 ArrayReader_of_Int32__read( SXCRef context );
static SlagObject* Array_of_HashTableBin_of_Int32_and_Object__create_duplicate( SXCRef context );
static SlagInt32 HashTableValueReader_of_Int32_and_Object__available( SXCRef context );
static SlagObject* HashTableValueReader_of_Int32_and_Object__to_List( SXCRef context );
static SlagObject* HashTableValueReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object( SXCRef context, SXCRef local_0_bins_7056 );
static void HashTableValueReader_of_Int32_and_Object__prep_next( SXCRef context );
static SlagLogical HashTableValueReader_of_Int32_and_Object__has_another( SXCRef context );
static SlagObject* HashTableValueReader_of_Int32_and_Object__read( SXCRef context );
void Math__floor__Real64();
static SlagReal64 Math__floor__Real64( SXCRef context, SlagReal64 local_0_n );
static SlagReal64 Math__fractional_part__Real64( SXCRef context, SlagReal64 local_0_n );
static SlagInt32 Math__max__Int32_Int32( SXCRef context, SlagInt32 local_0_a, SlagInt32 local_1_b );
static SlagLogical Math__is_NaN__Real64( SXCRef context, SlagReal64 local_0_n );
static SlagInt32 Math__unique_Int32( SXCRef context );
static SlagObject* Array_of_CMD__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_CMD__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_CMD__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_String_and_CMD_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_CMD_and_Object_and_Object__create_duplicate( SXCRef context );
static SlagInt32 CMD__opCMP__CMD( SXCRef context, SXCRef local_0_other );
static SlagInt32 CMD__hash_code( SXCRef context );
static SlagObject* Enum_of_CMD__prep__CMD_String( SXCRef context, SXCRef local_0_category, SXCRef local_1_name );
static SlagObject* SignalHandler__init__String_Int32( SXCRef context, SXCRef local_0_event_id_4278, SlagInt32 local_1_order_4277 );
static void SignalHandler__on__Signal( SXCRef context, SXCRef local_0_signal );
static SlagObject* SignalHandler__handle__Signal( SXCRef context, SXCRef local_0_signal );
static void SpecializedSignalHandler_460__on__Signal( SXCRef context, SXCRef local_0_s );
static SlagObject* Array_of_ParamInfo__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_ParamInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_ParamInfo__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_ParamInfo__count( SXCRef context );
static SlagInt32 ArrayList_of_ParamInfo__modification_count( SXCRef context );
static SlagObject* ArrayList_of_ParamInfo__create_duplicate( SXCRef context );
static SlagObject* PropertyInfo__init__Token_TypeInfo_Qualifiers_TypeInfo_String_Cmd_Int32( SXCRef context, SXCRef local_0_t_6898, SXCRef local_1_type_context_6897, SXCRef local_2_qualifiers_6896, SXCRef local_3_type_6895, SXCRef local_4_name_6894, SXCRef local_5_initial_value_6893, SlagInt32 local_6_index_6892 );
static SlagObject* PropertyInfo__create_duplicate( SXCRef context );
static SlagObject* PropertyInfo__x_name( SXCRef context );
static SlagObject* CmdStatementWithOperand__finalize_calls( SXCRef context );
static void CmdStatementWithOperand__finalize_structure_info( SXCRef context );
static void CmdStatementWithOperand__group_dynamic_methods( SXCRef context );
static SlagObject* CmdStatementWithOperand__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__init__Token_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9531, SXCRef local_1_var_info_9530, SXCRef local_2_operand_9529 );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__create_duplicate( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__resolve( SXCRef context );
static void CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__finalize_structure_info( SXCRef context );
static void CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__write_etc( SXCRef context );
static SlagObject* CmdThisPropertySubAndAssign__to_cpp( SXCRef context );
static SlagObject* CmdThisPropertySubAndAssign__to_cs( SXCRef context );
static SlagObject* CmdThisPropertySubAndAssign__to_java( SXCRef context );
static SlagInt32 CoerceReader_of_PropertyInfo__available( SXCRef context );
static SlagObject* CoerceReader_of_PropertyInfo__to_List( SXCRef context );
static SlagObject* CoerceReader_of_PropertyInfo__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_6971 );
static SlagLogical CoerceReader_of_PropertyInfo__has_another( SXCRef context );
static SlagObject* CoerceReader_of_PropertyInfo__read( SXCRef context );
static SlagObject* HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* Array_of_CmdCatch__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_CmdCatch__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_CmdCatch__create_reader( SXCRef context );
static SlagObject* ArrayList_of_CmdCatch__from__Int32( SXCRef context, SlagInt32 local_0_starting_index );
static SlagInt32 ArrayList_of_CmdCatch__count( SXCRef context );
static SlagInt32 ArrayList_of_CmdCatch__modification_count( SXCRef context );
static SlagObject* ArrayList_of_CmdCatch__create_duplicate( SXCRef context );
static SlagObject* CmdTry__create_duplicate( SXCRef context );
static SlagObject* CmdTry__resolve( SXCRef context );
static SlagObject* CmdTry__finalize_calls( SXCRef context );
static void CmdTry__finalize_structure_info( SXCRef context );
static void CmdTry__group_dynamic_methods( SXCRef context );
static SlagObject* CmdTry__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdTry__write_etc( SXCRef context );
static SlagObject* CmdTry__to_cpp( SXCRef context );
static SlagObject* CmdTry__to_cs( SXCRef context );
static SlagObject* CmdTry__to_java( SXCRef context );
static SlagObject* CmdLiteralInt64__init__Token_Int64( SXCRef context, SXCRef local_0_t_7244, SlagInt64 local_1_value_7243 );
static SlagObject* CmdLiteralInt64__create_duplicate( SXCRef context );
static SlagObject* CmdLiteralInt64__type( SXCRef context );
static void CmdLiteralInt64__write_etc( SXCRef context );
static SlagObject* CmdLiteralInt64__to_cpp( SXCRef context );
static SlagObject* CmdLiteralInt64__to_cs( SXCRef context );
static SlagObject* CmdLiteralInt64__to_java( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__init__Token_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9535, SXCRef local_1_var_info_9534, SXCRef local_2_operand_9533 );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__create_duplicate( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__resolve( SXCRef context );
static void CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__finalize_structure_info( SXCRef context );
static void CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__write_etc( SXCRef context );
static SlagObject* CmdThisPropertyMulAndAssign__to_cpp( SXCRef context );
static SlagObject* CmdThisPropertyMulAndAssign__to_cs( SXCRef context );
static SlagObject* CmdThisPropertyMulAndAssign__to_java( SXCRef context );
static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__create_duplicate( SXCRef context );
static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__resolve( SXCRef context );
static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__optimize( SXCRef context );
static void CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__write_etc( SXCRef context );
static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_cpp( SXCRef context );
static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_cs( SXCRef context );
static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_java( SXCRef context );
static SlagObject* Array_of_Char__create_duplicate( SXCRef context );
static SlagChar ArrayList_of_Char__last( SXCRef context );
static void ArrayList_of_Char__swap__Int32_Int32( SXCRef context, SlagInt32 local_0_index_a, SlagInt32 local_1_index_b );
static SlagChar ArrayList_of_Char__remove_last( SXCRef context );
static void ArrayList_of_Char__reverse( SXCRef context );
static SlagObject* ArrayList_of_Char__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Char__init__Array_of_Char_Logical( SXCRef context, SXCRef local_0_array, SlagLogical local_1_make_copy );
static SlagObject* ArrayList_of_Char__create_reader( SXCRef context );
static SlagObject* ArrayList_of_Char__reverse_order( SXCRef context );
static SlagInt32 ArrayList_of_Char__count( SXCRef context );
static SlagInt32 ArrayList_of_Char__modification_count( SXCRef context );
static void ArrayList_of_Char__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_min_capacity );
static SlagObject* ArrayList_of_Char__insert__Char_Int32( SXCRef context, SlagChar local_0_value, SlagInt32 local_1_before_index );
static SlagChar ArrayList_of_Char__remove__Int32( SXCRef context, SlagInt32 local_0_index );
static SlagObject* ArrayList_of_Char__create_duplicate( SXCRef context );
static SlagObject* Array_of_Token__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_Token__add__Readable_of_Token( SXCRef context, SXCRef local_0_source );
static SlagObject* ArrayList_of_Token__remove_last( SXCRef context );
static SlagObject* ArrayList_of_Token__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Token__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_Token__count( SXCRef context );
static SlagInt32 ArrayList_of_Token__modification_count( SXCRef context );
static SlagObject* ArrayList_of_Token__get__Int32( SXCRef context, SlagInt32 local_0_index );
static SlagObject* ArrayList_of_Token__create_duplicate( SXCRef context );
static SlagObject* CmdStructureControl__init__Token_Int32( SXCRef context, SXCRef local_0_t_7675, SlagInt32 local_1_id_7674 );
static SlagObject* CmdStructureControl__resolve( SXCRef context );
static SlagObject* CmdStructureControl__finalize_calls( SXCRef context );
static void CmdStructureControl__finalize_structure_info( SXCRef context );
static void CmdStructureControl__group_dynamic_methods( SXCRef context );
static SlagObject* CmdStructureControl__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdCompare__create_duplicate( SXCRef context );
static SlagObject* CmdCompare__type( SXCRef context );
static SlagObject* CmdCompare__resolve( SXCRef context );
static SlagObject* CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__create_duplicate( SXCRef context );
static SlagObject* CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__resolve( SXCRef context );
static SlagObject* CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__optimize( SXCRef context );
static void CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__write_etc( SXCRef context );
static SlagObject* ArrayList_of_Int64__to_String( SXCRef context );
static SlagObject* ArrayList_of_Int64__init( SXCRef context );
static SlagObject* ArrayList_of_Int64__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Int64__init__Array_of_Int64_Logical( SXCRef context, SXCRef local_0_array, SlagLogical local_1_make_copy );
static SlagObject* ArrayList_of_Int64__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_Int64__count( SXCRef context );
static SlagInt32 ArrayList_of_Int64__modification_count( SXCRef context );
static void ArrayList_of_Int64__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_min_capacity );
static SlagObject* ArrayList_of_Int64__create_duplicate( SXCRef context );
static SlagObject* StackTrace__init( SXCRef context );
static SlagObject* StackTrace__to_String__Logical( SXCRef context, SlagLogical local_0_full_trace );
void StackTrace__native_history();
static SlagObject* StackTrace__native_history( SXCRef context );
void StackTrace__describe__Int64();
static SlagObject* StackTrace__describe__Int64( SXCRef context, SlagInt64 local_0_ip );
static SlagObject* SlagError__init__Token_String( SXCRef context, SXCRef local_0_t, SXCRef local_1_message_5222 );
static SlagObject* SlagError__init__String_String( SXCRef context, SXCRef local_0_filename_5224, SXCRef local_1_message_5223 );
static SlagObject* SlagError__get_context__String_ParsePos( SXCRef context, SXCRef local_0_fname, CompoundParsePos local_1_p );
static SlagObject* Array_of_Byte__create_duplicate( SXCRef context );
static SlagObject* CmdLiteralNull__init__Token( SXCRef context, SXCRef local_0_t_7927 );
static SlagObject* CmdLiteralNull__create_duplicate( SXCRef context );
static SlagObject* CmdLiteralNull__type( SXCRef context );
static void CmdLiteralNull__write_etc( SXCRef context );
static SlagObject* CmdLiteralNull__to_cpp( SXCRef context );
static SlagObject* CmdLiteralNull__to_cs( SXCRef context );
static SlagObject* CmdLiteralNull__to_java( SXCRef context );
static SlagObject* CmdMemberVarAccess__finalize_calls( SXCRef context );
static void CmdMemberVarAccess__finalize_structure_info( SXCRef context );
static void CmdMemberVarAccess__group_dynamic_methods( SXCRef context );
static SlagObject* CmdMemberVarAccess__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdMemberVarRead__init__Token_Cmd_PropertyInfo( SXCRef context, SXCRef local_0_t_9255, SXCRef local_1_context_9254, SXCRef local_2_var_info_9253 );
static SlagObject* CmdMemberVarRead__type( SXCRef context );
static SlagObject* CmdSingletonReference__init__Token_TypeInfo( SXCRef context, SXCRef local_0_t_8444, SXCRef local_1_of_type_8443 );
static SlagObject* CmdSingletonReference__create_duplicate( SXCRef context );
static SlagObject* CmdSingletonReference__type( SXCRef context );
static SlagObject* CmdSingletonReference__resolve( SXCRef context );
static SlagObject* CmdSingletonReference__finalize_calls( SXCRef context );
static SlagObject* CmdSingletonReference__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdSingletonReference__write_etc( SXCRef context );
static SlagObject* CmdSingletonReference__to_cpp( SXCRef context );
static SlagObject* CmdSingletonReference__to_cs( SXCRef context );
static SlagObject* CmdSingletonReference__to_java( SXCRef context );
static SlagObject* CmdRange__init__Token_Cmd_Cmd_Cmd( SXCRef context, SXCRef local_0_t_8001, SXCRef local_1_first_8000, SXCRef local_2_last_7999, SXCRef local_3_increment_7998 );
static SlagObject* CmdRange__type( SXCRef context );
static SlagObject* CmdRange__resolve_range__String_Int32( SXCRef context, SXCRef local_0_range_name, SlagInt32 local_1_default_increment );
static SlagObject* CmdRangeLE__create_duplicate( SXCRef context );
static SlagObject* CmdRangeLE__resolve( SXCRef context );
static SlagObject* CmdStatement__finalize_calls( SXCRef context );
static void CmdStatement__finalize_structure_info( SXCRef context );
static void CmdStatement__group_dynamic_methods( SXCRef context );
static SlagObject* CmdStatement__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* Array_of_Mapping_of_Int32_and_Int32__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_Mapping_of_Int32_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Mapping_of_Int32_and_Int32__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_Mapping_of_Int32_and_Int32__count( SXCRef context );
static SlagInt32 ArrayList_of_Mapping_of_Int32_and_Int32__modification_count( SXCRef context );
static SlagObject* ArrayList_of_Mapping_of_Int32_and_Int32__create_duplicate( SXCRef context );
static SlagObject* HashTableBin_of_Int32_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagInt32 HashTableBin_of_Int32_and_Int32__index_of_entry__Int32( SXCRef context, SlagInt32 local_0_key );
static SlagObject* HashTableBin_of_Int32_and_Int32__find_entry__Int32( SXCRef context, SlagInt32 local_0_key );
static SlagLogical HashTableBin_of_Int32_and_Int32__add_entry__Int32_Int32( SXCRef context, SlagInt32 local_0_key, SlagInt32 local_1_value );
static SlagLogical HashTableBin_of_Int32_and_Int32__add_entry__Mapping_of_Int32_and_Int32( SXCRef context, SXCRef local_0_entry );
static SlagObject* CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__create_duplicate( SXCRef context );
static SlagObject* CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__resolve( SXCRef context );
static SlagObject* CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__optimize( SXCRef context );
static void CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__write_etc( SXCRef context );
static SlagObject* CmdCmpEQ__to_cpp( SXCRef context );
static SlagObject* CmdCmpEQ__to_cs( SXCRef context );
static SlagObject* CmdCmpEQ__to_java( SXCRef context );
static SlagInt32 HashTableValueReader_of_Int32_and_Int32__available( SXCRef context );
static SlagObject* HashTableValueReader_of_Int32_and_Int32__to_List( SXCRef context );
static SlagObject* HashTableValueReader_of_Int32_and_Int32__init__Reader_of_HashTableBin_of_Int32_and_Int32( SXCRef context, SXCRef local_0_bins_8814 );
static void HashTableValueReader_of_Int32_and_Int32__prep_next( SXCRef context );
static SlagLogical HashTableValueReader_of_Int32_and_Int32__has_another( SXCRef context );
static SlagInt32 HashTableValueReader_of_Int32_and_Int32__read( SXCRef context );
static SlagObject* CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo( SXCRef context, SXCRef local_0_t_9451, SXCRef local_1_var_info_9450 );
static SlagObject* CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__create_duplicate( SXCRef context );
static SlagObject* CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__resolve( SXCRef context );
static void CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__finalize_structure_info( SXCRef context );
static void CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__write_etc( SXCRef context );
static SlagObject* CmdLocalVarIncrement__to_cpp( SXCRef context );
static SlagObject* CmdLocalVarIncrement__to_cs( SXCRef context );
static SlagObject* CmdLocalVarIncrement__to_java( SXCRef context );
static SlagObject* ArrayList_of_TypeTemplate__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_TypeTemplate__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_TypeTemplate__count( SXCRef context );
static SlagInt32 ArrayList_of_TypeTemplate__modification_count( SXCRef context );
static SlagObject* ArrayList_of_TypeTemplate__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_String_and_Token___and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_Token___and_Object_and_Object__create_duplicate( SXCRef context );
static SlagInt32 TokenReader__available( SXCRef context );
static SlagObject* TokenReader__to_List( SXCRef context );
static SlagLogical TokenReader__has_another( SXCRef context );
static SlagObject* TokenReader__peek__Int32( SXCRef context, SlagInt32 local_0_reads_ahead );
static SlagObject* TokenReader__read( SXCRef context );
static SlagObject* TemplateReader__init__ArrayList_of_Token_HashTable_of_String_and_Token__( SXCRef context, SXCRef local_0_tokens, SXCRef local_1_mappings_8131 );
static void TemplateReader__prep_next( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9469, SXCRef local_1_var_info_9468, SXCRef local_2_operand_9467 );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__create_duplicate( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__resolve( SXCRef context );
static void CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__finalize_structure_info( SXCRef context );
static void CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__write_etc( SXCRef context );
static SlagObject* CmdLocalVarDivAndAssign__to_cpp( SXCRef context );
static SlagObject* CmdLocalVarDivAndAssign__to_cs( SXCRef context );
static SlagObject* CmdLocalVarDivAndAssign__to_java( SXCRef context );
static SlagObject* HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__create_reader( SXCRef context );
static SlagObject* HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__values( SXCRef context );
static SlagObject* HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* Array_of_MethodGroup__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_MethodGroup__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_MethodGroup__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_MethodGroup__count( SXCRef context );
static SlagInt32 ArrayList_of_MethodGroup__modification_count( SXCRef context );
static SlagObject* ArrayList_of_MethodGroup__create_duplicate( SXCRef context );
static SlagObject* StringTable__create_reader( SXCRef context );
static SlagInt32 StringTable__get__String( SXCRef context, SXCRef local_0_st );
static void TypeManager__init_singleton( SXCRef context );
static void TypeManager__store__TypeTemplate( SXCRef context, SXCRef local_0_template );
static void TypeManager__store_framework__TypeTemplate( SXCRef context, SXCRef local_0__framework );
static SlagObject* TypeManager__get__String_Token( SXCRef context, SXCRef local_0_type_name, SXCRef local_1_t );
static SlagObject* TypeManager__get_type_reference__Token_String_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_name, SXCRef local_2_subst_type );
static SlagObject* TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token( SXCRef context, SXCRef local_0_t, SXCRef local_1_name, SXCRef local_2_substitution_tokens );
static SlagObject* TypeManager__define_type__TypeInfo( SXCRef context, SXCRef local_0_type );
static SlagObject* Array_of_Object__create_duplicate( SXCRef context );
static SlagLogical SlagAnalyzer__analyze_parsed_types( SXCRef context );
static void SlagAnalyzer__collect_type__TypeInfo( SXCRef context, SXCRef local_0_type );
static void SlagAnalyzer__store_general_augments( SXCRef context );
static SlagObject* SlagAnalyzer__make_zero_value__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_for_type );
static SlagObject* SlagAnalyzer__visit_with_implicit_context__Cmd_TypeInfo( SXCRef context, SXCRef local_0_cmd, SXCRef local_1_type );
static SlagObject* SlagAnalyzer__require_value__Cmd( SXCRef context, SXCRef local_0_expr );
static void SlagAnalyzer__require_value__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type );
static void SlagAnalyzer__require_reference__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type );
static SlagObject* SlagAnalyzer__bad_value_mesg__Cmd_String_Token( SXCRef context, SXCRef local_0_cmd, SXCRef local_1_expected, SXCRef local_2_t );
static SlagObject* SlagAnalyzer__bad_value_mesg__Token_TypeInfo_String( SXCRef context, SXCRef local_0_t, SXCRef local_1_type, SXCRef local_2_expected );
static void SlagAnalyzer__require_standard_numerical__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type );
static void SlagAnalyzer__require_standard_primitive__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type );
static void SlagAnalyzer__require_standard_integer__Cmd( SXCRef context, SXCRef local_0_cmd );
static void SlagAnalyzer__require_standard_integer_or_logical__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type );
static SlagObject* SlagAnalyzer__require_type__Cmd_TypeInfo( SXCRef context, SXCRef local_0_cmd, SXCRef local_1_required_type );
static void SlagAnalyzer__require_int32__Cmd( SXCRef context, SXCRef local_0_cmd );
static void SlagAnalyzer__require_logical__Cmd_Token( SXCRef context, SXCRef local_0_expr, SXCRef local_1_t );
static SlagLogical SlagAnalyzer__type_is_standard_numerical__TypeInfo( SXCRef context, SXCRef local_0_type );
static SlagObject* SlagAnalyzer__cast_compatible__Cmd_TypeInfo( SXCRef context, SXCRef local_0_value, SXCRef local_1_to_type );
static SlagObject* SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical( SXCRef context, SXCRef local_0_code, SXCRef local_1_to_type, SlagLogical local_2_allow_logical );
static SlagObject* SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary( SXCRef context, SXCRef local_0_cmd );
static SlagObject* SlagAnalyzer__cast_operands_to_standard_value_types__CmdBinary( SXCRef context, SXCRef local_0_cmd );
static SlagObject* SlagAnalyzer__cast_operands_to_standard_integer_or_logical__CmdBinary( SXCRef context, SXCRef local_0_cmd );
static SlagObject* SlagAnalyzer__determine_compatible_op_type__Token_Cmd_Cmd( SXCRef context, SXCRef local_0_t, SXCRef local_1_lhs, SXCRef local_2_rhs );
static SlagObject* SlagAnalyzer__determine_compatible_op_type__Token_TypeInfo_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_lhs_type, SXCRef local_2_rhs_type );
static SlagObject* SlagAnalyzer__prep_binary_operator__CmdBinary_String( SXCRef context, SXCRef local_0_cmd, SXCRef local_1_operator_method_name );
static SlagObject* SlagAnalyzer__operator_method_check__CmdBinary_String( SXCRef context, SXCRef local_0_cmd, SXCRef local_1_op_name );
static SlagObject* SlagAnalyzer__create_property_get__Token_TypeInfo_Cmd_String( SXCRef context, SXCRef local_0_t, SXCRef local_1_type, SXCRef local_2_context, SXCRef local_3_name );
static SlagObject* SlagAnalyzer__create_property_set__Token_TypeInfo_Cmd_String_Cmd( SXCRef context, SXCRef local_0_t, SXCRef local_1_type, SXCRef local_2_context, SXCRef local_3_name, SXCRef local_4_new_value );
static SlagObject* SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList( SXCRef context, SXCRef local_0_t, SXCRef local_1_type_context, SXCRef local_2_context, SXCRef local_3_method_name, SXCRef local_4_args );
static SlagObject* SlagAnalyzer__create_call_signature__CmdList( SXCRef context, SXCRef local_0_args );
static SlagLogical SlagAnalyzer__other_method_closer_precision__MethodInfo_CmdList_ArrayList_of_MethodInfo( SXCRef context, SXCRef local_0_m1, SXCRef local_1_args, SXCRef local_2_m_candidates );
static SlagLogical SlagAnalyzer__other_method_improves_precision__MethodInfo_CmdList_ArrayList_of_MethodInfo( SXCRef context, SXCRef local_0_m1, SXCRef local_1_args, SXCRef local_2_m_candidates );
static SlagLogical SlagAnalyzer__other_method_improves_references__MethodInfo_CmdList_ArrayList_of_MethodInfo( SXCRef context, SXCRef local_0_m1, SXCRef local_1_args, SXCRef local_2_m_candidates );
static SlagObject* SlagAnalyzer__find_common_element_type__Token_TypeInfo_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type1, SXCRef local_2_type2 );
static SlagObject* SlagAnalyzer__determine_common_data_type__TypeInfo_TypeInfo( SXCRef context, SXCRef local_0_type1, SXCRef local_1_type2 );
static SlagObject* SlagAnalyzer__find_common_element_type__Token_ArrayList_of_Cmd( SXCRef context, SXCRef local_0_t, SXCRef local_1_list );
static SlagObject* SlagAnalyzer__assemble_list__Token_TypeInfo_ArrayList_of_Cmd_Int32( SXCRef context, SXCRef local_0_t, SXCRef local_1_list_type, SXCRef local_2_args, SlagInt32 local_3_capacity );
static SlagObject* CmdPrimitiveCast__resolve( SXCRef context );
static SlagObject* CmdCastToInt64__create_duplicate( SXCRef context );
static SlagObject* CmdCastToInt64__type( SXCRef context );
static SlagObject* CmdCastToInt64__optimize( SXCRef context );
static void CmdCastToInt64__write_etc( SXCRef context );
static SlagObject* CmdCastToInt64__statement_to_cpp( SXCRef context );
static SlagObject* CmdCastToInt64__to_cpp( SXCRef context );
static SlagObject* CmdCastToInt64__statement_to_cs( SXCRef context );
static SlagObject* CmdCastToInt64__to_cs( SXCRef context );
static SlagObject* CmdCastToInt64__statement_to_java( SXCRef context );
static SlagObject* CmdCastToInt64__to_java( SXCRef context );
static SlagObject* CmdRangeLT__create_duplicate( SXCRef context );
static SlagObject* CmdRangeLT__resolve( SXCRef context );
static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__create_duplicate( SXCRef context );
static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__resolve( SXCRef context );
static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__optimize( SXCRef context );
static void CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__write_etc( SXCRef context );
static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_cpp( SXCRef context );
static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_cs( SXCRef context );
static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_java( SXCRef context );
static SlagInt32 HashTableMappingReader_of_Int32_and_Int32__available( SXCRef context );
static SlagObject* HashTableMappingReader_of_Int32_and_Int32__to_List( SXCRef context );
static SlagObject* HashTableMappingReader_of_Int32_and_Int32__init__Reader_of_HashTableBin_of_Int32_and_Int32( SXCRef context, SXCRef local_0_bins_8780 );
static void HashTableMappingReader_of_Int32_and_Int32__prep_next( SXCRef context );
static SlagLogical HashTableMappingReader_of_Int32_and_Int32__has_another( SXCRef context );
static SlagObject* HashTableMappingReader_of_Int32_and_Int32__read( SXCRef context );
static SlagInt32 CoerceReader_of_TypeTemplate____available( SXCRef context );
static SlagObject* CoerceReader_of_TypeTemplate____to_List( SXCRef context );
static SlagObject* CoerceReader_of_TypeTemplate____init__Reader_of_Object( SXCRef context, SXCRef local_0_src_8142 );
static SlagLogical CoerceReader_of_TypeTemplate____has_another( SXCRef context );
static SlagObject* CoerceReader_of_TypeTemplate____read( SXCRef context );
static SlagObject* HashTableBase_of_String_and_StructureType_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_StructureType_and_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* CmdCloseScope__init__Token( SXCRef context, SXCRef local_0_t_7633 );
static SlagObject* CmdCloseScope__create_duplicate( SXCRef context );
static SlagObject* CmdCloseScope__resolve( SXCRef context );
static SlagObject* Array_of_Mapping_of_Int32_and_Object__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_Mapping_of_Int32_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Mapping_of_Int32_and_Object__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_Mapping_of_Int32_and_Object__count( SXCRef context );
static SlagInt32 ArrayList_of_Mapping_of_Int32_and_Object__modification_count( SXCRef context );
static SlagObject* ArrayList_of_Mapping_of_Int32_and_Object__create_duplicate( SXCRef context );
static SlagObject* HashTableBin_of_Int32_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagInt32 HashTableBin_of_Int32_and_Object__index_of_entry__Int32( SXCRef context, SlagInt32 local_0_key );
static SlagObject* HashTableBin_of_Int32_and_Object__find_entry__Int32( SXCRef context, SlagInt32 local_0_key );
static SlagLogical HashTableBin_of_Int32_and_Object__add_entry__Int32_Object( SXCRef context, SlagInt32 local_0_key, SXCRef local_1_value );
static SlagLogical HashTableBin_of_Int32_and_Object__add_entry__Mapping_of_Int32_and_Object( SXCRef context, SXCRef local_0_entry );
static SlagObject* CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__create_duplicate( SXCRef context );
static SlagObject* CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__resolve( SXCRef context );
static SlagObject* CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__optimize( SXCRef context );
static void CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__write_etc( SXCRef context );
static SlagObject* ArrayReader_of_MethodGroup__to_List( SXCRef context );
static SlagObject* ArrayReader_of_MethodGroup__init__Collection_of_MethodGroup_Array_of_MethodGroup_Int32_Int32( SXCRef context, SXCRef local_0_collection_10395, SXCRef local_1_data_10394, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_MethodGroup__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_MethodGroup__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_MethodGroup__remaining( SXCRef context );
static SlagObject* ArrayReader_of_MethodGroup__read( SXCRef context );
static SlagObject* CmdAssign__create_duplicate( SXCRef context );
static SlagObject* CmdAssign__resolve( SXCRef context );
static SlagObject* Array_of_HashTable_of_String_and_LocalVarInfo__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__last( SXCRef context );
static SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_HashTable_of_String_and_LocalVarInfo__count( SXCRef context );
static SlagInt32 ArrayList_of_HashTable_of_String_and_LocalVarInfo__modification_count( SXCRef context );
static SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__create_duplicate( SXCRef context );
static SlagInt32 HashTableValueReader_of_Object_and_Object__available( SXCRef context );
static SlagObject* HashTableValueReader_of_Object_and_Object__to_List( SXCRef context );
static SlagObject* HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object( SXCRef context, SXCRef local_0_bins_6956 );
static void HashTableValueReader_of_Object_and_Object__prep_next( SXCRef context );
static SlagLogical HashTableValueReader_of_Object_and_Object__has_another( SXCRef context );
static SlagObject* HashTableValueReader_of_Object_and_Object__read( SXCRef context );
static SlagObject* CmdCmpIs__create_duplicate( SXCRef context );
static SlagObject* CmdCmpIs__resolve( SXCRef context );
static void CmdCmpIs__write_etc( SXCRef context );
static SlagObject* CmdCmpIs__to_cpp( SXCRef context );
static SlagObject* CmdCmpIs__to_cs( SXCRef context );
static SlagObject* CmdCmpIs__to_java( SXCRef context );
static SlagObject* ArrayList_of_SlagFile__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_SlagFile__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_SlagFile__count( SXCRef context );
static SlagInt32 ArrayList_of_SlagFile__modification_count( SXCRef context );
static SlagObject* ArrayList_of_SlagFile__create_duplicate( SXCRef context );
static SlagObject* CmdContextCall__init__Token_Cmd_MethodInfo_CmdList( SXCRef context, SXCRef local_0_t_8865, SXCRef local_1_context_8864, SXCRef local_2_method_info_8863, SXCRef local_3_args_8862 );
static SlagObject* CmdContextCall__resolve( SXCRef context );
static void CmdContextCall__finalize_structure_info( SXCRef context );
static void CmdContextCall__group_dynamic_methods( SXCRef context );
static SlagObject* CmdContextCall__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdStaticCall__create_duplicate( SXCRef context );
static SlagObject* CmdStaticCall__resolve( SXCRef context );
static SlagObject* CmdStaticCall__finalize_calls( SXCRef context );
static SlagObject* CmdStaticCall__inline_check( SXCRef context );
static void CmdStaticCall__write_etc( SXCRef context );
static SlagObject* CmdStaticCall__statement_to_cpp( SXCRef context );
static SlagObject* CmdStaticCall__to_cpp( SXCRef context );
static SlagObject* CmdStaticCall__to_cpp__Logical( SXCRef context, SlagLogical local_0_cast_return_value );
static SlagObject* CmdStaticCall__statement_to_cs( SXCRef context );
static SlagObject* CmdStaticCall__to_cs( SXCRef context );
static SlagObject* CmdStaticCall__to_cs__Logical( SXCRef context, SlagLogical local_0_cast_return_value );
static SlagObject* CmdStaticCall__statement_to_java( SXCRef context );
static SlagObject* CmdStaticCall__to_java( SXCRef context );
static SlagObject* CmdStaticCall__to_java__Logical( SXCRef context, SlagLogical local_0_cast_return_value );
static SlagObject* Array_of_CmdWhichCase__create_duplicate( SXCRef context );
static SlagObject* ArrayReader_of_CmdWhichCase__to_List( SXCRef context );
static SlagObject* ArrayReader_of_CmdWhichCase__init__Collection_of_CmdWhichCase_Array_of_CmdWhichCase_Int32_Int32( SXCRef context, SXCRef local_0_collection_7512, SXCRef local_1_data_7511, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_CmdWhichCase__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_CmdWhichCase__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_CmdWhichCase__remaining( SXCRef context );
static SlagObject* ArrayReader_of_CmdWhichCase__read( SXCRef context );
static SlagObject* Array_of_Qualifiers__create_duplicate( SXCRef context );
static SlagObject* Array_of_CmdElseIf__create_duplicate( SXCRef context );
static void ArrayList_of_CmdElseIf__discard_from__Int32( SXCRef context, SlagInt32 local_0_first_index );
static SlagObject* ArrayList_of_CmdElseIf__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_CmdElseIf__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_CmdElseIf__count( SXCRef context );
static SlagInt32 ArrayList_of_CmdElseIf__modification_count( SXCRef context );
static SlagObject* ArrayList_of_CmdElseIf__create_duplicate( SXCRef context );
static SlagObject* Array_of_Mapping_of_String_and_SignalHandler__create_duplicate( SXCRef context );
static SlagObject* ReferenceTable_of_String_and_SignalHandler__init__Int32( SXCRef context, SlagInt32 local_0_capacity );
static void ReferenceTable_of_String_and_SignalHandler__set__String_SignalHandler( SXCRef context, SXCRef local_0_key, SXCRef local_1_value );
static SlagObject* ReferenceTable_of_String_and_SignalHandler__get__String( SXCRef context, SXCRef local_0_key );
static SlagObject* ReferenceTable_of_String_and_SignalHandler__find_key__String( SXCRef context, SXCRef local_0_key );
static SlagObject* ReferenceTable_of_String_and_SignalHandler__remove__String( SXCRef context, SXCRef local_0_key );
static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Object__to_List( SXCRef context );
static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Object__init__Collection_of_HashTableBin_of_Object_and_Object_Array_of_HashTableBin_of_Object_and_Object_Int32_Int32( SXCRef context, SXCRef local_0_collection_4084, SXCRef local_1_data_4083, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Object__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_HashTableBin_of_Object_and_Object__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_HashTableBin_of_Object_and_Object__remaining( SXCRef context );
static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Object__read( SXCRef context );
static SlagObject* CmdCmpInstanceOf__init__Token_Cmd_TypeInfo( SXCRef context, SXCRef local_0_t_7980, SXCRef local_1_operand_7979, SXCRef local_2_of_type_7978 );
static SlagObject* CmdCmpInstanceOf__create_duplicate( SXCRef context );
static SlagObject* CmdCmpInstanceOf__type( SXCRef context );
static SlagObject* CmdCmpInstanceOf__resolve( SXCRef context );
static void CmdCmpInstanceOf__write_etc( SXCRef context );
static SlagObject* CmdCmpInstanceOf__to_cpp( SXCRef context );
static SlagObject* CmdCmpInstanceOf__to_cs( SXCRef context );
static SlagObject* CmdCmpInstanceOf__to_java( SXCRef context );
static SlagObject* Array_of_ArrayList_of_TypeTemplate__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_ArrayList_of_TypeTemplate__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_ArrayList_of_TypeTemplate__create_duplicate( SXCRef context );
static SlagObject* ArrayReader_of_Token__to_List( SXCRef context );
static SlagObject* ArrayReader_of_Token__init__Collection_of_Token_Array_of_Token_Int32_Int32( SXCRef context, SXCRef local_0_collection_6986, SXCRef local_1_data_6985, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_Token__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Token__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_Token__remaining( SXCRef context );
static SlagObject* ArrayReader_of_Token__read( SXCRef context );
static SlagObject* CmdLocalVarAccess__resolve( SXCRef context );
static SlagObject* CmdLocalVarAccess__finalize_calls( SXCRef context );
static void CmdLocalVarAccess__finalize_structure_info( SXCRef context );
static void CmdLocalVarAccess__group_dynamic_methods( SXCRef context );
static SlagObject* CmdLocalVarAccess__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdLocalVarWrite__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9445, SXCRef local_1_var_info_9444, SXCRef local_2_new_value_9443 );
static SlagObject* CmdLocalVarWrite__create_duplicate( SXCRef context );
static SlagObject* CmdLocalVarWrite__resolve( SXCRef context );
static SlagObject* CmdLocalVarWrite__optimize( SXCRef context );
static SlagObject* CmdLocalVarWrite__finalize_calls( SXCRef context );
static void CmdLocalVarWrite__finalize_structure_info( SXCRef context );
static void CmdLocalVarWrite__group_dynamic_methods( SXCRef context );
static SlagObject* CmdLocalVarWrite__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdLocalVarWrite__write_etc( SXCRef context );
static SlagObject* CmdLocalVarWrite__to_cpp( SXCRef context );
static SlagObject* CmdLocalVarWrite__to_cs( SXCRef context );
static SlagObject* CmdLocalVarWrite__to_java( SXCRef context );
static SlagObject* ArrayReader_of_Int64__to_List( SXCRef context );
static SlagObject* ArrayReader_of_Int64__init__Collection_of_Int64_Array_of_Int64_Int32_Int32( SXCRef context, SXCRef local_0_collection_4196, SXCRef local_1_data_4195, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_Int64__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Int64__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_Int64__remaining( SXCRef context );
static SlagInt64 ArrayReader_of_Int64__read( SXCRef context );
static SlagObject* BigInt__init__Int64( SXCRef context, SlagInt64 local_0_value );
static SlagObject* BigInt__init__Int32( SXCRef context, SlagInt32 local_0_value );
static SlagObject* BigInt__init__String_Int32( SXCRef context, SXCRef local_0_value, SlagInt32 local_1_base );
static SlagObject* BigInt__init__BigInt( SXCRef context, SXCRef local_0_other );
static SlagObject* BigInt__left_shifted__Int32( SXCRef context, SlagInt32 local_0_bits );
static SlagObject* BigInt__right_shifted__Int32( SXCRef context, SlagInt32 local_0_bits );
static SlagObject* BigInt__normalized( SXCRef context );
static SlagObject* BigInt__to_String__Int32( SXCRef context, SlagInt32 local_0_base );
static SlagInt64 BigInt__internal_to_Int64( SXCRef context );
static SlagLogical BigInt__is_valid_Int32( SXCRef context );
static SlagLogical BigInt__is_valid_Int64( SXCRef context );
static SlagInt32 BigInt__to_Int32( SXCRef context );
static SlagInt64 BigInt__to_Int64( SXCRef context );
static SlagLogical BigInt__is_zero( SXCRef context );
static SlagLogical BigInt__opEQ__Object( SXCRef context, SXCRef local_0_other );
static SlagLogical BigInt__opEQ__BigInt( SXCRef context, SXCRef local_0_other );
static SlagInt32 BigInt__opCMP__BigInt( SXCRef context, SXCRef local_0_other );
static SlagObject* BigInt__opSUB( SXCRef context );
static SlagObject* BigInt__opADD__BigInt( SXCRef context, SXCRef local_0_n );
static SlagObject* BigInt__opSUB__BigInt( SXCRef context, SXCRef local_0_n );
static SlagObject* BigInt__opMUL__BigInt( SXCRef context, SXCRef local_0_n );
static SlagObject* BigInt__opDIV__BigInt( SXCRef context, SXCRef local_0_n );
static SlagObject* BigInt__opEXP__BigInt( SXCRef context, SXCRef local_0_n );
static SlagObject* ParamInfo__init__ArrayList_of_ParameterInfo( SXCRef context, SXCRef local_0_parameters_10165 );
static SlagInt32 StructureType__opCMP__StructureType( SXCRef context, SXCRef local_0_other );
static SlagInt32 StructureType__hash_code( SXCRef context );
static SlagObject* StructureType__init__Logical( SXCRef context, SlagLogical local_0_is_loop_6788 );
static SlagObject* CmdInitialAssignment__init__Token_Cmd( SXCRef context, SXCRef local_0_t_7851, SXCRef local_1_expression_7850 );
static SlagObject* CmdInitialAssignment__create_duplicate( SXCRef context );
static SlagObject* CmdInitialAssignment__resolve( SXCRef context );
static SlagObject* CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__create_duplicate( SXCRef context );
static SlagObject* CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__resolve( SXCRef context );
static SlagObject* CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__optimize( SXCRef context );
static void CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__write_etc( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__init__Token_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9527, SXCRef local_1_var_info_9526, SXCRef local_2_operand_9525 );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__create_duplicate( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__resolve( SXCRef context );
static void CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__finalize_structure_info( SXCRef context );
static void CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__write_etc( SXCRef context );
static SlagObject* CmdCmpIsNotNull__create_duplicate( SXCRef context );
static SlagObject* CmdCmpIsNotNull__type( SXCRef context );
static SlagObject* CmdCmpIsNotNull__resolve( SXCRef context );
static SlagObject* CmdCmpIsNotNull__to_cpp( SXCRef context );
static SlagObject* CmdCmpIsNotNull__to_java( SXCRef context );
static void CmdCmpIsNotNull__write_etc( SXCRef context );
static SlagObject* CmdCmpIsNotNull__to_cs( SXCRef context );
static SlagObject* CmdLiteralReal64__init__Token_Real64( SXCRef context, SXCRef local_0_t_7920, SlagReal64 local_1_value_7919 );
static SlagObject* CmdLiteralReal64__create_duplicate( SXCRef context );
static SlagObject* CmdLiteralReal64__type( SXCRef context );
static SlagObject* CmdLiteralReal64__to_cpp( SXCRef context );
static SlagObject* CmdLiteralReal64__to_cs( SXCRef context );
static SlagObject* CmdLiteralReal64__to_java( SXCRef context );
static void CmdLiteralReal64__write_etc( SXCRef context );
static SlagObject* CmdCastToReal64__create_duplicate( SXCRef context );
static SlagObject* CmdCastToReal64__type( SXCRef context );
static SlagObject* CmdCastToReal64__optimize( SXCRef context );
static SlagObject* CmdCastToReal64__statement_to_java( SXCRef context );
static SlagObject* CmdCastToReal64__to_java( SXCRef context );
static void CmdCastToReal64__write_etc( SXCRef context );
static SlagObject* CmdCastToReal64__statement_to_cpp( SXCRef context );
static SlagObject* CmdCastToReal64__to_cpp( SXCRef context );
static SlagObject* CmdCastToReal64__statement_to_cs( SXCRef context );
static SlagObject* CmdCastToReal64__to_cs( SXCRef context );
static SlagObject* Array_of_StructureType__create_duplicate( SXCRef context );
static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Int32__to_List( SXCRef context );
static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Int32__init__Collection_of_Mapping_of_Int32_and_Int32_Array_of_Mapping_of_Int32_and_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_8767, SXCRef local_1_data_8766, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Int32__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Mapping_of_Int32_and_Int32__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_Mapping_of_Int32_and_Int32__remaining( SXCRef context );
static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Int32__read( SXCRef context );
static SlagObject* CmdInitialConstructor__init__Token_CmdList( SXCRef context, SXCRef local_0_t_7662, SXCRef local_1_args_7661 );
static SlagObject* CmdInitialConstructor__create_duplicate( SXCRef context );
static SlagObject* CmdInitialConstructor__resolve( SXCRef context );
static SlagInt32 RangeIteratorDescending_of_Int32__available( SXCRef context );
static SlagObject* RangeIteratorDescending_of_Int32__to_List( SXCRef context );
static SlagObject* RangeIteratorDescending_of_Int32__init__Int32_Int32_Int32( SXCRef context, SlagInt32 local_0_first_value, SlagInt32 local_1_last_value_4838, SlagInt32 local_2_step_size_4837 );
static SlagObject* RangeIteratorDescending_of_Int32__create_duplicate( SXCRef context );
static SlagLogical RangeIteratorDescending_of_Int32__has_another( SXCRef context );
static SlagInt32 RangeIteratorDescending_of_Int32__read( SXCRef context );
static SlagObject* Array_of_Signal__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_Signal__add__Readable_of_Signal( SXCRef context, SXCRef local_0_source );
static SlagObject* ArrayList_of_Signal__transfer_from__List_of_Signal( SXCRef context, SXCRef local_0_source );
static SlagObject* ArrayList_of_Signal__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Signal__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_Signal__count( SXCRef context );
static SlagInt32 ArrayList_of_Signal__modification_count( SXCRef context );
static SlagObject* ArrayList_of_Signal__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_Byte__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Byte__init__Array_of_Byte_Logical( SXCRef context, SXCRef local_0_array, SlagLogical local_1_make_copy );
static void ArrayList_of_Byte__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_min_capacity );
static SlagObject* ArrayList_of_Byte__create_duplicate( SXCRef context );
static SlagObject* CmdSingletonWrite__init__Token_TypeInfo_Cmd( SXCRef context, SXCRef local_0_t_9501, SXCRef local_1_of_type_9500, SXCRef local_2_new_value_9499 );
static SlagObject* CmdSingletonWrite__create_duplicate( SXCRef context );
static SlagObject* CmdSingletonWrite__resolve( SXCRef context );
static SlagObject* CmdSingletonWrite__finalize_calls( SXCRef context );
static void CmdSingletonWrite__finalize_structure_info( SXCRef context );
static void CmdSingletonWrite__group_dynamic_methods( SXCRef context );
static SlagObject* CmdSingletonWrite__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdSingletonWrite__to_cs( SXCRef context );
static SlagObject* CmdSingletonWrite__to_java( SXCRef context );
static void CmdSingletonWrite__write_etc( SXCRef context );
static SlagObject* CmdSingletonWrite__to_cpp( SXCRef context );
static SlagObject* ArrayReader_of_MethodInfo__to_List( SXCRef context );
static SlagObject* ArrayReader_of_MethodInfo__init__Collection_of_MethodInfo_Array_of_MethodInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_6943, SXCRef local_1_data_6942, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_MethodInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_MethodInfo__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_MethodInfo__remaining( SXCRef context );
static SlagObject* ArrayReader_of_MethodInfo__read( SXCRef context );
static SlagObject* LocalVarTable__init__MethodInfo( SXCRef context, SXCRef local_0_this_method_8570 );
static SlagObject* LocalVarTable__define__LocalVarInfo( SXCRef context, SXCRef local_0_v );
static SlagObject* LocalVarTable__get__String( SXCRef context, SXCRef local_0_name );
static SlagObject* HashSet_of_Int32__add__Int32( SXCRef context, SlagInt32 local_0_value );
static SlagObject* HashSet_of_Int32__create_reader( SXCRef context );
static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_HashTableBin_of_Int32_and_Object__count( SXCRef context );
static SlagInt32 ArrayList_of_HashTableBin_of_Int32_and_Object__modification_count( SXCRef context );
static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Object__create_duplicate( SXCRef context );
static SlagObject* GenericHashTable_of_Int32_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size_4648 );
static void GenericHashTable_of_Int32_and_Object__set__Int32_Object( SXCRef context, SlagInt32 local_0_key, SXCRef local_1_value );
static void GenericHashTable_of_Int32_and_Object__set__Mapping_of_Int32_and_Object( SXCRef context, SXCRef local_0_entry );
static SlagObject* GenericHashTable_of_Int32_and_Object__get__Int32( SXCRef context, SlagInt32 local_0_key );
static SlagObject* GenericHashTable_of_Int32_and_Object__find__Int32( SXCRef context, SlagInt32 local_0_key );
static SlagObject* GenericHashTable_of_Int32_and_Object__get_bin__Int32( SXCRef context, SlagInt32 local_0_key );
static void GenericHashTable_of_Int32_and_Object__add__GenericHashTable_of_Int32_and_Object( SXCRef context, SXCRef local_0_other );
static void GenericHashTable_of_Int32_and_Object__expand_table( SXCRef context );
static SlagObject* GenericHashTable_of_Int32_and_Object__values( SXCRef context );
static SlagObject* HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_Int32__last( SXCRef context );
static SlagObject* ArrayList_of_Int32__add__Readable_of_Int32( SXCRef context, SXCRef local_0_source );
static SlagInt32 ArrayList_of_Int32__remove_last( SXCRef context );
static SlagObject* ArrayList_of_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Int32__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_Int32__count( SXCRef context );
static SlagInt32 ArrayList_of_Int32__modification_count( SXCRef context );
static void ArrayList_of_Int32__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_min_capacity );
static SlagInt32 ArrayList_of_Int32__remove__Int32( SXCRef context, SlagInt32 local_0_index );
static void ArrayList_of_Int32__discard_last( SXCRef context );
static SlagObject* ArrayList_of_Int32__create_duplicate( SXCRef context );
static SlagObject* Context__init__TypeInfo_MethodInfo_Logical( SXCRef context, SXCRef local_0_this_type_8679, SXCRef local_1_this_method_8678, SlagLogical local_2_resolve_phase );
static SlagObject* Context__create_duplicate( SXCRef context );
static SlagObject* Array_of_SlagError__create_duplicate( SXCRef context );
static void CPPWriter__write__String( SXCRef context, SXCRef local_0_output_filename_6424 );
static void CPPWriter__do_indent( SXCRef context );
static void CPPWriter__print__Char( SXCRef context, SlagChar local_0_ch );
static void CPPWriter__print__String( SXCRef context, SXCRef local_0_st );
static void CPPWriter__print__Int32( SXCRef context, SlagInt32 local_0_n );
static void CPPWriter__println__String( SXCRef context, SXCRef local_0_st );
static void CPPWriter__println__Char( SXCRef context, SlagChar local_0_ch );
static void CPPWriter__println( SXCRef context );
static void CPPWriter__print_header__String( SXCRef context, SXCRef local_0_extension );
static void CPPWriter__assign_cross_compile_names( SXCRef context );
static void CPPWriter__print_compound_defs( SXCRef context );
static void CPPWriter__print_type_defs( SXCRef context );
static void CPPWriter__print_identifiers( SXCRef context );
static void CPPWriter__print_property_info( SXCRef context );
static void CPPWriter__print_type_info_defs( SXCRef context );
static void CPPWriter__print_base_type_index_table( SXCRef context );
static void CPPWriter__print_method_pointers( SXCRef context );
static void CPPWriter__print_method_info( SXCRef context );
static void CPPWriter__print_dispatch_table( SXCRef context );
static void CPPWriter__print_configuration_function( SXCRef context );
static void CPPWriter__print_miscellaneous( SXCRef context );
static void CPPWriter__print_literal_strings( SXCRef context );
static void CPPWriter__print_function_typedefs( SXCRef context );
static void CPPWriter__print_method_prototypes__Logical( SXCRef context, SlagLogical local_0_print_requisite );
static void CPPWriter__print_method_defs( SXCRef context );
static void CPPWriter__write_continue_id__CmdStructure( SXCRef context, SXCRef local_0_cmd );
static void CPPWriter__write_end_id__CmdStructure( SXCRef context, SXCRef local_0_cmd );
static SlagObject* CPPWriter__native_call__MethodInfo_String_CmdList( SXCRef context, SXCRef local_0_m, SXCRef local_1_context, SXCRef local_2_args );
static SlagObject* CPPWriter__native_call__MethodInfo_String_ArrayList_of_String( SXCRef context, SXCRef local_0_m, SXCRef local_1_context, SXCRef local_2_args );
static SlagChar NumberConversions__to_digit__Int32( SXCRef context, SlagInt32 local_0_n );
static SlagLogical NumberConversions__is_digit__Char_Int32( SXCRef context, SlagChar local_0_ch, SlagInt32 local_1_base );
static SlagInt32 NumberConversions__to_value__Char( SXCRef context, SlagChar local_0_ch );
static SlagObject* NumberConversions__Int64_to_String__Int64_Int32_Int32( SXCRef context, SlagInt64 local_0_n, SlagInt32 local_1_base, SlagInt32 local_2_min_digits );
static SlagObject* NumberConversions__Real64_to_String__Real64_Int32_Int32_Int32_Char( SXCRef context, SlagReal64 local_0_n, SlagInt32 local_1_base, SlagInt32 local_2_whole_digits, SlagInt32 local_3_decimal_digits, SlagChar local_4_fill_char );
static SlagInt64 NumberConversions__parse_Int64__String_Int32( SXCRef context, SXCRef local_0_st, SlagInt32 local_1_base );
static SlagInt32 NumberConversions__parse_Int32__String_Int32( SXCRef context, SXCRef local_0_st, SlagInt32 local_1_base );
static SlagReal64 NumberConversions__parse_Real64__String( SXCRef context, SXCRef local_0_st );
static SlagObject* ArrayReader_of_LocalVarInfo__to_List( SXCRef context );
static SlagObject* ArrayReader_of_LocalVarInfo__init__Collection_of_LocalVarInfo_Array_of_LocalVarInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_8848, SXCRef local_1_data_8847, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_LocalVarInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_LocalVarInfo__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_LocalVarInfo__remaining( SXCRef context );
static SlagObject* ArrayReader_of_LocalVarInfo__read( SXCRef context );
static SlagObject* CmdRightXShifted__to_cpp( SXCRef context );
static SlagObject* CmdRightXShifted__to_cs( SXCRef context );
static SlagObject* CmdRightXShifted__to_java( SXCRef context );
static SlagObject* CategoryInfo__init__CmdConstruct( SXCRef context, SXCRef local_0_construct_6909 );
static SlagObject* CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init__Token_PropertyInfo( SXCRef context, SXCRef local_0_t_9522, SXCRef local_1_var_info_9521 );
static SlagObject* CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__create_duplicate( SXCRef context );
static SlagObject* CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__resolve( SXCRef context );
static void CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__finalize_structure_info( SXCRef context );
static void CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__write_etc( SXCRef context );
static SlagObject* CmdThisPropertyIncrement__to_cpp( SXCRef context );
static SlagObject* CmdThisPropertyIncrement__to_cs( SXCRef context );
static SlagObject* CmdThisPropertyIncrement__to_java( SXCRef context );
static SlagObject* HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__create_duplicate( SXCRef context );
static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__resolve( SXCRef context );
static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__optimize( SXCRef context );
static void CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__write_etc( SXCRef context );
static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_cpp( SXCRef context );
static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_cs( SXCRef context );
static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_java( SXCRef context );
static SlagObject* CmdMod__optimize( SXCRef context );
static SlagObject* BitWriter__init__Writer_of_Char( SXCRef context, SXCRef local_0_dest_10144 );
static void BitWriter__write__Char( SXCRef context, SlagChar local_0_value );
static void BitWriter__write__Int32_Int32( SXCRef context, SlagInt32 local_0_value, SlagInt32 local_1_n_bits );
static void BitWriter__write_Int64__Int64( SXCRef context, SlagInt64 local_0_value );
static void ETCWriter__write__Writer_of_Char( SXCRef context, SXCRef local_0_dest );
static void ETCWriter__write_header__String( SXCRef context, SXCRef local_0_header_id );
static void ETCWriter__write_type_meta__TypeInfo( SXCRef context, SXCRef local_0_type );
static void ETCWriter__write_param_info__ParamInfo( SXCRef context, SXCRef local_0_pinfo );
static void ETCWriter__write_method_meta__MethodInfo( SXCRef context, SXCRef local_0_m );
static void ETCWriter__write_type_def__TypeInfo( SXCRef context, SXCRef local_0_type );
static void ETCWriter__write_method_body__MethodInfo( SXCRef context, SXCRef local_0_m );
static void ETCWriter__writeX__Int32( SXCRef context, SlagInt32 local_0_n );
static void ETCWriter__write_utf8__String( SXCRef context, SXCRef local_0_st );
static SlagObject* ETCWriter__string_to_utf8__String( SXCRef context, SXCRef local_0_st );
static void ETCWriter__write_source_position__Token( SXCRef context, SXCRef local_0_t );
static void ETCWriter__write_structure_id__CmdStructure( SXCRef context, SXCRef local_0_cmd );
static SlagObject* HashTableBase_of_Int32_and_String_and_Int32_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_Int32_and_String_and_Int32_and_Object__create_duplicate( SXCRef context );
static SlagObject* HashTableBase_of_Int32_and_String_and_Int32_and_Object__create_reader( SXCRef context );
static SlagInt32 CoerceReader_of_String__available( SXCRef context );
static SlagObject* CoerceReader_of_String__to_List( SXCRef context );
static SlagObject* CoerceReader_of_String__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_5332 );
static SlagLogical CoerceReader_of_String__has_another( SXCRef context );
static SlagObject* CoerceReader_of_String__read( SXCRef context );
static SlagObject* Mapping_of_Object_and_Int32__init__Object_Int32( SXCRef context, SXCRef local_0_key_5012, SlagInt32 local_1_value_5011 );
static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__create_duplicate( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__resolve( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__optimize( SXCRef context );
static void CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__write_etc( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cpp( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cs( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_java( SXCRef context );
static SlagInt32 CoerceReader_of_MethodInfo__available( SXCRef context );
static SlagObject* CoerceReader_of_MethodInfo__to_List( SXCRef context );
static SlagObject* CoerceReader_of_MethodInfo__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_6949 );
static SlagLogical CoerceReader_of_MethodInfo__has_another( SXCRef context );
static SlagObject* CoerceReader_of_MethodInfo__read( SXCRef context );
static SlagObject* CmdIf__init__Token_Int32_Cmd( SXCRef context, SXCRef local_0_t_7393, SlagInt32 local_1_id_7392, SXCRef local_2_condition_7391 );
static SlagObject* CmdIf__init__Token_Int32_Cmd_CmdStatementList( SXCRef context, SXCRef local_0_t_7397, SlagInt32 local_1_id_7396, SXCRef local_2_condition_7395, SXCRef local_3_body_7394 );
static SlagObject* CmdIf__create_duplicate( SXCRef context );
static SlagObject* CmdIf__resolve( SXCRef context );
static SlagObject* CmdIf__optimize( SXCRef context );
static SlagObject* CmdIf__finalize_calls( SXCRef context );
static void CmdIf__finalize_structure_info( SXCRef context );
static void CmdIf__group_dynamic_methods( SXCRef context );
static SlagObject* CmdIf__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdIf__write_etc( SXCRef context );
static SlagObject* CmdIf__to_cpp( SXCRef context );
static SlagObject* CmdIf__to_cs( SXCRef context );
static SlagObject* CmdIf__to_java( SXCRef context );
static SlagObject* CmdRemoveCurrent__init__Token_Int32( SXCRef context, SXCRef local_0_t_7707, SlagInt32 local_1_id_7706 );
static SlagObject* CmdRemoveCurrent__create_duplicate( SXCRef context );
static SlagObject* CmdRemoveCurrent__resolve( SXCRef context );
static SlagObject* File__init__String( SXCRef context, SXCRef local_0_filepath_3672 );
void File__exists();
static SlagLogical File__exists( SXCRef context );
void File__is_directory();
static SlagLogical File__is_directory( SXCRef context );
static SlagObject* File__path( SXCRef context );
static SlagObject* File__filename( SXCRef context );
void File__absolute_filepath();
static SlagObject* File__absolute_filepath( SXCRef context );
static SlagObject* File__directory_listing( SXCRef context );
void File__directory_listing__ArrayList_of_String();
static void File__directory_listing__ArrayList_of_String( SXCRef context, SXCRef local_0_list );
static SlagObject* File__directory_listing__Int32( SXCRef context, SlagInt32 local_0_flags );
static void SlagCompiler__print_usage( SXCRef context );
static void SlagCompiler__process_args( SXCRef context );
static void SlagCompiler__set_dest_path__String( SXCRef context, SXCRef local_0_dest_path );
static void SlagCompiler__compile__String( SXCRef context, SXCRef local_0_filename );
static SlagObject* SlagCompiler__find_file__String( SXCRef context, SXCRef local_0_filename );
static SlagObject* ArrayReader_of_PropertyInfo__to_List( SXCRef context );
static SlagObject* ArrayReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_6965, SXCRef local_1_data_6964, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_PropertyInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_PropertyInfo__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_PropertyInfo__remaining( SXCRef context );
static SlagObject* ArrayReader_of_PropertyInfo__read( SXCRef context );
static SlagObject* Array_of_ControlStructureInfo__create_duplicate( SXCRef context );
static SlagObject* ArrayReader_of_ControlStructureInfo__to_List( SXCRef context );
static SlagObject* ArrayReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_7314, SXCRef local_1_data_7313, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_ControlStructureInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_ControlStructureInfo__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_ControlStructureInfo__remaining( SXCRef context );
static SlagObject* ArrayReader_of_ControlStructureInfo__read( SXCRef context );
static SlagObject* CmdNot__create_duplicate( SXCRef context );
static SlagObject* CmdNot__resolve( SXCRef context );
static void CmdNot__write_etc( SXCRef context );
static SlagObject* CmdNot__to_cpp( SXCRef context );
static SlagObject* CmdNot__to_cs( SXCRef context );
static SlagObject* CmdNot__to_java( SXCRef context );
static SlagInt32 BitwiseOperations__left_rotated__Int32_Int32( SXCRef context, SlagInt32 local_0_n, SlagInt32 local_1_bits );
static SlagInt32 BitwiseOperations__right_rotated__Int32_Int32( SXCRef context, SlagInt32 local_0_n, SlagInt32 local_1_bits );
static SlagLogical BitwiseOperations__is_power_of_two__Int64( SXCRef context, SlagInt64 local_0_n );
static SlagLogical BitwiseOperations__is_power_of_two__Int32( SXCRef context, SlagInt32 local_0_n );
static SlagInt32 BitwiseOperations__min_bits__Int64( SXCRef context, SlagInt64 local_0_n );
static SlagInt32 BitwiseOperations__min_bits__Int32( SXCRef context, SlagInt32 local_0_n );
static SlagInt32 BitwiseOperations__rounded_up_to_power_of_two__Int32( SXCRef context, SlagInt32 local_0_n );
static SlagObject* CmdDuplicate__create_duplicate( SXCRef context );
static SlagObject* CmdDuplicate__resolve( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__init__Token_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9543, SXCRef local_1_var_info_9542, SXCRef local_2_operand_9541 );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__create_duplicate( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__resolve( SXCRef context );
static void CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__finalize_structure_info( SXCRef context );
static void CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__write_etc( SXCRef context );
static SlagObject* CmdThisPropertyModAndAssign__to_cpp( SXCRef context );
static SlagObject* CmdThisPropertyModAndAssign__to_cs( SXCRef context );
static SlagObject* CmdThisPropertyModAndAssign__to_java( SXCRef context );
static SlagObject* CmdLiteralInt32__init__Token_Int32( SXCRef context, SXCRef local_0_t_7530, SlagInt32 local_1_value_7529 );
static SlagObject* CmdLiteralInt32__create_duplicate( SXCRef context );
static SlagObject* CmdLiteralInt32__type( SXCRef context );
static void CmdLiteralInt32__write_etc( SXCRef context );
static SlagObject* CmdLiteralInt32__to_cpp( SXCRef context );
static SlagObject* CmdLiteralInt32__to_cs( SXCRef context );
static SlagObject* CmdLiteralInt32__to_java( SXCRef context );
static SlagObject* CmdCmpNE__to_cpp( SXCRef context );
static SlagObject* CmdCmpNE__to_cs( SXCRef context );
static SlagObject* CmdCmpNE__to_java( SXCRef context );
static SlagLogical SpecializedComparator_2167__a_before_b__MethodInfo_MethodInfo( SXCRef context, SXCRef local_0_a, SXCRef local_1_b );
static SlagObject* ArrayList_of_CmdWhichCase__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_CmdWhichCase__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_CmdWhichCase__count( SXCRef context );
static SlagInt32 ArrayList_of_CmdWhichCase__modification_count( SXCRef context );
static SlagObject* ArrayList_of_CmdWhichCase__create_duplicate( SXCRef context );
static SlagObject* CmdWhich__init__Token_Int32_Cmd_Logical( SXCRef context, SXCRef local_0_t_7503, SlagInt32 local_1_id_7502, SXCRef local_2_expression_7501, SlagLogical local_3_use_is_comparison_7500 );
static SlagObject* CmdWhich__create_duplicate( SXCRef context );
static SlagObject* CmdWhich__resolve( SXCRef context );
static SlagObject* CmdAs__init__Token_Cmd_TypeInfo( SXCRef context, SXCRef local_0_t_7974, SXCRef local_1_operand_7973, SXCRef local_2_as_type_7972 );
static SlagObject* CmdAs__create_duplicate( SXCRef context );
static SlagObject* CmdAs__type( SXCRef context );
static SlagObject* CmdAs__resolve( SXCRef context );
static void CmdAs__write_etc( SXCRef context );
static SlagObject* CmdAs__statement_to_cpp( SXCRef context );
static SlagObject* CmdAs__to_cpp( SXCRef context );
static SlagObject* CmdAs__statement_to_cs( SXCRef context );
static SlagObject* CmdAs__to_cs( SXCRef context );
static SlagObject* CmdAs__statement_to_java( SXCRef context );
static SlagObject* CmdAs__to_java( SXCRef context );
static SlagObject* CmdArrayDuplicate__init__Token_Cmd( SXCRef context, SXCRef local_0_t_9607, SXCRef local_1_context_9606 );
static SlagObject* CmdArrayDuplicate__create_duplicate( SXCRef context );
static SlagObject* CmdArrayDuplicate__type( SXCRef context );
static SlagObject* CmdArrayDuplicate__resolve( SXCRef context );
static SlagObject* CmdArrayDuplicate__finalize_calls( SXCRef context );
static void CmdArrayDuplicate__finalize_structure_info( SXCRef context );
static void CmdArrayDuplicate__group_dynamic_methods( SXCRef context );
static SlagObject* CmdArrayDuplicate__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdArrayDuplicate__write_etc( SXCRef context );
static SlagObject* CmdArrayDuplicate__to_cpp( SXCRef context );
static SlagObject* CmdArrayDuplicate__to_cs( SXCRef context );
static SlagObject* CmdArrayDuplicate__to_java( SXCRef context );
static SlagObject* CmdLiteralByte__init__Token_Byte( SXCRef context, SXCRef local_0_t_9138, SlagByte local_1_value_9137 );
static SlagObject* CmdLiteralByte__create_duplicate( SXCRef context );
static SlagObject* CmdLiteralByte__type( SXCRef context );
static void CmdLiteralByte__write_etc( SXCRef context );
static SlagObject* CmdLiteralByte__to_cpp( SXCRef context );
static SlagObject* CmdLiteralByte__to_cs( SXCRef context );
static SlagObject* CmdLiteralByte__to_java( SXCRef context );
static SlagObject* CmdCastToByte__create_duplicate( SXCRef context );
static SlagObject* CmdCastToByte__type( SXCRef context );
static SlagObject* CmdCastToByte__optimize( SXCRef context );
static void CmdCastToByte__write_etc( SXCRef context );
static SlagObject* CmdCastToByte__statement_to_cpp( SXCRef context );
static SlagObject* CmdCastToByte__to_cpp( SXCRef context );
static SlagObject* CmdCastToByte__statement_to_cs( SXCRef context );
static SlagObject* CmdCastToByte__to_cs( SXCRef context );
static SlagObject* CmdCastToByte__statement_to_java( SXCRef context );
static SlagObject* CmdCastToByte__to_java( SXCRef context );
static SlagObject* CmdReturnNil__init__Token_Logical( SXCRef context, SXCRef local_0_t_7714, SlagLogical local_1_handled_foreach_fixup_7713 );
static SlagObject* CmdReturnNil__create_duplicate( SXCRef context );
static SlagObject* CmdReturnNil__resolve( SXCRef context );
static void CmdReturnNil__write_etc( SXCRef context );
static SlagObject* CmdReturnNil__to_cpp( SXCRef context );
static SlagObject* CmdReturnNil__to_cs( SXCRef context );
static SlagObject* CmdReturnNil__to_java( SXCRef context );
static SlagChar FileManager__path_separator( SXCRef context );
static SlagChar FileManager__directory_separator( SXCRef context );
static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Object__to_List( SXCRef context );
static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Object__init__Collection_of_Mapping_of_Int32_and_Object_Array_of_Mapping_of_Int32_and_Object_Int32_Int32( SXCRef context, SXCRef local_0_collection_5136, SXCRef local_1_data_5135, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Object__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Mapping_of_Int32_and_Object__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_Mapping_of_Int32_and_Object__remaining( SXCRef context );
static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Object__read( SXCRef context );
static SlagObject* Mapping_of_String_and_SignalHandler__init__String_SignalHandler( SXCRef context, SXCRef local_0_key_4288, SXCRef local_1_value_4287 );
static SlagObject* CmdThrow__init__Token_Cmd( SXCRef context, SXCRef local_0_t_7719, SXCRef local_1_operand_7718 );
static SlagObject* CmdThrow__create_duplicate( SXCRef context );
static SlagObject* CmdThrow__resolve( SXCRef context );
static SlagObject* CmdThrow__finalize_calls( SXCRef context );
static void CmdThrow__finalize_structure_info( SXCRef context );
static SlagObject* CmdThrow__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdThrow__write_etc( SXCRef context );
static SlagObject* CmdThrow__to_cpp( SXCRef context );
static SlagObject* CmdThrow__to_cs( SXCRef context );
static SlagObject* CmdThrow__to_java( SXCRef context );
static SlagObject* CmdAssignNewObject__init__Token_LocalVarInfo_CmdInitialConstructor( SXCRef context, SXCRef local_0_t_7665, SXCRef local_1_var_info_7664, SXCRef local_2_constructor_7663 );
static SlagObject* CmdAssignNewObject__create_duplicate( SXCRef context );
static SlagObject* CmdAssignNewObject__resolve( SXCRef context );
static SlagObject* CmdCastToInt32__create_duplicate( SXCRef context );
static SlagObject* CmdCastToInt32__type( SXCRef context );
static SlagObject* CmdCastToInt32__optimize( SXCRef context );
static void CmdCastToInt32__write_etc( SXCRef context );
static SlagObject* CmdCastToInt32__statement_to_cpp( SXCRef context );
static SlagObject* CmdCastToInt32__to_cpp( SXCRef context );
static SlagObject* CmdCastToInt32__statement_to_cs( SXCRef context );
static SlagObject* CmdCastToInt32__to_cs( SXCRef context );
static SlagObject* CmdCastToInt32__statement_to_java( SXCRef context );
static SlagObject* CmdCastToInt32__to_java( SXCRef context );
static SlagObject* CmdWhichCase__init__Token( SXCRef context, SXCRef local_0_t_7508 );
static SlagObject* CmdWhichCase__create_duplicate( SXCRef context );
static SlagObject* CmdWhichCase__resolve( SXCRef context );
static SlagObject* CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__create_duplicate( SXCRef context );
static SlagObject* CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__resolve( SXCRef context );
static SlagObject* CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__optimize( SXCRef context );
static void CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__write_etc( SXCRef context );
static SlagObject* SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__init__SignalHandler( SXCRef context, SXCRef local_0_context_4294 );
static SlagObject* CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList( SXCRef context, SXCRef local_0_t_9300, SXCRef local_1_of_type_9299, SXCRef local_2_args_9298 );
static SlagObject* CmdUnresolvedNewObject__create_duplicate( SXCRef context );
static SlagObject* CmdUnresolvedNewObject__resolve( SXCRef context );
static SlagObject* ArrayReader_of_ParameterInfo__to_List( SXCRef context );
static SlagObject* ArrayReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_6881, SXCRef local_1_data_6880, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_ParameterInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_ParameterInfo__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_ParameterInfo__remaining( SXCRef context );
static SlagObject* ArrayReader_of_ParameterInfo__read( SXCRef context );
static void HeapSort_of_MethodInfo__sort__ArrayList_of_MethodInfo_Comparator_of_MethodInfo( SXCRef context, SXCRef local_0_list, SXCRef local_1_comparator );
static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__create_duplicate( SXCRef context );
static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__resolve( SXCRef context );
static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__optimize( SXCRef context );
static void CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__write_etc( SXCRef context );
static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_cpp( SXCRef context );
static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_cs( SXCRef context );
static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_java( SXCRef context );
static SlagObject* HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static void ArrayList_of_Object__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_min_capacity );
static SlagObject* ArrayList_of_Object__insert__Object_Int32( SXCRef context, SXCRef local_0_value, SlagInt32 local_1_before_index );
static SlagObject* ArrayList_of_Object__remove__Int32( SXCRef context, SlagInt32 local_0_index );
static void ArrayList_of_Object__discard__Int32_Int32( SXCRef context, SlagInt32 local_0_first_index, SlagInt32 local_1_last_index );
static void ArrayList_of_Object__discard_last( SXCRef context );
static SlagObject* ArrayList_of_Object__trim_to_count( SXCRef context );
static SlagObject* ArrayList_of_Object__create_duplicate( SXCRef context );
static SlagInt32 ParseReader__available( SXCRef context );
static SlagObject* ParseReader__to_List( SXCRef context );
static SlagObject* ParseReader__read_line( SXCRef context );
static SlagObject* ParseReader__init__Reader_of_Char( SXCRef context, SXCRef local_0_reader );
static SlagObject* ParseReader__init__ArrayList_of_Char( SXCRef context, SXCRef local_0_list );
static SlagObject* ParseReader__init__Array_of_Char( SXCRef context, SXCRef local_0_data_3674 );
static SlagObject* ParseReader__init__String( SXCRef context, SXCRef local_0_text );
void ParseReader__prep_data();
static void ParseReader__prep_data( SXCRef context );
void ParseReader__has_another();
static SlagLogical ParseReader__has_another( SXCRef context );
void ParseReader__peek();
static SlagChar ParseReader__peek( SXCRef context );
void ParseReader__peek__Int32();
static SlagChar ParseReader__peek__Int32( SXCRef context, SlagInt32 local_0_n );
void ParseReader__read();
static SlagChar ParseReader__read( SXCRef context );
void ParseReader__consume__Char();
static SlagLogical ParseReader__consume__Char( SXCRef context, SlagChar local_0_ch );
void ParseReader__consume__String();
static SlagLogical ParseReader__consume__String( SXCRef context, SXCRef local_0_st );
static CompoundParsePos ParseReader__cur_pos( SXCRef context );
static SlagObject* ArrayReader_of_Cmd__to_List( SXCRef context );
static SlagObject* ArrayReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd_Int32_Int32( SXCRef context, SXCRef local_0_collection_7187, SXCRef local_1_data_7186, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_Cmd__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Cmd__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_Cmd__remaining( SXCRef context );
static SlagObject* ArrayReader_of_Cmd__read( SXCRef context );
static SlagObject* CmdLiteralString__init__Token_String_Int32( SXCRef context, SXCRef local_0_t_7217, SXCRef local_1_value_7216, SlagInt32 local_2_index_7215 );
static SlagObject* CmdLiteralString__create_duplicate( SXCRef context );
static SlagObject* CmdLiteralString__type( SXCRef context );
static SlagObject* CmdLiteralString__resolve( SXCRef context );
static void CmdLiteralString__write_etc( SXCRef context );
static SlagObject* CmdLiteralString__to_cpp( SXCRef context );
static SlagObject* CmdLiteralString__to_cs( SXCRef context );
static SlagObject* CmdLiteralString__to_java( SXCRef context );
static SlagLogical StringReader__consume__Char( SXCRef context, SlagChar local_0_look_for );
static SlagObject* StringReader__to_List( SXCRef context );
static SlagObject* StringReader__init__String_Int32_Int32( SXCRef context, SXCRef local_0_string_3968, SlagInt32 local_1_first_index, SlagInt32 local_2_count );
static SlagObject* StringReader__create_duplicate( SXCRef context );
static SlagLogical StringReader__has_another( SXCRef context );
static SlagInt32 StringReader__remaining( SXCRef context );
static SlagChar StringReader__peek( SXCRef context );
static SlagChar StringReader__read( SXCRef context );
static SlagObject* ArrayReverseReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd( SXCRef context, SXCRef local_0_collection_10307, SXCRef local_1_data_10306 );
static SlagObject* ArrayReverseReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_10312, SXCRef local_1_data_10311, SlagInt32 local_2_counter_10310, SlagInt32 local_3_last_exclusive_10309, SlagInt32 local_4_original_modification_count_10308 );
static SlagObject* ArrayReverseReader_of_Cmd__create_duplicate( SXCRef context );
static SlagLogical ArrayReverseReader_of_Cmd__has_another( SXCRef context );
static SlagInt32 ArrayReverseReader_of_Cmd__remaining( SXCRef context );
static SlagObject* ArrayReverseReader_of_Cmd__read( SXCRef context );
static SlagObject* CmdNextIteration__create_duplicate( SXCRef context );
static SlagObject* CmdNextIteration__resolve( SXCRef context );
static void CmdNextIteration__write_etc( SXCRef context );
static SlagObject* CmdNextIteration__to_cpp( SXCRef context );
static SlagObject* CmdNextIteration__to_cs( SXCRef context );
static SlagObject* CmdNextIteration__to_java( SXCRef context );
static SlagObject* CmdEscape__create_duplicate( SXCRef context );
static void CmdEscape__write_etc( SXCRef context );
static SlagObject* CmdEscape__to_cpp( SXCRef context );
static SlagObject* CmdEscape__to_cs( SXCRef context );
static SlagObject* CmdEscape__to_java( SXCRef context );
static SlagObject* CmdForEachOf__create_duplicate( SXCRef context );
static SlagObject* CmdForEachOf__resolve( SXCRef context );
static SlagObject* CmdNewCompound__init__Token_TypeInfo_CmdList( SXCRef context, SXCRef local_0_t_9331, SXCRef local_1_of_type_9330, SXCRef local_2_args_9329 );
static SlagObject* CmdNewCompound__create_duplicate( SXCRef context );
static SlagObject* CmdNewCompound__type( SXCRef context );
static SlagObject* CmdNewCompound__resolve( SXCRef context );
static SlagObject* CmdNewCompound__finalize_calls( SXCRef context );
static void CmdNewCompound__finalize_structure_info( SXCRef context );
static void CmdNewCompound__group_dynamic_methods( SXCRef context );
static SlagObject* CmdNewCompound__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdNewCompound__write_etc( SXCRef context );
static SlagObject* CmdNewCompound__to_cpp( SXCRef context );
static SlagObject* CmdNewCompound__to_cs( SXCRef context );
static SlagObject* CmdNewCompound__to_java( SXCRef context );
void FileWriter__init__String_Logical();
static SlagObject* FileWriter__init__String_Logical( SXCRef context, SXCRef local_0_filename, SlagLogical local_1_append );
void FileWriter__close();
static void FileWriter__close( SXCRef context );
void FileWriter__write__Char();
static void FileWriter__write__Char( SXCRef context, SlagChar local_0_value );
void FileWriter__write__String();
static void FileWriter__write__String( SXCRef context, SXCRef local_0_value );
static void FileWriter__print__String( SXCRef context, SXCRef local_0_value );
static SlagObject* ArrayReader_of_ParamInfo__to_List( SXCRef context );
static SlagObject* ArrayReader_of_ParamInfo__init__Collection_of_ParamInfo_Array_of_ParamInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_10183, SXCRef local_1_data_10182, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_ParamInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_ParamInfo__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_ParamInfo__remaining( SXCRef context );
static SlagObject* ArrayReader_of_ParamInfo__read( SXCRef context );
static SlagInt32 HashTableKeyReader_of_Object_and_Int32__available( SXCRef context );
static SlagObject* HashTableKeyReader_of_Object_and_Int32__to_List( SXCRef context );
static SlagObject* HashTableKeyReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32( SXCRef context, SXCRef local_0_bins_5339 );
static void HashTableKeyReader_of_Object_and_Int32__prep_next( SXCRef context );
static SlagLogical HashTableKeyReader_of_Object_and_Int32__has_another( SXCRef context );
static SlagObject* HashTableKeyReader_of_Object_and_Int32__read( SXCRef context );
static SlagObject* ArrayReader_of_Qualifiers__to_List( SXCRef context );
static SlagObject* ArrayReader_of_Qualifiers__init__Collection_of_Qualifiers_Array_of_Qualifiers_Int32_Int32( SXCRef context, SXCRef local_0_collection_6860, SXCRef local_1_data_6859, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_Qualifiers__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Qualifiers__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_Qualifiers__remaining( SXCRef context );
static SlagObject* ArrayReader_of_Qualifiers__read( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9456, SXCRef local_1_var_info_9455, SXCRef local_2_operand_9454 );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__create_duplicate( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__resolve( SXCRef context );
static void CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__finalize_structure_info( SXCRef context );
static void CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__write_etc( SXCRef context );
static SlagObject* CmdLocalVarAddAndAssign__to_cpp( SXCRef context );
static SlagObject* CmdLocalVarAddAndAssign__to_cs( SXCRef context );
static SlagObject* CmdLocalVarAddAndAssign__to_java( SXCRef context );
static SlagObject* HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size );
static SlagObject* HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__create_duplicate( SXCRef context );
static void StringBuilder__swap__Int32_Int32( SXCRef context, SlagInt32 local_0_index_a, SlagInt32 local_1_index_b );
static void StringBuilder__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_desired_capacity );
static SlagObject* StringBuilder__add__Char( SXCRef context, SlagChar local_0_value );
static SlagObject* StringBuilder__create_duplicate( SXCRef context );
static void StringBuilder__reverse( SXCRef context );
static SlagObject* StringBuilder__init__Int32( SXCRef context, SlagInt32 local_0_capacity );
static SlagObject* StringBuilder__init__String( SXCRef context, SXCRef local_0_st );
static SlagObject* StringBuilder__add__String( SXCRef context, SXCRef local_0_st );
static void StringBuilder__print__String( SXCRef context, SXCRef local_0_st );
void StringBuilder__native_copy__String_Array_of_Char_Int32();
static void StringBuilder__native_copy__String_Array_of_Char_Int32( SXCRef context, SXCRef local_0_src_string, SXCRef local_1_dest_array, SlagInt32 local_2_dest_offset );
static void StringBuilder__write__Char( SXCRef context, SlagChar local_0_ch );
static SlagInt32 StringBuilder__count( SXCRef context );
static SlagInt32 StringBuilder__modification_count( SXCRef context );
static SlagObject* StringBuilder__insert__Char_Int32( SXCRef context, SlagChar local_0_value, SlagInt32 local_1_before_index );
static SlagInt32 SlagScanner__available( SXCRef context );
static SlagObject* SlagScanner__to_List( SXCRef context );
static SlagObject* SlagScanner__init__String( SXCRef context, SXCRef local_0_filename_4737 );
static SlagObject* SlagScanner__init__String_String( SXCRef context, SXCRef local_0_filename_4738, SXCRef local_1__src );
static SlagLogical SlagScanner__has_another( SXCRef context );
static SlagObject* SlagScanner__peek( SXCRef context );
static SlagObject* SlagScanner__read( SXCRef context );
static SlagLogical SlagScanner__consume__Int32( SXCRef context, SlagInt32 local_0_token_type );
static void SlagScanner__must_consume__Int32_String( SXCRef context, SlagInt32 local_0_token_type, SXCRef local_1_expected );
static void SlagScanner__prep_next( SXCRef context );
static void SlagScanner__consume_ws( SXCRef context );
static void SlagScanner__scan_number( SXCRef context );
static void SlagScanner__scan_number__Int32( SXCRef context, SlagInt32 local_0_base );
static SlagObject* SlagScanner__scan_integer__Int32( SXCRef context, SlagInt32 local_0_base );
static SlagReal64 SlagScanner__scan_fraction__Int32( SXCRef context, SlagInt32 local_0_base );
static SlagObject* SlagScanner__scan_id( SXCRef context );
static SlagLogical SlagScanner__check_for_keywords( SXCRef context );
static void SlagScanner__scan_string( SXCRef context );
static SlagObject* SlagScanner__scan_alternate_string( SXCRef context );
static SlagChar SlagScanner__scan_literal_char( SXCRef context );
static SlagLogical SlagScanner__scan_symbol( SXCRef context );
static SlagLogical SlagScanner__check_for_special( SXCRef context );
static SlagObject* SlagScanner__scan_single_line_comment( SXCRef context );
static SlagObject* SlagScanner__scan_multi_line_comment( SXCRef context );
static SlagObject* SlagPreprocessor__init__String( SXCRef context, SXCRef local_0_filename );
static SlagObject* SlagPreprocessor__init__String_String( SXCRef context, SXCRef local_0_filename, SXCRef local_1_data );
static void SlagPreprocessor__prep_next( SXCRef context );
static SlagLogical SlagPreprocessor__preprocessor_evaluate_literal_expression( SXCRef context );
static SlagObject* SlagPreprocessor__evaluate_literal_or( SXCRef context );
static SlagObject* SlagPreprocessor__evaluate_literal_or__LiteralTerm( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagPreprocessor__evaluate_literal_and( SXCRef context );
static SlagObject* SlagPreprocessor__evaluate_literal_and__LiteralTerm( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagPreprocessor__evaluate_literal_not( SXCRef context );
static SlagObject* SlagPreprocessor__evaluate_literal_term( SXCRef context );
static SlagObject* CmdBreakpoint__init__Token_Int32( SXCRef context, SXCRef local_0_t_7672, SlagInt32 local_1_id_7671 );
static SlagObject* CmdBreakpoint__create_duplicate( SXCRef context );
static SlagObject* CmdBreakpoint__resolve( SXCRef context );
static void CmdBreakpoint__write_etc( SXCRef context );
static SlagObject* CmdBreakpoint__to_cpp( SXCRef context );
static SlagObject* CmdBreakpoint__to_cs( SXCRef context );
static SlagObject* CmdBreakpoint__to_java( SXCRef context );
static SlagObject* CmdContingent__create_duplicate( SXCRef context );
static SlagObject* CmdContingent__resolve( SXCRef context );
static SlagObject* CmdContingent__finalize_calls( SXCRef context );
static void CmdContingent__finalize_structure_info( SXCRef context );
static void CmdContingent__group_dynamic_methods( SXCRef context );
static SlagObject* CmdContingent__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdContingent__write_etc( SXCRef context );
static SlagObject* CmdContingent__to_cpp( SXCRef context );
static SlagObject* CmdContingent__to_cs( SXCRef context );
static SlagObject* CmdContingent__to_java( SXCRef context );
static SlagObject* CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__create_duplicate( SXCRef context );
static SlagObject* CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__resolve( SXCRef context );
static SlagObject* CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__optimize( SXCRef context );
static void CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__write_etc( SXCRef context );
static SlagObject* CmdLoop__create_duplicate( SXCRef context );
static SlagObject* CmdLoop__resolve( SXCRef context );
static void CmdLoop__write_etc( SXCRef context );
static SlagObject* CmdLoop__to_cpp( SXCRef context );
static SlagObject* CmdLoop__to_cs( SXCRef context );
static SlagObject* CmdLoop__to_java( SXCRef context );
void Date__init__Int64();
static SlagObject* Date__init__Int64( SXCRef context, SlagInt64 local_0_ms );
void StringManager__create_from__Array_of_Char_Int32();
static SlagObject* StringManager__create_from__Array_of_Char_Int32( SXCRef context, SXCRef local_0_data, SlagInt32 local_1_len );
static SlagObject* StringManager__create_from__ArrayList_of_Char( SXCRef context, SXCRef local_0_data );
void StringManager__create_from__Char();
static SlagObject* StringManager__create_from__Char( SXCRef context, SlagChar local_0_ch );
static SlagObject* StringManager__create_from__Int64( SXCRef context, SlagInt64 local_0_n );
static SlagObject* Mapping_of_Int32_and_Object__init__Int32_Object( SXCRef context, SlagInt32 local_0_key_5133, SXCRef local_1_value_5132 );
static SlagObject* CmdLiteralReal32__init__Token_Real32( SXCRef context, SXCRef local_0_t_9061, SlagReal32 local_1_value_9060 );
static SlagObject* CmdLiteralReal32__create_duplicate( SXCRef context );
static SlagObject* CmdLiteralReal32__type( SXCRef context );
static void CmdLiteralReal32__write_etc( SXCRef context );
static SlagObject* CmdLiteralReal32__to_cpp( SXCRef context );
static SlagObject* CmdLiteralReal32__to_cs( SXCRef context );
static SlagObject* CmdLiteralReal32__to_java( SXCRef context );
static SlagObject* CmdCastToReal32__create_duplicate( SXCRef context );
static SlagObject* CmdCastToReal32__type( SXCRef context );
static SlagObject* CmdCastToReal32__optimize( SXCRef context );
static void CmdCastToReal32__write_etc( SXCRef context );
static SlagObject* CmdCastToReal32__statement_to_cpp( SXCRef context );
static SlagObject* CmdCastToReal32__to_cpp( SXCRef context );
static SlagObject* CmdCastToReal32__statement_to_cs( SXCRef context );
static SlagObject* CmdCastToReal32__to_cs( SXCRef context );
static SlagObject* CmdCastToReal32__statement_to_java( SXCRef context );
static SlagObject* CmdCastToReal32__to_java( SXCRef context );
static void JavaWriter__write__String( SXCRef context, SXCRef local_0_output_filename_10729 );
static void JavaWriter__do_indent( SXCRef context );
static void JavaWriter__print__Char( SXCRef context, SlagChar local_0_ch );
static void JavaWriter__print__String( SXCRef context, SXCRef local_0_st );
static void JavaWriter__println__String( SXCRef context, SXCRef local_0_st );
static void JavaWriter__println__Char( SXCRef context, SlagChar local_0_ch );
static void JavaWriter__println( SXCRef context );
static void JavaWriter__open_file__String( SXCRef context, SXCRef local_0_filename );
static void JavaWriter__assign_cross_compile_names( SXCRef context );
static void JavaWriter__fix_array_type__TypeInfo( SXCRef context, SXCRef local_0_type );
static void JavaWriter__print_globals( SXCRef context );
static void JavaWriter__print_types( SXCRef context );
static void JavaWriter__print_constructor__TypeInfo_MethodInfo( SXCRef context, SXCRef local_0_type, SXCRef local_1_m );
static void JavaWriter__print_prototype__MethodInfo_Logical( SXCRef context, SXCRef local_0_m, SlagLogical local_1_semicolon );
static void JavaWriter__print_method__MethodInfo( SXCRef context, SXCRef local_0_m );
static void JavaWriter__write_end_id__CmdStructure( SXCRef context, SXCRef local_0_cmd );
static SlagObject* JavaWriter__native_call__String_String_String_CmdList( SXCRef context, SXCRef local_0_full_sig, SXCRef local_1_method_name, SXCRef local_2_context, SXCRef local_3_args );
static SlagObject* JavaWriter__native_call__String_String_String_ArrayList_of_String( SXCRef context, SXCRef local_0_full_sig, SXCRef local_1_method_name, SXCRef local_2_context, SXCRef local_3_args );
static SlagObject* CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init__Token_MethodVarInfo( SXCRef context, SXCRef local_0_t_9453, SXCRef local_1_var_info_9452 );
static SlagObject* CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__create_duplicate( SXCRef context );
static SlagObject* CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__resolve( SXCRef context );
static void CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__finalize_structure_info( SXCRef context );
static void CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__write_etc( SXCRef context );
static void SlagScannerManager__add_define__String_String( SXCRef context, SXCRef local_0_id, SXCRef local_1_value );
static void SlagScannerManager__set_up_keywords( SXCRef context );
static SlagObject* ArrayList_of_Qualifiers__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Qualifiers__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_Qualifiers__count( SXCRef context );
static SlagInt32 ArrayList_of_Qualifiers__modification_count( SXCRef context );
static SlagObject* ArrayList_of_Qualifiers__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Char__consume__Char( SXCRef context, SlagChar local_0_look_for );
static SlagObject* ArrayReader_of_Char__to_List( SXCRef context );
static SlagObject* ArrayReader_of_Char__init__Collection_of_Char_Array_of_Char_Int32_Int32( SXCRef context, SXCRef local_0_collection_4786, SXCRef local_1_data_4785, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_Char__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Char__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_Char__remaining( SXCRef context );
static SlagChar ArrayReader_of_Char__peek( SXCRef context );
static SlagChar ArrayReader_of_Char__read( SXCRef context );
static SlagObject* CmdDynamicCall__create_duplicate( SXCRef context );
static SlagObject* CmdDynamicCall__resolve( SXCRef context );
static SlagObject* CmdDynamicCall__finalize_calls( SXCRef context );
static void CmdDynamicCall__group_dynamic_methods( SXCRef context );
static void CmdDynamicCall__add_overrides_to_group__MethodInfo_MethodGroup( SXCRef context, SXCRef local_0_m, SXCRef local_1_group );
static void CmdDynamicCall__write_etc( SXCRef context );
static SlagObject* CmdDynamicCall__statement_to_cpp( SXCRef context );
static SlagObject* CmdDynamicCall__to_cpp( SXCRef context );
static SlagObject* CmdDynamicCall__to_cpp__Logical( SXCRef context, SlagLogical local_0_cast_return_value );
static SlagObject* CmdDynamicCall__statement_to_cs( SXCRef context );
static SlagObject* CmdDynamicCall__to_cs( SXCRef context );
static SlagObject* CmdDynamicCall__to_cs__Logical( SXCRef context, SlagLogical local_0_cast_return_value );
static SlagObject* CmdDynamicCall__statement_to_java( SXCRef context );
static SlagObject* CmdDynamicCall__to_java( SXCRef context );
static SlagObject* CmdDynamicCall__to_java__Logical( SXCRef context, SlagLogical local_0_cast_return_value );
static SlagObject* CmdReturnValue__init__Token_Cmd_Logical( SXCRef context, SXCRef local_0_t_7717, SXCRef local_1_operand_7716, SlagLogical local_2_handled_foreach_fixup_7715 );
static SlagObject* CmdReturnValue__create_duplicate( SXCRef context );
static SlagObject* CmdReturnValue__resolve( SXCRef context );
static SlagObject* CmdReturnValue__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdReturnValue__write_etc( SXCRef context );
static SlagObject* CmdReturnValue__to_cpp( SXCRef context );
static SlagObject* CmdReturnValue__to_cs( SXCRef context );
static SlagObject* CmdReturnValue__to_java( SXCRef context );
static void LiteralTerm__require_logical( SXCRef context );
static SlagLogical LiteralTerm__as_Logical( SXCRef context );
static SlagObject* ArrayList_of_SlagError__remove_last( SXCRef context );
static void ArrayList_of_SlagError__discard_from__Int32( SXCRef context, SlagInt32 local_0_first_index );
static SlagObject* ArrayList_of_SlagError__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_SlagError__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_SlagError__count( SXCRef context );
static SlagInt32 ArrayList_of_SlagError__modification_count( SXCRef context );
static SlagObject* ArrayList_of_SlagError__create_duplicate( SXCRef context );
static void Global__init_singleton( SXCRef context );
static void Global__set_up_stdio( SXCRef context );
static void Global__print__Object( SXCRef context, SXCRef local_0_obj );
static void Global__print__String( SXCRef context, SXCRef local_0_st );
static void Global__println__Object( SXCRef context, SXCRef local_0_obj );
static void Global__println__String( SXCRef context, SXCRef local_0_st );
void Global__time_ms();
static SlagInt64 Global__time_ms( SXCRef context );
static SlagObject* Global__to_String__Object( SXCRef context, SXCRef local_0_obj );
static SlagObject* Global__to_String__Exception( SXCRef context, SXCRef local_0_err );
static SlagObject* Global__to_String__Char( SXCRef context, SlagChar local_0_ch );
static SlagObject* Global__to_String__Real64( SXCRef context, SlagReal64 local_0_n );
static SlagObject* Global__to_String__Logical( SXCRef context, SlagLogical local_0_n );
static SlagObject* Global__to_String__Int64_Int32( SXCRef context, SlagInt64 local_0_n, SlagInt32 local_1_base );
static SlagObject* Global__to_String__Int32_Int32( SXCRef context, SlagInt32 local_0_n, SlagInt32 local_1_base );
static SlagObject* Global__to_String__Char_Int32( SXCRef context, SlagChar local_0_ch, SlagInt32 local_1_base );
static SlagObject* Global__to_String__Byte_Int32( SXCRef context, SlagByte local_0_n, SlagInt32 local_1_base );
static SlagObject* Global__format_string__String_Int32_Int32_Char( SXCRef context, SXCRef local_0_st, SlagInt32 local_1_whole_digits, SlagInt32 local_2_decimal_digits, SlagChar local_3_fill_char );
static SlagObject* Global__format_string__Real64_Int32_Int32_Char( SXCRef context, SlagReal64 local_0_num, SlagInt32 local_1_whole_digits, SlagInt32 local_2_decimal_digits, SlagChar local_3_fill_char );
static SlagObject* Global__format_string__Int32_Int32_Int32_Char( SXCRef context, SlagInt32 local_0_num, SlagInt32 local_1_whole_digits, SlagInt32 local_2_decimal_digits, SlagChar local_3_fill_char );
static SlagObject* Global__format_string__Object_Int32_Int32_Char( SXCRef context, SXCRef local_0_obj, SlagInt32 local_1_whole_digits, SlagInt32 local_2_decimal_digits, SlagChar local_3_fill_char );
static SlagLogical Global__is_digit__Char_Int32( SXCRef context, SlagChar local_0_ch, SlagInt32 local_1_base );
static SlagInt32 Global__to_value__Char( SXCRef context, SlagChar local_0_ch );
static SlagInt32 Global__hash_code__Int32( SXCRef context, SlagInt32 local_0_n );
static SlagObject* Global__abs__BigInt( SXCRef context, SXCRef local_0_n );
static SlagLogical Global__is_odd__BigInt( SXCRef context, SXCRef local_0_n );
static SlagObject* ArrayReader_of_Mapping_of_Object_and_Int32__to_List( SXCRef context );
static SlagObject* ArrayReader_of_Mapping_of_Object_and_Int32__init__Collection_of_Mapping_of_Object_and_Int32_Array_of_Mapping_of_Object_and_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_5015, SXCRef local_1_data_5014, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_Mapping_of_Object_and_Int32__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Mapping_of_Object_and_Int32__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_Mapping_of_Object_and_Int32__remaining( SXCRef context );
static SlagObject* ArrayReader_of_Mapping_of_Object_and_Int32__read( SXCRef context );
static SlagObject* ArrayReverseReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo( SXCRef context, SXCRef local_0_collection_8338, SXCRef local_1_data_8337 );
static SlagObject* ArrayReverseReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_8343, SXCRef local_1_data_8342, SlagInt32 local_2_counter_8341, SlagInt32 local_3_last_exclusive_8340, SlagInt32 local_4_original_modification_count_8339 );
static SlagObject* ArrayReverseReader_of_ParameterInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReverseReader_of_ParameterInfo__has_another( SXCRef context );
static SlagInt32 ArrayReverseReader_of_ParameterInfo__remaining( SXCRef context );
static SlagObject* ArrayReverseReader_of_ParameterInfo__read( SXCRef context );
static SlagObject* ArrayReader_of_CmdElseIf__to_List( SXCRef context );
static SlagObject* ArrayReader_of_CmdElseIf__init__Collection_of_CmdElseIf_Array_of_CmdElseIf_Int32_Int32( SXCRef context, SXCRef local_0_collection_7407, SXCRef local_1_data_7406, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_CmdElseIf__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_CmdElseIf__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_CmdElseIf__remaining( SXCRef context );
static SlagObject* ArrayReader_of_CmdElseIf__read( SXCRef context );
static SlagObject* CmdLocalVarDecrement__to_cpp( SXCRef context );
static SlagObject* CmdLocalVarDecrement__to_cs( SXCRef context );
static SlagObject* CmdLocalVarDecrement__to_java( SXCRef context );
static SlagObject* CmdWhile__init__Token_Int32_Cmd( SXCRef context, SXCRef local_0_t_7637, SlagInt32 local_1_id_7636, SXCRef local_2_condition_7635 );
static SlagObject* CmdWhile__init__Token_Int32_Cmd_CmdStatementList( SXCRef context, SXCRef local_0_t_7641, SlagInt32 local_1_id_7640, SXCRef local_2_condition_7639, SXCRef local_3_body_7638 );
static SlagObject* CmdWhile__create_duplicate( SXCRef context );
static SlagObject* CmdWhile__resolve( SXCRef context );
static SlagObject* CmdWhile__optimize( SXCRef context );
static SlagObject* CmdWhile__finalize_calls( SXCRef context );
static void CmdWhile__finalize_structure_info( SXCRef context );
static void CmdWhile__group_dynamic_methods( SXCRef context );
static SlagObject* CmdWhile__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdWhile__to_java( SXCRef context );
static void CmdWhile__write_etc( SXCRef context );
static SlagObject* CmdWhile__to_cpp( SXCRef context );
static SlagObject* CmdWhile__to_cs( SXCRef context );
static SlagObject* CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__create_duplicate( SXCRef context );
static SlagObject* CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__resolve( SXCRef context );
static SlagObject* CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__optimize( SXCRef context );
static void CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__write_etc( SXCRef context );
static SlagObject* CmdCmpGE__to_cpp( SXCRef context );
static SlagObject* CmdCmpGE__to_cs( SXCRef context );
static SlagObject* CmdCmpGE__to_java( SXCRef context );
static void Runtime__init_singleton( SXCRef context );
static SlagObject* CmdCast__init__Token_Cmd_TypeInfo( SXCRef context, SXCRef local_0_t_7802, SXCRef local_1_operand_7801, SXCRef local_2_to_type_7800 );
static SlagObject* CmdCast__create_duplicate( SXCRef context );
static SlagObject* CmdCast__type( SXCRef context );
static SlagObject* CmdCast__resolve( SXCRef context );
static SlagObject* CmdNarrowingCast__create_duplicate( SXCRef context );
static SlagObject* CmdNarrowingCast__resolve( SXCRef context );
static void CmdNarrowingCast__write_etc( SXCRef context );
static SlagObject* CmdNarrowingCast__statement_to_cpp( SXCRef context );
static SlagObject* CmdNarrowingCast__to_cpp( SXCRef context );
static SlagObject* CmdNarrowingCast__statement_to_cs( SXCRef context );
static SlagObject* CmdNarrowingCast__to_cs( SXCRef context );
static SlagObject* CmdNarrowingCast__statement_to_java( SXCRef context );
static SlagObject* CmdNarrowingCast__to_java( SXCRef context );
static SlagObject* CmdPropertyWrite__init__Token_Cmd_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9514, SXCRef local_1_context_9513, SXCRef local_2_var_info_9512, SXCRef local_3_new_value_9511 );
static SlagObject* CmdPropertyWrite__create_duplicate( SXCRef context );
static SlagObject* CmdPropertyWrite__resolve( SXCRef context );
static SlagObject* CmdPropertyWrite__optimize( SXCRef context );
static SlagObject* CmdPropertyWrite__finalize_calls( SXCRef context );
static void CmdPropertyWrite__finalize_structure_info( SXCRef context );
static void CmdPropertyWrite__group_dynamic_methods( SXCRef context );
static SlagObject* CmdPropertyWrite__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdPropertyWrite__write_etc( SXCRef context );
static SlagObject* CmdPropertyWrite__to_cpp( SXCRef context );
static SlagObject* CmdPropertyWrite__to_cs( SXCRef context );
static SlagObject* CmdPropertyWrite__to_java( SXCRef context );
static SlagObject* CmdContingentControl__init__Token_Cmd_Int32( SXCRef context, SXCRef local_0_t_7705, SXCRef local_1_operand_7704, SlagInt32 local_2_id_7703 );
static SlagObject* CmdContingentControl__resolve( SXCRef context );
static SlagObject* CmdContingentControl__finalize_calls( SXCRef context );
static void CmdContingentControl__finalize_structure_info( SXCRef context );
static SlagObject* CmdContingentControl__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static SlagObject* CmdSufficient__create_duplicate( SXCRef context );
static void CmdSufficient__write_etc( SXCRef context );
static SlagObject* CmdSufficient__to_cpp( SXCRef context );
static SlagObject* CmdSufficient__to_cs( SXCRef context );
static SlagObject* CmdSufficient__to_java( SXCRef context );
static SlagObject* CmdBlock__create_duplicate( SXCRef context );
static SlagObject* CmdBlock__resolve( SXCRef context );
static void CmdBlock__write_etc( SXCRef context );
static SlagObject* CmdBlock__to_cpp( SXCRef context );
static SlagObject* CmdBlock__to_cs( SXCRef context );
static SlagObject* CmdBlock__to_java( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__init__Token_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9539, SXCRef local_1_var_info_9538, SXCRef local_2_operand_9537 );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__create_duplicate( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__resolve( SXCRef context );
static void CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__finalize_structure_info( SXCRef context );
static void CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__write_etc( SXCRef context );
static SlagObject* CmdThisPropertyDivAndAssign__to_cpp( SXCRef context );
static SlagObject* CmdThisPropertyDivAndAssign__to_cs( SXCRef context );
static SlagObject* CmdThisPropertyDivAndAssign__to_java( SXCRef context );
static SlagObject* ArrayReader_of_String__to_List( SXCRef context );
static SlagObject* ArrayReader_of_String__init__Collection_of_String_Array_of_String_Int32_Int32( SXCRef context, SXCRef local_0_collection_4101, SXCRef local_1_data_4100, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_String__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_String__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_String__remaining( SXCRef context );
static SlagObject* ArrayReader_of_String__read( SXCRef context );
static SlagObject* BigIntManager__create_from__Int64( SXCRef context, SlagInt64 local_0_n );
static SlagObject* CmdArrayGet__init__Token_Cmd_Cmd( SXCRef context, SXCRef local_0_t_9214, SXCRef local_1_context_9213, SXCRef local_2_index_expr_9212 );
static SlagObject* CmdArrayGet__create_duplicate( SXCRef context );
static SlagObject* CmdArrayGet__type( SXCRef context );
static SlagObject* CmdArrayGet__resolve( SXCRef context );
static SlagObject* CmdArrayGet__finalize_calls( SXCRef context );
static void CmdArrayGet__finalize_structure_info( SXCRef context );
static void CmdArrayGet__group_dynamic_methods( SXCRef context );
static SlagObject* CmdArrayGet__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdArrayGet__write_etc( SXCRef context );
static SlagObject* CmdArrayGet__to_cpp( SXCRef context );
static SlagObject* CmdArrayGet__to_cs( SXCRef context );
static SlagObject* CmdArrayGet__to_java( SXCRef context );
static SlagInt32 RangeIteratorGE_of_Int32__available( SXCRef context );
static SlagObject* RangeIteratorGE_of_Int32__to_List( SXCRef context );
static SlagObject* RangeIteratorGE_of_Int32__init__Int32_Int32_Int32( SXCRef context, SlagInt32 local_0_first_value, SlagInt32 local_1_last_value_4852, SlagInt32 local_2_step_size_4851 );
static SlagObject* RangeIteratorGE_of_Int32__create_duplicate( SXCRef context );
static SlagLogical RangeIteratorGE_of_Int32__has_another( SXCRef context );
static SlagInt32 RangeIteratorGE_of_Int32__read( SXCRef context );
static SlagObject* CmdArraySet__init__Token_Cmd_Cmd_Cmd( SXCRef context, SXCRef local_0_t_9220, SXCRef local_1_context_9219, SXCRef local_2_index_expr_9218, SXCRef local_3_value_expr_9217 );
static SlagObject* CmdArraySet__create_duplicate( SXCRef context );
static SlagObject* CmdArraySet__resolve( SXCRef context );
static SlagObject* CmdArraySet__finalize_calls( SXCRef context );
static void CmdArraySet__finalize_structure_info( SXCRef context );
static void CmdArraySet__group_dynamic_methods( SXCRef context );
static SlagObject* CmdArraySet__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdArraySet__write_etc( SXCRef context );
static SlagObject* CmdArraySet__to_cpp( SXCRef context );
static SlagObject* CmdArraySet__to_cs( SXCRef context );
static SlagObject* CmdArraySet__to_java( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9461, SXCRef local_1_var_info_9460, SXCRef local_2_operand_9459 );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__create_duplicate( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__resolve( SXCRef context );
static void CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__finalize_structure_info( SXCRef context );
static void CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__write_etc( SXCRef context );
static SlagObject* CmdLocalVarSubAndAssign__to_cpp( SXCRef context );
static SlagObject* CmdLocalVarSubAndAssign__to_cs( SXCRef context );
static SlagObject* CmdLocalVarSubAndAssign__to_java( SXCRef context );
static SlagObject* CmdCmpGT__to_cpp( SXCRef context );
static SlagObject* CmdCmpGT__to_cs( SXCRef context );
static SlagObject* CmdCmpGT__to_java( SXCRef context );
static SlagObject* ArrayReader_of_Signal__to_List( SXCRef context );
static SlagObject* ArrayReader_of_Signal__init__Collection_of_Signal_Array_of_Signal_Int32_Int32( SXCRef context, SXCRef local_0_collection_4312, SXCRef local_1_data_4311, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_Signal__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Signal__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_Signal__remaining( SXCRef context );
static SlagObject* ArrayReader_of_Signal__read( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9465, SXCRef local_1_var_info_9464, SXCRef local_2_operand_9463 );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__create_duplicate( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__resolve( SXCRef context );
static void CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__finalize_structure_info( SXCRef context );
static void CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__write_etc( SXCRef context );
static SlagObject* CmdLocalVarMulAndAssign__to_cpp( SXCRef context );
static SlagObject* CmdLocalVarMulAndAssign__to_cs( SXCRef context );
static SlagObject* CmdLocalVarMulAndAssign__to_java( SXCRef context );
static void SignalManager__init_singleton( SXCRef context );
static void SignalManager__raise__Signal( SXCRef context, SXCRef local_0_signal );
static void SignalManager__install_default_signal_handlers( SXCRef context );
static SlagLogical StdInReader__consume__Char( SXCRef context, SlagChar local_0_look_for );
static SlagObject* StdInReader__to_List( SXCRef context );
static SlagLogical StdInReader__has_another( SXCRef context );
static SlagChar StdInReader__peek( SXCRef context );
static SlagChar StdInReader__read( SXCRef context );
void StdInReader__native_read_char();
static SlagChar StdInReader__native_read_char( SXCRef context );
static SlagLogical StdInReader__prep_next( SXCRef context );
static SlagInt32 StdInReader__available( SXCRef context );
static SlagObject* Array_of_Mapping_of_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* CmdLogicalize__create_duplicate( SXCRef context );
static SlagObject* CmdLogicalize__resolve( SXCRef context );
static SlagObject* ArrayReverseReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo( SXCRef context, SXCRef local_0_collection_7682, SXCRef local_1_data_7681 );
static SlagObject* ArrayReverseReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_7687, SXCRef local_1_data_7686, SlagInt32 local_2_counter_7685, SlagInt32 local_3_last_exclusive_7684, SlagInt32 local_4_original_modification_count_7683 );
static SlagObject* ArrayReverseReader_of_ControlStructureInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReverseReader_of_ControlStructureInfo__has_another( SXCRef context );
static SlagInt32 ArrayReverseReader_of_ControlStructureInfo__remaining( SXCRef context );
static SlagObject* ArrayReverseReader_of_ControlStructureInfo__read( SXCRef context );
static SlagObject* CmdArrayCreate__init__Token_TypeInfo_Cmd( SXCRef context, SXCRef local_0_t_9314, SXCRef local_1_of_type_9313, SXCRef local_2_size_expr_9312 );
static SlagObject* CmdArrayCreate__create_duplicate( SXCRef context );
static SlagObject* CmdArrayCreate__type( SXCRef context );
static SlagObject* CmdArrayCreate__resolve( SXCRef context );
static SlagObject* CmdArrayCreate__finalize_calls( SXCRef context );
static void CmdArrayCreate__finalize_structure_info( SXCRef context );
static void CmdArrayCreate__group_dynamic_methods( SXCRef context );
static SlagObject* CmdArrayCreate__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdArrayCreate__write_etc( SXCRef context );
static SlagObject* CmdArrayCreate__to_cpp( SXCRef context );
static SlagObject* CmdArrayCreate__to_cs( SXCRef context );
static SlagObject* CmdArrayCreate__to_java( SXCRef context );
static SlagObject* CmdLiteralChar__init__Token_Char( SXCRef context, SXCRef local_0_t_7902, SlagChar local_1_value_7901 );
static SlagObject* CmdLiteralChar__create_duplicate( SXCRef context );
static SlagObject* CmdLiteralChar__type( SXCRef context );
static void CmdLiteralChar__write_etc( SXCRef context );
static SlagObject* CmdLiteralChar__to_cpp( SXCRef context );
static SlagObject* CmdLiteralChar__to_cs( SXCRef context );
static SlagObject* CmdLiteralChar__to_java( SXCRef context );
static SlagObject* CmdCastToChar__create_duplicate( SXCRef context );
static SlagObject* CmdCastToChar__type( SXCRef context );
static SlagObject* CmdCastToChar__optimize( SXCRef context );
static void CmdCastToChar__write_etc( SXCRef context );
static SlagObject* CmdCastToChar__statement_to_cpp( SXCRef context );
static SlagObject* CmdCastToChar__to_cpp( SXCRef context );
static SlagObject* CmdCastToChar__statement_to_cs( SXCRef context );
static SlagObject* CmdCastToChar__to_cs( SXCRef context );
static SlagObject* CmdCastToChar__statement_to_java( SXCRef context );
static SlagObject* CmdCastToChar__to_java( SXCRef context );
static SlagObject* SlagFile__init__Token_String_String( SXCRef context, SXCRef local_0_t_6802, SXCRef local_1_filename_6801, SXCRef local_2_data_6800 );
static SlagInt32 HashTableMappingReader_of_Object_and_Object__available( SXCRef context );
static SlagObject* HashTableMappingReader_of_Object_and_Object__to_List( SXCRef context );
static SlagObject* HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object( SXCRef context, SXCRef local_0_bins_4077 );
static void HashTableMappingReader_of_Object_and_Object__prep_next( SXCRef context );
static SlagLogical HashTableMappingReader_of_Object_and_Object__has_another( SXCRef context );
static SlagObject* HashTableMappingReader_of_Object_and_Object__read( SXCRef context );
static SlagObject* PriorSlagError__init__Token_String_Token( SXCRef context, SXCRef local_0_t, SXCRef local_1_message_6932, SXCRef local_2_prior_t );
static SlagObject* ParameterInfo__init__Token_MethodInfo_TypeInfo_String_Cmd_Int32( SXCRef context, SXCRef local_0_t_6878, SXCRef local_1_method_context_6877, SXCRef local_2_type_6876, SXCRef local_3_name_6875, SXCRef local_4_default_value_6874, SlagInt32 local_5_index_6873 );
static SlagObject* ParameterInfo__create_duplicate( SXCRef context );
static SlagObject* ParameterInfo__x_name( SXCRef context );
static SlagObject* CmdCompoundPropertyRead__create_duplicate( SXCRef context );
static SlagObject* CmdCompoundPropertyRead__resolve( SXCRef context );
static void CmdCompoundPropertyRead__write_etc( SXCRef context );
static SlagObject* CmdCompoundPropertyRead__to_cpp( SXCRef context );
static SlagObject* CmdCompoundPropertyRead__to_cs( SXCRef context );
static SlagObject* CmdCompoundPropertyRead__to_java( SXCRef context );
static SlagObject* CmdNecessary__create_duplicate( SXCRef context );
static void CmdNecessary__write_etc( SXCRef context );
static SlagObject* CmdNecessary__to_cpp( SXCRef context );
static SlagObject* CmdNecessary__to_cs( SXCRef context );
static SlagObject* CmdNecessary__to_java( SXCRef context );
static SlagObject* StringTriplet__init__String_String_String( SXCRef context, SXCRef local_0_first_9408, SXCRef local_1_middle_9407, SXCRef local_2_last_9406 );
static SlagObject* TypeTemplate__init__Token_Qualifiers_String_ArrayList_of_String_Int32_String( SXCRef context, SXCRef local_0_t_7139, SXCRef local_1_qualifiers_7138, SXCRef local_2_name_7137, SXCRef local_3_placeholder_types_7136, SlagInt32 local_4_end_type_7135, SXCRef local_5_end_symbol_7134 );
static SlagObject* CmdLiteralLogical__init__Token_Logical( SXCRef context, SXCRef local_0_t_7924, SlagLogical local_1_value_7923 );
static SlagObject* CmdLiteralLogical__create_duplicate( SXCRef context );
static SlagObject* CmdLiteralLogical__type( SXCRef context );
static void CmdLiteralLogical__write_etc( SXCRef context );
static SlagObject* CmdLiteralLogical__to_cpp( SXCRef context );
static SlagObject* CmdLiteralLogical__to_cs( SXCRef context );
static SlagObject* CmdLiteralLogical__to_java( SXCRef context );
static SlagObject* CmdElseIf__init__Token_Cmd_CmdStatementList( SXCRef context, SXCRef local_0_t_7404, SXCRef local_1_condition_7403, SXCRef local_2_body_7402 );
static SlagObject* CmdElseIf__create_duplicate( SXCRef context );
static SlagObject* CmdElseIf__resolve( SXCRef context );
static SlagObject* CmdElseIf__finalize_calls( SXCRef context );
static void CmdElseIf__finalize_structure_info( SXCRef context );
static void CmdElseIf__group_dynamic_methods( SXCRef context );
static SlagObject* CmdElseIf__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdElseIf__write_etc( SXCRef context );
static SlagObject* CmdElseIf__to_cpp( SXCRef context );
static SlagObject* CmdElseIf__to_cs( SXCRef context );
static SlagObject* CmdElseIf__to_java( SXCRef context );
static SlagObject* CmdCmpIsNot__create_duplicate( SXCRef context );
static SlagObject* CmdCmpIsNot__resolve( SXCRef context );
static void CmdCmpIsNot__write_etc( SXCRef context );
static SlagObject* CmdCmpIsNot__to_cpp( SXCRef context );
static SlagObject* CmdCmpIsNot__to_cs( SXCRef context );
static SlagObject* CmdCmpIsNot__to_java( SXCRef context );
static SlagObject* ArrayReader_of_TypeInfo__to_List( SXCRef context );
static SlagObject* ArrayReader_of_TypeInfo__init__Collection_of_TypeInfo_Array_of_TypeInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_8186, SXCRef local_1_data_8185, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_TypeInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_TypeInfo__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_TypeInfo__remaining( SXCRef context );
static SlagObject* ArrayReader_of_TypeInfo__read( SXCRef context );
static void RandomNumberGenerator__init_singleton( SXCRef context );
static SlagObject* RandomNumberGenerator__init__Int64( SXCRef context, SlagInt64 local_0_initial_seed_2996 );
static SlagObject* RandomNumberGenerator__init__RandomNumberGenerator( SXCRef context, SXCRef local_0_existing );
static SlagObject* RandomNumberGenerator__create_duplicate( SXCRef context );
static void RandomNumberGenerator__rewind( SXCRef context );
static SlagInt64 RandomNumberGenerator__advance_random( SXCRef context );
static SlagObject* CmdCastToLogical__create_duplicate( SXCRef context );
static SlagObject* CmdCastToLogical__type( SXCRef context );
static SlagObject* CmdCastToLogical__optimize( SXCRef context );
static void CmdCastToLogical__write_etc( SXCRef context );
static SlagObject* CmdCastToLogical__statement_to_cpp( SXCRef context );
static SlagObject* CmdCastToLogical__to_cpp( SXCRef context );
static SlagObject* CmdCastToLogical__statement_to_cs( SXCRef context );
static SlagObject* CmdCastToLogical__to_cs( SXCRef context );
static SlagObject* CmdCastToLogical__statement_to_java( SXCRef context );
static SlagObject* CmdCastToLogical__to_java( SXCRef context );
static SlagObject* CmdLocalVarRead__init__Token_MethodVarInfo( SXCRef context, SXCRef local_0_t_8858, SXCRef local_1_var_info_8857 );
static SlagObject* CmdLocalVarRead__create_duplicate( SXCRef context );
static SlagObject* CmdLocalVarRead__type( SXCRef context );
static void CmdLocalVarRead__finalize_structure_info( SXCRef context );
static SlagObject* CmdLocalVarRead__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdLocalVarRead__write_etc( SXCRef context );
static SlagObject* CmdLocalVarRead__to_cpp( SXCRef context );
static SlagObject* CmdLocalVarRead__to_cs( SXCRef context );
static SlagObject* CmdLocalVarRead__to_java( SXCRef context );
static void CSWriter__write__String( SXCRef context, SXCRef local_0_output_filename_10580 );
static void CSWriter__do_indent( SXCRef context );
static void CSWriter__print__Char( SXCRef context, SlagChar local_0_ch );
static void CSWriter__print__String( SXCRef context, SXCRef local_0_st );
static void CSWriter__println__String( SXCRef context, SXCRef local_0_st );
static void CSWriter__println__Char( SXCRef context, SlagChar local_0_ch );
static void CSWriter__println( SXCRef context );
static void CSWriter__print_header( SXCRef context );
static void CSWriter__print_helper_functions( SXCRef context );
static void CSWriter__assign_cross_compile_names( SXCRef context );
static void CSWriter__fix_array_type__TypeInfo( SXCRef context, SXCRef local_0_type );
static void CSWriter__print_runtime_helpers( SXCRef context );
static void CSWriter__print_types( SXCRef context );
static void CSWriter__print_constructor__TypeInfo_MethodInfo( SXCRef context, SXCRef local_0_type, SXCRef local_1_m );
static void CSWriter__print_prototype__MethodInfo_Logical( SXCRef context, SXCRef local_0_m, SlagLogical local_1_semicolon );
static void CSWriter__print_method__MethodInfo( SXCRef context, SXCRef local_0_m );
static void CSWriter__write_continue_id__CmdStructure( SXCRef context, SXCRef local_0_cmd );
static void CSWriter__write_end_id__CmdStructure( SXCRef context, SXCRef local_0_cmd );
static SlagObject* CSWriter__native_call__String_String_String_CmdList( SXCRef context, SXCRef local_0_full_sig, SXCRef local_1_method_name, SXCRef local_2_context, SXCRef local_3_args );
static SlagObject* CSWriter__native_call__String_String_String_ArrayList_of_String( SXCRef context, SXCRef local_0_full_sig, SXCRef local_1_method_name, SXCRef local_2_context, SXCRef local_3_args );
static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__create_duplicate( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__resolve( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__optimize( SXCRef context );
static void CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__write_etc( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_cpp( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_cs( SXCRef context );
static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_java( SXCRef context );
static SlagObject* KeywordPairing__init__String_String( SXCRef context, SXCRef local_0_open_6808, SXCRef local_1_close_6807 );
static SlagObject* CmdExplicitListLiteral__init__Token_TypeInfo_ArrayList_of_Cmd( SXCRef context, SXCRef local_0_t_7897, SXCRef local_1_of_type_7896, SXCRef local_2_args_7895 );
static SlagObject* CmdExplicitListLiteral__create_duplicate( SXCRef context );
static SlagObject* CmdExplicitListLiteral__resolve( SXCRef context );
static SlagObject* CmdForEachInWithRemoveCurrent__create_duplicate( SXCRef context );
static SlagObject* CmdForEachInWithRemoveCurrent__resolve( SXCRef context );
static SlagObject* CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init__Token_PropertyInfo( SXCRef context, SXCRef local_0_t_9524, SXCRef local_1_var_info_9523 );
static SlagObject* CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__create_duplicate( SXCRef context );
static SlagObject* CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__resolve( SXCRef context );
static void CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__finalize_structure_info( SXCRef context );
static void CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__write_etc( SXCRef context );
static SlagObject* CmdThisPropertyDecrement__to_cpp( SXCRef context );
static SlagObject* CmdThisPropertyDecrement__to_cs( SXCRef context );
static SlagObject* CmdThisPropertyDecrement__to_java( SXCRef context );
static SlagObject* Range_of_Int32__init__Int32_Int32_Int32( SXCRef context, SlagInt32 local_0_first_4811, SlagInt32 local_1_last_4810, SlagInt32 local_2_step_size_4809 );
static SlagObject* Range_of_Int32__create_reader( SXCRef context );
static SlagObject* RangeGE_of_Int32__init__Int32_Int32_Int32( SXCRef context, SlagInt32 local_0_first_4848, SlagInt32 local_1_last_4847, SlagInt32 local_2_step_size_4846 );
static SlagObject* RangeGE_of_Int32__create_reader( SXCRef context );
static SlagObject* CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__create_duplicate( SXCRef context );
static SlagObject* CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__resolve( SXCRef context );
static SlagObject* CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__optimize( SXCRef context );
static void CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__write_etc( SXCRef context );
static SlagInt32 CoerceReader_of_MethodGroup__available( SXCRef context );
static SlagObject* CoerceReader_of_MethodGroup__to_List( SXCRef context );
static SlagObject* CoerceReader_of_MethodGroup__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_9697 );
static SlagLogical CoerceReader_of_MethodGroup__has_another( SXCRef context );
static SlagObject* CoerceReader_of_MethodGroup__read( SXCRef context );
static SlagObject* CmdAccessIndex__init__Token_Cmd_CmdList( SXCRef context, SXCRef local_0_t_7807, SXCRef local_1_operand_7806, SXCRef local_2_args_7805 );
static SlagObject* CmdAccessIndex__create_duplicate( SXCRef context );
static SlagObject* CmdAccessIndex__resolve( SXCRef context );
static SlagObject* CmdUnderlyingCall__init__Token( SXCRef context, SXCRef local_0_t_7209 );
static SlagObject* CmdUnderlyingCall__create_duplicate( SXCRef context );
static SlagObject* CmdUnderlyingCall__resolve( SXCRef context );
static SlagObject* CmdWideningCast__create_duplicate( SXCRef context );
static SlagObject* CmdWideningCast__resolve( SXCRef context );
static void CmdWideningCast__write_etc( SXCRef context );
static SlagObject* CmdWideningCast__statement_to_cpp( SXCRef context );
static SlagObject* CmdWideningCast__to_cpp( SXCRef context );
static SlagObject* CmdWideningCast__statement_to_cs( SXCRef context );
static SlagObject* CmdWideningCast__to_cs( SXCRef context );
static SlagObject* CmdWideningCast__statement_to_java( SXCRef context );
static SlagObject* CmdWideningCast__to_java( SXCRef context );
static SlagObject* Array_of_StackTraceInfo__create_duplicate( SXCRef context );
static SlagObject* CmdLazyAnd__init__Token_Cmd_Cmd( SXCRef context, SXCRef local_0_t_7984, SXCRef local_1_lhs_7983, SXCRef local_2_rhs_7982 );
static SlagObject* CmdLazyAnd__init__Token_Cmd_Cmd_Int32( SXCRef context, SXCRef local_0_t_7988, SXCRef local_1_lhs_7987, SXCRef local_2_rhs_7986, SlagInt32 local_3_short_circuit_id_7985 );
static SlagObject* CmdLazyAnd__create_duplicate( SXCRef context );
static SlagObject* CmdLazyAnd__resolve( SXCRef context );
static SlagObject* CmdLazyAnd__optimize( SXCRef context );
static void CmdLazyAnd__write_etc( SXCRef context );
static SlagObject* CmdLazyAnd__to_cpp( SXCRef context );
static SlagObject* CmdLazyAnd__to_cs( SXCRef context );
static SlagObject* CmdLazyAnd__to_java( SXCRef context );
static SlagObject* CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd( SXCRef context, SXCRef local_0_t_7632, SXCRef local_1_var_info_7631, SXCRef local_2_initial_value_7630 );
static SlagObject* CmdLocalVarDeclaration__create_duplicate( SXCRef context );
static SlagObject* CmdLocalVarDeclaration__resolve( SXCRef context );
static SlagObject* CmdLazyOr__init__Token_Cmd_Cmd( SXCRef context, SXCRef local_0_t_7992, SXCRef local_1_lhs_7991, SXCRef local_2_rhs_7990 );
static SlagObject* CmdLazyOr__init__Token_Cmd_Cmd_Int32( SXCRef context, SXCRef local_0_t_7996, SXCRef local_1_lhs_7995, SXCRef local_2_rhs_7994, SlagInt32 local_3_short_circuit_id_7993 );
static SlagObject* CmdLazyOr__create_duplicate( SXCRef context );
static SlagObject* CmdLazyOr__resolve( SXCRef context );
static SlagObject* CmdLazyOr__optimize( SXCRef context );
static SlagObject* CmdLazyOr__to_cs( SXCRef context );
static SlagObject* CmdLazyOr__to_java( SXCRef context );
static void CmdLazyOr__write_etc( SXCRef context );
static SlagObject* CmdLazyOr__to_cpp( SXCRef context );
static SlagObject* CmdAssignZeroValue__init__Token_LocalVarInfo( SXCRef context, SXCRef local_0_t_7667, SXCRef local_1_var_info_7666 );
static SlagObject* CmdAssignZeroValue__create_duplicate( SXCRef context );
static SlagObject* CmdAssignZeroValue__resolve( SXCRef context );
static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__create_duplicate( SXCRef context );
static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__resolve( SXCRef context );
static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__optimize( SXCRef context );
static void CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__write_etc( SXCRef context );
static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_cpp( SXCRef context );
static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_cs( SXCRef context );
static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_java( SXCRef context );
static SlagObject* Stopwatch__init__Logical( SXCRef context, SlagLogical local_0_running );
static SlagInt64 Stopwatch__elapsed_ms( SXCRef context );
static SlagObject* LiteralLogical__init__Token_Logical( SXCRef context, SXCRef local_0_t_7011, SlagLogical local_1_value_7010 );
static void LiteralLogical__require_logical( SXCRef context );
static SlagLogical LiteralLogical__as_Logical( SXCRef context );
static SlagInt32 HashTableMappingReader_of_Object_and_Int32__available( SXCRef context );
static SlagObject* HashTableMappingReader_of_Object_and_Int32__to_List( SXCRef context );
static SlagObject* HashTableMappingReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32( SXCRef context, SXCRef local_0_bins_5028 );
static void HashTableMappingReader_of_Object_and_Int32__prep_next( SXCRef context );
static SlagLogical HashTableMappingReader_of_Object_and_Int32__has_another( SXCRef context );
static SlagObject* HashTableMappingReader_of_Object_and_Int32__read( SXCRef context );
static SlagInt32 RangeIteratorAscending_of_Int32__available( SXCRef context );
static SlagObject* RangeIteratorAscending_of_Int32__to_List( SXCRef context );
static SlagObject* RangeIteratorAscending_of_Int32__init__Int32_Int32_Int32( SXCRef context, SlagInt32 local_0_first_value, SlagInt32 local_1_last_value_4816, SlagInt32 local_2_step_size_4815 );
static SlagObject* RangeIteratorAscending_of_Int32__create_duplicate( SXCRef context );
static SlagLogical RangeIteratorAscending_of_Int32__has_another( SXCRef context );
static SlagInt32 RangeIteratorAscending_of_Int32__read( SXCRef context );
static SlagObject* Enum_of_Qualifiers__prep__Qualifiers_String( SXCRef context, SXCRef local_0_category, SXCRef local_1_name );
static SlagObject* DelegateMaker__filter__String( SXCRef context, SXCRef local_0_name );
static SlagObject* Mapping_of_Int32_and_Int32__init__Int32_Int32( SXCRef context, SlagInt32 local_0_key_8764, SlagInt32 local_1_value_8763 );
static SlagObject* CmdMul__optimize( SXCRef context );
static SlagObject* ArrayReader_of_Mapping_of_Object_and_Object__to_List( SXCRef context );
static SlagObject* ArrayReader_of_Mapping_of_Object_and_Object__init__Collection_of_Mapping_of_Object_and_Object_Array_of_Mapping_of_Object_and_Object_Int32_Int32( SXCRef context, SXCRef local_0_collection_4063, SXCRef local_1_data_4062, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_Mapping_of_Object_and_Object__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_Mapping_of_Object_and_Object__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_Mapping_of_Object_and_Object__remaining( SXCRef context );
static SlagObject* ArrayReader_of_Mapping_of_Object_and_Object__read( SXCRef context );
static SlagObject* ArrayReader_of_HashTable_of_String_and_LocalVarInfo__to_List( SXCRef context );
static SlagObject* ArrayReader_of_HashTable_of_String_and_LocalVarInfo__init__Collection_of_HashTable_of_String_and_LocalVarInfo_Array_of_HashTable_of_String_and_LocalVarInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_8825, SXCRef local_1_data_8824, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_HashTable_of_String_and_LocalVarInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_HashTable_of_String_and_LocalVarInfo__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_HashTable_of_String_and_LocalVarInfo__remaining( SXCRef context );
static SlagObject* ArrayReader_of_HashTable_of_String_and_LocalVarInfo__read( SXCRef context );
static SlagObject* CmdDiv__optimize( SXCRef context );
static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Int32__to_List( SXCRef context );
static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Int32__init__Collection_of_HashTableBin_of_Int32_and_Int32_Array_of_HashTableBin_of_Int32_and_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_8787, SXCRef local_1_data_8786, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Int32__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_HashTableBin_of_Int32_and_Int32__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_HashTableBin_of_Int32_and_Int32__remaining( SXCRef context );
static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Int32__read( SXCRef context );
static SlagObject* ArrayReader_of_CmdCatch__to_List( SXCRef context );
static SlagObject* ArrayReader_of_CmdCatch__init__Collection_of_CmdCatch_Array_of_CmdCatch_Int32_Int32( SXCRef context, SXCRef local_0_collection_7620, SXCRef local_1_data_7619, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_CmdCatch__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_CmdCatch__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_CmdCatch__remaining( SXCRef context );
static SlagObject* ArrayReader_of_CmdCatch__read( SXCRef context );
static SlagObject* ArrayReverseReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo( SXCRef context, SXCRef local_0_collection_8431, SXCRef local_1_data_8430 );
static SlagObject* ArrayReverseReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_8436, SXCRef local_1_data_8435, SlagInt32 local_2_counter_8434, SlagInt32 local_3_last_exclusive_8433, SlagInt32 local_4_original_modification_count_8432 );
static SlagObject* ArrayReverseReader_of_PropertyInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReverseReader_of_PropertyInfo__has_another( SXCRef context );
static SlagInt32 ArrayReverseReader_of_PropertyInfo__remaining( SXCRef context );
static SlagObject* ArrayReverseReader_of_PropertyInfo__read( SXCRef context );
static SlagObject* ArrayList_of_StructureType__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_StructureType__create_duplicate( SXCRef context );
static SlagObject* CmdCmpLE__to_cpp( SXCRef context );
static SlagObject* CmdCmpLE__to_cs( SXCRef context );
static SlagObject* CmdCmpLE__to_java( SXCRef context );
static SlagObject* CmdNegate__create_duplicate( SXCRef context );
static SlagObject* CmdNegate__resolve( SXCRef context );
static void CmdNegate__write_etc( SXCRef context );
static SlagObject* CmdNegate__to_cpp( SXCRef context );
static SlagObject* CmdNegate__to_cs( SXCRef context );
static SlagObject* CmdNegate__to_java( SXCRef context );
static SlagLogical SpecializedComparator_2189__a_before_b__MethodInfo_MethodInfo( SXCRef context, SXCRef local_0_a, SXCRef local_1_b );
static SlagObject* Mapping_of_Object_and_Object__init__Object_Object( SXCRef context, SXCRef local_0_key_4057, SXCRef local_1_value_4056 );
static SlagObject* CmdOpenScope__init__Token( SXCRef context, SXCRef local_0_t_7299 );
static SlagObject* CmdOpenScope__create_duplicate( SXCRef context );
static SlagObject* CmdOpenScope__resolve( SXCRef context );
static SlagObject* ListOf_of_MethodInfo__create__Int32( SXCRef context, SlagInt32 local_0_dim1 );
static SlagObject* CmdRangeGE__create_duplicate( SXCRef context );
static SlagObject* CmdRangeGE__resolve( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9473, SXCRef local_1_var_info_9472, SXCRef local_2_operand_9471 );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__create_duplicate( SXCRef context );
static SlagObject* CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__resolve( SXCRef context );
static void CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__finalize_structure_info( SXCRef context );
static void CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__write_etc( SXCRef context );
static SlagObject* CmdLocalVarModAndAssign__to_cpp( SXCRef context );
static SlagObject* CmdLocalVarModAndAssign__to_cs( SXCRef context );
static SlagObject* CmdLocalVarModAndAssign__to_java( SXCRef context );
static SlagObject* CmdCmpLT__to_cpp( SXCRef context );
static SlagObject* CmdCmpLT__to_cs( SXCRef context );
static SlagObject* CmdCmpLT__to_java( SXCRef context );
static SlagObject* ArrayReverseReader_of_Char__init__Collection_of_Char_Array_of_Char( SXCRef context, SXCRef local_0_collection_4907, SXCRef local_1_data_4906 );
static SlagObject* ArrayReverseReader_of_Char__init__Collection_of_Char_Array_of_Char_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_4912, SXCRef local_1_data_4911, SlagInt32 local_2_counter_4910, SlagInt32 local_3_last_exclusive_4909, SlagInt32 local_4_original_modification_count_4908 );
static SlagObject* ArrayReverseReader_of_Char__create_duplicate( SXCRef context );
static SlagLogical ArrayReverseReader_of_Char__has_another( SXCRef context );
static SlagInt32 ArrayReverseReader_of_Char__remaining( SXCRef context );
static SlagChar ArrayReverseReader_of_Char__peek( SXCRef context );
static SlagChar ArrayReverseReader_of_Char__read( SXCRef context );
static SlagLogical FileReader__consume__Char( SXCRef context, SlagChar local_0_look_for );
void FileReader__init__String();
static SlagObject* FileReader__init__String( SXCRef context, SXCRef local_0_filename );
void FileReader__close();
static void FileReader__close( SXCRef context );
void FileReader__has_another();
static SlagLogical FileReader__has_another( SXCRef context );
void FileReader__peek();
static SlagChar FileReader__peek( SXCRef context );
void FileReader__read();
static SlagChar FileReader__read( SXCRef context );
void FileReader__read__Array_of_Char_Int32_Int32();
static SlagInt32 FileReader__read__Array_of_Char_Int32_Int32( SXCRef context, SXCRef local_0_buffer, SlagInt32 local_1_i, SlagInt32 local_2_num );
void FileReader__remaining();
static SlagInt32 FileReader__remaining( SXCRef context );
static SlagObject* FileReader__to_List( SXCRef context );
static SlagObject* CmdRightShifted__to_cpp( SXCRef context );
static SlagObject* CmdRightShifted__to_cs( SXCRef context );
static SlagObject* CmdRightShifted__to_java( SXCRef context );
static SlagInt32 HashTableValueReader_of_Object_and_Int32__available( SXCRef context );
static SlagObject* HashTableValueReader_of_Object_and_Int32__to_List( SXCRef context );
static SlagObject* HashTableValueReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32( SXCRef context, SXCRef local_0_bins_6691 );
static void HashTableValueReader_of_Object_and_Int32__prep_next( SXCRef context );
static SlagLogical HashTableValueReader_of_Object_and_Int32__has_another( SXCRef context );
static SlagInt32 HashTableValueReader_of_Object_and_Int32__read( SXCRef context );
static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Object__to_List( SXCRef context );
static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Object__init__Collection_of_HashTableBin_of_Int32_and_Object_Array_of_HashTableBin_of_Int32_and_Object_Int32_Int32( SXCRef context, SXCRef local_0_collection_5156, SXCRef local_1_data_5155, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Object__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_HashTableBin_of_Int32_and_Object__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_HashTableBin_of_Int32_and_Object__remaining( SXCRef context );
static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Object__read( SXCRef context );
static SlagObject* CmdPropertyRead__create_duplicate( SXCRef context );
static SlagObject* CmdPropertyRead__resolve( SXCRef context );
static void CmdPropertyRead__write_etc( SXCRef context );
static SlagObject* CmdPropertyRead__to_cpp( SXCRef context );
static SlagObject* CmdPropertyRead__to_cs( SXCRef context );
static SlagObject* CmdPropertyRead__to_java( SXCRef context );
static SlagInt32 LineReader__available( SXCRef context );
static SlagObject* LineReader__to_List( SXCRef context );
static SlagObject* LineReader__init__Reader_of_Char( SXCRef context, SXCRef local_0_src_5242 );
static SlagLogical LineReader__has_another( SXCRef context );
static SlagObject* LineReader__read( SXCRef context );
static void LineReader__prep_next( SXCRef context );
static SlagInt32 CoerceReader_of_TypeInfo__available( SXCRef context );
static SlagObject* CoerceReader_of_TypeInfo__to_List( SXCRef context );
static SlagObject* CoerceReader_of_TypeInfo__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_8197 );
static SlagLogical CoerceReader_of_TypeInfo__has_another( SXCRef context );
static SlagObject* CoerceReader_of_TypeInfo__read( SXCRef context );
static SlagObject* CmdRangeGT__create_duplicate( SXCRef context );
static SlagObject* CmdRangeGT__resolve( SXCRef context );
static SlagObject* ArrayList_of_ControlStructureInfo__remove_last( SXCRef context );
static SlagObject* ArrayList_of_ControlStructureInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_ControlStructureInfo__create_reader( SXCRef context );
static SlagObject* ArrayList_of_ControlStructureInfo__reverse_order( SXCRef context );
static SlagInt32 ArrayList_of_ControlStructureInfo__count( SXCRef context );
static SlagInt32 ArrayList_of_ControlStructureInfo__modification_count( SXCRef context );
static SlagObject* ArrayList_of_ControlStructureInfo__create_duplicate( SXCRef context );
static SlagObject* CmdCatch__init__Token_LocalVarInfo_CmdStatementList( SXCRef context, SXCRef local_0_t_7617, SXCRef local_1_var_info_7616, SXCRef local_2_body_7615 );
static SlagObject* CmdCatch__create_duplicate( SXCRef context );
static SlagObject* CmdCatch__resolve( SXCRef context );
static SlagObject* CmdCatch__finalize_calls( SXCRef context );
static void CmdCatch__finalize_structure_info( SXCRef context );
static void CmdCatch__group_dynamic_methods( SXCRef context );
static SlagObject* CmdCatch__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list );
static void CmdCatch__write_etc( SXCRef context );
static SlagObject* CmdCatch__to_cpp( SXCRef context );
static SlagObject* CmdCatch__to_cs( SXCRef context );
static SlagObject* CmdCatch__to_java( SXCRef context );
static SlagObject* ArrayReader_of_CategoryInfo__to_List( SXCRef context );
static SlagObject* ArrayReader_of_CategoryInfo__init__Collection_of_CategoryInfo_Array_of_CategoryInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_7831, SXCRef local_1_data_7830, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_CategoryInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_CategoryInfo__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_CategoryInfo__remaining( SXCRef context );
static SlagObject* ArrayReader_of_CategoryInfo__read( SXCRef context );
static SlagObject* ObjectManager__create_duplicate__Object( SXCRef context, SXCRef local_0_existing );
static SlagObject* ControlStructureInfo__init__StructureType_CmdStructure_String( SXCRef context, SXCRef local_0_type_6794, SXCRef local_1_node_6793, SXCRef local_2_label_6792 );
static SlagObject* ArrayList_of_StackTraceInfo__last( SXCRef context );
static SlagObject* ArrayList_of_StackTraceInfo__remove_last( SXCRef context );
static SlagObject* ArrayList_of_StackTraceInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_StackTraceInfo__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_StackTraceInfo__count( SXCRef context );
static SlagInt32 ArrayList_of_StackTraceInfo__modification_count( SXCRef context );
static SlagObject* ArrayList_of_StackTraceInfo__create_duplicate( SXCRef context );
static SlagObject* ArrayList_of_Mapping_of_Object_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagObject* ArrayList_of_Mapping_of_Object_and_Object__create_reader( SXCRef context );
static SlagInt32 ArrayList_of_Mapping_of_Object_and_Object__count( SXCRef context );
static SlagInt32 ArrayList_of_Mapping_of_Object_and_Object__modification_count( SXCRef context );
static SlagObject* ArrayList_of_Mapping_of_Object_and_Object__create_duplicate( SXCRef context );
static SlagObject* HashTableBin_of_Object_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagInt32 HashTableBin_of_Object_and_Object__index_of_entry__Object( SXCRef context, SXCRef local_0_key );
static SlagObject* HashTableBin_of_Object_and_Object__find_entry__Object( SXCRef context, SXCRef local_0_key );
static SlagLogical HashTableBin_of_Object_and_Object__add_entry__Object_Object( SXCRef context, SXCRef local_0_key, SXCRef local_1_value );
static SlagLogical HashTableBin_of_Object_and_Object__add_entry__Mapping_of_Object_and_Object( SXCRef context, SXCRef local_0_entry );
static SlagObject* CmdLogicalNot__create_duplicate( SXCRef context );
static SlagObject* CmdLogicalNot__resolve( SXCRef context );
static SlagObject* CmdLogicalNot__to_cpp( SXCRef context );
static SlagObject* CmdLogicalXor__create_duplicate( SXCRef context );
static SlagObject* CmdLogicalXor__resolve( SXCRef context );
static SlagObject* ArrayReader_of_SlagError__to_List( SXCRef context );
static SlagObject* ArrayReader_of_SlagError__init__Collection_of_SlagError_Array_of_SlagError_Int32_Int32( SXCRef context, SXCRef local_0_collection_10883, SXCRef local_1_data_10882, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_SlagError__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_SlagError__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_SlagError__remaining( SXCRef context );
static SlagObject* ArrayReader_of_SlagError__read( SXCRef context );
static SlagObject* SlagParser__init__TokenReader( SXCRef context, SXCRef local_0_scanner_6678 );
static SlagLogical SlagParser__parse_pending( SXCRef context );
static void SlagParser__parse_framework__TypeInfo( SXCRef context, SXCRef local_0_type );
static void SlagParser__include__SlagFile( SXCRef context, SXCRef local_0_file );
static void SlagParser__include_dir__String_Token( SXCRef context, SXCRef local_0_filename, SXCRef local_1_t );
static SlagLogical SlagParser__already_included__String( SXCRef context, SXCRef local_0_filename );
static SlagObject* SlagParser__find_file__String_Token( SXCRef context, SXCRef local_0_filename, SXCRef local_1_t );
static SlagLogical SlagParser__next_is_end_cmd( SXCRef context );
static SlagLogical SlagParser__next_elseif_is_not_at_eol( SXCRef context );
static SlagLogical SlagParser__consume__Int32( SXCRef context, SlagInt32 local_0_token_type );
static SlagLogical SlagParser__consume_id__String( SXCRef context, SXCRef local_0_st );
static void SlagParser__must_consume_id__String( SXCRef context, SXCRef local_0_st );
static void SlagParser__discard_eols( SXCRef context );
static void SlagParser__must_consume__Int32_String( SXCRef context, SlagInt32 local_0_type, SXCRef local_1_mesg );
static SlagLogical SlagParser__consume_eol( SXCRef context );
static SlagLogical SlagParser__consume_end_cmd( SXCRef context );
static void SlagParser__must_consume_eol( SXCRef context );
static void SlagParser__must_consume_end_cmd( SXCRef context );
static SlagObject* SlagParser__must_read_identifier__String( SXCRef context, SXCRef local_0_mesg );
static SlagObject* SlagParser__must_read_string__String( SXCRef context, SXCRef local_0_mesg );
static SlagLogical SlagParser__parse_next( SXCRef context );
static void SlagParser__parse_directive( SXCRef context );
static void SlagParser__parse_framework( SXCRef context );
static SlagObject* SlagParser__parse_data_type( SXCRef context );
static SlagObject* SlagParser__parse_substitution_tokens( SXCRef context );
static SlagInt32 SlagParser__parse_list_dimensions( SXCRef context );
static SlagObject* SlagParser__parse_type_qualifiers( SXCRef context );
static SlagObject* SlagParser__parse_property_qualifiers( SXCRef context );
static SlagObject* SlagParser__parse_method_qualifiers( SXCRef context );
static void SlagParser__parse_type_def__Token_Qualifiers_Int32_String( SXCRef context, SXCRef local_0_t, SXCRef local_1_quals, SlagInt32 local_2_end_type, SXCRef local_3_end_symbol );
static void SlagParser__parse_type_def__TokenReader_TypeInfo_Qualifiers_Int32_String( SXCRef context, SXCRef local_0_scanner_6679, SXCRef local_1_def, SXCRef local_2_quals, SlagInt32 local_3_end_type, SXCRef local_4_end_symbol );
static void SlagParser__parse_compound_def__Token_Qualifiers( SXCRef context, SXCRef local_0_t, SXCRef local_1_quals );
static void SlagParser__parse_compound_def__TokenReader_TypeInfo( SXCRef context, SXCRef local_0_scanner_6680, SXCRef local_1_def );
static SlagObject* SlagParser__parse_placeholder_types__Logical( SXCRef context, SlagLogical local_0_is_augment );
static SlagObject* SlagParser__parse_placeholder_type__Logical( SXCRef context, SlagLogical local_0_is_augment );
static SlagObject* SlagParser__parse_doc_comment( SXCRef context );
static void SlagParser__parse_param_list__MethodInfo( SXCRef context, SXCRef local_0_m );
static void SlagParser__parse_param__MethodInfo( SXCRef context, SXCRef local_0_m );
static void SlagParser__parse_member_defs__TypeInfo_Int32_String( SXCRef context, SXCRef local_0_def, SlagInt32 local_1_end_type, SXCRef local_2_end_symbol );
static SlagLogical SlagParser__parse_method__TypeInfo_Logical( SXCRef context, SXCRef local_0_def, SlagLogical local_1_class_scope );
static SlagLogical SlagParser__next_is_method( SXCRef context );
static SlagObject* SlagParser__parse_construct__Logical( SXCRef context, SlagLogical local_0_allow_arg_types );
static void SlagParser__parse_singletons__TypeInfo( SXCRef context, SXCRef local_0_def );
static void SlagParser__parse_category_defs__TypeInfo( SXCRef context, SXCRef local_0_def );
static void SlagParser__parse_enumerate_defs__TypeInfo( SXCRef context, SXCRef local_0_def );
static void SlagParser__parse_properties__TypeInfo_Logical( SXCRef context, SXCRef local_0_def, SlagLogical local_1_class_scope );
static SlagObject* SlagParser__parse_property_decl_list( SXCRef context );
static SlagObject* SlagParser__parse_property_decl( SXCRef context );
static SlagObject* SlagParser__parse_opX( SXCRef context );
static SlagObject* SlagParser__parse_multi_line_statements( SXCRef context );
static SlagObject* SlagParser__parse_multi_line_statements__ArrayList_of_Int32( SXCRef context, SXCRef local_0_terminators );
static SlagLogical SlagParser__next_is_statement__ArrayList_of_Int32( SXCRef context, SXCRef local_0_terminators );
static void SlagParser__check_out_of_place_keywords( SXCRef context );
static SlagObject* SlagParser__parse_single_line_statements( SXCRef context );
static void SlagParser__parse_statement__CmdStatementList_Logical( SXCRef context, SXCRef local_0_list, SlagLogical local_1_allow_control_structures );
static SlagObject* SlagParser__parse_label_def( SXCRef context );
static SlagObject* SlagParser__create_escape_cmd__Token_StructureType( SXCRef context, SXCRef local_0_t, SXCRef local_1_type );
static SlagInt32 SlagParser__must_find_structure_id__StructureType_String_Token( SXCRef context, SXCRef local_0_type, SXCRef local_1_label, SXCRef local_2_t );
static SlagInt32 SlagParser__must_find_structure_id__StructureType_Token( SXCRef context, SXCRef local_0_type, SXCRef local_1_t );
static SlagInt32 SlagParser__must_find_iteration_id__String_Token( SXCRef context, SXCRef local_0_label, SXCRef local_1_t );
static SlagInt32 SlagParser__must_find_iteration_id__Token( SXCRef context, SXCRef local_0_t );
static SlagInt32 SlagParser__must_find_foreach_in_with_named_var__Token_String( SXCRef context, SXCRef local_0_t, SXCRef local_1_var_name );
static void SlagParser__push_structure_info__StructureType_CmdStructure_String( SXCRef context, SXCRef local_0_type, SXCRef local_1_node, SXCRef local_2_label );
static SlagObject* SlagParser__parse_block( SXCRef context );
static SlagObject* SlagParser__parse_if_statement( SXCRef context );
static SlagObject* SlagParser__parse_which_statement__Logical( SXCRef context, SlagLogical local_0_use_is_comparison );
static SlagObject* SlagParser__parse_contingent( SXCRef context );
static SlagObject* SlagParser__parse_try_statement( SXCRef context );
static SlagObject* SlagParser__parse_loop( SXCRef context );
static SlagObject* SlagParser__parse_while_statement( SXCRef context );
static SlagObject* SlagParser__parse_foreach_loop( SXCRef context );
static void SlagParser__parse_local_vars__CmdStatementList( SXCRef context, SXCRef local_0_cmd_list );
static SlagObject* SlagParser__parse_op_range( SXCRef context );
static SlagObject* SlagParser__parse_op_logical_xor( SXCRef context );
static SlagObject* SlagParser__parse_op_logical_xor__Cmd( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagParser__parse_op_logical_or( SXCRef context );
static SlagObject* SlagParser__parse_op_logical_or__Cmd( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagParser__parse_op_logical_and( SXCRef context );
static SlagObject* SlagParser__parse_op_logical_and__Cmd( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagParser__parse_op_relational( SXCRef context );
static SlagObject* SlagParser__parse_op_relational__Cmd( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagParser__parse_op_bitwise_xor( SXCRef context );
static SlagObject* SlagParser__parse_op_bitwise_xor__Cmd( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagParser__parse_op_bitwise_or( SXCRef context );
static SlagObject* SlagParser__parse_op_bitwise_or__Cmd( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagParser__parse_op_bitwise_and( SXCRef context );
static SlagObject* SlagParser__parse_op_bitwise_and__Cmd( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagParser__parse_op_summation( SXCRef context );
static SlagObject* SlagParser__parse_op_summation__Cmd( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagParser__parse_op_product( SXCRef context );
static SlagObject* SlagParser__parse_op_product__Cmd( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagParser__parse_op_exponent( SXCRef context );
static SlagObject* SlagParser__parse_op_exponent__Cmd( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagParser__parse_op_unary( SXCRef context );
static SlagObject* SlagParser__parse_op_query_valid( SXCRef context );
static SlagObject* SlagParser__parse_op_member( SXCRef context );
static SlagObject* SlagParser__parse_op_member__Cmd( SXCRef context, SXCRef local_0_lhs );
static SlagObject* SlagParser__parse_op_term( SXCRef context );
static SlagObject* SlagParser__parse_meta_expression( SXCRef context );
static SlagObject* SlagParser__parse_anonymous_class__CmdConstruct( SXCRef context, SXCRef local_0_construct );
static SlagObject* SlagParser__parse_arg_list__Int32_Int32_String_String_Logical( SXCRef context, SlagInt32 local_0_open_bracket, SlagInt32 local_1_close_bracket, SXCRef local_2_open_bracket_symbol, SXCRef local_3_close_bracket_symbol, SlagLogical local_4_allow_arg_types );
static SlagObject* SlagParser__parse_arg__Logical_Int32( SXCRef context, SlagLogical local_0_allow_arg_decl, SlagInt32 local_1_close_bracket );
static SlagObject* CmdFormattedString__init__Token_String_CmdList( SXCRef context, SXCRef local_0_t_7214, SXCRef local_1_text_7213, SXCRef local_2_args_7212 );
static SlagObject* CmdFormattedString__create_duplicate( SXCRef context );
static SlagObject* CmdFormattedString__resolve( SXCRef context );
static SlagObject* CmdFormattedString__split_around_next_marker__Token_String( SXCRef context, SXCRef local_0_split_t, SXCRef local_1_st );
static SlagInt32 CoerceReader_of_Int32__available( SXCRef context );
static SlagObject* CoerceReader_of_Int32__to_List( SXCRef context );
static SlagObject* CoerceReader_of_Int32__init__Reader_of_Int32( SXCRef context, SXCRef local_0_src_6684 );
static SlagLogical CoerceReader_of_Int32__has_another( SXCRef context );
static SlagInt32 CoerceReader_of_Int32__read( SXCRef context );
static SlagLogical CompareFn_of_MethodInfo_and_a_of___a_before_b__MethodInfo_MethodInfo( SXCRef context, SXCRef local_0_a, SXCRef local_1_b );
static SlagInt32 CoerceReader_of_Cmd__available( SXCRef context );
static SlagObject* CoerceReader_of_Cmd__to_List( SXCRef context );
static SlagObject* CoerceReader_of_Cmd__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_9650 );
static SlagLogical CoerceReader_of_Cmd__has_another( SXCRef context );
static SlagObject* CoerceReader_of_Cmd__read( SXCRef context );
static SlagObject* CmdThisPropertyAddAndAssign__to_cpp( SXCRef context );
static SlagObject* CmdThisPropertyAddAndAssign__to_cs( SXCRef context );
static SlagObject* CmdThisPropertyAddAndAssign__to_java( SXCRef context );
static SlagObject* CmdCmpIsNull__create_duplicate( SXCRef context );
static SlagObject* CmdCmpIsNull__type( SXCRef context );
static SlagObject* CmdCmpIsNull__resolve( SXCRef context );
static void CmdCmpIsNull__write_etc( SXCRef context );
static SlagObject* CmdCmpIsNull__to_cpp( SXCRef context );
static SlagObject* CmdCmpIsNull__to_cs( SXCRef context );
static SlagObject* CmdCmpIsNull__to_java( SXCRef context );
static SlagObject* HashTableBin_of_Object_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity );
static SlagInt32 HashTableBin_of_Object_and_Int32__index_of_entry__Object( SXCRef context, SXCRef local_0_key );
static SlagObject* HashTableBin_of_Object_and_Int32__find_entry__Object( SXCRef context, SXCRef local_0_key );
static SlagLogical HashTableBin_of_Object_and_Int32__add_entry__Object_Int32( SXCRef context, SXCRef local_0_key, SlagInt32 local_1_value );
static SlagLogical HashTableBin_of_Object_and_Int32__add_entry__Mapping_of_Object_and_Int32( SXCRef context, SXCRef local_0_entry );
static SlagObject* InvalidOperandError__init__String_String( SXCRef context, SXCRef local_0_var_name, SXCRef local_1_var_value );
static SlagObject* CmdForEachIn__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList_Logical( SXCRef context, SXCRef local_0_t_7654, SlagInt32 local_1_id_7653, SXCRef local_2_var_info_7652, SXCRef local_3_control_7651, SXCRef local_4_body_7650, SlagLogical local_5_contains_remove_current_7649 );
static SlagObject* CmdForEachIn__create_duplicate( SXCRef context );
static SlagObject* CmdForEachIn__resolve( SXCRef context );
static SlagObject* CmdForEachIn__convert_to_while( SXCRef context );
static SlagInt32 SlagParserManager__unique_id( SXCRef context );
static SlagObject* InlineClassPropertyDeclaration__init__TypeInfo_String_Cmd( SXCRef context, SXCRef local_0_of_type_7205, SXCRef local_1_id_7204, SXCRef local_2_expression_7203 );
static SlagInt32 HashTableMappingReader_of_Int32_and_Object__available( SXCRef context );
static SlagObject* HashTableMappingReader_of_Int32_and_Object__to_List( SXCRef context );
static SlagObject* HashTableMappingReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object( SXCRef context, SXCRef local_0_bins_5149 );
static void HashTableMappingReader_of_Int32_and_Object__prep_next( SXCRef context );
static SlagLogical HashTableMappingReader_of_Int32_and_Object__has_another( SXCRef context );
static SlagObject* HashTableMappingReader_of_Int32_and_Object__read( SXCRef context );
static SlagObject* ArrayReader_of_StackTraceInfo__to_List( SXCRef context );
static SlagObject* ArrayReader_of_StackTraceInfo__init__Collection_of_StackTraceInfo_Array_of_StackTraceInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_4230, SXCRef local_1_data_4229, SlagInt32 local_2_first_index, SlagInt32 local_3_count );
static SlagObject* ArrayReader_of_StackTraceInfo__create_duplicate( SXCRef context );
static SlagLogical ArrayReader_of_StackTraceInfo__has_another( SXCRef context );
static SlagInt32 ArrayReader_of_StackTraceInfo__remaining( SXCRef context );
static SlagObject* ArrayReader_of_StackTraceInfo__read( SXCRef context );
static SlagObject* Enum_of_StructureType__prep__StructureType_String( SXCRef context, SXCRef local_0_category, SXCRef local_1_name );
static SlagLogical Errors__add__SlagError( SXCRef context, SXCRef local_0_err );
static void Errors__print( SXCRef context );
static SlagObject* CmdImplicitListLiteral__init__Token_ArrayList_of_Cmd( SXCRef context, SXCRef local_0_t_7180, SXCRef local_1_args_7179 );
static SlagObject* CmdImplicitListLiteral__create_duplicate( SXCRef context );
static SlagObject* CmdImplicitListLiteral__resolve( SXCRef context );

static SlagLiteralString str0( "Object", 6 );
static SlagLiteralString str1( "ObjectManager", 13 );
static SlagLiteralString str2( "DegreesManager", 14 );
static SlagLiteralString str3( "RadiansManager", 14 );
static SlagLiteralString str4( "RandomNumberGenerator", 21 );
static SlagLiteralString str5( "Math", 4 );
static SlagLiteralString str6( "BitwiseOperations", 17 );
static SlagLiteralString str7( "GenericArray", 12 );
static SlagLiteralString str8( "Array<<Int64>>", 14 );
static SlagLiteralString str9( "Array<<Object>>", 15 );
static SlagLiteralString str10( "ArrayList<<String>>", 19 );
static SlagLiteralString str11( "StringBuilder", 13 );
static SlagLiteralString str12( "Global", 6 );
static SlagLiteralString str13( "ArrayList<<HashTableBin<<Object,Object>>>>", 42 );
static SlagLiteralString str14( "GenericHashTable<<Object,Object>>", 33 );
static SlagLiteralString str15( "HashTableBase<<String,String,Object,Object>>", 44 );
static SlagLiteralString str16( "HashTable<<String,String>>", 26 );
static SlagLiteralString str17( "HashSet<<String>>", 17 );
static SlagLiteralString str18( "StringManager", 13 );
static SlagLiteralString str19( "String", 6 );
static SlagLiteralString str20( "StackTrace", 10 );
static SlagLiteralString str21( "Exception", 9 );
static SlagLiteralString str22( "Error", 5 );
static SlagLiteralString str23( "InvalidOperandError", 19 );
static SlagLiteralString str24( "ArrayList<<Object>>", 19 );
static SlagLiteralString str25( "TextWriter", 10 );
static SlagLiteralString str26( "Array<<Char>>", 13 );
static SlagLiteralString str27( "initial_capacity", 16 );
static SlagLiteralString str28( "NumberConversions", 17 );
static SlagLiteralString str29( "Illegal operand value (", 23 );
static SlagLiteralString str30( "StringReader", 12 );
static SlagLiteralString str31( "ParseReader", 11 );
static SlagLiteralString str32( "StdInReader", 11 );
static SlagLiteralString str33( "NativeData", 10 );
static SlagLiteralString str34( "FileWriter", 10 );
static SlagLiteralString str35( "FileReader", 10 );
static SlagLiteralString str36( "null", 4 );
static SlagLiteralString str37( ") for ", 6 );
static SlagLiteralString str38( ".", 1 );
static SlagLiteralString str39( "", 0 );
static SlagLiteralString str40( "ArrayList<<Char>>", 17 );
static SlagLiteralString str41( ":", 1 );
static SlagLiteralString str42( "Mapping<<Object,Object>>", 24 );
static SlagLiteralString str43( "Array<<Mapping<<Object,Object>>>>", 33 );
static SlagLiteralString str44( "ArrayList<<Mapping<<Object,Object>>>>", 37 );
static SlagLiteralString str45( ": ", 2 );
static SlagLiteralString str46( "\012", 1 );
static SlagLiteralString str47( "Illegal operand value.", 22 );
static SlagLiteralString str48( "Concurrent modification error - list structure has changed during iteration.", 76 );
static SlagLiteralString str49( "Illegal operand value for ", 26 );
static SlagLiteralString str50( "ConcurrentModificationError", 27 );
static SlagLiteralString str51( "ArrayReader<<Mapping<<Object,Object>>>>", 39 );
static SlagLiteralString str52( "[", 1 );
static SlagLiteralString str53( "=", 1 );
static SlagLiteralString str54( "]", 1 );
static SlagLiteralString str55( "HashTableBin<<Object,Object>>", 29 );
static SlagLiteralString str56( "Array<<HashTableBin<<Object,Object>>>>", 38 );
static SlagLiteralString str57( "HashTableMappingReader<<Object,Object>>", 39 );
static SlagLiteralString str58( "ArrayReader<<HashTableBin<<Object,Object>>>>", 44 );
static SlagLiteralString str59( "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx x  x                      x x                            xxxx x                          xxx x", 128 );
static SlagLiteralString str60( "Strings must be created using one of the String.create_from() methods.", 70 );
static SlagLiteralString str61( "(", 1 );
static SlagLiteralString str62( ")", 1 );
static SlagLiteralString str63( "$[\012$]", 5 );
static SlagLiteralString str64( "[]", 2 );
static SlagLiteralString str65( "str_format", 10 );
static SlagLiteralString str66( "Array<<String>>", 15 );
static SlagLiteralString str67( "ArrayReader<<String>>", 21 );
static SlagLiteralString str68( "[compiled code]", 15 );
static SlagLiteralString str69( "  ", 2 );
static SlagLiteralString str70( " at \"", 5 );
static SlagLiteralString str71( "\" line ", 7 );
static SlagLiteralString str72( "StackTraceInfo", 14 );
static SlagLiteralString str73( "Array<<StackTraceInfo>>", 23 );
static SlagLiteralString str74( "ArrayList<<StackTraceInfo>>", 27 );
static SlagLiteralString str75( "ArrayList<<Int64>>", 18 );
static SlagLiteralString str76( "ArrayReader<<Int64>>", 20 );
static SlagLiteralString str77( "st", 2 );
static SlagLiteralString str78( "empty string", 12 );
static SlagLiteralString str79( "StackTrace::", 12 );
static SlagLiteralString str80( "Exception::", 11 );
static SlagLiteralString str81( "Error::", 7 );
static SlagLiteralString str82( "index", 5 );
static SlagLiteralString str83( "ArrayReader<<StackTraceInfo>>", 29 );
static SlagLiteralString str84( "  ... [", 7 );
static SlagLiteralString str85( " more]", 6 );
static SlagLiteralString str86( "StdOutWriter", 12 );
static SlagLiteralString str87( "Array<<Byte>>", 13 );
static SlagLiteralString str88( "ArrayList<<Byte>>", 17 );
static SlagLiteralString str89( "System", 6 );
static SlagLiteralString str90( "Error accessing file.", 21 );
static SlagLiteralString str91( "Error accessing \"", 17 );
static SlagLiteralString str92( "\".", 2 );
static SlagLiteralString str93( "FileError", 9 );
static SlagLiteralString str94( "Attempted access to an object member using a null reference.", 60 );
static SlagLiteralString str95( "NullReferenceError", 18 );
static SlagLiteralString str96( "The call context does not support this method in its current state.", 67 );
static SlagLiteralString str97( "InvalidStateError", 17 );
static SlagLiteralString str98( "ReferenceTable<<String,SignalHandler>>", 38 );
static SlagLiteralString str99( "Mapping<<String,SignalHandler>>", 31 );
static SlagLiteralString str100( "Array<<Mapping<<String,SignalHandler>>>>", 40 );
static SlagLiteralString str101( "Array<<Signal>>", 15 );
static SlagLiteralString str102( "ArrayList<<Signal>>", 19 );
static SlagLiteralString str103( "SignalHandlerManager", 20 );
static SlagLiteralString str104( "DelegateType", 12 );
static SlagLiteralString str105( "Delegate____", 12 );
static SlagLiteralString str106( "SpecializedDelegate____<<SignalHandler,delegate_dummy>>", 55 );
static SlagLiteralString str107( "SignalHandler", 13 );
static SlagLiteralString str108( "SpecializedSignalHandler_460", 28 );
static SlagLiteralString str109( "launch", 6 );
static SlagLiteralString str110( "ArrayReader<<Signal>>", 21 );
static SlagLiteralString str111( "WeakReferenceManager", 20 );
static SlagLiteralString str112( "WeakReference", 13 );
static SlagLiteralString str113( "Weak<<SignalListener>>", 22 );
static SlagLiteralString str114( "on(Signal) not defined in \"", 27 );
static SlagLiteralString str115( "\" signal handler.", 17 );
static SlagLiteralString str116( "SignalManager", 13 );
static SlagLiteralString str117( "Signal", 6 );
static SlagLiteralString str118( "Reader has no next value to return.", 35 );
static SlagLiteralString str119( "NoNextValueError", 16 );
static SlagLiteralString str120( "v4.0.0 (2020.09.17)", 19 );
static SlagLiteralString str121( "etc", 3 );
static SlagLiteralString str122( "CONSOLE", 7 );
static SlagLiteralString str123( "FileManager", 11 );
static SlagLiteralString str124( "File", 4 );
static SlagLiteralString str125( "windows", 7 );
static SlagLiteralString str126( ".exe", 4 );
static SlagLiteralString str127( "PATH", 4 );
static SlagLiteralString str128( "/libraries", 10 );
static SlagLiteralString str129( "/libraries/standard", 19 );
static SlagLiteralString str130( "-?", 2 );
static SlagLiteralString str131( "-help", 5 );
static SlagLiteralString str132( "Slag Compiler ", 14 );
static SlagLiteralString str133( "Usage: slagc [-? | -help] filenames[.slag]", 43 );
static SlagLiteralString str134( "       [-doc Type[::member_name]]", 33 );
static SlagLiteralString str135( "       [-thorough] [-src_path \"path1;path2\"]", 44 );
static SlagLiteralString str136( "       [-include libname[.slag]] [-nostdlib]", 44 );
static SlagLiteralString str137( "       [-etc|-cpp [-use_longjmp]] [-define define_id[:value]]", 61 );
static SlagLiteralString str138( "       [-platform TARGET_PLATFORM (default CONSOLE)]", 52 );
static SlagLiteralString str139( "       [-dest_path \"path\"] [-output \"outputfilename\"]", 53 );
static SlagLiteralString str140( "       [-native \"Type::fn_name(ArgType)\" -native ...] ", 54 );
static SlagLiteralString str141( "       [-output \"outputfilename\"] [-quiet]", 42 );
static SlagLiteralString str142( "-doc", 4 );
static SlagLiteralString str143( "-thorough", 9 );
static SlagLiteralString str144( "-quiet", 6 );
static SlagLiteralString str145( "-src_path", 9 );
static SlagLiteralString str146( "CompilerError", 13 );
static SlagLiteralString str147( "ERROR: '-src_path' should be followed by a path string, e.g. \"path1;path2;...\".", 79 );
static SlagLiteralString str148( "-define", 7 );
static SlagLiteralString str149( "SlagScannerManager", 18 );
static SlagLiteralString str150( "Array<<BigInt>>", 15 );
static SlagLiteralString str151( "ArrayList<<BigInt>>", 19 );
static SlagLiteralString str152( "n", 1 );
static SlagLiteralString str153( "This object does not support this functionality:", 48 );
static SlagLiteralString str154( "UnsupportedMethodError", 22 );
static SlagLiteralString str155( "create_duplicate() is not defined for class ", 44 );
static SlagLiteralString str156( "ArrayReader<<Char>>", 19 );
static SlagLiteralString str157( "Array<<Int32>>", 14 );
static SlagLiteralString str158( "ArrayList<<Int32>>", 18 );
static SlagLiteralString str159( "RangeIteratorAscending<<Int32>>", 31 );
static SlagLiteralString str160( "RangeIteratorDescending<<Int32>>", 32 );
static SlagLiteralString str161( "Range<<Int32>>", 14 );
static SlagLiteralString str162( "RangeIteratorGE<<Int32>>", 24 );
static SlagLiteralString str163( "RangeGE<<Int32>>", 16 );
static SlagLiteralString str164( "9223372036854775808", 19 );
static SlagLiteralString str165( "value", 5 );
static SlagLiteralString str166( "base", 4 );
static SlagLiteralString str167( "BigIntManager", 13 );
static SlagLiteralString str168( "-", 1 );
static SlagLiteralString str169( "ArrayReverseReader<<Char>>", 26 );
static SlagLiteralString str170( "List or array index out of bounds.", 34 );
static SlagLiteralString str171( "OutOfBoundsError", 16 );
static SlagLiteralString str172( "BigInt value out of Int64 bounds.", 33 );
static SlagLiteralString str173( "Integer division by zero!", 25 );
static SlagLiteralString str174( "DivideByZeroError", 17 );
static SlagLiteralString str175( "BigInt", 6 );
static SlagLiteralString str176( "80000000", 8 );
static SlagLiteralString str177( "ffffffff", 8 );
static SlagLiteralString str178( "Mapping<<Object,Int32>>", 23 );
static SlagLiteralString str179( "Array<<Mapping<<Object,Int32>>>>", 32 );
static SlagLiteralString str180( "ArrayList<<Mapping<<Object,Int32>>>>", 36 );
static SlagLiteralString str181( "ArrayReader<<Mapping<<Object,Int32>>>>", 38 );
static SlagLiteralString str182( "HashTableBin<<Object,Int32>>", 28 );
static SlagLiteralString str183( "Array<<HashTableBin<<Object,Int32>>>>", 37 );
static SlagLiteralString str184( "ArrayList<<HashTableBin<<Object,Int32>>>>", 41 );
static SlagLiteralString str185( "HashTableMappingReader<<Object,Int32>>", 38 );
static SlagLiteralString str186( "ArrayReader<<HashTableBin<<Object,Int32>>>>", 43 );
static SlagLiteralString str187( "GenericHashTable<<Object,Int32>>", 32 );
static SlagLiteralString str188( "HashTableBase<<String,Int32,Object,Int32>>", 42 );
static SlagLiteralString str189( "HashTable<<String,Int32>>", 25 );
static SlagLiteralString str190( "TokenManager", 12 );
static SlagLiteralString str191( "ParsePosManager", 15 );
static SlagLiteralString str192( "Mapping<<String,Int32>>", 23 );
static SlagLiteralString str193( "[End of File]", 13 );
static SlagLiteralString str194( "[End of Line]", 13 );
static SlagLiteralString str195( "#", 1 );
static SlagLiteralString str196( "\"", 1 );
static SlagLiteralString str197( "'", 1 );
static SlagLiteralString str198( "Char(", 5 );
static SlagLiteralString str199( "Mapping<<Int32,Object>>", 23 );
static SlagLiteralString str200( "Array<<Mapping<<Int32,Object>>>>", 32 );
static SlagLiteralString str201( "ArrayList<<Mapping<<Int32,Object>>>>", 36 );
static SlagLiteralString str202( "ArrayReader<<Mapping<<Int32,Object>>>>", 38 );
static SlagLiteralString str203( "HashTableBin<<Int32,Object>>", 28 );
static SlagLiteralString str204( "Array<<HashTableBin<<Int32,Object>>>>", 37 );
static SlagLiteralString str205( "ArrayList<<HashTableBin<<Int32,Object>>>>", 41 );
static SlagLiteralString str206( "HashTableMappingReader<<Int32,Object>>", 38 );
static SlagLiteralString str207( "ArrayReader<<HashTableBin<<Int32,Object>>>>", 43 );
static SlagLiteralString str208( "GenericHashTable<<Int32,Object>>", 32 );
static SlagLiteralString str209( "HashTableBase<<Int32,String,Int32,Object>>", 42 );
static SlagLiteralString str210( "HashTable<<Int32,String>>", 25 );
static SlagLiteralString str211( "Token", 5 );
static SlagLiteralString str212( "Array<<Token>>", 14 );
static SlagLiteralString str213( "ArrayList<<Token>>", 18 );
static SlagLiteralString str214( "0", 1 );
static SlagLiteralString str215( "st: ", 4 );
static SlagLiteralString str216( ".0", 2 );
static SlagLiteralString str217( "Boolean", 7 );
static SlagLiteralString str218( "Use 'Logical' instead of 'Boolean'.", 35 );
static SlagLiteralString str219( "ERROR:  ", 8 );
static SlagLiteralString str220( "        ", 8 );
static SlagLiteralString str221( "LINE ", 5 );
static SlagLiteralString str222( ":  ", 3 );
static SlagLiteralString str223( "LineReader", 10 );
static SlagLiteralString str224( "ParseReaderMarkManager", 22 );
static SlagLiteralString str225( "...", 3 );
static SlagLiteralString str226( "[Error accessing file to read context!]", 39 );
static SlagLiteralString str227( "SlagError", 9 );
static SlagLiteralString str228( "gt", 2 );
static SlagLiteralString str229( "1", 1 );
static SlagLiteralString str230( "eq", 2 );
static SlagLiteralString str231( "lt", 2 );
static SlagLiteralString str232( "infinity", 8 );
static SlagLiteralString str233( "NaN", 3 );
static SlagLiteralString str234( "pi", 2 );
static SlagLiteralString str235( "Open '(' expected.", 18 );
static SlagLiteralString str236( "Identifier expected'.", 21 );
static SlagLiteralString str237( "true", 4 );
static SlagLiteralString str238( "false", 5 );
static SlagLiteralString str239( "Close ')' expected.", 19 );
static SlagLiteralString str240( "Character expected; found end of line.", 38 );
static SlagLiteralString str241( "Invalid hex digit '", 19 );
static SlagLiteralString str242( "'.", 2 );
static SlagLiteralString str243( "u", 1 );
static SlagLiteralString str244( "Invalid escape sequence.  Supported: \\n \\r \\t \\0 \\/ \\' \\\\ \\\" \\", 62 );
static SlagLiteralString str245( "XXXX.", 5 );
static SlagLiteralString str246( "Missing closing quote (\") on string literal.", 44 );
static SlagLiteralString str247( "{", 1 );
static SlagLiteralString str248( "#{", 2 );
static SlagLiteralString str249( "}#", 2 );
static SlagLiteralString str250( "'}#' expected; found end of file.", 33 );
static SlagLiteralString str251( "$", 1 );
static SlagLiteralString str252( "Use 'and' instead of '&&'.", 26 );
static SlagLiteralString str253( "Missing closing '.", 18 );
static SlagLiteralString str254( "End of line expected after '...'.", 33 );
static SlagLiteralString str255( "Missing closing quote (//) on string literal.", 45 );
static SlagLiteralString str256( "define ", 7 );
static SlagLiteralString str257( "Identifier expected after 'define'.", 35 );
static SlagLiteralString str258( "Missing ']' at end.", 19 );
static SlagLiteralString str259( "Recursive define.", 17 );
static SlagLiteralString str260( "defined", 7 );
static SlagLiteralString str261( "deferred", 8 );
static SlagLiteralString str262( "singleton", 9 );
static SlagLiteralString str263( "runtime", 7 );
static SlagLiteralString str264( "class", 5 );
static SlagLiteralString str265( "aspect", 6 );
static SlagLiteralString str266( "enum", 4 );
static SlagLiteralString str267( "augment", 7 );
static SlagLiteralString str268( "compound", 8 );
static SlagLiteralString str269( "endClass", 8 );
static SlagLiteralString str270( "endAspect", 9 );
static SlagLiteralString str271( "endEnum", 7 );
static SlagLiteralString str272( "endAugment", 10 );
static SlagLiteralString str273( "METHODS", 7 );
static SlagLiteralString str274( "PROPERTIES", 10 );
static SlagLiteralString str275( "VARS", 4 );
static SlagLiteralString str276( "CLASS_METHODS", 13 );
static SlagLiteralString str277( "CLASS_PROPERTIES", 16 );
static SlagLiteralString str278( "CLASS_VARS", 10 );
static SlagLiteralString str279( "CATEGORIES", 10 );
static SlagLiteralString str280( "ENUMERATE", 9 );
static SlagLiteralString str281( "SINGLETONS", 10 );
static SlagLiteralString str282( "underlying", 10 );
static SlagLiteralString str283( "overlaying", 10 );
static SlagLiteralString str284( "public", 6 );
static SlagLiteralString str285( "private", 7 );
static SlagLiteralString str286( "readOnly", 8 );
static SlagLiteralString str287( "requisite", 9 );
static SlagLiteralString str288( "propagated", 10 );
static SlagLiteralString str289( "abstract", 8 );
static SlagLiteralString str290( "generic", 7 );
static SlagLiteralString str291( "native", 6 );
static SlagLiteralString str292( "method", 6 );
static SlagLiteralString str293( "local", 5 );
static SlagLiteralString str294( "::", 2 );
static SlagLiteralString str295( "if", 2 );
static SlagLiteralString str296( "elseIf", 6 );
static SlagLiteralString str297( "else", 4 );
static SlagLiteralString str298( "endIf", 5 );
static SlagLiteralString str299( "which", 5 );
static SlagLiteralString str300( "whichIs", 7 );
static SlagLiteralString str301( "case", 4 );
static SlagLiteralString str302( "caseNext", 8 );
static SlagLiteralString str303( "others", 6 );
static SlagLiteralString str304( "endWhich", 8 );
static SlagLiteralString str305( "endWhichIs", 10 );
static SlagLiteralString str306( "contingent", 10 );
static SlagLiteralString str307( "satisfied", 9 );
static SlagLiteralString str308( "unsatisfied", 11 );
static SlagLiteralString str309( "endContingent", 13 );
static SlagLiteralString str310( "necessary", 9 );
static SlagLiteralString str311( "sufficient", 10 );
static SlagLiteralString str312( "block", 5 );
static SlagLiteralString str313( "endBlock", 8 );
static SlagLiteralString str314( "try", 3 );
static SlagLiteralString str315( "catch", 5 );
static SlagLiteralString str316( "endTry", 6 );
static SlagLiteralString str317( "throw", 5 );
static SlagLiteralString str318( "loop", 4 );
static SlagLiteralString str319( "endLoop", 7 );
static SlagLiteralString str320( "while", 5 );
static SlagLiteralString str321( "endWhile", 8 );
static SlagLiteralString str322( "forEach", 7 );
static SlagLiteralString str323( "in", 2 );
static SlagLiteralString str324( "of", 2 );
static SlagLiteralString str325( "endForEach", 10 );
static SlagLiteralString str326( "escapeIf", 8 );
static SlagLiteralString str327( "escapeWhich", 11 );
static SlagLiteralString str328( "escapeWhichIs", 13 );
static SlagLiteralString str329( "escapeContingent", 16 );
static SlagLiteralString str330( "escapeBlock", 11 );
static SlagLiteralString str331( "escapeTry", 9 );
static SlagLiteralString str332( "escapeLoop", 10 );
static SlagLiteralString str333( "escapeWhile", 11 );
static SlagLiteralString str334( "escapeForEach", 13 );
static SlagLiteralString str335( "nextIteration", 13 );
static SlagLiteralString str336( "removeCurrent", 13 );
static SlagLiteralString str337( "insertUnderlying", 16 );
static SlagLiteralString str338( "duplicate", 9 );
static SlagLiteralString str339( "breakpoint", 10 );
static SlagLiteralString str340( "noAction", 8 );
static SlagLiteralString str341( "return", 6 );
static SlagLiteralString str342( "upTo", 4 );
static SlagLiteralString str343( "upToLessThan", 12 );
static SlagLiteralString str344( "downTo", 6 );
static SlagLiteralString str345( "downToGreaterThan", 17 );
static SlagLiteralString str346( "step", 4 );
static SlagLiteralString str347( "xor", 3 );
static SlagLiteralString str348( "or", 2 );
static SlagLiteralString str349( "and", 3 );
static SlagLiteralString str350( "instanceOf", 10 );
static SlagLiteralString str351( "notInstanceOf", 13 );
static SlagLiteralString str352( "as", 2 );
static SlagLiteralString str353( "coerceAs", 8 );
static SlagLiteralString str354( "is", 2 );
static SlagLiteralString str355( "isNot", 5 );
static SlagLiteralString str356( "not", 3 );
static SlagLiteralString str357( "with", 4 );
static SlagLiteralString str358( "endWith", 7 );
static SlagLiteralString str359( "framework", 9 );
static SlagLiteralString str360( "endFramework", 12 );
static SlagLiteralString str361( "useFramework", 12 );
static SlagLiteralString str362( "CoerceReader<<String>>", 22 );
static SlagLiteralString str363( "HashTableKeyReader<<Object,Int32>>", 34 );
static SlagLiteralString str364( "<<", 2 );
static SlagLiteralString str365( ">>", 2 );
static SlagLiteralString str366( "++", 2 );
static SlagLiteralString str367( "--", 2 );
static SlagLiteralString str368( "~=", 2 );
static SlagLiteralString str369( "|=", 2 );
static SlagLiteralString str370( "&=", 2 );
static SlagLiteralString str371( "+=", 2 );
static SlagLiteralString str372( "-=", 2 );
static SlagLiteralString str373( "*=", 2 );
static SlagLiteralString str374( "/=", 2 );
static SlagLiteralString str375( "%=", 2 );
static SlagLiteralString str376( "^=", 2 );
static SlagLiteralString str377( ".=", 2 );
static SlagLiteralString str378( "<>", 2 );
static SlagLiteralString str379( "==", 2 );
static SlagLiteralString str380( "!=", 2 );
static SlagLiteralString str381( "<=", 2 );
static SlagLiteralString str382( ">=", 2 );
static SlagLiteralString str383( "<", 1 );
static SlagLiteralString str384( ">", 1 );
static SlagLiteralString str385( "~", 1 );
static SlagLiteralString str386( "|", 1 );
static SlagLiteralString str387( "&", 1 );
static SlagLiteralString str388( "+", 1 );
static SlagLiteralString str389( "*", 1 );
static SlagLiteralString str390( "/", 1 );
static SlagLiteralString str391( "%", 1 );
static SlagLiteralString str392( "^", 1 );
static SlagLiteralString str393( "!", 1 );
static SlagLiteralString str394( "?", 1 );
static SlagLiteralString str395( ",", 1 );
static SlagLiteralString str396( ";", 1 );
static SlagLiteralString str397( "}", 1 );
static SlagLiteralString str398( "DEBUG", 5 );
static SlagLiteralString str399( "ASSERT", 6 );
static SlagLiteralString str400( "debug_assert", 12 );
static SlagLiteralString str401( "string]", 7 );
static SlagLiteralString str402( "endString]", 10 );
static SlagLiteralString str403( "No closing [endString] found.", 29 );
static SlagLiteralString str404( "Use 'or' instead of '||'.", 25 );
static SlagLiteralString str405( "Unrecognized symbol: ", 21 );
static SlagLiteralString str406( "SlagScanner", 11 );
static SlagLiteralString str407( "ERROR: '-define' should be followed by an id or an id:value pair, e.g. \"DEBUG:true\".", 84 );
static SlagLiteralString str408( "-platform", 9 );
static SlagLiteralString str409( "ERROR: '-platform' should be followed by an identifier such as CONSOLE or ANDROID.", 82 );
static SlagLiteralString str410( "-include", 8 );
static SlagLiteralString str411( "ERROR: '-include' should be followed by a filename, e.g. \"standard.slag\".", 73 );
static SlagLiteralString str412( "-nostdlib", 9 );
static SlagLiteralString str413( "-dest_path", 10 );
static SlagLiteralString str414( "ERROR: multiple destination paths defined.", 42 );
static SlagLiteralString str415( "ERROR: Only one folder may be specified by 'dest_path'.", 55 );
static SlagLiteralString str416( "ERROR: Destination path \"", 25 );
static SlagLiteralString str417( "\" doesn't exist.", 16 );
static SlagLiteralString str418( "ERROR: '-dest_path' should be followed by a single path, e.g. \"build\".", 70 );
static SlagLiteralString str419( "-native", 7 );
static SlagLiteralString str420( "ERROR: '-native' should be followed by a method signature to force native, e.g. \"Type::fn_name(ArgType)\".", 105 );
static SlagLiteralString str421( "-output", 7 );
static SlagLiteralString str422( "ERROR: '-output' should be followed by a base filename, e.g. \"game\".", 68 );
static SlagLiteralString str423( "-inspect", 8 );
static SlagLiteralString str424( "ERROR: '-inspect' should be followed by \"TypeName\" or \"TypeName::method_name(ArgTypes)\"", 87 );
static SlagLiteralString str425( "-slagdoc", 8 );
static SlagLiteralString str426( "ERROR: Follow '-slagdoc' with a type name, e.g. \"String\".", 57 );
static SlagLiteralString str427( "-exe", 4 );
static SlagLiteralString str428( "ERROR: Only one folder may be specified by 'exe'.", 49 );
static SlagLiteralString str429( "ERROR: Executable resource path \"", 33 );
static SlagLiteralString str430( "ERROR: '-exe' should be followed by a single path, e.g. \"dist\".", 63 );
static SlagLiteralString str431( "-noexe", 6 );
static SlagLiteralString str432( "-etc", 4 );
static SlagLiteralString str433( "-cpp", 4 );
static SlagLiteralString str434( "cpp", 3 );
static SlagLiteralString str435( "-use_longjmp", 12 );
static SlagLiteralString str436( "CPPWriter", 9 );
static SlagLiteralString str437( "-cs", 3 );
static SlagLiteralString str438( "cs", 2 );
static SlagLiteralString str439( "-java", 5 );
static SlagLiteralString str440( "java", 4 );
static SlagLiteralString str441( "-java_package", 13 );
static SlagLiteralString str442( "ERROR: '-java_package' should be followed by a package name.", 60 );
static SlagLiteralString str443( "Unknown option \"", 16 );
static SlagLiteralString str444( "\" - type \"slagc -?\" for usage options.", 39 );
static SlagLiteralString str445( "PLATFORM", 8 );
static SlagLiteralString str446( "PLATFORM_", 9 );
static SlagLiteralString str447( "ERROR: Missing filename to compile.", 35 );
static SlagLiteralString str448( "standard.slag", 13 );
static SlagLiteralString str449( ".slag", 5 );
static SlagLiteralString str450( "ERROR: Unable to locate file \"", 30 );
static SlagLiteralString str451( "\" or folder \"", 13 );
static SlagLiteralString str452( ".etc", 4 );
static SlagLiteralString str453( "-infinity", 9 );
static SlagLiteralString str454( " seconds", 8 );
static SlagLiteralString str455( "Stopwatch", 9 );
static SlagLiteralString str456( "8000000000000000", 16 );
static SlagLiteralString str457( "10000000000000000", 17 );
static SlagLiteralString str458( "SlagParserManager", 17 );
static SlagLiteralString str459( "HashTableBase<<Int32,KeywordPairing,Int32,Object>>", 50 );
static SlagLiteralString str460( "HashTable<<Int32,KeywordPairing>>", 33 );
static SlagLiteralString str461( "CoerceReader<<Int32>>", 21 );
static SlagLiteralString str462( "HashTableValueReader<<Object,Int32>>", 36 );
static SlagLiteralString str463( "ArrayReader<<Int32>>", 20 );
static SlagLiteralString str464( "ControlStructureInfo", 20 );
static SlagLiteralString str465( "Array<<ControlStructureInfo>>", 29 );
static SlagLiteralString str466( "ArrayList<<ControlStructureInfo>>", 33 );
static SlagLiteralString str467( "SlagFile", 8 );
static SlagLiteralString str468( "Array<<SlagFile>>", 17 );
static SlagLiteralString str469( "ArrayList<<SlagFile>>", 21 );
static SlagLiteralString str470( "SlagParser", 10 );
static SlagLiteralString str471( "TokenReader", 11 );
static SlagLiteralString str472( "KeywordPairing", 14 );
static SlagLiteralString str473( "which' or 'whichIs", 18 );
static SlagLiteralString str474( "Compiling ", 10 );
static SlagLiteralString str475( "ArrayReader<<SlagFile>>", 23 );
static SlagLiteralString str476( "File not found: \"", 17 );
static SlagLiteralString str477( "[Internal]", 10 );
static SlagLiteralString str478( "HashTableBase<<String,TypeInfo,Object,Object>>", 46 );
static SlagLiteralString str479( "HashTable<<String,TypeInfo>>", 28 );
static SlagLiteralString str480( "HashTableBase<<String,TypeTemplate[],Object,Object>>", 52 );
static SlagLiteralString str481( "HashTable<<String,TypeTemplate[]>>", 34 );
static SlagLiteralString str482( "HashTableBase<<String,TypeTemplate,Object,Object>>", 50 );
static SlagLiteralString str483( "HashTable<<String,TypeTemplate>>", 32 );
static SlagLiteralString str484( "Array<<TypeInfo>>", 17 );
static SlagLiteralString str485( "GenericVarInfo", 14 );
static SlagLiteralString str486( "MethodVarInfo", 13 );
static SlagLiteralString str487( "LocalVarInfo", 12 );
static SlagLiteralString str488( "Array<<LocalVarInfo>>", 21 );
static SlagLiteralString str489( "ArrayList<<LocalVarInfo>>", 25 );
static SlagLiteralString str490( "Array<<MethodInfo>>", 19 );
static SlagLiteralString str491( "qual_class", 10 );
static SlagLiteralString str492( "Array<<Qualifiers>>", 19 );
static SlagLiteralString str493( "ArrayList<<Qualifiers>>", 23 );
static SlagLiteralString str494( "HashTableBase<<String,Qualifiers,Object,Object>>", 48 );
static SlagLiteralString str495( "HashTable<<String,Qualifiers>>", 30 );
static SlagLiteralString str496( "qual_aspect", 11 );
static SlagLiteralString str497( "qual_primitive", 14 );
static SlagLiteralString str498( "qual_compound", 13 );
static SlagLiteralString str499( "qual_singleton", 14 );
static SlagLiteralString str500( "qual_managed", 12 );
static SlagLiteralString str501( "qual_deferred", 13 );
static SlagLiteralString str502( "qual_underlying", 15 );
static SlagLiteralString str503( "qual_overlaying", 15 );
static SlagLiteralString str504( "qual_requisite", 14 );
static SlagLiteralString str505( "qual_limited", 12 );
static SlagLiteralString str506( "qual_native", 11 );
static SlagLiteralString str507( "qual_abstract", 13 );
static SlagLiteralString str508( "qual_automatic", 14 );
static SlagLiteralString str509( "qual_propagated", 15 );
static SlagLiteralString str510( "qual_public", 11 );
static SlagLiteralString str511( "qual_private", 12 );
static SlagLiteralString str512( "qual_readonly", 13 );
static SlagLiteralString str513( "qual_class_scope", 16 );
static SlagLiteralString str514( "qual_contains_throw", 19 );
static SlagLiteralString str515( "qual_empty_body", 15 );
static SlagLiteralString str516( "qual_augment", 12 );
static SlagLiteralString str517( "qual_enum", 9 );
static SlagLiteralString str518( "qual_generic", 12 );
static SlagLiteralString str519( "qual_constant", 13 );
static SlagLiteralString str520( "qual_requires_cleanup", 21 );
static SlagLiteralString str521( "qual_array", 10 );
static SlagLiteralString str522( "qual_reference_array", 20 );
static SlagLiteralString str523( "qual_runtime", 12 );
static SlagLiteralString str524( "qual_access_mask", 16 );
static SlagLiteralString str525( "Enum<<Qualifiers>>", 18 );
static SlagLiteralString str526( "QualifiersManager", 17 );
static SlagLiteralString str527( "ArrayReader<<Qualifiers>>", 25 );
static SlagLiteralString str528( "Qualifiers", 10 );
static SlagLiteralString str529( "CmdManager", 10 );
static SlagLiteralString str530( "Cmd", 3 );
static SlagLiteralString str531( "(...)", 5 );
static SlagLiteralString str532( "ParameterInfo", 13 );
static SlagLiteralString str533( "Array<<ParameterInfo>>", 22 );
static SlagLiteralString str534( "ArrayList<<ParameterInfo>>", 26 );
static SlagLiteralString str535( "ArrayReader<<ParameterInfo>>", 28 );
static SlagLiteralString str536( "MethodInfo", 10 );
static SlagLiteralString str537( "ArrayList<<MethodInfo>>", 23 );
static SlagLiteralString str538( "PropertyInfo", 12 );
static SlagLiteralString str539( "Array<<PropertyInfo>>", 21 );
static SlagLiteralString str540( "ArrayList<<PropertyInfo>>", 25 );
static SlagLiteralString str541( "CategoryInfo", 12 );
static SlagLiteralString str542( "Array<<CategoryInfo>>", 21 );
static SlagLiteralString str543( "ArrayList<<CategoryInfo>>", 25 );
static SlagLiteralString str544( "HashTableBase<<String,PropertyInfo,Object,Object>>", 50 );
static SlagLiteralString str545( "HashTable<<String,PropertyInfo>>", 32 );
static SlagLiteralString str546( "HashTableBase<<String,MethodInfo[],Object,Object>>", 50 );
static SlagLiteralString str547( "HashTable<<String,MethodInfo[]>>", 32 );
static SlagLiteralString str548( "MethodTable", 11 );
static SlagLiteralString str549( "MethodTableManager", 18 );
static SlagLiteralString str550( "HashTableBase<<String,MethodInfo,Object,Object>>", 48 );
static SlagLiteralString str551( "HashTable<<String,MethodInfo>>", 30 );
static SlagLiteralString str552( "->", 2 );
static SlagLiteralString str553( "TypeMapping", 11 );
static SlagLiteralString str554( "Array<<TypeMapping>>", 20 );
static SlagLiteralString str555( "ArrayList<<TypeMapping>>", 24 );
static SlagLiteralString str556( "TypeInfo", 8 );
static SlagLiteralString str557( "ArrayList<<TypeInfo>>", 21 );
static SlagLiteralString str558( "HashTableBase<<String,MethodGroup,Object,Object>>", 49 );
static SlagLiteralString str559( "HashTable<<String,MethodGroup>>", 31 );
static SlagLiteralString str560( "MethodGroup", 11 );
static SlagLiteralString str561( "Array<<MethodGroup>>", 20 );
static SlagLiteralString str562( "ArrayList<<MethodGroup>>", 24 );
static SlagLiteralString str563( "StringTable", 11 );
static SlagLiteralString str564( "Int64", 5 );
static SlagLiteralString str565( "Array<<ArrayList<<Token>>>>", 27 );
static SlagLiteralString str566( "ArrayList<<ArrayList<<Token>>>>", 31 );
static SlagLiteralString str567( "Mapping<<String,TypeInfo>>", 26 );
static SlagLiteralString str568( "A type named '", 14 );
static SlagLiteralString str569( "' already exists.", 17 );
static SlagLiteralString str570( "In \"", 4 );
static SlagLiteralString str571( "PriorSlagError", 14 );
static SlagLiteralString str572( "ArrayReader<<MethodInfo>>", 25 );
static SlagLiteralString str573( "CoerceReader<<MethodInfo>>", 26 );
static SlagLiteralString str574( "HashTableValueReader<<Object,Object>>", 37 );
static SlagLiteralString str575( "ArrayReader<<PropertyInfo>>", 27 );
static SlagLiteralString str576( "CoerceReader<<PropertyInfo>>", 28 );
static SlagLiteralString str577( "Int32", 5 );
static SlagLiteralString str578( "Char", 4 );
static SlagLiteralString str579( "Byte", 4 );
static SlagLiteralString str580( "Real64", 6 );
static SlagLiteralString str581( "Real32", 6 );
static SlagLiteralString str582( "Logical", 7 );
static SlagLiteralString str583( "ArrayReader<<ArrayList<<Token>>>>", 33 );
static SlagLiteralString str584( "ArrayReader<<Token>>", 20 );
static SlagLiteralString str585( "GenericEnum", 11 );
static SlagLiteralString str586( "ReaderType", 10 );
static SlagLiteralString str587( "ReadableType", 12 );
static SlagLiteralString str588( "ListType", 8 );
static SlagLiteralString str589( "var", 3 );
static SlagLiteralString str590( "RequiresCleanup", 15 );
static SlagLiteralString str591( "ManagerCreates", 14 );
static SlagLiteralString str592( "StringIDAccess", 14 );
static SlagLiteralString str593( "Runtime", 7 );
static SlagLiteralString str594( "TypeManager", 11 );
static SlagLiteralString str595( "LiteralTerm", 11 );
static SlagLiteralString str596( "' expected.", 11 );
static SlagLiteralString str597( "Literal true or false expected.", 31 );
static SlagLiteralString str598( "LiteralLogical", 14 );
static SlagLiteralString str599( "Literal logical value required.", 31 );
static SlagLiteralString str600( "Logical (true/false) result required.", 37 );
static SlagLiteralString str601( "[elseIf] without starting [if].", 31 );
static SlagLiteralString str602( "[else] without starting [if].", 29 );
static SlagLiteralString str603( "[endIf] without starting [if].", 30 );
static SlagLiteralString str604( "[endIf] expected before end of file.", 36 );
static SlagLiteralString str605( "SlagPreprocessor", 16 );
static SlagLiteralString str606( "if (false)", 10 );
static SlagLiteralString str607( " ", 1 );
static SlagLiteralString str608( "Date", 4 );
static SlagLiteralString str609( "DATE", 4 );
static SlagLiteralString str610( "Int", 3 );
static SlagLiteralString str611( "Integer", 7 );
static SlagLiteralString str612( "Real", 4 );
static SlagLiteralString str613( "include", 7 );
static SlagLiteralString str614( "Quoted filename expected.", 25 );
static SlagLiteralString str615( "includeDir", 10 );
static SlagLiteralString str616( "Quoted path expected.", 21 );
static SlagLiteralString str617( "HashTableValueReader<<Int32,Object>>", 36 );
static SlagLiteralString str618( "last_index", 10 );
static SlagLiteralString str619( "\" is not a directory.", 21 );
static SlagLiteralString str620( "includeDefines", 14 );
static SlagLiteralString str621( "main", 4 );
static SlagLiteralString str622( "Expected name of datatype.", 26 );
static SlagLiteralString str623( "ThisType", 8 );
static SlagLiteralString str624( "'ThisType' is only valid within a class or aspect definition.", 61 );
static SlagLiteralString str625( "Delegate", 8 );
static SlagLiteralString str626( "Delegate__", 10 );
static SlagLiteralString str627( "DelegateMaker", 13 );
static SlagLiteralString str628( "_of_", 4 );
static SlagLiteralString str629( "_", 1 );
static SlagLiteralString str630( "Closing ')' expected.", 21 );
static SlagLiteralString str631( "__", 2 );
static SlagLiteralString str632( "call( ", 6 );
static SlagLiteralString str633( " a", 2 );
static SlagLiteralString str634( ", ", 2 );
static SlagLiteralString str635( " )", 2 );
static SlagLiteralString str636( "class ", 6 );
static SlagLiteralString str637( " : DelegateType", 15 );
static SlagLiteralString str638( "  abstract method context.Object", 32 );
static SlagLiteralString str639( "  abstract method ", 18 );
static SlagLiteralString str640( "class Specialized", 17 );
static SlagLiteralString str641( "<<$ContextType,$method_name>>( $ContextType context ) : ", 56 );
static SlagLiteralString str642( "  method context.Object", 23 );
static SlagLiteralString str643( "    return &context", 19 );
static SlagLiteralString str644( "  method ", 9 );
static SlagLiteralString str645( "    return ", 11 );
static SlagLiteralString str646( "&context.$method_name(", 22 );
static SlagLiteralString str647( "Generated Delegate", 18 );
static SlagLiteralString str648( "Unbalanced brackets in substitution list.", 41 );
static SlagLiteralString str649( "Closing '", 9 );
static SlagLiteralString str650( "ArrayList", 9 );
static SlagLiteralString str651( "all", 3 );
static SlagLiteralString str652( "Expected include, includeDir, includeDefines, main, if, or requisite directive.", 79 );
static SlagLiteralString str653( "Qualifiers 'underlying' and 'overlaying' cannot be mixed.", 57 );
static SlagLiteralString str654( "Type name expected.", 19 );
static SlagLiteralString str655( "TypeTemplate", 12 );
static SlagLiteralString str656( "Identifier expected.", 20 );
static SlagLiteralString str657( "non", 3 );
static SlagLiteralString str658( "non-", 4 );
static SlagLiteralString str659( "type category expected (e.g. 'primitive', 'reference', etc.).", 61 );
static SlagLiteralString str660( "Placeholder id (e.g. \"$DataType\") expected.", 43 );
static SlagLiteralString str661( "No matching '", 13 );
static SlagLiteralString str662( "' found.", 8 );
static SlagLiteralString str663( "Mapping<<String,TypeTemplate[]>>", 32 );
static SlagLiteralString str664( "Array<<TypeTemplate>>", 21 );
static SlagLiteralString str665( "ArrayList<<TypeTemplate>>", 25 );
static SlagLiteralString str666( "Aspect", 6 );
static SlagLiteralString str667( "init", 4 );
static SlagLiteralString str668( "Type 'var' isn't allowed here.", 30 );
static SlagLiteralString str669( "CmdUnary", 8 );
static SlagLiteralString str670( "CmdNegate", 9 );
static SlagLiteralString str671( "CmdNot", 6 );
static SlagLiteralString str672( "CmdLogicalNot", 13 );
static SlagLiteralString str673( "Array<<Cmd>>", 12 );
static SlagLiteralString str674( "ArrayList<<Cmd>>", 16 );
static SlagLiteralString str675( "ArrayReader<<Cmd>>", 18 );
static SlagLiteralString str676( "CmdImplicitListLiteral", 22 );
static SlagLiteralString str677( "CmdList", 7 );
static SlagLiteralString str678( "CmdConstruct", 12 );
static SlagLiteralString str679( "Syntax error in argument-property declaration.", 46 );
static SlagLiteralString str680( "InlineClassPropertyDeclaration", 30 );
static SlagLiteralString str681( "Expected ',' or '", 17 );
static SlagLiteralString str682( "CmdStatement", 12 );
static SlagLiteralString str683( "CmdUnderlyingCall", 17 );
static SlagLiteralString str684( "CmdFormattedString", 18 );
static SlagLiteralString str685( "CmdTerm", 7 );
static SlagLiteralString str686( "CmdLiteralString", 16 );
static SlagLiteralString str687( "CmdLiteralString(\"", 18 );
static SlagLiteralString str688( "\")", 2 );
static SlagLiteralString str689( "op", 2 );
static SlagLiteralString str690( "op==", 4 );
static SlagLiteralString str691( "op<>", 4 );
static SlagLiteralString str692( "op+", 3 );
static SlagLiteralString str693( "op-", 3 );
static SlagLiteralString str694( "op*", 3 );
static SlagLiteralString str695( "op/", 3 );
static SlagLiteralString str696( "op%", 3 );
static SlagLiteralString str697( "op^", 3 );
static SlagLiteralString str698( "op&", 3 );
static SlagLiteralString str699( "op|", 3 );
static SlagLiteralString str700( "op~", 3 );
static SlagLiteralString str701( "op!", 3 );
static SlagLiteralString str702( "Sytax error - direct property access \"&var\" is incompatible with substitution list \"<<...>>\".", 93 );
static SlagLiteralString str703( "delegate", 8 );
static SlagLiteralString str704( "CmdLiteralPrimitive", 19 );
static SlagLiteralString str705( "CmdLiteralInt64", 15 );
static SlagLiteralString str706( "Single identifer expected for arg-property without type.", 56 );
static SlagLiteralString str707( "Specialized", 11 );
static SlagLiteralString str708( "A method cannot be both 'underlying' and 'overlaying'.", 54 );
static SlagLiteralString str709( "A method cannot be both 'generic' and 'native'.", 47 );
static SlagLiteralString str710( "Method name expected.", 21 );
static SlagLiteralString str711( "init_class", 10 );
static SlagLiteralString str712( "init_object", 11 );
static SlagLiteralString str713( "CmdStatementList", 16 );
static SlagLiteralString str714( "Mapping<<Int32,KeywordPairing>>", 31 );
static SlagLiteralString str715( "' without '", 11 );
static SlagLiteralString str716( "CmdOpenScope", 12 );
static SlagLiteralString str717( "CmdStructure", 12 );
static SlagLiteralString str718( "CmdBlock", 8 );
static SlagLiteralString str719( " (...)", 6 );
static SlagLiteralString str720( "end ", 4 );
static SlagLiteralString str721( "Label name expected.", 20 );
static SlagLiteralString str722( "End of line expected.", 21 );
static SlagLiteralString str723( "block_stmt", 10 );
static SlagLiteralString str724( "Array<<StructureType>>", 22 );
static SlagLiteralString str725( "ArrayList<<StructureType>>", 26 );
static SlagLiteralString str726( "HashTableBase<<String,StructureType,Object,Object>>", 51 );
static SlagLiteralString str727( "HashTable<<String,StructureType>>", 33 );
static SlagLiteralString str728( "if_stmt", 7 );
static SlagLiteralString str729( "which_stmt", 10 );
static SlagLiteralString str730( "whichis_stmt", 12 );
static SlagLiteralString str731( "contingent_stmt", 15 );
static SlagLiteralString str732( "try_stmt", 8 );
static SlagLiteralString str733( "forEach_stmt", 12 );
static SlagLiteralString str734( "while_stmt", 10 );
static SlagLiteralString str735( "loop_stmt", 9 );
static SlagLiteralString str736( "Enum<<StructureType>>", 21 );
static SlagLiteralString str737( "StructureType", 13 );
static SlagLiteralString str738( "ArrayReader<<ControlStructureInfo>>", 35 );
static SlagLiteralString str739( "Label \"", 7 );
static SlagLiteralString str740( "\" is already defined in the current scope.", 42 );
static SlagLiteralString str741( "elseIf (", 8 );
static SlagLiteralString str742( "CmdElseIf", 9 );
static SlagLiteralString str743( "Array<<CmdElseIf>>", 18 );
static SlagLiteralString str744( "ArrayList<<CmdElseIf>>", 22 );
static SlagLiteralString str745( "ArrayReader<<CmdElseIf>>", 24 );
static SlagLiteralString str746( "CmdIf", 5 );
static SlagLiteralString str747( " (", 2 );
static SlagLiteralString str748( "'(' expected.", 13 );
static SlagLiteralString str749( "  case ", 7 );
static SlagLiteralString str750( ":\012    ", 6 );
static SlagLiteralString str751( "CmdWhichCase", 12 );
static SlagLiteralString str752( "Array<<CmdWhichCase>>", 21 );
static SlagLiteralString str753( "ArrayList<<CmdWhichCase>>", 25 );
static SlagLiteralString str754( "ArrayReader<<CmdWhichCase>>", 27 );
static SlagLiteralString str755( "which::", 7 );
static SlagLiteralString str756( "CmdWhich", 8 );
static SlagLiteralString str757( ":', end of line, or ',", 22 );
static SlagLiteralString str758( "Literal", 7 );
static SlagLiteralString str759( "CmdLiteralInt32", 15 );
static SlagLiteralString str760( "Use of 'caseNext' requires that the previous value also be a 'caseNext' or a literal integer case.", 98 );
static SlagLiteralString str761( "endWhichIs', 'case', or 'others", 31 );
static SlagLiteralString str762( "endWhich', 'case', or 'others", 29 );
static SlagLiteralString str763( "contingent::", 12 );
static SlagLiteralString str764( "endContingent::", 15 );
static SlagLiteralString str765( "CmdContingent", 13 );
static SlagLiteralString str766( "CmdCatch", 8 );
static SlagLiteralString str767( "Array<<CmdCatch>>", 17 );
static SlagLiteralString str768( "ArrayList<<CmdCatch>>", 21 );
static SlagLiteralString str769( "ArrayReader<<CmdCatch>>", 23 );
static SlagLiteralString str770( "try ", 4 );
static SlagLiteralString str771( "catch (", 7 );
static SlagLiteralString str772( "CmdTry", 6 );
static SlagLiteralString str773( "Catch variable name expected.", 29 );
static SlagLiteralString str774( "CmdLocalVarDeclaration", 22 );
static SlagLiteralString str775( "CmdCloseScope", 13 );
static SlagLiteralString str776( "CmdLoop", 7 );
static SlagLiteralString str777( "while::", 7 );
static SlagLiteralString str778( "  endWhile::", 12 );
static SlagLiteralString str779( "CmdWhile", 8 );
static SlagLiteralString str780( "CmdForEach", 10 );
static SlagLiteralString str781( ".local_", 7 );
static SlagLiteralString str782( "CmdForEachIn", 12 );
static SlagLiteralString str783( "Control variable name expected.", 31 );
static SlagLiteralString str784( "CmdForEachOf", 12 );
static SlagLiteralString str785( "'in' or 'of' expected.", 22 );
static SlagLiteralString str786( "Missing type.", 13 );
static SlagLiteralString str787( "Local variable name expected.", 29 );
static SlagLiteralString str788( "CmdInitialConstructor", 21 );
static SlagLiteralString str789( "CmdAssignNewObject", 18 );
static SlagLiteralString str790( "CmdAssignZeroValue", 18 );
static SlagLiteralString str791( "Command not allowed in single-line statement body.", 50 );
static SlagLiteralString str792( "CmdBreakpoint(", 14 );
static SlagLiteralString str793( "CmdBreakpoint", 13 );
static SlagLiteralString str794( "CmdStructureControl", 19 );
static SlagLiteralString str795( "CmdEscape", 9 );
static SlagLiteralString str796( "ArrayReverseReader<<ControlStructureInfo>>", 42 );
static SlagLiteralString str797( "Escape subtype does not match the control structure referred to.", 64 );
static SlagLiteralString str798( "No such control structure labeled \"", 35 );
static SlagLiteralString str799( "\" exists in the current scope.", 30 );
static SlagLiteralString str800( "No such control structure exists in the current scope.", 54 );
static SlagLiteralString str801( "CmdNextIteration", 16 );
static SlagLiteralString str802( "nextIteration label must refer to an iteration structure such as forEach or while.", 82 );
static SlagLiteralString str803( "No enclosing iteration structure exists in the current scope.", 61 );
static SlagLiteralString str804( "CmdStatementWithOperand", 23 );
static SlagLiteralString str805( "CmdContingentControl", 20 );
static SlagLiteralString str806( "CmdNecessary", 12 );
static SlagLiteralString str807( "CmdRemoveCurrent", 16 );
static SlagLiteralString str808( "There is no enclosing forEach-in with a control variable named \"", 64 );
static SlagLiteralString str809( "CmdReturnNil", 12 );
static SlagLiteralString str810( "return ", 7 );
static SlagLiteralString str811( "CmdReturnValue", 14 );
static SlagLiteralString str812( "CmdSufficient", 13 );
static SlagLiteralString str813( "throw(", 6 );
static SlagLiteralString str814( "CmdThrow", 8 );
static SlagLiteralString str815( "CmdBinary", 9 );
static SlagLiteralString str816( "CmdAssign", 9 );
static SlagLiteralString str817( "CmdMathOp<<CmdAdd,\"+\",+=,cmd_add>>", 34 );
static SlagLiteralString str818( "CmdAdd", 6 );
static SlagLiteralString str819( "CmdMathOp<<CmdSub,\"-\",-=,cmd_sub>>", 34 );
static SlagLiteralString str820( "CmdSub", 6 );
static SlagLiteralString str821( "CmdMathOp<<CmdMul,\"*\",*=,cmd_mul>>", 34 );
static SlagLiteralString str822( "CmdMul", 6 );
static SlagLiteralString str823( "CmdMathOp<<CmdDiv,\"/\",/=,cmd_div>>", 34 );
static SlagLiteralString str824( "CmdDiv", 6 );
static SlagLiteralString str825( "CmdMathOp<<CmdMod,\"%\",%=,cmd_mod>>", 34 );
static SlagLiteralString str826( "CmdMod", 6 );
static SlagLiteralString str827( "CmdMathOp<<CmdExp,\"^\",^=,cmd_exp>>", 34 );
static SlagLiteralString str828( "CmdExp", 6 );
static SlagLiteralString str829( "CmdBitwiseOp<<CmdAnd,\"&\",&=,cmd_and>>", 37 );
static SlagLiteralString str830( "CmdAnd", 6 );
static SlagLiteralString str831( "CmdBitwiseOp<<CmdOr,\"|\",|=,cmd_or>>", 35 );
static SlagLiteralString str832( "CmdOr", 5 );
static SlagLiteralString str833( "CmdBitwiseOp<<CmdXor,\"~\",~=,cmd_xor>>", 37 );
static SlagLiteralString str834( "CmdXor", 6 );
static SlagLiteralString str835( "CmdMemberAccess(", 16 );
static SlagLiteralString str836( "CmdMemberAccess", 15 );
static SlagLiteralString str837( "CmdCast", 7 );
static SlagLiteralString str838( "(to:", 4 );
static SlagLiteralString str839( "CmdAccessIndex", 14 );
static SlagLiteralString str840( "Missing 'local' keyword before local variable declaration.", 58 );
static SlagLiteralString str841( "End of line or ';' expected.", 28 );
static SlagLiteralString str842( "An abstract method cannot contain commands.", 43 );
static SlagLiteralString str843( "Deferred singletons cannot have class members.", 46 );
static SlagLiteralString str844( "ArrayReader<<CategoryInfo>>", 27 );
static SlagLiteralString str845( "Manager", 7 );
static SlagLiteralString str846( "Invalid location for anonymous specialized class.  Instead of \"x() with ...\" write \"x = ObjType() with ...\".", 108 );
static SlagLiteralString str847( "CmdInitialAssignment", 20 );
static SlagLiteralString str848( "\"id\" or \"id=integer\" expected.", 30 );
static SlagLiteralString str849( "Literal integer expected.", 25 );
static SlagLiteralString str850( "Methods must be defined in a METHODS or CLASS_METHODS section.", 62 );
static SlagLiteralString str851( "BASE_TYPES", 10 );
static SlagLiteralString str852( "Expected \"BaseType1, BaseType2, ...\" base type declarations, another member category, or the '", 94 );
static SlagLiteralString str853( "' keyword.", 10 );
static SlagLiteralString str854( "Expected \"SingletonType1, SingletonType2, ...\", another member category, or the '", 81 );
static SlagLiteralString str855( "Expected \"monday, tuesday, ...\" category declaration, another member category, or the '", 87 );
static SlagLiteralString str856( "Expected e.g. \"fade_in, active, error=100, ...\" enumeration id declaration, another member category, or the '", 109 );
static SlagLiteralString str857( "Expected \"name : Type\" property declaration, another member category, or the '", 78 );
static SlagLiteralString str858( "Expected 'method' keyword, another member category, or the '", 60 );
static SlagLiteralString str859( "Member category expected: PROPERTIES, METHODS, CLASS_PROPERTIES, CLASS_METHODS, SINGLETONS, CATEGORIES, ENUMERATE, or BASE_TYPES.", 129 );
static SlagLiteralString str860( "Literal list type cannot have arguments.", 40 );
static SlagLiteralString str861( "CmdExplicitListLiteral", 22 );
static SlagLiteralString str862( "Unrecognized meta expression.", 29 );
static SlagLiteralString str863( "('", 2 );
static SlagLiteralString str864( "')", 2 );
static SlagLiteralString str865( "CmdLiteralChar", 14 );
static SlagLiteralString str866( "BigInt value out of Int32 bounds.", 33 );
static SlagLiteralString str867( "Integer value too large.", 24 );
static SlagLiteralString str868( "Integer hex value too large.", 28 );
static SlagLiteralString str869( "CmdLiteralReal64", 16 );
static SlagLiteralString str870( "Illegal boolean value ", 22 );
static SlagLiteralString str871( "CmdLiteralLogical", 17 );
static SlagLiteralString str872( "CmdLiteralNull", 14 );
static SlagLiteralString str873( "CmdDuplicate", 12 );
static SlagLiteralString str874( "Unrecognized syntax in expression: (", 36 );
static SlagLiteralString str875( "CmdLogicalize", 13 );
static SlagLiteralString str876( "CmdCompare", 10 );
static SlagLiteralString str877( "CmdCmpEquivalance<<CmdCmpEQ,==,false,cmd_cmp_eq>>", 49 );
static SlagLiteralString str878( "CmdCmpEQ", 8 );
static SlagLiteralString str879( "CmdCmpRelative<<CmdCmpLE,<=,CmdCmpNE,1,cmd_cmp_le>>", 51 );
static SlagLiteralString str880( "CmdCmpLE", 8 );
static SlagLiteralString str881( "CmdCmpRelative<<CmdCmpGE,>=,CmdCmpNE,ffffffff,cmd_cmp_ge>>", 58 );
static SlagLiteralString str882( "CmdCmpGE", 8 );
static SlagLiteralString str883( "CmdCmpRelative<<CmdCmpLT,<,CmdCmpEQ,ffffffff,cmd_cmp_lt>>", 57 );
static SlagLiteralString str884( "CmdCmpLT", 8 );
static SlagLiteralString str885( "CmdCmpRelative<<CmdCmpGT,>,CmdCmpEQ,1,cmd_cmp_gt>>", 50 );
static SlagLiteralString str886( "CmdCmpGT", 8 );
static SlagLiteralString str887( "CmdCmpEquivalance<<CmdCmpNE,!=,true,cmd_cmp_ne>>", 48 );
static SlagLiteralString str888( "CmdCmpNE", 8 );
static SlagLiteralString str889( "CmdCmpIs", 8 );
static SlagLiteralString str890( "CmdCmpIsNot", 11 );
static SlagLiteralString str891( "CmdAs", 5 );
static SlagLiteralString str892( "CmdCoerceAs", 11 );
static SlagLiteralString str893( "CmdCmpInstanceOf", 16 );
static SlagLiteralString str894( "CmdLazyAnd", 10 );
static SlagLiteralString str895( "CmdLazyOr", 9 );
static SlagLiteralString str896( "CmdLogicalXor", 13 );
static SlagLiteralString str897( "CmdRange", 8 );
static SlagLiteralString str898( "CmdRangeLE", 10 );
static SlagLiteralString str899( "CmdRangeLT", 10 );
static SlagLiteralString str900( "CmdRangeGT", 10 );
static SlagLiteralString str901( "CmdRangeGE", 10 );
static SlagLiteralString str902( "Only classes can be singletons.", 31 );
static SlagLiteralString str903( "Compound name expected.", 23 );
static SlagLiteralString str904( "Default values aren't allowed here.", 35 );
static SlagLiteralString str905( "Only classes and aspects may be extended.", 41 );
static SlagLiteralString str906( "Framework name expected.", 24 );
static SlagLiteralString str907( "No matching 'endFramework' found.", 33 );
static SlagLiteralString str908( "Mapping<<String,TypeTemplate>>", 30 );
static SlagLiteralString str909( "A framework named '", 19 );
static SlagLiteralString str910( "'<<' expected.", 14 );
static SlagLiteralString str911( "Expected directive, class, augment, aspect, compound, enum, or framework.", 73 );
static SlagLiteralString str912( "Array<<SlagError>>", 18 );
static SlagLiteralString str913( "ArrayList<<SlagError>>", 22 );
static SlagLiteralString str914( "Errors", 6 );
static SlagLiteralString str915( "No such framework: ", 19 );
static SlagLiteralString str916( "HashTableBase<<String,Token[],Object,Object>>", 45 );
static SlagLiteralString str917( "HashTable<<String,Token[]>>", 27 );
static SlagLiteralString str918( "Mapping<<String,Token[]>>", 25 );
static SlagLiteralString str919( "No such placeholder \"", 21 );
static SlagLiteralString str920( "\" was defined.", 14 );
static SlagLiteralString str921( "TemplateReader", 14 );
static SlagLiteralString str922( "SlagAnalyzer", 12 );
static SlagLiteralString str923( "No classes were defined - you must define at least one class to be the main class.", 82 );
static SlagLiteralString str924( "The main class cannot be a type template.", 41 );
static SlagLiteralString str925( "Array<<ArrayList<<TypeTemplate>>>>", 34 );
static SlagLiteralString str926( "ArrayList<<ArrayList<<TypeTemplate>>>>", 38 );
static SlagLiteralString str927( "CoerceReader<<TypeTemplate[]>>", 30 );
static SlagLiteralString str928( "ArrayReader<<TypeTemplate>>", 27 );
static SlagLiteralString str929( "$ThisType", 9 );
static SlagLiteralString str930( "ArrayReader<<TypeInfo>>", 23 );
static SlagLiteralString str931( "Reference to undefined type '", 29 );
static SlagLiteralString str932( "CoerceReader<<TypeInfo>>", 24 );
static SlagLiteralString str933( "SlagDoc Type Name", 17 );
static SlagLiteralString str934( "Type ", 5 );
static SlagLiteralString str935( " is already defined.", 20 );
static SlagLiteralString str936( "The number of substitution values does not match the number of placeholders.", 76 );
static SlagLiteralString str937( "Type '", 6 );
static SlagLiteralString str938( "' does not require <<substitution types>>.", 42 );
static SlagLiteralString str939( "Omit the placeholder list (<<...>>) on a general augment.", 57 );
static SlagLiteralString str940( "numerical", 9 );
static SlagLiteralString str941( "real", 4 );
static SlagLiteralString str942( "integer", 7 );
static SlagLiteralString str943( "primitive", 9 );
static SlagLiteralString str944( "reference", 9 );
static SlagLiteralString str945( "non-numerical", 13 );
static SlagLiteralString str946( "non-real", 8 );
static SlagLiteralString str947( "non-integer", 11 );
static SlagLiteralString str948( "non-primitive", 13 );
static SlagLiteralString str949( "non-compound", 12 );
static SlagLiteralString str950( "non-reference", 13 );
static SlagLiteralString str951( "Reference to type ", 18 );
static SlagLiteralString str952( " is missing substitution values.", 32 );
static SlagLiteralString str953( "Reference to undefined type \"", 29 );
static SlagLiteralString str954( "Enum", 4 );
static SlagLiteralString str955( "prep", 4 );
static SlagLiteralString str956( "EnumCategory", 12 );
static SlagLiteralString str957( "Cyclic type dependency detected in compound ", 44 );
static SlagLiteralString str958( "Illegal member type; compounds can only contain primitives and other compounds.", 79 );
static SlagLiteralString str959( "A class may only extend one base class (", 40 );
static SlagLiteralString str960( " extends both ", 14 );
static SlagLiteralString str961( " and ", 5 );
static SlagLiteralString str962( ").", 2 );
static SlagLiteralString str963( "Cyclic type dependency detected in type ", 40 );
static SlagLiteralString str964( "Array<", 6 );
static SlagLiteralString str965( "whoa", 4 );
static SlagLiteralString str966( "RuntimeType", 11 );
static SlagLiteralString str967( "base_type_names", 15 );
static SlagLiteralString str968( "add", 3 );
static SlagLiteralString str969( "Automanaged", 11 );
static SlagLiteralString str970( "Mapping<<String,PropertyInfo>>", 30 );
static SlagLiteralString str971( "A property named \"", 18 );
static SlagLiteralString str972( "\" already exists in type ", 25 );
static SlagLiteralString str973( "Mismatched public/private/readOnly qualifiers on abstract and actual declarations of \"", 86 );
static SlagLiteralString str974( "Mismatched types on abstract and actual declarations of \"", 57 );
static SlagLiteralString str975( "init_object()", 13 );
static SlagLiteralString str976( "ArrayReverseReader<<ParameterInfo>>", 35 );
static SlagLiteralString str977( "Auto-initializing parameters aren't allowed on native methods.", 62 );
static SlagLiteralString str978( "No such property \"", 18 );
static SlagLiteralString str979( "\" for auto-initializing parameter in type ", 42 );
static SlagLiteralString str980( "Mapping<<String,String>>", 24 );
static SlagLiteralString str981( ".Object", 7 );
static SlagLiteralString str982( "Mapping<<String,MethodGroup>>", 29 );
static SlagLiteralString str983( "Mapping<<String,MethodInfo>>", 28 );
static SlagLiteralString str984( "Inconsistent return type declarations.", 38 );
static SlagLiteralString str985( "Return type is not instanceOf original return type.", 51 );
static SlagLiteralString str986( " is already defined in type ", 28 );
static SlagLiteralString str987( "Mapping<<String,MethodInfo[]>>", 30 );
static SlagLiteralString str988( "init()", 6 );
static SlagLiteralString str989( "type_name()", 11 );
static SlagLiteralString str990( "type_name", 9 );
static SlagLiteralString str991( "to_String(", 10 );
static SlagLiteralString str992( ",$", 2 );
static SlagLiteralString str993( "to_String", 9 );
static SlagLiteralString str994( "_compound", 9 );
static SlagLiteralString str995( "ArrayReverseReader<<PropertyInfo>>", 34 );
static SlagLiteralString str996( "null of_type", 12 );
static SlagLiteralString str997( "CmdSingletonReference", 21 );
static SlagLiteralString str998( "set", 3 );
static SlagLiteralString str999( "this", 4 );
static SlagLiteralString str1000( "prior", 5 );
static SlagLiteralString str1001( "Help Type Name", 14 );
static SlagLiteralString str1002( "HasDefaultInit", 14 );
static SlagLiteralString str1003( "requisite singleton class RuntimeType", 37 );
static SlagLiteralString str1004( " : RuntimeType", 14 );
static SlagLiteralString str1005( "  METHODS", 9 );
static SlagLiteralString str1006( "    method init_object", 22 );
static SlagLiteralString str1007( "    requisite method create_instance.Object", 43 );
static SlagLiteralString str1008( "      return ", 13 );
static SlagLiteralString str1009( "()", 2 );
static SlagLiteralString str1010( "    requisite method name.String", 32 );
static SlagLiteralString str1011( "      return \"", 14 );
static SlagLiteralString str1012( "Generated Runtime Type", 22 );
static SlagLiteralString str1013( "Can't find method ", 18 );
static SlagLiteralString str1014( "HashTableBase<<String,LocalVarInfo,Object,Object>>", 50 );
static SlagLiteralString str1015( "HashTable<<String,LocalVarInfo>>", 32 );
static SlagLiteralString str1016( "Array<<HashTable<<String,LocalVarInfo>>>>", 41 );
static SlagLiteralString str1017( "ArrayList<<HashTable<<String,LocalVarInfo>>>>", 45 );
static SlagLiteralString str1018( "LocalVarTable", 13 );
static SlagLiteralString str1019( "Mapping<<Int32,Int32>>", 22 );
static SlagLiteralString str1020( "Array<<Mapping<<Int32,Int32>>>>", 31 );
static SlagLiteralString str1021( "ArrayList<<Mapping<<Int32,Int32>>>>", 35 );
static SlagLiteralString str1022( "ArrayReader<<Mapping<<Int32,Int32>>>>", 37 );
static SlagLiteralString str1023( "HashTableBin<<Int32,Int32>>", 27 );
static SlagLiteralString str1024( "Array<<HashTableBin<<Int32,Int32>>>>", 36 );
static SlagLiteralString str1025( "ArrayList<<HashTableBin<<Int32,Int32>>>>", 40 );
static SlagLiteralString str1026( "HashTableMappingReader<<Int32,Int32>>", 37 );
static SlagLiteralString str1027( "ArrayReader<<HashTableBin<<Int32,Int32>>>>", 42 );
static SlagLiteralString str1028( "GenericHashTable<<Int32,Int32>>", 31 );
static SlagLiteralString str1029( "HashTableValueReader<<Int32,Int32>>", 35 );
static SlagLiteralString str1030( "HashTableBase<<Int32,Int32,Int32,Int32>>", 40 );
static SlagLiteralString str1031( "HashTable<<Int32,Int32>>", 24 );
static SlagLiteralString str1032( "HashTableBase<<Int32,Cmd,Int32,Object>>", 39 );
static SlagLiteralString str1033( "HashTable<<Int32,Cmd>>", 22 );
static SlagLiteralString str1034( "HashSet<<Int32>>", 16 );
static SlagLiteralString str1035( "Context", 7 );
static SlagLiteralString str1036( "ArrayReader<<HashTable<<String,LocalVarInfo>>>>", 47 );
static SlagLiteralString str1037( "Mapping<<String,LocalVarInfo>>", 30 );
static SlagLiteralString str1038( "A local variable named \"", 24 );
static SlagLiteralString str1039( "\" already exists.", 17 );
static SlagLiteralString str1040( "A generic method can only be defined in a template class where all specializers are valid types.", 96 );
static SlagLiteralString str1041( "ArrayReader<<LocalVarInfo>>", 27 );
static SlagLiteralString str1042( "CmdVarAccess", 12 );
static SlagLiteralString str1043( "CmdLocalVarAccess", 17 );
static SlagLiteralString str1044( "CmdLocalVarRead", 15 );
static SlagLiteralString str1045( "CmdLocalVarRead(", 16 );
static SlagLiteralString str1046( "CmdCall", 7 );
static SlagLiteralString str1047( "CmdContextCall", 14 );
static SlagLiteralString str1048( "CmdStaticCall", 13 );
static SlagLiteralString str1049( "($[,$])", 7 );
static SlagLiteralString str1050( "CmdThisReference", 16 );
static SlagLiteralString str1051( ">>>", 3 );
static SlagLiteralString str1052( "resolve() not defined for ", 26 );
static SlagLiteralString str1053( "Syntax error - right side of member access is a new object.", 59 );
static SlagLiteralString str1054( "Syntax error - use \"value.(", 27 );
static SlagLiteralString str1055( ")\" to perform a cast.", 21 );
static SlagLiteralString str1056( "Syntax error - 'prior.method_name' expected.", 44 );
static SlagLiteralString str1057( "No base class exists for 'prior' call in type '", 47 );
static SlagLiteralString str1058( "Call to ", 8 );
static SlagLiteralString str1059( " does not return a value.", 25 );
static SlagLiteralString str1060( "Expression must result in a value.", 34 );
static SlagLiteralString str1061( "Aspect types cannot be instantiated as objects.", 47 );
static SlagLiteralString str1062( "create_from", 11 );
static SlagLiteralString str1063( "Readable<<", 10 );
static SlagLiteralString str1064( "Reader<<", 8 );
static SlagLiteralString str1065( "create_reader", 13 );
static SlagLiteralString str1066( "Read", 4 );
static SlagLiteralString str1067( "Readable", 8 );
static SlagLiteralString str1068( "Reader", 6 );
static SlagLiteralString str1069( "Missing default parameter value.", 32 );
static SlagLiteralString str1070( "Expression must result in a value. 2", 36 );
static SlagLiteralString str1071( "Cast required to convert to or from a logical type.", 51 );
static SlagLiteralString str1072( "CmdNarrowingCast", 16 );
static SlagLiteralString str1073( "CmdWideningCast", 15 );
static SlagLiteralString str1074( "Cast error - types are unrelated.", 33 );
static SlagLiteralString str1075( "to_", 3 );
static SlagLiteralString str1076( "get", 3 );
static SlagLiteralString str1077( "CmdLiteralReal32", 16 );
static SlagLiteralString str1078( "an Int32 or Int64", 17 );
static SlagLiteralString str1079( "Expression must result in ", 26 );
static SlagLiteralString str1080( " (found ", 8 );
static SlagLiteralString str1081( "nil)", 4 );
static SlagLiteralString str1082( "an Int32", 8 );
static SlagLiteralString str1083( "CmdBitwiseMovement<<CmdLeftShifted,left_shifted,cmd_left_shifted>>", 66 );
static SlagLiteralString str1084( "CmdLeftShifted", 14 );
static SlagLiteralString str1085( "Illegal integer division by zero.", 33 );
static SlagLiteralString str1086( "CmdLiteralByte", 14 );
static SlagLiteralString str1087( "CmdPrimitiveCast", 16 );
static SlagLiteralString str1088( "CmdCastToInt64", 14 );
static SlagLiteralString str1089( "CmdCastToInt32", 14 );
static SlagLiteralString str1090( "CmdCastToChar", 13 );
static SlagLiteralString str1091( "CmdCastToByte", 13 );
static SlagLiteralString str1092( "CmdCastToLogical", 16 );
static SlagLiteralString str1093( "CmdCastToReal64", 15 );
static SlagLiteralString str1094( "CmdCastToReal32", 15 );
static SlagLiteralString str1095( "Unknown cast-to type!", 21 );
static SlagLiteralString str1096( "Cannot cast a primitive to a compound type.", 43 );
static SlagLiteralString str1097( "left_shifted", 12 );
static SlagLiteralString str1098( "right_shifted", 13 );
static SlagLiteralString str1099( "CmdBitwiseMovement<<CmdRightShifted,right_shifted,cmd_right_shifted>>", 69 );
static SlagLiteralString str1100( "CmdRightShifted", 15 );
static SlagLiteralString str1101( "right_xshifted", 14 );
static SlagLiteralString str1102( "CmdBitwiseMovement<<CmdRightXShifted,right_xshifted,cmd_right_xshifted>>", 72 );
static SlagLiteralString str1103( "CmdRightXShifted", 16 );
static SlagLiteralString str1104( "Bitwise operations are not methods and cannot be called with an object context.", 79 );
static SlagLiteralString str1105( "CmdDynamicCall(#", 16 );
static SlagLiteralString str1106( "CmdDynamicCall", 14 );
static SlagLiteralString str1107( "' is a singleton call and should not have a context expression.", 63 );
static SlagLiteralString str1108( "CmdArrayGet(", 12 );
static SlagLiteralString str1109( "instanceOf ", 11 );
static SlagLiteralString str1110( "CmdArrayGet", 11 );
static SlagLiteralString str1111( "CmdArraySet(", 12 );
static SlagLiteralString str1112( "CmdArraySet", 11 );
static SlagLiteralString str1113( "No such class '", 15 );
static SlagLiteralString str1114( "initializer method", 18 );
static SlagLiteralString str1115( "property or method", 18 );
static SlagLiteralString str1116( "class or method", 15 );
static SlagLiteralString str1117( "class, method, or property", 26 );
static SlagLiteralString str1118( "No such ", 8 );
static SlagLiteralString str1119( " '", 2 );
static SlagLiteralString str1120( "' in type ", 10 );
static SlagLiteralString str1121( "print", 5 );
static SlagLiteralString str1122( "No call exactly matches ", 24 );
static SlagLiteralString str1123( " in type ", 9 );
static SlagLiteralString str1124( ".\012\012Candidates:\012", 15 );
static SlagLiteralString str1125( "Ambiguous call ", 15 );
static SlagLiteralString str1126( " could be to one of several methods:\012", 37 );
static SlagLiteralString str1127( "Context must result in a value.", 31 );
static SlagLiteralString str1128( "Properties may not be directly accessed using an aspect reference.", 66 );
static SlagLiteralString str1129( "CmdMemberVarAccess", 18 );
static SlagLiteralString str1130( "CmdMemberVarRead", 16 );
static SlagLiteralString str1131( "CmdCompoundPropertyRead", 23 );
static SlagLiteralString str1132( "CmdCompoundPropertyRead(", 24 );
static SlagLiteralString str1133( "CmdPropertyRead(", 16 );
static SlagLiteralString str1134( "CmdPropertyRead", 15 );
static SlagLiteralString str1135( "Singleton calls cannot have a context expression.", 49 );
static SlagLiteralString str1136( "an object reference", 19 );
static SlagLiteralString str1137( "Call context does not result in an expression.", 46 );
static SlagLiteralString str1138( "Method identifier expected as argument.", 39 );
static SlagLiteralString str1139( "No such method \"", 16 );
static SlagLiteralString str1140( "\" in class ", 11 );
static SlagLiteralString str1141( "Ambiguous reference to method \"", 31 );
static SlagLiteralString str1142( "\" (multiple methods match).  Add a signature, e.g. \"Math.delegate(min)\" becomes \"Math.delegate(min(Int32,Int32))\".", 114 );
static SlagLiteralString str1143( "(parsing delegate type)", 23 );
static SlagLiteralString str1144( "A cast requires exactly one argument.", 37 );
static SlagLiteralString str1145( "List<<", 6 );
static SlagLiteralString str1146( "Array", 5 );
static SlagLiteralString str1147( "init(Int32)", 11 );
static SlagLiteralString str1148( "Arrays can only be created via calls to the standard init(Int32) initializer.", 77 );
static SlagLiteralString str1149( "Arrays cannot have object properties.", 37 );
static SlagLiteralString str1150( "CmdArrayCreate(", 15 );
static SlagLiteralString str1151( "CmdArrayCreate", 14 );
static SlagLiteralString str1152( "CmdNewObject", 12 );
static SlagLiteralString str1153( ",\012  ", 4 );
static SlagLiteralString str1154( "),\012  ", 5 );
static SlagLiteralString str1155( "CmdNewCompound", 14 );
static SlagLiteralString str1156( "Compound initializer methods must return the compound type.", 59 );
static SlagLiteralString str1157( "CmdUnresolvedNewObject", 22 );
static SlagLiteralString str1158( "Syntax error - illegal parentheses on 'this'.", 45 );
static SlagLiteralString str1159( "Invalid operation between types ", 32 );
static SlagLiteralString str1160( " - both operands must be logical or both must be numerical.", 59 );
static SlagLiteralString str1161( "an Int32, Int64, or Logical value", 33 );
static SlagLiteralString str1162( "a Logical value", 15 );
static SlagLiteralString str1163( "Could not infer element type of implictly-typed list - use explicit syntax 'TypeName{...}' instead.", 99 );
static SlagLiteralString str1164( "Range", 5 );
static SlagLiteralString str1165( "Element of type ", 16 );
static SlagLiteralString str1166( " is incompatible with list type ", 32 );
static SlagLiteralString str1167( "CompositeData", 13 );
static SlagLiteralString str1168( "StringTriplet(", 14 );
static SlagLiteralString str1169( "StringTriplet", 13 );
static SlagLiteralString str1170( "Too many decimal points in format marker.", 41 );
static SlagLiteralString str1171( "Syntax error in format marker.", 30 );
static SlagLiteralString str1172( "Missing ')' on format marker.", 29 );
static SlagLiteralString str1173( "Format string contains more insertion markers than arguments.", 61 );
static SlagLiteralString str1174( "Value expected after decimal point in format string.", 52 );
static SlagLiteralString str1175( "format_string", 13 );
static SlagLiteralString str1176( "Format string contains more arguments than insertion markers.", 61 );
static SlagLiteralString str1177( "Left-hand side of operator should result in a value.", 52 );
static SlagLiteralString str1178( "op!=", 4 );
static SlagLiteralString str1179( "an Int32, Int64, Real32, or Real64", 34 );
static SlagLiteralString str1180( "Mapping<<Int32,Cmd>>", 20 );
static SlagLiteralString str1181( "which_", 6 );
static SlagLiteralString str1182( "CmdLocalVarWrite(", 17 );
static SlagLiteralString str1183( "CmdStepVar<<CmdLocalVarIncrement,MethodVarInfo,cmd_local_var_increment>>", 72 );
static SlagLiteralString str1184( "CmdLocalVarIncrement", 20 );
static SlagLiteralString str1185( "CmdStepVar<<CmdLocalVarDecrement,MethodVarInfo,cmd_local_var_decrement>>", 72 );
static SlagLiteralString str1186( "CmdLocalVarDecrement", 20 );
static SlagLiteralString str1187( "CmdModifyAndAssign<<CmdLocalVarAddAndAssign,MethodVarInfo,cmd_local_var_add_and_assign>>", 88 );
static SlagLiteralString str1188( "CmdLocalVarAddAndAssign", 23 );
static SlagLiteralString str1189( "CmdModifyAndAssign<<CmdLocalVarSubAndAssign,MethodVarInfo,cmd_local_var_sub_and_assign>>", 88 );
static SlagLiteralString str1190( "CmdLocalVarSubAndAssign", 23 );
static SlagLiteralString str1191( "CmdModifyAndAssign<<CmdLocalVarMulAndAssign,MethodVarInfo,cmd_local_var_mul_and_assign>>", 88 );
static SlagLiteralString str1192( "CmdLocalVarMulAndAssign", 23 );
static SlagLiteralString str1193( "CmdModifyAndAssign<<CmdLocalVarDivAndAssign,MethodVarInfo,cmd_local_var_div_and_assign>>", 88 );
static SlagLiteralString str1194( "CmdLocalVarDivAndAssign", 23 );
static SlagLiteralString str1195( "CmdModifyAndAssign<<CmdLocalVarModAndAssign,MethodVarInfo,cmd_local_var_mod_and_assign>>", 88 );
static SlagLiteralString str1196( "CmdLocalVarModAndAssign", 23 );
static SlagLiteralString str1197( "CmdLocalVarWrite", 16 );
static SlagLiteralString str1198( "Only simple 'upTo' ranges (low..high) are allowed in cases.", 59 );
static SlagLiteralString str1199( "Internal Error", 14 );
static SlagLiteralString str1200( "Catch type must be instanceOf Exception.", 40 );
static SlagLiteralString str1201( "Exceptions of type \"", 20 );
static SlagLiteralString str1202( "\" are already caught by previous catch (", 40 );
static SlagLiteralString str1203( "CmdSingletonWrite", 17 );
static SlagLiteralString str1204( "[Internal] Unhandled lhs in Assign: '", 37 );
static SlagLiteralString str1205( "Compound properties may not be written to.  Create a new compound with the modified properties instead.", 103 );
static SlagLiteralString str1206( "CmdPropertyWrite(", 17 );
static SlagLiteralString str1207( "CmdStepVar<<CmdThisPropertyIncrement,PropertyInfo,cmd_this_property_increment>>", 79 );
static SlagLiteralString str1208( "CmdThisPropertyIncrement", 24 );
static SlagLiteralString str1209( "CmdStepVar<<CmdThisPropertyDecrement,PropertyInfo,cmd_this_property_decrement>>", 79 );
static SlagLiteralString str1210( "CmdThisPropertyDecrement", 24 );
static SlagLiteralString str1211( "CmdModifyAndAssign<<CmdThisPropertyAddAndAssign,PropertyInfo,cmd_this_property_add_and_assign>>", 95 );
static SlagLiteralString str1212( "CmdThisPropertyAddAndAssign", 27 );
static SlagLiteralString str1213( "CmdModifyAndAssign<<CmdThisPropertySubAndAssign,PropertyInfo,cmd_this_property_sub_and_assign>>", 95 );
static SlagLiteralString str1214( "CmdThisPropertySubAndAssign", 27 );
static SlagLiteralString str1215( "CmdModifyAndAssign<<CmdThisPropertyMulAndAssign,PropertyInfo,cmd_this_property_mul_and_assign>>", 95 );
static SlagLiteralString str1216( "CmdThisPropertyMulAndAssign", 27 );
static SlagLiteralString str1217( "CmdModifyAndAssign<<CmdThisPropertyDivAndAssign,PropertyInfo,cmd_this_property_div_and_assign>>", 95 );
static SlagLiteralString str1218( "CmdThisPropertyDivAndAssign", 27 );
static SlagLiteralString str1219( "CmdModifyAndAssign<<CmdThisPropertyModAndAssign,PropertyInfo,cmd_this_property_mod_and_assign>>", 95 );
static SlagLiteralString str1220( "CmdThisPropertyModAndAssign", 27 );
static SlagLiteralString str1221( "CmdPropertyWrite", 16 );
static SlagLiteralString str1222( "No such property '", 18 );
static SlagLiteralString str1223( "' in type '", 11 );
static SlagLiteralString str1224( "No such property or local variable '", 36 );
static SlagLiteralString str1225( "Left-hand side of assignment must be a variable or the name of a property-set method.", 85 );
static SlagLiteralString str1226( "Cannot determine variable type - locals of type 'var' must include an initial value assignment.", 95 );
static SlagLiteralString str1227( "The 'removeCurrent' command in this loop requires the loop control value to be a list type.", 91 );
static SlagLiteralString str1228( ".last", 5 );
static SlagLiteralString str1229( "[Internal] Unhandled range type ", 32 );
static SlagLiteralString str1230( "The 'removeCurrent' command contained in this loop requires the loop control value to be a list type.", 101 );
static SlagLiteralString str1231( ".list", 5 );
static SlagLiteralString str1232( ".count", 6 );
static SlagLiteralString str1233( "count", 5 );
static SlagLiteralString str1234( ".write_pos", 10 );
static SlagLiteralString str1235( ".read_pos", 9 );
static SlagLiteralString str1236( ".kept", 5 );
static SlagLiteralString str1237( "discard", 7 );
static SlagLiteralString str1238( ".err", 4 );
static SlagLiteralString str1239( "CmdForEachInWithRemoveCurrent", 29 );
static SlagLiteralString str1240( "Reader or Readable type expected.", 33 );
static SlagLiteralString str1241( ".reader", 7 );
static SlagLiteralString str1242( "read", 4 );
static SlagLiteralString str1243( "has_another", 11 );
static SlagLiteralString str1244( "Unhandled type in make_zero_value: ", 35 );
static SlagLiteralString str1245( "Primitive initialization requires a single value.", 49 );
static SlagLiteralString str1246( "Missing return value.", 21 );
static SlagLiteralString str1247( "Current method does not return a value.", 39 );
static SlagLiteralString str1248( "Return value must be instanceOf ", 32 );
static SlagLiteralString str1249( "CmdArrayDuplicate(", 18 );
static SlagLiteralString str1250( "CmdArrayDuplicate", 17 );
static SlagLiteralString str1251( "create_duplicate", 16 );
static SlagLiteralString str1252( "sign", 4 );
static SlagLiteralString str1253( "a standard primitive", 20 );
static SlagLiteralString str1254( "CmdCmpIsNull", 12 );
static SlagLiteralString str1255( "CmdCmpIsNotNull", 15 );
static SlagLiteralString str1256( "'as' requires that both types be references or both types be primitives.", 72 );
static SlagLiteralString str1257( "RangeLT", 7 );
static SlagLiteralString str1258( "RangeGT", 7 );
static SlagLiteralString str1259( "RangeGE", 7 );
static SlagLiteralString str1260( "CoerceReader<<Cmd>>", 19 );
static SlagLiteralString str1261( "init_singleton()", 16 );
static SlagLiteralString str1262( "You must define \"method init:\" in main class ", 45 );
static SlagLiteralString str1263( " as a program starting point.\"", 30 );
static SlagLiteralString str1264( "CoerceReader<<MethodGroup>>", 27 );
static SlagLiteralString str1265( "finalize_structure_info() not defined for ", 42 );
static SlagLiteralString str1266( "finalize_calls() not defined for ", 33 );
static SlagLiteralString str1267( " is not a singleton - create a new object with ", 47 );
static SlagLiteralString str1268( "() or create a list with ", 25 );
static SlagLiteralString str1269( "[]().", 5 );
static SlagLiteralString str1270( "inline fail", 11 );
static SlagLiteralString str1271( "to_inline() not defined for ", 28 );
static SlagLiteralString str1272( "Can't create a new object because class ", 40 );
static SlagLiteralString str1273( " contains the following abstract methods:\012", 42 );
static SlagLiteralString str1274( "group_dynamic_methods() not defined for ", 40 );
static SlagLiteralString str1275( "ListOf<<MethodInfo>>", 20 );
static SlagLiteralString str1276( "  Writing doc.txt", 17 );
static SlagLiteralString str1277( "doc.txt", 7 );
static SlagLiteralString str1278( "== ", 3 );
static SlagLiteralString str1279( "Singleton ", 10 );
static SlagLiteralString str1280( "Class ", 6 );
static SlagLiteralString str1281( " ==", 3 );
static SlagLiteralString str1282( "== Aspect ", 10 );
static SlagLiteralString str1283( "== Compound ", 12 );
static SlagLiteralString str1284( "<table class='slagdoc'>", 23 );
static SlagLiteralString str1285( "<tr><th>Properties</th></tr>", 28 );
static SlagLiteralString str1286( "<tr><td><dl>", 12 );
static SlagLiteralString str1287( "opCMP", 5 );
static SlagLiteralString str1288( "opEQ", 4 );
static SlagLiteralString str1289( "_and_", 5 );
static SlagLiteralString str1290( "ADD", 3 );
static SlagLiteralString str1291( "SUB", 3 );
static SlagLiteralString str1292( "MUL", 3 );
static SlagLiteralString str1293( "DIV", 3 );
static SlagLiteralString str1294( "MOD", 3 );
static SlagLiteralString str1295( "EXP", 3 );
static SlagLiteralString str1296( "AND", 3 );
static SlagLiteralString str1297( "OR", 2 );
static SlagLiteralString str1298( "XOR", 3 );
static SlagLiteralString str1299( "NOT", 3 );
static SlagLiteralString str1300( "property_", 9 );
static SlagLiteralString str1301( "ArrayList<<", 11 );
static SlagLiteralString str1302( "[[SlagDoc:Primitives#", 21 );
static SlagLiteralString str1303( "]]", 2 );
static SlagLiteralString str1304( "[[SlagDoc:", 10 );
static SlagLiteralString str1305( "<dt><span id='index_", 20 );
static SlagLiteralString str1306( "'>[[#", 5 );
static SlagLiteralString str1307( "]]</span> : ", 12 );
static SlagLiteralString str1308( "<dt>", 4 );
static SlagLiteralString str1309( " : ", 3 );
static SlagLiteralString str1310( "</dl></td></tr>", 15 );
static SlagLiteralString str1311( "CompareFn<<MethodInfo,a<b>>", 27 );
static SlagLiteralString str1312( "HeapSort<<MethodInfo>>", 22 );
static SlagLiteralString str1313( "SpecializedComparator_2167", 26 );
static SlagLiteralString str1314( "other", 5 );
static SlagLiteralString str1315( "not a String", 12 );
static SlagLiteralString str1316( "<tr><th>Methods</th></tr>", 25 );
static SlagLiteralString str1317( "<span id='index_", 16 );
static SlagLiteralString str1318( "'></span>", 9 );
static SlagLiteralString str1319( "<span id='", 10 );
static SlagLiteralString str1320( "[[#", 3 );
static SlagLiteralString str1321( "[[#index_", 9 );
static SlagLiteralString str1322( "&#91;", 5 );
static SlagLiteralString str1323( "&#93;", 5 );
static SlagLiteralString str1324( " (inherited)", 12 );
static SlagLiteralString str1325( "<tr><th>Base Types</th></tr>", 28 );
static SlagLiteralString str1326( "<tr><td>", 8 );
static SlagLiteralString str1327( "</td></tr>", 10 );
static SlagLiteralString str1328( "<tr><th>Implicit Singletons</th></tr>", 37 );
static SlagLiteralString str1329( "</table>", 8 );
static SlagLiteralString str1330( "=== Overview ===", 16 );
static SlagLiteralString str1331( ". ", 2 );
static SlagLiteralString str1332( "? ", 2 );
static SlagLiteralString str1333( "! ", 2 );
static SlagLiteralString str1334( " is an automatically generated singleton representing the class\012context (aka ''static'' variables and methods) of ", 114 );
static SlagLiteralString str1335( " [[SlagDoc:", 11 );
static SlagLiteralString str1336( "]].\012\012\012==== See Also ====\012* [[SlagDoc:", 37 );
static SlagLiteralString str1337( "]]\012", 3 );
static SlagLiteralString str1338( "=== Properties ===", 18 );
static SlagLiteralString str1339( "<th><span id='", 14 );
static SlagLiteralString str1340( "'>[[#index_", 11 );
static SlagLiteralString str1341( "]] : ", 5 );
static SlagLiteralString str1342( "</span></th>", 12 );
static SlagLiteralString str1343( "</td></tr></table>", 18 );
static SlagLiteralString str1344( "=== Methods ===", 15 );
static SlagLiteralString str1345( "<th>", 4 );
static SlagLiteralString str1346( "</th>", 5 );
static SlagLiteralString str1347( "''The content on this SlagDoc page was automatically generated. Any changes maybe overwritten in the future - post corrections and updates to the Plasmacore forums or email Abe.Pralle at Plasmaworks.com.''", 205 );
static SlagLiteralString str1348( "SpecializedComparator_2189", 26 );
static SlagLiteralString str1349( "<br> ", 5 );
static SlagLiteralString str1350( "<br/> ", 6 );
static SlagLiteralString str1351( "<br>", 4 );
static SlagLiteralString str1352( "<br/>", 5 );
static SlagLiteralString str1353( "Aspect ", 7 );
static SlagLiteralString str1354( "Compound ", 9 );
static SlagLiteralString str1355( "OVERVIEW", 8 );
static SlagLiteralString str1356( " is an automatically generated singleton representing the class context (aka 'static' variables and methods) of ", 112 );
static SlagLiteralString str1357( ".\012", 2 );
static SlagLiteralString str1358( "Inspect: no such method \"", 25 );
static SlagLiteralString str1359( "Inspect: no such type \"", 23 );
static SlagLiteralString str1360( "  SINGLETONS", 12 );
static SlagLiteralString str1361( "    ", 4 );
static SlagLiteralString str1362( "  PROPERTIES", 12 );
static SlagLiteralString str1363( "    method ", 11 );
static SlagLiteralString str1364( "-native: No such method ", 24 );
static SlagLiteralString str1365( "-native: No such type \"", 23 );
static SlagLiteralString str1366( "  Writing ", 10 );
static SlagLiteralString str1367( "ParamInfo", 9 );
static SlagLiteralString str1368( "Array<<ParamInfo>>", 18 );
static SlagLiteralString str1369( "ArrayList<<ParamInfo>>", 22 );
static SlagLiteralString str1370( "ETCWriter", 9 );
static SlagLiteralString str1371( "BitWriter", 9 );
static SlagLiteralString str1372( "ETC", 3 );
static SlagLiteralString str1373( "FILENAMES", 9 );
static SlagLiteralString str1374( "IDENTIFIERS", 11 );
static SlagLiteralString str1375( "TYPEINFO", 8 );
static SlagLiteralString str1376( "PARAMETERINFO", 13 );
static SlagLiteralString str1377( "ArrayReader<<ParamInfo>>", 24 );
static SlagLiteralString str1378( "METHODINFO", 10 );
static SlagLiteralString str1379( "TYPEDEFS", 8 );
static SlagLiteralString str1380( "STRINGTABLE", 11 );
static SlagLiteralString str1381( "METHODDEFS", 10 );
static SlagLiteralString str1382( "[Internal] ", 11 );
static SlagLiteralString str1383( " is abstract but has a body.", 28 );
static SlagLiteralString str1384( "write_etc() undefined for type ", 31 );
static SlagLiteralString str1385( "cmd_set_filename_and_line", 25 );
static SlagLiteralString str1386( "Array<<CMD>>", 12 );
static SlagLiteralString str1387( "ArrayList<<CMD>>", 16 );
static SlagLiteralString str1388( "HashTableBase<<String,CMD,Object,Object>>", 41 );
static SlagLiteralString str1389( "HashTable<<String,CMD>>", 23 );
static SlagLiteralString str1390( "cmd_set_line", 12 );
static SlagLiteralString str1391( "cmd_inc_line", 12 );
static SlagLiteralString str1392( "cmd_structure_id", 16 );
static SlagLiteralString str1393( "cmd_return_value", 16 );
static SlagLiteralString str1394( "cmd_return_nil", 14 );
static SlagLiteralString str1395( "cmd_block", 9 );
static SlagLiteralString str1396( "cmd_trycatch", 12 );
static SlagLiteralString str1397( "cmd_throw", 9 );
static SlagLiteralString str1398( "cmd_if", 6 );
static SlagLiteralString str1399( "cmd_contingent", 14 );
static SlagLiteralString str1400( "cmd_necessary", 13 );
static SlagLiteralString str1401( "cmd_sufficient", 14 );
static SlagLiteralString str1402( "cmd_while", 9 );
static SlagLiteralString str1403( "cmd_loop", 8 );
static SlagLiteralString str1404( "cmd_escape", 10 );
static SlagLiteralString str1405( "cmd_next_iteration", 18 );
static SlagLiteralString str1406( "cmd_breakpoint", 14 );
static SlagLiteralString str1407( "cmd_literal_string", 18 );
static SlagLiteralString str1408( "cmd_literal_int64", 17 );
static SlagLiteralString str1409( "cmd_literal_int32", 17 );
static SlagLiteralString str1410( "cmd_literal_char", 16 );
static SlagLiteralString str1411( "cmd_literal_byte", 16 );
static SlagLiteralString str1412( "cmd_literal_real64", 18 );
static SlagLiteralString str1413( "cmd_literal_real32", 18 );
static SlagLiteralString str1414( "cmd_literal_logical_true", 24 );
static SlagLiteralString str1415( "cmd_literal_logical_false", 25 );
static SlagLiteralString str1416( "cmd_literal_logical_void", 24 );
static SlagLiteralString str1417( "cmd_literal_null", 16 );
static SlagLiteralString str1418( "cmd_this_reference", 18 );
static SlagLiteralString str1419( "cmd_singleton_reference", 23 );
static SlagLiteralString str1420( "cmd_singleton_write", 19 );
static SlagLiteralString str1421( "cmd_property_read", 17 );
static SlagLiteralString str1422( "cmd_compound_property_read", 26 );
static SlagLiteralString str1423( "cmd_local_var_read", 18 );
static SlagLiteralString str1424( "cmd_property_write", 18 );
static SlagLiteralString str1425( "cmd_local_var_write", 19 );
static SlagLiteralString str1426( "cmd_static_call", 15 );
static SlagLiteralString str1427( "cmd_dynamic_call", 16 );
static SlagLiteralString str1428( "cmd_new_object", 14 );
static SlagLiteralString str1429( "cmd_new_compound", 16 );
static SlagLiteralString str1430( "cmd_array_create", 16 );
static SlagLiteralString str1431( "cmd_array_get", 13 );
static SlagLiteralString str1432( "cmd_array_set", 13 );
static SlagLiteralString str1433( "cmd_narrowing_cast", 18 );
static SlagLiteralString str1434( "cmd_widening_cast", 17 );
static SlagLiteralString str1435( "cmd_cast_to_int64", 17 );
static SlagLiteralString str1436( "cmd_cast_to_int32", 17 );
static SlagLiteralString str1437( "cmd_cast_to_char", 16 );
static SlagLiteralString str1438( "cmd_cast_to_byte", 16 );
static SlagLiteralString str1439( "cmd_cast_to_real64", 18 );
static SlagLiteralString str1440( "cmd_cast_to_real32", 18 );
static SlagLiteralString str1441( "cmd_cast_to_logical", 19 );
static SlagLiteralString str1442( "cmd_as", 6 );
static SlagLiteralString str1443( "cmd_coerce_as", 13 );
static SlagLiteralString str1444( "cmd_cmp_instance_of", 19 );
static SlagLiteralString str1445( "cmd_cmp_is", 10 );
static SlagLiteralString str1446( "cmd_cmp_is_not", 14 );
static SlagLiteralString str1447( "cmd_cmp_is_null", 15 );
static SlagLiteralString str1448( "cmd_cmp_is_not_null", 19 );
static SlagLiteralString str1449( "cmd_cmp_eq", 10 );
static SlagLiteralString str1450( "cmd_cmp_ne", 10 );
static SlagLiteralString str1451( "cmd_cmp_le", 10 );
static SlagLiteralString str1452( "cmd_cmp_lt", 10 );
static SlagLiteralString str1453( "cmd_cmp_gt", 10 );
static SlagLiteralString str1454( "cmd_cmp_ge", 10 );
static SlagLiteralString str1455( "cmd_not", 7 );
static SlagLiteralString str1456( "cmd_negate", 10 );
static SlagLiteralString str1457( "cmd_add", 7 );
static SlagLiteralString str1458( "cmd_sub", 7 );
static SlagLiteralString str1459( "cmd_mul", 7 );
static SlagLiteralString str1460( "cmd_div", 7 );
static SlagLiteralString str1461( "cmd_mod", 7 );
static SlagLiteralString str1462( "cmd_exp", 7 );
static SlagLiteralString str1463( "cmd_and", 7 );
static SlagLiteralString str1464( "cmd_or", 6 );
static SlagLiteralString str1465( "cmd_xor", 7 );
static SlagLiteralString str1466( "cmd_lazy_and", 12 );
static SlagLiteralString str1467( "cmd_lazy_or", 11 );
static SlagLiteralString str1468( "cmd_left_shifted", 16 );
static SlagLiteralString str1469( "cmd_right_shifted", 17 );
static SlagLiteralString str1470( "cmd_right_xshifted", 18 );
static SlagLiteralString str1471( "cmd_this_property_add_and_assign", 32 );
static SlagLiteralString str1472( "cmd_this_property_sub_and_assign", 32 );
static SlagLiteralString str1473( "cmd_this_property_mul_and_assign", 32 );
static SlagLiteralString str1474( "cmd_this_property_div_and_assign", 32 );
static SlagLiteralString str1475( "cmd_this_property_mod_and_assign", 32 );
static SlagLiteralString str1476( "cmd_local_var_add_and_assign", 28 );
static SlagLiteralString str1477( "cmd_local_var_sub_and_assign", 28 );
static SlagLiteralString str1478( "cmd_local_var_mul_and_assign", 28 );
static SlagLiteralString str1479( "cmd_local_var_div_and_assign", 28 );
static SlagLiteralString str1480( "cmd_local_var_mod_and_assign", 28 );
static SlagLiteralString str1481( "cmd_this_property_increment", 27 );
static SlagLiteralString str1482( "cmd_this_property_decrement", 27 );
static SlagLiteralString str1483( "cmd_local_var_increment", 23 );
static SlagLiteralString str1484( "cmd_local_var_decrement", 23 );
static SlagLiteralString str1485( "cmd_array_duplicate", 19 );
static SlagLiteralString str1486( "Enum<<CMD>>", 11 );
static SlagLiteralString str1487( "CMD", 3 );
static SlagLiteralString str1488( " is unvisited (called from ", 27 );
static SlagLiteralString str1489( "[Internal] Bad dynamic call index for ", 38 );
static SlagLiteralString str1490( "ArrayReverseReader<<Cmd>>", 25 );
static SlagLiteralString str1491( ".cpp", 4 );
static SlagLiteralString str1492( "_xc", 3 );
static SlagLiteralString str1493( "Class", 5 );
static SlagLiteralString str1494( "Compound", 8 );
static SlagLiteralString str1495( "SlagReal64", 10 );
static SlagLiteralString str1496( "SlagReal32", 10 );
static SlagLiteralString str1497( "SlagInt64", 9 );
static SlagLiteralString str1498( "SlagInt32", 9 );
static SlagLiteralString str1499( "SlagChar", 8 );
static SlagLiteralString str1500( "SlagByte", 8 );
static SlagLiteralString str1501( "SlagLogical", 11 );
static SlagLiteralString str1502( ".h", 2 );
static SlagLiteralString str1503( "#ifndef ", 8 );
static SlagLiteralString str1504( "_H", 2 );
static SlagLiteralString str1505( "#define ", 8 );
static SlagLiteralString str1506( "h", 1 );
static SlagLiteralString str1507( "//", 2 );
static SlagLiteralString str1508( "//  ", 4 );
static SlagLiteralString str1509( "//  Generated by slagc ", 24 );
static SlagLiteralString str1510( "#include \"slag.h\"", 17 );
static SlagLiteralString str1511( "struct ", 7 );
static SlagLiteralString str1512( "SlagReal64 ", 11 );
static SlagLiteralString str1513( "SlagInt64  ", 11 );
static SlagLiteralString str1514( "    : ", 6 );
static SlagLiteralString str1515( "NULL", 4 );
static SlagLiteralString str1516( " { }", 4 );
static SlagLiteralString str1517( "( ", 2 );
static SlagLiteralString str1518( "SlagInt64 ", 10 );
static SlagLiteralString str1519( "void operator=( ", 16 );
static SlagLiteralString str1520( " other )", 8 );
static SlagLiteralString str1521( "  memcpy( this, &other, sizeof(", 31 );
static SlagLiteralString str1522( ") );", 4 );
static SlagLiteralString str1523( "SlagLogical equals( ", 20 );
static SlagLiteralString str1524( "  return memcmp(this,&other,sizeof(", 35 );
static SlagLiteralString str1525( ")) == 0;", 8 );
static SlagLiteralString str1526( "};", 2 );
static SlagLiteralString str1527( " : SlagObject", 13 );
static SlagLiteralString str1528( "SlagObject* ", 12 );
static SlagLiteralString str1529( "void ", 5 );
static SlagLiteralString str1530( "();", 3 );
static SlagLiteralString str1531( "static ", 7 );
static SlagLiteralString str1532( "SlagObject* context", 19 );
static SlagLiteralString str1533( ", SlagObject*", 13 );
static SlagLiteralString str1534( "local_", 6 );
static SlagLiteralString str1535( " );", 3 );
static SlagLiteralString str1536( "#endif // ", 10 );
static SlagLiteralString str1537( "#include \"", 10 );
static SlagLiteralString str1538( ".h\"", 3 );
static SlagLiteralString str1539( "const char* sxc_identifiers[] =", 31 );
static SlagLiteralString str1540( "\\\"", 2 );
static SlagLiteralString str1541( "\\\\", 2 );
static SlagLiteralString str1542( "\\n", 2 );
static SlagLiteralString str1543( "\\", 1 );
static SlagLiteralString str1544( "SlagTypeInfo*   sxc_types[", 26 );
static SlagLiteralString str1545( "] = {NULL};", 11 );
static SlagLiteralString str1546( "int             sxc_types_count = ", 34 );
static SlagLiteralString str1547( "SlagObject*     sxc_singletons[", 31 );
static SlagLiteralString str1548( "int             sxc_singletons_count = ", 39 );
static SlagLiteralString str1549( "SlagMethodInfo  sxc_methods[", 28 );
static SlagLiteralString str1550( "];", 2 );
static SlagLiteralString str1551( "SlagTypeInfo type_", 18 );
static SlagLiteralString str1552( ",sizeof(", 8 );
static SlagLiteralString str1553( "),", 2 );
static SlagLiteralString str1554( ");", 2 );
static SlagLiteralString str1555( "int sxc_property_info[] =", 25 );
static SlagLiteralString str1556( "static SlagLiteralString str", 28 );
static SlagLiteralString str1557( "( \"", 3 );
static SlagLiteralString str1558( "\", ", 3 );
static SlagLiteralString str1559( "ArrayReader<<MethodGroup>>", 26 );
static SlagLiteralString str1560( "Fn__", 4 );
static SlagLiteralString str1561( "typedef ", 8 );
static SlagLiteralString str1562( "SlagObject*", 11 );
static SlagLiteralString str1563( "void", 4 );
static SlagLiteralString str1564( " (*", 3 );
static SlagLiteralString str1565( ")(SlagObject*", 13 );
static SlagLiteralString str1566( " Call", 5 );
static SlagLiteralString str1567( "( int dynamic_index, SlagObject* context", 40 );
static SlagLiteralString str1568( "SlagObject* param", 17 );
static SlagLiteralString str1569( " param", 6 );
static SlagLiteralString str1570( " fn = (", 7 );
static SlagLiteralString str1571( ") context->type->dispatch_table[dynamic_index];", 47 );
static SlagLiteralString str1572( "fn( context", 11 );
static SlagLiteralString str1573( ", param", 7 );
static SlagLiteralString str1574( "context", 7 );
static SlagLiteralString str1575( "Global::time_ms().Int64", 23 );
static SlagLiteralString str1576( "slag_get_time_ms()", 18 );
static SlagLiteralString str1577( "Math::abs(Int64).Int64", 22 );
static SlagLiteralString str1578( "abs(", 4 );
static SlagLiteralString str1579( "Math::abs(Int32).Int32", 22 );
static SlagLiteralString str1580( "Math::abs(Real64).Real64", 24 );
static SlagLiteralString str1581( "sxc_abs(", 8 );
static SlagLiteralString str1582( "Math::floor(Real64).Real64", 26 );
static SlagLiteralString str1583( "floor(", 6 );
static SlagLiteralString str1584( "Math::sqrt(Real64).Real64", 25 );
static SlagLiteralString str1585( "sqrt(", 5 );
static SlagLiteralString str1586( "Math::sin(Radians).Real64", 25 );
static SlagLiteralString str1587( "sin((", 5 );
static SlagLiteralString str1588( ").property_value)", 17 );
static SlagLiteralString str1589( "Math::cos(Radians).Real64", 25 );
static SlagLiteralString str1590( "cos((", 5 );
static SlagLiteralString str1591( "Math::tan(Radians).Real64", 25 );
static SlagLiteralString str1592( "tan((", 5 );
static SlagLiteralString str1593( "Math::asin(Real64).Radians", 26 );
static SlagLiteralString str1594( "CompoundRadians(asin(", 21 );
static SlagLiteralString str1595( "))", 2 );
static SlagLiteralString str1596( "Math::acos(Real64).Radians", 26 );
static SlagLiteralString str1597( "CompoundRadians(acos(", 21 );
static SlagLiteralString str1598( "Math::atan(Real64).Radians", 26 );
static SlagLiteralString str1599( "CompoundRadians(atan(", 21 );
static SlagLiteralString str1600( "Math::atan2(Real64,Real64).Radians", 34 );
static SlagLiteralString str1601( "CompoundRadians(atan2(", 22 );
static SlagLiteralString str1602( "String::count().Int32", 21 );
static SlagLiteralString str1603( "(((SlagString*)", 15 );
static SlagLiteralString str1604( ")->count)", 9 );
static SlagLiteralString str1605( "String::hash_code().Int32", 25 );
static SlagLiteralString str1606( ")->hash_code)", 13 );
static SlagLiteralString str1607( "return context;", 15 );
static SlagLiteralString str1608( "SLAG_PUSH_REF( context );", 25 );
static SlagLiteralString str1609( "SLAG_PUSH_REF( ", 15 );
static SlagLiteralString str1610( "SLAG_PUSH_", 10 );
static SlagLiteralString str1611( "REAL64", 6 );
static SlagLiteralString str1612( "REAL32", 6 );
static SlagLiteralString str1613( "INT64", 5 );
static SlagLiteralString str1614( "INT32", 5 );
static SlagLiteralString str1615( "CHAR", 4 );
static SlagLiteralString str1616( "BYTE", 4 );
static SlagLiteralString str1617( "LOGICAL", 7 );
static SlagLiteralString str1618( "SLAG_PUSH( ", 11 );
static SlagLiteralString str1619( "return SLAG_POP_REF();", 22 );
static SlagLiteralString str1620( "return SLAG_POP_", 16 );
static SlagLiteralString str1621( "REAL64();", 9 );
static SlagLiteralString str1622( "REAL32();", 9 );
static SlagLiteralString str1623( "INT64();", 8 );
static SlagLiteralString str1624( "INT32();", 8 );
static SlagLiteralString str1625( "CHAR();", 7 );
static SlagLiteralString str1626( "BYTE();", 7 );
static SlagLiteralString str1627( "LOGICAL();", 10 );
static SlagLiteralString str1628( "return SLAG_POP( ", 17 );
static SlagLiteralString str1629( "to_cpp() undefined for type ", 28 );
static SlagLiteralString str1630( "str", 3 );
static SlagLiteralString str1631( ".value", 6 );
static SlagLiteralString str1632( "0x", 2 );
static SlagLiteralString str1633( "LL", 2 );
static SlagLiteralString str1634( "end_", 4 );
static SlagLiteralString str1635( ":;", 2 );
static SlagLiteralString str1636( "if (", 4 );
static SlagLiteralString str1637( "else if (", 9 );
static SlagLiteralString str1638( "satisfied_", 10 );
static SlagLiteralString str1639( "goto end_", 9 );
static SlagLiteralString str1640( "unsatisfied_", 12 );
static SlagLiteralString str1641( "SlagCatchHandler try_env_", 25 );
static SlagLiteralString str1642( "SLAG_TRY", 8 );
static SlagLiteralString str1643( "_err", 4 );
static SlagLiteralString str1644( "SLAG_CATCH(", 11 );
static SlagLiteralString str1645( "slag_cur_catch->unhook();", 25 );
static SlagLiteralString str1646( "SlagTypeInfo* ", 14 );
static SlagLiteralString str1647( "_type = slag_thrown_error->type;", 32 );
static SlagLiteralString str1648( "_type = ", 8 );
static SlagLiteralString str1649( "->type;", 7 );
static SlagLiteralString str1650( "else ", 5 );
static SlagLiteralString str1651( "_type->instance_of(&type_", 25 );
static SlagLiteralString str1652( " = slag_thrown_error;", 21 );
static SlagLiteralString str1653( " = ", 3 );
static SlagLiteralString str1654( "  SLAG_THROW(slag_thrown_error);", 32 );
static SlagLiteralString str1655( "  SLAG_THROW(", 13 );
static SlagLiteralString str1656( "for (;;)", 8 );
static SlagLiteralString str1657( "next_", 5 );
static SlagLiteralString str1658( "while (", 7 );
static SlagLiteralString str1659( "printf( \"breakpoint ", 20 );
static SlagLiteralString str1660( "\\n\" );", 6 );
static SlagLiteralString str1661( "goto next_", 10 );
static SlagLiteralString str1662( "if (!", 5 );
static SlagLiteralString str1663( ") goto unsatisfied_", 19 );
static SlagLiteralString str1664( ") goto satisfied_", 17 );
static SlagLiteralString str1665( "SLAG_THROW( ", 12 );
static SlagLiteralString str1666( "sxc_mod(", 8 );
static SlagLiteralString str1667( "(SlagReal64)", 12 );
static SlagLiteralString str1668( "(SlagReal32)", 12 );
static SlagLiteralString str1669( "(SlagInt64)", 11 );
static SlagLiteralString str1670( "(SlagInt32)", 11 );
static SlagLiteralString str1671( "pow((double)", 12 );
static SlagLiteralString str1672( ",(double)", 9 );
static SlagLiteralString str1673( "((SlagChar)", 11 );
static SlagLiteralString str1674( "sxc_int64_as_real64(0x", 22 );
static SlagLiteralString str1675( "LL)", 3 );
static SlagLiteralString str1676( ".equals(", 8 );
static SlagLiteralString str1677( " == ", 4 );
static SlagLiteralString str1678( " <= ", 4 );
static SlagLiteralString str1679( " >= ", 4 );
static SlagLiteralString str1680( " < ", 3 );
static SlagLiteralString str1681( " > ", 3 );
static SlagLiteralString str1682( "(!", 2 );
static SlagLiteralString str1683( " != ", 4 );
static SlagLiteralString str1684( "sxc_real64_as_int64(", 20 );
static SlagLiteralString str1685( "sxc_real32_as_int32(", 20 );
static SlagLiteralString str1686( "sxc_int64_as_real64(", 20 );
static SlagLiteralString str1687( "sxc_int32_as_real32(", 20 );
static SlagLiteralString str1688( "sxc_as(", 7 );
static SlagLiteralString str1689( ",&type_", 7 );
static SlagLiteralString str1690( "((", 2 );
static SlagLiteralString str1691( "*)", 2 );
static SlagLiteralString str1692( "sxc_instance_of(", 16 );
static SlagLiteralString str1693( " && ", 4 );
static SlagLiteralString str1694( " || ", 4 );
static SlagLiteralString str1695( "sxc_singletons[", 15 );
static SlagLiteralString str1696( "((SlagArray*)", 13 );
static SlagLiteralString str1697( ")->array_count", 14 );
static SlagLiteralString str1698( "((SlagInt64)", 12 );
static SlagLiteralString str1699( "sxc_int32_as_real32(0x", 22 );
static SlagLiteralString str1700( "((SlagByte)", 11 );
static SlagLiteralString str1701( "((SlagInt32)", 12 );
static SlagLiteralString str1702( " != 0)", 6 );
static SlagLiteralString str1703( "((SlagReal64)", 13 );
static SlagLiteralString str1704( "((SlagReal32)", 13 );
static SlagLiteralString str1705( "sxc_shr(", 8 );
static SlagLiteralString str1706( "FIXME_ARRAY:", 12 );
static SlagLiteralString str1707( "Call", 4 );
static SlagLiteralString str1708( "**)(((SlagArray*)", 17 );
static SlagLiteralString str1709( ")->data))[", 10 );
static SlagLiteralString str1710( "*)(((SlagArray*)", 16 );
static SlagLiteralString str1711( "sxc_write_ref( ((SlagObject**)(((SlagArray*)", 44 );
static SlagLiteralString str1712( ")->data))+", 10 );
static SlagLiteralString str1713( "] = ", 4 );
static SlagLiteralString str1714( ")(", 2 );
static SlagLiteralString str1715( ")->", 3 );
static SlagLiteralString str1716( "type_", 5 );
static SlagLiteralString str1717( ".create(", 8 );
static SlagLiteralString str1718( "(type_", 6 );
static SlagLiteralString str1719( ".create(),", 10 );
static SlagLiteralString str1720( ".create())", 10 );
static SlagLiteralString str1721( " += ", 4 );
static SlagLiteralString str1722( " -= ", 4 );
static SlagLiteralString str1723( " *= ", 4 );
static SlagLiteralString str1724( " = sxc_mod(", 11 );
static SlagLiteralString str1725( "sxc_write_ref( &sxc_singletons[", 31 );
static SlagLiteralString str1726( "], ", 3 );
static SlagLiteralString str1727( "sxc_write_ref( &(((", 19 );
static SlagLiteralString str1728( "), ", 3 );
static SlagLiteralString str1729( "++(((", 5 );
static SlagLiteralString str1730( "*)context)->", 12 );
static SlagLiteralString str1731( "--(((", 5 );
static SlagLiteralString str1732( " /= ", 4 );
static SlagLiteralString str1733( " = sxc_mod(context->", 20 );
static SlagLiteralString str1734( "slag_duplicate_array(", 21 );
static SlagLiteralString str1735( " == NULL)", 9 );
static SlagLiteralString str1736( " != NULL)", 9 );
static SlagLiteralString str1737( "int sxc_base_type_index_table[] =", 33 );
static SlagLiteralString str1738( "void* sxc_method_pointers[] =", 29 );
static SlagLiteralString str1739( "(void*)(", 8 );
static SlagLiteralString str1740( "(*)(SlagObject*", 15 );
static SlagLiteralString str1741( ")) ", 3 );
static SlagLiteralString str1742( "(void*) ", 8 );
static SlagLiteralString str1743( "call__", 6 );
static SlagLiteralString str1744( "static void ", 12 );
static SlagLiteralString str1745( "( void* method_ptr )", 20 );
static SlagLiteralString str1746( "SlagObject* p", 13 );
static SlagLiteralString str1747( " = SLAG_POP_REF();", 18 );
static SlagLiteralString str1748( "SlagReal64  p", 13 );
static SlagLiteralString str1749( " = SLAG_POP_REAL64();", 21 );
static SlagLiteralString str1750( "SlagReal32  p", 13 );
static SlagLiteralString str1751( " = SLAG_POP_REAL32();", 21 );
static SlagLiteralString str1752( "SlagInt64   p", 13 );
static SlagLiteralString str1753( " = SLAG_POP_INT64();", 20 );
static SlagLiteralString str1754( "SlagInt32   p", 13 );
static SlagLiteralString str1755( " = SLAG_POP_INT32();", 20 );
static SlagLiteralString str1756( "SlagChar    p", 13 );
static SlagLiteralString str1757( " = SLAG_POP_CHAR();", 19 );
static SlagLiteralString str1758( "SlagByte    p", 13 );
static SlagLiteralString str1759( " = SLAG_POP_BYTE();", 19 );
static SlagLiteralString str1760( "SlagLogical p", 13 );
static SlagLiteralString str1761( " = SLAG_POP_LOGICAL();", 22 );
static SlagLiteralString str1762( " p", 2 );
static SlagLiteralString str1763( " = SLAG_POP(", 12 );
static SlagLiteralString str1764( "SlagObject* context = SLAG_POP_REF();", 37 );
static SlagLiteralString str1765( "SLAG_PUSH", 9 );
static SlagLiteralString str1766( "_REF( ", 6 );
static SlagLiteralString str1767( "_REAL64( ", 9 );
static SlagLiteralString str1768( "_REAL32( ", 9 );
static SlagLiteralString str1769( "_INT64( ", 8 );
static SlagLiteralString str1770( "_INT32( ", 8 );
static SlagLiteralString str1771( "_CHAR( ", 7 );
static SlagLiteralString str1772( "_BYTE( ", 7 );
static SlagLiteralString str1773( "_LOGICAL( ", 10 );
static SlagLiteralString str1774( "))method_ptr)(context", 21 );
static SlagLiteralString str1775( ",p", 2 );
static SlagLiteralString str1776( "void* sxc_caller_table[] =", 26 );
static SlagLiteralString str1777( "int sxc_method_info_table[] =", 29 );
static SlagLiteralString str1778( "int sxc_method_list_table[] =", 29 );
static SlagLiteralString str1779( "void* sxc_dispatch_table[] =", 28 );
static SlagLiteralString str1780( "void sxc_configure()", 20 );
static SlagLiteralString str1781( "sxc_main_class = &type_", 23 );
static SlagLiteralString str1782( "int* type_table = sxc_base_type_index_table;", 44 );
static SlagLiteralString str1783( ".set_property_info( sxc_property_info, ", 39 );
static SlagLiteralString str1784( ".set_base_types(type_table,", 27 );
static SlagLiteralString str1785( ".element_size = sizeof(SlagObject*);", 36 );
static SlagLiteralString str1786( ".element_size = sizeof(", 23 );
static SlagLiteralString str1787( ".method_init_object = (SlagFn) ", 31 );
static SlagLiteralString str1788( "clean_up()", 10 );
static SlagLiteralString str1789( ".method_clean_up = (SlagFn) ", 28 );
static SlagLiteralString str1790( ".dispatch_table = sxc_dispatch_table+", 37 );
static SlagLiteralString str1791( "sxc.set_up_method_info( sxc_method_info_table, ", 47 );
static SlagLiteralString str1792( "sxc.create_method_lists( sxc_method_list_table, ", 48 );
static SlagLiteralString str1793( "], type_", 8 );
static SlagLiteralString str1794( ".create_without_init() );", 25 );
static SlagLiteralString str1795( "Global__set_up_stdio( type_ClassGlobal.singleton() );", 53 );
static SlagLiteralString str1796( "SlagObject* main_obj;", 21 );
static SlagLiteralString str1797( "main_obj = sxc_singletons[", 26 );
static SlagLiteralString str1798( "main_obj = type_", 16 );
static SlagLiteralString str1799( ".create_without_init();", 23 );
static SlagLiteralString str1800( "Manager* mgr = (", 16 );
static SlagLiteralString str1801( "Manager*) type_", 15 );
static SlagLiteralString str1802( "Manager.singleton();", 20 );
static SlagLiteralString str1803( "mgr->property_singleton_instance = main_obj;", 44 );
static SlagLiteralString str1804( "++main_obj->reference_count;", 28 );
static SlagLiteralString str1805( "slag_main_object = main_obj;", 28 );
static SlagLiteralString str1806( "( sxc_singletons[", 17 );
static SlagLiteralString str1807( "] );", 4 );
static SlagLiteralString str1808( "SlagObject* sxc_get_global_cmd_line_args_list()", 47 );
static SlagLiteralString str1809( "  return ((ClassGlobal*)sxc_singletons[", 39 );
static SlagLiteralString str1810( "])->property_command_line_args;", 31 );
static SlagLiteralString str1811( "CSWriter", 8 );
static SlagLiteralString str1812( ".cs", 3 );
static SlagLiteralString str1813( "object", 6 );
static SlagLiteralString str1814( "_object", 7 );
static SlagLiteralString str1815( "double", 6 );
static SlagLiteralString str1816( "float", 5 );
static SlagLiteralString str1817( "long", 4 );
static SlagLiteralString str1818( "int", 3 );
static SlagLiteralString str1819( "char", 4 );
static SlagLiteralString str1820( "byte", 4 );
static SlagLiteralString str1821( "bool", 4 );
static SlagLiteralString str1822( "using System;", 13 );
static SlagLiteralString str1823( "using System.Threading;", 23 );
static SlagLiteralString str1824( "using SlagFramework;", 20 );
static SlagLiteralString str1825( "public class GameXC", 19 );
static SlagLiteralString str1826( "static public ", 14 );
static SlagLiteralString str1827( " singleton_", 11 );
static SlagLiteralString str1828( " main_object;", 13 );
static SlagLiteralString str1829( "static public void configure()", 30 );
static SlagLiteralString str1830( "singleton_", 10 );
static SlagLiteralString str1831( " = new ", 7 );
static SlagLiteralString str1832( "(Slag.CallInit.FALSE);", 22 );
static SlagLiteralString str1833( "Slag.configure();", 17 );
static SlagLiteralString str1834( ".init_object();", 15 );
static SlagLiteralString str1835( ".init_singleton();", 18 );
static SlagLiteralString str1836( "static public void init()", 25 );
static SlagLiteralString str1837( ".property_singleton_instance = new ", 35 );
static SlagLiteralString str1838( "main_object = singleton_", 24 );
static SlagLiteralString str1839( ".property_singleton_instance;", 29 );
static SlagLiteralString str1840( "main_object = new ", 18 );
static SlagLiteralString str1841( "main_object.init_object();", 26 );
static SlagLiteralString str1842( "abstract ", 9 );
static SlagLiteralString str1843( "public class ", 13 );
static SlagLiteralString str1844( "public struct ", 14 );
static SlagLiteralString str1845( "public interface ", 17 );
static SlagLiteralString str1846( "public String data;", 19 );
static SlagLiteralString str1847( "public int    property_hash_code;", 33 );
static SlagLiteralString str1848( "public ClassString( String data ) : base(Slag.CallInit.FALSE)", 61 );
static SlagLiteralString str1849( "  this.data = data;", 19 );
static SlagLiteralString str1850( "  int code = 0;", 15 );
static SlagLiteralString str1851( "  for (int i=0; i<data.Length; ++i)", 35 );
static SlagLiteralString str1852( "  {", 3 );
static SlagLiteralString str1853( "    code = (code<<7) | ((code>>(16-7)) & ((1<<7)-1));", 53 );
static SlagLiteralString str1854( "    code += (int) data[i];", 26 );
static SlagLiteralString str1855( "  }", 3 );
static SlagLiteralString str1856( "  property_hash_code = code;", 28 );
static SlagLiteralString str1857( "public WeakReference weak_reference;", 36 );
static SlagLiteralString str1858( "public ClassWeakReference( ClassObject obj ) : base(Slag.CallInit.FALSE)", 72 );
static SlagLiteralString str1859( "  weak_reference = new WeakReference(obj);", 42 );
static SlagLiteralString str1860( "public ", 7 );
static SlagLiteralString str1861( "  this.", 7 );
static SlagLiteralString str1862( "public bool equals( ", 20 );
static SlagLiteralString str1863( "  if (!", 7 );
static SlagLiteralString str1864( ".equals(other.", 14 );
static SlagLiteralString str1865( ")) return false;", 16 );
static SlagLiteralString str1866( "  if (", 6 );
static SlagLiteralString str1867( " != other.", 10 );
static SlagLiteralString str1868( ") return false;", 15 );
static SlagLiteralString str1869( "  return true;", 14 );
static SlagLiteralString str1870( ") { ", 4 );
static SlagLiteralString str1871( "return 0.0; }", 13 );
static SlagLiteralString str1872( "return 0.0f; }", 14 );
static SlagLiteralString str1873( "return 0L; }", 12 );
static SlagLiteralString str1874( "return 0; }", 11 );
static SlagLiteralString str1875( "return (char) 0; }", 18 );
static SlagLiteralString str1876( "return (byte) 0; }", 18 );
static SlagLiteralString str1877( "return null; }", 14 );
static SlagLiteralString str1878( " : base(Slag.CallInit.FALSE)", 28 );
static SlagLiteralString str1879( "_object();", 10 );
static SlagLiteralString str1880( "( Slag.CallInit call_init )", 27 );
static SlagLiteralString str1881( "  if (call_init == Slag.CallInit.TRUE) init_object();", 53 );
static SlagLiteralString str1882( "( Slag.CallInit call_init ) : base(Slag.CallInit.FALSE)", 55 );
static SlagLiteralString str1883( "abstract public ", 16 );
static SlagLiteralString str1884( "public override ", 16 );
static SlagLiteralString str1885( "public virtual ", 15 );
static SlagLiteralString str1886( "(DateTime.Now.Ticks/10000)", 26 );
static SlagLiteralString str1887( "Global::sleep(Int32)", 20 );
static SlagLiteralString str1888( "Thread.Sleep(", 13 );
static SlagLiteralString str1889( "Math.Abs(", 9 );
static SlagLiteralString str1890( "Math.Floor(", 11 );
static SlagLiteralString str1891( "Math.Sqrt(", 10 );
static SlagLiteralString str1892( "Math.Sin((", 10 );
static SlagLiteralString str1893( "Math.Cos((", 10 );
static SlagLiteralString str1894( "Math.Tan((", 10 );
static SlagLiteralString str1895( "new CompoundRadians(Math.Asin(", 30 );
static SlagLiteralString str1896( "new CompoundRadians(Math.Acos(", 30 );
static SlagLiteralString str1897( "new CompoundRadians(Math.Atan(", 30 );
static SlagLiteralString str1898( "new CompoundRadians(Math.Atan2(", 31 );
static SlagLiteralString str1899( ".data.Length", 12 );
static SlagLiteralString str1900( ".property_hash_code", 19 );
static SlagLiteralString str1901( "String::get(Int32).Char", 23 );
static SlagLiteralString str1902( ".data[", 6 );
static SlagLiteralString str1903( "String::op+(String).String", 26 );
static SlagLiteralString str1904( "(new ClassString(", 17 );
static SlagLiteralString str1905( ".data + ", 8 );
static SlagLiteralString str1906( ".data))", 7 );
static SlagLiteralString str1907( "String::op+(Char).String", 24 );
static SlagLiteralString str1908( "System::force_garbage_collection()", 34 );
static SlagLiteralString str1909( "System.GC.Collect()", 19 );
static SlagLiteralString str1910( "Native", 6 );
static SlagLiteralString str1911( "to_cs() undefined for type ", 27 );
static SlagLiteralString str1912( "!(", 2 );
static SlagLiteralString str1913( "(new ClassString(\"", 18 );
static SlagLiteralString str1914( "\\t", 2 );
static SlagLiteralString str1915( "\\r", 2 );
static SlagLiteralString str1916( "00", 2 );
static SlagLiteralString str1917( "\\u", 2 );
static SlagLiteralString str1918( "\"))", 3 );
static SlagLiteralString str1919( "L", 1 );
static SlagLiteralString str1920( "alert('breakpoint ", 18 );
static SlagLiteralString str1921( "if ( !(", 7 );
static SlagLiteralString str1922( ") ) goto unsatisfied_", 21 );
static SlagLiteralString str1923( "throw ", 6 );
static SlagLiteralString str1924( "Slag.mod(", 9 );
static SlagLiteralString str1925( ")Math.Pow(", 10 );
static SlagLiteralString str1926( "((char)", 7 );
static SlagLiteralString str1927( "Slag.to_double(0x", 17 );
static SlagLiteralString str1928( "L)", 2 );
static SlagLiteralString str1929( "Slag.to_double(", 15 );
static SlagLiteralString str1930( "Slag.to_float(", 14 );
static SlagLiteralString str1931( "System.BitConverter.ToInt64(System.BitConverter.GetBytes(", 57 );
static SlagLiteralString str1932( "),0)", 4 );
static SlagLiteralString str1933( "System.BitConverter.ToInt32(System.BitConverter.GetBytes(", 57 );
static SlagLiteralString str1934( " as ", 4 );
static SlagLiteralString str1935( " is ", 4 );
static SlagLiteralString str1936( "GameXC.singleton_", 17 );
static SlagLiteralString str1937( ".Length", 7 );
static SlagLiteralString str1938( "copy_from", 9 );
static SlagLiteralString str1939( "Array.Copy(", 11 );
static SlagLiteralString str1940( "clear", 5 );
static SlagLiteralString str1941( "Slag.clear_array(", 17 );
static SlagLiteralString str1942( "TODO:", 5 );
static SlagLiteralString str1943( "base.", 5 );
static SlagLiteralString str1944( "unchecked((long)", 16 );
static SlagLiteralString str1945( "Slag.to_float(0x", 16 );
static SlagLiteralString str1946( "unchecked((int)", 15 );
static SlagLiteralString str1947( "unchecked((char)", 16 );
static SlagLiteralString str1948( "unchecked((byte)", 16 );
static SlagLiteralString str1949( " !=0 )", 6 );
static SlagLiteralString str1950( "((double)", 9 );
static SlagLiteralString str1951( "((float)", 8 );
static SlagLiteralString str1952( "Slag.shr(", 9 );
static SlagLiteralString str1953( "ARRAY:", 6 );
static SlagLiteralString str1954( "]=", 2 );
static SlagLiteralString str1955( "new ", 4 );
static SlagLiteralString str1956( " = Slag.mod(", 12 );
static SlagLiteralString str1957( ")Slag.array_duplicate(", 22 );
static SlagLiteralString str1958( " == null)", 9 );
static SlagLiteralString str1959( " != null)", 9 );
static SlagLiteralString str1960( "JavaWriter", 10 );
static SlagLiteralString str1961( ".java", 5 );
static SlagLiteralString str1962( "boolean", 7 );
static SlagLiteralString str1963( "/*.java", 7 );
static SlagLiteralString str1964( "SlagGlobals", 11 );
static SlagLiteralString str1965( "package ", 8 );
static SlagLiteralString str1966( "public class SlagGlobals", 24 );
static SlagLiteralString str1967( ".init();", 8 );
static SlagLiteralString str1968( "static public void launch()", 27 );
static SlagLiteralString str1969( " extends ", 9 );
static SlagLiteralString str1970( "Unknown kind of type.", 21 );
static SlagLiteralString str1971( " implements ", 12 );
static SlagLiteralString str1972( "public int    hash_code;", 24 );
static SlagLiteralString str1973( "public ClassString( String data )", 33 );
static SlagLiteralString str1974( "  super( Slag.CallInit.FALSE );", 31 );
static SlagLiteralString str1975( "  for (int i=0; i<data.length(); ++i)", 37 );
static SlagLiteralString str1976( "    code += (int) data.charAt(i);", 33 );
static SlagLiteralString str1977( "  hash_code = code;", 19 );
static SlagLiteralString str1978( "[] create_array( int count )", 28 );
static SlagLiteralString str1979( "[] result = new ", 16 );
static SlagLiteralString str1980( "[count];", 8 );
static SlagLiteralString str1981( "  for (int i=0; i<count; ++i)", 29 );
static SlagLiteralString str1982( "    result[i] = new ", 20 );
static SlagLiteralString str1983( "  return result;", 16 );
static SlagLiteralString str1984( "public boolean equals( ", 23 );
static SlagLiteralString str1985( "  if (!(", 8 );
static SlagLiteralString str1986( "))) return false;", 17 );
static SlagLiteralString str1987( "System.currentTimeMillis()", 26 );
static SlagLiteralString str1988( "try{Thread.sleep(", 17 );
static SlagLiteralString str1989( ");}catch(InterruptedException err){}", 36 );
static SlagLiteralString str1990( "Math.abs(", 9 );
static SlagLiteralString str1991( "Math.floor(", 11 );
static SlagLiteralString str1992( "Math.sqrt(", 10 );
static SlagLiteralString str1993( "Math.sin((", 10 );
static SlagLiteralString str1994( "Math.cos((", 10 );
static SlagLiteralString str1995( "Math.tan((", 10 );
static SlagLiteralString str1996( "new CompoundRadians(Math.asin(", 30 );
static SlagLiteralString str1997( "new CompoundRadians(Math.acos(", 30 );
static SlagLiteralString str1998( "new CompoundRadians(Math.atan(", 30 );
static SlagLiteralString str1999( "new CompoundRadians(Math.atan2(", 31 );
static SlagLiteralString str2000( ".data.length()", 14 );
static SlagLiteralString str2001( ".hash_code", 10 );
static SlagLiteralString str2002( ".data.charAt(", 13 );
static SlagLiteralString str2003( "System.gc()", 11 );
static SlagLiteralString str2004( "NativeData::", 12 );
static SlagLiteralString str2005( "to_java() undefined for type ", 29 );
static SlagLiteralString str2006( "break end_", 10 );
static SlagLiteralString str2007( "Slag.alert('breakpoint ", 23 );
static SlagLiteralString str2008( "continue end_", 13 );
static SlagLiteralString str2009( ") break unsatisfied_", 20 );
static SlagLiteralString str2010( ") break satisfied_", 18 );
static SlagLiteralString str2011( "Math.pow(", 9 );
static SlagLiteralString str2012( "Double.longBitsToDouble(0x", 26 );
static SlagLiteralString str2013( "Double.longBitsToDouble(", 24 );
static SlagLiteralString str2014( "Float.floatBitsToInt(", 21 );
static SlagLiteralString str2015( "Double.doubleToLongBits(", 24 );
static SlagLiteralString str2016( "Float.floatToIntBits(", 21 );
static SlagLiteralString str2017( " instanceof ", 12 );
static SlagLiteralString str2018( "SlagGlobals.singleton_", 22 );
static SlagLiteralString str2019( ".length", 7 );
static SlagLiteralString str2020( "System.arraycopy(", 17 );
static SlagLiteralString str2021( "super.", 6 );
static SlagLiteralString str2022( "((long)", 7 );
static SlagLiteralString str2023( "Float.intBitsToFloat(0x", 23 );
static SlagLiteralString str2024( "((int)", 6 );
static SlagLiteralString str2025( "((byte)", 7 );
static SlagLiteralString str2026( ".create_array(", 14 );
static SlagLiteralString str2027( "Success! (", 10 );
static SlagLiteralString str2028( "ArrayReader<<SlagError>>", 24 );
static SlagLiteralString str2029( "======", 6 );
static SlagLiteralString str2030( "\012In file \"", 10 );
static SlagLiteralString str2031( " - - -", 6 );
static SlagLiteralString str2032( "------", 6 );
static SlagLiteralString str2033( "\012Errors: ", 9 );
static SlagLiteralString str2034( "INTERNAL ERROR", 14 );
static SlagLiteralString str2035( "SlagCompiler", 12 );
static SlagLiteralString str2036( "No such element.", 16 );
static SlagLiteralString str2037( "No such element: \"", 18 );
static SlagLiteralString str2038( "NoSuchElementError", 18 );
static SlagLiteralString str2039( "Error during socket I/O.", 24 );
static SlagLiteralString str2040( "SocketError", 11 );
static SlagLiteralString str2041( "'return' command missing.", 25 );
static SlagLiteralString str2042( "MissingReturnError", 18 );
static SlagLiteralString str2043( "SignalObjectArg", 15 );
static SlagLiteralString str2044( "HashTableBase<<String,RuntimeType,Object,Object>>", 49 );
static SlagLiteralString str2045( "HashTable<<String,RuntimeType>>", 31 );
static SlagLiteralString str2046( "Invalid type cast.", 18 );
static SlagLiteralString str2047( "TypeCastError", 13 );
static SlagLiteralString str2048( "FileNotFoundError", 17 );
static SlagLiteralString str2049( "SignalDataArg", 13 );
static SlagLiteralString str2050( "Too many recursive calls have been made.", 40 );
static SlagLiteralString str2051( "CallStackLimitReached", 21 );

typedef SlagObject* (*Fn____Object)(SXCRef);
typedef SlagObject* (*Fn__CmdList__Object)(SXCRef,SXCRef);
typedef SlagChar (*Fn____Char)(SXCRef);
typedef SlagLogical (*Fn__Object__Logical)(SXCRef,SXCRef);
typedef void (*Fn__)(SXCRef);
typedef void (*Fn__String)(SXCRef,SXCRef);
typedef SlagLogical (*Fn__Char__Logical)(SXCRef,SlagChar);
typedef void (*Fn__Int32)(SXCRef,SlagInt32);
typedef SlagLogical (*Fn____Logical)(SXCRef);
typedef SlagObject* (*Fn__Object__Object)(SXCRef,SXCRef);
typedef void (*Fn__Char)(SXCRef,SlagChar);
typedef SlagInt32 (*Fn____Int32)(SXCRef);
typedef SlagLogical (*Fn__MethodInfo_MethodInfo__Logical)(SXCRef,SXCRef,SXCRef);
typedef SlagObject* (*Fn__Int32__Object)(SXCRef,SlagInt32);
typedef void (*Fn__Signal)(SXCRef,SXCRef);

static SlagObject* CallFn____Object( int dynamic_index, SlagObject* context )
{
  Fn____Object fn = (Fn____Object) context->type->dispatch_table[dynamic_index];
  return fn( context );
}

static SlagObject* CallFn__CmdList__Object( int dynamic_index, SlagObject* context, SlagObject* param1 )
{
  Fn__CmdList__Object fn = (Fn__CmdList__Object) context->type->dispatch_table[dynamic_index];
  return fn( context, param1 );
}

static SlagChar CallFn____Char( int dynamic_index, SlagObject* context )
{
  Fn____Char fn = (Fn____Char) context->type->dispatch_table[dynamic_index];
  return fn( context );
}

static SlagLogical CallFn__Object__Logical( int dynamic_index, SlagObject* context, SlagObject* param1 )
{
  Fn__Object__Logical fn = (Fn__Object__Logical) context->type->dispatch_table[dynamic_index];
  return fn( context, param1 );
}

static void CallFn__( int dynamic_index, SlagObject* context )
{
  Fn__ fn = (Fn__) context->type->dispatch_table[dynamic_index];
  fn( context );
}

static void CallFn__String( int dynamic_index, SlagObject* context, SlagObject* param1 )
{
  Fn__String fn = (Fn__String) context->type->dispatch_table[dynamic_index];
  fn( context, param1 );
}

static SlagLogical CallFn__Char__Logical( int dynamic_index, SlagObject* context, SlagChar param1 )
{
  Fn__Char__Logical fn = (Fn__Char__Logical) context->type->dispatch_table[dynamic_index];
  return fn( context, param1 );
}

static void CallFn__Int32( int dynamic_index, SlagObject* context, SlagInt32 param1 )
{
  Fn__Int32 fn = (Fn__Int32) context->type->dispatch_table[dynamic_index];
  fn( context, param1 );
}

static SlagLogical CallFn____Logical( int dynamic_index, SlagObject* context )
{
  Fn____Logical fn = (Fn____Logical) context->type->dispatch_table[dynamic_index];
  return fn( context );
}

static SlagObject* CallFn__Object__Object( int dynamic_index, SlagObject* context, SlagObject* param1 )
{
  Fn__Object__Object fn = (Fn__Object__Object) context->type->dispatch_table[dynamic_index];
  return fn( context, param1 );
}

static void CallFn__Char( int dynamic_index, SlagObject* context, SlagChar param1 )
{
  Fn__Char fn = (Fn__Char) context->type->dispatch_table[dynamic_index];
  fn( context, param1 );
}

static SlagInt32 CallFn____Int32( int dynamic_index, SlagObject* context )
{
  Fn____Int32 fn = (Fn____Int32) context->type->dispatch_table[dynamic_index];
  return fn( context );
}

static SlagLogical CallFn__MethodInfo_MethodInfo__Logical( int dynamic_index, SlagObject* context, SlagObject* param1, SlagObject* param2 )
{
  Fn__MethodInfo_MethodInfo__Logical fn = (Fn__MethodInfo_MethodInfo__Logical) context->type->dispatch_table[dynamic_index];
  return fn( context, param1, param2 );
}

static SlagObject* CallFn__Int32__Object( int dynamic_index, SlagObject* context, SlagInt32 param1 )
{
  Fn__Int32__Object fn = (Fn__Int32__Object) context->type->dispatch_table[dynamic_index];
  return fn( context, param1 );
}

static void CallFn__Signal( int dynamic_index, SlagObject* context, SlagObject* param1 )
{
  Fn__Signal fn = (Fn__Signal) context->type->dispatch_table[dynamic_index];
  fn( context, param1 );
}

SlagObject* Object__init( SXCRef context )
{
  return context;
}

static SlagInt32 Object__hash_code( SXCRef context )
{
  SLAG_PUSH_REF( context );
  Object__hash_code();
  return SLAG_POP_INT32();
}

static SlagObject* Object__create_duplicate( SXCRef context )
{
  SLAG_THROW( UnsupportedMethodError__init__String(type_ClassUnsupportedMethodError.create(),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str155.value),CallFn____Object(25,context)),str38.value))) );
}

SlagObject* Object__to_String( SXCRef context )
{
  SXCRef local_0_st;

  local_0_st = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(25,context)),str62.value));
  return local_0_st;
}

static SlagLogical Object__opEQ__Object( SXCRef context, SXCRef local_0_other )
{
  return (context == local_0_other);
}

static SlagInt32 Object__opCMP__Object( SXCRef context, SXCRef local_0_other )
{
  SLAG_THROW( UnsupportedMethodError__init(type_ClassUnsupportedMethodError.create()) );
}

SlagObject* Object__type_name( SXCRef context )
{
  return str0.value;
}

void Object__init_object( SXCRef context )
{
}

static SlagObject* WeakReference__object( SXCRef context )
{
  SLAG_PUSH_REF( context );
  WeakReference__object();
  return SLAG_POP_REF();
}

SlagObject* WeakReference__to_String( SXCRef context )
{
  SXCRef local_0_obj;

  local_0_obj = WeakReference__object(context);
  if ((local_0_obj != NULL))
  {
    return CallFn____Object(47,local_0_obj);
  }
  return str36.value;
}

void WeakReference__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* WeakReference__type_name( SXCRef context )
{
  return str112.value;
}

SlagObject* Weak_of_SignalListener__to_String( SXCRef context )
{
  SXCRef local_0_obj;

  local_0_obj = WeakReference__object(((ClassWeak_of_SignalListener*)context)->property_weak_reference);
  if ((local_0_obj != NULL))
  {
    return CallFn____Object(47,local_0_obj);
  }
  return str36.value;
}

void Weak_of_SignalListener__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Weak_of_SignalListener__type_name( SXCRef context )
{
  return str113.value;
}

static SlagChar String__last( SXCRef context )
{
  return String__get__Int32(context,((((SlagString*)context)->count)-1));
}

static SlagInt32 String__index_of__Char_Int32( SXCRef context, SlagChar local_0_value, SlagInt32 local_1_starting_index )
{
  SlagInt32 local_2_i;
  SlagInt32 local_3__last2991;

  local_2_i = local_1_starting_index;
  local_3__last2991 = (((SlagString*)context)->count);
  while ((local_2_i < local_3__last2991))
  {
    if ((((SlagInt32)String__get__Int32(context,local_2_i)) == ((SlagInt32)local_0_value)))
    {
      return local_2_i;
    }
    ++local_2_i;
  }
  return -1;
}

static SlagInt32 String__last_index_of__Char_Int32( SXCRef context, SlagChar local_0_value, SlagInt32 local_1_starting_index )
{
  SlagInt32 local_2_index;
  SlagInt32 local_3__last2994;

  if ((local_1_starting_index == -1))
  {
    local_1_starting_index = ((((SlagString*)context)->count)-1);
  }
  local_2_index = local_1_starting_index;
  local_3__last2994 = 0;
  while ((local_2_index >= local_3__last2994))
  {
    if ((((SlagInt32)String__get__Int32(context,local_2_index)) == ((SlagInt32)local_0_value)))
    {
      return local_2_index;
    }
    --local_2_index;
  }
  return -1;
}

static SlagObject* String__init( SXCRef context )
{
  SLAG_THROW( Error__init__String(type_ClassError.create(),str60.value) );
  return context;
}

static SlagInt32 String__count( SXCRef context )
{
  return (((SlagString*)context)->count);
}

static SlagInt32 String__hash_code( SXCRef context )
{
  return (((SlagString*)context)->hash_code);
}

static SlagChar String__get__Int32( SXCRef context, SlagInt32 local_0_index )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_INT32( local_0_index );
  String__get__Int32();
  return SLAG_POP_CHAR();
}

static SlagObject* String__consolidate( SXCRef context )
{
  SXCRef local_0_mapping;

  local_0_mapping = ((ClassMapping_of_String_and_String*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashSet_of_String*)((ClassStringManager*)sxc_singletons[18])->property_consolidation_table)->property_data,context));
  if ((local_0_mapping != NULL))
  {
    return ((ClassMapping_of_String_and_String*)local_0_mapping)->property_key;
  }
  HashSet_of_String__add__String(((ClassStringManager*)sxc_singletons[18])->property_consolidation_table,context);
  return context;
}

static SlagObject* String__to_String( SXCRef context )
{
  return context;
}

static SlagInt32 String__modification_count( SXCRef context )
{
  return 0;
}

static SlagObject* String__create_duplicate( SXCRef context )
{
  return context;
}

static SlagLogical String__opEQ__Object( SXCRef context, SXCRef local_0_other )
{
  if (sxc_instance_of(local_0_other,&type_ClassString))
  {
    return String__opEQ__String(context,local_0_other);
  }
  else
  {
    return false;
  }
}

static SlagLogical String__opEQ__String( SXCRef context, SXCRef local_0_other )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_other );
  String__opEQ__String();
  return SLAG_POP_LOGICAL();
}

static SlagInt32 String__opCMP__String( SXCRef context, SXCRef local_0_other )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_other );
  String__opCMP__String();
  return SLAG_POP_INT32();
}

static SlagObject* String__opADD__String( SXCRef context, SXCRef local_0_other )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_other );
  String__opADD__String();
  return SLAG_POP_REF();
}

static SlagObject* String__opADD__Char( SXCRef context, SlagChar local_0_ch )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_CHAR( local_0_ch );
  String__opADD__Char();
  return SLAG_POP_REF();
}

static SlagObject* String__substring__Int32_Int32( SXCRef context, SlagInt32 local_0_first_index, SlagInt32 local_1_last_index )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_INT32( local_0_first_index );
  SLAG_PUSH_INT32( local_1_last_index );
  String__substring__Int32_Int32();
  return SLAG_POP_REF();
}

static SlagObject* String__substring__Int32( SXCRef context, SlagInt32 local_0_first_index )
{
  return String__substring__Int32_Int32(context,local_0_first_index,((((SlagString*)context)->count)-1));
}

static SlagObject* String__reversed( SXCRef context )
{
  SXCRef local_0_buffer;

  local_0_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),context);
  StringBuilder__reverse(local_0_buffer);
  return StringBuilder__to_String(local_0_buffer);
}

static SlagInt32 String__index_of__String_Int32( SXCRef context, SXCRef local_0_other, SlagInt32 local_1_starting_index )
{
  SlagChar local_2_first_ch;
  SlagInt32 local_3_index;
  SlagInt32 local_4__last206;
  SlagLogical local_5_success;
  SlagInt32 local_6_i;
  SlagInt32 local_7__count208;

  if ((((((SlagString*)local_0_other)->count) == 0) || ((((SlagString*)local_0_other)->count) > (((SlagString*)context)->count))))
  {
    return -1;
  }
  local_2_first_ch = String__get__Int32(local_0_other,0);
  local_3_index = local_1_starting_index;
  local_4__last206 = ((((SlagString*)context)->count)-(((SlagString*)local_0_other)->count));
  while ((local_3_index <= local_4__last206))
  {
    if ((((SlagInt32)String__get__Int32(context,local_3_index)) == ((SlagInt32)local_2_first_ch)))
    {
      local_5_success = true;
      {
        local_6_i = 0;
        local_7__count208 = (((SlagString*)local_0_other)->count);
        while ((local_6_i < local_7__count208))
        {
          if ((((SlagInt32)String__get__Int32(context,(local_3_index+local_6_i))) != ((SlagInt32)String__get__Int32(local_0_other,local_6_i))))
          {
            local_5_success = false;
            goto end_4221;
          }
          ++local_6_i;
          next_4221:;
        }
        end_4221:;
      }
      if (local_5_success)
      {
        return local_3_index;
      }
    }
    ++local_3_index;
  }
  return -1;
}

static SlagInt32 String__last_index_of__String_Int32( SXCRef context, SXCRef local_0_other, SlagInt32 local_1_starting_index )
{
  SlagChar local_2_first_ch;
  SXCRef local_3__reader213;
  SlagInt32 local_4_index;
  SlagLogical local_5_success;
  SlagInt32 local_6_i;
  SlagInt32 local_7__count215;

  if ((((((SlagString*)local_0_other)->count) == 0) || ((((SlagString*)local_0_other)->count) > (((SlagString*)context)->count))))
  {
    return -1;
  }
  if ((local_1_starting_index == -1))
  {
    local_1_starting_index = (((SlagString*)context)->count);
  }
  else
  {
    ++local_1_starting_index;
  }
  local_2_first_ch = String__get__Int32(local_0_other,0);
  local_3__reader213 = CallFn____Object(44,Range_of_Int32__init__Int32_Int32_Int32(type_ClassRange_of_Int32.create(),(local_1_starting_index-(((SlagString*)local_0_other)->count)),0,-1));
  while (CallFn____Logical(14,local_3__reader213))
  {
    local_4_index = CallFn____Int32(30,local_3__reader213);
    if ((((SlagInt32)String__get__Int32(context,local_4_index)) == ((SlagInt32)local_2_first_ch)))
    {
      local_5_success = true;
      {
        local_6_i = 0;
        local_7__count215 = (((SlagString*)local_0_other)->count);
        while ((local_6_i < local_7__count215))
        {
          if ((((SlagInt32)String__get__Int32(context,(local_4_index+local_6_i))) != ((SlagInt32)String__get__Int32(local_0_other,local_6_i))))
          {
            local_5_success = false;
            goto end_6447;
          }
          ++local_6_i;
          next_6447:;
        }
        end_6447:;
      }
      if (local_5_success)
      {
        return local_4_index;
      }
    }
  }
  return -1;
}

static SlagLogical String__begins_with__Char( SXCRef context, SlagChar local_0_ch )
{
  return (((((SlagString*)context)->count) != 0) && (((SlagInt32)String__get__Int32(context,0)) == ((SlagInt32)local_0_ch)));
}

static SlagLogical String__ends_with__String( SXCRef context, SXCRef local_0_st )
{
  SlagInt32 local_1_start;
  SlagInt32 local_2_i;
  SlagInt32 local_3__count219;

  if (((((SlagString*)local_0_st)->count) > (((SlagString*)context)->count)))
  {
    return false;
  }
  local_1_start = ((((SlagString*)context)->count)-(((SlagString*)local_0_st)->count));
  {
    local_2_i = 0;
    local_3__count219 = (((SlagString*)local_0_st)->count);
    while ((local_2_i < local_3__count219))
    {
      if ((((SlagInt32)String__get__Int32(context,(local_1_start+local_2_i))) != ((SlagInt32)String__get__Int32(local_0_st,local_2_i))))
      {
        return false;
      }
      ++local_2_i;
    }
  }
  return true;
}

static SlagLogical String__ends_with__Char( SXCRef context, SlagChar local_0_ch )
{
  return (((((SlagString*)context)->count) != 0) && (((SlagInt32)String__last(context)) == ((SlagInt32)local_0_ch)));
}

static SlagObject* String__replace__String_String( SXCRef context, SXCRef local_0_look_for, SXCRef local_1_replace_with )
{
  SXCRef local_2_buffer;
  SXCRef local_3_st;
  SlagInt32 local_4_i;

  local_2_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_3_st = context;
  local_4_i = String__index_of__String_Int32(local_3_st,local_0_look_for,0);
  if ((local_4_i == -1))
  {
    return local_3_st;
  }
  while ((local_4_i >= 0))
  {
    StringBuilder__print__String(local_2_buffer,((ClassString*)String__substring__Int32_Int32(local_3_st,0,(local_4_i-1))));
    StringBuilder__print__String(local_2_buffer,local_1_replace_with);
    local_3_st = String__substring__Int32(local_3_st,(local_4_i+(((SlagString*)local_0_look_for)->count)));
    local_4_i = String__index_of__String_Int32(local_3_st,local_0_look_for,0);
  }
  StringBuilder__print__String(local_2_buffer,local_3_st);
  return StringBuilder__to_String(local_2_buffer);
}

static SlagObject* String__rightmost__Int32( SXCRef context, SlagInt32 local_0_num_chars )
{
  SlagInt32 local_1_len;

  local_1_len = (((SlagString*)context)->count);
  return String__substring__Int32_Int32(context,(local_1_len-local_0_num_chars),(local_1_len-1));
}

static SlagObject* String__excluding_rightmost__Int32( SXCRef context, SlagInt32 local_0_num_chars )
{
  return ((ClassString*)String__substring__Int32_Int32(context,0,(((((SlagString*)context)->count)-local_0_num_chars)-1)));
}

static SlagObject* String__before_first__Char( SXCRef context, SlagChar local_0_ch )
{
  SlagInt32 local_1_pos;

  local_1_pos = String__index_of__Char_Int32(context,local_0_ch,0);
  if ((local_1_pos == -1))
  {
    return context;
  }
  return ((ClassString*)String__substring__Int32_Int32(context,0,(local_1_pos-1)));
}

static SlagObject* String__after_last__Char( SXCRef context, SlagChar local_0_ch )
{
  SlagInt32 local_1_pos;

  local_1_pos = String__last_index_of__Char_Int32(context,local_0_ch,-1);
  if ((local_1_pos == -1))
  {
    return context;
  }
  return String__substring__Int32(context,(local_1_pos+1));
}

static SlagObject* String__after_first__Char( SXCRef context, SlagChar local_0_ch )
{
  SlagInt32 local_1_pos;

  local_1_pos = String__index_of__Char_Int32(context,local_0_ch,0);
  if ((local_1_pos == -1))
  {
    return context;
  }
  return String__substring__Int32(context,(local_1_pos+1));
}

static SlagObject* String__from_first__Char( SXCRef context, SlagChar local_0_ch )
{
  SlagInt32 local_1_pos;

  local_1_pos = String__index_of__Char_Int32(context,local_0_ch,0);
  if ((local_1_pos == -1))
  {
    return str39.value;
  }
  return String__substring__Int32(context,local_1_pos);
}

static SlagObject* String__before_first__String( SXCRef context, SXCRef local_0_st )
{
  SlagInt32 local_1_pos;

  local_1_pos = String__index_of__String_Int32(context,local_0_st,0);
  if ((local_1_pos == -1))
  {
    return context;
  }
  return ((ClassString*)String__substring__Int32_Int32(context,0,(local_1_pos-1)));
}

static SlagObject* String__before_last__String( SXCRef context, SXCRef local_0_st )
{
  SlagInt32 local_1_pos;

  local_1_pos = String__last_index_of__String_Int32(context,local_0_st,-1);
  if ((local_1_pos == -1))
  {
    return context;
  }
  return ((ClassString*)String__substring__Int32_Int32(context,0,(local_1_pos-1)));
}

static SlagObject* String__after_first__String( SXCRef context, SXCRef local_0_st )
{
  SlagInt32 local_1_pos;

  local_1_pos = String__index_of__String_Int32(context,local_0_st,0);
  if ((local_1_pos == -1))
  {
    return context;
  }
  return String__substring__Int32(context,(local_1_pos+(((SlagString*)local_0_st)->count)));
}

static SlagObject* String__to_uppercase( SXCRef context )
{
  SXCRef local_0__reader252;
  SlagChar local_1_ch;
  SXCRef local_2_builder;
  SXCRef local_3__reader253;
  SlagChar local_4_ch;

  {
    local_0__reader252 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),context,0,-1));
    while (CallFn____Logical(14,local_0__reader252))
    {
      local_1_ch = CallFn____Char(29,local_0__reader252);
      if (((((SlagInt32)local_1_ch) >= 97) && (((SlagInt32)local_1_ch) <= 122))) goto satisfied_5360;
    }
    return context;
    satisfied_5360:;
    {
      local_2_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((SlagString*)context)->count));
      local_3__reader253 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),context,0,-1));
      while (CallFn____Logical(14,local_3__reader253))
      {
        local_4_ch = CallFn____Char(29,local_3__reader253);
        if (((((SlagInt32)local_4_ch) >= 97) && (((SlagInt32)local_4_ch) <= 122)))
        {
          local_4_ch = ((SlagChar)((SlagInt32)(((SlagInt32)local_4_ch)+-32)));
        }
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_builder)->property_data,local_4_ch);
      }
      return StringBuilder__to_String(local_2_builder);
    }
    goto end_5360;
    unsatisfied_5360:;
  }
  end_5360:;
}

static SlagObject* String__to_lowercase( SXCRef context )
{
  SXCRef local_0__reader256;
  SlagChar local_1_ch;
  SXCRef local_2_builder;
  SXCRef local_3__reader257;
  SlagChar local_4_ch;

  {
    local_0__reader256 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),context,0,-1));
    while (CallFn____Logical(14,local_0__reader256))
    {
      local_1_ch = CallFn____Char(29,local_0__reader256);
      if (((((SlagInt32)local_1_ch) >= 65) && (((SlagInt32)local_1_ch) <= 90))) goto satisfied_4339;
    }
    return context;
    satisfied_4339:;
    {
      local_2_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((SlagString*)context)->count));
      local_3__reader257 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),context,0,-1));
      while (CallFn____Logical(14,local_3__reader257))
      {
        local_4_ch = CallFn____Char(29,local_3__reader257);
        if (((((SlagInt32)local_4_ch) >= 65) && (((SlagInt32)local_4_ch) <= 90)))
        {
          local_4_ch = ((SlagChar)((SlagInt32)(((SlagInt32)local_4_ch)+32)));
        }
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_builder)->property_data,local_4_ch);
      }
      return StringBuilder__to_String(local_2_builder);
    }
    goto end_4339;
    unsatisfied_4339:;
  }
  end_4339:;
}

static SlagObject* String__split__Char( SXCRef context, SlagChar local_0_divider_char )
{
  SXCRef local_1_tokens;
  SXCRef local_2_buffer;
  SXCRef local_3__reader261;
  SlagChar local_4_ch;

  local_1_tokens = ArrayList_of_String__init(type_ClassArrayList_of_String.create());
  local_2_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_3__reader261 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),context,0,-1));
  while (CallFn____Logical(14,local_3__reader261))
  {
    local_4_ch = CallFn____Char(29,local_3__reader261);
    if ((((SlagInt32)local_4_ch) == ((SlagInt32)local_0_divider_char)))
    {
      ArrayList_of_Object__add__Object(local_1_tokens,StringBuilder__to_String(local_2_buffer));
      ArrayList_of_Char__clear(((ClassStringBuilder*)local_2_buffer)->property_data);
    }
    else
    {
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,local_4_ch);
    }
  }
  ArrayList_of_Object__add__Object(local_1_tokens,StringBuilder__to_String(local_2_buffer));
  return local_1_tokens;
}

static SlagObject* String__trim( SXCRef context )
{
  SlagInt32 local_0_len;
  SlagInt32 local_1_i1;
  SlagInt32 local_2_i2;
  SlagChar local_3_ch;
  SlagChar local_4_ch;

  if (((((SlagString*)context)->count) == 0))
  {
    return context;
  }
  local_0_len = (((SlagString*)context)->count);
  local_1_i1 = 0;
  local_2_i2 = (local_0_len-1);
  while ((local_1_i1 < local_0_len))
  {
    local_3_ch = String__get__Int32(context,local_1_i1);
    if (((((SlagInt32)local_3_ch) > 32) && (((SlagInt32)local_3_ch) != 127)))
    {
      goto end_9994;
    }
    ++local_1_i1;
    next_9994:;
  }
  end_9994:;
  while ((local_2_i2 >= 0))
  {
    local_4_ch = String__get__Int32(context,local_2_i2);
    if (((((SlagInt32)local_4_ch) > 32) && (((SlagInt32)local_4_ch) != 127)))
    {
      goto end_9996;
    }
    --local_2_i2;
    next_9996:;
  }
  end_9996:;
  if ((local_1_i1 > local_2_i2))
  {
    return str39.value;
  }
  return String__substring__Int32_Int32(context,local_1_i1,local_2_i2);
}

static SlagObject* String__word_wrap__Int32( SXCRef context, SlagInt32 local_0_width )
{
  SXCRef local_1_lines;
  SlagInt32 local_2_i1;
  SlagInt32 local_3_i2;
  SlagInt32 local_4_len;
  SlagChar local_5_which_287;

  local_1_lines = ArrayList_of_String__init(type_ClassArrayList_of_String.create());
  local_2_i1 = 0;
  local_3_i2 = 0;
  local_4_len = (((SlagString*)context)->count);
  while ((local_3_i2 < local_4_len))
  {
    while (((((local_3_i2-local_2_i1) < local_0_width) && (local_3_i2 < local_4_len)) && (((SlagInt32)String__get__Int32(context,local_3_i2)) != 10)))
    {
      ++local_3_i2;
    }
    if (((local_3_i2-local_2_i1) == local_0_width))
    {
      if ((local_3_i2 >= local_4_len))
      {
        local_3_i2 = local_4_len;
      }
      else
      {
        while ((((((SlagInt32)String__get__Int32(context,local_3_i2)) != 32) && (((SlagInt32)String__get__Int32(context,local_3_i2)) != 10)) && (local_3_i2 > local_2_i1)))
        {
          --local_3_i2;
        }
        if ((local_3_i2 == local_2_i1))
        {
          local_3_i2 = (local_2_i1+local_0_width);
        }
      }
    }
    ArrayList_of_Object__add__Object(local_1_lines,String__substring__Int32_Int32(context,local_2_i1,(local_3_i2-1)));
    if ((local_3_i2 == local_4_len))
    {
      return local_1_lines;
    }
    else
    {
      local_5_which_287 = String__get__Int32(context,local_3_i2);
      if ((((SlagInt32)local_5_which_287) == 32))
      {
        while (((local_3_i2 < local_4_len) && (((SlagInt32)String__get__Int32(context,local_3_i2)) == 32)))
        {
          ++local_3_i2;
        }
        if (((local_3_i2 < local_4_len) && (((SlagInt32)String__get__Int32(context,local_3_i2)) == 10)))
        {
          ++local_3_i2;
        }
      }
      else if ((((SlagInt32)local_5_which_287) == 10))
      {
        ++local_3_i2;
      }
      local_2_i1 = local_3_i2;
    }
  }
  return local_1_lines;
}

static SlagObject* String__to_utf8( SXCRef context )
{
  SXCRef local_0_result;
  SXCRef local_1__reader290;
  SlagChar local_2_ch;

  local_0_result = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((SlagString*)context)->count));
  local_1__reader290 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),context,0,-1));
  while (CallFn____Logical(14,local_1__reader290))
  {
    local_2_ch = CallFn____Char(29,local_1__reader290);
    if ((((SlagInt32)local_2_ch) < 128))
    {
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_result)->property_data,local_2_ch);
    }
    else if ((((SlagInt32)local_2_ch) < 2048))
    {
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_result)->property_data,((SlagChar)((SlagInt32)((sxc_shr(((SlagInt32)local_2_ch),6)&31)|192))));
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_result)->property_data,((SlagChar)((SlagInt32)((((SlagInt32)local_2_ch)&63)|128))));
    }
    else
    {
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_result)->property_data,((SlagChar)((SlagInt32)((sxc_shr(((SlagInt32)local_2_ch),12)&15)|224))));
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_result)->property_data,((SlagChar)((SlagInt32)((sxc_shr(((SlagInt32)local_2_ch),6)&63)|128))));
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_result)->property_data,((SlagChar)((SlagInt32)((((SlagInt32)local_2_ch)&63)|128))));
    }
  }
  return StringBuilder__to_String(local_0_result);
}

static SlagObject* String__to_Array( SXCRef context )
{
  SLAG_PUSH_REF( context );
  String__to_Array();
  return SLAG_POP_REF();
}

static SlagObject* String__x_compatible( SXCRef context )
{
  SXCRef local_0_buffer;
  SlagLogical local_1_discard_next;
  SXCRef local_2__reader2963;
  SlagChar local_3_ch;
  SlagChar local_4_which_2966;

  if (String__opEQ__String(context,str691.value))
  {
    return str1287.value;
  }
  if (String__opEQ__String(context,str690.value))
  {
    return str1288.value;
  }
  local_0_buffer = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((SlagString*)context)->count));
  local_1_discard_next = false;
  local_2__reader2963 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),context,0,-1));
  while (CallFn____Logical(14,local_2__reader2963))
  {
    local_3_ch = CallFn____Char(29,local_2__reader2963);
    if (local_1_discard_next)
    {
      local_1_discard_next = false;
      goto next_9935;
    }
    if (((((((SlagInt32)local_3_ch) >= 65) && (((SlagInt32)local_3_ch) <= 90)) || ((((SlagInt32)local_3_ch) >= 97) && (((SlagInt32)local_3_ch) <= 122))) || ((((SlagInt32)local_3_ch) >= 48) && (((SlagInt32)local_3_ch) <= 57))))
    {
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_buffer)->property_data,local_3_ch);
    }
    else
    {
      local_4_which_2966 = local_3_ch;
      if ((((SlagInt32)local_4_which_2966) == 60))
      {
        StringBuilder__print__String(local_0_buffer,str628.value);
        local_1_discard_next = true;
      }
      else if ((((SlagInt32)local_4_which_2966) == 62))
      {
        goto next_9935;
      }
      else if ((((SlagInt32)local_4_which_2966) == 44))
      {
        StringBuilder__print__String(local_0_buffer,str1289.value);
      }
      else if ((((SlagInt32)local_4_which_2966) == 43))
      {
        StringBuilder__print__String(local_0_buffer,str1290.value);
      }
      else if ((((SlagInt32)local_4_which_2966) == 45))
      {
        StringBuilder__print__String(local_0_buffer,str1291.value);
      }
      else if ((((SlagInt32)local_4_which_2966) == 42))
      {
        StringBuilder__print__String(local_0_buffer,str1292.value);
      }
      else if ((((SlagInt32)local_4_which_2966) == 47))
      {
        StringBuilder__print__String(local_0_buffer,str1293.value);
      }
      else if ((((SlagInt32)local_4_which_2966) == 37))
      {
        StringBuilder__print__String(local_0_buffer,str1294.value);
      }
      else if ((((SlagInt32)local_4_which_2966) == 94))
      {
        StringBuilder__print__String(local_0_buffer,str1295.value);
      }
      else if ((((SlagInt32)local_4_which_2966) == 38))
      {
        StringBuilder__print__String(local_0_buffer,str1296.value);
      }
      else if ((((SlagInt32)local_4_which_2966) == 124))
      {
        StringBuilder__print__String(local_0_buffer,str1297.value);
      }
      else if ((((SlagInt32)local_4_which_2966) == 126))
      {
        StringBuilder__print__String(local_0_buffer,str1298.value);
      }
      else if ((((SlagInt32)local_4_which_2966) == 33))
      {
        StringBuilder__print__String(local_0_buffer,str1299.value);
      }
      else
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_buffer)->property_data,((SlagChar)95));
      }
    }
    next_9935:;
  }
  end_9935:;
  return StringBuilder__to_String(local_0_buffer);
}

void String__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* String__type_name( SXCRef context )
{
  return str19.value;
}

static SlagObject* Token__init__Int32_String_ParsePos_String( SXCRef context, SlagInt32 local_0_type_4667, SXCRef local_1_filename, CompoundParsePos local_2_pos_4666, SXCRef local_3_content_4665 )
{
  SXCRef local_4_entry;

  ((ClassToken*)context)->property_type = local_0_type_4667;
  ((ClassToken*)context)->property_pos = local_2_pos_4666;
  sxc_write_ref( &(((ClassToken*)context)->property_content), local_3_content_4665 );
  local_4_entry = ((ClassMapping_of_String_and_Int32*)GenericHashTable_of_Object_and_Int32__find__Object(((ClassHashTable_of_String_and_Int32*)((ClassTokenManager*)sxc_singletons[2])->property_filenames)->property_data,local_1_filename));
  if ((local_4_entry != NULL))
  {
    ((ClassToken*)context)->property_file_index = ((ClassMapping_of_String_and_Int32*)local_4_entry)->property_value;
  }
  else
  {
    ((ClassToken*)context)->property_file_index = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_count;
    GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassTokenManager*)sxc_singletons[2])->property_filenames)->property_data,local_1_filename,((ClassToken*)context)->property_file_index);
    ArrayList_of_Object__add__Object(((ClassTokenManager*)sxc_singletons[2])->property_filename_list,local_1_filename);
  }
  return context;
}

static SlagObject* Token__create_duplicate( SXCRef context )
{
  return Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassToken*)context)->property_type,((ClassString*)((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)context)->property_file_index])))),((ClassToken*)context)->property_pos,((ClassToken*)context)->property_content);
}

SlagObject* Token__to_String( SXCRef context )
{
  SlagInt32 local_0_which_2378;
  SlagChar local_1_value;

  local_0_which_2378 = ((ClassToken*)context)->property_type;
  if ((local_0_which_2378 == ((ClassTokenManager*)sxc_singletons[2])->property_eof))
  {
    return str193.value;
  }
  else if ((local_0_which_2378 == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
  {
    return str194.value;
  }
  else if ((local_0_which_2378 == ((ClassTokenManager*)sxc_singletons[2])->property_comment))
  {
    return String__opADD__String(str195.value,((ClassToken*)context)->property_content);
  }
  else if ((local_0_which_2378 == ((ClassTokenManager*)sxc_singletons[2])->property_literal_string))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str196.value),((ClassToken*)context)->property_content),str196.value));
  }
  else if (((((((local_0_which_2378 == ((ClassTokenManager*)sxc_singletons[2])->property_identifier) || (local_0_which_2378 == ((ClassTokenManager*)sxc_singletons[2])->property_placeholder_id)) || (local_0_which_2378 == ((ClassTokenManager*)sxc_singletons[2])->property_literal_int)) || (local_0_which_2378 == ((ClassTokenManager*)sxc_singletons[2])->property_literal_hex_int)) || (local_0_which_2378 == ((ClassTokenManager*)sxc_singletons[2])->property_literal_real)) || (local_0_which_2378 == ((ClassTokenManager*)sxc_singletons[2])->property_literal_logical)))
  {
    return ((ClassToken*)context)->property_content;
  }
  else if ((local_0_which_2378 == ((ClassTokenManager*)sxc_singletons[2])->property_literal_char))
  {
    local_1_value = String__get__Int32(((ClassToken*)context)->property_content,0);
    if (((((SlagInt32)local_1_value) >= 32) && (((SlagInt32)local_1_value) <= 126)))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str197.value),((ClassToken*)context)->property_content),str197.value));
    }
    else
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str198.value),Global__to_String__Char(sxc_singletons[21],local_1_value)),str62.value));
    }
  }
  else
  {
    return ((ClassString*)GenericHashTable_of_Int32_and_Object__get__Int32(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)sxc_singletons[20])->property_reverse_keyword_lookup)->property_data,((ClassToken*)context)->property_type));
  }
}

void Token__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Token__type_name( SXCRef context )
{
  return str211.value;
}

static SlagObject* Cmd__init__Token( SXCRef context, SXCRef local_0_t_6333 )
{
  sxc_write_ref( &(((ClassCmd*)context)->property_t), local_0_t_6333 );
  return context;
}

static SlagObject* Cmd__type( SXCRef context )
{
  return NULL;
}

static SlagLogical Cmd__is_statement_list( SXCRef context )
{
  return false;
}

static SlagObject* Cmd__error__String( SXCRef context, SXCRef local_0_mesg )
{
  if ((((ClassCmd*)context)->property_t != NULL))
  {
    return ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmd*)context)->property_t,local_0_mesg));
  }
  return SlagError__init__String_String(type_ClassSlagError.create(),str477.value,local_0_mesg);
}

SlagObject* Cmd__to_String( SXCRef context )
{
  return String__opADD__String(CallFn____Object(25,context),str531.value);
}

static SlagObject* Cmd__finalize_calls( SXCRef context )
{
  Global__println__String(sxc_singletons[21],String__opADD__String(str1051.value,((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_full_signature));
  SLAG_THROW( Error__init__String(type_ClassError.create(),String__opADD__String(str1266.value,CallFn____Object(25,context))) );
}

static void Cmd__finalize_structure_info( SXCRef context )
{
  Global__println__String(sxc_singletons[21],String__opADD__String(str1051.value,((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_full_signature));
  SLAG_THROW( Error__init__String(type_ClassError.create(),String__opADD__String(str1265.value,CallFn____Object(25,context))) );
}

static void Cmd__group_dynamic_methods( SXCRef context )
{
  Global__println__String(sxc_singletons[21],String__opADD__String(str1051.value,((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_full_signature));
  SLAG_THROW( Error__init__String(type_ClassError.create(),String__opADD__String(str1274.value,CallFn____Object(25,context))) );
}

static SlagObject* Cmd__resolve( SXCRef context )
{
  Global__println__String(sxc_singletons[21],String__opADD__String(str1051.value,((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_full_signature));
  SLAG_THROW( Error__init__String(type_ClassError.create(),String__opADD__String(str1052.value,CallFn____Object(25,context))) );
}

static SlagObject* Cmd__optimize( SXCRef context )
{
  return context;
}

static SlagObject* Cmd__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  Global__println__String(sxc_singletons[21],String__opADD__String(str1051.value,((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_full_signature));
  SLAG_THROW( Error__init__String(type_ClassError.create(),String__opADD__String(str1271.value,CallFn____Object(25,context))) );
}

static SlagLogical Cmd__no_side_effects( SXCRef context )
{
  return (((sxc_instance_of(context,&type_ClassCmdThisReference) || sxc_instance_of(context,&type_ClassCmdSingletonReference)) || sxc_instance_of(context,&type_ClassCmdVarAccess)) || (sxc_instance_of(context,&type_ClassCmdLiteralPrimitive) || sxc_instance_of(context,&type_ClassCmdLiteralString)));
}

static void Cmd__write_etc( SXCRef context )
{
  SLAG_THROW( Error__init__String(type_ClassError.create(),String__opADD__String(str1384.value,CallFn____Object(25,context))) );
}

static SlagObject* Cmd__to_cpp( SXCRef context )
{
  SLAG_THROW( Error__init__String(type_ClassError.create(),String__opADD__String(str1629.value,CallFn____Object(25,context))) );
}

static SlagObject* Cmd__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(15,context);
}

static SlagObject* Cmd__to_cs( SXCRef context )
{
  SLAG_THROW( Error__init__String(type_ClassError.create(),String__opADD__String(str1911.value,CallFn____Object(25,context))) );
}

static SlagObject* Cmd__statement_to_cs( SXCRef context )
{
  return CallFn____Object(35,context);
}

static SlagObject* Cmd__to_java( SXCRef context )
{
  SLAG_THROW( Error__init__String(type_ClassError.create(),String__opADD__String(str2005.value,CallFn____Object(25,context))) );
}

static SlagObject* Cmd__statement_to_java( SXCRef context )
{
  return CallFn____Object(41,context);
}

void Cmd__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Cmd__type_name( SXCRef context )
{
  return str530.value;
}

static SlagObject* CmdBinary__init__Token_Cmd_Cmd( SXCRef context, SXCRef local_0_t_7722, SXCRef local_1_lhs_7721, SXCRef local_2_rhs_7720 )
{
  sxc_write_ref( &(((ClassCmdBinary*)context)->property_t), local_0_t_7722 );
  sxc_write_ref( &(((ClassCmdBinary*)context)->property_lhs), local_1_lhs_7721 );
  sxc_write_ref( &(((ClassCmdBinary*)context)->property_rhs), local_2_rhs_7720 );
  return context;
}

static SlagObject* CmdBinary__type( SXCRef context )
{
  return CallFn____Object(0,((ClassCmdBinary*)context)->property_lhs);
}

SlagObject* CmdBinary__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdBinary*)context)->property_lhs)),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdBinary*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdBinary__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdBinary*)context)->property_lhs), CallFn____Object(42,((ClassCmdBinary*)context)->property_lhs) );
  sxc_write_ref( &(((ClassCmdBinary*)context)->property_rhs), CallFn____Object(42,((ClassCmdBinary*)context)->property_rhs) );
  return context;
}

static void CmdBinary__finalize_structure_info( SXCRef context )
{
  CallFn__(21,((ClassCmdBinary*)context)->property_lhs);
  CallFn__(21,((ClassCmdBinary*)context)->property_rhs);
}

static void CmdBinary__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdBinary*)context)->property_lhs);
  CallFn__(38,((ClassCmdBinary*)context)->property_rhs);
}

static SlagObject* CmdBinary__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdBinary*)context)->property_lhs), CallFn__CmdList__Object(1,((ClassCmdBinary*)context)->property_lhs,local_0_arg_list) );
  sxc_write_ref( &(((ClassCmdBinary*)context)->property_rhs), CallFn__CmdList__Object(1,((ClassCmdBinary*)context)->property_rhs,local_0_arg_list) );
  return context;
}

void CmdBinary__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdBinary__type_name( SXCRef context )
{
  return str815.value;
}

static SlagObject* CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdLeftShifted.create(),((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_rhs));
}

static SlagObject* CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs), CallFn____Object(16,((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs) );
  sxc_write_ref( &(((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_rhs), CallFn____Object(16,((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_rhs) );
  SlagAnalyzer__require_standard_integer__Cmd(sxc_singletons[8],((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs);
  SlagAnalyzer__require_int32__Cmd(sxc_singletons[8],((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_rhs);
  return CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__optimize(context);
}

static SlagObject* CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__optimize( SXCRef context )
{
  SXCRef local_0_right;
  SXCRef local_1_left;
  SXCRef local_2_left;

  if ((sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    local_0_right = ((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_rhs;
    if (sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_1_left = ((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs;
      ((ClassCmdLiteralInt64*)local_1_left)->property_value = (((ClassCmdLiteralInt64*)local_1_left)->property_value<<((ClassCmdLiteralInt32*)local_0_right)->property_value);
      return ((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = (((ClassCmdLiteralInt32*)local_2_left)->property_value<<((ClassCmdLiteralInt32*)local_0_right)->property_value);
      return ((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_left_shifted)->property_ordinal);
  CallFn__(7,((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_lhs);
  CallFn__(7,((ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted*)context)->property_rhs);
}

void CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__type_name( SXCRef context )
{
  return str1083.value;
}

static SlagObject* CmdLeftShifted__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdLeftShifted*)context)->property_lhs)),str364.value),CallFn____Object(15,((ClassCmdLeftShifted*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdLeftShifted__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdLeftShifted*)context)->property_lhs)),str364.value),CallFn____Object(35,((ClassCmdLeftShifted*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdLeftShifted__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdLeftShifted*)context)->property_lhs)),str364.value),CallFn____Object(41,((ClassCmdLeftShifted*)context)->property_rhs)),str62.value));
}

void CmdLeftShifted__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLeftShifted__type_name( SXCRef context )
{
  return str1084.value;
}

static SlagInt32 GenericArray__count( SXCRef context )
{
  SLAG_PUSH_REF( context );
  GenericArray__count();
  return SLAG_POP_INT32();
}

static void GenericArray__copy_from__GenericArray_Int32_Int32_Int32( SXCRef context, SXCRef local_0_src_array, SlagInt32 local_1_src_index, SlagInt32 local_2_dest_index, SlagInt32 local_3_number )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_src_array );
  SLAG_PUSH_INT32( local_1_src_index );
  SLAG_PUSH_INT32( local_2_dest_index );
  SLAG_PUSH_INT32( local_3_number );
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32();
}

static void GenericArray__clear__Int32_Int32( SXCRef context, SlagInt32 local_0_first_index, SlagInt32 local_1_last_index )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_INT32( local_0_first_index );
  SLAG_PUSH_INT32( local_1_last_index );
  GenericArray__clear__Int32_Int32();
}

void GenericArray__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* GenericArray__type_name( SXCRef context )
{
  return str7.value;
}

static SlagObject* Array_of_BigInt__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_BigInt.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_BigInt__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_BigInt__type_name( SXCRef context )
{
  return str150.value;
}

SlagObject* ArrayList_of_BigInt__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count4717;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count4717 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count4717))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassBigInt*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_BigInt__init( SXCRef context )
{
  ArrayList_of_BigInt__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_BigInt__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_BigInt*)context)->property_data), type_ClassArray_of_BigInt.create(local_0_initial_capacity) );
  return context;
}

void ArrayList_of_BigInt__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_BigInt__add__BigInt( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_BigInt*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_BigInt__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_BigInt__init__Int32(type_ClassArrayList_of_BigInt.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_BigInt*)local_0_dup)->property_data,((ClassArrayList_of_BigInt*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_BigInt*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_BigInt__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_BigInt__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_BigInt__type_name( SXCRef context )
{
  return str151.value;
}

static SlagObject* Array_of_HashTableBin_of_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_HashTableBin_of_Object_and_Object.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_HashTableBin_of_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_HashTableBin_of_Object_and_Object__type_name( SXCRef context )
{
  return str56.value;
}

static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count3607;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count3607 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count3607))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassHashTableBin_of_Object_and_Object*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__init( SXCRef context )
{
  ArrayList_of_HashTableBin_of_Object_and_Object__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_HashTableBin_of_Object_and_Object*)context)->property_data), type_ClassArray_of_HashTableBin_of_Object_and_Object.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__create_reader( SXCRef context )
{
  return ArrayReader_of_HashTableBin_of_Object_and_Object__init__Collection_of_HashTableBin_of_Object_and_Object_Array_of_HashTableBin_of_Object_and_Object_Int32_Int32(type_ClassArrayReader_of_HashTableBin_of_Object_and_Object.create(),context,((ClassArrayList_of_HashTableBin_of_Object_and_Object*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_HashTableBin_of_Object_and_Object__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_HashTableBin_of_Object_and_Object__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_HashTableBin_of_Object_and_Object__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__add__HashTableBin_of_Object_and_Object( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_HashTableBin_of_Object_and_Object*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_HashTableBin_of_Object_and_Object__init__Int32(type_ClassArrayList_of_HashTableBin_of_Object_and_Object.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_HashTableBin_of_Object_and_Object*)local_0_dup)->property_data,((ClassArrayList_of_HashTableBin_of_Object_and_Object*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_HashTableBin_of_Object_and_Object*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_HashTableBin_of_Object_and_Object__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_HashTableBin_of_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_HashTableBin_of_Object_and_Object__type_name( SXCRef context )
{
  return str13.value;
}

static SlagObject* GenericHashTable_of_Object_and_Object__init( SXCRef context )
{
  GenericHashTable_of_Object_and_Object__init__Int32_Real64(context,16,sxc_int64_as_real64(0x4008000000000000LL));
  return context;
}

static SlagObject* GenericHashTable_of_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size_3627 )
{
  SlagInt32 local_2__local_3537;
  SlagInt32 local_3__last3538;

  ((ClassGenericHashTable_of_Object_and_Object*)context)->property_average_bin_size = local_1_average_bin_size_3627;
  local_0_num_bins = BitwiseOperations__rounded_up_to_power_of_two__Int32(sxc_singletons[15],local_0_num_bins);
  ((ClassGenericHashTable_of_Object_and_Object*)context)->property_hash_mask = (local_0_num_bins-1);
  ((ClassGenericHashTable_of_Object_and_Object*)context)->property_max_entries = (((SlagReal64)local_0_num_bins)*((ClassGenericHashTable_of_Object_and_Object*)context)->property_average_bin_size);
  sxc_write_ref( &(((ClassGenericHashTable_of_Object_and_Object*)context)->property_bins), ArrayList_of_HashTableBin_of_Object_and_Object__init(type_ClassArrayList_of_HashTableBin_of_Object_and_Object.create()) );
  local_2__local_3537 = 1;
  local_3__last3538 = local_0_num_bins;
  while ((local_2__local_3537 <= local_3__last3538))
  {
    ArrayList_of_Object__add__Object(((ClassGenericHashTable_of_Object_and_Object*)context)->property_bins,HashTableBin_of_Object_and_Object__init__Int32(type_ClassHashTableBin_of_Object_and_Object.create(),((SlagInt32)((ClassGenericHashTable_of_Object_and_Object*)context)->property_average_bin_size)));
    ++local_2__local_3537;
  }
  return context;
}

static void GenericHashTable_of_Object_and_Object__set__Object_Object( SXCRef context, SXCRef local_0_key, SXCRef local_1_value )
{
  if ((((SlagReal64)((ClassGenericHashTable_of_Object_and_Object*)context)->property_num_entries) == ((ClassGenericHashTable_of_Object_and_Object*)context)->property_max_entries))
  {
    GenericHashTable_of_Object_and_Object__expand_table(context);
  }
  if (HashTableBin_of_Object_and_Object__add_entry__Object_Object(GenericHashTable_of_Object_and_Object__get_bin__Object(context,local_0_key),local_0_key,local_1_value))
  {
    ++(((ClassGenericHashTable_of_Object_and_Object*)context)->property_num_entries);
  }
}

static void GenericHashTable_of_Object_and_Object__set__Mapping_of_Object_and_Object( SXCRef context, SXCRef local_0_entry )
{
  if ((((SlagReal64)((ClassGenericHashTable_of_Object_and_Object*)context)->property_num_entries) == ((ClassGenericHashTable_of_Object_and_Object*)context)->property_max_entries))
  {
    GenericHashTable_of_Object_and_Object__expand_table(context);
  }
  if (HashTableBin_of_Object_and_Object__add_entry__Mapping_of_Object_and_Object(GenericHashTable_of_Object_and_Object__get_bin__Object(context,((ClassMapping_of_Object_and_Object*)local_0_entry)->property_key),local_0_entry))
  {
    ++(((ClassGenericHashTable_of_Object_and_Object*)context)->property_num_entries);
  }
}

static SlagObject* GenericHashTable_of_Object_and_Object__get__Object( SXCRef context, SXCRef local_0_key )
{
  SXCRef local_1_entry;
  SXCRef local_2_null_result;

  local_1_entry = HashTableBin_of_Object_and_Object__find_entry__Object(GenericHashTable_of_Object_and_Object__get_bin__Object(context,local_0_key),local_0_key);
  if ((local_1_entry == NULL))
  {
    local_2_null_result = NULL;
    return local_2_null_result;
  }
  return ((ClassMapping_of_Object_and_Object*)local_1_entry)->property_value;
}

static SlagObject* GenericHashTable_of_Object_and_Object__find__Object( SXCRef context, SXCRef local_0_key )
{
  return HashTableBin_of_Object_and_Object__find_entry__Object(GenericHashTable_of_Object_and_Object__get_bin__Object(context,local_0_key),local_0_key);
}

static SlagLogical GenericHashTable_of_Object_and_Object__contains__Object( SXCRef context, SXCRef local_0_key )
{
  SXCRef local_1_entry;

  local_1_entry = HashTableBin_of_Object_and_Object__find_entry__Object(GenericHashTable_of_Object_and_Object__get_bin__Object(context,local_0_key),local_0_key);
  return (local_1_entry != NULL);
}

static SlagObject* GenericHashTable_of_Object_and_Object__remove__Object( SXCRef context, SXCRef local_0_key )
{
  SXCRef local_1_bin;
  SlagInt32 local_2_index;
  SXCRef local_3_null_result;

  local_1_bin = GenericHashTable_of_Object_and_Object__get_bin__Object(context,local_0_key);
  local_2_index = HashTableBin_of_Object_and_Object__index_of_entry__Object(local_1_bin,local_0_key);
  if ((local_2_index == -1))
  {
    local_3_null_result = NULL;
    return local_3_null_result;
  }
  --(((ClassGenericHashTable_of_Object_and_Object*)context)->property_num_entries);
  return ((ClassMapping_of_Object_and_Object*)((ClassMapping_of_Object_and_Object*)ArrayList_of_Object__remove__Int32(((ClassHashTableBin_of_Object_and_Object*)local_1_bin)->property_entries,local_2_index)))->property_value;
}

static SlagObject* GenericHashTable_of_Object_and_Object__get_bin__Object( SXCRef context, SXCRef local_0_key )
{
  return ((ClassHashTableBin_of_Object_and_Object*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)context)->property_bins))->property_data)->data))[(CallFn____Int32(43,local_0_key)&((ClassGenericHashTable_of_Object_and_Object*)context)->property_hash_mask)]));
}

static void GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object( SXCRef context, SXCRef local_0_other )
{
  SXCRef local_1__reader3547;
  SXCRef local_2_bin;
  SXCRef local_3__reader3548;
  SXCRef local_4_entry;

  local_1__reader3547 = ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)local_0_other)->property_bins);
  while (ArrayReader_of_HashTableBin_of_Object_and_Object__has_another(local_1__reader3547))
  {
    local_2_bin = ArrayReader_of_HashTableBin_of_Object_and_Object__read(local_1__reader3547);
    local_3__reader3548 = ArrayList_of_Mapping_of_Object_and_Object__create_reader(((ClassHashTableBin_of_Object_and_Object*)local_2_bin)->property_entries);
    while (ArrayReader_of_Mapping_of_Object_and_Object__has_another(local_3__reader3548))
    {
      local_4_entry = ArrayReader_of_Mapping_of_Object_and_Object__read(local_3__reader3548);
      GenericHashTable_of_Object_and_Object__set__Object_Object(context,((ClassMapping_of_Object_and_Object*)local_4_entry)->property_key,((ClassMapping_of_Object_and_Object*)local_4_entry)->property_value);
    }
  }
}

static void GenericHashTable_of_Object_and_Object__expand_table( SXCRef context )
{
  SXCRef local_0_new_table;
  SXCRef local_1__reader3550;
  SXCRef local_2_bin;
  SXCRef local_3__reader3551;
  SXCRef local_4_entry;

  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)context)->property_bins))->property_count >= ((ClassGenericHashTable_of_Object_and_Object*)context)->property_max_bins))
  {
    return;
  }
  local_0_new_table = GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)context)->property_bins))->property_count<<1),((ClassGenericHashTable_of_Object_and_Object*)context)->property_average_bin_size);
  local_1__reader3550 = ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)context)->property_bins);
  while (ArrayReader_of_HashTableBin_of_Object_and_Object__has_another(local_1__reader3550))
  {
    local_2_bin = ArrayReader_of_HashTableBin_of_Object_and_Object__read(local_1__reader3550);
    local_3__reader3551 = ArrayList_of_Mapping_of_Object_and_Object__create_reader(((ClassHashTableBin_of_Object_and_Object*)local_2_bin)->property_entries);
    while (ArrayReader_of_Mapping_of_Object_and_Object__has_another(local_3__reader3551))
    {
      local_4_entry = ArrayReader_of_Mapping_of_Object_and_Object__read(local_3__reader3551);
      GenericHashTable_of_Object_and_Object__set__Mapping_of_Object_and_Object(local_0_new_table,local_4_entry);
    }
  }
  sxc_write_ref( &(((ClassGenericHashTable_of_Object_and_Object*)context)->property_bins), ((ClassGenericHashTable_of_Object_and_Object*)local_0_new_table)->property_bins );
  ((ClassGenericHashTable_of_Object_and_Object*)context)->property_max_entries = ((ClassGenericHashTable_of_Object_and_Object*)local_0_new_table)->property_max_entries;
  ((ClassGenericHashTable_of_Object_and_Object*)context)->property_hash_mask = ((ClassGenericHashTable_of_Object_and_Object*)local_0_new_table)->property_hash_mask;
}

static SlagObject* GenericHashTable_of_Object_and_Object__to_String( SXCRef context )
{
  return CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)context)->property_bins))));
}

static SlagObject* GenericHashTable_of_Object_and_Object__values( SXCRef context )
{
  return HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)context)->property_bins));
}

void GenericHashTable_of_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassGenericHashTable_of_Object_and_Object*)context)->property_num_entries = 0;
  ((ClassGenericHashTable_of_Object_and_Object*)context)->property_max_bins = 512;
}

SlagObject* GenericHashTable_of_Object_and_Object__type_name( SXCRef context )
{
  return str14.value;
}

SlagObject* HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_MethodInfo__.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_MethodInfo__*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__type_name( SXCRef context )
{
  return str546.value;
}

void HashTable_of_String_and_MethodInfo____init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_MethodInfo____type_name( SXCRef context )
{
  return str547.value;
}

static SlagObject* MethodTable__get__String( SXCRef context, SXCRef local_0_key )
{
  SXCRef local_1_result;

  local_1_result = ((ClassMapping_of_String_and_MethodInfo__*)GenericHashTable_of_Object_and_Object__find__Object(((ClassMethodTable*)context)->property_data,local_0_key));
  if ((local_1_result != NULL))
  {
    return ((ClassMapping_of_String_and_MethodInfo__*)local_1_result)->property_value;
  }
  return ((ClassMethodTableManager*)sxc_singletons[9])->property_empty_list;
}

static void MethodTable__add__String_MethodInfo( SXCRef context, SXCRef local_0_key, SXCRef local_1_m )
{
  SXCRef local_2_entry;
  SXCRef local_3_list;
  SXCRef local_4_list;

  local_2_entry = ((ClassMapping_of_String_and_MethodInfo__*)GenericHashTable_of_Object_and_Object__find__Object(((ClassMethodTable*)context)->property_data,local_0_key));
  if ((local_2_entry != NULL))
  {
    local_3_list = ((ClassMapping_of_String_and_MethodInfo__*)local_2_entry)->property_value;
    if (!(ArrayList_of_MethodInfo__index_of__MethodInfo_Int32(local_3_list,local_1_m,0) >= 0))
    {
      ArrayList_of_Object__add__Object(local_3_list,local_1_m);
    }
  }
  else
  {
    local_4_list = ArrayList_of_MethodInfo__init(type_ClassArrayList_of_MethodInfo.create());
    ArrayList_of_Object__add__Object(local_4_list,local_1_m);
    GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassMethodTable*)context)->property_data,local_0_key,local_4_list);
  }
}

void MethodTable__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* MethodTable__type_name( SXCRef context )
{
  return str548.value;
}

static SlagObject* Array_of_Int64__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Int64.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Int64__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Int64__type_name( SXCRef context )
{
  return str8.value;
}

static void System__exit_program__Int32_String( SXCRef context, SlagInt32 local_0_error_code, SXCRef local_1_mesg )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_INT32( local_0_error_code );
  SLAG_PUSH_REF( local_1_mesg );
  System__exit_program__Int32_String();
}

static SlagObject* System__stack_trace( SXCRef context )
{
  return ((ClassString*)StackTrace__to_String__Logical(StackTrace__init(type_ClassStackTrace.create()),false));
}

static SlagObject* System__get__String( SXCRef context, SXCRef local_0_property_name )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_property_name );
  System__get__String();
  return SLAG_POP_REF();
}

static SlagObject* System__os( SXCRef context )
{
  SLAG_PUSH_REF( context );
  System__os();
  return SLAG_POP_REF();
}

static SlagObject* System__raw_exe_filepath( SXCRef context )
{
  SLAG_PUSH_REF( context );
  System__raw_exe_filepath();
  return SLAG_POP_REF();
}

static SlagObject* System__exe_filepath( SXCRef context )
{
  SXCRef local_0_base_name;
  SlagChar local_1_dir_separator;
  SXCRef local_2__reader2849;
  SXCRef local_3_search_path;
  SXCRef local_4_file;

  local_0_base_name = System__raw_exe_filepath(context);
  if ((String__opEQ__String(System__os(context),str125.value) && !String__ends_with__String(String__to_lowercase(local_0_base_name),str126.value)))
  {
    local_0_base_name = String__opADD__String(local_0_base_name,str126.value);
  }
  if (!String__opEQ__String(File__filename(File__init__String(type_ClassFile.create(),local_0_base_name)),local_0_base_name))
  {
    return File__absolute_filepath(File__init__String(type_ClassFile.create(),local_0_base_name));
  }
  local_0_base_name = String__opADD__String(StringManager__create_from__Char(sxc_singletons[18],FileManager__directory_separator(sxc_singletons[16])),local_0_base_name);
  local_1_dir_separator = FileManager__directory_separator(sxc_singletons[16]);
  local_2__reader2849 = ArrayList_of_String__create_reader(String__split__Char(System__get__String(context,str127.value),FileManager__path_separator(sxc_singletons[16])));
  while (ArrayReader_of_String__has_another(local_2__reader2849))
  {
    local_3_search_path = ArrayReader_of_String__read(local_2__reader2849);
    local_4_file = File__init__String(type_ClassFile.create(),String__opADD__String(local_3_search_path,local_0_base_name));
    if ((File__exists(local_4_file) && !File__is_directory(local_4_file)))
    {
      return File__absolute_filepath(local_4_file);
    }
  }
  return String__substring__Int32(local_0_base_name,1);
}

void System__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* System__type_name( SXCRef context )
{
  return str89.value;
}

static SlagObject* Array_of_Cmd__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Cmd.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Cmd__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Cmd__type_name( SXCRef context )
{
  return str673.value;
}

static SlagObject* ArrayList_of_Cmd__last( SXCRef context )
{
  return ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-1)]));
}

static SlagObject* ArrayList_of_Cmd__add__Readable_of_Cmd( SXCRef context, SXCRef local_0_source )
{
  SXCRef local_1__reader6357;
  SXCRef local_2_value;

  local_1__reader6357 = CallFn____Object(44,local_0_source);
  while (CallFn____Logical(14,local_1__reader6357))
  {
    local_2_value = CallFn____Object(45,local_1__reader6357);
    ArrayList_of_Object__add__Object(context,local_2_value);
  }
  return context;
}

static SlagObject* ArrayList_of_Cmd__format__String_String_String( SXCRef context, SXCRef local_0_prefix, SXCRef local_1_prepeat, SXCRef local_2_suffix )
{
  SXCRef local_3_buffer;
  SXCRef local_4__reader6373;
  SXCRef local_5_n;

  local_3_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  StringBuilder__print__String(local_3_buffer,local_0_prefix);
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count != 0))
  {
    TextWriter__print__Object(local_3_buffer,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[0])));
  }
  local_4__reader6373 = ArrayList_of_Cmd__from__Int32(context,1);
  while (CallFn____Logical(14,local_4__reader6373))
  {
    local_5_n = CallFn____Object(45,local_4__reader6373);
    StringBuilder__print__String(local_3_buffer,String__opADD__String(local_1_prepeat,Global__to_String__Object(sxc_singletons[21],local_5_n)));
  }
  StringBuilder__print__String(local_3_buffer,local_2_suffix);
  return StringBuilder__to_String(local_3_buffer);
}

static SlagObject* ArrayList_of_Cmd__format__String_String( SXCRef context, SXCRef local_0_str_format, SXCRef local_1_repeater_chars )
{
  SlagInt32 local_2_r1;
  SlagInt32 local_3_r2;
  SXCRef local_4_prefix;
  SXCRef local_5_suffix;
  SXCRef local_6_prepeat;

  local_2_r1 = 0;
  local_3_r2 = ((((SlagString*)local_0_str_format)->count)-1);
  while ((local_2_r1 < local_3_r2))
  {
    if ((String__index_of__Char_Int32(local_1_repeater_chars,String__get__Int32(local_0_str_format,local_2_r1),0) >= 0))
    {
      goto end_8866;
    }
    ++local_2_r1;
    next_8866:;
  }
  end_8866:;
  while ((local_3_r2 > 0))
  {
    if ((String__index_of__Char_Int32(local_1_repeater_chars,String__get__Int32(local_0_str_format,local_3_r2),0) >= 0))
    {
      goto end_8868;
    }
    --local_3_r2;
    next_8868:;
  }
  end_8868:;
  if ((((SlagInt32)String__get__Int32(local_0_str_format,(local_2_r1-1))) != 36))
  {
    SLAG_THROW( InvalidOperandError__init__String(type_ClassInvalidOperandError.create(),str65.value) );
  }
  if ((((SlagInt32)String__get__Int32(local_0_str_format,(local_3_r2-1))) != 36))
  {
    SLAG_THROW( InvalidOperandError__init__String(type_ClassInvalidOperandError.create(),str65.value) );
  }
  local_4_prefix = ((ClassString*)String__substring__Int32_Int32(local_0_str_format,0,((local_2_r1-1)-1)));
  local_5_suffix = String__substring__Int32(local_0_str_format,(local_3_r2+1));
  local_0_str_format = String__substring__Int32_Int32(local_0_str_format,(local_2_r1+1),(local_3_r2-1));
  local_6_prepeat = String__excluding_rightmost__Int32(local_0_str_format,1);
  return ArrayList_of_Cmd__format__String_String_String(context,local_4_prefix,local_6_prepeat,local_5_suffix);
}

static SlagObject* ArrayList_of_Cmd__subset__Int32_Int32( SXCRef context, SlagInt32 local_0_first_index, SlagInt32 local_1_last_index )
{
  SXCRef local_2_seq;
  SlagInt32 local_3_i;
  SlagInt32 local_4__last6380;

  local_2_seq = ArrayList_of_Cmd__init__Int32(type_ClassArrayList_of_Cmd.create(),(local_1_last_index-local_0_first_index));
  local_3_i = local_0_first_index;
  local_4__last6380 = local_1_last_index;
  while ((local_3_i <= local_4__last6380))
  {
    ArrayList_of_Object__add__Object(local_2_seq,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_3_i])));
    ++local_3_i;
  }
  return local_2_seq;
}

SlagObject* ArrayList_of_Cmd__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count6383;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count6383 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count6383))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Cmd__init( SXCRef context )
{
  CallFn__Int32(11,context,10);
  return context;
}

static SlagObject* ArrayList_of_Cmd__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Cmd*)context)->property_data), type_ClassArray_of_Cmd.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Cmd__create_reader( SXCRef context )
{
  return ArrayReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd_Int32_Int32(type_ClassArrayReader_of_Cmd.create(),context,((ClassArrayList_of_Cmd*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagObject* ArrayList_of_Cmd__from__Int32( SXCRef context, SlagInt32 local_0_starting_index )
{
  return ArrayReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd_Int32_Int32(type_ClassArrayReader_of_Cmd.create(),context,((ClassArrayList_of_Cmd*)context)->property_data,local_0_starting_index,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-local_0_starting_index));
}

static SlagObject* ArrayList_of_Cmd__reverse_order( SXCRef context )
{
  return ArrayReverseReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd(type_ClassArrayReverseReader_of_Cmd.create(),context,((ClassArrayList_of_Cmd*)context)->property_data);
}

static SlagInt32 ArrayList_of_Cmd__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_Cmd__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_Cmd__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_Cmd__add__Cmd( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_Cmd*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_Cmd__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Cmd__init__Int32(type_ClassArrayList_of_Cmd.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Cmd*)local_0_dup)->property_data,((ClassArrayList_of_Cmd*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_Cmd*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_Cmd__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_Cmd__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Cmd__type_name( SXCRef context )
{
  return str674.value;
}

static SlagObject* CmdStatementList__init__Token_Int32( SXCRef context, SXCRef local_0_t_6403, SlagInt32 local_1_num_statements )
{
  sxc_write_ref( &(((ClassCmdStatementList*)context)->property_t), local_0_t_6403 );
  sxc_write_ref( &(((ClassCmdStatementList*)context)->property_statements), ArrayList_of_Cmd__init__Int32(type_ClassArrayList_of_Cmd.create(),local_1_num_statements) );
  return context;
}

static SlagObject* CmdStatementList__init__Cmd( SXCRef context, SXCRef local_0_statement )
{
  sxc_write_ref( &(((ClassCmdStatementList*)context)->property_t), ((ClassCmd*)local_0_statement)->property_t );
  sxc_write_ref( &(((ClassCmdStatementList*)context)->property_statements), ArrayList_of_Cmd__init__Int32(type_ClassArrayList_of_Cmd.create(),1) );
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)context)->property_statements,local_0_statement);
  return context;
}

static SlagObject* CmdStatementList__create_duplicate( SXCRef context )
{
  SXCRef local_0_result;
  SXCRef local_1__reader2482;
  SXCRef local_2_s;

  local_0_result = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassCmdStatementList*)context)->property_t,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)context)->property_statements))->property_count);
  local_1__reader2482 = ArrayList_of_Cmd__create_reader(((ClassCmdStatementList*)context)->property_statements);
  while (CallFn____Logical(14,local_1__reader2482))
  {
    local_2_s = CallFn____Object(45,local_1__reader2482);
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_result)->property_statements,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_2_s));
  }
  return local_0_result;
}

static SlagLogical CmdStatementList__is_statement_list( SXCRef context )
{
  return true;
}

static SlagObject* CmdStatementList__trim_to_count( SXCRef context )
{
  ArrayList_of_Object__trim_to_count(((ClassCmdStatementList*)context)->property_statements);
  return context;
}

SlagObject* CmdStatementList__to_String( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader2483;
  SXCRef local_2_stmt;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_1__reader2483 = ArrayList_of_Cmd__create_reader(((ClassCmdStatementList*)context)->property_statements);
  while (CallFn____Logical(14,local_1__reader2483))
  {
    local_2_stmt = CallFn____Object(45,local_1__reader2483);
    TextWriter__println__String(local_0_buffer,String__opADD__String(str69.value,Global__to_String__Object(sxc_singletons[21],local_2_stmt)));
  }
  return StringBuilder__to_String(local_0_buffer);
}

static SlagObject* CmdStatementList__resolve( SXCRef context )
{
  SXCRef local_0_work_list;
  SXCRef local_1__reader2484;
  SXCRef local_2_cmd;
  SXCRef local_3_result;

  local_0_work_list = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdStatementList*)context)->property_statements);
  ArrayList_of_Object__clear(((ClassCmdStatementList*)context)->property_statements);
  local_1__reader2484 = ArrayList_of_Cmd__create_reader(local_0_work_list);
  while (CallFn____Logical(14,local_1__reader2484))
  {
    local_2_cmd = CallFn____Object(45,local_1__reader2484);
    local_3_result = CallFn____Object(16,local_2_cmd);
    if ((local_3_result != NULL))
    {
      if (CallFn____Logical(27,local_3_result))
      {
        ArrayList_of_Cmd__add__Readable_of_Cmd(((ClassCmdStatementList*)context)->property_statements,((ClassCmdStatementList*)local_3_result)->property_statements);
      }
      else
      {
        ArrayList_of_Object__add__Object(((ClassCmdStatementList*)context)->property_statements,local_3_result);
      }
    }
  }
  return context;
}

static SlagObject* CmdStatementList__finalize_calls( SXCRef context )
{
  SXCRef local_0_work_list;
  SXCRef local_1__reader2487;
  SXCRef local_2_cmd;
  SXCRef local_3_result;

  local_0_work_list = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdStatementList*)context)->property_statements);
  ArrayList_of_Object__clear(((ClassCmdStatementList*)context)->property_statements);
  local_1__reader2487 = ArrayList_of_Cmd__create_reader(local_0_work_list);
  while (CallFn____Logical(14,local_1__reader2487))
  {
    local_2_cmd = CallFn____Object(45,local_1__reader2487);
    local_3_result = CallFn____Object(42,local_2_cmd);
    if ((local_3_result != NULL))
    {
      if (CallFn____Logical(27,local_3_result))
      {
        ArrayList_of_Cmd__add__Readable_of_Cmd(((ClassCmdStatementList*)context)->property_statements,((ClassCmdStatementList*)local_3_result)->property_statements);
      }
      else
      {
        ArrayList_of_Object__add__Object(((ClassCmdStatementList*)context)->property_statements,local_3_result);
      }
    }
  }
  return context;
}

static void CmdStatementList__finalize_structure_info( SXCRef context )
{
  SXCRef local_0__reader2490;
  SXCRef local_1_cmd;

  local_0__reader2490 = ArrayList_of_Cmd__create_reader(((ClassCmdStatementList*)context)->property_statements);
  while (CallFn____Logical(14,local_0__reader2490))
  {
    local_1_cmd = CallFn____Object(45,local_0__reader2490);
    CallFn__(21,local_1_cmd);
  }
}

static void CmdStatementList__group_dynamic_methods( SXCRef context )
{
  SXCRef local_0__reader2491;
  SXCRef local_1_cmd;

  local_0__reader2491 = ArrayList_of_Cmd__create_reader(((ClassCmdStatementList*)context)->property_statements);
  while (CallFn____Logical(14,local_0__reader2491))
  {
    local_1_cmd = CallFn____Object(45,local_0__reader2491);
    CallFn__(38,local_1_cmd);
  }
}

static SlagObject* CmdStatementList__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  return CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)context)->property_statements))->property_data)->data))[0]))),local_0_arg_list);
}

static void CmdStatementList__write_etc( SXCRef context )
{
  SXCRef local_0__reader2916;
  SXCRef local_1_statement;

  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)context)->property_statements))->property_count);
  local_0__reader2916 = ArrayList_of_Cmd__create_reader(((ClassCmdStatementList*)context)->property_statements);
  while (CallFn____Logical(14,local_0__reader2916))
  {
    local_1_statement = CallFn____Object(45,local_0__reader2916);
    ETCWriter__write_source_position__Token(sxc_singletons[13],((ClassCmd*)local_1_statement)->property_t);
    CallFn__(7,local_1_statement);
  }
}

static SlagObject* CmdStatementList__to_cpp( SXCRef context )
{
  SXCRef local_0__reader2917;
  SXCRef local_1_statement;
  SXCRef local_2_st;

  local_0__reader2917 = ArrayList_of_Cmd__create_reader(((ClassCmdStatementList*)context)->property_statements);
  while (CallFn____Logical(14,local_0__reader2917))
  {
    local_1_statement = CallFn____Object(45,local_0__reader2917);
    local_2_st = CallFn____Object(12,local_1_statement);
    if ((local_2_st != NULL))
    {
      CPPWriter__print__String(sxc_singletons[11],local_2_st);
      CPPWriter__println__Char(sxc_singletons[11],((SlagChar)59));
    }
  }
  return NULL;
}

static SlagObject* CmdStatementList__to_cs( SXCRef context )
{
  SXCRef local_0__reader2919;
  SXCRef local_1_statement;
  SXCRef local_2_st;

  local_0__reader2919 = ArrayList_of_Cmd__create_reader(((ClassCmdStatementList*)context)->property_statements);
  while (CallFn____Logical(14,local_0__reader2919))
  {
    local_1_statement = CallFn____Object(45,local_0__reader2919);
    local_2_st = CallFn____Object(33,local_1_statement);
    if ((local_2_st != NULL))
    {
      CSWriter__print__String(sxc_singletons[28],local_2_st);
      CSWriter__println__Char(sxc_singletons[28],((SlagChar)59));
    }
  }
  return NULL;
}

static SlagObject* CmdStatementList__to_java( SXCRef context )
{
  SXCRef local_0__reader2921;
  SXCRef local_1_statement;
  SXCRef local_2_st;

  local_0__reader2921 = ArrayList_of_Cmd__create_reader(((ClassCmdStatementList*)context)->property_statements);
  while (CallFn____Logical(14,local_0__reader2921))
  {
    local_1_statement = CallFn____Object(45,local_0__reader2921);
    local_2_st = CallFn____Object(6,local_1_statement);
    if ((local_2_st != NULL))
    {
      JavaWriter__print__String(sxc_singletons[19],local_2_st);
      JavaWriter__println__Char(sxc_singletons[19],((SlagChar)59));
    }
  }
  return NULL;
}

void CmdStatementList__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdStatementList__type_name( SXCRef context )
{
  return str713.value;
}

static SlagInt32 Qualifiers__opCMP__Qualifiers( SXCRef context, SXCRef local_0_other )
{
  SlagInt32 local_1_a;
  SlagInt32 local_2_b;

  local_1_a = ((ClassQualifiers*)context)->property_ordinal;
  local_2_b = ((ClassQualifiers*)local_0_other)->property_ordinal;
  if ((local_1_a < local_2_b))
  {
    return -1;
  }
  if ((local_1_a == local_2_b))
  {
    return 0;
  }
  return 1;
}

static SlagInt32 Qualifiers__hash_code( SXCRef context )
{
  return ((ClassQualifiers*)context)->property_ordinal;
}

SlagObject* Qualifiers__init( SXCRef context )
{
  if ((((ClassQualifiersManager*)sxc_singletons[1])->property_default_next_flag == 0))
  {
    ((ClassQualifiersManager*)sxc_singletons[1])->property_default_next_flag = 1;
  }
  ((ClassQualifiers*)context)->property_flags = ((ClassQualifiersManager*)sxc_singletons[1])->property_default_next_flag;
  ((ClassQualifiersManager*)sxc_singletons[1])->property_default_next_flag = (((ClassQualifiersManager*)sxc_singletons[1])->property_default_next_flag<<1);
  return context;
}

static SlagObject* Qualifiers__init__Int32( SXCRef context, SlagInt32 local_0_flags_5554 )
{
  ((ClassQualifiers*)context)->property_flags = local_0_flags_5554;
  if ((((ClassQualifiersManager*)sxc_singletons[1])->property_default_next_flag == 0))
  {
    ((ClassQualifiersManager*)sxc_singletons[1])->property_default_next_flag = ((ClassQualifiers*)context)->property_flags;
  }
  ((ClassQualifiersManager*)sxc_singletons[1])->property_default_next_flag = (((ClassQualifiersManager*)sxc_singletons[1])->property_default_next_flag<<1);
  return context;
}

static SlagObject* Qualifiers__init__Qualifiers( SXCRef context, SXCRef local_0_existing )
{
  Qualifiers__init__Int32(context,((ClassQualifiers*)local_0_existing)->property_flags);
  return context;
}

static SlagLogical Qualifiers__opEQ__Object( SXCRef context, SXCRef local_0_other )
{
  if (sxc_instance_of(local_0_other,&type_ClassQualifiers))
  {
    return (((ClassQualifiers*)context)->property_flags == ((ClassQualifiers*)local_0_other)->property_flags);
  }
  return false;
}

SlagObject* Qualifiers__to_String( SXCRef context )
{
  SXCRef local_0_result;
  SXCRef local_1__reader5381;
  SXCRef local_2_category;

  local_0_result = NULL;
  local_1__reader5381 = ArrayList_of_Qualifiers__create_reader(((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_by_ordinal);
  while (ArrayReader_of_Qualifiers__has_another(local_1__reader5381))
  {
    local_2_category = ArrayReader_of_Qualifiers__read(local_1__reader5381);
    if (((((ClassQualifiers*)local_2_category)->property_flags&((ClassQualifiers*)context)->property_flags) != 0))
    {
      if ((local_0_result == NULL))
      {
        local_0_result = ((ClassQualifiers*)local_2_category)->property_name;
      }
      else
      {
        local_0_result = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_0_result),str395.value),((ClassQualifiers*)local_2_category)->property_name));
      }
    }
  }
  return local_0_result;
}

void Qualifiers__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Qualifiers__type_name( SXCRef context )
{
  return str528.value;
}

static SlagObject* Array_of_ArrayList_of_Token__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_ArrayList_of_Token.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_ArrayList_of_Token__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_ArrayList_of_Token__type_name( SXCRef context )
{
  return str565.value;
}

SlagObject* ArrayList_of_ArrayList_of_Token__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count5997;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count5997 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count5997))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassArrayList_of_Token*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_ArrayList_of_Token__init( SXCRef context )
{
  ArrayList_of_ArrayList_of_Token__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_ArrayList_of_Token__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_ArrayList_of_Token*)context)->property_data), type_ClassArray_of_ArrayList_of_Token.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_ArrayList_of_Token__create_reader( SXCRef context )
{
  return ArrayReader_of_ArrayList_of_Token__init__Collection_of_ArrayList_of_Token_Array_of_ArrayList_of_Token_Int32_Int32(type_ClassArrayReader_of_ArrayList_of_Token.create(),context,((ClassArrayList_of_ArrayList_of_Token*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_ArrayList_of_Token__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_ArrayList_of_Token__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_ArrayList_of_Token__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_ArrayList_of_Token__add__ArrayList_of_Token( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_ArrayList_of_Token*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_ArrayList_of_Token__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_ArrayList_of_Token__init__Int32(type_ClassArrayList_of_ArrayList_of_Token.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_ArrayList_of_Token*)local_0_dup)->property_data,((ClassArrayList_of_ArrayList_of_Token*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_ArrayList_of_Token*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_ArrayList_of_Token__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_ArrayList_of_Token__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_ArrayList_of_Token__type_name( SXCRef context )
{
  return str566.value;
}

static SlagObject* Array_of_TypeInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_TypeInfo.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_TypeInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_TypeInfo__type_name( SXCRef context )
{
  return str484.value;
}

static SlagInt32 ArrayList_of_TypeInfo__index_of__TypeInfo_Int32( SXCRef context, SXCRef local_0_value, SlagInt32 local_1_starting_index )
{
  SlagInt32 local_2_i;
  SlagInt32 local_3__last5743;

  local_2_i = local_1_starting_index;
  local_3__last5743 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  while ((local_2_i < local_3__last5743))
  {
    if ((((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_2_i])) == local_0_value))
    {
      return local_2_i;
    }
    ++local_2_i;
  }
  return -1;
}

static SlagObject* ArrayList_of_TypeInfo__add__Readable_of_TypeInfo( SXCRef context, SXCRef local_0_source )
{
  SXCRef local_1__reader5715;
  SXCRef local_2_value;

  local_1__reader5715 = CallFn____Object(44,local_0_source);
  while (CallFn____Logical(14,local_1__reader5715))
  {
    local_2_value = CallFn____Object(45,local_1__reader5715);
    ArrayList_of_Object__add__Object(context,local_2_value);
  }
  return context;
}

static SlagObject* ArrayList_of_TypeInfo__remove_last( SXCRef context )
{
  return ((ClassTypeInfo*)ArrayList_of_Object__remove__Int32(context,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-1)));
}

static SlagLogical ArrayList_of_TypeInfo__remove_value__TypeInfo( SXCRef context, SXCRef local_0_value )
{
  SlagInt32 local_1_index;

  local_1_index = ArrayList_of_TypeInfo__index_of__TypeInfo_Int32(context,local_0_value,0);
  if ((local_1_index == -1))
  {
    return false;
  }
  ArrayList_of_Object__remove__Int32(context,local_1_index);
  return true;
}

SlagObject* ArrayList_of_TypeInfo__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count5741;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count5741 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count5741))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_TypeInfo__init( SXCRef context )
{
  ArrayList_of_TypeInfo__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_TypeInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_TypeInfo*)context)->property_data), type_ClassArray_of_TypeInfo.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_TypeInfo__create_reader( SXCRef context )
{
  return ArrayReader_of_TypeInfo__init__Collection_of_TypeInfo_Array_of_TypeInfo_Int32_Int32(type_ClassArrayReader_of_TypeInfo.create(),context,((ClassArrayList_of_TypeInfo*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagObject* ArrayList_of_TypeInfo__from__Int32( SXCRef context, SlagInt32 local_0_starting_index )
{
  return ArrayReader_of_TypeInfo__init__Collection_of_TypeInfo_Array_of_TypeInfo_Int32_Int32(type_ClassArrayReader_of_TypeInfo.create(),context,((ClassArrayList_of_TypeInfo*)context)->property_data,local_0_starting_index,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-local_0_starting_index));
}

static SlagInt32 ArrayList_of_TypeInfo__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_TypeInfo__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_TypeInfo__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_TypeInfo__add__TypeInfo( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_TypeInfo*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_TypeInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_TypeInfo__init__Int32(type_ClassArrayList_of_TypeInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_TypeInfo*)local_0_dup)->property_data,((ClassArrayList_of_TypeInfo*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_TypeInfo*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_TypeInfo__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_TypeInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_TypeInfo__type_name( SXCRef context )
{
  return str557.value;
}

static SlagObject* Array_of_MethodInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_MethodInfo.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_MethodInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_MethodInfo__type_name( SXCRef context )
{
  return str490.value;
}

static SlagInt32 ArrayList_of_MethodInfo__index_of__MethodInfo_Int32( SXCRef context, SXCRef local_0_value, SlagInt32 local_1_starting_index )
{
  SlagInt32 local_2_i;
  SlagInt32 local_3__last5549;

  local_2_i = local_1_starting_index;
  local_3__last5549 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  while ((local_2_i < local_3__last5549))
  {
    if ((((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_2_i])) == local_0_value))
    {
      return local_2_i;
    }
    ++local_2_i;
  }
  return -1;
}

static void ArrayList_of_MethodInfo__swap__Int32_Int32( SXCRef context, SlagInt32 local_0_index_a, SlagInt32 local_1_index_b )
{
  SXCRef local_2_temp;

  local_2_temp = ((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_0_index_a]));
  sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))+local_0_index_a, ((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_index_b])) );
  sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))+local_1_index_b, local_2_temp );
}

static SlagObject* ArrayList_of_MethodInfo__add__Readable_of_MethodInfo( SXCRef context, SXCRef local_0_source )
{
  SXCRef local_1__reader5521;
  SXCRef local_2_value;

  local_1__reader5521 = CallFn____Object(44,local_0_source);
  while (CallFn____Logical(14,local_1__reader5521))
  {
    local_2_value = CallFn____Object(45,local_1__reader5521);
    ArrayList_of_Object__add__Object(context,local_2_value);
  }
  return context;
}

static SlagLogical ArrayList_of_MethodInfo__remove_value__MethodInfo( SXCRef context, SXCRef local_0_value )
{
  SlagInt32 local_1_index;

  local_1_index = ArrayList_of_MethodInfo__index_of__MethodInfo_Int32(context,local_0_value,0);
  if ((local_1_index == -1))
  {
    return false;
  }
  ArrayList_of_Object__remove__Int32(context,local_1_index);
  return true;
}

SlagObject* ArrayList_of_MethodInfo__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count5547;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count5547 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count5547))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_MethodInfo__init( SXCRef context )
{
  ArrayList_of_MethodInfo__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_MethodInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_MethodInfo*)context)->property_data), type_ClassArray_of_MethodInfo.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_MethodInfo__init__Int32_MethodInfo( SXCRef context, SlagInt32 local_0_initial_capacity, SXCRef local_1_content )
{
  SlagInt32 local_2__local_5499;
  SlagInt32 local_3__last5500;

  ArrayList_of_MethodInfo__init__Int32(context,local_0_initial_capacity);
  local_2__local_5499 = 1;
  local_3__last5500 = local_0_initial_capacity;
  while ((local_2__local_5499 <= local_3__last5500))
  {
    ArrayList_of_Object__add__Object(context,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_1_content));
    ++local_2__local_5499;
  }
  return context;
}

static SlagObject* ArrayList_of_MethodInfo__create_reader( SXCRef context )
{
  return ArrayReader_of_MethodInfo__init__Collection_of_MethodInfo_Array_of_MethodInfo_Int32_Int32(type_ClassArrayReader_of_MethodInfo.create(),context,((ClassArrayList_of_MethodInfo*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_MethodInfo__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_MethodInfo__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_MethodInfo__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_MethodInfo__add__MethodInfo( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_MethodInfo*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_MethodInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_MethodInfo__init__Int32(type_ClassArrayList_of_MethodInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_MethodInfo*)local_0_dup)->property_data,((ClassArrayList_of_MethodInfo*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_MethodInfo*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_MethodInfo__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_MethodInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_MethodInfo__type_name( SXCRef context )
{
  return str537.value;
}

static SlagObject* Array_of_PropertyInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_PropertyInfo.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_PropertyInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_PropertyInfo__type_name( SXCRef context )
{
  return str539.value;
}

static SlagObject* ArrayList_of_PropertyInfo__add__Readable_of_PropertyInfo( SXCRef context, SXCRef local_0_source )
{
  SXCRef local_1__reader6027;
  SXCRef local_2_value;

  local_1__reader6027 = CallFn____Object(44,local_0_source);
  while (CallFn____Logical(14,local_1__reader6027))
  {
    local_2_value = CallFn____Object(45,local_1__reader6027);
    ArrayList_of_Object__add__Object(context,local_2_value);
  }
  return context;
}

SlagObject* ArrayList_of_PropertyInfo__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count6053;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count6053 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count6053))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassPropertyInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_PropertyInfo__init( SXCRef context )
{
  ArrayList_of_PropertyInfo__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_PropertyInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_PropertyInfo*)context)->property_data), type_ClassArray_of_PropertyInfo.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_PropertyInfo__create_reader( SXCRef context )
{
  return ArrayReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo_Int32_Int32(type_ClassArrayReader_of_PropertyInfo.create(),context,((ClassArrayList_of_PropertyInfo*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagObject* ArrayList_of_PropertyInfo__from__Int32( SXCRef context, SlagInt32 local_0_starting_index )
{
  return ArrayReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo_Int32_Int32(type_ClassArrayReader_of_PropertyInfo.create(),context,((ClassArrayList_of_PropertyInfo*)context)->property_data,local_0_starting_index,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-local_0_starting_index));
}

static SlagObject* ArrayList_of_PropertyInfo__reverse_order( SXCRef context )
{
  return ArrayReverseReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo(type_ClassArrayReverseReader_of_PropertyInfo.create(),context,((ClassArrayList_of_PropertyInfo*)context)->property_data);
}

static SlagInt32 ArrayList_of_PropertyInfo__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_PropertyInfo__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_PropertyInfo__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_PropertyInfo__add__PropertyInfo( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_PropertyInfo*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_PropertyInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_PropertyInfo__init__Int32(type_ClassArrayList_of_PropertyInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_PropertyInfo*)local_0_dup)->property_data,((ClassArrayList_of_PropertyInfo*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_PropertyInfo*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_PropertyInfo__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_PropertyInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_PropertyInfo__type_name( SXCRef context )
{
  return str540.value;
}

static SlagObject* Array_of_CategoryInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_CategoryInfo.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_CategoryInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_CategoryInfo__type_name( SXCRef context )
{
  return str542.value;
}

static SlagObject* ArrayList_of_CategoryInfo__add__Readable_of_CategoryInfo( SXCRef context, SXCRef local_0_source )
{
  SXCRef local_1__reader6083;
  SXCRef local_2_value;

  local_1__reader6083 = CallFn____Object(44,local_0_source);
  while (CallFn____Logical(14,local_1__reader6083))
  {
    local_2_value = CallFn____Object(45,local_1__reader6083);
    ArrayList_of_Object__add__Object(context,local_2_value);
  }
  return context;
}

SlagObject* ArrayList_of_CategoryInfo__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count6109;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count6109 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count6109))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassCategoryInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_CategoryInfo__init( SXCRef context )
{
  ArrayList_of_CategoryInfo__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_CategoryInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_CategoryInfo*)context)->property_data), type_ClassArray_of_CategoryInfo.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_CategoryInfo__create_reader( SXCRef context )
{
  return ArrayReader_of_CategoryInfo__init__Collection_of_CategoryInfo_Array_of_CategoryInfo_Int32_Int32(type_ClassArrayReader_of_CategoryInfo.create(),context,((ClassArrayList_of_CategoryInfo*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagObject* ArrayList_of_CategoryInfo__from__Int32( SXCRef context, SlagInt32 local_0_starting_index )
{
  return ArrayReader_of_CategoryInfo__init__Collection_of_CategoryInfo_Array_of_CategoryInfo_Int32_Int32(type_ClassArrayReader_of_CategoryInfo.create(),context,((ClassArrayList_of_CategoryInfo*)context)->property_data,local_0_starting_index,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-local_0_starting_index));
}

static SlagInt32 ArrayList_of_CategoryInfo__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_CategoryInfo__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_CategoryInfo__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_CategoryInfo__add__CategoryInfo( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_CategoryInfo*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_CategoryInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_CategoryInfo__init__Int32(type_ClassArrayList_of_CategoryInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_CategoryInfo*)local_0_dup)->property_data,((ClassArrayList_of_CategoryInfo*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_CategoryInfo*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_CategoryInfo__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_CategoryInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_CategoryInfo__type_name( SXCRef context )
{
  return str543.value;
}

SlagObject* HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_PropertyInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_PropertyInfo*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

static SlagObject* HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__create_reader( SXCRef context )
{
  return ((AspectReader_of_PropertyInfo*)CoerceReader_of_PropertyInfo__init__Reader_of_Object(type_ClassCoerceReader_of_PropertyInfo.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__type_name( SXCRef context )
{
  return str544.value;
}

void HashTable_of_String_and_PropertyInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_PropertyInfo__type_name( SXCRef context )
{
  return str545.value;
}

SlagObject* HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_MethodInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_MethodInfo*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

static SlagObject* HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__create_reader( SXCRef context )
{
  return ((AspectReader_of_MethodInfo*)CoerceReader_of_MethodInfo__init__Reader_of_Object(type_ClassCoerceReader_of_MethodInfo.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__type_name( SXCRef context )
{
  return str550.value;
}

void HashTable_of_String_and_MethodInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_MethodInfo__type_name( SXCRef context )
{
  return str551.value;
}

static SlagObject* Array_of_TypeMapping__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_TypeMapping.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_TypeMapping__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_TypeMapping__type_name( SXCRef context )
{
  return str554.value;
}

SlagObject* ArrayList_of_TypeMapping__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count6168;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count6168 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count6168))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassTypeMapping*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_TypeMapping__init( SXCRef context )
{
  ArrayList_of_TypeMapping__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_TypeMapping__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_TypeMapping*)context)->property_data), type_ClassArray_of_TypeMapping.create(local_0_initial_capacity) );
  return context;
}

void ArrayList_of_TypeMapping__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_TypeMapping__add__TypeMapping( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_TypeMapping*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_TypeMapping__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_TypeMapping__init__Int32(type_ClassArrayList_of_TypeMapping.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_TypeMapping*)local_0_dup)->property_data,((ClassArrayList_of_TypeMapping*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_TypeMapping*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_TypeMapping__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_TypeMapping__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_TypeMapping__type_name( SXCRef context )
{
  return str555.value;
}

static SlagObject* TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token( SXCRef context, SXCRef local_0_t_6318, SXCRef local_1_name_6317, SXCRef local_2_qualifiers_6316, SXCRef local_3_substitution_tokens_6315 )
{
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_t), local_0_t_6318 );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_name), local_1_name_6317 );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_qualifiers), local_2_qualifiers_6316 );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_substitution_tokens), local_3_substitution_tokens_6315 );
  return context;
}

static SlagObject* TypeInfo__init__TypeInfo( SXCRef context, SXCRef local_0_existing )
{
  if ((context != local_0_existing))
  {
    sxc_write_ref( &(((ClassTypeInfo*)context)->property_t), ((ClassTypeInfo*)local_0_existing)->property_t );
    sxc_write_ref( &(((ClassTypeInfo*)context)->property_qualifiers), ((ClassTypeInfo*)local_0_existing)->property_qualifiers );
    ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(((ClassTypeInfo*)context)->property_methods,((ClassTypeInfo*)local_0_existing)->property_methods);
    ArrayList_of_PropertyInfo__add__Readable_of_PropertyInfo(((ClassTypeInfo*)context)->property_properties,((ClassTypeInfo*)local_0_existing)->property_properties);
  }
  return context;
}

static SlagObject* TypeInfo__base_name( SXCRef context )
{
  if ((((ClassTypeInfo*)context)->property_base_name != NULL))
  {
    return ((ClassTypeInfo*)context)->property_base_name;
  }
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_base_name), String__before_first__Char(((ClassTypeInfo*)context)->property_name,((SlagChar)60)) );
  return ((ClassTypeInfo*)context)->property_base_name;
}

static SlagLogical TypeInfo__is_valid_type( SXCRef context )
{
  if ((((ClassTypeInfo*)context)->property_qualifiers != NULL))
  {
    return true;
  }
  return (((ClassMapping_of_String_and_TypeTemplate__*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_TypeTemplate__*)((ClassTypeManager*)sxc_singletons[7])->property_templates)->property_data,TypeInfo__base_name(context))) != NULL);
}

static SlagLogical TypeInfo__is_logical( SXCRef context )
{
  return (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0) && (context == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical));
}

static SlagLogical TypeInfo__is_numerical( SXCRef context )
{
  return (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0) && !TypeInfo__is_logical(context));
}

static SlagLogical TypeInfo__is_real( SXCRef context )
{
  return (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0) && ((context == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64) || (context == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32)));
}

static SlagLogical TypeInfo__is_integer( SXCRef context )
{
  return (TypeInfo__is_numerical(context) && !TypeInfo__is_real(context));
}

static SlagObject* TypeInfo__error__String( SXCRef context, SXCRef local_0_message )
{
  if ((((ClassTypeInfo*)context)->property_t == NULL))
  {
    return SlagError__init__String_String(type_ClassSlagError.create(),str477.value,local_0_message);
  }
  return ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeInfo*)context)->property_t,local_0_message));
}

SlagObject* TypeInfo__to_String( SXCRef context )
{
  return ((ClassTypeInfo*)context)->property_name;
}

static void TypeInfo__display( SXCRef context )
{
  SXCRef local_0__reader1891;
  SXCRef local_1_base_type;
  SXCRef local_2__reader1894;
  SXCRef local_3_s;
  SXCRef local_4__reader1896;
  SXCRef local_5_p;
  SXCRef local_6__reader1897;
  SXCRef local_7_m;

  if ((TypeInfo__base_class(context) != NULL))
  {
    Global__print__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassTypeInfo*)context)->property_name),str1309.value),Global__to_String__Object(sxc_singletons[21],TypeInfo__base_class(context)))));
  }
  else
  {
    Global__print__String(sxc_singletons[21],((ClassTypeInfo*)context)->property_name);
  }
  local_0__reader1891 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_flat_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader1891))
  {
    local_1_base_type = ArrayReader_of_TypeInfo__read(local_0__reader1891);
    if (!((((ClassQualifiers*)((ClassTypeInfo*)local_1_base_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      Global__print__String(sxc_singletons[21],((ClassString*)String__opADD__String(str634.value,Global__to_String__Object(sxc_singletons[21],local_1_base_type))));
    }
  }
  Global__print__String(sxc_singletons[21],str46.value);
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_singletons))->property_count != 0))
  {
    Global__println__String(sxc_singletons[21],str1360.value);
    local_2__reader1894 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_singletons);
    while (ArrayReader_of_TypeInfo__has_another(local_2__reader1894))
    {
      local_3_s = ArrayReader_of_TypeInfo__read(local_2__reader1894);
      Global__println__String(sxc_singletons[21],((ClassString*)String__opADD__String(str1361.value,Global__to_String__Object(sxc_singletons[21],local_3_s))));
    }
  }
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_properties))->property_count != 0))
  {
    Global__println__String(sxc_singletons[21],str1362.value);
    local_4__reader1896 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)context)->property_properties);
    while (CallFn____Logical(14,local_4__reader1896))
    {
      local_5_p = CallFn____Object(45,local_4__reader1896);
      Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1361.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassPropertyInfo*)local_5_p)->property_index,10))),str607.value),((ClassPropertyInfo*)local_5_p)->property_name),str1309.value),Global__to_String__Object(sxc_singletons[21],((ClassPropertyInfo*)local_5_p)->property_type))));
    }
  }
  Global__println__String(sxc_singletons[21],str1005.value);
  local_6__reader1897 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)context)->property_methods);
  while (ArrayReader_of_MethodInfo__has_another(local_6__reader1897))
  {
    local_7_m = ArrayReader_of_MethodInfo__read(local_6__reader1897);
    Global__println__String(sxc_singletons[21],String__opADD__String(str1363.value,((ClassMethodInfo*)local_7_m)->property_signature));
  }
}

static SlagObject* TypeInfo__generic_type( SXCRef context )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return ((ClassTypeManager*)sxc_singletons[7])->property_type_object;
  }
  else
  {
    return context;
  }
}

static SlagObject* TypeInfo__base_class( SXCRef context )
{
  SXCRef local_0_type;

  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_base_types))->property_count == 0))
  {
    return NULL;
  }
  local_0_type = ((ClassTypeInfo*)((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_base_types))->property_data)->data))[0])));
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    return local_0_type;
  }
  return NULL;
}

static void TypeInfo__discover_runtime_types( SXCRef context )
{
  SlagLogical local_0_parent_is_runtime;
  SXCRef local_1__reader1902;
  SXCRef local_2_base_type;
  SlagLogical local_3_found_init;
  SlagLogical local_4_found_default_init;
  SXCRef local_5__reader1907;
  SXCRef local_6_m;
  SXCRef local_7_buffer;
  SXCRef local_8_parser;

  if (((ClassTypeInfo*)context)->property_runtime_check)
  {
    return;
  }
  ((ClassTypeInfo*)context)->property_runtime_check = true;
  local_0_parent_is_runtime = false;
  local_1__reader1902 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_1__reader1902))
  {
    local_2_base_type = ArrayReader_of_TypeInfo__read(local_1__reader1902);
    if (((((ClassTypeInfo*)local_2_base_type)->property_qualifiers != NULL) && ((((ClassQualifiers*)((ClassTypeInfo*)local_2_base_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0)))
    {
      TypeInfo__discover_runtime_types(local_2_base_type);
      if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_2_base_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_runtime)->property_flags))))->property_flags == 0))
      {
        local_0_parent_is_runtime = true;
        sxc_write_ref( &(((ClassTypeInfo*)context)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_runtime)->property_flags))) );
        goto end_8467;
      }
    }
    next_8467:;
  }
  end_8467:;
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_runtime)->property_flags))))->property_flags == 0))
  {
    {
      if (!local_0_parent_is_runtime) goto satisfied_8471;
      local_3_found_init = false;
      local_4_found_default_init = false;
      local_5__reader1907 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)context)->property_methods);
      while (ArrayReader_of_MethodInfo__has_another(local_5__reader1907))
      {
        local_6_m = ArrayReader_of_MethodInfo__read(local_5__reader1907);
        if (String__opEQ__String(((ClassMethodInfo*)local_6_m)->property_name,str667.value))
        {
          local_3_found_init = true;
          if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_6_m)->property_parameters))->property_count == 0))
          {
            local_4_found_default_init = true;
            goto end_8472;
          }
        }
        next_8472:;
      }
      end_8472:;
      if (!(local_3_found_init && !local_4_found_default_init)) goto unsatisfied_8471;
      satisfied_8471:;
      {
        ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_base_types,TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassTypeInfo*)context)->property_t,str1002.value,NULL));
      }
      goto end_8471;
      unsatisfied_8471:;
    }
    end_8471:;
    sxc_write_ref( &(((ClassTypeInfo*)context)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))) );
    local_7_buffer = StringBuilder__init(type_ClassStringBuilder.create());
    TextWriter__println__String(local_7_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1003.value),((ClassTypeInfo*)context)->property_name),str1004.value)));
    TextWriter__println__String(local_7_buffer,str1005.value);
    TextWriter__println__String(local_7_buffer,str1006.value);
    CallFn__Char(18,local_7_buffer,((SlagChar)10));
    TextWriter__println__String(local_7_buffer,str1007.value);
    TextWriter__println__String(local_7_buffer,String__opADD__String(String__opADD__String(str1008.value,((ClassTypeInfo*)context)->property_name),str1009.value));
    CallFn__Char(18,local_7_buffer,((SlagChar)10));
    TextWriter__println__String(local_7_buffer,str1010.value);
    TextWriter__println__String(local_7_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1011.value),((ClassTypeInfo*)context)->property_name),str196.value)));
    CallFn__Char(18,local_7_buffer,((SlagChar)10));
    TextWriter__println__String(local_7_buffer,str269.value);
    local_8_parser = SlagParser__init__TokenReader(type_ClassSlagParser.create(),SlagPreprocessor__init__String_String(type_ClassSlagPreprocessor.create(),str1012.value,StringBuilder__to_String(local_7_buffer)));
    SlagParser__parse_next(local_8_parser);
  }
}

static void TypeInfo__organize( SXCRef context )
{
  SXCRef local_0_entry;
  SXCRef local_1_mgr;
  SXCRef local_2__reader1916;
  SXCRef local_3_cat;
  SXCRef local_4_cat_name;
  SXCRef local_5_assign;
  SXCRef local_6__reader1918;
  SXCRef local_7_m;
  SXCRef local_8_m;
  SXCRef local_9_base_cls;
  SXCRef local_10__reader1919;
  SXCRef local_11_base_type;
  SXCRef local_12__reader1926;
  SXCRef local_13_base_type;
  SXCRef local_14__reader1929;
  SXCRef local_15_base_type;
  SXCRef local_16_actual_type;
  SXCRef local_17__reader1934;
  SXCRef local_18_m;
  SXCRef local_19__reader1936;
  SXCRef local_20_base_type;

  if (((ClassTypeInfo*)context)->property_organized)
  {
    return;
  }
  ((ClassTypeInfo*)context)->property_organized = true;
  if ((((ClassTypeInfo*)context)->property_substitution_tokens != NULL))
  {
    local_0_entry = ((ClassMapping_of_String_and_TypeTemplate__*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_TypeTemplate__*)((ClassTypeManager*)sxc_singletons[7])->property_templates)->property_data,TypeInfo__base_name(context)));
    if ((local_0_entry != NULL))
    {
      TypeInfo__instantiate_templates__ArrayList_of_TypeTemplate(context,((ClassMapping_of_String_and_TypeTemplate__*)local_0_entry)->property_value);
    }
  }
  if ((((ClassTypeInfo*)context)->property_qualifiers == NULL))
  {
    if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_TypeTemplate__*)((ClassTypeManager*)sxc_singletons[7])->property_templates)->property_data,((ClassTypeInfo*)context)->property_name))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeInfo*)context)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str951.value),((ClassTypeInfo*)context)->property_name),str952.value)))) );
    }
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeInfo*)context)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str953.value),((ClassTypeInfo*)context)->property_name),str92.value)))) );
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_enum)->property_flags) != 0))
  {
    local_1_mgr = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassTypeInfo*)context)->property_t,str954.value,((ClassArrayList_of_ArrayList_of_Token*)((ClassArrayList_of_ArrayList_of_Token*)ArrayList_of_Object__add__Object(ArrayList_of_ArrayList_of_Token__init__Int32(type_ClassArrayList_of_ArrayList_of_Token.create(),1),((ClassArrayList_of_Token*)((ClassArrayList_of_Token*)ArrayList_of_Object__add__Object(ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),1),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_identifier,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)((ClassTypeInfo*)context)->property_t)->property_file_index]))),((ClassToken*)((ClassTypeInfo*)context)->property_t)->property_pos,((ClassTypeInfo*)context)->property_name))))))));
    TypeInfo__organize(local_1_mgr);
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_singletons,local_1_mgr);
    sxc_write_ref( &(((ClassTypeInfo*)context)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),~((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_enum)->property_flags)))->property_flags))) );
    sxc_write_ref( &(((ClassTypeInfo*)context)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags))) );
    local_2__reader1916 = ArrayList_of_CategoryInfo__create_reader(((ClassTypeInfo*)context)->property_categories);
    while (ArrayReader_of_CategoryInfo__has_another(local_2__reader1916))
    {
      local_3_cat = ArrayReader_of_CategoryInfo__read(local_2__reader1916);
      local_4_cat_name = ((ClassTypeInfo*)((ClassCmdConstruct*)((ClassCategoryInfo*)local_3_cat)->property_construct)->property_type_or_id)->property_name;
      local_5_assign = CmdInitialAssignment__init__Token_Cmd(type_ClassCmdInitialAssignment.create(),((ClassTypeInfo*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassTypeInfo*)context)->property_t,str955.value,CmdList__init__Cmd_Cmd(type_ClassCmdList.create(),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassTypeInfo*)context)->property_t,((ClassTypeInfo*)context)->property_name,((ClassCmdConstruct*)((ClassCategoryInfo*)local_3_cat)->property_construct)->property_args),CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),((ClassTypeInfo*)context)->property_t,local_4_cat_name,-1))));
      ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_1_mgr)->property_properties,PropertyInfo__init__Token_TypeInfo_Qualifiers_TypeInfo_String_Cmd_Int32(type_ClassPropertyInfo.create(),((ClassTypeInfo*)context)->property_t,local_1_mgr,((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public,context,local_4_cat_name,local_5_assign,-1));
    }
    ArrayList_of_Object__clear(((ClassTypeInfo*)context)->property_categories);
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_base_types,TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassTypeInfo*)context)->property_t,str956.value,((ClassArrayList_of_ArrayList_of_Token*)((ClassArrayList_of_ArrayList_of_Token*)ArrayList_of_Object__add__Object(ArrayList_of_ArrayList_of_Token__init__Int32(type_ClassArrayList_of_ArrayList_of_Token.create(),1),((ClassArrayList_of_Token*)((ClassArrayList_of_Token*)ArrayList_of_Object__add__Object(ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),1),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_identifier,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)((ClassTypeInfo*)context)->property_t)->property_file_index]))),((ClassToken*)((ClassTypeInfo*)context)->property_t)->property_pos,((ClassTypeInfo*)context)->property_name)))))))));
    {
      local_6__reader1918 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)context)->property_methods);
      while (ArrayReader_of_MethodInfo__has_another(local_6__reader1918))
      {
        local_7_m = ArrayReader_of_MethodInfo__read(local_6__reader1918);
        if (!!String__opEQ__String(((ClassMethodInfo*)local_7_m)->property_name,str667.value)) goto unsatisfied_8248;
      }
      satisfied_8248:;
      {
        local_8_m = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),((ClassTypeInfo*)context)->property_t,((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public,context,str667.value);
        sxc_write_ref( &(((ClassMethodInfo*)local_8_m)->property_parameters), ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),0) );
        sxc_write_ref( &(((ClassMethodInfo*)local_8_m)->property_body), CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassMethodInfo*)local_8_m)->property_t,0) );
        ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_methods,local_8_m);
      }
      goto end_8248;
      unsatisfied_8248:;
    }
    end_8248:;
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    TypeInfo__check_compound_dependencies(context);
  }
  local_9_base_cls = NULL;
  local_10__reader1919 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_10__reader1919))
  {
    local_11_base_type = ArrayReader_of_TypeInfo__read(local_10__reader1919);
    TypeInfo__organize(local_11_base_type);
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_11_base_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      if (((local_9_base_cls != NULL) && (local_9_base_cls != local_11_base_type)))
      {
        SLAG_THROW( TypeInfo__error__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str959.value),Global__to_String__Object(sxc_singletons[21],context)),str960.value),Global__to_String__Object(sxc_singletons[21],local_9_base_cls)),str961.value),Global__to_String__Object(sxc_singletons[21],local_11_base_type)),str962.value))) );
      }
      else
      {
        local_9_base_cls = local_11_base_type;
      }
    }
    else
    {
      if ((TypeInfo__base_class(local_11_base_type) != NULL))
      {
        if (((local_9_base_cls != NULL) && (local_9_base_cls != local_11_base_type)))
        {
          SLAG_THROW( TypeInfo__error__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str959.value),Global__to_String__Object(sxc_singletons[21],context)),str960.value),Global__to_String__Object(sxc_singletons[21],local_9_base_cls)),str961.value),Global__to_String__Object(sxc_singletons[21],TypeInfo__base_class(local_11_base_type))),str962.value))) );
        }
        else
        {
          local_9_base_cls = TypeInfo__base_class(local_11_base_type);
        }
      }
    }
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    if ((local_9_base_cls != NULL))
    {
      ArrayList_of_TypeInfo__remove_value__TypeInfo(((ClassTypeInfo*)context)->property_base_types,local_9_base_cls);
      ArrayList_of_Object__insert__Object_Int32(((ClassTypeInfo*)context)->property_base_types,local_9_base_cls,0);
    }
    else if ((context != ((ClassTypeManager*)sxc_singletons[7])->property_type_object))
    {
      TypeInfo__organize(((ClassTypeManager*)sxc_singletons[7])->property_type_object);
      ArrayList_of_Object__insert__Object_Int32(((ClassTypeInfo*)context)->property_base_types,((ClassTypeManager*)sxc_singletons[7])->property_type_object,0);
    }
  }
  ((ClassTypeInfo*)context)->property_finding_base_types = true;
  local_12__reader1926 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_12__reader1926))
  {
    local_13_base_type = ArrayReader_of_TypeInfo__read(local_12__reader1926);
    TypeInfo__collect_flat_base_types__TypeInfo(context,local_13_base_type);
  }
  ((ClassTypeInfo*)context)->property_finding_base_types = false;
  if (((TypeInfo__instance_of__TypeInfo(context,((ClassTypeManager*)sxc_singletons[7])->property_type_generic_array) && (context != ((ClassTypeManager*)sxc_singletons[7])->property_type_generic_array)) && (context != ((ClassTypeManager*)sxc_singletons[7])->property_type_null)))
  {
    sxc_write_ref( &(((ClassTypeInfo*)context)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_array)->property_flags))) );
    if ((String__index_of__String_Int32(((ClassTypeInfo*)context)->property_name,str964.value,0) == 0))
    {
      sxc_write_ref( &(((ClassTypeInfo*)context)->property_element_type), ((ClassTypeInfo*)((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_substitution_types))->property_data)->data))[0]))) );
    }
    else
    {
      local_14__reader1929 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_flat_base_types);
      while (ArrayReader_of_TypeInfo__has_another(local_14__reader1929))
      {
        local_15_base_type = ArrayReader_of_TypeInfo__read(local_14__reader1929);
        if ((String__index_of__String_Int32(((ClassTypeInfo*)local_15_base_type)->property_name,str964.value,0) == 0))
        {
          sxc_write_ref( &(((ClassTypeInfo*)context)->property_element_type), ((ClassTypeInfo*)((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_15_base_type)->property_substitution_types))->property_data)->data))[0]))) );
          goto end_8276;
        }
        next_8276:;
      }
      end_8276:;
      if ((((ClassTypeInfo*)context)->property_element_type == NULL))
      {
        SLAG_THROW( Error__init__String(type_ClassError.create(),str965.value) );
      }
    }
    if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassTypeInfo*)context)->property_element_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
    {
      sxc_write_ref( &(((ClassTypeInfo*)context)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_reference_array)->property_flags))) );
    }
  }
  if ((((((SlagString*)((ClassTypeInfo*)context)->property_name)->count) > 11) && (String__index_of__String_Int32(((ClassTypeInfo*)context)->property_name,str966.value,0) == 0)))
  {
    local_16_actual_type = ((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,String__substring__Int32(((ClassTypeInfo*)context)->property_name,11)));
    TypeInfo__organize(local_16_actual_type);
    local_17__reader1934 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)context)->property_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_17__reader1934))
    {
      local_18_m = ArrayReader_of_MethodInfo__read(local_17__reader1934);
      if ((String__opEQ__String(((ClassMethodInfo*)local_18_m)->property_name,str712.value) && (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_18_m)->property_parameters))->property_count == 0)))
      {
        local_19__reader1936 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_16_actual_type)->property_flat_base_types);
        while (ArrayReader_of_TypeInfo__has_another(local_19__reader1936))
        {
          local_20_base_type = ArrayReader_of_TypeInfo__read(local_19__reader1936);
          ArrayList_of_Object__add__Object(((ClassCmdStatementList*)((ClassMethodInfo*)local_18_m)->property_body)->property_statements,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassTypeInfo*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassTypeInfo*)context)->property_t,str967.value,NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassTypeInfo*)context)->property_t,str968.value,CmdList__init__Cmd(type_ClassCmdList.create(),CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),((ClassTypeInfo*)context)->property_t,((ClassTypeInfo*)local_20_base_type)->property_name,-1)))));
        }
        goto end_8281;
      }
      next_8281:;
    }
    end_8281:;
  }
}

static void TypeInfo__instantiate_templates__ArrayList_of_TypeTemplate( SXCRef context, SXCRef local_0_templates )
{
  SXCRef local_1_main_template;
  SXCRef local_2__reader1937;
  SXCRef local_3_template;
  SlagInt32 local_4__local_1941;
  SlagInt32 local_5__last1942;
  SXCRef local_6_mappings;
  SlagInt32 local_7_i;
  SXCRef local_8__reader1944;
  SXCRef local_9_st;
  SXCRef local_10_parser;
  SXCRef local_11__reader1945;
  SXCRef local_12_group;
  SXCRef local_13_type;
  SXCRef local_14__reader1947;
  SXCRef local_15_template;

  local_1_main_template = NULL;
  local_2__reader1937 = ArrayList_of_TypeTemplate__create_reader(local_0_templates);
  while (ArrayReader_of_TypeTemplate__has_another(local_2__reader1937))
  {
    local_3_template = ArrayReader_of_TypeTemplate__read(local_2__reader1937);
    if (!((((ClassQualifiers*)((ClassTypeTemplate*)local_3_template)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_augment)->property_flags) != 0))
    {
      if ((local_1_main_template != NULL))
      {
        SLAG_THROW( ((ClassSlagError*)PriorSlagError__init__Token_String_Token(type_ClassPriorSlagError.create(),((ClassTypeTemplate*)local_3_template)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str934.value),((ClassTypeTemplate*)local_3_template)->property_name),str935.value)),((ClassTypeTemplate*)local_1_main_template)->property_t)) );
      }
      local_1_main_template = local_3_template;
    }
    if ((((ClassTypeTemplate*)local_3_template)->property_placeholder_types == NULL))
    {
      sxc_write_ref( &(((ClassTypeTemplate*)local_3_template)->property_placeholder_types), ArrayList_of_String__init__Int32(type_ClassArrayList_of_String.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_substitution_tokens))->property_count) );
      local_4__local_1941 = 1;
      local_5__last1942 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_substitution_tokens))->property_count;
      while ((local_4__local_1941 <= local_5__last1942))
      {
        ArrayList_of_Object__add__Object(((ClassTypeTemplate*)local_3_template)->property_placeholder_types,str389.value);
        ++local_4__local_1941;
      }
    }
    else if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeTemplate*)local_3_template)->property_placeholder_types))->property_count != ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_substitution_tokens))->property_count))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeInfo*)context)->property_t,str936.value)) );
    }
  }
  if ((local_1_main_template == NULL))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeInfo*)context)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str937.value),String__before_first__String(((ClassTypeInfo*)context)->property_name,str364.value)),str938.value)))) );
  }
  local_6_mappings = HashTableBase_of_String_and_Token___and_Object_and_Object__init(type_ClassHashTable_of_String_and_Token__.create());
  local_7_i = 0;
  local_8__reader1944 = ArrayList_of_String__create_reader(((ClassTypeTemplate*)local_1_main_template)->property_placeholder_types);
  while (ArrayReader_of_String__has_another(local_8__reader1944))
  {
    local_9_st = ArrayReader_of_String__read(local_8__reader1944);
    GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_Token__*)local_6_mappings)->property_data,local_9_st,((ClassArrayList_of_Token*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_substitution_tokens))->property_data)->data))[local_7_i])));
    ++local_7_i;
  }
  GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_Token__*)local_6_mappings)->property_data,str929.value,((ClassArrayList_of_Token*)((ClassArrayList_of_Token*)ArrayList_of_Object__add__Object(ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),1),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_identifier,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)((ClassTypeInfo*)context)->property_t)->property_file_index]))),((ClassToken*)((ClassTypeInfo*)context)->property_t)->property_pos,((ClassTypeInfo*)context)->property_name)))));
  local_10_parser = SlagParser__init__TokenReader(type_ClassSlagParser.create(),NULL);
  SlagParser__parse_type_def__TokenReader_TypeInfo_Qualifiers_Int32_String(local_10_parser,TemplateReader__init__ArrayList_of_Token_HashTable_of_String_and_Token__(type_ClassTemplateReader.create(),((ClassTypeTemplate*)local_1_main_template)->property_definition,local_6_mappings),context,((ClassTypeTemplate*)local_1_main_template)->property_qualifiers,((ClassTypeTemplate*)local_1_main_template)->property_end_type,((ClassTypeTemplate*)local_1_main_template)->property_end_symbol);
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_substitution_types), ArrayList_of_TypeInfo__init__Int32(type_ClassArrayList_of_TypeInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_substitution_tokens))->property_count) );
  local_11__reader1945 = ArrayList_of_ArrayList_of_Token__create_reader(((ClassTypeInfo*)context)->property_substitution_tokens);
  while (ArrayReader_of_ArrayList_of_Token__has_another(local_11__reader1945))
  {
    local_12_group = ArrayReader_of_ArrayList_of_Token__read(local_11__reader1945);
    {
      if (!((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_12_group))->property_count >= 1) && (((ClassToken*)((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_12_group))->property_data)->data))[0])))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_identifier))) goto unsatisfied_8218;
      sxc_write_ref( &(((ClassSlagParser*)local_10_parser)->property_scanner), TemplateReader__init__ArrayList_of_Token_HashTable_of_String_and_Token__(type_ClassTemplateReader.create(),local_12_group,local_6_mappings) );
      local_13_type = SlagParser__parse_data_type(local_10_parser);
      if (!((((ClassTypeInfo*)local_13_type)->property_qualifiers != NULL) || GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_TypeTemplate__*)((ClassTypeManager*)sxc_singletons[7])->property_templates)->property_data,String__before_first__Char(((ClassTypeInfo*)local_13_type)->property_name,((SlagChar)60))))) goto unsatisfied_8218;
      TypeInfo__organize(local_13_type);
      ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_substitution_types,local_13_type);
      satisfied_8218:;
      goto end_8218;
      unsatisfied_8218:;
      {
        ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_substitution_types,NULL);
      }
    }
    end_8218:;
  }
  local_14__reader1947 = ArrayList_of_TypeTemplate__create_reader(local_0_templates);
  while (ArrayReader_of_TypeTemplate__has_another(local_14__reader1947))
  {
    local_15_template = ArrayReader_of_TypeTemplate__read(local_14__reader1947);
    if ((local_15_template != local_1_main_template))
    {
      TypeInfo__incorporate_specialized_augment__TypeTemplate_HashTable_of_String_and_Token__(context,local_15_template,local_6_mappings);
    }
  }
}

static void TypeInfo__incorporate_specialized_augment__TypeTemplate_HashTable_of_String_and_Token__( SXCRef context, SXCRef local_0_template, SXCRef local_1_mappings )
{
  SlagInt32 local_2_i;
  SlagInt32 local_3__count1949;
  SXCRef local_4_subst_type;
  SXCRef local_5_placeholder;
  SXCRef local_6_which_1952;
  SXCRef local_7_aug;
  SXCRef local_8_parser;
  SXCRef local_9__reader1966;
  SXCRef local_10_base_type;
  SXCRef local_11__reader1967;
  SXCRef local_12_s;
  SXCRef local_13__reader1968;
  SXCRef local_14_p;
  SXCRef local_15__reader1969;
  SXCRef local_16_m;

  {
    local_2_i = 0;
    local_3__count1949 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeTemplate*)local_0_template)->property_placeholder_types))->property_count;
    while ((local_2_i < local_3__count1949))
    {
      local_4_subst_type = ((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_substitution_types))->property_data)->data))[local_2_i]));
      local_5_placeholder = ((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeTemplate*)local_0_template)->property_placeholder_types))->property_data)->data))[local_2_i]));
      if ((((SlagInt32)String__get__Int32(local_5_placeholder,0)) == 36))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeTemplate*)local_0_template)->property_t,str939.value)) );
      }
      if ((!String__opEQ__String(local_5_placeholder,str389.value) && (local_4_subst_type == NULL)))
      {
        return;
      }
      local_6_which_1952 = local_5_placeholder;
      if (String__opEQ__String(local_6_which_1952,str389.value))
      {
        ++local_2_i;
        goto next_8223;
      }
      else if (String__opEQ__String(local_6_which_1952,str940.value))
      {
        if (!TypeInfo__is_numerical(local_4_subst_type))
        {
          return;
        }
      }
      else if (String__opEQ__String(local_6_which_1952,str941.value))
      {
        if (!TypeInfo__is_real(local_4_subst_type))
        {
          return;
        }
      }
      else if (String__opEQ__String(local_6_which_1952,str942.value))
      {
        if (!TypeInfo__is_integer(local_4_subst_type))
        {
          return;
        }
      }
      else if (String__opEQ__String(local_6_which_1952,str943.value))
      {
        if (!((((ClassQualifiers*)((ClassTypeInfo*)local_4_subst_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
        {
          return;
        }
      }
      else if (String__opEQ__String(local_6_which_1952,str268.value))
      {
        if (!((((ClassQualifiers*)((ClassTypeInfo*)local_4_subst_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
        {
          return;
        }
      }
      else if (String__opEQ__String(local_6_which_1952,str944.value))
      {
        if (!((((ClassQualifiers*)((ClassTypeInfo*)local_4_subst_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          return;
        }
      }
      else if (String__opEQ__String(local_6_which_1952,str945.value))
      {
        if (TypeInfo__is_numerical(local_4_subst_type))
        {
          return;
        }
      }
      else if (String__opEQ__String(local_6_which_1952,str946.value))
      {
        if (TypeInfo__is_real(local_4_subst_type))
        {
          return;
        }
      }
      else if (String__opEQ__String(local_6_which_1952,str947.value))
      {
        if (TypeInfo__is_integer(local_4_subst_type))
        {
          return;
        }
      }
      else if (String__opEQ__String(local_6_which_1952,str948.value))
      {
        if (((((ClassQualifiers*)((ClassTypeInfo*)local_4_subst_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
        {
          return;
        }
      }
      else if (String__opEQ__String(local_6_which_1952,str949.value))
      {
        if (((((ClassQualifiers*)((ClassTypeInfo*)local_4_subst_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
        {
          return;
        }
      }
      else if (String__opEQ__String(local_6_which_1952,str950.value))
      {
        if (((((ClassQualifiers*)((ClassTypeInfo*)local_4_subst_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          return;
        }
      }
      else
      {
        if (!String__opEQ__String(((ClassTypeInfo*)local_4_subst_type)->property_name,local_5_placeholder))
        {
          return;
        }
      }
      ++local_2_i;
      next_8223:;
    }
    end_8223:;
  }
  local_7_aug = TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),((ClassTypeTemplate*)local_0_template)->property_t,((ClassTypeTemplate*)local_0_template)->property_name,NULL,NULL);
  local_8_parser = SlagParser__init__TokenReader(type_ClassSlagParser.create(),NULL);
  SlagParser__parse_type_def__TokenReader_TypeInfo_Qualifiers_Int32_String(local_8_parser,TemplateReader__init__ArrayList_of_Token_HashTable_of_String_and_Token__(type_ClassTemplateReader.create(),((ClassTypeTemplate*)local_0_template)->property_definition,local_1_mappings),local_7_aug,((ClassTypeTemplate*)local_0_template)->property_qualifiers,((ClassTypeTemplate*)local_0_template)->property_end_type,((ClassTypeTemplate*)local_0_template)->property_end_symbol);
  local_7_aug = ((ClassTypeInfo*)((ClassTypeInfo*)ArrayList_of_Object__remove__Int32(((ClassTypeManager*)sxc_singletons[7])->property_augments,0)));
  local_9__reader1966 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_7_aug)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_9__reader1966))
  {
    local_10_base_type = ArrayReader_of_TypeInfo__read(local_9__reader1966);
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_base_types,local_10_base_type);
  }
  local_11__reader1967 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_7_aug)->property_singletons);
  while (ArrayReader_of_TypeInfo__has_another(local_11__reader1967))
  {
    local_12_s = ArrayReader_of_TypeInfo__read(local_11__reader1967);
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_singletons,local_12_s);
  }
  local_13__reader1968 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_7_aug)->property_properties);
  while (CallFn____Logical(14,local_13__reader1968))
  {
    local_14_p = CallFn____Object(45,local_13__reader1968);
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_properties,local_14_p);
    sxc_write_ref( &(((ClassPropertyInfo*)local_14_p)->property_type_context), context );
  }
  local_15__reader1969 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_7_aug)->property_methods);
  while (ArrayReader_of_MethodInfo__has_another(local_15__reader1969))
  {
    local_16_m = ArrayReader_of_MethodInfo__read(local_15__reader1969);
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_methods,local_16_m);
    sxc_write_ref( &(((ClassMethodInfo*)local_16_m)->property_type_context), context );
  }
}

static void TypeInfo__collect_flat_base_types__TypeInfo( SXCRef context, SXCRef local_0_base_type )
{
  SXCRef local_1__reader1971;
  SXCRef local_2_ancestor_type;

  if (((ClassTypeInfo*)local_0_base_type)->property_finding_base_types)
  {
    SLAG_THROW( TypeInfo__error__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str963.value),((ClassTypeInfo*)context)->property_name),str38.value))) );
  }
  local_1__reader1971 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_0_base_type)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_1__reader1971))
  {
    local_2_ancestor_type = ArrayReader_of_TypeInfo__read(local_1__reader1971);
    ((ClassTypeInfo*)local_0_base_type)->property_finding_base_types = true;
    TypeInfo__collect_flat_base_types__TypeInfo(context,local_2_ancestor_type);
    ((ClassTypeInfo*)local_0_base_type)->property_finding_base_types = false;
  }
  if (!(ArrayList_of_TypeInfo__index_of__TypeInfo_Int32(((ClassTypeInfo*)context)->property_flat_base_types,local_0_base_type,0) >= 0))
  {
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_flat_base_types,local_0_base_type);
  }
}

static void TypeInfo__check_compound_dependencies( SXCRef context )
{
  SXCRef local_0__reader1974;
  SXCRef local_1_p;

  if (((ClassTypeInfo*)context)->property_finding_base_types)
  {
    SLAG_THROW( TypeInfo__error__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str957.value),((ClassTypeInfo*)context)->property_name),str38.value))) );
  }
  ((ClassTypeInfo*)context)->property_finding_base_types = true;
  local_0__reader1974 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)context)->property_properties);
  while (CallFn____Logical(14,local_0__reader1974))
  {
    local_1_p = CallFn____Object(45,local_0__reader1974);
    TypeInfo__organize(((ClassPropertyInfo*)local_1_p)->property_type);
    if (((ClassTypeInfo*)((ClassPropertyInfo*)local_1_p)->property_type)->property_finding_base_types)
    {
      SLAG_THROW( TypeInfo__error__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str957.value),((ClassTypeInfo*)context)->property_name),str38.value))) );
    }
    if (!(((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_1_p)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0) || ((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_1_p)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0)))
    {
      SLAG_THROW( TypeInfo__error__String(context,str958.value) );
    }
  }
  ((ClassTypeInfo*)context)->property_finding_base_types = false;
}

static void TypeInfo__collect_singletons__TypeInfo( SXCRef context, SXCRef local_0_s )
{
  SXCRef local_1__reader1978;
  SXCRef local_2_implicit_s;

  if ((ArrayList_of_TypeInfo__index_of__TypeInfo_Int32(((ClassTypeInfo*)context)->property_singletons,local_0_s,0) >= 0))
  {
    return;
  }
  ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_singletons,local_0_s);
  local_1__reader1978 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_0_s)->property_singletons);
  while (ArrayReader_of_TypeInfo__has_another(local_1__reader1978))
  {
    local_2_implicit_s = ArrayReader_of_TypeInfo__read(local_1__reader1978);
    TypeInfo__collect_singletons__TypeInfo(context,local_2_implicit_s);
  }
}

static void TypeInfo__resolve( SXCRef context )
{
  SXCRef local_0__reader1980;
  SXCRef local_1_base_type;
  SXCRef local_2__reader1981;
  SXCRef local_3_s;
  SXCRef local_4_m;
  SXCRef local_5__reader1986;
  SXCRef local_6_m;

  if (((ClassTypeInfo*)context)->property_resolved)
  {
    return;
  }
  ((ClassTypeInfo*)context)->property_resolved = true;
  TypeInfo__prep__Token(context,NULL);
  local_0__reader1980 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader1980))
  {
    local_1_base_type = ArrayReader_of_TypeInfo__read(local_0__reader1980);
    TypeInfo__resolve(local_1_base_type);
  }
  local_2__reader1981 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_singletons);
  while (ArrayReader_of_TypeInfo__has_another(local_2__reader1981))
  {
    local_3_s = ArrayReader_of_TypeInfo__read(local_2__reader1981);
    TypeInfo__resolve(local_3_s);
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    MethodInfo__resolve(TypeInfo__must_find_method__String(context,str975.value));
  }
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
  {
    local_4_m = TypeInfo__find_method__String(context,str1261.value);
    if ((local_4_m != NULL))
    {
      MethodInfo__resolve(local_4_m);
      ((ClassMethodInfo*)local_4_m)->property_called = true;
    }
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_array)->property_flags) != 0))
  {
    TypeInfo__resolve(((ClassTypeInfo*)context)->property_element_type);
  }
  TypeInfo__calculate_sizes_and_offsets(context);
  local_5__reader1986 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)context)->property_methods);
  while (ArrayReader_of_MethodInfo__has_another(local_5__reader1986))
  {
    local_6_m = ArrayReader_of_MethodInfo__read(local_5__reader1986);
    if ((((ClassMethodInfo*)local_6_m)->property_resolve_if_class_resolved || ((((ClassQualifiers*)((ClassMethodInfo*)local_6_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0)))
    {
      MethodInfo__resolve(local_6_m);
    }
    else
    {
      MethodInfo__resolve_if_ancestor_resolved(local_6_m);
    }
  }
  if ((((ClassTypeInfo*)context)->property_element_type != NULL))
  {
    TypeInfo__resolve(((ClassTypeInfo*)context)->property_element_type);
  }
}

static void TypeInfo__prep__Token( SXCRef context, SXCRef local_0_context_t )
{
  SXCRef local_1_mgr_class;
  SXCRef local_2_of_type;
  SXCRef local_3_auto_type;
  SXCRef local_4__reader1995;
  SXCRef local_5_b;
  SXCRef local_6__reader1996;
  SXCRef local_7_s;
  SXCRef local_8_work_singletons;
  SXCRef local_9__reader1998;
  SXCRef local_10_b;
  SXCRef local_11__reader1999;
  SXCRef local_12_s;
  SXCRef local_13__reader2000;
  SXCRef local_14_s;
  SXCRef local_15_mgr_class;

  if (((ClassTypeInfo*)context)->property_prepped)
  {
    return;
  }
  ((ClassTypeInfo*)context)->property_prepped = true;
  TypeInfo__organize(context);
  if ((local_0_context_t == NULL))
  {
    local_0_context_t = ((ClassTypeInfo*)context)->property_t;
  }
  if ((((ClassTypeInfo*)context)->property_qualifiers == NULL))
  {
    SLAG_THROW( ArrayList_of_SlagError__remove_last(((ClassErrors*)sxc_singletons[38])->property_errors) );
  }
  if ((((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0) || !(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_deferred)->property_flags))))->property_flags == 0)))
  {
    local_1_mgr_class = TypeInfo__manager_class(context);
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_deferred)->property_flags))))->property_flags == 0))
    {
      local_2_of_type = ((ClassArrayList_of_ArrayList_of_Token*)((ClassArrayList_of_ArrayList_of_Token*)ArrayList_of_Object__add__Object(ArrayList_of_ArrayList_of_Token__init__Int32(type_ClassArrayList_of_ArrayList_of_Token.create(),1),((ClassArrayList_of_Token*)((ClassArrayList_of_Token*)ArrayList_of_Object__add__Object(ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),1),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_identifier,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)((ClassTypeInfo*)context)->property_t)->property_file_index]))),((ClassToken*)((ClassTypeInfo*)context)->property_t)->property_pos,((ClassTypeInfo*)context)->property_name)))))));
      local_3_auto_type = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassTypeInfo*)context)->property_t,str969.value,local_2_of_type);
      ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_1_mgr_class)->property_base_types,local_3_auto_type);
    }
  }
  if (!(ArrayList_of_TypeInfo__index_of__TypeInfo_Int32(((ClassTypeInfo*)context)->property_singletons,((ClassTypeManager*)sxc_singletons[7])->property_type_global,0) >= 0))
  {
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_singletons,((ClassTypeManager*)sxc_singletons[7])->property_type_global);
  }
  local_4__reader1995 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_4__reader1995))
  {
    local_5_b = ArrayReader_of_TypeInfo__read(local_4__reader1995);
    TypeInfo__prep__Token(local_5_b,((ClassTypeInfo*)context)->property_t);
  }
  local_6__reader1996 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_singletons);
  while (ArrayReader_of_TypeInfo__has_another(local_6__reader1996))
  {
    local_7_s = ArrayReader_of_TypeInfo__read(local_6__reader1996);
    if (((((ClassTypeInfo*)local_7_s)->property_qualifiers == NULL) && (String__index_of__String_Int32(((ClassTypeInfo*)local_7_s)->property_name,str845.value,0) >= 0)))
    {
      sxc_write_ref( &(((ClassTypeInfo*)local_7_s)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags))) );
    }
    TypeInfo__prep__Token(local_7_s,((ClassTypeInfo*)context)->property_t);
  }
  local_8_work_singletons = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassTypeInfo*)context)->property_singletons);
  ArrayList_of_Object__clear(((ClassTypeInfo*)context)->property_singletons);
  local_9__reader1998 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_9__reader1998))
  {
    local_10_b = ArrayReader_of_TypeInfo__read(local_9__reader1998);
    local_11__reader1999 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_10_b)->property_singletons);
    while (ArrayReader_of_TypeInfo__has_another(local_11__reader1999))
    {
      local_12_s = ArrayReader_of_TypeInfo__read(local_11__reader1999);
      TypeInfo__collect_singletons__TypeInfo(context,local_12_s);
    }
  }
  local_13__reader2000 = ArrayList_of_TypeInfo__create_reader(local_8_work_singletons);
  while (ArrayReader_of_TypeInfo__has_another(local_13__reader2000))
  {
    local_14_s = ArrayReader_of_TypeInfo__read(local_13__reader2000);
    TypeInfo__collect_singletons__TypeInfo(context,local_14_s);
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    local_15_mgr_class = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassTypeInfo*)context)->property_t,TypeInfo__manager_name(context),NULL);
    if ((((ClassTypeInfo*)local_15_mgr_class)->property_qualifiers != NULL))
    {
      ArrayList_of_TypeInfo__remove_value__TypeInfo(((ClassTypeInfo*)context)->property_singletons,local_15_mgr_class);
      ArrayList_of_Object__insert__Object_Int32(((ClassTypeInfo*)context)->property_singletons,local_15_mgr_class,0);
    }
  }
  TypeInfo__collect_properties(context);
  TypeInfo__collect_methods(context);
}

static void TypeInfo__collect_properties( SXCRef context )
{
  SXCRef local_0_work_properties;
  SXCRef local_1__reader2006;
  SXCRef local_2_p;
  SXCRef local_3__reader2007;
  SXCRef local_4_p;
  SXCRef local_5_work_properties;
  SXCRef local_6__reader2008;
  SXCRef local_7_p;
  SXCRef local_8__reader2010;
  SXCRef local_9_base_type;
  SlagInt32 local_10_p_index;

  if (((ClassTypeInfo*)context)->property_properties_collected)
  {
    return;
  }
  ((ClassTypeInfo*)context)->property_properties_collected = true;
  if ((((ClassTypeInfo*)context)->property_qualifiers == NULL))
  {
    SLAG_THROW( ((ClassSlagError*)((ClassSlagError*)((ClassSlagError*)ArrayList_of_Object__remove__Int32(((ClassErrors*)sxc_singletons[38])->property_errors,0)))) );
  }
  if ((((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0) && (context != ((ClassTypeManager*)sxc_singletons[7])->property_type_object)))
  {
    TypeInfo__collect_properties(TypeInfo__base_class(context));
    local_0_work_properties = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassTypeInfo*)context)->property_properties);
    ArrayList_of_Object__clear(((ClassTypeInfo*)context)->property_properties);
    local_1__reader2006 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)TypeInfo__base_class(context))->property_properties);
    while (CallFn____Logical(14,local_1__reader2006))
    {
      local_2_p = CallFn____Object(45,local_1__reader2006);
      TypeInfo__collect_property__PropertyInfo(context,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_2_p));
    }
    local_3__reader2007 = ArrayList_of_PropertyInfo__create_reader(local_0_work_properties);
    while (CallFn____Logical(14,local_3__reader2007))
    {
      local_4_p = CallFn____Object(45,local_3__reader2007);
      TypeInfo__collect_property__PropertyInfo(context,local_4_p);
    }
  }
  else
  {
    local_5_work_properties = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassTypeInfo*)context)->property_properties);
    ArrayList_of_Object__clear(((ClassTypeInfo*)context)->property_properties);
    local_6__reader2008 = ArrayList_of_PropertyInfo__create_reader(local_5_work_properties);
    while (CallFn____Logical(14,local_6__reader2008))
    {
      local_7_p = CallFn____Object(45,local_6__reader2008);
      TypeInfo__collect_property__PropertyInfo(context,local_7_p);
    }
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    local_8__reader2010 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
    while (ArrayReader_of_TypeInfo__has_another(local_8__reader2010))
    {
      local_9_base_type = ArrayReader_of_TypeInfo__read(local_8__reader2010);
      if (((((ClassQualifiers*)((ClassTypeInfo*)local_9_base_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
      {
        goto next_8320;
      }
      TypeInfo__inherit_aspect_properties__TypeInfo(context,local_9_base_type);
      next_8320:;
    }
    end_8320:;
  }
  local_10_p_index = 0;
  while ((local_10_p_index < ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_properties))->property_count))
  {
    TypeInfo__prep__Token(((ClassPropertyInfo*)((ClassPropertyInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_properties))->property_data)->data))[local_10_p_index])))->property_type,NULL);
    ++local_10_p_index;
  }
}

static void TypeInfo__inherit_aspect_properties__TypeInfo( SXCRef context, SXCRef local_0_base_type )
{
  SXCRef local_1__reader2013;
  SXCRef local_2_ancestor_type;
  SXCRef local_3__reader2015;
  SXCRef local_4_p;
  SXCRef local_5_mgr_class;

  local_1__reader2013 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_0_base_type)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_1__reader2013))
  {
    local_2_ancestor_type = ArrayReader_of_TypeInfo__read(local_1__reader2013);
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_ancestor_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      TypeInfo__inherit_aspect_properties__TypeInfo(context,local_2_ancestor_type);
    }
  }
  local_3__reader2015 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_0_base_type)->property_properties);
  while (CallFn____Logical(14,local_3__reader2015))
  {
    local_4_p = CallFn____Object(45,local_3__reader2015);
    if (((((ClassQualifiers*)((ClassPropertyInfo*)local_4_p)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class_scope)->property_flags) != 0))
    {
      local_5_mgr_class = TypeInfo__manager_class(context);
      TypeInfo__prep__Token(local_5_mgr_class,NULL);
      TypeInfo__collect_property__PropertyInfo(local_5_mgr_class,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_4_p));
    }
    else
    {
      TypeInfo__collect_property__PropertyInfo(context,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_4_p));
    }
  }
}

static void TypeInfo__collect_property__PropertyInfo( SXCRef context, SXCRef local_0_p )
{
  SXCRef local_1_existing;
  SXCRef local_2_entry;
  SXCRef local_3_m_init_object;

  local_1_existing = NULL;
  local_2_entry = ((ClassMapping_of_String_and_PropertyInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_PropertyInfo*)((ClassTypeInfo*)context)->property_properties_by_name)->property_data,((ClassPropertyInfo*)local_0_p)->property_name));
  if ((local_2_entry != NULL))
  {
    local_1_existing = ((ClassMapping_of_String_and_PropertyInfo*)local_2_entry)->property_value;
  }
  if ((local_1_existing != NULL))
  {
    if ((!((((ClassQualifiers*)((ClassPropertyInfo*)local_1_existing)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0) && !((((ClassQualifiers*)((ClassPropertyInfo*)local_0_p)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0)))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassPropertyInfo*)local_0_p)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str971.value),((ClassPropertyInfo*)local_0_p)->property_name),str972.value),((ClassTypeInfo*)context)->property_name),str38.value)))) );
    }
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassPropertyInfo*)local_1_existing)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),~((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags)))->property_flags))))->property_flags == ((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassPropertyInfo*)local_0_p)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),~((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags)))->property_flags))))->property_flags))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassPropertyInfo*)local_0_p)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str973.value),((ClassPropertyInfo*)local_0_p)->property_name),str92.value)))) );
    }
    if ((((ClassPropertyInfo*)local_1_existing)->property_type != ((ClassPropertyInfo*)local_0_p)->property_type))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassPropertyInfo*)local_0_p)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str974.value),((ClassPropertyInfo*)local_0_p)->property_name),str92.value)))) );
    }
    if ((!((((ClassQualifiers*)((ClassPropertyInfo*)local_1_existing)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0) || !((((ClassQualifiers*)((ClassPropertyInfo*)local_0_p)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0)))
    {
      sxc_write_ref( &(((ClassPropertyInfo*)local_1_existing)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassPropertyInfo*)local_1_existing)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),~((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags)))->property_flags))) );
    }
    return;
  }
  sxc_write_ref( &(((ClassPropertyInfo*)local_0_p)->property_type_context), context );
  TypeInfo__organize(((ClassPropertyInfo*)local_0_p)->property_type);
  ((ClassPropertyInfo*)local_0_p)->property_index = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_properties))->property_count;
  ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_properties,local_0_p);
  GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_PropertyInfo*)((ClassTypeInfo*)context)->property_properties_by_name)->property_data,((ClassPropertyInfo*)local_0_p)->property_name,local_0_p);
  if (((ClassTypeInfo*)context)->property_methods_collected)
  {
    if ((((ClassPropertyInfo*)local_0_p)->property_initial_value != NULL))
    {
      local_3_m_init_object = ((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_methods_by_signature)->property_data,str975.value));
      TypeInfo__store_property_init__PropertyInfo_MethodInfo(context,local_0_p,local_3_m_init_object);
    }
  }
}

static void TypeInfo__store_property_init__PropertyInfo_MethodInfo( SXCRef context, SXCRef local_0_p, SXCRef local_1_m_init_object )
{
  SXCRef local_2_base;
  SXCRef local_3_context_t;

  local_2_base = TypeInfo__base_class(context);
  if (((local_2_base != NULL) && GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_PropertyInfo*)((ClassTypeInfo*)local_2_base)->property_properties_by_name)->property_data,((ClassPropertyInfo*)local_0_p)->property_name)))
  {
    return;
  }
  local_3_context_t = ((ClassPropertyInfo*)local_0_p)->property_t;
  if (sxc_instance_of(((ClassPropertyInfo*)local_0_p)->property_initial_value,&type_ClassCmdInitialConstructor))
  {
    ArrayList_of_Object__insert__Object_Int32(((ClassCmdStatementList*)((ClassMethodInfo*)local_1_m_init_object)->property_body)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_3_context_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_3_context_t,String__opADD__String(str387.value,((ClassPropertyInfo*)local_0_p)->property_name),NULL),CmdConstruct__init__Token_TypeInfo_CmdList(type_ClassCmdConstruct.create(),local_3_context_t,((ClassPropertyInfo*)local_0_p)->property_type,((ClassCmdInitialConstructor*)((ClassPropertyInfo*)local_0_p)->property_initial_value)->property_args)),0);
  }
  else
  {
    ArrayList_of_Object__insert__Object_Int32(((ClassCmdStatementList*)((ClassMethodInfo*)local_1_m_init_object)->property_body)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_3_context_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_3_context_t,String__opADD__String(str387.value,((ClassPropertyInfo*)local_0_p)->property_name),NULL),((ClassCmdInitialAssignment*)((ClassPropertyInfo*)local_0_p)->property_initial_value)->property_expression),0);
  }
}

static void TypeInfo__collect_methods( SXCRef context )
{
  SXCRef local_0_my_methods;
  SXCRef local_1__reader2029;
  SXCRef local_2_base_type;
  SXCRef local_3__reader2031;
  SXCRef local_4_m;
  SXCRef local_5__reader2032;
  SXCRef local_6_base_type;
  SXCRef local_7__reader2033;
  SXCRef local_8_m;
  SXCRef local_9__reader2034;
  SXCRef local_10_base_type;
  SXCRef local_11__reader2035;
  SXCRef local_12_m;
  SXCRef local_13_m;
  SXCRef local_14_entry;
  SXCRef local_15_m;
  SXCRef local_16_m;
  SXCRef local_17_compound_name;
  SXCRef local_18_compound_type;
  SXCRef local_19_m_to_string;
  SXCRef local_20_format_buffer;
  SXCRef local_21__reader2045;
  SXCRef local_22_property;
  SXCRef local_23_args;
  SXCRef local_24__reader2046;
  SXCRef local_25_property;
  SXCRef local_26_m_init_object;
  SXCRef local_27__reader2047;
  SXCRef local_28_p;
  SXCRef local_29_t2;
  SXCRef local_30_context_t;
  SXCRef local_31__reader2051;
  SXCRef local_32_base_type;
  SXCRef local_33__reader2053;
  SXCRef local_34_m;
  SXCRef local_35__reader2054;
  SXCRef local_36_m;
  SXCRef local_37__reader2055;
  SXCRef local_38_m;
  SXCRef local_39__reader2058;
  SXCRef local_40_m;
  SXCRef local_41__reader2059;
  SXCRef local_42_m;
  SXCRef local_43__reader2061;
  SXCRef local_44_p;
  SXCRef local_45_m_get;
  SXCRef local_46_m_set;

  if (((ClassTypeInfo*)context)->property_methods_collected)
  {
    return;
  }
  TypeInfo__collect_properties(context);
  ((ClassTypeInfo*)context)->property_methods_collected = true;
  local_0_my_methods = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassTypeInfo*)context)->property_methods);
  ArrayList_of_Object__clear(((ClassTypeInfo*)context)->property_methods);
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    local_1__reader2029 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
    while (ArrayReader_of_TypeInfo__has_another(local_1__reader2029))
    {
      local_2_base_type = ArrayReader_of_TypeInfo__read(local_1__reader2029);
      TypeInfo__collect_methods(local_2_base_type);
      if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_base_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
      {
        local_3__reader2031 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_2_base_type)->property_methods);
        while (ArrayReader_of_MethodInfo__has_another(local_3__reader2031))
        {
          local_4_m = ArrayReader_of_MethodInfo__read(local_3__reader2031);
          TypeInfo__collect_method__MethodInfo_Logical(context,local_4_m,true);
        }
      }
    }
    local_5__reader2032 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
    while (ArrayReader_of_TypeInfo__has_another(local_5__reader2032))
    {
      local_6_base_type = ArrayReader_of_TypeInfo__read(local_5__reader2032);
      TypeInfo__collect_underlying_methods__TypeInfo(context,local_6_base_type);
    }
    local_7__reader2033 = ArrayList_of_MethodInfo__create_reader(local_0_my_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_7__reader2033))
    {
      local_8_m = ArrayReader_of_MethodInfo__read(local_7__reader2033);
      TypeInfo__collect_method__MethodInfo_Logical(context,local_8_m,true);
    }
    local_9__reader2034 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
    while (ArrayReader_of_TypeInfo__has_another(local_9__reader2034))
    {
      local_10_base_type = ArrayReader_of_TypeInfo__read(local_9__reader2034);
      TypeInfo__collect_overlaying_methods__TypeInfo(context,local_10_base_type);
    }
    local_11__reader2035 = ArrayList_of_MethodInfo__create_reader(ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassTypeInfo*)context)->property_methods));
    while (ArrayReader_of_MethodInfo__has_another(local_11__reader2035))
    {
      local_12_m = ArrayReader_of_MethodInfo__read(local_11__reader2035);
      if ((((((ClassQualifiers*)((ClassMethodInfo*)local_12_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_propagated)->property_flags) != 0) && (((ClassMethodInfo*)local_12_m)->property_type_context != context)))
      {
        local_12_m = ObjectManager__create_duplicate__Object(sxc_singletons[34],local_12_m);
        sxc_write_ref( &(((ClassMethodInfo*)local_12_m)->property_type_context), context );
        if ((((ClassMethodInfo*)local_12_m)->property_original_body != NULL))
        {
          sxc_write_ref( &(((ClassMethodInfo*)local_12_m)->property_body), ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassMethodInfo*)local_12_m)->property_original_body) );
        }
        TypeInfo__collect_method__MethodInfo_Logical(context,local_12_m,true);
      }
    }
    if ((!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_deferred)->property_flags))))->property_flags == 0) && !(((ClassMapping_of_String_and_MethodInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_methods_by_signature)->property_data,str988.value)) != NULL)))
    {
      local_13_m = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),((ClassTypeInfo*)context)->property_t,((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public,context,str667.value);
      sxc_write_ref( &(((ClassMethodInfo*)local_13_m)->property_parameters), ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),0) );
      sxc_write_ref( &(((ClassMethodInfo*)local_13_m)->property_body), CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassMethodInfo*)local_13_m)->property_t,0) );
      TypeInfo__collect_method__MethodInfo_Logical(context,local_13_m,true);
    }
    local_14_entry = ((ClassMapping_of_String_and_MethodInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_methods_by_signature)->property_data,str975.value));
    if (((local_14_entry == NULL) || (((ClassMethodInfo*)((ClassMapping_of_String_and_MethodInfo*)local_14_entry)->property_value)->property_type_context != context)))
    {
      local_15_m = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),((ClassTypeInfo*)context)->property_t,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))),context,str712.value);
      sxc_write_ref( &(((ClassMethodInfo*)local_15_m)->property_parameters), ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),0) );
      sxc_write_ref( &(((ClassMethodInfo*)local_15_m)->property_body), CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassMethodInfo*)local_15_m)->property_t,2) );
      TypeInfo__collect_method__MethodInfo_Logical(context,local_15_m,true);
    }
    local_14_entry = ((ClassMapping_of_String_and_MethodInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_methods_by_signature)->property_data,str989.value));
    if (((local_14_entry == NULL) || (((ClassMethodInfo*)((ClassMapping_of_String_and_MethodInfo*)local_14_entry)->property_value)->property_type_context != context)))
    {
      local_16_m = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),((ClassTypeInfo*)context)->property_t,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))),context,str990.value);
      sxc_write_ref( &(((ClassMethodInfo*)local_16_m)->property_parameters), ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),0) );
      sxc_write_ref( &(((ClassMethodInfo*)local_16_m)->property_return_type), ((ClassTypeManager*)sxc_singletons[7])->property_type_string );
      sxc_write_ref( &(((ClassMethodInfo*)local_16_m)->property_body), CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassTypeInfo*)context)->property_t,1) );
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)((ClassMethodInfo*)local_16_m)->property_body)->property_statements,CmdReturnValue__init__Token_Cmd_Logical(type_ClassCmdReturnValue.create(),((ClassTypeInfo*)context)->property_t,CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),((ClassTypeInfo*)context)->property_t,((ClassTypeInfo*)context)->property_name,-1),false));
      TypeInfo__collect_method__MethodInfo_Logical(context,local_16_m,true);
    }
    if (String__ends_with__String(((ClassTypeInfo*)context)->property_name,str845.value))
    {
      local_17_compound_name = String__before_last__String(((ClassTypeInfo*)context)->property_name,str845.value);
      local_18_compound_type = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassTypeInfo*)context)->property_t,local_17_compound_name,NULL);
      if (((((ClassTypeInfo*)local_18_compound_type)->property_qualifiers != NULL) && ((((ClassQualifiers*)((ClassTypeInfo*)local_18_compound_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0)))
      {
        TypeInfo__organize(local_18_compound_type);
        local_19_m_to_string = TypeInfo__find_method__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str991.value),local_17_compound_name),str62.value)));
        if (!(local_19_m_to_string != NULL))
        {
          local_20_format_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),local_17_compound_name);
          StringBuilder__print__String(local_20_format_buffer,str61.value);
          if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_18_compound_type)->property_properties))->property_count != 0))
          {
            StringBuilder__print__String(local_20_format_buffer,str251.value);
          }
          local_21__reader2045 = ArrayList_of_PropertyInfo__from__Int32(((ClassTypeInfo*)local_18_compound_type)->property_properties,1);
          while (CallFn____Logical(14,local_21__reader2045))
          {
            local_22_property = CallFn____Object(45,local_21__reader2045);
            StringBuilder__print__String(local_20_format_buffer,str992.value);
          }
          StringBuilder__print__String(local_20_format_buffer,str62.value);
          local_23_args = CmdList__init__Int32(type_ClassCmdList.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_18_compound_type)->property_properties))->property_count);
          local_24__reader2046 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_18_compound_type)->property_properties);
          while (CallFn____Logical(14,local_24__reader2046))
          {
            local_25_property = CallFn____Object(45,local_24__reader2046);
            ArrayList_of_Object__add__Object(local_23_args,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassTypeInfo*)context)->property_t,str993.value,CmdList__init__Cmd(type_ClassCmdList.create(),CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassTypeInfo*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassTypeInfo*)context)->property_t,str994.value,NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassTypeInfo*)context)->property_t,((ClassPropertyInfo*)local_25_property)->property_name,NULL)))));
          }
          local_19_m_to_string = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),((ClassTypeInfo*)context)->property_t,((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public,context,str993.value);
          sxc_write_ref( &(((ClassMethodInfo*)local_19_m_to_string)->property_parameters), ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),1) );
          ArrayList_of_Object__add__Object(((ClassMethodInfo*)local_19_m_to_string)->property_parameters,ParameterInfo__init__Token_MethodInfo_TypeInfo_String_Cmd_Int32(type_ClassParameterInfo.create(),((ClassTypeInfo*)context)->property_t,local_19_m_to_string,local_18_compound_type,str994.value,NULL,-1));
          sxc_write_ref( &(((ClassMethodInfo*)local_19_m_to_string)->property_return_type), ((ClassTypeManager*)sxc_singletons[7])->property_type_string );
          sxc_write_ref( &(((ClassMethodInfo*)local_19_m_to_string)->property_body), CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassTypeInfo*)context)->property_t,1) );
          ArrayList_of_Object__add__Object(((ClassCmdStatementList*)((ClassMethodInfo*)local_19_m_to_string)->property_body)->property_statements,CmdReturnValue__init__Token_Cmd_Logical(type_ClassCmdReturnValue.create(),((ClassTypeInfo*)context)->property_t,CmdFormattedString__init__Token_String_CmdList(type_ClassCmdFormattedString.create(),((ClassTypeInfo*)context)->property_t,StringBuilder__to_String(local_20_format_buffer),local_23_args),false));
          TypeInfo__collect_method__MethodInfo_Logical(context,local_19_m_to_string,true);
        }
      }
    }
    local_26_m_init_object = ((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_methods_by_signature)->property_data,str975.value));
    local_27__reader2047 = ArrayList_of_PropertyInfo__reverse_order(((ClassTypeInfo*)context)->property_properties);
    while (CallFn____Logical(14,local_27__reader2047))
    {
      local_28_p = CallFn____Object(45,local_27__reader2047);
      if ((((ClassPropertyInfo*)local_28_p)->property_initial_value != NULL))
      {
        TypeInfo__store_property_init__PropertyInfo_MethodInfo(context,local_28_p,local_26_m_init_object);
      }
    }
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_deferred)->property_flags))))->property_flags == 0))
    {
      local_29_t2 = ((ClassMethodInfo*)local_26_m_init_object)->property_t;
      ArrayList_of_Object__insert__Object_Int32(((ClassCmdStatementList*)((ClassMethodInfo*)local_26_m_init_object)->property_body)->property_statements,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_29_t2,CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),local_29_t2,TypeManager__get__String_Token(sxc_singletons[7],TypeInfo__manager_name(context),NULL)),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_29_t2,str998.value,CmdList__init__Cmd(type_ClassCmdList.create(),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_29_t2,str999.value,NULL)))),0);
    }
    if ((context != ((ClassTypeManager*)sxc_singletons[7])->property_type_object))
    {
      local_30_context_t = ((ClassMethodInfo*)local_26_m_init_object)->property_t;
      ArrayList_of_Object__insert__Object_Int32(((ClassCmdStatementList*)((ClassMethodInfo*)local_26_m_init_object)->property_body)->property_statements,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_30_context_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_30_context_t,str1000.value,NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_30_context_t,str712.value,CmdList__init__Int32(type_ClassCmdList.create(),0))),0);
    }
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
  {
    local_31__reader2051 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
    while (ArrayReader_of_TypeInfo__has_another(local_31__reader2051))
    {
      local_32_base_type = ArrayReader_of_TypeInfo__read(local_31__reader2051);
      TypeInfo__collect_methods(local_32_base_type);
      if (!((((ClassQualifiers*)((ClassTypeInfo*)local_32_base_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
      {
        local_33__reader2053 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_32_base_type)->property_methods);
        while (ArrayReader_of_MethodInfo__has_another(local_33__reader2053))
        {
          local_34_m = ArrayReader_of_MethodInfo__read(local_33__reader2053);
          TypeInfo__collect_method__MethodInfo_Logical(context,local_34_m,true);
        }
      }
    }
    local_35__reader2054 = ArrayList_of_MethodInfo__create_reader(local_0_my_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_35__reader2054))
    {
      local_36_m = ArrayReader_of_MethodInfo__read(local_35__reader2054);
      TypeInfo__collect_method__MethodInfo_Logical(context,local_36_m,true);
    }
    local_37__reader2055 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)context)->property_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_37__reader2055))
    {
      local_38_m = ArrayReader_of_MethodInfo__read(local_37__reader2055);
      if ((!((((ClassQualifiers*)((ClassMethodInfo*)local_38_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_underlying)->property_flags) != 0) && !((((ClassQualifiers*)((ClassMethodInfo*)local_38_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_overlaying)->property_flags) != 0)))
      {
        if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_overlaying)->property_flags))))->property_flags == 0))
        {
          sxc_write_ref( &(((ClassMethodInfo*)local_38_m)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_38_m)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_overlaying)->property_flags))) );
        }
        else
        {
          sxc_write_ref( &(((ClassMethodInfo*)local_38_m)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_38_m)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_underlying)->property_flags))) );
        }
      }
    }
  }
  else
  {
    local_39__reader2058 = ArrayList_of_MethodInfo__create_reader(local_0_my_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_39__reader2058))
    {
      local_40_m = ArrayReader_of_MethodInfo__read(local_39__reader2058);
      TypeInfo__collect_method__MethodInfo_Logical(context,local_40_m,true);
    }
  }
  local_41__reader2059 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)context)->property_methods);
  while (ArrayReader_of_MethodInfo__has_another(local_41__reader2059))
  {
    local_42_m = ArrayReader_of_MethodInfo__read(local_41__reader2059);
    TypeInfo__organize_method__MethodInfo(context,local_42_m);
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
  {
    local_43__reader2061 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)context)->property_properties);
    while (CallFn____Logical(14,local_43__reader2061))
    {
      local_44_p = CallFn____Object(45,local_43__reader2061);
      if (((((ClassQualifiers*)((ClassPropertyInfo*)local_44_p)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class_scope)->property_flags) != 0))
      {
        goto next_8457;
      }
      if ((!((((ClassQualifiers*)((ClassPropertyInfo*)local_44_p)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_private)->property_flags) != 0) && !GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_get_methods)->property_data,((ClassPropertyInfo*)local_44_p)->property_name)))
      {
        local_45_m_get = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),((ClassTypeInfo*)context)->property_t,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_underlying)->property_flags))))->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_automatic)->property_flags))),context,((ClassPropertyInfo*)local_44_p)->property_name);
        sxc_write_ref( &(((ClassMethodInfo*)local_45_m_get)->property_parameters), ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),0) );
        sxc_write_ref( &(((ClassMethodInfo*)local_45_m_get)->property_return_type), ((ClassPropertyInfo*)local_44_p)->property_type );
        sxc_write_ref( &(((ClassMethodInfo*)local_45_m_get)->property_body), CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassTypeInfo*)context)->property_t,1) );
        ArrayList_of_Object__add__Object(((ClassCmdStatementList*)((ClassMethodInfo*)local_45_m_get)->property_body)->property_statements,CmdReturnValue__init__Token_Cmd_Logical(type_ClassCmdReturnValue.create(),((ClassTypeInfo*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassTypeInfo*)context)->property_t,String__opADD__String(str387.value,((ClassPropertyInfo*)local_44_p)->property_name),NULL),false));
        TypeInfo__collect_method__MethodInfo_Logical(context,local_45_m_get,true);
        TypeInfo__organize_method__MethodInfo(context,local_45_m_get);
      }
      if ((((((ClassQualifiers*)((ClassPropertyInfo*)local_44_p)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public)->property_flags) != 0) && !GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_set_methods)->property_data,((ClassPropertyInfo*)local_44_p)->property_name)))
      {
        local_46_m_set = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),((ClassTypeInfo*)context)->property_t,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_underlying)->property_flags))))->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_automatic)->property_flags))),context,((ClassPropertyInfo*)local_44_p)->property_name);
        sxc_write_ref( &(((ClassMethodInfo*)local_46_m_set)->property_parameters), ((ClassArrayList_of_ParameterInfo*)((ClassArrayList_of_ParameterInfo*)ArrayList_of_Object__add__Object(ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),1),ParameterInfo__init__Token_MethodInfo_TypeInfo_String_Cmd_Int32(type_ClassParameterInfo.create(),((ClassTypeInfo*)context)->property_t,local_46_m_set,((ClassPropertyInfo*)local_44_p)->property_type,String__opADD__String(str38.value,((ClassPropertyInfo*)local_44_p)->property_name),NULL,-1)))) );
        sxc_write_ref( &(((ClassMethodInfo*)local_46_m_set)->property_body), CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassTypeInfo*)context)->property_t,1) );
        ArrayList_of_Object__add__Object(((ClassCmdStatementList*)((ClassMethodInfo*)local_46_m_set)->property_body)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),((ClassTypeInfo*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassTypeInfo*)context)->property_t,String__opADD__String(str387.value,((ClassPropertyInfo*)local_44_p)->property_name),NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassTypeInfo*)context)->property_t,String__opADD__String(str38.value,((ClassPropertyInfo*)local_44_p)->property_name),NULL)));
        TypeInfo__collect_method__MethodInfo_Logical(context,local_46_m_set,true);
        TypeInfo__organize_method__MethodInfo(context,local_46_m_set);
      }
      next_8457:;
    }
    end_8457:;
  }
}

static void TypeInfo__organize_method__MethodInfo( SXCRef context, SXCRef local_0_m )
{
  SlagInt32 local_1_which_2065;
  SXCRef local_2_first_type;

  MethodTable__add__String_MethodInfo(((ClassTypeInfo*)context)->property_methods_by_name,((ClassMethodInfo*)local_0_m)->property_name,local_0_m);
  local_1_which_2065 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_count;
  if ((local_1_which_2065 == 0))
  {
    if ((((ClassMethodInfo*)local_0_m)->property_return_type != NULL))
    {
      GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_get_methods)->property_data,((ClassMethodInfo*)local_0_m)->property_name,local_0_m);
    }
  }
  else if ((local_1_which_2065 == 1))
  {
    local_2_first_type = ((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_data)->data))[0])))))->property_type;
    if ((((((ClassMethodInfo*)local_0_m)->property_return_type != NULL) && ((((ClassQualifiers*)((ClassTypeInfo*)local_2_first_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0)) && GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_PropertyInfo*)((ClassTypeInfo*)local_2_first_type)->property_properties_by_name)->property_data,((ClassMethodInfo*)local_0_m)->property_name)))
    {
      GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_get_methods)->property_data,((ClassMethodInfo*)local_0_m)->property_name,local_0_m);
    }
    else
    {
      GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_set_methods)->property_data,((ClassMethodInfo*)local_0_m)->property_name,local_0_m);
    }
  }
}

static void TypeInfo__collect_underlying_methods__TypeInfo( SXCRef context, SXCRef local_0_base_type )
{
  SlagLogical local_1_flagged_incorporation;
  SlagLogical local_2_flagged_mgr_incorporation;
  SXCRef local_3__reader2069;
  SXCRef local_4_ancestor_type;
  SXCRef local_5__reader2070;
  SXCRef local_6_m;
  SXCRef local_7_mgr_class;
  SXCRef local_8_new_m;
  SXCRef local_9_new_m;

  if (!((((ClassQualifiers*)((ClassTypeInfo*)local_0_base_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
  {
    return;
  }
  local_1_flagged_incorporation = false;
  local_2_flagged_mgr_incorporation = false;
  local_3__reader2069 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_0_base_type)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_3__reader2069))
  {
    local_4_ancestor_type = ArrayReader_of_TypeInfo__read(local_3__reader2069);
    TypeInfo__collect_underlying_methods__TypeInfo(context,local_4_ancestor_type);
  }
  local_5__reader2070 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_0_base_type)->property_methods);
  while (ArrayReader_of_MethodInfo__has_another(local_5__reader2070))
  {
    local_6_m = ArrayReader_of_MethodInfo__read(local_5__reader2070);
    if ((((((ClassQualifiers*)((ClassMethodInfo*)local_6_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_underlying)->property_flags) != 0) && !(((ClassMethodInfo*)local_6_m)->property_type_context != local_0_base_type)))
    {
      if (((((ClassQualifiers*)((ClassMethodInfo*)local_6_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class_scope)->property_flags) != 0))
      {
        local_7_mgr_class = TypeInfo__manager_class(context);
        TypeInfo__prep__Token(local_7_mgr_class,NULL);
        local_8_new_m = ObjectManager__create_duplicate__Object(sxc_singletons[34],local_6_m);
        sxc_write_ref( &(((ClassMethodInfo*)local_8_new_m)->property_type_context), local_7_mgr_class );
        TypeInfo__collect_method__MethodInfo_Logical(local_7_mgr_class,local_8_new_m,true);
        if (((ClassMethodInfo*)local_6_m)->property_resolved)
        {
          ((ClassMethodInfo*)local_8_new_m)->property_resolve_if_class_resolved = true;
        }
        if (!local_2_flagged_mgr_incorporation)
        {
          ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_base_type)->property_incorporating_classes,local_7_mgr_class);
          local_2_flagged_mgr_incorporation = true;
        }
        if ((((ClassGenericHashTable_of_Object_and_Object*)((ClassMethodTable*)((ClassTypeInfo*)local_7_mgr_class)->property_methods_by_name)->property_data)->property_num_entries != 0))
        {
          TypeInfo__organize_method__MethodInfo(local_7_mgr_class,local_8_new_m);
        }
      }
      else
      {
        local_9_new_m = ObjectManager__create_duplicate__Object(sxc_singletons[34],local_6_m);
        sxc_write_ref( &(((ClassMethodInfo*)local_9_new_m)->property_type_context), context );
        TypeInfo__collect_method__MethodInfo_Logical(context,local_9_new_m,true);
        if (((ClassMethodInfo*)local_6_m)->property_resolved)
        {
          ((ClassMethodInfo*)local_9_new_m)->property_resolve_if_class_resolved = true;
        }
        if (!local_1_flagged_incorporation)
        {
          ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_base_type)->property_incorporating_classes,context);
          local_1_flagged_incorporation = true;
        }
      }
    }
  }
}

static void TypeInfo__collect_overlaying_methods__TypeInfo( SXCRef context, SXCRef local_0_base_type )
{
  SlagLogical local_1_flagged_incorporation;
  SlagLogical local_2_flagged_mgr_incorporation;
  SXCRef local_3__reader2079;
  SXCRef local_4_ancestor_type;
  SXCRef local_5__reader2080;
  SXCRef local_6_m;
  SXCRef local_7_mgr_class;
  SXCRef local_8_new_m;
  SXCRef local_9_new_m;

  if (!((((ClassQualifiers*)((ClassTypeInfo*)local_0_base_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
  {
    return;
  }
  local_1_flagged_incorporation = false;
  local_2_flagged_mgr_incorporation = false;
  local_3__reader2079 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_0_base_type)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_3__reader2079))
  {
    local_4_ancestor_type = ArrayReader_of_TypeInfo__read(local_3__reader2079);
    TypeInfo__collect_overlaying_methods__TypeInfo(context,local_4_ancestor_type);
  }
  local_5__reader2080 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_0_base_type)->property_methods);
  while (ArrayReader_of_MethodInfo__has_another(local_5__reader2080))
  {
    local_6_m = ArrayReader_of_MethodInfo__read(local_5__reader2080);
    if ((((((ClassQualifiers*)((ClassMethodInfo*)local_6_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_overlaying)->property_flags) != 0) && !(((ClassMethodInfo*)local_6_m)->property_type_context != local_0_base_type)))
    {
      if (((((ClassQualifiers*)((ClassMethodInfo*)local_6_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class_scope)->property_flags) != 0))
      {
        local_7_mgr_class = TypeInfo__manager_class(context);
        TypeInfo__prep__Token(local_7_mgr_class,NULL);
        local_8_new_m = ObjectManager__create_duplicate__Object(sxc_singletons[34],local_6_m);
        sxc_write_ref( &(((ClassMethodInfo*)local_8_new_m)->property_type_context), local_7_mgr_class );
        TypeInfo__collect_method__MethodInfo_Logical(local_7_mgr_class,local_8_new_m,true);
        if (((ClassMethodInfo*)local_6_m)->property_resolved)
        {
          ((ClassMethodInfo*)local_8_new_m)->property_resolve_if_class_resolved = true;
        }
        if (!local_2_flagged_mgr_incorporation)
        {
          ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_base_type)->property_incorporating_classes,local_7_mgr_class);
          local_2_flagged_mgr_incorporation = true;
        }
        if ((((ClassGenericHashTable_of_Object_and_Object*)((ClassMethodTable*)((ClassTypeInfo*)local_7_mgr_class)->property_methods_by_name)->property_data)->property_num_entries != 0))
        {
          TypeInfo__organize_method__MethodInfo(local_7_mgr_class,local_8_new_m);
        }
      }
      else
      {
        local_9_new_m = ObjectManager__create_duplicate__Object(sxc_singletons[34],local_6_m);
        sxc_write_ref( &(((ClassMethodInfo*)local_9_new_m)->property_type_context), context );
        TypeInfo__collect_method__MethodInfo_Logical(context,local_9_new_m,true);
        if (((ClassMethodInfo*)local_6_m)->property_resolved)
        {
          ((ClassMethodInfo*)local_9_new_m)->property_resolve_if_class_resolved = true;
        }
        if (!local_1_flagged_incorporation)
        {
          ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_base_type)->property_incorporating_classes,context);
          local_1_flagged_incorporation = true;
        }
      }
    }
  }
}

static void TypeInfo__collect_method__MethodInfo_Logical( SXCRef context, SXCRef local_0_m, SlagLogical local_1_do_layering )
{
  SXCRef local_2__reader2089;
  SXCRef local_3_p;
  SXCRef local_4_property;
  SXCRef local_5_entry;
  SXCRef local_6__reader2094;
  SXCRef local_7_s;
  SXCRef local_8__reader2097;
  SXCRef local_9_prop;
  SXCRef local_10_new_name;
  SXCRef local_11_buffer;
  SlagLogical local_12_first;
  SXCRef local_13__reader2099;
  SXCRef local_14_p;
  SXCRef local_15_vsig;
  SXCRef local_16_entry;
  SXCRef local_17_entry;
  SXCRef local_18_existing;

  if ((((ClassMethodInfo*)local_0_m)->property_signature == NULL))
  {
    local_2__reader2089 = ArrayList_of_ParameterInfo__reverse_order(((ClassMethodInfo*)local_0_m)->property_parameters);
    while (CallFn____Logical(14,local_2__reader2089))
    {
      local_3_p = CallFn____Object(45,local_2__reader2089);
      if ((((ClassParameterInfo*)local_3_p)->property_type == NULL))
      {
        if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassParameterInfo*)local_3_p)->property_t,str977.value)) );
        }
        local_4_property = NULL;
        {
          local_5_entry = ((ClassMapping_of_String_and_PropertyInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_PropertyInfo*)((ClassTypeInfo*)context)->property_properties_by_name)->property_data,((ClassParameterInfo*)local_3_p)->property_name));
          if ((local_5_entry != NULL))
          {
            local_4_property = ((ClassMapping_of_String_and_PropertyInfo*)local_5_entry)->property_value;
            if (true) goto satisfied_8350;
          }
          local_6__reader2094 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_singletons);
          while (ArrayReader_of_TypeInfo__has_another(local_6__reader2094))
          {
            local_7_s = ArrayReader_of_TypeInfo__read(local_6__reader2094);
            local_5_entry = ((ClassMapping_of_String_and_PropertyInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_PropertyInfo*)((ClassTypeInfo*)local_7_s)->property_properties_by_name)->property_data,((ClassParameterInfo*)local_3_p)->property_name));
            if ((local_5_entry != NULL))
            {
              local_4_property = ((ClassMapping_of_String_and_PropertyInfo*)local_5_entry)->property_value;
              if (true) goto satisfied_8350;
            }
          }
          if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
          {
            local_8__reader2097 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)context)->property_properties);
            while (CallFn____Logical(14,local_8__reader2097))
            {
              local_9_prop = CallFn____Object(45,local_8__reader2097);
              if (String__opEQ__String(((ClassPropertyInfo*)local_9_prop)->property_name,((ClassParameterInfo*)local_3_p)->property_name))
              {
                local_4_property = local_9_prop;
                if (true) goto satisfied_8350;
              }
            }
          }
          if (!false) goto unsatisfied_8350;
          satisfied_8350:;
          {
            sxc_write_ref( &(((ClassParameterInfo*)local_3_p)->property_type), ((ClassPropertyInfo*)local_4_property)->property_type );
          }
          goto end_8350;
          unsatisfied_8350:;
          {
            SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassParameterInfo*)local_3_p)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str978.value),((ClassParameterInfo*)local_3_p)->property_name),str979.value),Global__to_String__Object(sxc_singletons[21],((ClassMethodInfo*)local_0_m)->property_type_context)),str38.value)))) );
          }
        }
        end_8350:;
        local_10_new_name = ((ClassString*)String__opADD__String(String__opADD__String(((ClassParameterInfo*)local_3_p)->property_name,str38.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],SlagParserManager__unique_id(sxc_singletons[35]),10))));
        ArrayList_of_Object__insert__Object_Int32(((ClassCmdStatementList*)((ClassMethodInfo*)local_0_m)->property_body)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),((ClassParameterInfo*)local_3_p)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassParameterInfo*)local_3_p)->property_t,((ClassParameterInfo*)local_3_p)->property_name,NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassParameterInfo*)local_3_p)->property_t,local_10_new_name,NULL)),0);
        sxc_write_ref( &(((ClassParameterInfo*)local_3_p)->property_name), local_10_new_name );
      }
      else
      {
        TypeInfo__organize(((ClassParameterInfo*)local_3_p)->property_type);
      }
    }
    local_11_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMethodInfo*)local_0_m)->property_name);
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_11_buffer)->property_data,((SlagChar)40));
    local_12_first = true;
    local_13__reader2099 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_0_m)->property_parameters);
    while (CallFn____Logical(14,local_13__reader2099))
    {
      local_14_p = CallFn____Object(45,local_13__reader2099);
      if (local_12_first)
      {
        local_12_first = false;
      }
      else
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_11_buffer)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_11_buffer,((ClassTypeInfo*)((ClassParameterInfo*)local_14_p)->property_type)->property_name);
    }
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_11_buffer)->property_data,((SlagChar)41));
    sxc_write_ref( &(((ClassMethodInfo*)local_0_m)->property_signature), String__consolidate(StringBuilder__to_String(local_11_buffer)) );
    local_15_vsig = NULL;
    if ((((ClassMethodInfo*)local_0_m)->property_return_type != NULL))
    {
      TypeInfo__organize(((ClassMethodInfo*)local_0_m)->property_return_type);
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_11_buffer)->property_data,((SlagChar)46));
      StringBuilder__print__String(local_11_buffer,((ClassTypeInfo*)((ClassMethodInfo*)local_0_m)->property_return_type)->property_name);
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_0_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        local_15_vsig = String__opADD__String(((ClassMethodInfo*)local_0_m)->property_signature,str981.value);
      }
      else
      {
        local_15_vsig = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMethodInfo*)local_0_m)->property_signature),str38.value),((ClassTypeInfo*)((ClassMethodInfo*)local_0_m)->property_return_type)->property_name));
      }
    }
    else
    {
      local_15_vsig = ((ClassMethodInfo*)local_0_m)->property_signature;
    }
    sxc_write_ref( &(((ClassMethodInfo*)local_0_m)->property_full_signature), StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassTypeInfo*)((ClassMethodInfo*)local_0_m)->property_type_context)->property_name),str294.value),StringBuilder__to_String(local_11_buffer))) );
    local_16_entry = ((ClassMapping_of_String_and_MethodGroup*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_MethodGroup*)((ClassTypeManager*)sxc_singletons[7])->property_method_groups)->property_data,local_15_vsig));
    if ((local_16_entry != NULL))
    {
      MethodGroup__add__MethodInfo(((ClassMapping_of_String_and_MethodGroup*)local_16_entry)->property_value,local_0_m);
    }
    else
    {
      GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_MethodGroup*)((ClassTypeManager*)sxc_singletons[7])->property_method_groups)->property_data,local_15_vsig,MethodGroup__init__String_MethodInfo(type_ClassMethodGroup.create(),local_15_vsig,local_0_m));
    }
  }
  local_17_entry = ((ClassMapping_of_String_and_MethodInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_methods_by_signature)->property_data,((ClassMethodInfo*)local_0_m)->property_signature));
  if ((local_17_entry != NULL))
  {
    local_18_existing = ((ClassMapping_of_String_and_MethodInfo*)local_17_entry)->property_value;
    if (((((ClassQualifiers*)((ClassMethodInfo*)local_18_existing)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0))
    {
      sxc_write_ref( &(((ClassMethodInfo*)local_0_m)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))) );
    }
    else if (((((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0))
    {
      sxc_write_ref( &(((ClassMethodInfo*)local_18_existing)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_18_existing)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))) );
    }
    if (((ClassMethodInfo*)local_18_existing)->property_resolve_if_class_resolved)
    {
      ((ClassMethodInfo*)local_0_m)->property_resolve_if_class_resolved = true;
    }
    if (((((ClassMethodInfo*)local_18_existing)->property_return_type != NULL)^(((ClassMethodInfo*)local_0_m)->property_return_type != NULL)))
    {
      SLAG_THROW( ((ClassSlagError*)PriorSlagError__init__Token_String_Token(type_ClassPriorSlagError.create(),((ClassMethodInfo*)local_0_m)->property_t,str984.value,((ClassMethodInfo*)local_18_existing)->property_t)) );
    }
    if (((((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0))
    {
      return;
    }
    if (((((ClassMethodInfo*)local_18_existing)->property_type_context != context) || ((((ClassQualifiers*)((ClassMethodInfo*)local_18_existing)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0)))
    {
      if (((((ClassMethodInfo*)local_18_existing)->property_return_type != NULL) && !TypeInfo__instance_of__TypeInfo(((ClassMethodInfo*)local_0_m)->property_return_type,((ClassMethodInfo*)local_18_existing)->property_return_type)))
      {
        SLAG_THROW( ((ClassSlagError*)PriorSlagError__init__Token_String_Token(type_ClassPriorSlagError.create(),((ClassMethodInfo*)local_0_m)->property_t,str985.value,((ClassMethodInfo*)local_18_existing)->property_t)) );
      }
      sxc_write_ref( &(((ClassMethodInfo*)local_0_m)->property_prior_m), local_18_existing );
      ArrayList_of_Object__add__Object(((ClassMethodInfo*)local_18_existing)->property_overrides,local_0_m);
      GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_methods_by_signature)->property_data,((ClassMethodInfo*)local_0_m)->property_signature,local_0_m);
      ArrayList_of_MethodInfo__remove_value__MethodInfo(((ClassTypeInfo*)context)->property_methods,local_18_existing);
      ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_methods,local_0_m);
    }
    else if ((MethodInfo__is_aspect_method(local_18_existing) || MethodInfo__is_aspect_method(local_0_m)))
    {
      if ((((ClassMethodInfo*)local_18_existing)->property_prior_m != NULL))
      {
        ArrayList_of_MethodInfo__remove_value__MethodInfo(((ClassMethodInfo*)((ClassMethodInfo*)local_18_existing)->property_prior_m)->property_overrides,local_18_existing);
        ArrayList_of_Object__add__Object(((ClassMethodInfo*)((ClassMethodInfo*)local_18_existing)->property_prior_m)->property_overrides,local_0_m);
        sxc_write_ref( &(((ClassMethodInfo*)local_0_m)->property_prior_m), ((ClassMethodInfo*)local_18_existing)->property_prior_m );
      }
      sxc_write_ref( &(((ClassMethodInfo*)local_0_m)->property_underlying_m), local_18_existing );
      GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_methods_by_signature)->property_data,((ClassMethodInfo*)local_0_m)->property_signature,local_0_m);
      ArrayList_of_MethodInfo__remove_value__MethodInfo(((ClassTypeInfo*)context)->property_methods,local_18_existing);
      ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_methods,local_0_m);
      if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
      {
        if (((((ClassMethodInfo*)local_18_existing)->property_return_type != NULL) && !TypeInfo__instance_of__TypeInfo(((ClassMethodInfo*)local_0_m)->property_return_type,((ClassMethodInfo*)local_18_existing)->property_return_type)))
        {
          SLAG_THROW( ((ClassSlagError*)PriorSlagError__init__Token_String_Token(type_ClassPriorSlagError.create(),((ClassMethodInfo*)local_0_m)->property_t,str985.value,((ClassMethodInfo*)local_18_existing)->property_t)) );
        }
      }
    }
    else
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassMethodInfo*)local_0_m)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMethodInfo*)local_0_m)->property_signature),str986.value),((ClassTypeInfo*)context)->property_name),str38.value)))) );
    }
  }
  else
  {
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_methods,local_0_m);
    GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_methods_by_signature)->property_data,((ClassMethodInfo*)local_0_m)->property_signature,local_0_m);
  }
}

static SlagObject* TypeInfo__find_method__String( SXCRef context, SXCRef local_0_sig )
{
  SXCRef local_1_entry;

  local_1_entry = ((ClassMapping_of_String_and_MethodInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)context)->property_methods_by_signature)->property_data,local_0_sig));
  if (!(local_1_entry != NULL))
  {
    return NULL;
  }
  return ((ClassMapping_of_String_and_MethodInfo*)local_1_entry)->property_value;
}

static SlagObject* TypeInfo__must_find_method__String( SXCRef context, SXCRef local_0_sig )
{
  SXCRef local_1_result;

  local_1_result = TypeInfo__find_method__String(context,local_0_sig);
  if ((local_1_result != NULL))
  {
    return local_1_result;
  }
  Global__println__String(sxc_singletons[21],System__stack_trace(sxc_singletons[0]));
  SLAG_THROW( SlagError__init__String_String(type_ClassSlagError.create(),str477.value,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1013.value),((ClassTypeInfo*)context)->property_name),str294.value),local_0_sig),str38.value))) );
}

static SlagLogical TypeInfo__instance_of__TypeInfo( SXCRef context, SXCRef local_0_ancestor_type )
{
  SXCRef local_1__reader2120;
  SXCRef local_2_base_type;

  if ((context == local_0_ancestor_type))
  {
    return true;
  }
  if (!(((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0) && ((((ClassQualifiers*)((ClassTypeInfo*)local_0_ancestor_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0)))
  {
    return false;
  }
  if ((local_0_ancestor_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_object))
  {
    return true;
  }
  if ((context == ((ClassTypeManager*)sxc_singletons[7])->property_type_null))
  {
    return true;
  }
  local_1__reader2120 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_flat_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_1__reader2120))
  {
    local_2_base_type = ArrayReader_of_TypeInfo__read(local_1__reader2120);
    if ((local_2_base_type == local_0_ancestor_type))
    {
      return true;
    }
  }
  return false;
}

static SlagObject* TypeInfo__find_property__String( SXCRef context, SXCRef local_0_var_name )
{
  SXCRef local_1_entry;

  local_1_entry = ((ClassMapping_of_String_and_PropertyInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_PropertyInfo*)((ClassTypeInfo*)context)->property_properties_by_name)->property_data,local_0_var_name));
  if ((local_1_entry != NULL))
  {
    return ((ClassMapping_of_String_and_PropertyInfo*)local_1_entry)->property_value;
  }
  return NULL;
}

static SlagObject* TypeInfo__manager_name( SXCRef context )
{
  SXCRef local_0_mgr_name;

  local_0_mgr_name = String__opADD__String(TypeInfo__base_name(context),str845.value);
  if (((((SlagString*)TypeInfo__base_name(context))->count) < (((SlagString*)((ClassTypeInfo*)context)->property_name)->count)))
  {
    local_0_mgr_name = String__opADD__String(local_0_mgr_name,String__substring__Int32(((ClassTypeInfo*)context)->property_name,(((SlagString*)TypeInfo__base_name(context))->count)));
  }
  return local_0_mgr_name;
}

static SlagObject* TypeInfo__manager_class( SXCRef context )
{
  SXCRef local_0_mgr_class;

  local_0_mgr_class = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassTypeInfo*)context)->property_t,TypeInfo__manager_name(context),NULL);
  if ((((ClassTypeInfo*)local_0_mgr_class)->property_qualifiers == NULL))
  {
    sxc_write_ref( &(((ClassTypeInfo*)local_0_mgr_class)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags))) );
  }
  if (!(ArrayList_of_TypeInfo__index_of__TypeInfo_Int32(((ClassTypeInfo*)context)->property_singletons,local_0_mgr_class,0) >= 0))
  {
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)context)->property_singletons,local_0_mgr_class);
  }
  return local_0_mgr_class;
}

static SlagObject* TypeInfo__reader_type( SXCRef context )
{
  if (TypeInfo__instance_of__TypeInfo(context,((ClassTypeManager*)sxc_singletons[7])->property_type_reader_type))
  {
    return TypeInfo__find_reader_element_type(context);
  }
  return NULL;
}

static SlagObject* TypeInfo__readable_type( SXCRef context )
{
  if (TypeInfo__instance_of__TypeInfo(context,((ClassTypeManager*)sxc_singletons[7])->property_type_readable_type))
  {
    return TypeInfo__find_readable_element_type(context);
  }
  else
  {
    return NULL;
  }
}

static SlagObject* TypeInfo__find_reader_element_type( SXCRef context )
{
  SXCRef local_0__reader2129;
  SXCRef local_1_base_type;
  SXCRef local_2_result;

  if ((String__index_of__String_Int32(((ClassTypeInfo*)context)->property_name,str1064.value,0) == 0))
  {
    return ((ClassTypeInfo*)((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_substitution_types))->property_data)->data))[0])));
  }
  local_0__reader2129 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader2129))
  {
    local_1_base_type = ArrayReader_of_TypeInfo__read(local_0__reader2129);
    local_2_result = TypeInfo__find_reader_element_type(local_1_base_type);
    if ((local_2_result != NULL))
    {
      return local_2_result;
    }
  }
  return NULL;
}

static SlagObject* TypeInfo__find_readable_element_type( SXCRef context )
{
  SXCRef local_0__reader2132;
  SXCRef local_1_base_type;
  SXCRef local_2_result;

  if ((String__index_of__String_Int32(((ClassTypeInfo*)context)->property_name,str1063.value,0) == 0))
  {
    return ((ClassTypeInfo*)((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_substitution_types))->property_data)->data))[0])));
  }
  local_0__reader2132 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)context)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader2132))
  {
    local_1_base_type = ArrayReader_of_TypeInfo__read(local_0__reader2132);
    local_2_result = TypeInfo__find_readable_element_type(local_1_base_type);
    if ((local_2_result != NULL))
    {
      return local_2_result;
    }
  }
  return NULL;
}

static SlagLogical TypeInfo__is_lower_precision_than__TypeInfo( SXCRef context, SXCRef local_0_other )
{
  if ((context == local_0_other))
  {
    return false;
  }
  if (!(TypeInfo__is_numerical(context) && TypeInfo__is_numerical(local_0_other)))
  {
    return false;
  }
  if (TypeInfo__is_real(local_0_other))
  {
    if (!TypeInfo__is_real(context))
    {
      return true;
    }
    return (local_0_other == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64);
  }
  else if (TypeInfo__is_integer(local_0_other))
  {
    if (TypeInfo__is_real(context))
    {
      return false;
    }
    if ((local_0_other == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return true;
    }
    if ((context == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return false;
    }
    if ((local_0_other == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return true;
    }
    if ((context == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return false;
    }
    if ((local_0_other == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
    {
      return true;
    }
    return false;
  }
  return false;
}

static SlagLogical TypeInfo__is_compatible_with__TypeInfo( SXCRef context, SXCRef local_0_other )
{
  if ((context == local_0_other))
  {
    return true;
  }
  if (TypeInfo__instance_of__TypeInfo(context,local_0_other))
  {
    return true;
  }
  if ((TypeInfo__is_numerical(context) && TypeInfo__is_numerical(local_0_other)))
  {
    return true;
  }
  if ((TypeInfo__is_logical(context) && TypeInfo__is_logical(local_0_other)))
  {
    return true;
  }
  return false;
}

static SlagObject* TypeInfo__x_name( SXCRef context )
{
  if ((((ClassTypeInfo*)context)->property_x_name == NULL))
  {
    if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      sxc_write_ref( &(((ClassTypeInfo*)context)->property_x_name), String__opADD__String(str1493.value,String__x_compatible(((ClassTypeInfo*)context)->property_name)) );
    }
    else if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      sxc_write_ref( &(((ClassTypeInfo*)context)->property_x_name), String__opADD__String(str666.value,String__x_compatible(((ClassTypeInfo*)context)->property_name)) );
    }
    else if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
    {
      sxc_write_ref( &(((ClassTypeInfo*)context)->property_x_name), String__opADD__String(str1494.value,String__x_compatible(((ClassTypeInfo*)context)->property_name)) );
    }
    else
    {
      sxc_write_ref( &(((ClassTypeInfo*)context)->property_x_name), String__x_compatible(((ClassTypeInfo*)context)->property_name) );
    }
  }
  return ((ClassTypeInfo*)context)->property_x_name;
}

static void TypeInfo__calculate_sizes_and_offsets( SXCRef context )
{
  SlagInt32 local_0_i;
  SlagInt32 local_1__count2152;
  SXCRef local_2_which_2154;
  SXCRef local_3__reader2155;
  SXCRef local_4_v;

  if (((ClassTypeInfo*)context)->property_sizes_and_offsets_calculated)
  {
    return;
  }
  ((ClassTypeInfo*)context)->property_sizes_and_offsets_calculated = true;
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    {
      local_0_i = 0;
      local_1__count2152 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_properties))->property_count;
      while ((local_0_i < local_1__count2152))
      {
        ((ClassPropertyInfo*)((ClassPropertyInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_properties))->property_data)->data))[local_0_i])))->property_index = local_0_i;
        ++local_0_i;
      }
    }
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
  {
    local_2_which_2154 = context;
    if ((local_2_which_2154 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      ((ClassTypeInfo*)context)->property_data_size = 8;
    }
    else if ((local_2_which_2154 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      ((ClassTypeInfo*)context)->property_data_size = 4;
    }
    else if ((local_2_which_2154 == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
    {
      ((ClassTypeInfo*)context)->property_data_size = 2;
    }
    else if ((local_2_which_2154 == ((ClassTypeManager*)sxc_singletons[7])->property_type_byte))
    {
      ((ClassTypeInfo*)context)->property_data_size = 1;
    }
    else if ((local_2_which_2154 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      ((ClassTypeInfo*)context)->property_data_size = 8;
    }
    else if ((local_2_which_2154 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      ((ClassTypeInfo*)context)->property_data_size = 4;
    }
    else if ((local_2_which_2154 == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
    {
      ((ClassTypeInfo*)context)->property_data_size = 4;
    }
    ((ClassTypeInfo*)context)->property_stack_size = Math__max__Int32_Int32(sxc_singletons[4],((ClassTypeInfo*)context)->property_data_size,((ClassSlagCompiler*)sxc_singletons[14])->property_byte_alignment);
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    local_3__reader2155 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)context)->property_properties);
    while (CallFn____Logical(14,local_3__reader2155))
    {
      local_4_v = CallFn____Object(45,local_3__reader2155);
      TypeInfo__calculate_sizes_and_offsets(((ClassPropertyInfo*)local_4_v)->property_type);
      ((ClassPropertyInfo*)local_4_v)->property_offset = ((ClassTypeInfo*)context)->property_data_size;
      ((ClassTypeInfo*)context)->property_data_size += ((ClassTypeInfo*)((ClassPropertyInfo*)local_4_v)->property_type)->property_stack_size;
    }
    ((ClassTypeInfo*)context)->property_stack_size = ((ClassTypeInfo*)context)->property_data_size;
  }
  else
  {
  }
}

static SlagObject* TypeInfo__wiki_name( SXCRef context )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1302.value),String__x_compatible(((ClassTypeInfo*)context)->property_name)),str386.value),TypeInfo__rename_lists__String(context,((ClassTypeInfo*)context)->property_name)),str1303.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1304.value),String__x_compatible(((ClassTypeInfo*)context)->property_name)),str386.value),TypeInfo__rename_lists__String(context,((ClassTypeInfo*)context)->property_name)),str1303.value));
  }
}

static SlagObject* TypeInfo__help_name( SXCRef context )
{
  return TypeInfo__rename_lists__String(context,((ClassTypeInfo*)context)->property_name);
}

static SlagObject* TypeInfo__rename_lists__String( SXCRef context, SXCRef local_0_st )
{
  if ((String__index_of__String_Int32(local_0_st,str1301.value,0) == 0))
  {
    return String__opADD__String(TypeInfo__rename_lists__String(context,String__substring__Int32_Int32(local_0_st,11,((((SlagString*)local_0_st)->count)-3))),str64.value);
  }
  else
  {
    return local_0_st;
  }
}

static void TypeInfo__write_slagdoc( SXCRef context )
{
  SXCRef local_0_writer;

  Global__println__String(sxc_singletons[21],str1276.value);
  local_0_writer = FileWriter__init__String_Logical(type_ClassFileWriter.create(),str1277.value,false);
  FileWriter__write__String(local_0_writer,TypeInfo__build_slagdoc(context));
  FileWriter__close(local_0_writer);
}

static void TypeInfo__write_help( SXCRef context )
{
  SXCRef local_0__reader2159;
  SXCRef local_1_line;

  local_0__reader2159 = LineReader__init__Reader_of_Char(type_ClassLineReader.create(),((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),TypeInfo__build_help(context),0,-1)));
  while ((((ClassLineReader*)local_0__reader2159)->property_next != NULL))
  {
    local_1_line = LineReader__read(local_0__reader2159);
    Global__println__String(sxc_singletons[21],local_1_line);
  }
}

static SlagObject* TypeInfo__build_slagdoc( SXCRef context )
{
  SXCRef local_0_buffer;
  SlagLogical local_1_any_property_detail;
  SXCRef local_2__reader2165;
  SXCRef local_3_p;
  SXCRef local_4_doc_methods;
  SlagLogical local_5_any_method_detail;
  SXCRef local_6__reader2172;
  SXCRef local_7_m;
  SXCRef local_8__reader2176;
  SXCRef local_9_s;
  SXCRef local_10_work_singletons;
  SXCRef local_11_mgr_class;
  SXCRef local_12__reader2180;
  SXCRef local_13_s;
  SXCRef local_14_cls_name;
  SXCRef local_15_type_string;
  SXCRef local_16__reader2184;
  SXCRef local_17_p;
  SXCRef local_18__reader2187;
  SXCRef local_19_m;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    StringBuilder__print__String(local_0_buffer,str1278.value);
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
    {
      StringBuilder__print__String(local_0_buffer,str1279.value);
    }
    TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1280.value),((ClassTypeInfo*)context)->property_name),str1281.value)));
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
  {
    TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1282.value),((ClassTypeInfo*)context)->property_name),str1281.value)));
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1283.value),((ClassTypeInfo*)context)->property_name),str1281.value)));
  }
  TextWriter__println__String(local_0_buffer,str1284.value);
  local_1_any_property_detail = false;
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_properties))->property_count != 0))
  {
    TextWriter__println__String(local_0_buffer,str1285.value);
    TextWriter__println__String(local_0_buffer,str1286.value);
    local_2__reader2165 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)context)->property_properties);
    while (CallFn____Logical(14,local_2__reader2165))
    {
      local_3_p = CallFn____Object(45,local_2__reader2165);
      if ((((ClassPropertyInfo*)local_3_p)->property_doc_comment != NULL))
      {
        local_1_any_property_detail = true;
        TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1305.value),TypeInfo__anchor_name__String(context,PropertyInfo__x_name(local_3_p))),str1306.value),TypeInfo__anchor_name__String(context,PropertyInfo__x_name(local_3_p))),str386.value),((ClassPropertyInfo*)local_3_p)->property_name),str1307.value),TypeInfo__wiki_name(((ClassPropertyInfo*)local_3_p)->property_type))));
      }
      else
      {
        TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1308.value),((ClassPropertyInfo*)local_3_p)->property_name),str1309.value),TypeInfo__wiki_name(((ClassPropertyInfo*)local_3_p)->property_type))));
      }
    }
    TextWriter__println__String(local_0_buffer,str1310.value);
  }
  local_4_doc_methods = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassTypeInfo*)context)->property_methods);
  HeapSort_of_MethodInfo__sort__ArrayList_of_MethodInfo_Comparator_of_MethodInfo(sxc_singletons[17],local_4_doc_methods,SpecializedComparator_2167__init(type_ClassSpecializedComparator_2167.create()));
  local_5_any_method_detail = false;
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_methods))->property_count != 0))
  {
    TextWriter__println__String(local_0_buffer,str1316.value);
    TextWriter__println__String(local_0_buffer,str1286.value);
    local_6__reader2172 = ArrayList_of_MethodInfo__create_reader(local_4_doc_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_6__reader2172))
    {
      local_7_m = ArrayReader_of_MethodInfo__read(local_6__reader2172);
      if (String__opEQ__String(((ClassMethodInfo*)local_7_m)->property_signature,str975.value))
      {
        goto next_9968;
      }
      TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1308.value),TypeInfo__wiki_anchor__MethodInfo_Logical(context,local_7_m,true)),TypeInfo__wiki_signature__MethodInfo_Logical(context,local_7_m,true))));
      if ((((ClassMethodInfo*)local_7_m)->property_doc_comment != NULL))
      {
        local_5_any_method_detail = true;
      }
      next_9968:;
    }
    end_9968:;
    TextWriter__println__String(local_0_buffer,str1310.value);
  }
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_flat_base_types))->property_count != 0))
  {
    TextWriter__println__String(local_0_buffer,str1325.value);
    StringBuilder__print__String(local_0_buffer,str1326.value);
    StringBuilder__print__String(local_0_buffer,TypeInfo__wiki_name(((ClassTypeInfo*)((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_flat_base_types))->property_data)->data))[0])))));
    local_8__reader2176 = ArrayList_of_TypeInfo__from__Int32(((ClassTypeInfo*)context)->property_flat_base_types,1);
    while (ArrayReader_of_TypeInfo__has_another(local_8__reader2176))
    {
      local_9_s = ArrayReader_of_TypeInfo__read(local_8__reader2176);
      StringBuilder__print__String(local_0_buffer,str634.value);
      StringBuilder__print__String(local_0_buffer,TypeInfo__wiki_name(local_9_s));
    }
    TextWriter__println__String(local_0_buffer,str1327.value);
  }
  local_10_work_singletons = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassTypeInfo*)context)->property_singletons);
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    if ((context != ((ClassTypeManager*)sxc_singletons[7])->property_type_global))
    {
      ArrayList_of_TypeInfo__remove_value__TypeInfo(local_10_work_singletons,((ClassTypeManager*)sxc_singletons[7])->property_type_global);
      ArrayList_of_Object__insert__Object_Int32(local_10_work_singletons,((ClassTypeManager*)sxc_singletons[7])->property_type_global,0);
    }
    local_11_mgr_class = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassTypeInfo*)context)->property_t,TypeInfo__manager_name(context),NULL);
    if ((((ClassTypeInfo*)local_11_mgr_class)->property_qualifiers != NULL))
    {
      ArrayList_of_TypeInfo__remove_value__TypeInfo(local_10_work_singletons,local_11_mgr_class);
      ArrayList_of_Object__insert__Object_Int32(local_10_work_singletons,local_11_mgr_class,0);
    }
  }
  TextWriter__println__String(local_0_buffer,str1328.value);
  StringBuilder__print__String(local_0_buffer,str1326.value);
  StringBuilder__print__String(local_0_buffer,TypeInfo__wiki_name(((ClassTypeInfo*)((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_10_work_singletons))->property_data)->data))[0])))));
  local_12__reader2180 = ArrayList_of_TypeInfo__from__Int32(local_10_work_singletons,1);
  while (ArrayReader_of_TypeInfo__has_another(local_12__reader2180))
  {
    local_13_s = ArrayReader_of_TypeInfo__read(local_12__reader2180);
    StringBuilder__print__String(local_0_buffer,str634.value);
    StringBuilder__print__String(local_0_buffer,TypeInfo__wiki_name(local_13_s));
  }
  TextWriter__println__String(local_0_buffer,str1327.value);
  TextWriter__println__String(local_0_buffer,str1329.value);
  CallFn__Char(18,local_0_buffer,((SlagChar)10));
  CallFn__Char(18,local_0_buffer,((SlagChar)10));
  if ((((ClassTypeInfo*)context)->property_doc_comment != NULL))
  {
    TextWriter__println__String(local_0_buffer,str1330.value);
    TextWriter__println__String(local_0_buffer,TypeInfo__format_doc_comment__String_Logical(context,((ClassTypeInfo*)context)->property_doc_comment,false));
  }
  else if ((String__index_of__String_Int32(((ClassTypeInfo*)context)->property_name,str845.value,0) >= 0))
  {
    TextWriter__println__String(local_0_buffer,str1330.value);
    local_14_cls_name = String__opADD__String(String__before_first__String(((ClassTypeInfo*)context)->property_name,str845.value),String__after_first__String(((ClassTypeInfo*)context)->property_name,str845.value));
    local_15_type_string = str264.value;
    if (((((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,local_14_cls_name)) != NULL) && ((((ClassQualifiers*)((ClassTypeInfo*)((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,local_14_cls_name)))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0)))
    {
      local_15_type_string = str268.value;
    }
    TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassTypeInfo*)context)->property_name),str1334.value),local_15_type_string),str1335.value),local_14_cls_name),str386.value),local_14_cls_name),str1336.value),local_14_cls_name),str386.value),local_14_cls_name),str1337.value)));
  }
  CallFn__Char(18,local_0_buffer,((SlagChar)10));
  CallFn__Char(18,local_0_buffer,((SlagChar)10));
  if (((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_properties))->property_count != 0) && local_1_any_property_detail))
  {
    TextWriter__println__String(local_0_buffer,str1338.value);
    local_16__reader2184 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)context)->property_properties);
    while (CallFn____Logical(14,local_16__reader2184))
    {
      local_17_p = CallFn____Object(45,local_16__reader2184);
      if ((((ClassPropertyInfo*)local_17_p)->property_doc_comment == NULL))
      {
        goto next_10009;
      }
      TextWriter__println__String(local_0_buffer,str1284.value);
      TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1339.value),TypeInfo__anchor_name__String(context,PropertyInfo__x_name(local_17_p))),str1340.value),TypeInfo__anchor_name__String(context,PropertyInfo__x_name(local_17_p))),str386.value),((ClassPropertyInfo*)local_17_p)->property_name),str1341.value),TypeInfo__wiki_name(((ClassPropertyInfo*)local_17_p)->property_type)),str1342.value)));
      TextWriter__println__String(local_0_buffer,str1326.value);
      TextWriter__println__String(local_0_buffer,TypeInfo__format_doc_comment__String_Logical(context,((ClassPropertyInfo*)local_17_p)->property_doc_comment,false));
      TextWriter__println__String(local_0_buffer,str1343.value);
      CallFn__Char(18,local_0_buffer,((SlagChar)10));
      CallFn__Char(18,local_0_buffer,((SlagChar)10));
      next_10009:;
    }
    end_10009:;
  }
  if (((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_methods))->property_count != 0) && local_5_any_method_detail))
  {
    TextWriter__println__String(local_0_buffer,str1344.value);
    local_18__reader2187 = ArrayList_of_MethodInfo__create_reader(local_4_doc_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_18__reader2187))
    {
      local_19_m = ArrayReader_of_MethodInfo__read(local_18__reader2187);
      if (((((ClassMethodInfo*)local_19_m)->property_doc_comment == NULL) || String__opEQ__String(((ClassMethodInfo*)local_19_m)->property_signature,str975.value)))
      {
        goto next_10012;
      }
      TextWriter__println__String(local_0_buffer,String__opADD__String(TypeInfo__wiki_anchor__MethodInfo_Logical(context,local_19_m,false),str1284.value));
      TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1345.value),TypeInfo__wiki_signature__MethodInfo_Logical(context,local_19_m,false)),str1346.value)));
      TextWriter__println__String(local_0_buffer,str1326.value);
      StringBuilder__print__String(local_0_buffer,TypeInfo__format_doc_comment__String_Logical(context,((ClassMethodInfo*)local_19_m)->property_doc_comment,false));
      TextWriter__println__String(local_0_buffer,str1343.value);
      CallFn__Char(18,local_0_buffer,((SlagChar)10));
      CallFn__Char(18,local_0_buffer,((SlagChar)10));
      next_10012:;
    }
    end_10012:;
  }
  TextWriter__println__String(local_0_buffer,str1347.value);
  return StringBuilder__to_String(local_0_buffer);
}

static SlagObject* TypeInfo__build_help( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1_doc_methods;
  SXCRef local_2_lookfor;
  SlagLogical local_3_started_properties;
  SXCRef local_4__reader2194;
  SXCRef local_5_p;
  SXCRef local_6__reader2197;
  SXCRef local_7_line;
  SlagLogical local_8_started_methods;
  SXCRef local_9__reader2199;
  SXCRef local_10_m;
  SXCRef local_11__reader2202;
  SXCRef local_12_line;
  SXCRef local_13_cls_name;
  SXCRef local_14_type_string;
  SlagLogical local_15_any_property_detail;
  SXCRef local_16__reader2211;
  SXCRef local_17_p;
  SlagLogical local_18_any_method_detail;
  SXCRef local_19__reader2214;
  SXCRef local_20_m;
  SXCRef local_21__reader2218;
  SXCRef local_22_s;
  SXCRef local_23_work_singletons;
  SXCRef local_24_mgr_class;
  SXCRef local_25__reader2222;
  SXCRef local_26_s;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_1_doc_methods = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassTypeInfo*)context)->property_methods);
  HeapSort_of_MethodInfo__sort__ArrayList_of_MethodInfo_Comparator_of_MethodInfo(sxc_singletons[17],local_1_doc_methods,SpecializedComparator_2189__init(type_ClassSpecializedComparator_2189.create()));
  if ((String__index_of__String_Int32(((ClassSlagCompiler*)sxc_singletons[14])->property_help_type,str294.value,0) >= 0))
  {
    local_2_lookfor = String__after_first__String(((ClassSlagCompiler*)sxc_singletons[14])->property_help_type,str294.value);
    local_3_started_properties = false;
    local_4__reader2194 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)context)->property_properties);
    while (CallFn____Logical(14,local_4__reader2194))
    {
      local_5_p = CallFn____Object(45,local_4__reader2194);
      if ((String__index_of__String_Int32(((ClassPropertyInfo*)local_5_p)->property_name,local_2_lookfor,0) >= 0))
      {
        if (!local_3_started_properties)
        {
          local_3_started_properties = true;
          TextWriter__println__String(local_0_buffer,str274.value);
        }
        TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassPropertyInfo*)local_5_p)->property_name),str1309.value),TypeInfo__help_name(((ClassPropertyInfo*)local_5_p)->property_type))));
        local_6__reader2197 = LineReader__init__Reader_of_Char(type_ClassLineReader.create(),((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),TypeInfo__format_help_comment__String(context,((ClassPropertyInfo*)local_5_p)->property_doc_comment),0,-1)));
        while ((((ClassLineReader*)local_6__reader2197)->property_next != NULL))
        {
          local_7_line = LineReader__read(local_6__reader2197);
          TextWriter__println__String(local_0_buffer,String__opADD__String(str69.value,local_7_line));
        }
        CallFn__Char(18,local_0_buffer,((SlagChar)10));
      }
    }
    if (local_3_started_properties)
    {
      CallFn__Char(18,local_0_buffer,((SlagChar)10));
    }
    local_8_started_methods = false;
    local_9__reader2199 = ArrayList_of_MethodInfo__create_reader(local_1_doc_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_9__reader2199))
    {
      local_10_m = ArrayReader_of_MethodInfo__read(local_9__reader2199);
      if ((String__index_of__String_Int32(((ClassMethodInfo*)local_10_m)->property_signature,local_2_lookfor,0) >= 0))
      {
        if (!local_8_started_methods)
        {
          local_8_started_methods = true;
          TextWriter__println__String(local_0_buffer,str273.value);
        }
        TextWriter__println__String(local_0_buffer,TypeInfo__help_signature__MethodInfo(context,local_10_m));
        local_11__reader2202 = LineReader__init__Reader_of_Char(type_ClassLineReader.create(),((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),TypeInfo__format_help_comment__String(context,((ClassMethodInfo*)local_10_m)->property_doc_comment),0,-1)));
        while ((((ClassLineReader*)local_11__reader2202)->property_next != NULL))
        {
          local_12_line = LineReader__read(local_11__reader2202);
          TextWriter__println__String(local_0_buffer,String__opADD__String(str69.value,local_12_line));
        }
        CallFn__Char(18,local_0_buffer,((SlagChar)10));
      }
    }
    if (local_8_started_methods)
    {
      CallFn__Char(18,local_0_buffer,((SlagChar)10));
    }
    return StringBuilder__to_String(local_0_buffer);
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
    {
      StringBuilder__print__String(local_0_buffer,str1279.value);
    }
    TextWriter__println__String(local_0_buffer,String__opADD__String(str1280.value,((ClassTypeInfo*)context)->property_name));
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
  {
    TextWriter__println__String(local_0_buffer,String__opADD__String(str1353.value,((ClassTypeInfo*)context)->property_name));
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    TextWriter__println__String(local_0_buffer,String__opADD__String(str1354.value,((ClassTypeInfo*)context)->property_name));
  }
  CallFn__Char(18,local_0_buffer,((SlagChar)10));
  if ((((ClassTypeInfo*)context)->property_doc_comment != NULL))
  {
    TextWriter__println__String(local_0_buffer,str1355.value);
    TextWriter__println__String(local_0_buffer,TypeInfo__format_help_comment__String(context,((ClassTypeInfo*)context)->property_doc_comment));
    CallFn__Char(18,local_0_buffer,((SlagChar)10));
    CallFn__Char(18,local_0_buffer,((SlagChar)10));
  }
  else if ((String__index_of__String_Int32(((ClassTypeInfo*)context)->property_name,str845.value,0) >= 0))
  {
    TextWriter__println__String(local_0_buffer,str1355.value);
    local_13_cls_name = String__opADD__String(String__before_first__String(((ClassTypeInfo*)context)->property_name,str845.value),String__after_first__String(((ClassTypeInfo*)context)->property_name,str845.value));
    local_14_type_string = str264.value;
    if (((((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,local_13_cls_name)) != NULL) && ((((ClassQualifiers*)((ClassTypeInfo*)((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,local_13_cls_name)))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0)))
    {
      local_14_type_string = str268.value;
    }
    TextWriter__println__String(local_0_buffer,ArrayList_of_String__join__String(String__word_wrap__Int32(StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassTypeInfo*)context)->property_name),str1356.value),local_14_type_string),str1357.value)),79),str46.value));
    CallFn__Char(18,local_0_buffer,((SlagChar)10));
    CallFn__Char(18,local_0_buffer,((SlagChar)10));
  }
  local_15_any_property_detail = false;
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_properties))->property_count != 0))
  {
    TextWriter__println__String(local_0_buffer,str274.value);
    local_16__reader2211 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)context)->property_properties);
    while (CallFn____Logical(14,local_16__reader2211))
    {
      local_17_p = CallFn____Object(45,local_16__reader2211);
      if ((((ClassPropertyInfo*)local_17_p)->property_doc_comment != NULL))
      {
        local_15_any_property_detail = true;
      }
      TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassPropertyInfo*)local_17_p)->property_name),str1309.value),TypeInfo__help_name(((ClassPropertyInfo*)local_17_p)->property_type))));
    }
    CallFn__Char(18,local_0_buffer,((SlagChar)10));
  }
  local_18_any_method_detail = false;
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_methods))->property_count != 0))
  {
    TextWriter__println__String(local_0_buffer,str273.value);
    local_19__reader2214 = ArrayList_of_MethodInfo__create_reader(local_1_doc_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_19__reader2214))
    {
      local_20_m = ArrayReader_of_MethodInfo__read(local_19__reader2214);
      if (String__opEQ__String(((ClassMethodInfo*)local_20_m)->property_signature,str975.value))
      {
        goto next_10057;
      }
      TextWriter__println__String(local_0_buffer,TypeInfo__help_signature__MethodInfo(context,local_20_m));
      if ((((ClassMethodInfo*)local_20_m)->property_doc_comment != NULL))
      {
        local_18_any_method_detail = true;
      }
      next_10057:;
    }
    end_10057:;
    CallFn__Char(18,local_0_buffer,((SlagChar)10));
  }
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_flat_base_types))->property_count != 0))
  {
    TextWriter__println__String(local_0_buffer,str851.value);
    StringBuilder__print__String(local_0_buffer,TypeInfo__help_name(((ClassTypeInfo*)((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)context)->property_flat_base_types))->property_data)->data))[0])))));
    local_21__reader2218 = ArrayList_of_TypeInfo__from__Int32(((ClassTypeInfo*)context)->property_flat_base_types,1);
    while (ArrayReader_of_TypeInfo__has_another(local_21__reader2218))
    {
      local_22_s = ArrayReader_of_TypeInfo__read(local_21__reader2218);
      StringBuilder__print__String(local_0_buffer,str634.value);
      StringBuilder__print__String(local_0_buffer,TypeInfo__help_name(local_22_s));
    }
    CallFn__Char(18,local_0_buffer,((SlagChar)10));
    CallFn__Char(18,local_0_buffer,((SlagChar)10));
  }
  local_23_work_singletons = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassTypeInfo*)context)->property_singletons);
  if (((((ClassQualifiers*)((ClassTypeInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    if ((context != ((ClassTypeManager*)sxc_singletons[7])->property_type_global))
    {
      ArrayList_of_TypeInfo__remove_value__TypeInfo(local_23_work_singletons,((ClassTypeManager*)sxc_singletons[7])->property_type_global);
      ArrayList_of_Object__insert__Object_Int32(local_23_work_singletons,((ClassTypeManager*)sxc_singletons[7])->property_type_global,0);
    }
    local_24_mgr_class = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassTypeInfo*)context)->property_t,TypeInfo__manager_name(context),NULL);
    if ((((ClassTypeInfo*)local_24_mgr_class)->property_qualifiers != NULL))
    {
      ArrayList_of_TypeInfo__remove_value__TypeInfo(local_23_work_singletons,local_24_mgr_class);
      ArrayList_of_Object__insert__Object_Int32(local_23_work_singletons,local_24_mgr_class,0);
    }
  }
  TextWriter__println__String(local_0_buffer,str281.value);
  StringBuilder__print__String(local_0_buffer,TypeInfo__help_name(((ClassTypeInfo*)((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_23_work_singletons))->property_data)->data))[0])))));
  local_25__reader2222 = ArrayList_of_TypeInfo__from__Int32(local_23_work_singletons,1);
  while (ArrayReader_of_TypeInfo__has_another(local_25__reader2222))
  {
    local_26_s = ArrayReader_of_TypeInfo__read(local_25__reader2222);
    StringBuilder__print__String(local_0_buffer,str634.value);
    StringBuilder__print__String(local_0_buffer,TypeInfo__help_name(local_26_s));
  }
  CallFn__Char(18,local_0_buffer,((SlagChar)10));
  CallFn__Char(18,local_0_buffer,((SlagChar)10));
  return StringBuilder__to_String(local_0_buffer);
}

static SlagObject* TypeInfo__anchor_name__String( SXCRef context, SXCRef local_0_st )
{
  SlagInt32 local_1_i;

  local_1_i = String__index_of__String_Int32(local_0_st,str631.value,0);
  while ((local_1_i >= 0))
  {
    local_0_st = String__opADD__String(String__substring__Int32_Int32(local_0_st,0,(local_1_i-1)),String__substring__Int32(local_0_st,(local_1_i+1)));
    local_1_i = String__index_of__String_Int32(local_0_st,str631.value,0);
  }
  return local_0_st;
}

static SlagObject* TypeInfo__wiki_anchor__MethodInfo_Logical( SXCRef context, SXCRef local_0_m, SlagLogical local_1_short )
{
  SXCRef local_2_a_name;

  local_2_a_name = TypeInfo__anchor_name__String(context,String__after_first__String(MethodInfo__x_name(local_0_m),str631.value));
  if ((local_1_short && (((ClassMethodInfo*)local_0_m)->property_doc_comment != NULL)))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1317.value),local_2_a_name),str1318.value));
  }
  else if ((((ClassMethodInfo*)local_0_m)->property_doc_comment != NULL))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1319.value),local_2_a_name),str1318.value));
  }
  else
  {
    return str39.value;
  }
}

static SlagObject* TypeInfo__wiki_signature__MethodInfo_Logical( SXCRef context, SXCRef local_0_m, SlagLogical local_1_short )
{
  SXCRef local_2_buffer;
  SXCRef local_3_a_name;
  SlagInt32 local_4_i;
  SXCRef local_5__reader2229;
  SXCRef local_6_p;

  local_2_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_3_a_name = TypeInfo__anchor_name__String(context,String__after_first__String(MethodInfo__x_name(local_0_m),str631.value));
  if ((local_1_short && (((ClassMethodInfo*)local_0_m)->property_doc_comment != NULL)))
  {
    StringBuilder__print__String(local_2_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1320.value),local_3_a_name),str386.value),((ClassMethodInfo*)local_0_m)->property_name),str1303.value)));
  }
  else if ((((ClassMethodInfo*)local_0_m)->property_doc_comment != NULL))
  {
    StringBuilder__print__String(local_2_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1321.value),local_3_a_name),str386.value),((ClassMethodInfo*)local_0_m)->property_name),str1303.value)));
  }
  else
  {
    StringBuilder__print__String(local_2_buffer,((ClassMethodInfo*)local_0_m)->property_name);
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)40));
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_count != 0))
  {
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)32));
    if ((MethodInfo__min_params(local_0_m) == 0))
    {
      StringBuilder__print__String(local_2_buffer,str1322.value);
    }
    StringBuilder__print__String(local_2_buffer,TypeInfo__wiki_name(((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_data)->data))[0])))))->property_type));
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)32));
    StringBuilder__print__String(local_2_buffer,String__before_first__Char(((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_data)->data))[0])))))->property_name,((SlagChar)46)));
    if ((MethodInfo__min_params(local_0_m) == 0))
    {
      StringBuilder__print__String(local_2_buffer,str1323.value);
    }
    local_4_i = 1;
    local_5__reader2229 = ArrayList_of_ParameterInfo__from__Int32(((ClassMethodInfo*)local_0_m)->property_parameters,1);
    while (CallFn____Logical(14,local_5__reader2229))
    {
      local_6_p = CallFn____Object(45,local_5__reader2229);
      StringBuilder__print__String(local_2_buffer,str634.value);
      if ((MethodInfo__min_params(local_0_m) <= local_4_i))
      {
        StringBuilder__print__String(local_2_buffer,str1322.value);
      }
      StringBuilder__print__String(local_2_buffer,TypeInfo__wiki_name(((ClassParameterInfo*)local_6_p)->property_type));
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)32));
      StringBuilder__print__String(local_2_buffer,String__before_first__Char(((ClassParameterInfo*)local_6_p)->property_name,((SlagChar)46)));
      if ((MethodInfo__min_params(local_0_m) <= local_4_i))
      {
        StringBuilder__print__String(local_2_buffer,str1323.value);
      }
      ++local_4_i;
    }
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)32));
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)41));
  if ((((ClassMethodInfo*)local_0_m)->property_return_type != NULL))
  {
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)46));
    StringBuilder__print__String(local_2_buffer,TypeInfo__wiki_name(((ClassMethodInfo*)local_0_m)->property_return_type));
  }
  if ((((ClassMethodInfo*)local_0_m)->property_type_context != context))
  {
    StringBuilder__print__String(local_2_buffer,str1324.value);
  }
  return StringBuilder__to_String(local_2_buffer);
}

static SlagObject* TypeInfo__help_signature__MethodInfo( SXCRef context, SXCRef local_0_m )
{
  SXCRef local_1_buffer;
  SlagInt32 local_2_i;
  SXCRef local_3__reader2237;
  SXCRef local_4_p;

  local_1_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  StringBuilder__print__String(local_1_buffer,((ClassMethodInfo*)local_0_m)->property_name);
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_buffer)->property_data,((SlagChar)40));
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_count != 0))
  {
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_buffer)->property_data,((SlagChar)32));
    if ((MethodInfo__min_params(local_0_m) == 0))
    {
      StringBuilder__print__String(local_1_buffer,str52.value);
    }
    StringBuilder__print__String(local_1_buffer,TypeInfo__help_name(((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_data)->data))[0])))))->property_type));
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_buffer)->property_data,((SlagChar)32));
    StringBuilder__print__String(local_1_buffer,String__before_first__Char(((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_data)->data))[0])))))->property_name,((SlagChar)46)));
    if ((MethodInfo__min_params(local_0_m) == 0))
    {
      StringBuilder__print__String(local_1_buffer,str54.value);
    }
    local_2_i = 1;
    local_3__reader2237 = ArrayList_of_ParameterInfo__from__Int32(((ClassMethodInfo*)local_0_m)->property_parameters,1);
    while (CallFn____Logical(14,local_3__reader2237))
    {
      local_4_p = CallFn____Object(45,local_3__reader2237);
      StringBuilder__print__String(local_1_buffer,str634.value);
      if ((MethodInfo__min_params(local_0_m) <= local_2_i))
      {
        StringBuilder__print__String(local_1_buffer,str52.value);
      }
      StringBuilder__print__String(local_1_buffer,TypeInfo__help_name(((ClassParameterInfo*)local_4_p)->property_type));
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_buffer)->property_data,((SlagChar)32));
      StringBuilder__print__String(local_1_buffer,String__before_first__Char(((ClassParameterInfo*)local_4_p)->property_name,((SlagChar)46)));
      if ((MethodInfo__min_params(local_0_m) <= local_2_i))
      {
        StringBuilder__print__String(local_1_buffer,str54.value);
      }
      ++local_2_i;
    }
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_buffer)->property_data,((SlagChar)32));
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_buffer)->property_data,((SlagChar)41));
  if ((((ClassMethodInfo*)local_0_m)->property_return_type != NULL))
  {
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_buffer)->property_data,((SlagChar)46));
    StringBuilder__print__String(local_1_buffer,TypeInfo__help_name(((ClassMethodInfo*)local_0_m)->property_return_type));
  }
  return StringBuilder__to_String(local_1_buffer);
}

static SlagObject* TypeInfo__format_doc_comment__String_Logical( SXCRef context, SXCRef local_0_comment, SlagLogical local_1_first_sentence )
{
  SXCRef local_2_buffer;
  SXCRef local_3__reader2242;
  SXCRef local_4_line;
  SXCRef local_5_result;
  SlagInt32 local_6_end1;
  SlagInt32 local_7_end2;
  SlagInt32 local_8_end3;
  SlagInt32 local_9_end;
  SXCRef local_10__reader2249;
  SXCRef local_11_line;

  local_2_buffer = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((SlagString*)local_0_comment)->count));
  if (local_1_first_sentence)
  {
    local_3__reader2242 = LineReader__init__Reader_of_Char(type_ClassLineReader.create(),((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_comment,0,-1)));
    while ((((ClassLineReader*)local_3__reader2242)->property_next != NULL))
    {
      local_4_line = LineReader__read(local_3__reader2242);
      local_4_line = String__trim(local_4_line);
      if (((((SlagString*)local_4_line)->count) == 0))
      {
        goto end_9992;
      }
      if ((((((SlagString*)local_4_line)->count) >= 2) && (((SlagInt32)String__get__Int32(local_4_line,1)) == 32)))
      {
        goto end_9992;
      }
      if ((((ClassArrayList_of_Char*)((ClassStringBuilder*)local_2_buffer)->property_data)->property_count != 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)32));
      }
      StringBuilder__print__String(local_2_buffer,local_4_line);
      next_9992:;
    }
    end_9992:;
    local_5_result = StringBuilder__to_String(local_2_buffer);
    local_6_end1 = String__index_of__String_Int32(local_5_result,str1331.value,0);
    local_7_end2 = String__index_of__String_Int32(local_5_result,str1332.value,0);
    local_8_end3 = String__index_of__String_Int32(local_5_result,str1333.value,0);
    local_9_end = ((((SlagString*)local_5_result)->count)-1);
    if (((local_6_end1 >= 0) && (local_6_end1 < local_9_end)))
    {
      local_9_end = local_6_end1;
    }
    if (((local_7_end2 >= 0) && (local_7_end2 < local_9_end)))
    {
      local_9_end = local_7_end2;
    }
    if (((local_8_end3 >= 0) && (local_8_end3 < local_9_end)))
    {
      local_9_end = local_8_end3;
    }
    return String__substring__Int32_Int32(local_5_result,0,local_9_end);
  }
  else
  {
    local_10__reader2249 = LineReader__init__Reader_of_Char(type_ClassLineReader.create(),((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_comment,0,-1)));
    while ((((ClassLineReader*)local_10__reader2249)->property_next != NULL))
    {
      local_11_line = LineReader__read(local_10__reader2249);
      if (((((SlagString*)local_11_line)->count) != 0))
      {
        TextWriter__println__String(local_2_buffer,String__substring__Int32(local_11_line,1));
      }
      else
      {
        CallFn__Char(18,local_2_buffer,((SlagChar)10));
      }
    }
    return StringBuilder__to_String(local_2_buffer);
  }
}

static SlagObject* TypeInfo__format_help_comment__String( SXCRef context, SXCRef local_0_comment )
{
  SXCRef local_1_buffer;
  SlagLogical local_2_new_line;
  SXCRef local_3__reader2252;
  SXCRef local_4_line;
  SXCRef local_5_result;

  if ((local_0_comment == NULL))
  {
    return str39.value;
  }
  local_1_buffer = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((SlagString*)local_0_comment)->count));
  local_2_new_line = true;
  local_3__reader2252 = LineReader__init__Reader_of_Char(type_ClassLineReader.create(),((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_comment,0,-1)));
  while ((((ClassLineReader*)local_3__reader2252)->property_next != NULL))
  {
    local_4_line = LineReader__read(local_3__reader2252);
    while (String__ends_with__Char(local_4_line,((SlagChar)32)))
    {
      local_4_line = String__excluding_rightmost__Int32(local_4_line,1);
    }
    if (((((SlagString*)local_4_line)->count) != 0))
    {
      local_4_line = String__substring__Int32(local_4_line,1);
      if (String__begins_with__Char(local_4_line,((SlagChar)32)))
      {
        if (!local_2_new_line)
        {
          CallFn__Char(18,local_1_buffer,((SlagChar)10));
        }
      }
      else if (!local_2_new_line)
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_buffer)->property_data,((SlagChar)32));
      }
      StringBuilder__print__String(local_1_buffer,local_4_line);
      local_2_new_line = false;
    }
    else
    {
      if (!local_2_new_line)
      {
        CallFn__Char(18,local_1_buffer,((SlagChar)10));
      }
      CallFn__Char(18,local_1_buffer,((SlagChar)10));
      local_2_new_line = true;
    }
  }
  if (!local_2_new_line)
  {
    CallFn__Char(18,local_1_buffer,((SlagChar)10));
  }
  local_5_result = StringBuilder__to_String(local_1_buffer);
  local_5_result = String__replace__String_String(local_5_result,str1349.value,str46.value);
  local_5_result = String__replace__String_String(local_5_result,str1350.value,str46.value);
  local_5_result = String__replace__String_String(local_5_result,str1351.value,str46.value);
  local_5_result = String__replace__String_String(local_5_result,str1352.value,str46.value);
  return ArrayList_of_String__join__String(String__word_wrap__Int32(local_5_result,77),str46.value);
}

void TypeInfo__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_augments), ArrayList_of_TypeInfo__init__Int32(type_ClassArrayList_of_TypeInfo.create(),0) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_base_types), ArrayList_of_TypeInfo__init__Int32(type_ClassArrayList_of_TypeInfo.create(),1) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_flat_base_types), ArrayList_of_TypeInfo__init__Int32(type_ClassArrayList_of_TypeInfo.create(),1) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_methods), ArrayList_of_MethodInfo__init__Int32(type_ClassArrayList_of_MethodInfo.create(),4) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_properties), ArrayList_of_PropertyInfo__init__Int32(type_ClassArrayList_of_PropertyInfo.create(),4) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_singletons), ArrayList_of_TypeInfo__init__Int32(type_ClassArrayList_of_TypeInfo.create(),1) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_categories), ArrayList_of_CategoryInfo__init__Int32(type_ClassArrayList_of_CategoryInfo.create(),0) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_properties_by_name), HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init(type_ClassHashTable_of_String_and_PropertyInfo.create()) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_methods_by_name), HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init(type_ClassMethodTable.create()) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_methods_by_signature), HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init(type_ClassHashTable_of_String_and_MethodInfo.create()) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_get_methods), HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_MethodInfo.create(),4,sxc_int64_as_real64(0x4008000000000000LL)) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_set_methods), HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_MethodInfo.create(),4,sxc_int64_as_real64(0x4008000000000000LL)) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_type_mappings), ArrayList_of_TypeMapping__init__Int32(type_ClassArrayList_of_TypeMapping.create(),0) );
  sxc_write_ref( &(((ClassTypeInfo*)context)->property_incorporating_classes), ArrayList_of_TypeInfo__init__Int32(type_ClassArrayList_of_TypeInfo.create(),1) );
  ((ClassTypeInfo*)context)->property_singleton_index = -1;
}

SlagObject* TypeInfo__type_name( SXCRef context )
{
  return str556.value;
}

static SlagObject* Array_of_ParameterInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_ParameterInfo.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_ParameterInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_ParameterInfo__type_name( SXCRef context )
{
  return str533.value;
}

SlagObject* ArrayList_of_ParameterInfo__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count5435;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count5435 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count5435))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_ParameterInfo__init( SXCRef context )
{
  ArrayList_of_ParameterInfo__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_ParameterInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_ParameterInfo*)context)->property_data), type_ClassArray_of_ParameterInfo.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_ParameterInfo__create_reader( SXCRef context )
{
  return ArrayReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo_Int32_Int32(type_ClassArrayReader_of_ParameterInfo.create(),context,((ClassArrayList_of_ParameterInfo*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagObject* ArrayList_of_ParameterInfo__from__Int32( SXCRef context, SlagInt32 local_0_starting_index )
{
  return ArrayReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo_Int32_Int32(type_ClassArrayReader_of_ParameterInfo.create(),context,((ClassArrayList_of_ParameterInfo*)context)->property_data,local_0_starting_index,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-local_0_starting_index));
}

static SlagObject* ArrayList_of_ParameterInfo__reverse_order( SXCRef context )
{
  return ArrayReverseReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo(type_ClassArrayReverseReader_of_ParameterInfo.create(),context,((ClassArrayList_of_ParameterInfo*)context)->property_data);
}

static SlagInt32 ArrayList_of_ParameterInfo__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_ParameterInfo__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_ParameterInfo__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

static SlagObject* ArrayList_of_ParameterInfo__get__Int32( SXCRef context, SlagInt32 local_0_index )
{
  return ((ClassParameterInfo*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_0_index]);
}

SlagObject* ArrayList_of_ParameterInfo__add__ParameterInfo( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_ParameterInfo*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_ParameterInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_ParameterInfo*)local_0_dup)->property_data,((ClassArrayList_of_ParameterInfo*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_ParameterInfo*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_ParameterInfo__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_ParameterInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_ParameterInfo__type_name( SXCRef context )
{
  return str534.value;
}

static SlagObject* HashTableBase_of_String_and_String_and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_String_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_String_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_String_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_String_and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_String_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_String.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_String_and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_String_and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_String*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_String_and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

static SlagObject* HashTableBase_of_String_and_String_and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_String_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

static SlagObject* HashTableBase_of_String_and_String_and_Object_and_Object__create_reader( SXCRef context )
{
  return ((AspectReader_of_String*)CoerceReader_of_String__init__Reader_of_Object(type_ClassCoerceReader_of_String.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_String_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_String_and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_String_and_Object_and_Object__type_name( SXCRef context )
{
  return str15.value;
}

void HashTable_of_String_and_String__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_String__type_name( SXCRef context )
{
  return str16.value;
}

static SlagObject* HashSet_of_String__add__String( SXCRef context, SXCRef local_0_value )
{
  if (!GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashSet_of_String*)context)->property_data,local_0_value))
  {
    GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashSet_of_String*)context)->property_data,local_0_value,local_0_value);
  }
  return context;
}

static SlagObject* HashSet_of_String__create_reader( SXCRef context )
{
  return ((AspectReader_of_String*)CoerceReader_of_String__init__Reader_of_Object(type_ClassCoerceReader_of_String.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashSet_of_String*)context)->property_data)->property_bins)))));
}

void HashSet_of_String__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashSet_of_String__type_name( SXCRef context )
{
  return str17.value;
}

static SlagObject* MethodGroup__init__String_MethodInfo( SXCRef context, SXCRef local_0_signature_6406, SXCRef local_1_m )
{
  sxc_write_ref( &(((ClassMethodGroup*)context)->property_signature), local_0_signature_6406 );
  sxc_write_ref( &(((ClassMethodInfo*)local_1_m)->property_group), context );
  ArrayList_of_Object__add__Object(((ClassMethodGroup*)context)->property_methods,local_1_m);
  HashSet_of_String__add__String(((ClassMethodGroup*)context)->property_method_hash,((ClassMethodInfo*)local_1_m)->property_full_signature);
  return context;
}

static void MethodGroup__add__MethodInfo( SXCRef context, SXCRef local_0_m )
{
  sxc_write_ref( &(((ClassMethodInfo*)local_0_m)->property_group), context );
  if (!GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashSet_of_String*)((ClassMethodGroup*)context)->property_method_hash)->property_data,((ClassMethodInfo*)local_0_m)->property_full_signature))
  {
    HashSet_of_String__add__String(((ClassMethodGroup*)context)->property_method_hash,((ClassMethodInfo*)local_0_m)->property_signature);
    ArrayList_of_Object__add__Object(((ClassMethodGroup*)context)->property_methods,local_0_m);
  }
}

static void MethodGroup__mark_called( SXCRef context )
{
  SXCRef local_0__reader2326;
  SXCRef local_1_m;

  local_0__reader2326 = ArrayList_of_MethodInfo__create_reader(((ClassMethodGroup*)context)->property_methods);
  while (ArrayReader_of_MethodInfo__has_another(local_0__reader2326))
  {
    local_1_m = ArrayReader_of_MethodInfo__read(local_0__reader2326);
    ((ClassMethodInfo*)local_1_m)->property_called = true;
  }
}

void MethodGroup__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassMethodGroup*)context)->property_index = -1;
  sxc_write_ref( &(((ClassMethodGroup*)context)->property_methods), ArrayList_of_MethodInfo__init__Int32(type_ClassArrayList_of_MethodInfo.create(),2) );
  sxc_write_ref( &(((ClassMethodGroup*)context)->property_method_hash), HashTableBase_of_String_and_String_and_Object_and_Object__init(type_ClassHashSet_of_String.create()) );
}

SlagObject* MethodGroup__type_name( SXCRef context )
{
  return str560.value;
}

static SlagObject* Array_of_LocalVarInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_LocalVarInfo.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_LocalVarInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_LocalVarInfo__type_name( SXCRef context )
{
  return str488.value;
}

SlagObject* ArrayList_of_LocalVarInfo__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count5491;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count5491 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count5491))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassLocalVarInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_LocalVarInfo__init( SXCRef context )
{
  ArrayList_of_LocalVarInfo__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_LocalVarInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_LocalVarInfo*)context)->property_data), type_ClassArray_of_LocalVarInfo.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_LocalVarInfo__create_reader( SXCRef context )
{
  return ArrayReader_of_LocalVarInfo__init__Collection_of_LocalVarInfo_Array_of_LocalVarInfo_Int32_Int32(type_ClassArrayReader_of_LocalVarInfo.create(),context,((ClassArrayList_of_LocalVarInfo*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagObject* ArrayList_of_LocalVarInfo__from__Int32( SXCRef context, SlagInt32 local_0_starting_index )
{
  return ArrayReader_of_LocalVarInfo__init__Collection_of_LocalVarInfo_Array_of_LocalVarInfo_Int32_Int32(type_ClassArrayReader_of_LocalVarInfo.create(),context,((ClassArrayList_of_LocalVarInfo*)context)->property_data,local_0_starting_index,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-local_0_starting_index));
}

static SlagInt32 ArrayList_of_LocalVarInfo__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_LocalVarInfo__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_LocalVarInfo__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_LocalVarInfo__add__LocalVarInfo( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_LocalVarInfo*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_LocalVarInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_LocalVarInfo__init__Int32(type_ClassArrayList_of_LocalVarInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_LocalVarInfo*)local_0_dup)->property_data,((ClassArrayList_of_LocalVarInfo*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_LocalVarInfo*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_LocalVarInfo__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_LocalVarInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_LocalVarInfo__type_name( SXCRef context )
{
  return str489.value;
}

static SlagObject* MethodInfo__init__Token_Qualifiers_TypeInfo_String( SXCRef context, SXCRef local_0_t_6423, SXCRef local_1_qualifiers_6422, SXCRef local_2_type_context_6421, SXCRef local_3_name_6420 )
{
  sxc_write_ref( &(((ClassMethodInfo*)context)->property_t), local_0_t_6423 );
  sxc_write_ref( &(((ClassMethodInfo*)context)->property_qualifiers), local_1_qualifiers_6422 );
  sxc_write_ref( &(((ClassMethodInfo*)context)->property_type_context), local_2_type_context_6421 );
  sxc_write_ref( &(((ClassMethodInfo*)context)->property_name), local_3_name_6420 );
  return context;
}

static SlagObject* MethodInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_m;
  SXCRef local_1__reader2260;
  SXCRef local_2_param;

  local_0_new_m = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),((ClassMethodInfo*)context)->property_t,((ClassMethodInfo*)context)->property_qualifiers,((ClassMethodInfo*)context)->property_type_context,((ClassMethodInfo*)context)->property_name);
  sxc_write_ref( &(((ClassMethodInfo*)local_0_new_m)->property_parameters), ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_parameters))->property_count) );
  local_1__reader2260 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)context)->property_parameters);
  while (CallFn____Logical(14,local_1__reader2260))
  {
    local_2_param = CallFn____Object(45,local_1__reader2260);
    local_2_param = ObjectManager__create_duplicate__Object(sxc_singletons[34],local_2_param);
    sxc_write_ref( &(((ClassParameterInfo*)local_2_param)->property_method_context), local_0_new_m );
    ArrayList_of_Object__add__Object(((ClassMethodInfo*)local_0_new_m)->property_parameters,local_2_param);
  }
  sxc_write_ref( &(((ClassMethodInfo*)local_0_new_m)->property_return_type), ((ClassMethodInfo*)context)->property_return_type );
  sxc_write_ref( &(((ClassMethodInfo*)local_0_new_m)->property_body), ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassMethodInfo*)context)->property_body) );
  sxc_write_ref( &(((ClassMethodInfo*)local_0_new_m)->property_original_body), ((ClassMethodInfo*)context)->property_original_body );
  sxc_write_ref( &(((ClassMethodInfo*)local_0_new_m)->property_doc_comment), ((ClassMethodInfo*)context)->property_doc_comment );
  return local_0_new_m;
}

static SlagLogical MethodInfo__is_aspect_method( SXCRef context )
{
  return (((((ClassQualifiers*)((ClassMethodInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_overlaying)->property_flags) != 0) || ((((ClassQualifiers*)((ClassMethodInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_underlying)->property_flags) != 0));
}

static SlagInt32 MethodInfo__min_params( SXCRef context )
{
  SXCRef local_0__reader2268;
  SlagInt32 local_1_i;

  if ((((ClassMethodInfo*)context)->property_min_params >= 0))
  {
    return ((ClassMethodInfo*)context)->property_min_params;
  }
  local_0__reader2268 = CallFn____Object(44,((ClassRange_of_Int32*)RangeGE_of_Int32__init__Int32_Int32_Int32(type_ClassRangeGE_of_Int32.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_parameters))->property_count-1),0,-1)));
  while (CallFn____Logical(14,local_0__reader2268))
  {
    local_1_i = CallFn____Int32(30,local_0__reader2268);
    if (!(((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_parameters))->property_data)->data))[local_1_i])))->property_default_value != NULL))
    {
      ((ClassMethodInfo*)context)->property_min_params = local_1_i;
      goto end_8926;
    }
    next_8926:;
  }
  end_8926:;
  ++(((ClassMethodInfo*)context)->property_min_params);
  return ((ClassMethodInfo*)context)->property_min_params;
}

static SlagObject* MethodInfo__base_return_type( SXCRef context )
{
  SXCRef local_0__reader2271;
  SXCRef local_1_base_type;

  if ((((ClassMethodInfo*)context)->property_return_type == NULL))
  {
    return NULL;
  }
  local_0__reader2271 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader2271))
  {
    local_1_base_type = ArrayReader_of_TypeInfo__read(local_0__reader2271);
    if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_1_base_type)->property_methods_by_signature)->property_data,((ClassMethodInfo*)context)->property_signature))
    {
      return MethodInfo__base_return_type(((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_1_base_type)->property_methods_by_signature)->property_data,((ClassMethodInfo*)context)->property_signature)));
    }
  }
  return ((ClassMethodInfo*)context)->property_return_type;
}

static void MethodInfo__resolve( SXCRef context )
{
  SXCRef local_0__reader2275;
  SXCRef local_1_p;
  SXCRef local_2_old_context;
  SXCRef local_3__reader2278;
  SXCRef local_4_p;
  SXCRef local_5__reader2281;
  SXCRef local_6_specializing_type;
  SXCRef local_7_generic_map_buffer;
  SlagLogical local_8_first;
  SXCRef local_9__reader2282;
  SXCRef local_10_specializing_type;
  SXCRef local_11_generic_map_name;
  SXCRef local_12_generic_map_type;
  SXCRef local_13_subst_tokens;
  SXCRef local_14__reader2286;
  SXCRef local_15_specializing_type;
  SXCRef local_16_sig_buffer;
  SXCRef local_17__reader2287;
  SXCRef local_18_p;
  SXCRef local_19_generic_sig;
  SXCRef local_20_generic_m;
  SXCRef local_21_args;
  SlagInt32 local_22_i;
  SXCRef local_23__reader2290;
  SXCRef local_24_v;
  SXCRef local_25_cmd;
  SlagInt32 local_27_c_index;
  SXCRef local_28_incorporating_class;
  SXCRef local_29_entry;

  if (((ClassMethodInfo*)context)->property_resolved)
  {
    return;
  }
  ((ClassMethodInfo*)context)->property_resolved = true;
  TypeInfo__resolve(((ClassMethodInfo*)context)->property_type_context);
  if ((((ClassMethodInfo*)context)->property_prior_m != NULL))
  {
    MethodInfo__resolve(((ClassMethodInfo*)context)->property_prior_m);
  }
  local_0__reader2275 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)context)->property_parameters);
  while (CallFn____Logical(14,local_0__reader2275))
  {
    local_1_p = CallFn____Object(45,local_0__reader2275);
    TypeInfo__resolve(((ClassParameterInfo*)local_1_p)->property_type);
  }
  if ((((ClassMethodInfo*)context)->property_return_type != NULL))
  {
    TypeInfo__resolve(((ClassMethodInfo*)context)->property_return_type);
  }
  local_2_old_context = sxc_singletons[10];
  sxc_write_ref( &sxc_singletons[10], Context__init__TypeInfo_MethodInfo_Logical(type_ClassContext.create(),((ClassMethodInfo*)context)->property_type_context,context,true) );
  ((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_visited = true;
  SLAG_TRY
  {
    ArrayList_of_Object__add__Object(((ClassLocalVarTable*)((ClassContext*)sxc_singletons[10])->property_local_var_table)->property_scopes,HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_LocalVarInfo.create(),4,sxc_int64_as_real64(0x4008000000000000LL)));
    local_3__reader2278 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)context)->property_parameters);
    while (CallFn____Logical(14,local_3__reader2278))
    {
      local_4_p = CallFn____Object(45,local_3__reader2278);
      LocalVarTable__define__LocalVarInfo(((ClassContext*)sxc_singletons[10])->property_local_var_table,MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),((ClassParameterInfo*)local_4_p)->property_t,context,((ClassParameterInfo*)local_4_p)->property_type,((ClassParameterInfo*)local_4_p)->property_name,-1));
    }
    if (((((ClassQualifiers*)((ClassMethodInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_generic)->property_flags) != 0))
    {
      {
        if (!(((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_substitution_types != NULL)) goto unsatisfied_8836;
        local_5__reader2281 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_substitution_types);
        while (ArrayReader_of_TypeInfo__has_another(local_5__reader2281))
        {
          local_6_specializing_type = ArrayReader_of_TypeInfo__read(local_5__reader2281);
          if (!(local_6_specializing_type != NULL)) goto unsatisfied_8836;
        }
        satisfied_8836:;
        goto end_8836;
        unsatisfied_8836:;
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassMethodInfo*)context)->property_t,str1040.value)) );
        }
      }
      end_8836:;
      local_7_generic_map_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),String__before_first__Char(((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_name,((SlagChar)60)));
      StringBuilder__print__String(local_7_generic_map_buffer,str364.value);
      local_8_first = true;
      local_9__reader2282 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_substitution_types);
      while (ArrayReader_of_TypeInfo__has_another(local_9__reader2282))
      {
        local_10_specializing_type = ArrayReader_of_TypeInfo__read(local_9__reader2282);
        if (local_8_first)
        {
          local_8_first = false;
        }
        else
        {
          ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_7_generic_map_buffer)->property_data,((SlagChar)44));
        }
        StringBuilder__print__String(local_7_generic_map_buffer,((ClassTypeInfo*)TypeInfo__generic_type(local_10_specializing_type))->property_name);
      }
      StringBuilder__print__String(local_7_generic_map_buffer,str365.value);
      local_11_generic_map_name = StringBuilder__to_String(local_7_generic_map_buffer);
      {
        local_12_generic_map_type = NULL;
        if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,local_11_generic_map_name))
        {
          local_12_generic_map_type = ((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,local_11_generic_map_name));
        }
        else
        {
          local_13_subst_tokens = ArrayList_of_ArrayList_of_Token__init(type_ClassArrayList_of_ArrayList_of_Token.create());
          local_14__reader2286 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_substitution_types);
          while (ArrayReader_of_TypeInfo__has_another(local_14__reader2286))
          {
            local_15_specializing_type = ArrayReader_of_TypeInfo__read(local_14__reader2286);
            ArrayList_of_Object__add__Object(local_13_subst_tokens,((ClassArrayList_of_Token*)((ClassArrayList_of_Token*)ArrayList_of_Object__add__Object(ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),1),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_identifier,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)((ClassMethodInfo*)context)->property_t)->property_file_index]))),((ClassToken*)((ClassMethodInfo*)context)->property_t)->property_pos,((ClassTypeInfo*)TypeInfo__generic_type(local_15_specializing_type))->property_name)))));
          }
          local_12_generic_map_type = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_t,String__before_first__Char(local_11_generic_map_name,((SlagChar)60)),local_13_subst_tokens);
        }
        TypeInfo__resolve(local_12_generic_map_type);
        if (!(local_12_generic_map_type != ((ClassMethodInfo*)context)->property_type_context)) goto unsatisfied_8841;
        local_16_sig_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMethodInfo*)context)->property_name);
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_16_sig_buffer)->property_data,((SlagChar)40));
        local_8_first = true;
        local_17__reader2287 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)context)->property_parameters);
        while (CallFn____Logical(14,local_17__reader2287))
        {
          local_18_p = CallFn____Object(45,local_17__reader2287);
          if (local_8_first)
          {
            local_8_first = false;
          }
          else
          {
            ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_16_sig_buffer)->property_data,((SlagChar)44));
          }
          if ((ArrayList_of_TypeInfo__index_of__TypeInfo_Int32(((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_substitution_types,((ClassParameterInfo*)local_18_p)->property_type,0) >= 0))
          {
            StringBuilder__print__String(local_16_sig_buffer,((ClassTypeInfo*)TypeInfo__generic_type(((ClassParameterInfo*)local_18_p)->property_type))->property_name);
          }
          else
          {
            StringBuilder__print__String(local_16_sig_buffer,((ClassTypeInfo*)((ClassParameterInfo*)local_18_p)->property_type)->property_name);
          }
        }
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_16_sig_buffer)->property_data,((SlagChar)41));
        local_19_generic_sig = StringBuilder__to_String(local_16_sig_buffer);
        if (!GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_12_generic_map_type)->property_methods_by_signature)->property_data,local_19_generic_sig)) goto unsatisfied_8841;
        local_20_generic_m = ((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_12_generic_map_type)->property_methods_by_signature)->property_data,local_19_generic_sig));
        local_21_args = CmdList__init__Int32(type_ClassCmdList.create(),2);
        local_22_i = 0;
        local_23__reader2290 = ArrayList_of_LocalVarInfo__create_reader(((ClassMethodInfo*)context)->property_local_vars);
        while (ArrayReader_of_LocalVarInfo__has_another(local_23__reader2290))
        {
          local_24_v = ArrayReader_of_LocalVarInfo__read(local_23__reader2290);
          ArrayList_of_Object__add__Object(local_21_args,CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),((ClassMethodInfo*)context)->property_t,local_24_v));
        }
        local_25_cmd = CmdContextCall__init__Token_Cmd_MethodInfo_CmdList(type_ClassCmdStaticCall.create(),((ClassMethodInfo*)context)->property_t,CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),((ClassMethodInfo*)context)->property_t,((ClassMethodInfo*)context)->property_type_context),local_20_generic_m,local_21_args);
        if ((((ClassMethodInfo*)context)->property_return_type != NULL))
        {
          local_25_cmd = CmdReturnValue__init__Token_Cmd_Logical(type_ClassCmdReturnValue.create(),((ClassMethodInfo*)context)->property_t,CmdCoerceAs__init__Token_Cmd_TypeInfo(type_ClassCmdCoerceAs.create(),((ClassMethodInfo*)context)->property_t,local_25_cmd,((ClassMethodInfo*)context)->property_return_type),false);
        }
        MethodInfo__resolve(local_20_generic_m);
        ArrayList_of_Object__clear(((ClassCmdStatementList*)((ClassMethodInfo*)context)->property_body)->property_statements);
        ArrayList_of_Object__add__Object(((ClassCmdStatementList*)((ClassMethodInfo*)context)->property_body)->property_statements,local_25_cmd);
        satisfied_8841:;
        goto end_8841;
        unsatisfied_8841:;
      }
      end_8841:;
    }
    if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      if ((((((ClassQualifiers*)((ClassMethodInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_propagated)->property_flags) != 0) && (((ClassMethodInfo*)context)->property_original_body == NULL)))
      {
        sxc_write_ref( &(((ClassMethodInfo*)context)->property_original_body), ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassMethodInfo*)context)->property_body) );
      }
      CmdStatementList__resolve(((ClassMethodInfo*)context)->property_body);
    }
    else
    {
      ((ClassMethodInfo*)context)->property_supports_inlining = false;
    }
    sxc_write_ref( &sxc_singletons[10], local_2_old_context );
  }
  SLAG_CATCH(_err1)
  {
    SlagTypeInfo* _err1_type = _err1->type;
    if (_err1_type->instance_of(&type_ClassSlagError))
    {
      SXCRef local_26_err = _err1;
      sxc_write_ref( &sxc_singletons[10], local_2_old_context );
      SLAG_THROW( local_26_err );
    }
    else
    {
      SLAG_THROW(_err1);
    }
  }
  local_27_c_index = 0;
  while ((local_27_c_index < ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_incorporating_classes))->property_count))
  {
    local_28_incorporating_class = ((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_incorporating_classes))->property_data)->data))[local_27_c_index]));
    local_29_entry = ((ClassMapping_of_String_and_MethodInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_28_incorporating_class)->property_methods_by_signature)->property_data,((ClassMethodInfo*)context)->property_signature));
    if ((local_29_entry != NULL))
    {
      MethodInfo__resolve(((ClassMapping_of_String_and_MethodInfo*)local_29_entry)->property_value);
    }
    ++local_27_c_index;
  }
  MethodInfo__resolve_overrides(context);
}

static void MethodInfo__resolve_overrides( SXCRef context )
{
  SlagInt32 local_0_i;
  SXCRef local_1_m;

  local_0_i = 0;
  while ((local_0_i < ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_overrides))->property_count))
  {
    local_1_m = ((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_overrides))->property_data)->data))[local_0_i]));
    if (((ClassTypeInfo*)((ClassMethodInfo*)local_1_m)->property_type_context)->property_resolved)
    {
      MethodInfo__resolve(local_1_m);
    }
    else
    {
      ((ClassMethodInfo*)local_1_m)->property_resolve_if_class_resolved = true;
    }
    MethodInfo__resolve_overrides(local_1_m);
    ++local_0_i;
  }
}

static SlagLogical MethodInfo__resolve_if_ancestor_resolved( SXCRef context )
{
  if (((ClassMethodInfo*)context)->property_resolved)
  {
    return true;
  }
  if ((((ClassMethodInfo*)context)->property_prior_m != NULL))
  {
    if (MethodInfo__resolve_if_ancestor_resolved(((ClassMethodInfo*)context)->property_prior_m))
    {
      MethodInfo__resolve(context);
      return true;
    }
  }
  return false;
}

static SlagLogical MethodInfo__finalize_calls( SXCRef context )
{
  if ((((ClassMethodInfo*)context)->property_body == NULL))
  {
    return true;
  }
  if (!((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    return true;
  }
  sxc_write_ref( &sxc_singletons[10], Context__init__TypeInfo_MethodInfo_Logical(type_ClassContext.create(),((ClassMethodInfo*)context)->property_type_context,context,false) );
  CmdStatementList__finalize_calls(((ClassMethodInfo*)context)->property_body);
  return true;
}

static SlagLogical MethodInfo__finalize_structure_info( SXCRef context )
{
  SXCRef local_0__reader2305;
  SXCRef local_1_v;
  SXCRef local_2__reader2308;
  SXCRef local_3_v;

  if ((((ClassMethodInfo*)context)->property_body == NULL))
  {
    return true;
  }
  if (!((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
  {
    return true;
  }
  ((ClassMethodInfo*)context)->property_context_read_count = 0;
  local_0__reader2305 = ArrayList_of_LocalVarInfo__create_reader(((ClassMethodInfo*)context)->property_local_vars);
  while (ArrayReader_of_LocalVarInfo__has_another(local_0__reader2305))
  {
    local_1_v = ArrayReader_of_LocalVarInfo__read(local_0__reader2305);
    ((ClassLocalVarInfo*)local_1_v)->property_read_count = 0;
  }
  sxc_write_ref( &sxc_singletons[10], Context__init__TypeInfo_MethodInfo_Logical(type_ClassContext.create(),((ClassMethodInfo*)context)->property_type_context,context,false) );
  SLAG_TRY
  {
    CmdStatementList__finalize_structure_info(((ClassMethodInfo*)context)->property_body);
    {
      if (!!!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0)) goto unsatisfied_9744;
      if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassMethodInfo*)context)->property_body)->property_statements))->property_count == 1)) goto unsatisfied_9744;
      if (!(((ClassMethodInfo*)context)->property_context_read_count == 1)) goto unsatisfied_9744;
      if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_local_vars))->property_count == ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_parameters))->property_count)) goto unsatisfied_9744;
      local_2__reader2308 = ArrayList_of_LocalVarInfo__create_reader(((ClassMethodInfo*)context)->property_local_vars);
      while (ArrayReader_of_LocalVarInfo__has_another(local_2__reader2308))
      {
        local_3_v = ArrayReader_of_LocalVarInfo__read(local_2__reader2308);
        if (!(1 == ((ClassLocalVarInfo*)local_3_v)->property_read_count)) goto unsatisfied_9744;
      }
      satisfied_9744:;
      goto end_9744;
      unsatisfied_9744:;
      {
        ((ClassMethodInfo*)context)->property_supports_inlining = false;
      }
    }
    end_9744:;
  }
  SLAG_CATCH(_err2)
  {
    SlagTypeInfo* _err2_type = _err2->type;
    if (_err2_type->instance_of(&type_ClassSlagError))
    {
      SXCRef local_4_err = _err2;
      if (Errors__add__SlagError(sxc_singletons[38],local_4_err))
      {
        return false;
      }
    }
    else
    {
      SLAG_THROW(_err2);
    }
  }
  return true;
}

static SlagObject* MethodInfo__x_name( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader2312;
  SXCRef local_2_p;

  if ((((ClassMethodInfo*)context)->property_x_name == NULL))
  {
    local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
    StringBuilder__print__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),String__x_compatible(((ClassTypeInfo*)((ClassMethodInfo*)context)->property_type_context)->property_name)),str631.value),String__x_compatible(((ClassMethodInfo*)context)->property_name))));
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_parameters))->property_count != 0))
    {
      StringBuilder__print__String(local_0_buffer,String__opADD__String(str631.value,String__x_compatible(((ClassTypeInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_parameters))->property_data)->data))[0]))))->property_type)->property_name)));
    }
    local_1__reader2312 = ArrayList_of_ParameterInfo__from__Int32(((ClassMethodInfo*)context)->property_parameters,1);
    while (CallFn____Logical(14,local_1__reader2312))
    {
      local_2_p = CallFn____Object(45,local_1__reader2312);
      StringBuilder__print__String(local_0_buffer,String__opADD__String(str629.value,String__x_compatible(((ClassTypeInfo*)((ClassParameterInfo*)local_2_p)->property_type)->property_name)));
    }
    sxc_write_ref( &(((ClassMethodInfo*)context)->property_x_name), StringBuilder__to_String(local_0_buffer) );
  }
  return ((ClassMethodInfo*)context)->property_x_name;
}

static void MethodInfo__calculate_local_var_offsets( SXCRef context )
{
  SXCRef local_0__reader2313;
  SXCRef local_1_param;
  SXCRef local_2__reader2315;
  SXCRef local_3_param;
  SlagInt32 local_4_num_params;
  SlagInt32 local_5_i;
  SlagInt32 local_6__count2317;
  SXCRef local_7_v;

  ++(((ClassMethodInfo*)context)->property_param_ref_count);
  local_0__reader2313 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)context)->property_parameters);
  while (CallFn____Logical(14,local_0__reader2313))
  {
    local_1_param = CallFn____Object(45,local_0__reader2313);
    if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_1_param)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
    {
      ++(((ClassMethodInfo*)context)->property_param_ref_count);
      ((ClassParameterInfo*)local_1_param)->property_offset = ((ClassMethodInfo*)context)->property_param_ref_count;
    }
    else
    {
      ((ClassMethodInfo*)context)->property_param_data_size += ((ClassTypeInfo*)((ClassParameterInfo*)local_1_param)->property_type)->property_stack_size;
      ((ClassParameterInfo*)local_1_param)->property_offset = ((ClassMethodInfo*)context)->property_param_data_size;
    }
  }
  local_2__reader2315 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)context)->property_parameters);
  while (CallFn____Logical(14,local_2__reader2315))
  {
    local_3_param = CallFn____Object(45,local_2__reader2315);
    if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_3_param)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
    {
      ((ClassParameterInfo*)local_3_param)->property_offset = (((ClassMethodInfo*)context)->property_param_ref_count-((ClassParameterInfo*)local_3_param)->property_offset);
    }
    else
    {
      ((ClassParameterInfo*)local_3_param)->property_offset = (((ClassMethodInfo*)context)->property_param_data_size-((ClassParameterInfo*)local_3_param)->property_offset);
    }
  }
  local_4_num_params = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_parameters))->property_count;
  {
    local_5_i = 0;
    local_6__count2317 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_local_vars))->property_count;
    while ((local_5_i < local_6__count2317))
    {
      local_7_v = ((ClassLocalVarInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_local_vars))->property_data)->data))[local_5_i]));
      if ((local_5_i < local_4_num_params))
      {
        ((ClassLocalVarInfo*)local_7_v)->property_offset = ((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_parameters))->property_data)->data))[local_5_i])))->property_offset;
        ((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)context)->property_parameters))->property_data)->data))[local_5_i])))->property_index = local_5_i;
      }
      else
      {
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassLocalVarInfo*)local_7_v)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          ++(((ClassMethodInfo*)context)->property_local_ref_count);
          ((ClassLocalVarInfo*)local_7_v)->property_offset = -((ClassMethodInfo*)context)->property_local_ref_count;
        }
        else
        {
          ((ClassMethodInfo*)context)->property_local_data_size += ((ClassTypeInfo*)((ClassLocalVarInfo*)local_7_v)->property_type)->property_stack_size;
          ((ClassLocalVarInfo*)local_7_v)->property_offset = -((ClassMethodInfo*)context)->property_local_data_size;
        }
      }
      ++local_5_i;
    }
  }
}

void MethodInfo__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassMethodInfo*)context)->property_local_vars), ArrayList_of_LocalVarInfo__init__Int32(type_ClassArrayList_of_LocalVarInfo.create(),2) );
  ((ClassMethodInfo*)context)->property_index = -1;
  ((ClassMethodInfo*)context)->property_min_params = -1;
  sxc_write_ref( &(((ClassMethodInfo*)context)->property_overrides), ArrayList_of_MethodInfo__init__Int32(type_ClassArrayList_of_MethodInfo.create(),1) );
  ((ClassMethodInfo*)context)->property_supports_inlining = true;
}

SlagObject* MethodInfo__type_name( SXCRef context )
{
  return str536.value;
}

void GenericVarInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* GenericVarInfo__type_name( SXCRef context )
{
  return str485.value;
}

static SlagObject* MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32( SXCRef context, SXCRef local_0_t_6847, SXCRef local_1_method_context_6846, SXCRef local_2_type_6845, SXCRef local_3_name_6844, SlagInt32 local_4_index_6843 )
{
  sxc_write_ref( &(((ClassMethodVarInfo*)context)->property_t), local_0_t_6847 );
  sxc_write_ref( &(((ClassMethodVarInfo*)context)->property_method_context), local_1_method_context_6846 );
  sxc_write_ref( &(((ClassMethodVarInfo*)context)->property_type), local_2_type_6845 );
  sxc_write_ref( &(((ClassMethodVarInfo*)context)->property_name), local_3_name_6844 );
  ((ClassMethodVarInfo*)context)->property_index = local_4_index_6843;
  return context;
}

void MethodVarInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* MethodVarInfo__type_name( SXCRef context )
{
  return str486.value;
}

static SlagObject* LocalVarInfo__x_name( SXCRef context )
{
  if ((((ClassLocalVarInfo*)context)->property_x_name == NULL))
  {
    sxc_write_ref( &(((ClassLocalVarInfo*)context)->property_x_name), StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1534.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassLocalVarInfo*)context)->property_index,10))),str629.value),String__x_compatible(((ClassLocalVarInfo*)context)->property_name))) );
  }
  return ((ClassLocalVarInfo*)context)->property_x_name;
}

void LocalVarInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* LocalVarInfo__type_name( SXCRef context )
{
  return str487.value;
}

static SlagObject* CmdStructure__init__Token_Int32_CmdStatementList( SXCRef context, SXCRef local_0_t_6791, SlagInt32 local_1_id_6790, SXCRef local_2_body_6789 )
{
  sxc_write_ref( &(((ClassCmdStructure*)context)->property_t), local_0_t_6791 );
  ((ClassCmdStructure*)context)->property_id = local_1_id_6790;
  sxc_write_ref( &(((ClassCmdStructure*)context)->property_body), local_2_body_6789 );
  return context;
}

SlagObject* CmdStructure__to_String( SXCRef context )
{
  SXCRef local_0_buffer;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str294.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdStructure*)context)->property_id,10))),str719.value)));
  TextWriter__print__Object(local_0_buffer,((ClassCmdStructure*)context)->property_body);
  TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str720.value),CallFn____Object(25,context)),str294.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdStructure*)context)->property_id,10)))));
  return StringBuilder__to_String(local_0_buffer);
}

static void CmdStructure__remap_id( SXCRef context )
{
  SlagInt32 local_0_old_id;
  SlagInt32 local_1_new_id;
  SXCRef local_2_entry;

  local_0_old_id = ((ClassCmdStructure*)context)->property_id;
  local_1_new_id = SlagParserManager__unique_id(sxc_singletons[35]);
  GenericHashTable_of_Int32_and_Int32__set__Int32_Int32(((ClassHashTable_of_Int32_and_Int32*)((ClassContext*)sxc_singletons[10])->property_id_remap_table)->property_data,local_0_old_id,local_1_new_id);
  ((ClassCmdStructure*)context)->property_id = local_1_new_id;
  local_2_entry = ((ClassMapping_of_Int32_and_Cmd*)GenericHashTable_of_Int32_and_Object__find__Int32(((ClassHashTable_of_Int32_and_Cmd*)((ClassContext*)sxc_singletons[10])->property_next_iteration_injections)->property_data,local_0_old_id));
  if ((local_2_entry != NULL))
  {
    GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_Cmd*)((ClassContext*)sxc_singletons[10])->property_next_iteration_injections)->property_data,local_1_new_id,((ClassMapping_of_Int32_and_Cmd*)local_2_entry)->property_value);
  }
}

static SlagObject* CmdStructure__finalize_calls( SXCRef context )
{
  CmdStatementList__finalize_calls(((ClassCmdStructure*)context)->property_body);
  return context;
}

static void CmdStructure__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
  CmdStatementList__finalize_structure_info(((ClassCmdStructure*)context)->property_body);
  if (GenericHashTable_of_Int32_and_Int32__contains__Int32(((ClassHashSet_of_Int32*)((ClassContext*)sxc_singletons[10])->property_referenced_structures)->property_data,((ClassCmdStructure*)context)->property_id))
  {
    ((ClassCmdStructure*)context)->property_referenced = true;
  }
}

static void CmdStructure__group_dynamic_methods( SXCRef context )
{
  CmdStatementList__group_dynamic_methods(((ClassCmdStructure*)context)->property_body);
}

static SlagObject* CmdStructure__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdStructure*)context)->property_body)->property_statements))->property_data)->data))[0]))),local_0_arg_list);
  return context;
}

void CmdStructure__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdStructure__type_name( SXCRef context )
{
  return str717.value;
}

static SlagObject* CmdForEach__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList( SXCRef context, SXCRef local_0_t_7647, SlagInt32 local_1_id_7646, SXCRef local_2_var_info_7645, SXCRef local_3_control_7644, SXCRef local_4_body_7643 )
{
  sxc_write_ref( &(((ClassCmdForEach*)context)->property_t), local_0_t_7647 );
  ((ClassCmdForEach*)context)->property_id = local_1_id_7646;
  sxc_write_ref( &(((ClassCmdForEach*)context)->property_var_info), local_2_var_info_7645 );
  sxc_write_ref( &(((ClassCmdForEach*)context)->property_control), local_3_control_7644 );
  sxc_write_ref( &(((ClassCmdForEach*)context)->property_body), local_4_body_7643 );
  return context;
}

static SlagObject* CmdForEach__resolve( SXCRef context )
{
  CmdStructure__remap_id(context);
  sxc_write_ref( &(((ClassCmdForEach*)context)->property_control), CallFn____Object(16,((ClassCmdForEach*)context)->property_control) );
  return context;
}

void CmdForEach__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdForEach__type_name( SXCRef context )
{
  return str780.value;
}

static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdExp.create(),((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs));
}

static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,String__opADD__String(str689.value,str392.value));
  if ((local_0_call != NULL))
  {
    return local_0_call;
  }
  SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary(sxc_singletons[8],context);
  return CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__optimize(context);
}

static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__optimize( SXCRef context )
{
  SXCRef local_0_left;
  SXCRef local_1_right;
  SXCRef local_2_left;
  SXCRef local_3_right;
  SXCRef local_4_left;
  SXCRef local_5_right;
  SXCRef local_6_left;
  SXCRef local_7_right;

  if ((sxc_instance_of(((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    if (sxc_instance_of(((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_0_left = ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs;
      local_1_right = ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs;
      ((ClassCmdLiteralInt64*)local_0_left)->property_value = (SlagInt64)pow((double)((ClassCmdLiteralInt64*)local_0_left)->property_value,(double)((ClassCmdLiteralInt64*)local_1_right)->property_value);
      return ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs;
      local_3_right = ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = (SlagInt32)pow((double)((ClassCmdLiteralInt32*)local_2_left)->property_value,(double)((ClassCmdLiteralInt32*)local_3_right)->property_value);
      return ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs,&type_ClassCmdLiteralReal64))
    {
      local_4_left = ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs;
      local_5_right = ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs;
      ((ClassCmdLiteralReal64*)local_4_left)->property_value = (SlagReal64)pow((double)((ClassCmdLiteralReal64*)local_4_left)->property_value,(double)((ClassCmdLiteralReal64*)local_5_right)->property_value);
      return ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs,&type_ClassCmdLiteralReal32))
    {
      local_6_left = ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs;
      local_7_right = ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs;
      ((ClassCmdLiteralReal32*)local_6_left)->property_value = (SlagReal32)pow((double)((ClassCmdLiteralReal32*)local_6_left)->property_value,(double)((ClassCmdLiteralReal32*)local_7_right)->property_value);
      return ((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_exp)->property_ordinal);
  CallFn__(7,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs);
  CallFn__(7,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs);
}

static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_cpp( SXCRef context )
{
  SXCRef local_0_which_7769;
  SXCRef local_1_result;
  SXCRef local_2_which_7770;

  local_0_which_7769 = str392.value;
  if (String__opEQ__String(local_0_which_7769,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1666.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs)),str395.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7769,str392.value))
  {
    local_1_result = str39.value;
    local_2_which_7770 = CallFn____Object(0,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs);
    if ((local_2_which_7770 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      local_1_result = str1667.value;
    }
    else if ((local_2_which_7770 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      local_1_result = str1668.value;
    }
    else if ((local_2_which_7770 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      local_1_result = str1669.value;
    }
    else if ((local_2_which_7770 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      local_1_result = str1670.value;
    }
    return String__opADD__String(local_1_result,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1671.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs)),str1672.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs)),str62.value)));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(15,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs)),str392.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_cs( SXCRef context )
{
  SXCRef local_0_which_7771;

  local_0_which_7771 = str392.value;
  if (String__opEQ__String(local_0_which_7771,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7771,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),TypeInfo__x_name(CallFn____Object(0,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs))),str1925.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(35,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs)),str392.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_java( SXCRef context )
{
  SXCRef local_0_which_7772;

  local_0_which_7772 = str392.value;
  if (String__opEQ__String(local_0_which_7772,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7772,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2011.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(41,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_lhs)),str392.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp*)context)->property_rhs)),str62.value);
  }
}

void CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__type_name( SXCRef context )
{
  return str827.value;
}

void QualifiersManager__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* QualifiersManager__type_name( SXCRef context )
{
  return str526.value;
}

static SlagObject* Array_of_SlagFile__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_SlagFile.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_SlagFile__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_SlagFile__type_name( SXCRef context )
{
  return str468.value;
}

static SlagObject* ArrayReader_of_SlagFile__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_SlagFile__init__Int32(type_ClassArrayList_of_SlagFile.create(),ArrayReader_of_SlagFile__remaining(context));
  while (ArrayReader_of_SlagFile__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_SlagFile__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_SlagFile__to_String( SXCRef context )
{
  return ArrayList_of_SlagFile__to_String(ArrayReader_of_SlagFile__to_List(context));
}

static SlagObject* ArrayReader_of_SlagFile__init__Collection_of_SlagFile_Array_of_SlagFile_Int32_Int32( SXCRef context, SXCRef local_0_collection_6812, SXCRef local_1_data_6811, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_SlagFile*)context)->property_collection), local_0_collection_6812 );
  sxc_write_ref( &(((ClassArrayReader_of_SlagFile*)context)->property_data), local_1_data_6811 );
  ((ClassArrayReader_of_SlagFile*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_SlagFile*)context)->property_collection);
  }
  ((ClassArrayReader_of_SlagFile*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_SlagFile*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_SlagFile*)context)->property_collection)))
  {
    ((ClassArrayReader_of_SlagFile*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_SlagFile*)context)->property_collection);
  }
  ((ClassArrayReader_of_SlagFile*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_SlagFile*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_SlagFile__create_duplicate( SXCRef context )
{
  return ArrayReader_of_SlagFile__init__Collection_of_SlagFile_Array_of_SlagFile_Int32_Int32(type_ClassArrayReader_of_SlagFile.create(),((ClassArrayReader_of_SlagFile*)context)->property_collection,((ClassArrayReader_of_SlagFile*)context)->property_data,((ClassArrayReader_of_SlagFile*)context)->property_counter,(((ClassArrayReader_of_SlagFile*)context)->property_last_exclusive-((ClassArrayReader_of_SlagFile*)context)->property_counter));
}

static SlagLogical ArrayReader_of_SlagFile__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_SlagFile*)context)->property_counter < ((ClassArrayReader_of_SlagFile*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_SlagFile*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_SlagFile*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_SlagFile__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_SlagFile*)context)->property_last_exclusive-((ClassArrayReader_of_SlagFile*)context)->property_counter);
}

static SlagObject* ArrayReader_of_SlagFile__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassSlagFile**)(((SlagArray*)((ClassArrayReader_of_SlagFile*)context)->property_data)->data))[((ClassArrayReader_of_SlagFile*)context)->property_counter];
  ++(((ClassArrayReader_of_SlagFile*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_SlagFile__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_SlagFile__type_name( SXCRef context )
{
  return str475.value;
}

SlagObject* HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_LocalVarInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_LocalVarInfo*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__type_name( SXCRef context )
{
  return str1014.value;
}

void HashTable_of_String_and_LocalVarInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_LocalVarInfo__type_name( SXCRef context )
{
  return str1015.value;
}

static SlagObject* CmdList__init__Int32( SXCRef context, SlagInt32 local_0_capacity )
{
  ArrayList_of_Cmd__init__Int32(context,local_0_capacity);
  return context;
}

static SlagObject* CmdList__init__Cmd( SXCRef context, SXCRef local_0_cmd )
{
  ArrayList_of_Cmd__init__Int32(context,2);
  ArrayList_of_Object__add__Object(context,local_0_cmd);
  return context;
}

static SlagObject* CmdList__init__Cmd_Cmd( SXCRef context, SXCRef local_0_cmd1, SXCRef local_1_cmd2 )
{
  ArrayList_of_Cmd__init__Int32(context,2);
  ArrayList_of_Object__add__Object(context,local_0_cmd1);
  ArrayList_of_Object__add__Object(context,local_1_cmd2);
  return context;
}

static SlagObject* CmdList__init__Cmd_Cmd_Cmd( SXCRef context, SXCRef local_0_cmd1, SXCRef local_1_cmd2, SXCRef local_2_cmd3 )
{
  ArrayList_of_Cmd__init__Int32(context,2);
  ArrayList_of_Object__add__Object(context,local_0_cmd1);
  ArrayList_of_Object__add__Object(context,local_1_cmd2);
  ArrayList_of_Object__add__Object(context,local_2_cmd3);
  return context;
}

static SlagObject* CmdList__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_list;
  SXCRef local_1__reader2492;
  SXCRef local_2_cmd;

  local_0_new_list = CmdList__init__Int32(type_ClassCmdList.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  local_1__reader2492 = ArrayList_of_Cmd__create_reader(context);
  while (CallFn____Logical(14,local_1__reader2492))
  {
    local_2_cmd = CallFn____Object(45,local_1__reader2492);
    ArrayList_of_Object__add__Object(local_0_new_list,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_2_cmd));
  }
  return local_0_new_list;
}

static void CmdList__resolve( SXCRef context )
{
  SlagInt32 local_0_index;
  SlagInt32 local_1__count2493;

  {
    local_0_index = 0;
    local_1__count2493 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_0_index < local_1__count2493))
    {
      sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassCmdList*)context)->property_data)->data))+local_0_index, CallFn____Object(16,((ClassCmd*)((ClassCmd**)(((SlagArray*)((ClassCmdList*)context)->property_data)->data))[local_0_index])) );
      ++local_0_index;
    }
  }
}

static void CmdList__finalize_calls( SXCRef context )
{
  SlagInt32 local_0_index;
  SlagInt32 local_1__count2494;

  {
    local_0_index = 0;
    local_1__count2494 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_0_index < local_1__count2494))
    {
      sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassCmdList*)context)->property_data)->data))+local_0_index, CallFn____Object(42,((ClassCmd*)((ClassCmd**)(((SlagArray*)((ClassCmdList*)context)->property_data)->data))[local_0_index])) );
      ++local_0_index;
    }
  }
}

static void CmdList__finalize_structure_info( SXCRef context )
{
  SlagInt32 local_0_index;
  SlagInt32 local_1__count2495;

  {
    local_0_index = 0;
    local_1__count2495 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_0_index < local_1__count2495))
    {
      CallFn__(21,((ClassCmd*)((ClassCmd**)(((SlagArray*)((ClassCmdList*)context)->property_data)->data))[local_0_index]));
      ++local_0_index;
    }
  }
}

static void CmdList__group_dynamic_methods( SXCRef context )
{
  SlagInt32 local_0_index;
  SlagInt32 local_1__count2496;

  {
    local_0_index = 0;
    local_1__count2496 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_0_index < local_1__count2496))
    {
      CallFn__(38,((ClassCmd*)((ClassCmd**)(((SlagArray*)((ClassCmdList*)context)->property_data)->data))[local_0_index]));
      ++local_0_index;
    }
  }
}

static void CmdList__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  SlagInt32 local_1_index;
  SlagInt32 local_2__count2497;

  {
    local_1_index = 0;
    local_2__count2497 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_index < local_2__count2497))
    {
      sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassCmdList*)context)->property_data)->data))+local_1_index, CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd**)(((SlagArray*)((ClassCmdList*)context)->property_data)->data))[local_1_index]),local_0_arg_list) );
      ++local_1_index;
    }
  }
}

static void CmdList__write_etc( SXCRef context )
{
  SXCRef local_0__reader2983;
  SXCRef local_1_cmd;

  local_0__reader2983 = ArrayList_of_Cmd__create_reader(context);
  while (CallFn____Logical(14,local_0__reader2983))
  {
    local_1_cmd = CallFn____Object(45,local_0__reader2983);
    CallFn__(7,local_1_cmd);
  }
}

static SlagObject* CmdList__to_cpp( SXCRef context )
{
  SXCRef local_0_buffer;
  SlagLogical local_1_first;
  SXCRef local_2__reader2984;
  SXCRef local_3_cmd;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_1_first = true;
  local_2__reader2984 = ArrayList_of_Cmd__create_reader(context);
  while (CallFn____Logical(14,local_2__reader2984))
  {
    local_3_cmd = CallFn____Object(45,local_2__reader2984);
    if (local_1_first)
    {
      local_1_first = false;
    }
    else
    {
      StringBuilder__print__String(local_0_buffer,str395.value);
    }
    StringBuilder__print__String(local_0_buffer,CallFn____Object(15,local_3_cmd));
  }
  return StringBuilder__to_String(local_0_buffer);
}

static SlagObject* CmdList__to_cs( SXCRef context )
{
  SXCRef local_0_buffer;
  SlagLogical local_1_first;
  SXCRef local_2__reader2986;
  SXCRef local_3_cmd;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_1_first = true;
  local_2__reader2986 = ArrayList_of_Cmd__create_reader(context);
  while (CallFn____Logical(14,local_2__reader2986))
  {
    local_3_cmd = CallFn____Object(45,local_2__reader2986);
    if (local_1_first)
    {
      local_1_first = false;
    }
    else
    {
      StringBuilder__print__String(local_0_buffer,str395.value);
    }
    StringBuilder__print__String(local_0_buffer,CallFn____Object(35,local_3_cmd));
  }
  return StringBuilder__to_String(local_0_buffer);
}

static SlagObject* CmdList__to_java( SXCRef context )
{
  SXCRef local_0_buffer;
  SlagLogical local_1_first;
  SXCRef local_2__reader2988;
  SXCRef local_3_cmd;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_1_first = true;
  local_2__reader2988 = ArrayList_of_Cmd__create_reader(context);
  while (CallFn____Logical(14,local_2__reader2988))
  {
    local_3_cmd = CallFn____Object(45,local_2__reader2988);
    if (local_1_first)
    {
      local_1_first = false;
    }
    else
    {
      StringBuilder__print__String(local_0_buffer,str395.value);
    }
    StringBuilder__print__String(local_0_buffer,CallFn____Object(41,local_3_cmd));
  }
  return StringBuilder__to_String(local_0_buffer);
}

void CmdList__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdList__type_name( SXCRef context )
{
  return str677.value;
}

static SlagObject* CmdCall__type( SXCRef context )
{
  return ((ClassMethodInfo*)((ClassCmdCall*)context)->property_method_info)->property_return_type;
}

void CmdCall__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCall__type_name( SXCRef context )
{
  return str1046.value;
}

static SlagObject* CmdNewObject__init__Token_TypeInfo_MethodInfo_CmdList( SXCRef context, SXCRef local_0_t_9321, SXCRef local_1_of_type_9320, SXCRef local_2_method_info_9319, SXCRef local_3_args_9318 )
{
  sxc_write_ref( &(((ClassCmdNewObject*)context)->property_t), local_0_t_9321 );
  sxc_write_ref( &(((ClassCmdNewObject*)context)->property_of_type), local_1_of_type_9320 );
  sxc_write_ref( &(((ClassCmdNewObject*)context)->property_method_info), local_2_method_info_9319 );
  sxc_write_ref( &(((ClassCmdNewObject*)context)->property_args), local_3_args_9318 );
  return context;
}

static SlagObject* CmdNewObject__create_duplicate( SXCRef context )
{
  return CmdNewObject__init__Token_TypeInfo_MethodInfo_CmdList(type_ClassCmdNewObject.create(),((ClassCmdNewObject*)context)->property_t,((ClassCmdNewObject*)context)->property_of_type,((ClassCmdNewObject*)context)->property_method_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdNewObject*)context)->property_args));
}

static SlagObject* CmdNewObject__type( SXCRef context )
{
  return ((ClassCmdNewObject*)context)->property_of_type;
}

SlagObject* CmdNewObject__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CmdNewObject__type_name(context)),str61.value),((ClassTypeInfo*)((ClassCmdNewObject*)context)->property_of_type)->property_name),str1153.value),((ClassMethodInfo*)((ClassCmdNewObject*)context)->property_method_info)->property_name),str747.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodInfo*)((ClassCmdNewObject*)context)->property_method_info)->property_index,10))),str1154.value),((ClassString*)ArrayList_of_Cmd__format__String_String(((ClassCmdNewObject*)context)->property_args,str1049.value,str64.value))),str62.value));
}

static SlagObject* CmdNewObject__resolve( SXCRef context )
{
  CmdList__resolve(((ClassCmdNewObject*)context)->property_args);
  MethodInfo__resolve(((ClassCmdNewObject*)context)->property_method_info);
  TypeInfo__resolve(((ClassCmdNewObject*)context)->property_of_type);
  return ((ClassCmd*)context);
}

static SlagObject* CmdNewObject__finalize_calls( SXCRef context )
{
  SXCRef local_0__reader2604;
  SXCRef local_1_m;
  SXCRef local_2_buffer;
  SXCRef local_3__reader2606;
  SXCRef local_4_m2;

  ((ClassMethodInfo*)((ClassCmdNewObject*)context)->property_method_info)->property_called = true;
  CmdList__finalize_calls(((ClassCmdNewObject*)context)->property_args);
  local_0__reader2604 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)((ClassCmdNewObject*)context)->property_of_type)->property_methods);
  while (ArrayReader_of_MethodInfo__has_another(local_0__reader2604))
  {
    local_1_m = ArrayReader_of_MethodInfo__read(local_0__reader2604);
    if ((((((ClassQualifiers*)((ClassMethodInfo*)local_1_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0) && ((ClassMethodInfo*)local_1_m)->property_resolved))
    {
      local_2_buffer = StringBuilder__init(type_ClassStringBuilder.create());
      TextWriter__println__String(local_2_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1272.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdNewObject*)context)->property_of_type)),str1273.value)));
      local_3__reader2606 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)((ClassCmdNewObject*)context)->property_of_type)->property_methods);
      while (ArrayReader_of_MethodInfo__has_another(local_3__reader2606))
      {
        local_4_m2 = ArrayReader_of_MethodInfo__read(local_3__reader2606);
        if (((((ClassQualifiers*)((ClassMethodInfo*)local_4_m2)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0))
        {
          TextWriter__println__String(local_2_buffer,String__opADD__String(str69.value,((ClassMethodInfo*)local_4_m2)->property_signature));
        }
      }
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmdNewObject*)context)->property_t,StringBuilder__to_String(local_2_buffer))) );
    }
  }
  return context;
}

static void CmdNewObject__finalize_structure_info( SXCRef context )
{
  CmdList__finalize_structure_info(((ClassCmdNewObject*)context)->property_args);
}

static void CmdNewObject__group_dynamic_methods( SXCRef context )
{
  CmdList__group_dynamic_methods(((ClassCmdNewObject*)context)->property_args);
}

static SlagObject* CmdNewObject__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  CmdList__to_inline__CmdList(((ClassCmdNewObject*)context)->property_args,local_0_arg_list);
  return context;
}

static void CmdNewObject__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_new_object)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassMethodInfo*)((ClassCmdNewObject*)context)->property_method_info)->property_index);
  if ((((ClassMethodInfo*)((ClassCmdNewObject*)context)->property_method_info)->property_index == -1))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassMethodInfo*)((ClassCmdNewObject*)context)->property_method_info)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1382.value),((ClassMethodInfo*)((ClassCmdNewObject*)context)->property_method_info)->property_full_signature),str1488.value),((ClassMethodInfo*)((ClassETCWriter*)sxc_singletons[13])->property_this_method)->property_full_signature),str962.value)))) );
  }
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassTypeInfo*)((ClassCmdNewObject*)context)->property_of_type)->property_index);
  CmdList__write_etc(((ClassCmdNewObject*)context)->property_args);
}

static SlagObject* CmdNewObject__to_cpp( SXCRef context )
{
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdNewObject*)context)->property_args))->property_count != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),MethodInfo__x_name(((ClassCmdNewObject*)context)->property_method_info)),str1718.value),TypeInfo__x_name(((ClassCmdNewObject*)context)->property_of_type)),str1719.value),CmdList__to_cpp(((ClassCmdNewObject*)context)->property_args)),str62.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),MethodInfo__x_name(((ClassCmdNewObject*)context)->property_method_info)),str1718.value),TypeInfo__x_name(((ClassCmdNewObject*)context)->property_of_type)),str1720.value));
  }
}

static SlagObject* CmdNewObject__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1955.value),TypeInfo__x_name(((ClassCmdNewObject*)context)->property_of_type)),str61.value),CmdList__to_cs(((ClassCmdNewObject*)context)->property_args)),str62.value));
}

static SlagObject* CmdNewObject__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1955.value),TypeInfo__x_name(((ClassCmdNewObject*)context)->property_of_type)),str61.value),CmdList__to_java(((ClassCmdNewObject*)context)->property_args)),str62.value));
}

void CmdNewObject__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdNewObject__type_name( SXCRef context )
{
  return str1152.value;
}

static SlagObject* ArrayReader_of_ArrayList_of_Token__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_ArrayList_of_Token__init__Int32(type_ClassArrayList_of_ArrayList_of_Token.create(),ArrayReader_of_ArrayList_of_Token__remaining(context));
  while (ArrayReader_of_ArrayList_of_Token__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_ArrayList_of_Token__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_ArrayList_of_Token__to_String( SXCRef context )
{
  return ArrayList_of_ArrayList_of_Token__to_String(ArrayReader_of_ArrayList_of_Token__to_List(context));
}

static SlagObject* ArrayReader_of_ArrayList_of_Token__init__Collection_of_ArrayList_of_Token_Array_of_ArrayList_of_Token_Int32_Int32( SXCRef context, SXCRef local_0_collection_6977, SXCRef local_1_data_6976, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_ArrayList_of_Token*)context)->property_collection), local_0_collection_6977 );
  sxc_write_ref( &(((ClassArrayReader_of_ArrayList_of_Token*)context)->property_data), local_1_data_6976 );
  ((ClassArrayReader_of_ArrayList_of_Token*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_ArrayList_of_Token*)context)->property_collection);
  }
  ((ClassArrayReader_of_ArrayList_of_Token*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_ArrayList_of_Token*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_ArrayList_of_Token*)context)->property_collection)))
  {
    ((ClassArrayReader_of_ArrayList_of_Token*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_ArrayList_of_Token*)context)->property_collection);
  }
  ((ClassArrayReader_of_ArrayList_of_Token*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_ArrayList_of_Token*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_ArrayList_of_Token__create_duplicate( SXCRef context )
{
  return ArrayReader_of_ArrayList_of_Token__init__Collection_of_ArrayList_of_Token_Array_of_ArrayList_of_Token_Int32_Int32(type_ClassArrayReader_of_ArrayList_of_Token.create(),((ClassArrayReader_of_ArrayList_of_Token*)context)->property_collection,((ClassArrayReader_of_ArrayList_of_Token*)context)->property_data,((ClassArrayReader_of_ArrayList_of_Token*)context)->property_counter,(((ClassArrayReader_of_ArrayList_of_Token*)context)->property_last_exclusive-((ClassArrayReader_of_ArrayList_of_Token*)context)->property_counter));
}

static SlagLogical ArrayReader_of_ArrayList_of_Token__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_ArrayList_of_Token*)context)->property_counter < ((ClassArrayReader_of_ArrayList_of_Token*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_ArrayList_of_Token*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_ArrayList_of_Token*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_ArrayList_of_Token__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_ArrayList_of_Token*)context)->property_last_exclusive-((ClassArrayReader_of_ArrayList_of_Token*)context)->property_counter);
}

static SlagObject* ArrayReader_of_ArrayList_of_Token__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassArrayList_of_Token**)(((SlagArray*)((ClassArrayReader_of_ArrayList_of_Token*)context)->property_data)->data))[((ClassArrayReader_of_ArrayList_of_Token*)context)->property_counter];
  ++(((ClassArrayReader_of_ArrayList_of_Token*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_ArrayList_of_Token__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_ArrayList_of_Token__type_name( SXCRef context )
{
  return str583.value;
}

static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAnd.create(),((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs));
}

static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,String__opADD__String(str689.value,str387.value));
  if ((local_0_call != NULL))
  {
    return local_0_call;
  }
  SlagAnalyzer__cast_operands_to_standard_integer_or_logical__CmdBinary(sxc_singletons[8],context);
  return CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__optimize(context);
}

static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__optimize( SXCRef context )
{
  SXCRef local_0_left;
  SXCRef local_1_right;
  SXCRef local_2_left;
  SXCRef local_3_right;
  SXCRef local_4_left;
  SXCRef local_5_right;

  if ((sxc_instance_of(((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    if (sxc_instance_of(((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_0_left = ((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs;
      local_1_right = ((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs;
      ((ClassCmdLiteralInt64*)local_0_left)->property_value = (((ClassCmdLiteralInt64*)local_0_left)->property_value&((ClassCmdLiteralInt64*)local_1_right)->property_value);
      return ((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs;
      local_3_right = ((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = (((ClassCmdLiteralInt32*)local_2_left)->property_value&((ClassCmdLiteralInt32*)local_3_right)->property_value);
      return ((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs,&type_ClassCmdLiteralLogical))
    {
      local_4_left = ((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs;
      local_5_right = ((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs;
      ((ClassCmdLiteralLogical*)local_4_left)->property_value = (((ClassCmdLiteralLogical*)local_4_left)->property_value&((ClassCmdLiteralLogical*)local_5_right)->property_value);
      return ((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_and)->property_ordinal);
  CallFn__(7,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs);
  CallFn__(7,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs);
}

static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_cpp( SXCRef context )
{
  SXCRef local_0_which_7777;

  local_0_which_7777 = str387.value;
  if (String__opEQ__String(local_0_which_7777,str385.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs)),str392.value),CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs)),str387.value),CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_cs( SXCRef context )
{
  SXCRef local_0_which_7778;

  local_0_which_7778 = str387.value;
  if (String__opEQ__String(local_0_which_7778,str385.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs)),str392.value),CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs)),str387.value),CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_java( SXCRef context )
{
  SXCRef local_0_which_7779;

  local_0_which_7779 = str387.value;
  if (String__opEQ__String(local_0_which_7779,str385.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs)),str392.value),CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_lhs)),str387.value),CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and*)context)->property_rhs)),str62.value);
  }
}

void CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__type_name( SXCRef context )
{
  return str829.value;
}

void CmdAnd__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdAnd__type_name( SXCRef context )
{
  return str830.value;
}

static SlagObject* Array_of_TypeTemplate__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_TypeTemplate.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_TypeTemplate__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_TypeTemplate__type_name( SXCRef context )
{
  return str664.value;
}

static SlagObject* ArrayReader_of_TypeTemplate__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_TypeTemplate__init__Int32(type_ClassArrayList_of_TypeTemplate.create(),ArrayReader_of_TypeTemplate__remaining(context));
  while (ArrayReader_of_TypeTemplate__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_TypeTemplate__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_TypeTemplate__to_String( SXCRef context )
{
  return ArrayList_of_TypeTemplate__to_String(ArrayReader_of_TypeTemplate__to_List(context));
}

static SlagObject* ArrayReader_of_TypeTemplate__init__Collection_of_TypeTemplate_Array_of_TypeTemplate_Int32_Int32( SXCRef context, SXCRef local_0_collection_8171, SXCRef local_1_data_8170, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_TypeTemplate*)context)->property_collection), local_0_collection_8171 );
  sxc_write_ref( &(((ClassArrayReader_of_TypeTemplate*)context)->property_data), local_1_data_8170 );
  ((ClassArrayReader_of_TypeTemplate*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_TypeTemplate*)context)->property_collection);
  }
  ((ClassArrayReader_of_TypeTemplate*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_TypeTemplate*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_TypeTemplate*)context)->property_collection)))
  {
    ((ClassArrayReader_of_TypeTemplate*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_TypeTemplate*)context)->property_collection);
  }
  ((ClassArrayReader_of_TypeTemplate*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_TypeTemplate*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_TypeTemplate__create_duplicate( SXCRef context )
{
  return ArrayReader_of_TypeTemplate__init__Collection_of_TypeTemplate_Array_of_TypeTemplate_Int32_Int32(type_ClassArrayReader_of_TypeTemplate.create(),((ClassArrayReader_of_TypeTemplate*)context)->property_collection,((ClassArrayReader_of_TypeTemplate*)context)->property_data,((ClassArrayReader_of_TypeTemplate*)context)->property_counter,(((ClassArrayReader_of_TypeTemplate*)context)->property_last_exclusive-((ClassArrayReader_of_TypeTemplate*)context)->property_counter));
}

static SlagLogical ArrayReader_of_TypeTemplate__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_TypeTemplate*)context)->property_counter < ((ClassArrayReader_of_TypeTemplate*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_TypeTemplate*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_TypeTemplate*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_TypeTemplate__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_TypeTemplate*)context)->property_last_exclusive-((ClassArrayReader_of_TypeTemplate*)context)->property_counter);
}

static SlagObject* ArrayReader_of_TypeTemplate__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassTypeTemplate**)(((SlagArray*)((ClassArrayReader_of_TypeTemplate*)context)->property_data)->data))[((ClassArrayReader_of_TypeTemplate*)context)->property_counter];
  ++(((ClassArrayReader_of_TypeTemplate*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_TypeTemplate__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_TypeTemplate__type_name( SXCRef context )
{
  return str928.value;
}

static SlagObject* Array_of_Mapping_of_Object_and_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Mapping_of_Object_and_Int32.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Mapping_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Mapping_of_Object_and_Int32__type_name( SXCRef context )
{
  return str179.value;
}

SlagObject* ArrayList_of_Mapping_of_Object_and_Int32__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count4995;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count4995 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count4995))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Object_and_Int32*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Mapping_of_Object_and_Int32__init( SXCRef context )
{
  ArrayList_of_Mapping_of_Object_and_Int32__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Mapping_of_Object_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Mapping_of_Object_and_Int32*)context)->property_data), type_ClassArray_of_Mapping_of_Object_and_Int32.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Mapping_of_Object_and_Int32__create_reader( SXCRef context )
{
  return ArrayReader_of_Mapping_of_Object_and_Int32__init__Collection_of_Mapping_of_Object_and_Int32_Array_of_Mapping_of_Object_and_Int32_Int32_Int32(type_ClassArrayReader_of_Mapping_of_Object_and_Int32.create(),context,((ClassArrayList_of_Mapping_of_Object_and_Int32*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_Mapping_of_Object_and_Int32__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_Mapping_of_Object_and_Int32__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_Mapping_of_Object_and_Int32__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_Mapping_of_Object_and_Int32__add__Mapping_of_Object_and_Int32( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_Mapping_of_Object_and_Int32*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_Mapping_of_Object_and_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Mapping_of_Object_and_Int32__init__Int32(type_ClassArrayList_of_Mapping_of_Object_and_Int32.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Mapping_of_Object_and_Int32*)local_0_dup)->property_data,((ClassArrayList_of_Mapping_of_Object_and_Int32*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_Mapping_of_Object_and_Int32*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_Mapping_of_Object_and_Int32__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_Mapping_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Mapping_of_Object_and_Int32__type_name( SXCRef context )
{
  return str180.value;
}

static void TextWriter__flush( SXCRef context )
{
}

static void TextWriter__close( SXCRef context )
{
  CallFn__(23,context);
}

void TextWriter__clean_up( SXCRef context )
{
  CallFn__(20,context);
}

static void TextWriter__write__Char( SXCRef context, SlagChar local_0_ch )
{
}

static void TextWriter__print__Char( SXCRef context, SlagChar local_0_ch )
{
  CallFn__Char(18,context,local_0_ch);
}

static void TextWriter__print__String( SXCRef context, SXCRef local_0_st )
{
  SXCRef local_1__reader307;
  SlagChar local_2_ch;

  local_1__reader307 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_st,0,-1));
  while (CallFn____Logical(14,local_1__reader307))
  {
    local_2_ch = CallFn____Char(29,local_1__reader307);
    CallFn__Char(18,context,local_2_ch);
  }
}

static void TextWriter__print__Object( SXCRef context, SXCRef local_0_obj )
{
  if ((local_0_obj == NULL))
  {
    CallFn__String(8,context,str36.value);
  }
  else
  {
    CallFn__String(8,context,CallFn____Object(47,local_0_obj));
  }
}

static void TextWriter__println__String( SXCRef context, SXCRef local_0_st )
{
  CallFn__String(8,context,local_0_st);
  CallFn__Char(46,context,((SlagChar)10));
}

static void TextWriter__println__Object( SXCRef context, SXCRef local_0_obj )
{
  TextWriter__print__Object(context,local_0_obj);
  CallFn__Char(46,context,((SlagChar)10));
}

void TextWriter__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* TextWriter__type_name( SXCRef context )
{
  return str25.value;
}

static SlagObject* StdOutWriter__init( SXCRef context )
{
  return context;
}

static void StdOutWriter__write__Char( SXCRef context, SlagChar local_0_ch )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_CHAR( local_0_ch );
  StdOutWriter__write__Char();
}

static void StdOutWriter__print__Char( SXCRef context, SlagChar local_0_ch )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_CHAR( local_0_ch );
  StdOutWriter__print__Char();
}

static void StdOutWriter__print__String( SXCRef context, SXCRef local_0_st )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_st );
  StdOutWriter__print__String();
}

static void StdOutWriter__flush( SXCRef context )
{
  SLAG_PUSH_REF( context );
  StdOutWriter__flush();
}

void StdOutWriter__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* StdOutWriter__type_name( SXCRef context )
{
  return str86.value;
}

static SlagObject* CmdConstruct__init__Token_TypeInfo_CmdList( SXCRef context, SXCRef local_0_t_6906, SXCRef local_1_type_or_id_6905, SXCRef local_2_args_6904 )
{
  sxc_write_ref( &(((ClassCmdConstruct*)context)->property_t), local_0_t_6906 );
  sxc_write_ref( &(((ClassCmdConstruct*)context)->property_type_or_id), local_1_type_or_id_6905 );
  sxc_write_ref( &(((ClassCmdConstruct*)context)->property_args), local_2_args_6904 );
  return context;
}

static SlagObject* CmdConstruct__init__Token_String_CmdList( SXCRef context, SXCRef local_0_t_6908, SXCRef local_1_name, SXCRef local_2_args_6907 )
{
  sxc_write_ref( &(((ClassCmdConstruct*)context)->property_t), local_0_t_6908 );
  sxc_write_ref( &(((ClassCmdConstruct*)context)->property_args), local_2_args_6907 );
  sxc_write_ref( &(((ClassCmdConstruct*)context)->property_type_or_id), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassCmdConstruct*)context)->property_t,local_1_name,NULL) );
  return context;
}

static SlagObject* CmdConstruct__create_duplicate( SXCRef context )
{
  return CmdConstruct__init__Token_TypeInfo_CmdList(type_ClassCmdConstruct.create(),((ClassCmdConstruct*)context)->property_t,((ClassCmdConstruct*)context)->property_type_or_id,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdConstruct*)context)->property_args));
}

SlagObject* CmdConstruct__to_String( SXCRef context )
{
  if ((((ClassCmdConstruct*)context)->property_args != NULL))
  {
    return String__opADD__String(((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_name,ArrayList_of_Cmd__to_String(((ClassCmdConstruct*)context)->property_args));
  }
  return ((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_name;
}

static SlagObject* CmdConstruct__resolve( SXCRef context )
{
  SXCRef local_0_this_type;
  SXCRef local_1_result;

  if (String__opEQ__String(((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_name,str623.value))
  {
    sxc_write_ref( &(((ClassCmdConstruct*)context)->property_type_or_id), ((ClassContext*)sxc_singletons[10])->property_this_type );
  }
  else if (String__opEQ__String(((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_name,str703.value))
  {
    return CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdConstruct*)context)->property_t,CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),((ClassCmdConstruct*)context)->property_t,((ClassContext*)sxc_singletons[10])->property_this_type),context));
  }
  if (TypeInfo__is_valid_type(((ClassCmdConstruct*)context)->property_type_or_id))
  {
    TypeInfo__resolve(((ClassCmdConstruct*)context)->property_type_or_id);
    if ((((ClassCmdConstruct*)context)->property_args != NULL))
    {
      return CmdUnresolvedNewObject__resolve(CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList(type_ClassCmdUnresolvedNewObject.create(),((ClassCmdConstruct*)context)->property_t,((ClassCmdConstruct*)context)->property_type_or_id,((ClassCmdConstruct*)context)->property_args));
    }
    else if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
    {
      return CmdSingletonReference__resolve(CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdConstruct*)context)->property_t,((ClassCmdConstruct*)context)->property_type_or_id));
    }
  }
  local_0_this_type = ((ClassContext*)sxc_singletons[10])->property_this_type;
  if (String__opEQ__String(((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_name),str999.value))
  {
    if ((((ClassCmdConstruct*)context)->property_args != NULL))
    {
      SLAG_THROW( Cmd__error__String(context,str1158.value) );
    }
    return CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),((ClassCmdConstruct*)context)->property_t,local_0_this_type);
  }
  if ((!(((ClassCmdConstruct*)context)->property_args != NULL) || (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdConstruct*)context)->property_args))->property_count == 0)))
  {
    if ((LocalVarTable__get__String(((ClassContext*)sxc_singletons[10])->property_local_var_table,((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_name)) != NULL))
    {
      return CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),((ClassCmdConstruct*)context)->property_t,LocalVarTable__get__String(((ClassContext*)sxc_singletons[10])->property_local_var_table,((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_name)));
    }
    else if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_0_this_type)->property_get_methods)->property_data,((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_name)))
    {
      return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(sxc_singletons[8],((ClassCmdConstruct*)context)->property_t,local_0_this_type,NULL,((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_name),((ClassCmdConstruct*)context)->property_args);
    }
    else if ((((ClassCmdConstruct*)context)->property_args == NULL))
    {
      local_1_result = SlagAnalyzer__create_property_get__Token_TypeInfo_Cmd_String(sxc_singletons[8],((ClassCmdConstruct*)context)->property_t,NULL,NULL,((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_name));
      if ((local_1_result != NULL))
      {
        return local_1_result;
      }
    }
  }
  if ((((ClassCmdConstruct*)context)->property_args != NULL))
  {
    CmdList__resolve(((ClassCmdConstruct*)context)->property_args);
  }
  return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(sxc_singletons[8],((ClassCmdConstruct*)context)->property_t,local_0_this_type,NULL,((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)context)->property_type_or_id)->property_name),((ClassCmdConstruct*)context)->property_args);
}

void CmdConstruct__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdConstruct__type_name( SXCRef context )
{
  return str678.value;
}

static SlagObject* CmdUnary__init__Token_Cmd( SXCRef context, SXCRef local_0_t_7176, SXCRef local_1_operand_7175 )
{
  sxc_write_ref( &(((ClassCmdUnary*)context)->property_t), local_0_t_7176 );
  sxc_write_ref( &(((ClassCmdUnary*)context)->property_operand), local_1_operand_7175 );
  return context;
}

static SlagObject* CmdUnary__type( SXCRef context )
{
  return CallFn____Object(0,((ClassCmdUnary*)context)->property_operand);
}

SlagObject* CmdUnary__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdUnary*)context)->property_operand)),str62.value));
}

static SlagObject* CmdUnary__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdUnary*)context)->property_operand), CallFn____Object(42,((ClassCmdUnary*)context)->property_operand) );
  return context;
}

static void CmdUnary__finalize_structure_info( SXCRef context )
{
  CallFn__(21,((ClassCmdUnary*)context)->property_operand);
}

static void CmdUnary__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdUnary*)context)->property_operand);
}

static SlagObject* CmdUnary__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdUnary*)context)->property_operand), CallFn__CmdList__Object(1,((ClassCmdUnary*)context)->property_operand,local_0_arg_list) );
  return context;
}

void CmdUnary__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdUnary__type_name( SXCRef context )
{
  return str669.value;
}

static SlagObject* CmdMemberAccess__init__Token_Cmd_CmdConstruct( SXCRef context, SXCRef local_0_t_7797, SXCRef local_1_operand_7796, SXCRef local_2_member_7795 )
{
  sxc_write_ref( &(((ClassCmdMemberAccess*)context)->property_t), local_0_t_7797 );
  sxc_write_ref( &(((ClassCmdMemberAccess*)context)->property_operand), local_1_operand_7796 );
  sxc_write_ref( &(((ClassCmdMemberAccess*)context)->property_member), local_2_member_7795 );
  return context;
}

static SlagObject* CmdMemberAccess__create_duplicate( SXCRef context )
{
  return CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdMemberAccess*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMemberAccess*)context)->property_operand),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMemberAccess*)context)->property_member));
}

static SlagObject* CmdMemberAccess__resolve( SXCRef context )
{
  SXCRef local_0_new_type;
  SlagLogical local_1_context_set_to_singleton;
  SXCRef local_2_construct;
  SXCRef local_3_con;
  SXCRef local_4_args;
  SXCRef local_5_call;
  SXCRef local_6_dyn;
  SXCRef local_7_type_context;
  SXCRef local_8_global_call;
  SXCRef local_9_result;
  SXCRef local_10_member_copy;
  SXCRef local_11_args;
  SXCRef local_12_result;
  SXCRef local_13_m_name;
  SXCRef local_14_m;
  SXCRef local_15_methods;
  SXCRef local_16_buffer;
  SXCRef local_17__reader2759;
  SXCRef local_18_p;
  SXCRef local_19_delegate_type_name;
  SlagChar local_20_letter;
  SXCRef local_21__reader2763;
  SXCRef local_22_p;
  SXCRef local_23_sig;
  SlagChar local_24_letter;
  SXCRef local_25__reader2767;
  SXCRef local_26_p;
  SXCRef local_27_parser;
  SXCRef local_28_parser;
  SXCRef local_29_delegate_type;
  SXCRef local_30_result;

  local_0_new_type = NULL;
  local_1_context_set_to_singleton = false;
  {
    if (!sxc_instance_of(((ClassCmdMemberAccess*)context)->property_operand,&type_ClassCmdConstruct)) goto unsatisfied_8880;
    local_2_construct = ((ClassCmdMemberAccess*)context)->property_operand;
    if (!(((ClassCmdConstruct*)local_2_construct)->property_args == NULL)) goto unsatisfied_8880;
    local_0_new_type = ((ClassCmdConstruct*)local_2_construct)->property_type_or_id;
    if (!TypeInfo__is_valid_type(local_0_new_type)) goto unsatisfied_8880;
    TypeInfo__resolve(local_0_new_type);
    satisfied_8880:;
    {
      sxc_write_ref( &(((ClassCmdMemberAccess*)context)->property_operand), CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmd*)((ClassCmdMemberAccess*)context)->property_operand)->property_t,local_0_new_type) );
      local_1_context_set_to_singleton = true;
    }
    goto end_8880;
    unsatisfied_8880:;
  }
  end_8880:;
  if (TypeInfo__is_valid_type(((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_type_or_id))
  {
    TypeInfo__resolve(((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_type_or_id);
    if ((((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_args != NULL))
    {
      SLAG_THROW( Cmd__error__String(context,str1053.value) );
    }
    else
    {
      SLAG_THROW( Cmd__error__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1054.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_type_or_id)),str1055.value))) );
    }
  }
  if (sxc_instance_of(((ClassCmdMemberAccess*)context)->property_operand,&type_ClassCmdConstruct))
  {
    local_3_con = ((ClassCmdMemberAccess*)context)->property_operand;
    if (String__opEQ__String(((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)local_3_con)->property_type_or_id)->property_name),str1000.value))
    {
      if ((((ClassCmdConstruct*)local_3_con)->property_args != NULL))
      {
        SLAG_THROW( Cmd__error__String(local_3_con,str1056.value) );
      }
      if ((TypeInfo__base_class(((ClassContext*)sxc_singletons[10])->property_this_type) == NULL))
      {
        SLAG_THROW( Cmd__error__String(local_3_con,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1057.value),Global__to_String__Object(sxc_singletons[21],((ClassContext*)sxc_singletons[10])->property_this_type)),str242.value))) );
      }
      local_4_args = ((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_args;
      if ((local_4_args != NULL))
      {
        CmdList__resolve(local_4_args);
      }
      local_5_call = SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(sxc_singletons[8],((ClassCmdMemberAccess*)context)->property_t,TypeInfo__base_class(((ClassContext*)sxc_singletons[10])->property_this_type),CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),((ClassCmdMemberAccess*)context)->property_t,TypeInfo__base_class(((ClassContext*)sxc_singletons[10])->property_this_type)),((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_type_or_id)->property_name),local_4_args);
      if (sxc_instance_of(local_5_call,&type_ClassCmdDynamicCall))
      {
        local_6_dyn = local_5_call;
        return CmdContextCall__init__Token_Cmd_MethodInfo_CmdList(type_ClassCmdStaticCall.create(),((ClassCmd*)local_5_call)->property_t,CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),((ClassCmd*)local_5_call)->property_t,TypeInfo__base_class(((ClassContext*)sxc_singletons[10])->property_this_type)),((ClassCmdDynamicCall*)local_6_dyn)->property_method_info,((ClassCmdDynamicCall*)local_6_dyn)->property_args);
      }
      else
      {
        return local_5_call;
      }
    }
  }
  if (!local_1_context_set_to_singleton)
  {
    sxc_write_ref( &(((ClassCmdMemberAccess*)context)->property_operand), CallFn____Object(16,((ClassCmdMemberAccess*)context)->property_operand) );
  }
  local_7_type_context = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdMemberAccess*)context)->property_operand);
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_7_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
  {
    if (!(((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_args != NULL))
    {
      sxc_write_ref( &(((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_args), CmdList__init__Int32(type_ClassCmdList.create(),1) );
    }
    ArrayList_of_Object__insert__Object_Int32(((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_args,((ClassCmdMemberAccess*)context)->property_operand,0);
    local_8_global_call = CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdMemberAccess*)context)->property_t,CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdMemberAccess*)context)->property_t,((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,str12.value))),((ClassCmdMemberAccess*)context)->property_member);
    return CmdMemberAccess__resolve(local_8_global_call);
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)local_7_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    if ((((((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_args == NULL) || (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_args))->property_count == 0)) && (TypeInfo__find_property__String(local_7_type_context,((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_type_or_id)->property_name)) != NULL)))
    {
      local_9_result = SlagAnalyzer__create_property_get__Token_TypeInfo_Cmd_String(sxc_singletons[8],((ClassCmdMemberAccess*)context)->property_t,local_7_type_context,((ClassCmdMemberAccess*)context)->property_operand,((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_type_or_id)->property_name));
      if ((local_9_result != NULL))
      {
        return local_9_result;
      }
    }
    local_10_member_copy = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMemberAccess*)context)->property_member);
    if (!sxc_instance_of(((ClassCmdMemberAccess*)context)->property_operand,&type_ClassCmdSingletonReference))
    {
      if (!(((ClassCmdConstruct*)local_10_member_copy)->property_args != NULL))
      {
        sxc_write_ref( &(((ClassCmdConstruct*)local_10_member_copy)->property_args), CmdList__init__Int32(type_ClassCmdList.create(),1) );
      }
      ArrayList_of_Object__insert__Object_Int32(((ClassCmdConstruct*)local_10_member_copy)->property_args,((ClassCmdMemberAccess*)context)->property_operand,0);
    }
    return CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdMemberAccess*)context)->property_t,CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdMemberAccess*)context)->property_t,((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,TypeInfo__manager_name(local_7_type_context)))),local_10_member_copy));
  }
  SlagAnalyzer__require_reference__Token_TypeInfo(sxc_singletons[8],((ClassCmdMemberAccess*)context)->property_t,local_7_type_context);
  if (!(local_7_type_context != NULL))
  {
    SLAG_THROW( Cmd__error__String(((ClassCmdMemberAccess*)context)->property_operand,str1137.value) );
  }
  ArrayList_of_Object__add__Object(((ClassContext*)sxc_singletons[10])->property_implicit_context,local_7_type_context);
  local_11_args = ((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_args;
  if (!(local_11_args != NULL))
  {
    local_12_result = SlagAnalyzer__create_property_get__Token_TypeInfo_Cmd_String(sxc_singletons[8],((ClassCmdMemberAccess*)context)->property_t,local_7_type_context,CallFn____Object(16,((ClassCmdMemberAccess*)context)->property_operand),((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_type_or_id)->property_name));
    if ((local_12_result != NULL))
    {
      ArrayList_of_TypeInfo__remove_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
      return local_12_result;
    }
  }
  SLAG_TRY
  {
    if (String__opEQ__String(((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_type_or_id)->property_name),str703.value))
    {
      if ((local_11_args == NULL))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmdMemberAccess*)context)->property_t,str1138.value)) );
      }
      local_13_m_name = ((ClassCmdLiteralString*)((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_11_args))->property_data)->data))[0]))))->property_value;
      local_14_m = NULL;
      local_15_methods = MethodTable__get__String(((ClassTypeInfo*)local_7_type_context)->property_methods_by_name,local_13_m_name);
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_15_methods))->property_count == 0))
      {
        if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_7_type_context)->property_methods_by_signature)->property_data,local_13_m_name))
        {
          local_14_m = ((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_7_type_context)->property_methods_by_signature)->property_data,local_13_m_name));
        }
        if ((local_14_m == NULL))
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmdMemberAccess*)context)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1139.value),local_13_m_name),str1140.value),Global__to_String__Object(sxc_singletons[21],local_7_type_context)),str38.value)))) );
        }
      }
      else if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_15_methods))->property_count == 1))
      {
        local_14_m = ((ClassMethodInfo*)((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_15_methods))->property_data)->data))[0])));
      }
      else if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_15_methods))->property_count > 1))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmdMemberAccess*)context)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1141.value),local_13_m_name),str1142.value)))) );
      }
      local_16_buffer = StringBuilder__init(type_ClassStringBuilder.create());
      StringBuilder__print__String(local_16_buffer,str626.value);
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_14_m)->property_parameters))->property_count != 0))
      {
        StringBuilder__print__String(local_16_buffer,DelegateMaker__filter__String(sxc_singletons[31],((ClassTypeInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_14_m)->property_parameters))->property_data)->data))[0]))))->property_type)->property_name));
        local_17__reader2759 = ArrayList_of_ParameterInfo__from__Int32(((ClassMethodInfo*)local_14_m)->property_parameters,1);
        while (CallFn____Logical(14,local_17__reader2759))
        {
          local_18_p = CallFn____Object(45,local_17__reader2759);
          StringBuilder__print__String(local_16_buffer,String__opADD__String(str629.value,DelegateMaker__filter__String(sxc_singletons[31],((ClassTypeInfo*)((ClassParameterInfo*)local_18_p)->property_type)->property_name)));
        }
      }
      StringBuilder__print__String(local_16_buffer,str631.value);
      if ((((ClassMethodInfo*)local_14_m)->property_return_type != NULL))
      {
        StringBuilder__print__String(local_16_buffer,DelegateMaker__filter__String(sxc_singletons[31],((ClassTypeInfo*)((ClassMethodInfo*)local_14_m)->property_return_type)->property_name));
      }
      local_19_delegate_type_name = StringBuilder__to_String(local_16_buffer);
      if (!GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashSet_of_String*)((ClassSlagParserManager*)sxc_singletons[35])->property_delegate_types)->property_data,local_19_delegate_type_name))
      {
        HashSet_of_String__add__String(((ClassSlagParserManager*)sxc_singletons[35])->property_delegate_types,local_19_delegate_type_name);
        ArrayList_of_Char__clear(((ClassStringBuilder*)local_16_buffer)->property_data);
        StringBuilder__print__String(local_16_buffer,str632.value);
        if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_14_m)->property_parameters))->property_count != 0))
        {
          StringBuilder__print__String(local_16_buffer,String__opADD__String(((ClassTypeInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_14_m)->property_parameters))->property_data)->data))[0]))))->property_type)->property_name,str633.value));
          local_20_letter = ((SlagChar)98);
          local_21__reader2763 = ArrayList_of_ParameterInfo__from__Int32(((ClassMethodInfo*)local_14_m)->property_parameters,1);
          while (CallFn____Logical(14,local_21__reader2763))
          {
            local_22_p = CallFn____Object(45,local_21__reader2763);
            StringBuilder__print__String(local_16_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str634.value),((ClassTypeInfo*)((ClassParameterInfo*)local_22_p)->property_type)->property_name),str607.value),Global__to_String__Char(sxc_singletons[21],local_20_letter))));
            local_20_letter = ((SlagChar)((SlagInt32)(((SlagInt32)local_20_letter)+1)));
          }
        }
        StringBuilder__print__String(local_16_buffer,str635.value);
        if ((((ClassMethodInfo*)local_14_m)->property_return_type != NULL))
        {
          ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_16_buffer)->property_data,((SlagChar)46));
          StringBuilder__print__String(local_16_buffer,((ClassTypeInfo*)((ClassMethodInfo*)local_14_m)->property_return_type)->property_name);
        }
        local_23_sig = StringBuilder__to_String(local_16_buffer);
        ArrayList_of_Char__clear(((ClassStringBuilder*)local_16_buffer)->property_data);
        TextWriter__println__String(local_16_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str636.value),local_19_delegate_type_name),str637.value)));
        TextWriter__println__String(local_16_buffer,str638.value);
        TextWriter__println__String(local_16_buffer,String__opADD__String(str639.value,local_23_sig));
        TextWriter__println__String(local_16_buffer,str269.value);
        CallFn__Char(18,local_16_buffer,((SlagChar)10));
        StringBuilder__print__String(local_16_buffer,String__opADD__String(String__opADD__String(str640.value,local_19_delegate_type_name),str641.value));
        TextWriter__println__String(local_16_buffer,local_19_delegate_type_name);
        TextWriter__println__String(local_16_buffer,str642.value);
        TextWriter__println__String(local_16_buffer,str643.value);
        TextWriter__println__String(local_16_buffer,String__opADD__String(str644.value,local_23_sig));
        if ((((ClassMethodInfo*)local_14_m)->property_return_type != NULL))
        {
          StringBuilder__print__String(local_16_buffer,str645.value);
        }
        StringBuilder__print__String(local_16_buffer,str646.value);
        if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_14_m)->property_parameters))->property_count != 0))
        {
          StringBuilder__print__String(local_16_buffer,str633.value);
          local_24_letter = ((SlagChar)98);
          local_25__reader2767 = ArrayList_of_ParameterInfo__from__Int32(((ClassMethodInfo*)local_14_m)->property_parameters,1);
          while (CallFn____Logical(14,local_25__reader2767))
          {
            local_26_p = CallFn____Object(45,local_25__reader2767);
            StringBuilder__print__String(local_16_buffer,String__opADD__Char(str634.value,local_24_letter));
            local_24_letter = ((SlagChar)((SlagInt32)(((SlagInt32)local_24_letter)+1)));
          }
        }
        TextWriter__println__String(local_16_buffer,str635.value);
        TextWriter__println__String(local_16_buffer,str269.value);
        local_27_parser = SlagParser__init__TokenReader(type_ClassSlagParser.create(),SlagPreprocessor__init__String_String(type_ClassSlagPreprocessor.create(),str647.value,StringBuilder__to_String(local_16_buffer)));
        while (SlagParser__parse_next(local_27_parser))
        {
        }
      }
      ArrayList_of_Char__clear(((ClassStringBuilder*)local_16_buffer)->property_data);
      StringBuilder__print__String(local_16_buffer,str707.value);
      StringBuilder__print__String(local_16_buffer,local_19_delegate_type_name);
      StringBuilder__print__String(local_16_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str364.value),((ClassTypeInfo*)local_7_type_context)->property_name),str395.value),String__before_first__Char(local_13_m_name,((SlagChar)40))),str365.value)));
      local_28_parser = SlagParser__init__TokenReader(type_ClassSlagParser.create(),SlagPreprocessor__init__String_String(type_ClassSlagPreprocessor.create(),str1143.value,StringBuilder__to_String(local_16_buffer)));
      local_29_delegate_type = SlagParser__parse_data_type(local_28_parser);
      return CmdConstruct__resolve(CmdConstruct__init__Token_TypeInfo_CmdList(type_ClassCmdConstruct.create(),((ClassCmdMemberAccess*)context)->property_t,local_29_delegate_type,CmdList__init__Cmd(type_ClassCmdList.create(),((ClassCmdMemberAccess*)context)->property_operand)));
    }
    if ((local_11_args != NULL))
    {
      CmdList__resolve(local_11_args);
    }
    local_30_result = SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(sxc_singletons[8],((ClassCmdMemberAccess*)context)->property_t,local_7_type_context,((ClassCmdMemberAccess*)context)->property_operand,((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)((ClassCmdMemberAccess*)context)->property_member)->property_type_or_id)->property_name),local_11_args);
    ArrayList_of_TypeInfo__remove_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
    return local_30_result;
  }
  SLAG_CATCH(_err3)
  {
    SlagTypeInfo* _err3_type = _err3->type;
    if (_err3_type->instance_of(&type_ClassSlagError))
    {
      SXCRef local_31_err = _err3;
      ArrayList_of_TypeInfo__remove_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
      SLAG_THROW( local_31_err );
    }
    else
    {
      SLAG_THROW(_err3);
    }
  }
}

SlagObject* CmdMemberAccess__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str835.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdMemberAccess*)context)->property_operand)),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdMemberAccess*)context)->property_member)),str62.value));
}

void CmdMemberAccess__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdMemberAccess__type_name( SXCRef context )
{
  return str836.value;
}

static SlagObject* Array_of_HashTableBin_of_Int32_and_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_HashTableBin_of_Int32_and_Int32.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_HashTableBin_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_HashTableBin_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1024.value;
}

SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Int32__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count8641;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count8641 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count8641))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassHashTableBin_of_Int32_and_Int32*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Int32__init( SXCRef context )
{
  ArrayList_of_HashTableBin_of_Int32_and_Int32__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_HashTableBin_of_Int32_and_Int32*)context)->property_data), type_ClassArray_of_HashTableBin_of_Int32_and_Int32.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Int32__create_reader( SXCRef context )
{
  return ArrayReader_of_HashTableBin_of_Int32_and_Int32__init__Collection_of_HashTableBin_of_Int32_and_Int32_Array_of_HashTableBin_of_Int32_and_Int32_Int32_Int32(type_ClassArrayReader_of_HashTableBin_of_Int32_and_Int32.create(),context,((ClassArrayList_of_HashTableBin_of_Int32_and_Int32*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_HashTableBin_of_Int32_and_Int32__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_HashTableBin_of_Int32_and_Int32__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_HashTableBin_of_Int32_and_Int32__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Int32__add__HashTableBin_of_Int32_and_Int32( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_HashTableBin_of_Int32_and_Int32*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_HashTableBin_of_Int32_and_Int32__init__Int32(type_ClassArrayList_of_HashTableBin_of_Int32_and_Int32.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_HashTableBin_of_Int32_and_Int32*)local_0_dup)->property_data,((ClassArrayList_of_HashTableBin_of_Int32_and_Int32*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_HashTableBin_of_Int32_and_Int32*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_HashTableBin_of_Int32_and_Int32__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_HashTableBin_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1025.value;
}

SlagObject* GenericHashTable_of_Int32_and_Int32__init( SXCRef context )
{
  GenericHashTable_of_Int32_and_Int32__init__Int32_Real64(context,16,sxc_int64_as_real64(0x4008000000000000LL));
  return context;
}

static SlagObject* GenericHashTable_of_Int32_and_Int32__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size_8661 )
{
  SlagInt32 local_2__local_8571;
  SlagInt32 local_3__last8572;

  ((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_average_bin_size = local_1_average_bin_size_8661;
  local_0_num_bins = BitwiseOperations__rounded_up_to_power_of_two__Int32(sxc_singletons[15],local_0_num_bins);
  ((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_hash_mask = (local_0_num_bins-1);
  ((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_max_entries = (((SlagReal64)local_0_num_bins)*((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_average_bin_size);
  sxc_write_ref( &(((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_bins), ArrayList_of_HashTableBin_of_Int32_and_Int32__init(type_ClassArrayList_of_HashTableBin_of_Int32_and_Int32.create()) );
  local_2__local_8571 = 1;
  local_3__last8572 = local_0_num_bins;
  while ((local_2__local_8571 <= local_3__last8572))
  {
    ArrayList_of_Object__add__Object(((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_bins,HashTableBin_of_Int32_and_Int32__init__Int32(type_ClassHashTableBin_of_Int32_and_Int32.create(),((SlagInt32)((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_average_bin_size)));
    ++local_2__local_8571;
  }
  return context;
}

static void GenericHashTable_of_Int32_and_Int32__set__Int32_Int32( SXCRef context, SlagInt32 local_0_key, SlagInt32 local_1_value )
{
  if ((((SlagReal64)((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_num_entries) == ((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_max_entries))
  {
    GenericHashTable_of_Int32_and_Int32__expand_table(context);
  }
  if (HashTableBin_of_Int32_and_Int32__add_entry__Int32_Int32(GenericHashTable_of_Int32_and_Int32__get_bin__Int32(context,local_0_key),local_0_key,local_1_value))
  {
    ++(((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_num_entries);
  }
}

static void GenericHashTable_of_Int32_and_Int32__set__Mapping_of_Int32_and_Int32( SXCRef context, SXCRef local_0_entry )
{
  if ((((SlagReal64)((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_num_entries) == ((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_max_entries))
  {
    GenericHashTable_of_Int32_and_Int32__expand_table(context);
  }
  if (HashTableBin_of_Int32_and_Int32__add_entry__Mapping_of_Int32_and_Int32(GenericHashTable_of_Int32_and_Int32__get_bin__Int32(context,((ClassMapping_of_Int32_and_Int32*)local_0_entry)->property_key),local_0_entry))
  {
    ++(((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_num_entries);
  }
}

static SlagInt32 GenericHashTable_of_Int32_and_Int32__get__Int32( SXCRef context, SlagInt32 local_0_key )
{
  SXCRef local_1_entry;
  SlagInt32 local_2_null_result;

  local_1_entry = HashTableBin_of_Int32_and_Int32__find_entry__Int32(GenericHashTable_of_Int32_and_Int32__get_bin__Int32(context,local_0_key),local_0_key);
  if ((local_1_entry == NULL))
  {
    local_2_null_result = 0;
    return local_2_null_result;
  }
  return ((ClassMapping_of_Int32_and_Int32*)local_1_entry)->property_value;
}

static SlagLogical GenericHashTable_of_Int32_and_Int32__contains__Int32( SXCRef context, SlagInt32 local_0_key )
{
  SXCRef local_1_entry;

  local_1_entry = HashTableBin_of_Int32_and_Int32__find_entry__Int32(GenericHashTable_of_Int32_and_Int32__get_bin__Int32(context,local_0_key),local_0_key);
  return (local_1_entry != NULL);
}

static SlagObject* GenericHashTable_of_Int32_and_Int32__get_bin__Int32( SXCRef context, SlagInt32 local_0_key )
{
  return ((ClassHashTableBin_of_Int32_and_Int32*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_bins))->property_data)->data))[(Global__hash_code__Int32(sxc_singletons[21],local_0_key)&((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_hash_mask)]));
}

static void GenericHashTable_of_Int32_and_Int32__add__GenericHashTable_of_Int32_and_Int32( SXCRef context, SXCRef local_0_other )
{
  SXCRef local_1__reader8581;
  SXCRef local_2_bin;
  SXCRef local_3__reader8582;
  SXCRef local_4_entry;

  local_1__reader8581 = ArrayList_of_HashTableBin_of_Int32_and_Int32__create_reader(((ClassGenericHashTable_of_Int32_and_Int32*)local_0_other)->property_bins);
  while (ArrayReader_of_HashTableBin_of_Int32_and_Int32__has_another(local_1__reader8581))
  {
    local_2_bin = ArrayReader_of_HashTableBin_of_Int32_and_Int32__read(local_1__reader8581);
    local_3__reader8582 = ArrayList_of_Mapping_of_Int32_and_Int32__create_reader(((ClassHashTableBin_of_Int32_and_Int32*)local_2_bin)->property_entries);
    while (ArrayReader_of_Mapping_of_Int32_and_Int32__has_another(local_3__reader8582))
    {
      local_4_entry = ArrayReader_of_Mapping_of_Int32_and_Int32__read(local_3__reader8582);
      GenericHashTable_of_Int32_and_Int32__set__Int32_Int32(context,((ClassMapping_of_Int32_and_Int32*)local_4_entry)->property_key,((ClassMapping_of_Int32_and_Int32*)local_4_entry)->property_value);
    }
  }
}

static void GenericHashTable_of_Int32_and_Int32__expand_table( SXCRef context )
{
  SXCRef local_0_new_table;
  SXCRef local_1__reader8584;
  SXCRef local_2_bin;
  SXCRef local_3__reader8585;
  SXCRef local_4_entry;

  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_bins))->property_count >= ((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_max_bins))
  {
    return;
  }
  local_0_new_table = GenericHashTable_of_Int32_and_Int32__init__Int32_Real64(type_ClassGenericHashTable_of_Int32_and_Int32.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_bins))->property_count<<1),((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_average_bin_size);
  local_1__reader8584 = ArrayList_of_HashTableBin_of_Int32_and_Int32__create_reader(((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_bins);
  while (ArrayReader_of_HashTableBin_of_Int32_and_Int32__has_another(local_1__reader8584))
  {
    local_2_bin = ArrayReader_of_HashTableBin_of_Int32_and_Int32__read(local_1__reader8584);
    local_3__reader8585 = ArrayList_of_Mapping_of_Int32_and_Int32__create_reader(((ClassHashTableBin_of_Int32_and_Int32*)local_2_bin)->property_entries);
    while (ArrayReader_of_Mapping_of_Int32_and_Int32__has_another(local_3__reader8585))
    {
      local_4_entry = ArrayReader_of_Mapping_of_Int32_and_Int32__read(local_3__reader8585);
      GenericHashTable_of_Int32_and_Int32__set__Mapping_of_Int32_and_Int32(local_0_new_table,local_4_entry);
    }
  }
  sxc_write_ref( &(((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_bins), ((ClassGenericHashTable_of_Int32_and_Int32*)local_0_new_table)->property_bins );
  ((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_max_entries = ((ClassGenericHashTable_of_Int32_and_Int32*)local_0_new_table)->property_max_entries;
  ((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_hash_mask = ((ClassGenericHashTable_of_Int32_and_Int32*)local_0_new_table)->property_hash_mask;
}

SlagObject* GenericHashTable_of_Int32_and_Int32__to_String( SXCRef context )
{
  return CallFn____Object(47,((AspectReader_of_Mapping_of_Int32_and_Int32*)HashTableMappingReader_of_Int32_and_Int32__init__Reader_of_HashTableBin_of_Int32_and_Int32(type_ClassHashTableMappingReader_of_Int32_and_Int32.create(),ArrayList_of_HashTableBin_of_Int32_and_Int32__create_reader(((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_bins))));
}

static SlagObject* GenericHashTable_of_Int32_and_Int32__values( SXCRef context )
{
  return HashTableValueReader_of_Int32_and_Int32__init__Reader_of_HashTableBin_of_Int32_and_Int32(type_ClassHashTableValueReader_of_Int32_and_Int32.create(),ArrayList_of_HashTableBin_of_Int32_and_Int32__create_reader(((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_bins));
}

void GenericHashTable_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_num_entries = 0;
  ((ClassGenericHashTable_of_Int32_and_Int32*)context)->property_max_bins = 512;
}

SlagObject* GenericHashTable_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1028.value;
}

SlagObject* HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32*)context)->property_data), GenericHashTable_of_Int32_and_Int32__init__Int32_Real64(type_ClassGenericHashTable_of_Int32_and_Int32.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32*)context)->property_data), GenericHashTable_of_Int32_and_Int32__init__Int32_Real64(type_ClassGenericHashTable_of_Int32_and_Int32.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init__Int32_Real64(type_ClassHashTable_of_Int32_and_Int32.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Int32_and_Int32*)((ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Int32_and_Int32*)((ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Int32_and_Int32__add__GenericHashTable_of_Int32_and_Int32(((ClassHashTable_of_Int32_and_Int32*)local_0_new_table)->property_data,((ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Int32_and_Int32*)HashTableMappingReader_of_Int32_and_Int32__init__Reader_of_HashTableBin_of_Int32_and_Int32(type_ClassHashTableMappingReader_of_Int32_and_Int32.create(),ArrayList_of_HashTableBin_of_Int32_and_Int32__create_reader(((ClassGenericHashTable_of_Int32_and_Int32*)((ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32*)context)->property_data)->property_bins)))));
}

static SlagObject* HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__create_reader( SXCRef context )
{
  return ((AspectReader_of_Int32*)CoerceReader_of_Int32__init__Reader_of_Int32(type_ClassCoerceReader_of_Int32.create(),((AspectReader_of_Int32*)HashTableValueReader_of_Int32_and_Int32__init__Reader_of_HashTableBin_of_Int32_and_Int32(type_ClassHashTableValueReader_of_Int32_and_Int32.create(),ArrayList_of_HashTableBin_of_Int32_and_Int32__create_reader(((ClassGenericHashTable_of_Int32_and_Int32*)((ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__type_name( SXCRef context )
{
  return str1030.value;
}

static SlagObject* Array_of_HashTableBin_of_Object_and_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_HashTableBin_of_Object_and_Int32.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_HashTableBin_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_HashTableBin_of_Object_and_Int32__type_name( SXCRef context )
{
  return str183.value;
}

SlagObject* ArrayList_of_HashTableBin_of_Object_and_Int32__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count4521;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count4521 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count4521))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassHashTableBin_of_Object_and_Int32*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_HashTableBin_of_Object_and_Int32__init( SXCRef context )
{
  ArrayList_of_HashTableBin_of_Object_and_Int32__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_HashTableBin_of_Object_and_Int32*)context)->property_data), type_ClassArray_of_HashTableBin_of_Object_and_Int32.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Int32__create_reader( SXCRef context )
{
  return ArrayReader_of_HashTableBin_of_Object_and_Int32__init__Collection_of_HashTableBin_of_Object_and_Int32_Array_of_HashTableBin_of_Object_and_Int32_Int32_Int32(type_ClassArrayReader_of_HashTableBin_of_Object_and_Int32.create(),context,((ClassArrayList_of_HashTableBin_of_Object_and_Int32*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_HashTableBin_of_Object_and_Int32__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_HashTableBin_of_Object_and_Int32__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_HashTableBin_of_Object_and_Int32__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_HashTableBin_of_Object_and_Int32__add__HashTableBin_of_Object_and_Int32( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_HashTableBin_of_Object_and_Int32*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_HashTableBin_of_Object_and_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_HashTableBin_of_Object_and_Int32__init__Int32(type_ClassArrayList_of_HashTableBin_of_Object_and_Int32.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_HashTableBin_of_Object_and_Int32*)local_0_dup)->property_data,((ClassArrayList_of_HashTableBin_of_Object_and_Int32*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_HashTableBin_of_Object_and_Int32*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_HashTableBin_of_Object_and_Int32__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_HashTableBin_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_HashTableBin_of_Object_and_Int32__type_name( SXCRef context )
{
  return str184.value;
}

SlagObject* GenericHashTable_of_Object_and_Int32__init( SXCRef context )
{
  GenericHashTable_of_Object_and_Int32__init__Int32_Real64(context,16,sxc_int64_as_real64(0x4008000000000000LL));
  return context;
}

static SlagObject* GenericHashTable_of_Object_and_Int32__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size_4541 )
{
  SlagInt32 local_2__local_4451;
  SlagInt32 local_3__last4452;

  ((ClassGenericHashTable_of_Object_and_Int32*)context)->property_average_bin_size = local_1_average_bin_size_4541;
  local_0_num_bins = BitwiseOperations__rounded_up_to_power_of_two__Int32(sxc_singletons[15],local_0_num_bins);
  ((ClassGenericHashTable_of_Object_and_Int32*)context)->property_hash_mask = (local_0_num_bins-1);
  ((ClassGenericHashTable_of_Object_and_Int32*)context)->property_max_entries = (((SlagReal64)local_0_num_bins)*((ClassGenericHashTable_of_Object_and_Int32*)context)->property_average_bin_size);
  sxc_write_ref( &(((ClassGenericHashTable_of_Object_and_Int32*)context)->property_bins), ArrayList_of_HashTableBin_of_Object_and_Int32__init(type_ClassArrayList_of_HashTableBin_of_Object_and_Int32.create()) );
  local_2__local_4451 = 1;
  local_3__last4452 = local_0_num_bins;
  while ((local_2__local_4451 <= local_3__last4452))
  {
    ArrayList_of_Object__add__Object(((ClassGenericHashTable_of_Object_and_Int32*)context)->property_bins,HashTableBin_of_Object_and_Int32__init__Int32(type_ClassHashTableBin_of_Object_and_Int32.create(),((SlagInt32)((ClassGenericHashTable_of_Object_and_Int32*)context)->property_average_bin_size)));
    ++local_2__local_4451;
  }
  return context;
}

static void GenericHashTable_of_Object_and_Int32__set__Object_Int32( SXCRef context, SXCRef local_0_key, SlagInt32 local_1_value )
{
  if ((((SlagReal64)((ClassGenericHashTable_of_Object_and_Int32*)context)->property_num_entries) == ((ClassGenericHashTable_of_Object_and_Int32*)context)->property_max_entries))
  {
    GenericHashTable_of_Object_and_Int32__expand_table(context);
  }
  if (HashTableBin_of_Object_and_Int32__add_entry__Object_Int32(GenericHashTable_of_Object_and_Int32__get_bin__Object(context,local_0_key),local_0_key,local_1_value))
  {
    ++(((ClassGenericHashTable_of_Object_and_Int32*)context)->property_num_entries);
  }
}

static void GenericHashTable_of_Object_and_Int32__set__Mapping_of_Object_and_Int32( SXCRef context, SXCRef local_0_entry )
{
  if ((((SlagReal64)((ClassGenericHashTable_of_Object_and_Int32*)context)->property_num_entries) == ((ClassGenericHashTable_of_Object_and_Int32*)context)->property_max_entries))
  {
    GenericHashTable_of_Object_and_Int32__expand_table(context);
  }
  if (HashTableBin_of_Object_and_Int32__add_entry__Mapping_of_Object_and_Int32(GenericHashTable_of_Object_and_Int32__get_bin__Object(context,((ClassMapping_of_Object_and_Int32*)local_0_entry)->property_key),local_0_entry))
  {
    ++(((ClassGenericHashTable_of_Object_and_Int32*)context)->property_num_entries);
  }
}

static SlagInt32 GenericHashTable_of_Object_and_Int32__get__Object( SXCRef context, SXCRef local_0_key )
{
  SXCRef local_1_entry;
  SlagInt32 local_2_null_result;

  local_1_entry = HashTableBin_of_Object_and_Int32__find_entry__Object(GenericHashTable_of_Object_and_Int32__get_bin__Object(context,local_0_key),local_0_key);
  if ((local_1_entry == NULL))
  {
    local_2_null_result = 0;
    return local_2_null_result;
  }
  return ((ClassMapping_of_Object_and_Int32*)local_1_entry)->property_value;
}

static SlagObject* GenericHashTable_of_Object_and_Int32__find__Object( SXCRef context, SXCRef local_0_key )
{
  return HashTableBin_of_Object_and_Int32__find_entry__Object(GenericHashTable_of_Object_and_Int32__get_bin__Object(context,local_0_key),local_0_key);
}

static SlagLogical GenericHashTable_of_Object_and_Int32__contains__Object( SXCRef context, SXCRef local_0_key )
{
  SXCRef local_1_entry;

  local_1_entry = HashTableBin_of_Object_and_Int32__find_entry__Object(GenericHashTable_of_Object_and_Int32__get_bin__Object(context,local_0_key),local_0_key);
  return (local_1_entry != NULL);
}

static SlagObject* GenericHashTable_of_Object_and_Int32__get_bin__Object( SXCRef context, SXCRef local_0_key )
{
  return ((ClassHashTableBin_of_Object_and_Int32*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Int32*)context)->property_bins))->property_data)->data))[(CallFn____Int32(43,local_0_key)&((ClassGenericHashTable_of_Object_and_Int32*)context)->property_hash_mask)]));
}

static void GenericHashTable_of_Object_and_Int32__add__GenericHashTable_of_Object_and_Int32( SXCRef context, SXCRef local_0_other )
{
  SXCRef local_1__reader4461;
  SXCRef local_2_bin;
  SXCRef local_3__reader4462;
  SXCRef local_4_entry;

  local_1__reader4461 = ArrayList_of_HashTableBin_of_Object_and_Int32__create_reader(((ClassGenericHashTable_of_Object_and_Int32*)local_0_other)->property_bins);
  while (ArrayReader_of_HashTableBin_of_Object_and_Int32__has_another(local_1__reader4461))
  {
    local_2_bin = ArrayReader_of_HashTableBin_of_Object_and_Int32__read(local_1__reader4461);
    local_3__reader4462 = ArrayList_of_Mapping_of_Object_and_Int32__create_reader(((ClassHashTableBin_of_Object_and_Int32*)local_2_bin)->property_entries);
    while (ArrayReader_of_Mapping_of_Object_and_Int32__has_another(local_3__reader4462))
    {
      local_4_entry = ArrayReader_of_Mapping_of_Object_and_Int32__read(local_3__reader4462);
      GenericHashTable_of_Object_and_Int32__set__Object_Int32(context,((ClassMapping_of_Object_and_Int32*)local_4_entry)->property_key,((ClassMapping_of_Object_and_Int32*)local_4_entry)->property_value);
    }
  }
}

static void GenericHashTable_of_Object_and_Int32__expand_table( SXCRef context )
{
  SXCRef local_0_new_table;
  SXCRef local_1__reader4464;
  SXCRef local_2_bin;
  SXCRef local_3__reader4465;
  SXCRef local_4_entry;

  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Int32*)context)->property_bins))->property_count >= ((ClassGenericHashTable_of_Object_and_Int32*)context)->property_max_bins))
  {
    return;
  }
  local_0_new_table = GenericHashTable_of_Object_and_Int32__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Int32.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Int32*)context)->property_bins))->property_count<<1),((ClassGenericHashTable_of_Object_and_Int32*)context)->property_average_bin_size);
  local_1__reader4464 = ArrayList_of_HashTableBin_of_Object_and_Int32__create_reader(((ClassGenericHashTable_of_Object_and_Int32*)context)->property_bins);
  while (ArrayReader_of_HashTableBin_of_Object_and_Int32__has_another(local_1__reader4464))
  {
    local_2_bin = ArrayReader_of_HashTableBin_of_Object_and_Int32__read(local_1__reader4464);
    local_3__reader4465 = ArrayList_of_Mapping_of_Object_and_Int32__create_reader(((ClassHashTableBin_of_Object_and_Int32*)local_2_bin)->property_entries);
    while (ArrayReader_of_Mapping_of_Object_and_Int32__has_another(local_3__reader4465))
    {
      local_4_entry = ArrayReader_of_Mapping_of_Object_and_Int32__read(local_3__reader4465);
      GenericHashTable_of_Object_and_Int32__set__Mapping_of_Object_and_Int32(local_0_new_table,local_4_entry);
    }
  }
  sxc_write_ref( &(((ClassGenericHashTable_of_Object_and_Int32*)context)->property_bins), ((ClassGenericHashTable_of_Object_and_Int32*)local_0_new_table)->property_bins );
  ((ClassGenericHashTable_of_Object_and_Int32*)context)->property_max_entries = ((ClassGenericHashTable_of_Object_and_Int32*)local_0_new_table)->property_max_entries;
  ((ClassGenericHashTable_of_Object_and_Int32*)context)->property_hash_mask = ((ClassGenericHashTable_of_Object_and_Int32*)local_0_new_table)->property_hash_mask;
}

SlagObject* GenericHashTable_of_Object_and_Int32__to_String( SXCRef context )
{
  return CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Int32*)HashTableMappingReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32(type_ClassHashTableMappingReader_of_Object_and_Int32.create(),ArrayList_of_HashTableBin_of_Object_and_Int32__create_reader(((ClassGenericHashTable_of_Object_and_Int32*)context)->property_bins))));
}

static SlagObject* GenericHashTable_of_Object_and_Int32__values( SXCRef context )
{
  return HashTableValueReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32(type_ClassHashTableValueReader_of_Object_and_Int32.create(),ArrayList_of_HashTableBin_of_Object_and_Int32__create_reader(((ClassGenericHashTable_of_Object_and_Int32*)context)->property_bins));
}

void GenericHashTable_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassGenericHashTable_of_Object_and_Int32*)context)->property_num_entries = 0;
  ((ClassGenericHashTable_of_Object_and_Int32*)context)->property_max_bins = 512;
}

SlagObject* GenericHashTable_of_Object_and_Int32__type_name( SXCRef context )
{
  return str187.value;
}

SlagObject* HashTableBase_of_String_and_Int32_and_Object_and_Int32__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32*)context)->property_data), GenericHashTable_of_Object_and_Int32__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Int32.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_Int32_and_Object_and_Int32__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32*)context)->property_data), GenericHashTable_of_Object_and_Int32__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Int32.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_Int32_and_Object_and_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_Int32_and_Object_and_Int32__init__Int32_Real64(type_ClassHashTable_of_String_and_Int32.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Int32*)((ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Int32*)((ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Int32__add__GenericHashTable_of_Object_and_Int32(((ClassHashTable_of_String_and_Int32*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_Int32_and_Object_and_Int32__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Int32*)HashTableMappingReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32(type_ClassHashTableMappingReader_of_Object_and_Int32.create(),ArrayList_of_HashTableBin_of_Object_and_Int32__create_reader(((ClassGenericHashTable_of_Object_and_Int32*)((ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32*)context)->property_data)->property_bins)))));
}

static SlagObject* HashTableBase_of_String_and_Int32_and_Object_and_Int32__create_reader( SXCRef context )
{
  return ((AspectReader_of_Int32*)CoerceReader_of_Int32__init__Reader_of_Int32(type_ClassCoerceReader_of_Int32.create(),((AspectReader_of_Int32*)HashTableValueReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32(type_ClassHashTableValueReader_of_Object_and_Int32.create(),ArrayList_of_HashTableBin_of_Object_and_Int32__create_reader(((ClassGenericHashTable_of_Object_and_Int32*)((ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_Int32_and_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_Int32_and_Object_and_Int32__type_name( SXCRef context )
{
  return str188.value;
}

void HashTable_of_String_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_Int32__type_name( SXCRef context )
{
  return str189.value;
}

static SlagObject* Array_of_String__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_String.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_String__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_String__type_name( SXCRef context )
{
  return str66.value;
}

static SlagObject* ArrayList_of_String__last( SXCRef context )
{
  return ((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-1)]));
}

static SlagInt32 ArrayList_of_String__index_of__String_Int32( SXCRef context, SXCRef local_0_value, SlagInt32 local_1_starting_index )
{
  SlagInt32 local_2_i;
  SlagInt32 local_3__last3059;

  local_2_i = local_1_starting_index;
  local_3__last3059 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  while ((local_2_i < local_3__last3059))
  {
    if (String__opEQ__String(((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_2_i])),local_0_value))
    {
      return local_2_i;
    }
    ++local_2_i;
  }
  return -1;
}

static SlagObject* ArrayList_of_String__add__Readable_of_String( SXCRef context, SXCRef local_0_source )
{
  SXCRef local_1__reader3020;
  SXCRef local_2_value;

  local_1__reader3020 = CallFn____Object(44,local_0_source);
  while (CallFn____Logical(14,local_1__reader3020))
  {
    local_2_value = CallFn____Object(45,local_1__reader3020);
    ArrayList_of_Object__add__Object(context,local_2_value);
  }
  return context;
}

static SlagObject* ArrayList_of_String__copy_from__Readable_of_String( SXCRef context, SXCRef local_0_source )
{
  ArrayList_of_Object__clear(context);
  ArrayList_of_String__add__Readable_of_String(context,local_0_source);
  return context;
}

static SlagObject* ArrayList_of_String__format__String_String_String( SXCRef context, SXCRef local_0_prefix, SXCRef local_1_prepeat, SXCRef local_2_suffix )
{
  SXCRef local_3_buffer;
  SXCRef local_4__reader3036;
  SXCRef local_5_n;

  local_3_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  StringBuilder__print__String(local_3_buffer,local_0_prefix);
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count != 0))
  {
    StringBuilder__print__String(local_3_buffer,((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[0])));
  }
  local_4__reader3036 = ArrayList_of_String__from__Int32(context,1);
  while (ArrayReader_of_String__has_another(local_4__reader3036))
  {
    local_5_n = ArrayReader_of_String__read(local_4__reader3036);
    StringBuilder__print__String(local_3_buffer,String__opADD__String(local_1_prepeat,local_5_n));
  }
  StringBuilder__print__String(local_3_buffer,local_2_suffix);
  return StringBuilder__to_String(local_3_buffer);
}

static SlagObject* ArrayList_of_String__format__String_String( SXCRef context, SXCRef local_0_str_format, SXCRef local_1_repeater_chars )
{
  SlagInt32 local_2_r1;
  SlagInt32 local_3_r2;
  SXCRef local_4_prefix;
  SXCRef local_5_suffix;
  SXCRef local_6_prepeat;

  local_2_r1 = 0;
  local_3_r2 = ((((SlagString*)local_0_str_format)->count)-1);
  while ((local_2_r1 < local_3_r2))
  {
    if ((String__index_of__Char_Int32(local_1_repeater_chars,String__get__Int32(local_0_str_format,local_2_r1),0) >= 0))
    {
      goto end_4091;
    }
    ++local_2_r1;
    next_4091:;
  }
  end_4091:;
  while ((local_3_r2 > 0))
  {
    if ((String__index_of__Char_Int32(local_1_repeater_chars,String__get__Int32(local_0_str_format,local_3_r2),0) >= 0))
    {
      goto end_4095;
    }
    --local_3_r2;
    next_4095:;
  }
  end_4095:;
  if ((((SlagInt32)String__get__Int32(local_0_str_format,(local_2_r1-1))) != 36))
  {
    SLAG_THROW( InvalidOperandError__init__String(type_ClassInvalidOperandError.create(),str65.value) );
  }
  if ((((SlagInt32)String__get__Int32(local_0_str_format,(local_3_r2-1))) != 36))
  {
    SLAG_THROW( InvalidOperandError__init__String(type_ClassInvalidOperandError.create(),str65.value) );
  }
  local_4_prefix = ((ClassString*)String__substring__Int32_Int32(local_0_str_format,0,((local_2_r1-1)-1)));
  local_5_suffix = String__substring__Int32(local_0_str_format,(local_3_r2+1));
  local_0_str_format = String__substring__Int32_Int32(local_0_str_format,(local_2_r1+1),(local_3_r2-1));
  local_6_prepeat = String__excluding_rightmost__Int32(local_0_str_format,1);
  return ArrayList_of_String__format__String_String_String(context,local_4_prefix,local_6_prepeat,local_5_suffix);
}

static SlagObject* ArrayList_of_String__init( SXCRef context )
{
  ArrayList_of_String__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_String__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_String*)context)->property_data), type_ClassArray_of_String.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_String__create_reader( SXCRef context )
{
  return ArrayReader_of_String__init__Collection_of_String_Array_of_String_Int32_Int32(type_ClassArrayReader_of_String.create(),context,((ClassArrayList_of_String*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagObject* ArrayList_of_String__from__Int32( SXCRef context, SlagInt32 local_0_starting_index )
{
  return ArrayReader_of_String__init__Collection_of_String_Array_of_String_Int32_Int32(type_ClassArrayReader_of_String.create(),context,((ClassArrayList_of_String*)context)->property_data,local_0_starting_index,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-local_0_starting_index));
}

static SlagInt32 ArrayList_of_String__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_String__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_String__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

static SlagObject* ArrayList_of_String__get__Int32( SXCRef context, SlagInt32 local_0_index )
{
  return ((ClassString*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_0_index]);
}

SlagObject* ArrayList_of_String__add__String( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_String*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_String__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_String__init__Int32(type_ClassArrayList_of_String.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_String*)local_0_dup)->property_data,((ClassArrayList_of_String*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_String*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_String__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

static SlagObject* ArrayList_of_String__join__String( SXCRef context, SXCRef local_0_joiner )
{
  SXCRef local_1_buffer;
  SXCRef local_2__reader3051;
  SXCRef local_3_st;

  local_1_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[0]))));
  local_2__reader3051 = ArrayList_of_String__from__Int32(context,1);
  while (ArrayReader_of_String__has_another(local_2__reader3051))
  {
    local_3_st = ArrayReader_of_String__read(local_2__reader3051);
    StringBuilder__print__String(local_1_buffer,local_0_joiner);
    StringBuilder__print__String(local_1_buffer,local_3_st);
  }
  return StringBuilder__to_String(local_1_buffer);
}

static SlagObject* ArrayList_of_String__to_String( SXCRef context )
{
  return ArrayList_of_String__format__String_String(context,str63.value,str64.value);
}

void ArrayList_of_String__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_String__type_name( SXCRef context )
{
  return str10.value;
}

void TokenManager__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassTokenManager*)context)->property_eof = 0;
  ((ClassTokenManager*)context)->property_eol = 1;
  ((ClassTokenManager*)context)->property_defined_value = 2;
  ((ClassTokenManager*)context)->property_comment = 3;
  ((ClassTokenManager*)context)->property_identifier = 4;
  ((ClassTokenManager*)context)->property_placeholder_id = 5;
  ((ClassTokenManager*)context)->property_literal_string = 6;
  ((ClassTokenManager*)context)->property_literal_int = 7;
  ((ClassTokenManager*)context)->property_literal_hex_int = 8;
  ((ClassTokenManager*)context)->property_literal_char = 9;
  ((ClassTokenManager*)context)->property_literal_real = 10;
  ((ClassTokenManager*)context)->property_literal_logical = 11;
  ((ClassTokenManager*)context)->property_literal_null = 12;
  ((ClassTokenManager*)context)->property_symbol_open_template = 13;
  ((ClassTokenManager*)context)->property_symbol_close_template = 14;
  ((ClassTokenManager*)context)->property_symbol_dimension = 15;
  ((ClassTokenManager*)context)->property_symbol_defined = 16;
  ((ClassTokenManager*)context)->property_symbol_deferred = 17;
  ((ClassTokenManager*)context)->property_symbol_singleton = 18;
  ((ClassTokenManager*)context)->property_symbol_runtime = 19;
  ((ClassTokenManager*)context)->property_symbol_class = 20;
  ((ClassTokenManager*)context)->property_symbol_aspect = 21;
  ((ClassTokenManager*)context)->property_symbol_enum = 22;
  ((ClassTokenManager*)context)->property_symbol_augment = 23;
  ((ClassTokenManager*)context)->property_symbol_compound = 24;
  ((ClassTokenManager*)context)->property_symbol_with = 25;
  ((ClassTokenManager*)context)->property_symbol_endclass = 26;
  ((ClassTokenManager*)context)->property_symbol_endaspect = 27;
  ((ClassTokenManager*)context)->property_symbol_endenum = 28;
  ((ClassTokenManager*)context)->property_symbol_endaugment = 29;
  ((ClassTokenManager*)context)->property_symbol_endwith = 30;
  ((ClassTokenManager*)context)->property_symbol_methods = 31;
  ((ClassTokenManager*)context)->property_symbol_properties = 32;
  ((ClassTokenManager*)context)->property_symbol_class_methods = 33;
  ((ClassTokenManager*)context)->property_symbol_class_properties = 34;
  ((ClassTokenManager*)context)->property_symbol_categories = 35;
  ((ClassTokenManager*)context)->property_symbol_enumerate = 36;
  ((ClassTokenManager*)context)->property_symbol_singletons = 37;
  ((ClassTokenManager*)context)->property_symbol_open_bracket = 38;
  ((ClassTokenManager*)context)->property_symbol_close_bracket = 39;
  ((ClassTokenManager*)context)->property_symbol_underlying = 40;
  ((ClassTokenManager*)context)->property_symbol_overlaying = 41;
  ((ClassTokenManager*)context)->property_symbol_public = 42;
  ((ClassTokenManager*)context)->property_symbol_private = 43;
  ((ClassTokenManager*)context)->property_symbol_readonly = 44;
  ((ClassTokenManager*)context)->property_symbol_requisite = 45;
  ((ClassTokenManager*)context)->property_symbol_propagated = 46;
  ((ClassTokenManager*)context)->property_symbol_abstract = 47;
  ((ClassTokenManager*)context)->property_symbol_generic = 48;
  ((ClassTokenManager*)context)->property_symbol_native = 49;
  ((ClassTokenManager*)context)->property_symbol_method = 50;
  ((ClassTokenManager*)context)->property_symbol_local = 51;
  ((ClassTokenManager*)context)->property_symbol_scope = 52;
  ((ClassTokenManager*)context)->property_symbol_if = 53;
  ((ClassTokenManager*)context)->property_symbol_elseif = 54;
  ((ClassTokenManager*)context)->property_symbol_else = 55;
  ((ClassTokenManager*)context)->property_symbol_endif = 56;
  ((ClassTokenManager*)context)->property_symbol_which = 57;
  ((ClassTokenManager*)context)->property_symbol_whichis = 58;
  ((ClassTokenManager*)context)->property_symbol_case = 59;
  ((ClassTokenManager*)context)->property_symbol_casenext = 60;
  ((ClassTokenManager*)context)->property_symbol_others = 61;
  ((ClassTokenManager*)context)->property_symbol_endwhich = 62;
  ((ClassTokenManager*)context)->property_symbol_endwhichis = 63;
  ((ClassTokenManager*)context)->property_symbol_contingent = 64;
  ((ClassTokenManager*)context)->property_symbol_satisfied = 65;
  ((ClassTokenManager*)context)->property_symbol_unsatisfied = 66;
  ((ClassTokenManager*)context)->property_symbol_endcontingent = 67;
  ((ClassTokenManager*)context)->property_symbol_necessary = 68;
  ((ClassTokenManager*)context)->property_symbol_sufficient = 69;
  ((ClassTokenManager*)context)->property_symbol_block = 70;
  ((ClassTokenManager*)context)->property_symbol_endblock = 71;
  ((ClassTokenManager*)context)->property_symbol_try = 72;
  ((ClassTokenManager*)context)->property_symbol_catch = 73;
  ((ClassTokenManager*)context)->property_symbol_endtry = 74;
  ((ClassTokenManager*)context)->property_symbol_throw = 75;
  ((ClassTokenManager*)context)->property_symbol_loop = 76;
  ((ClassTokenManager*)context)->property_symbol_endloop = 77;
  ((ClassTokenManager*)context)->property_symbol_while = 78;
  ((ClassTokenManager*)context)->property_symbol_endwhile = 79;
  ((ClassTokenManager*)context)->property_symbol_foreach = 80;
  ((ClassTokenManager*)context)->property_symbol_in = 81;
  ((ClassTokenManager*)context)->property_symbol_of = 82;
  ((ClassTokenManager*)context)->property_symbol_endforeach = 83;
  ((ClassTokenManager*)context)->property_symbol_escapeif = 84;
  ((ClassTokenManager*)context)->property_symbol_escapewhich = 85;
  ((ClassTokenManager*)context)->property_symbol_escapewhichis = 86;
  ((ClassTokenManager*)context)->property_symbol_escapecontingent = 87;
  ((ClassTokenManager*)context)->property_symbol_escapeblock = 88;
  ((ClassTokenManager*)context)->property_symbol_escapetry = 89;
  ((ClassTokenManager*)context)->property_symbol_escapeloop = 90;
  ((ClassTokenManager*)context)->property_symbol_escapewhile = 91;
  ((ClassTokenManager*)context)->property_symbol_escapeforeach = 92;
  ((ClassTokenManager*)context)->property_symbol_nextiteration = 93;
  ((ClassTokenManager*)context)->property_symbol_removecurrent = 94;
  ((ClassTokenManager*)context)->property_symbol_increment = 95;
  ((ClassTokenManager*)context)->property_symbol_decrement = 96;
  ((ClassTokenManager*)context)->property_symbol_assign = 97;
  ((ClassTokenManager*)context)->property_symbol_bitwise_xor_with_assign = 98;
  ((ClassTokenManager*)context)->property_symbol_bitwise_or_with_assign = 99;
  ((ClassTokenManager*)context)->property_symbol_bitwise_and_with_assign = 100;
  ((ClassTokenManager*)context)->property_symbol_add_with_assign = 101;
  ((ClassTokenManager*)context)->property_symbol_subtract_with_assign = 102;
  ((ClassTokenManager*)context)->property_symbol_multiply_with_assign = 103;
  ((ClassTokenManager*)context)->property_symbol_divide_with_assign = 104;
  ((ClassTokenManager*)context)->property_symbol_mod_with_assign = 105;
  ((ClassTokenManager*)context)->property_symbol_power_with_assign = 106;
  ((ClassTokenManager*)context)->property_symbol_member_with_assign = 107;
  ((ClassTokenManager*)context)->property_symbol_insert_underlying = 108;
  ((ClassTokenManager*)context)->property_symbol_duplicate = 109;
  ((ClassTokenManager*)context)->property_symbol_breakpoint = 110;
  ((ClassTokenManager*)context)->property_symbol_noaction = 111;
  ((ClassTokenManager*)context)->property_symbol_return = 112;
  ((ClassTokenManager*)context)->property_symbol_upto = 113;
  ((ClassTokenManager*)context)->property_symbol_uptolessthan = 114;
  ((ClassTokenManager*)context)->property_symbol_downto = 115;
  ((ClassTokenManager*)context)->property_symbol_downtogreaterthan = 116;
  ((ClassTokenManager*)context)->property_symbol_step = 117;
  ((ClassTokenManager*)context)->property_symbol_logical_xor = 118;
  ((ClassTokenManager*)context)->property_symbol_logical_or = 119;
  ((ClassTokenManager*)context)->property_symbol_logical_and = 120;
  ((ClassTokenManager*)context)->property_symbol_instanceof = 121;
  ((ClassTokenManager*)context)->property_symbol_notinstanceof = 122;
  ((ClassTokenManager*)context)->property_symbol_as = 123;
  ((ClassTokenManager*)context)->property_symbol_coerce_as = 124;
  ((ClassTokenManager*)context)->property_symbol_is = 125;
  ((ClassTokenManager*)context)->property_symbol_isnot = 126;
  ((ClassTokenManager*)context)->property_symbol_compare = 127;
  ((ClassTokenManager*)context)->property_symbol_eq = 128;
  ((ClassTokenManager*)context)->property_symbol_ne = 129;
  ((ClassTokenManager*)context)->property_symbol_le = 130;
  ((ClassTokenManager*)context)->property_symbol_ge = 131;
  ((ClassTokenManager*)context)->property_symbol_lt = 132;
  ((ClassTokenManager*)context)->property_symbol_gt = 133;
  ((ClassTokenManager*)context)->property_symbol_bitwise_xor = 134;
  ((ClassTokenManager*)context)->property_symbol_bitwise_or = 135;
  ((ClassTokenManager*)context)->property_symbol_ampersand = 136;
  ((ClassTokenManager*)context)->property_symbol_plus = 137;
  ((ClassTokenManager*)context)->property_symbol_minus = 138;
  ((ClassTokenManager*)context)->property_symbol_times = 139;
  ((ClassTokenManager*)context)->property_symbol_divide = 140;
  ((ClassTokenManager*)context)->property_symbol_mod = 141;
  ((ClassTokenManager*)context)->property_symbol_power = 142;
  ((ClassTokenManager*)context)->property_symbol_bitwise_not = 143;
  ((ClassTokenManager*)context)->property_symbol_logical_not = 144;
  ((ClassTokenManager*)context)->property_symbol_logicalize = 145;
  ((ClassTokenManager*)context)->property_symbol_comma = 146;
  ((ClassTokenManager*)context)->property_symbol_colon = 147;
  ((ClassTokenManager*)context)->property_symbol_semicolon = 148;
  ((ClassTokenManager*)context)->property_symbol_member_access = 149;
  ((ClassTokenManager*)context)->property_symbol_open_paren = 150;
  ((ClassTokenManager*)context)->property_symbol_close_paren = 151;
  ((ClassTokenManager*)context)->property_symbol_open_brace = 152;
  ((ClassTokenManager*)context)->property_symbol_close_brace = 153;
  ((ClassTokenManager*)context)->property_symbol_close_comment = 154;
  ((ClassTokenManager*)context)->property_symbol_framework = 155;
  ((ClassTokenManager*)context)->property_symbol_endframework = 156;
  ((ClassTokenManager*)context)->property_symbol_useframework = 157;
  ((ClassTokenManager*)context)->property_first_type_def = ((ClassTokenManager*)context)->property_symbol_class;
  ((ClassTokenManager*)context)->property_last_type_def = ((ClassTokenManager*)context)->property_symbol_compound;
  ((ClassTokenManager*)context)->property_first_non_statement_start_symbol = ((ClassTokenManager*)context)->property_symbol_endclass;
  ((ClassTokenManager*)context)->property_last_non_statement_start_symbol = ((ClassTokenManager*)context)->property_symbol_singletons;
  sxc_write_ref( &(((ClassTokenManager*)context)->property_filenames), HashTableBase_of_String_and_Int32_and_Object_and_Int32__init(type_ClassHashTable_of_String_and_Int32.create()) );
  sxc_write_ref( &(((ClassTokenManager*)context)->property_filename_list), ArrayList_of_String__init(type_ClassArrayList_of_String.create()) );
}

SlagObject* TokenManager__type_name( SXCRef context )
{
  return str190.value;
}

static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_HashTableBin_of_Object_and_Int32__init__Int32(type_ClassArrayList_of_HashTableBin_of_Object_and_Int32.create(),ArrayReader_of_HashTableBin_of_Object_and_Int32__remaining(context));
  while (ArrayReader_of_HashTableBin_of_Object_and_Int32__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_HashTableBin_of_Object_and_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Int32__to_String( SXCRef context )
{
  return ArrayList_of_HashTableBin_of_Object_and_Int32__to_String(ArrayReader_of_HashTableBin_of_Object_and_Int32__to_List(context));
}

static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Int32__init__Collection_of_HashTableBin_of_Object_and_Int32_Array_of_HashTableBin_of_Object_and_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_5035, SXCRef local_1_data_5034, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_collection), local_0_collection_5035 );
  sxc_write_ref( &(((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_data), local_1_data_5034 );
  ((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_collection);
  }
  ((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_collection)))
  {
    ((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_collection);
  }
  ((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Int32__create_duplicate( SXCRef context )
{
  return ArrayReader_of_HashTableBin_of_Object_and_Int32__init__Collection_of_HashTableBin_of_Object_and_Int32_Array_of_HashTableBin_of_Object_and_Int32_Int32_Int32(type_ClassArrayReader_of_HashTableBin_of_Object_and_Int32.create(),((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_collection,((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_data,((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_counter,(((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_last_exclusive-((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_counter));
}

static SlagLogical ArrayReader_of_HashTableBin_of_Object_and_Int32__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_counter < ((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_HashTableBin_of_Object_and_Int32__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_last_exclusive-((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_counter);
}

static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Int32__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassHashTableBin_of_Object_and_Int32**)(((SlagArray*)((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_data)->data))[((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_counter];
  ++(((ClassArrayReader_of_HashTableBin_of_Object_and_Int32*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_HashTableBin_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Int32__type_name( SXCRef context )
{
  return str186.value;
}

static SlagObject* CmdTerm__resolve( SXCRef context )
{
  return context;
}

static SlagObject* CmdTerm__finalize_calls( SXCRef context )
{
  return context;
}

static void CmdTerm__finalize_structure_info( SXCRef context )
{
}

static void CmdTerm__group_dynamic_methods( SXCRef context )
{
}

static SlagObject* CmdTerm__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  return context;
}

void CmdTerm__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdTerm__type_name( SXCRef context )
{
  return str685.value;
}

static SlagObject* CmdThisReference__init__Token_TypeInfo( SXCRef context, SXCRef local_0_t_8875, SXCRef local_1_of_type_8874 )
{
  sxc_write_ref( &(((ClassCmdThisReference*)context)->property_t), local_0_t_8875 );
  sxc_write_ref( &(((ClassCmdThisReference*)context)->property_of_type), local_1_of_type_8874 );
  return context;
}

static SlagObject* CmdThisReference__create_duplicate( SXCRef context )
{
  return CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),((ClassCmdThisReference*)context)->property_t,((ClassCmdThisReference*)context)->property_of_type);
}

static SlagObject* CmdThisReference__type( SXCRef context )
{
  return ((ClassCmdThisReference*)context)->property_of_type;
}

SlagObject* CmdThisReference__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CmdThisReference__type_name(context)),str61.value),((ClassTypeInfo*)((ClassCmdThisReference*)context)->property_of_type)->property_name),str62.value));
}

static SlagObject* CmdThisReference__resolve( SXCRef context )
{
  return context;
}

static void CmdThisReference__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_context_read_count = (((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_context_read_count+1);
}

static SlagObject* CmdThisReference__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  if (!TypeInfo__instance_of__TypeInfo(CallFn____Object(0,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_arg_list))->property_data)->data))[0])))),((ClassCmdThisReference*)context)->property_of_type))
  {
    return CmdCoerceAs__init__Token_Cmd_TypeInfo(type_ClassCmdCoerceAs.create(),((ClassCmdThisReference*)context)->property_t,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_arg_list))->property_data)->data))[0]))),((ClassCmdThisReference*)context)->property_of_type);
  }
  else
  {
    return ((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_arg_list))->property_data)->data))[0])));
  }
}

static void CmdThisReference__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_this_reference)->property_ordinal);
}

static SlagObject* CmdThisReference__to_cpp( SXCRef context )
{
  return str1574.value;
}

static SlagObject* CmdThisReference__to_cs( SXCRef context )
{
  return str999.value;
}

static SlagObject* CmdThisReference__to_java( SXCRef context )
{
  return str999.value;
}

void CmdThisReference__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdThisReference__type_name( SXCRef context )
{
  return str1050.value;
}

static SlagObject* CmdCoerceAs__init__Token_Cmd_TypeInfo( SXCRef context, SXCRef local_0_t_7977, SXCRef local_1_operand_7976, SXCRef local_2_as_type_7975 )
{
  sxc_write_ref( &(((ClassCmdCoerceAs*)context)->property_t), local_0_t_7977 );
  sxc_write_ref( &(((ClassCmdCoerceAs*)context)->property_operand), local_1_operand_7976 );
  sxc_write_ref( &(((ClassCmdCoerceAs*)context)->property_as_type), local_2_as_type_7975 );
  return context;
}

static SlagObject* CmdCoerceAs__create_duplicate( SXCRef context )
{
  return CmdCoerceAs__init__Token_Cmd_TypeInfo(type_ClassCmdCoerceAs.create(),((ClassCmdCoerceAs*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCoerceAs*)context)->property_operand),((ClassCmdCoerceAs*)context)->property_as_type);
}

static SlagObject* CmdCoerceAs__type( SXCRef context )
{
  return ((ClassCmdCoerceAs*)context)->property_as_type;
}

SlagObject* CmdCoerceAs__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CmdCoerceAs__type_name(context)),str61.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdCoerceAs*)context)->property_operand)),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdCoerceAs*)context)->property_as_type)),str62.value));
}

static SlagObject* CmdCoerceAs__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdCoerceAs*)context)->property_operand), CallFn____Object(16,((ClassCmdCoerceAs*)context)->property_operand) );
  TypeInfo__resolve(((ClassCmdCoerceAs*)context)->property_as_type);
  return context;
}

static SlagObject* CmdCoerceAs__finalize_calls( SXCRef context )
{
  SXCRef local_0_coerce_operand;

  local_0_coerce_operand = sxc_as(((ClassCmdCoerceAs*)context)->property_operand,&type_ClassCmdCoerceAs);
  if ((local_0_coerce_operand != NULL))
  {
    sxc_write_ref( &(((ClassCmdCoerceAs*)context)->property_operand), ((ClassCmdCoerceAs*)local_0_coerce_operand)->property_operand );
  }
  sxc_write_ref( &(((ClassCmdCoerceAs*)context)->property_operand), CallFn____Object(42,((ClassCmdCoerceAs*)context)->property_operand) );
  return context;
}

static void CmdCoerceAs__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_coerce_as)->property_ordinal);
  CallFn__(7,((ClassCmdCoerceAs*)context)->property_operand);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassTypeInfo*)((ClassCmdCoerceAs*)context)->property_as_type)->property_index);
}

static SlagObject* CmdCoerceAs__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(12,((ClassCmdCoerceAs*)context)->property_operand);
}

static SlagObject* CmdCoerceAs__to_cpp( SXCRef context )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdCoerceAs*)context)->property_as_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassCmdCoerceAs*)context)->property_as_type)),str1691.value),CallFn____Object(15,((ClassCmdCoerceAs*)context)->property_operand)),str62.value));
  }
  return CallFn____Object(15,((ClassCmdCoerceAs*)context)->property_operand);
}

static SlagObject* CmdCoerceAs__statement_to_cs( SXCRef context )
{
  return CallFn____Object(33,((ClassCmdCoerceAs*)context)->property_operand);
}

static SlagObject* CmdCoerceAs__to_cs( SXCRef context )
{
  if ((((ClassCmdCoerceAs*)context)->property_as_type == CallFn____Object(0,((ClassCmdCoerceAs*)context)->property_operand)))
  {
    return CallFn____Object(35,((ClassCmdCoerceAs*)context)->property_operand);
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassCmdCoerceAs*)context)->property_as_type)),str62.value),CallFn____Object(35,((ClassCmdCoerceAs*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCoerceAs__statement_to_java( SXCRef context )
{
  return CallFn____Object(6,((ClassCmdCoerceAs*)context)->property_operand);
}

static SlagObject* CmdCoerceAs__to_java( SXCRef context )
{
  if ((((ClassCmdCoerceAs*)context)->property_as_type == CallFn____Object(0,((ClassCmdCoerceAs*)context)->property_operand)))
  {
    return CallFn____Object(41,((ClassCmdCoerceAs*)context)->property_operand);
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassCmdCoerceAs*)context)->property_as_type)),str62.value),CallFn____Object(41,((ClassCmdCoerceAs*)context)->property_operand)),str62.value));
}

void CmdCoerceAs__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCoerceAs__type_name( SXCRef context )
{
  return str892.value;
}

static SlagObject* Array_of_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Int32.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Int32__type_name( SXCRef context )
{
  return str157.value;
}

static SlagObject* ArrayReader_of_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),ArrayReader_of_Int32__remaining(context));
  while (ArrayReader_of_Int32__has_another(context))
  {
    ArrayList_of_Int32__add__Int32(local_0_result_list,ArrayReader_of_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Int32__to_String(ArrayReader_of_Int32__to_List(context));
}

static SlagObject* ArrayReader_of_Int32__init__Collection_of_Int32_Array_of_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_6699, SXCRef local_1_data_6698, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_Int32*)context)->property_collection), local_0_collection_6699 );
  sxc_write_ref( &(((ClassArrayReader_of_Int32*)context)->property_data), local_1_data_6698 );
  ((ClassArrayReader_of_Int32*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_Int32*)context)->property_collection);
  }
  ((ClassArrayReader_of_Int32*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_Int32*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_Int32*)context)->property_collection)))
  {
    ((ClassArrayReader_of_Int32*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_Int32*)context)->property_collection);
  }
  ((ClassArrayReader_of_Int32*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_Int32*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_Int32__create_duplicate( SXCRef context )
{
  return ArrayReader_of_Int32__init__Collection_of_Int32_Array_of_Int32_Int32_Int32(type_ClassArrayReader_of_Int32.create(),((ClassArrayReader_of_Int32*)context)->property_collection,((ClassArrayReader_of_Int32*)context)->property_data,((ClassArrayReader_of_Int32*)context)->property_counter,(((ClassArrayReader_of_Int32*)context)->property_last_exclusive-((ClassArrayReader_of_Int32*)context)->property_counter));
}

static SlagLogical ArrayReader_of_Int32__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_Int32*)context)->property_counter < ((ClassArrayReader_of_Int32*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_Int32*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_Int32*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_Int32__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_Int32*)context)->property_last_exclusive-((ClassArrayReader_of_Int32*)context)->property_counter);
}

static SlagInt32 ArrayReader_of_Int32__read( SXCRef context )
{
  SlagInt32 local_0_result;

  local_0_result = ((SlagInt32*)(((SlagArray*)((ClassArrayReader_of_Int32*)context)->property_data)->data))[((ClassArrayReader_of_Int32*)context)->property_counter];
  ++(((ClassArrayReader_of_Int32*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_Int32__type_name( SXCRef context )
{
  return str463.value;
}

static SlagObject* Array_of_HashTableBin_of_Int32_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_HashTableBin_of_Int32_and_Object.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_HashTableBin_of_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_HashTableBin_of_Int32_and_Object__type_name( SXCRef context )
{
  return str204.value;
}

void ParseReaderMarkManager__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ParseReaderMarkManager__type_name( SXCRef context )
{
  return str224.value;
}

static SlagInt32 HashTableValueReader_of_Int32_and_Object__available( SXCRef context )
{
  if ((((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_entries != NULL))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* HashTableValueReader_of_Int32_and_Object__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Object__init__Int32(type_ClassArrayList_of_Object.create(),HashTableValueReader_of_Int32_and_Object__available(context));
  while ((((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_entries != NULL))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,HashTableValueReader_of_Int32_and_Object__read(context));
  }
  return local_0_result_list;
}

SlagObject* HashTableValueReader_of_Int32_and_Object__to_String( SXCRef context )
{
  return ArrayList_of_Object__to_String(HashTableValueReader_of_Int32_and_Object__to_List(context));
}

static SlagObject* HashTableValueReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object( SXCRef context, SXCRef local_0_bins_7056 )
{
  sxc_write_ref( &(((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_bins), local_0_bins_7056 );
  if (CallFn____Logical(14,((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_bins))
  {
    sxc_write_ref( &(((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_entries), ArrayList_of_Mapping_of_Int32_and_Object__create_reader(((ClassHashTableBin_of_Int32_and_Object*)CallFn____Object(45,((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_bins))->property_entries) );
  }
  HashTableValueReader_of_Int32_and_Object__prep_next(context);
  return context;
}

static void HashTableValueReader_of_Int32_and_Object__prep_next( SXCRef context )
{
  if ((((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_entries == NULL))
  {
    return;
  }
  while (!CallFn____Logical(14,((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_entries))
  {
    if (CallFn____Logical(14,((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_bins))
    {
      sxc_write_ref( &(((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_entries), ArrayList_of_Mapping_of_Int32_and_Object__create_reader(((ClassHashTableBin_of_Int32_and_Object*)CallFn____Object(45,((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_bins))->property_entries) );
    }
    else
    {
      sxc_write_ref( &(((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_entries), NULL );
      return;
    }
  }
}

static SlagLogical HashTableValueReader_of_Int32_and_Object__has_another( SXCRef context )
{
  return (((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_entries != NULL);
}

static SlagObject* HashTableValueReader_of_Int32_and_Object__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassMapping_of_Int32_and_Object*)CallFn____Object(45,((ClassHashTableValueReader_of_Int32_and_Object*)context)->property_entries))->property_value;
  HashTableValueReader_of_Int32_and_Object__prep_next(context);
  return local_0_result;
}

void HashTableValueReader_of_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableValueReader_of_Int32_and_Object__type_name( SXCRef context )
{
  return str617.value;
}

static SlagReal64 Math__floor__Real64( SXCRef context, SlagReal64 local_0_n )
{
  return floor(local_0_n);
}

static SlagReal64 Math__fractional_part__Real64( SXCRef context, SlagReal64 local_0_n )
{
  return (local_0_n-floor(local_0_n));
}

static SlagInt32 Math__max__Int32_Int32( SXCRef context, SlagInt32 local_0_a, SlagInt32 local_1_b )
{
  if ((local_0_a > local_1_b))
  {
    return local_0_a;
  }
  else
  {
    return local_1_b;
  }
}

static SlagLogical Math__is_NaN__Real64( SXCRef context, SlagReal64 local_0_n )
{
  SlagLogical local_1_a;
  SlagLogical local_2_b;

  local_1_a = ((sxc_real64_as_int64(local_0_n)&9218868437227405312LL) == 9218868437227405312LL);
  local_2_b = ((sxc_real64_as_int64(local_0_n)&4503599627370495LL) != 0LL);
  return (((sxc_real64_as_int64(local_0_n)&9218868437227405312LL) == 9218868437227405312LL) && ((sxc_real64_as_int64(local_0_n)&4503599627370495LL) != 0LL));
}

static SlagInt32 Math__unique_Int32( SXCRef context )
{
  ++(((ClassMath*)context)->property_next_unique_Int32);
  return (((ClassMath*)context)->property_next_unique_Int32-1);
}

void Math__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassMath*)context)->property_e = sxc_int64_as_real64(0x4005bf0a8b145769LL);
  ((ClassMath*)context)->property_next_unique_Int32 = 1;
}

SlagObject* Math__type_name( SXCRef context )
{
  return str5.value;
}

static SlagObject* Array_of_CMD__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_CMD.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_CMD__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_CMD__type_name( SXCRef context )
{
  return str1386.value;
}

SlagObject* ArrayList_of_CMD__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count10253;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count10253 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count10253))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassCMD*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_CMD__init( SXCRef context )
{
  ArrayList_of_CMD__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_CMD__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_CMD*)context)->property_data), type_ClassArray_of_CMD.create(local_0_initial_capacity) );
  return context;
}

void ArrayList_of_CMD__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_CMD__add__CMD( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_CMD*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_CMD__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_CMD__init__Int32(type_ClassArrayList_of_CMD.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_CMD*)local_0_dup)->property_data,((ClassArrayList_of_CMD*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_CMD*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_CMD__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_CMD__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_CMD__type_name( SXCRef context )
{
  return str1387.value;
}

SlagObject* HashTableBase_of_String_and_CMD_and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_CMD_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_CMD_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_CMD_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_CMD_and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_CMD_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_CMD.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_CMD_and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_CMD_and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_CMD*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_CMD_and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_CMD_and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_CMD_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_CMD_and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_CMD_and_Object_and_Object__type_name( SXCRef context )
{
  return str1388.value;
}

void HashTable_of_String_and_CMD__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_CMD__type_name( SXCRef context )
{
  return str1389.value;
}

SlagObject* CMD__to_String( SXCRef context )
{
  return ((ClassString*)((ClassCMD*)context)->property_name);
}

static SlagInt32 CMD__opCMP__CMD( SXCRef context, SXCRef local_0_other )
{
  SlagInt32 local_1_a;
  SlagInt32 local_2_b;

  local_1_a = ((ClassCMD*)context)->property_ordinal;
  local_2_b = ((ClassCMD*)local_0_other)->property_ordinal;
  if ((local_1_a < local_2_b))
  {
    return -1;
  }
  if ((local_1_a == local_2_b))
  {
    return 0;
  }
  return 1;
}

static SlagInt32 CMD__hash_code( SXCRef context )
{
  return ((ClassCMD*)context)->property_ordinal;
}

SlagObject* CMD__init( SXCRef context )
{
  return context;
}

void CMD__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CMD__type_name( SXCRef context )
{
  return str1487.value;
}

static SlagObject* Enum_of_CMD__prep__CMD_String( SXCRef context, SXCRef local_0_category, SXCRef local_1_name )
{
  if ((((ClassEnum_of_CMD*)context)->property_by_ordinal == NULL))
  {
    sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_by_ordinal), ((ClassArrayList_of_CMD*)ArrayList_of_CMD__init__Int32(type_ClassArrayList_of_CMD.create(),0)) );
    sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_by_name), HashTableBase_of_String_and_CMD_and_Object_and_Object__init(type_ClassHashTable_of_String_and_CMD.create()) );
  }
  ((ClassCMD*)local_0_category)->property_ordinal = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassEnum_of_CMD*)context)->property_by_ordinal))->property_count;
  sxc_write_ref( &(((ClassCMD*)local_0_category)->property_name), local_1_name );
  GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_CMD*)((ClassEnum_of_CMD*)context)->property_by_name)->property_data,local_1_name,local_0_category);
  ArrayList_of_Object__add__Object(((ClassEnum_of_CMD*)context)->property_by_ordinal,local_0_category);
  return local_0_category;
}

void Enum_of_CMD__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_set_filename_and_line), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1385.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_set_line), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1390.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_inc_line), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1391.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_structure_id), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1392.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_return_value), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1393.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_return_nil), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1394.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_block), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1395.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_trycatch), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1396.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_throw), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1397.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_if), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1398.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_contingent), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1399.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_necessary), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1400.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_sufficient), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1401.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_while), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1402.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_loop), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1403.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_escape), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1404.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_next_iteration), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1405.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_breakpoint), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1406.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_literal_string), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1407.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_literal_int64), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1408.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_literal_int32), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1409.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_literal_char), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1410.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_literal_byte), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1411.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_literal_real64), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1412.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_literal_real32), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1413.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_literal_logical_true), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1414.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_literal_logical_false), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1415.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_literal_logical_void), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1416.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_literal_null), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1417.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_this_reference), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1418.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_singleton_reference), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1419.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_singleton_write), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1420.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_property_read), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1421.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_compound_property_read), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1422.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_local_var_read), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1423.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_property_write), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1424.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_local_var_write), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1425.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_static_call), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1426.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_dynamic_call), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1427.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_new_object), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1428.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_new_compound), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1429.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_array_create), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1430.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_array_get), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1431.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_array_set), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1432.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_narrowing_cast), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1433.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_widening_cast), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1434.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cast_to_int64), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1435.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cast_to_int32), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1436.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cast_to_char), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1437.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cast_to_byte), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1438.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cast_to_real64), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1439.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cast_to_real32), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1440.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cast_to_logical), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1441.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_as), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1442.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_coerce_as), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1443.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cmp_instance_of), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1444.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cmp_is), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1445.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cmp_is_not), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1446.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cmp_is_null), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1447.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cmp_is_not_null), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1448.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cmp_eq), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1449.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cmp_ne), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1450.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cmp_le), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1451.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cmp_lt), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1452.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cmp_gt), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1453.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_cmp_ge), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1454.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_not), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1455.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_negate), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1456.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_add), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1457.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_sub), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1458.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_mul), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1459.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_div), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1460.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_mod), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1461.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_exp), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1462.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_and), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1463.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_or), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1464.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_xor), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1465.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_lazy_and), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1466.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_lazy_or), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1467.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_left_shifted), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1468.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_right_shifted), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1469.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_right_xshifted), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1470.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_this_property_add_and_assign), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1471.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_this_property_sub_and_assign), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1472.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_this_property_mul_and_assign), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1473.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_this_property_div_and_assign), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1474.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_this_property_mod_and_assign), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1475.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_local_var_add_and_assign), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1476.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_local_var_sub_and_assign), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1477.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_local_var_mul_and_assign), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1478.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_local_var_div_and_assign), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1479.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_local_var_mod_and_assign), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1480.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_this_property_increment), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1481.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_this_property_decrement), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1482.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_local_var_increment), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1483.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_local_var_decrement), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1484.value) );
  sxc_write_ref( &(((ClassEnum_of_CMD*)context)->property_cmd_array_duplicate), Enum_of_CMD__prep__CMD_String(context,CMD__init(type_ClassCMD.create()),str1485.value) );
}

SlagObject* Enum_of_CMD__type_name( SXCRef context )
{
  return str1486.value;
}

void CmdManager__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassCmdManager*)context)->property_no_action), Cmd__init__Token(type_ClassCmd.create(),NULL) );
}

SlagObject* CmdManager__type_name( SXCRef context )
{
  return str529.value;
}

void DelegateType__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* DelegateType__type_name( SXCRef context )
{
  return str104.value;
}

void Delegate______init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Delegate______type_name( SXCRef context )
{
  return str105.value;
}

static SlagObject* SignalHandler__init__String_Int32( SXCRef context, SXCRef local_0_event_id_4278, SlagInt32 local_1_order_4277 )
{
  sxc_write_ref( &(((ClassSignalHandler*)context)->property_event_id), local_0_event_id_4278 );
  ((ClassSignalHandler*)context)->property_order = local_1_order_4277;
  if ((ReferenceTable_of_String_and_SignalHandler__get__String(((ClassSignalManager*)sxc_singletons[25])->property_signal_handlers,((ClassSignalHandler*)context)->property_event_id) != NULL))
  {
    sxc_write_ref( &(((ClassSignalHandler*)context)->property_next_handler), ReferenceTable_of_String_and_SignalHandler__get__String(((ClassSignalManager*)sxc_singletons[25])->property_signal_handlers,((ClassSignalHandler*)context)->property_event_id) );
  }
  ReferenceTable_of_String_and_SignalHandler__set__String_SignalHandler(((ClassSignalManager*)sxc_singletons[25])->property_signal_handlers,((ClassSignalHandler*)context)->property_event_id,context);
  return context;
}

static void SignalHandler__on__Signal( SXCRef context, SXCRef local_0_signal )
{
  if ((((ClassSignalHandler*)context)->property_listener != NULL))
  {
    if ((((AspectSignalListener*)WeakReference__object(((ClassWeak_of_SignalListener*)((ClassSignalHandler*)context)->property_listener)->property_weak_reference)) != NULL))
    {
      CallFn__Signal(37,((AspectSignalListener*)WeakReference__object(((ClassWeak_of_SignalListener*)((ClassSignalHandler*)context)->property_listener)->property_weak_reference)),local_0_signal);
    }
    else
    {
      sxc_write_ref( &(((ClassSignalHandler*)context)->property_listener), NULL );
    }
  }
  else if ((((ClassSignalHandler*)context)->property_callback != NULL))
  {
    SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__init__SignalHandler(type_ClassSpecializedDelegate_____of_SignalHandler_and_delegate_dummy.create(),((ClassSpecializedDelegate_____of_SignalHandler_and_delegate_dummy*)((ClassSpecializedDelegate_____of_SignalHandler_and_delegate_dummy*)((ClassSignalHandler*)context)->property_callback))->property_context);
  }
  else
  {
    Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str114.value),((ClassSignalHandler*)context)->property_event_id),str115.value)));
  }
}

static SlagObject* SignalHandler__handle__Signal( SXCRef context, SXCRef local_0_signal )
{
  SlagInt32 local_1_which_467;

  if ((((ClassSignalHandler*)context)->property_order == ((ClassSignalHandlerManager*)sxc_singletons[29])->property_pending_deactivate))
  {
    if ((((ClassSignalHandler*)context)->property_next_handler != NULL))
    {
      return SignalHandler__handle__Signal(((ClassSignalHandler*)context)->property_next_handler,local_0_signal);
    }
    else
    {
      return NULL;
    }
  }
  else
  {
    local_1_which_467 = ((ClassSignalHandler*)context)->property_order;
    if ((local_1_which_467 == ((ClassSignalHandlerManager*)sxc_singletons[29])->property_insert))
    {
      CallFn__Signal(37,context,local_0_signal);
      if ((((ClassSignalHandler*)context)->property_next_handler != NULL))
      {
        sxc_write_ref( &(((ClassSignalHandler*)context)->property_next_handler), SignalHandler__handle__Signal(((ClassSignalHandler*)context)->property_next_handler,local_0_signal) );
      }
    }
    else if ((local_1_which_467 == ((ClassSignalHandlerManager*)sxc_singletons[29])->property_append))
    {
      if ((((ClassSignalHandler*)context)->property_next_handler != NULL))
      {
        sxc_write_ref( &(((ClassSignalHandler*)context)->property_next_handler), SignalHandler__handle__Signal(((ClassSignalHandler*)context)->property_next_handler,local_0_signal) );
      }
      CallFn__Signal(37,context,local_0_signal);
    }
    else if ((local_1_which_467 == ((ClassSignalHandlerManager*)sxc_singletons[29])->property_exclusive))
    {
      CallFn__Signal(37,context,local_0_signal);
    }
    return context;
  }
}

void SignalHandler__delegate_dummy( SXCRef context )
{
  SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__init__SignalHandler(type_ClassSpecializedDelegate_____of_SignalHandler_and_delegate_dummy.create(),context);
}

void SignalHandler__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* SignalHandler__type_name( SXCRef context )
{
  return str107.value;
}

static void SpecializedSignalHandler_460__on__Signal( SXCRef context, SXCRef local_0_s )
{
  SXCRef local_1_main_object;

  local_1_main_object = ((ClassSignal*)local_0_s)->property_argument;
  CallFn__(32,local_1_main_object);
  CallFn__(34,local_1_main_object);
}

void SpecializedSignalHandler_460__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* SpecializedSignalHandler_460__type_name( SXCRef context )
{
  return str108.value;
}

static SlagObject* Array_of_ParamInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_ParamInfo.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_ParamInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_ParamInfo__type_name( SXCRef context )
{
  return str1368.value;
}

SlagObject* ArrayList_of_ParamInfo__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count10137;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count10137 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count10137))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassParamInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_ParamInfo__init( SXCRef context )
{
  ArrayList_of_ParamInfo__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_ParamInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_ParamInfo*)context)->property_data), type_ClassArray_of_ParamInfo.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_ParamInfo__create_reader( SXCRef context )
{
  return ArrayReader_of_ParamInfo__init__Collection_of_ParamInfo_Array_of_ParamInfo_Int32_Int32(type_ClassArrayReader_of_ParamInfo.create(),context,((ClassArrayList_of_ParamInfo*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_ParamInfo__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_ParamInfo__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_ParamInfo__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_ParamInfo__add__ParamInfo( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_ParamInfo*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_ParamInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_ParamInfo__init__Int32(type_ClassArrayList_of_ParamInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_ParamInfo*)local_0_dup)->property_data,((ClassArrayList_of_ParamInfo*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_ParamInfo*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_ParamInfo__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_ParamInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_ParamInfo__type_name( SXCRef context )
{
  return str1369.value;
}

static SlagObject* PropertyInfo__init__Token_TypeInfo_Qualifiers_TypeInfo_String_Cmd_Int32( SXCRef context, SXCRef local_0_t_6898, SXCRef local_1_type_context_6897, SXCRef local_2_qualifiers_6896, SXCRef local_3_type_6895, SXCRef local_4_name_6894, SXCRef local_5_initial_value_6893, SlagInt32 local_6_index_6892 )
{
  sxc_write_ref( &(((ClassPropertyInfo*)context)->property_t), local_0_t_6898 );
  sxc_write_ref( &(((ClassPropertyInfo*)context)->property_type_context), local_1_type_context_6897 );
  sxc_write_ref( &(((ClassPropertyInfo*)context)->property_qualifiers), local_2_qualifiers_6896 );
  sxc_write_ref( &(((ClassPropertyInfo*)context)->property_type), local_3_type_6895 );
  sxc_write_ref( &(((ClassPropertyInfo*)context)->property_name), local_4_name_6894 );
  sxc_write_ref( &(((ClassPropertyInfo*)context)->property_initial_value), local_5_initial_value_6893 );
  ((ClassPropertyInfo*)context)->property_index = local_6_index_6892;
  return context;
}

static SlagObject* PropertyInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = PropertyInfo__init__Token_TypeInfo_Qualifiers_TypeInfo_String_Cmd_Int32(type_ClassPropertyInfo.create(),((ClassPropertyInfo*)context)->property_t,((ClassPropertyInfo*)context)->property_type_context,((ClassPropertyInfo*)context)->property_qualifiers,((ClassPropertyInfo*)context)->property_type,((ClassPropertyInfo*)context)->property_name,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassPropertyInfo*)context)->property_initial_value),((ClassPropertyInfo*)context)->property_index);
  sxc_write_ref( &(((ClassPropertyInfo*)local_0_result)->property_doc_comment), ((ClassPropertyInfo*)context)->property_doc_comment );
  return local_0_result;
}

static SlagObject* PropertyInfo__x_name( SXCRef context )
{
  if ((((ClassPropertyInfo*)context)->property_x_name == NULL))
  {
    sxc_write_ref( &(((ClassPropertyInfo*)context)->property_x_name), String__opADD__String(str1300.value,String__x_compatible(((ClassPropertyInfo*)context)->property_name)) );
  }
  return ((ClassPropertyInfo*)context)->property_x_name;
}

void PropertyInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* PropertyInfo__type_name( SXCRef context )
{
  return str538.value;
}

static SlagObject* CmdStatementWithOperand__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdStatementWithOperand*)context)->property_operand), CallFn____Object(42,((ClassCmdStatementWithOperand*)context)->property_operand) );
  return context;
}

static void CmdStatementWithOperand__finalize_structure_info( SXCRef context )
{
  CallFn__(21,((ClassCmdStatementWithOperand*)context)->property_operand);
}

static void CmdStatementWithOperand__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdStatementWithOperand*)context)->property_operand);
}

static SlagObject* CmdStatementWithOperand__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdStatementWithOperand*)context)->property_operand), CallFn__CmdList__Object(1,((ClassCmdStatementWithOperand*)context)->property_operand,local_0_arg_list) );
  return context;
}

void CmdStatementWithOperand__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdStatementWithOperand__type_name( SXCRef context )
{
  return str804.value;
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__init__Token_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9531, SXCRef local_1_var_info_9530, SXCRef local_2_operand_9529 )
{
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign*)context)->property_t), local_0_t_9531 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign*)context)->property_var_info), local_1_var_info_9530 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign*)context)->property_operand), local_2_operand_9529 );
  return context;
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__create_duplicate( SXCRef context )
{
  return CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__init__Token_PropertyInfo_Cmd(type_ClassCmdThisPropertySubAndAssign.create(),((ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign*)context)->property_t,((ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign*)context)->property_operand));
}

SlagObject* CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign*)context)->property_var_info)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__resolve( SXCRef context )
{
  return context;
}

static void CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_this_property_sub_and_assign)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign*)context)->property_operand);
}

void CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__type_name( SXCRef context )
{
  return str1213.value;
}

static SlagObject* CmdThisPropertySubAndAssign__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassPropertyInfo*)((ClassCmdThisPropertySubAndAssign*)context)->property_var_info)->property_type_context)),str1730.value),PropertyInfo__x_name(((ClassCmdThisPropertySubAndAssign*)context)->property_var_info)),str1722.value),CallFn____Object(15,((ClassCmdThisPropertySubAndAssign*)context)->property_operand)));
}

static SlagObject* CmdThisPropertySubAndAssign__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdThisPropertySubAndAssign*)context)->property_var_info)),str1722.value),CallFn____Object(35,((ClassCmdThisPropertySubAndAssign*)context)->property_operand)));
}

static SlagObject* CmdThisPropertySubAndAssign__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdThisPropertySubAndAssign*)context)->property_var_info)),str1722.value),CallFn____Object(41,((ClassCmdThisPropertySubAndAssign*)context)->property_operand)));
}

void CmdThisPropertySubAndAssign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdThisPropertySubAndAssign__type_name( SXCRef context )
{
  return str1214.value;
}

static SlagInt32 CoerceReader_of_PropertyInfo__available( SXCRef context )
{
  if (CallFn____Logical(14,((ClassCoerceReader_of_PropertyInfo*)context)->property_src))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* CoerceReader_of_PropertyInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_PropertyInfo__init__Int32(type_ClassArrayList_of_PropertyInfo.create(),CoerceReader_of_PropertyInfo__available(context));
  while (CallFn____Logical(14,((ClassCoerceReader_of_PropertyInfo*)context)->property_src))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,((ClassPropertyInfo*)CallFn____Object(45,((ClassCoerceReader_of_PropertyInfo*)context)->property_src)));
  }
  return local_0_result_list;
}

SlagObject* CoerceReader_of_PropertyInfo__to_String( SXCRef context )
{
  return ArrayList_of_PropertyInfo__to_String(CoerceReader_of_PropertyInfo__to_List(context));
}

static SlagObject* CoerceReader_of_PropertyInfo__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_6971 )
{
  sxc_write_ref( &(((ClassCoerceReader_of_PropertyInfo*)context)->property_src), local_0_src_6971 );
  return context;
}

static SlagLogical CoerceReader_of_PropertyInfo__has_another( SXCRef context )
{
  return CallFn____Logical(14,((ClassCoerceReader_of_PropertyInfo*)context)->property_src);
}

static SlagObject* CoerceReader_of_PropertyInfo__read( SXCRef context )
{
  return ((ClassPropertyInfo*)CallFn____Object(45,((ClassCoerceReader_of_PropertyInfo*)context)->property_src));
}

void CoerceReader_of_PropertyInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CoerceReader_of_PropertyInfo__type_name( SXCRef context )
{
  return str576.value;
}

SlagObject* HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_MethodGroup.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_MethodGroup*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__type_name( SXCRef context )
{
  return str558.value;
}

static SlagObject* Array_of_CmdCatch__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_CmdCatch.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_CmdCatch__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_CmdCatch__type_name( SXCRef context )
{
  return str767.value;
}

SlagObject* ArrayList_of_CmdCatch__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count7591;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count7591 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count7591))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassCmdCatch*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_CmdCatch__init( SXCRef context )
{
  ArrayList_of_CmdCatch__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_CmdCatch__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_CmdCatch*)context)->property_data), type_ClassArray_of_CmdCatch.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_CmdCatch__create_reader( SXCRef context )
{
  return ArrayReader_of_CmdCatch__init__Collection_of_CmdCatch_Array_of_CmdCatch_Int32_Int32(type_ClassArrayReader_of_CmdCatch.create(),context,((ClassArrayList_of_CmdCatch*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagObject* ArrayList_of_CmdCatch__from__Int32( SXCRef context, SlagInt32 local_0_starting_index )
{
  return ArrayReader_of_CmdCatch__init__Collection_of_CmdCatch_Array_of_CmdCatch_Int32_Int32(type_ClassArrayReader_of_CmdCatch.create(),context,((ClassArrayList_of_CmdCatch*)context)->property_data,local_0_starting_index,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-local_0_starting_index));
}

static SlagInt32 ArrayList_of_CmdCatch__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_CmdCatch__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_CmdCatch__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_CmdCatch__add__CmdCatch( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_CmdCatch*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_CmdCatch__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_CmdCatch__init__Int32(type_ClassArrayList_of_CmdCatch.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_CmdCatch*)local_0_dup)->property_data,((ClassArrayList_of_CmdCatch*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_CmdCatch*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_CmdCatch__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_CmdCatch__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_CmdCatch__type_name( SXCRef context )
{
  return str768.value;
}

static SlagObject* CmdTry__create_duplicate( SXCRef context )
{
  SXCRef local_0_result;
  SXCRef local_1__reader2513;
  SXCRef local_2_c;

  local_0_result = CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdTry.create(),((ClassCmdTry*)context)->property_t,((ClassCmdTry*)context)->property_id,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdTry*)context)->property_body));
  local_1__reader2513 = ArrayList_of_CmdCatch__create_reader(((ClassCmdTry*)context)->property_catches);
  while (ArrayReader_of_CmdCatch__has_another(local_1__reader2513))
  {
    local_2_c = ArrayReader_of_CmdCatch__read(local_1__reader2513);
    ArrayList_of_Object__add__Object(((ClassCmdTry*)local_0_result)->property_catches,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_2_c));
  }
  return local_0_result;
}

static SlagObject* CmdTry__resolve( SXCRef context )
{
  SlagInt32 local_0_index;
  SlagInt32 local_1__count2514;
  SXCRef local_2_c;
  SXCRef local_3__reader2515;
  SXCRef local_4_c2;

  CmdStructure__remap_id(context);
  CmdStatementList__resolve(((ClassCmdTry*)context)->property_body);
  {
    local_0_index = 0;
    local_1__count2514 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdTry*)context)->property_catches))->property_count;
    while ((local_0_index < local_1__count2514))
    {
      local_2_c = ((ClassCmdCatch*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdTry*)context)->property_catches))->property_data)->data))[local_0_index]));
      CmdCatch__resolve(local_2_c);
      local_3__reader2515 = ArrayList_of_CmdCatch__from__Int32(((ClassCmdTry*)context)->property_catches,(local_0_index+1));
      while (ArrayReader_of_CmdCatch__has_another(local_3__reader2515))
      {
        local_4_c2 = ArrayReader_of_CmdCatch__read(local_3__reader2515);
        if (TypeInfo__instance_of__TypeInfo(((ClassLocalVarInfo*)((ClassCmdCatch*)local_4_c2)->property_var_info)->property_type,((ClassLocalVarInfo*)((ClassCmdCatch*)local_2_c)->property_var_info)->property_type))
        {
          SLAG_THROW( ((ClassSlagError*)PriorSlagError__init__Token_String_Token(type_ClassPriorSlagError.create(),((ClassCmdCatch*)local_4_c2)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1201.value),((ClassTypeInfo*)((ClassLocalVarInfo*)((ClassCmdCatch*)local_4_c2)->property_var_info)->property_type)->property_name),str1202.value),((ClassTypeInfo*)((ClassLocalVarInfo*)((ClassCmdCatch*)local_2_c)->property_var_info)->property_type)->property_name),str962.value)),((ClassCmdCatch*)local_2_c)->property_t)) );
        }
      }
      ++local_0_index;
    }
  }
  return context;
}

static SlagObject* CmdTry__finalize_calls( SXCRef context )
{
  SXCRef local_0__reader2517;
  SXCRef local_1_c;

  CmdStatementList__finalize_calls(((ClassCmdTry*)context)->property_body);
  local_0__reader2517 = ArrayList_of_CmdCatch__create_reader(((ClassCmdTry*)context)->property_catches);
  while (ArrayReader_of_CmdCatch__has_another(local_0__reader2517))
  {
    local_1_c = ArrayReader_of_CmdCatch__read(local_0__reader2517);
    CmdCatch__finalize_calls(local_1_c);
  }
  return context;
}

static void CmdTry__finalize_structure_info( SXCRef context )
{
  SXCRef local_0__reader2518;
  SXCRef local_1_c;

  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
  CmdStatementList__finalize_structure_info(((ClassCmdTry*)context)->property_body);
  local_0__reader2518 = ArrayList_of_CmdCatch__create_reader(((ClassCmdTry*)context)->property_catches);
  while (ArrayReader_of_CmdCatch__has_another(local_0__reader2518))
  {
    local_1_c = ArrayReader_of_CmdCatch__read(local_0__reader2518);
    CmdCatch__finalize_structure_info(local_1_c);
  }
  if (GenericHashTable_of_Int32_and_Int32__contains__Int32(((ClassHashSet_of_Int32*)((ClassContext*)sxc_singletons[10])->property_referenced_structures)->property_data,((ClassCmdTry*)context)->property_id))
  {
    ((ClassCmdTry*)context)->property_referenced = true;
  }
}

static void CmdTry__group_dynamic_methods( SXCRef context )
{
  SXCRef local_0__reader2520;
  SXCRef local_1_c;

  CmdStatementList__group_dynamic_methods(((ClassCmdTry*)context)->property_body);
  local_0__reader2520 = ArrayList_of_CmdCatch__create_reader(((ClassCmdTry*)context)->property_catches);
  while (ArrayReader_of_CmdCatch__has_another(local_0__reader2520))
  {
    local_1_c = ArrayReader_of_CmdCatch__read(local_0__reader2520);
    CmdStatementList__group_dynamic_methods(((ClassCmdCatch*)local_1_c)->property_body);
  }
}

static SlagObject* CmdTry__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  SXCRef local_1__reader2521;
  SXCRef local_2_c;

  CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdTry*)context)->property_body)->property_statements))->property_data)->data))[0]))),local_0_arg_list);
  local_1__reader2521 = ArrayList_of_CmdCatch__create_reader(((ClassCmdTry*)context)->property_catches);
  while (ArrayReader_of_CmdCatch__has_another(local_1__reader2521))
  {
    local_2_c = ArrayReader_of_CmdCatch__read(local_1__reader2521);
    CmdCatch__to_inline__CmdList(local_2_c,local_0_arg_list);
  }
  return context;
}

SlagObject* CmdTry__to_String( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader2522;
  SXCRef local_2_c;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  TextWriter__println__String(local_0_buffer,((ClassString*)String__opADD__String(str770.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdTry*)context)->property_id,10)))));
  TextWriter__println__Object(local_0_buffer,((ClassCmdTry*)context)->property_body);
  local_1__reader2522 = ArrayList_of_CmdCatch__create_reader(((ClassCmdTry*)context)->property_catches);
  while (ArrayReader_of_CmdCatch__has_another(local_1__reader2522))
  {
    local_2_c = ArrayReader_of_CmdCatch__read(local_1__reader2522);
    TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str771.value),((ClassTypeInfo*)((ClassLocalVarInfo*)((ClassCmdCatch*)local_2_c)->property_var_info)->property_type)->property_name),str607.value),((ClassLocalVarInfo*)((ClassCmdCatch*)local_2_c)->property_var_info)->property_name),str62.value)));
    TextWriter__println__Object(local_0_buffer,((ClassCmdCatch*)local_2_c)->property_body);
  }
  TextWriter__println__String(local_0_buffer,str316.value);
  return StringBuilder__to_String(local_0_buffer);
}

static void CmdTry__write_etc( SXCRef context )
{
  SXCRef local_0__reader2879;
  SXCRef local_1_c;

  ETCWriter__write_structure_id__CmdStructure(sxc_singletons[13],context);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_trycatch)->property_ordinal);
  CmdStatementList__write_etc(((ClassCmdTry*)context)->property_body);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdTry*)context)->property_catches))->property_count);
  local_0__reader2879 = ArrayList_of_CmdCatch__create_reader(((ClassCmdTry*)context)->property_catches);
  while (ArrayReader_of_CmdCatch__has_another(local_0__reader2879))
  {
    local_1_c = ArrayReader_of_CmdCatch__read(local_0__reader2879);
    CmdCatch__write_etc(local_1_c);
  }
}

static SlagObject* CmdTry__to_cpp( SXCRef context )
{
  SXCRef local_0_err_name;
  SlagLogical local_1_first;
  SXCRef local_2__reader2883;
  SXCRef local_3_c;

  if (((ClassCPPWriter*)sxc_singletons[11])->property_use_longjmp)
  {
    CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1641.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],Math__unique_Int32(sxc_singletons[4]),10))),str396.value)));
  }
  CPPWriter__println__String(sxc_singletons[11],str1642.value);
  CPPWriter__println__String(sxc_singletons[11],str247.value);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
  CmdStatementList__to_cpp(((ClassCmdTry*)context)->property_body);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
  CPPWriter__println__String(sxc_singletons[11],str397.value);
  local_0_err_name = ((ClassString*)String__opADD__String(str1643.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],Math__unique_Int32(sxc_singletons[4]),10))));
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdTry*)context)->property_catches))->property_count != 0))
  {
    CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1644.value),local_0_err_name),str62.value)));
    CPPWriter__println__String(sxc_singletons[11],str247.value);
    ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
    if (((ClassCPPWriter*)sxc_singletons[11])->property_use_longjmp)
    {
      CPPWriter__println__String(sxc_singletons[11],str1645.value);
      CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1646.value),local_0_err_name),str1647.value)));
    }
    else
    {
      CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1646.value),local_0_err_name),str1648.value),local_0_err_name),str1649.value)));
    }
    local_1_first = true;
    local_2__reader2883 = ArrayList_of_CmdCatch__create_reader(((ClassCmdTry*)context)->property_catches);
    while (ArrayReader_of_CmdCatch__has_another(local_2__reader2883))
    {
      local_3_c = ArrayReader_of_CmdCatch__read(local_2__reader2883);
      if (local_1_first)
      {
        local_1_first = false;
      }
      else
      {
        CPPWriter__print__String(sxc_singletons[11],str1650.value);
      }
      CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1636.value),local_0_err_name),str1651.value),TypeInfo__x_name(((ClassLocalVarInfo*)((ClassCmdCatch*)local_3_c)->property_var_info)->property_type)),str1595.value)));
      CPPWriter__println__String(sxc_singletons[11],str247.value);
      ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
      if (((ClassCPPWriter*)sxc_singletons[11])->property_use_longjmp)
      {
        CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1528.value),LocalVarInfo__x_name(((ClassCmdCatch*)local_3_c)->property_var_info)),str1652.value)));
      }
      else
      {
        CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1528.value),LocalVarInfo__x_name(((ClassCmdCatch*)local_3_c)->property_var_info)),str1653.value),local_0_err_name),str396.value)));
      }
      CmdCatch__to_cpp(local_3_c);
      ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
      CPPWriter__println__String(sxc_singletons[11],str397.value);
    }
    CPPWriter__println__String(sxc_singletons[11],str297.value);
    CPPWriter__println__String(sxc_singletons[11],str247.value);
    if (((ClassCPPWriter*)sxc_singletons[11])->property_use_longjmp)
    {
      CPPWriter__println__String(sxc_singletons[11],str1654.value);
    }
    else
    {
      CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1655.value),local_0_err_name),str1554.value)));
    }
    CPPWriter__println__String(sxc_singletons[11],str397.value);
    ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
    CPPWriter__println__String(sxc_singletons[11],str397.value);
  }
  CPPWriter__write_end_id__CmdStructure(sxc_singletons[11],context);
  return NULL;
}

static SlagObject* CmdTry__to_cs( SXCRef context )
{
  SXCRef local_0__reader2887;
  SXCRef local_1_c;

  CSWriter__println__String(sxc_singletons[28],str314.value);
  CSWriter__println__String(sxc_singletons[28],str247.value);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent+2);
  CmdStatementList__to_cs(((ClassCmdTry*)context)->property_body);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent-2);
  CSWriter__println__String(sxc_singletons[28],str397.value);
  local_0__reader2887 = ArrayList_of_CmdCatch__create_reader(((ClassCmdTry*)context)->property_catches);
  while (ArrayReader_of_CmdCatch__has_another(local_0__reader2887))
  {
    local_1_c = ArrayReader_of_CmdCatch__read(local_0__reader2887);
    CmdCatch__to_cs(local_1_c);
  }
  CSWriter__write_end_id__CmdStructure(sxc_singletons[28],context);
  return NULL;
}

static SlagObject* CmdTry__to_java( SXCRef context )
{
  SXCRef local_0__reader2888;
  SXCRef local_1_c;

  JavaWriter__write_end_id__CmdStructure(sxc_singletons[19],context);
  JavaWriter__println__String(sxc_singletons[19],str314.value);
  JavaWriter__println__String(sxc_singletons[19],str247.value);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
  CmdStatementList__to_java(((ClassCmdTry*)context)->property_body);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
  JavaWriter__println__String(sxc_singletons[19],str397.value);
  local_0__reader2888 = ArrayList_of_CmdCatch__create_reader(((ClassCmdTry*)context)->property_catches);
  while (ArrayReader_of_CmdCatch__has_another(local_0__reader2888))
  {
    local_1_c = ArrayReader_of_CmdCatch__read(local_0__reader2888);
    CmdCatch__to_java(local_1_c);
  }
  return NULL;
}

void CmdTry__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassCmdTry*)context)->property_catches), ArrayList_of_CmdCatch__init__Int32(type_ClassArrayList_of_CmdCatch.create(),1) );
}

SlagObject* CmdTry__type_name( SXCRef context )
{
  return str772.value;
}

void CmdLiteralPrimitive__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLiteralPrimitive__type_name( SXCRef context )
{
  return str704.value;
}

static SlagObject* CmdLiteralInt64__init__Token_Int64( SXCRef context, SXCRef local_0_t_7244, SlagInt64 local_1_value_7243 )
{
  sxc_write_ref( &(((ClassCmdLiteralInt64*)context)->property_t), local_0_t_7244 );
  ((ClassCmdLiteralInt64*)context)->property_value = local_1_value_7243;
  return context;
}

static SlagObject* CmdLiteralInt64__create_duplicate( SXCRef context )
{
  return CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),((ClassCmdLiteralInt64*)context)->property_t,((ClassCmdLiteralInt64*)context)->property_value);
}

static SlagObject* CmdLiteralInt64__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_int64;
}

static void CmdLiteralInt64__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_literal_int64)->property_ordinal);
  BitWriter__write_Int64__Int64(((ClassETCWriter*)sxc_singletons[13])->property_out,((ClassCmdLiteralInt64*)context)->property_value);
}

static SlagObject* CmdLiteralInt64__to_cpp( SXCRef context )
{
  if (((((ClassCmdLiteralInt64*)context)->property_value&0x8000000000000000LL) != 0LL))
  {
    return String__opADD__String(String__opADD__String(str1632.value,Global__to_String__Int64_Int32(sxc_singletons[21],((ClassCmdLiteralInt64*)context)->property_value,16)),str1633.value);
  }
  return String__opADD__String(StringManager__create_from__Int64(sxc_singletons[18],((ClassCmdLiteralInt64*)context)->property_value),str1633.value);
}

static SlagObject* CmdLiteralInt64__to_cs( SXCRef context )
{
  if (((((ClassCmdLiteralInt64*)context)->property_value&0x8000000000000000LL) != 0LL))
  {
    return String__opADD__String(String__opADD__String(str1632.value,Global__to_String__Int64_Int32(sxc_singletons[21],((ClassCmdLiteralInt64*)context)->property_value,16)),str1919.value);
  }
  return String__opADD__String(StringManager__create_from__Int64(sxc_singletons[18],((ClassCmdLiteralInt64*)context)->property_value),str1919.value);
}

static SlagObject* CmdLiteralInt64__to_java( SXCRef context )
{
  if (((((ClassCmdLiteralInt64*)context)->property_value&0x8000000000000000LL) != 0LL))
  {
    return String__opADD__String(String__opADD__String(str1632.value,Global__to_String__Int64_Int32(sxc_singletons[21],((ClassCmdLiteralInt64*)context)->property_value,16)),str1919.value);
  }
  return String__opADD__String(StringManager__create_from__Int64(sxc_singletons[18],((ClassCmdLiteralInt64*)context)->property_value),str1919.value);
}

void CmdLiteralInt64__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLiteralInt64__type_name( SXCRef context )
{
  return str705.value;
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__init__Token_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9535, SXCRef local_1_var_info_9534, SXCRef local_2_operand_9533 )
{
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign*)context)->property_t), local_0_t_9535 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign*)context)->property_var_info), local_1_var_info_9534 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign*)context)->property_operand), local_2_operand_9533 );
  return context;
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__create_duplicate( SXCRef context )
{
  return CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__init__Token_PropertyInfo_Cmd(type_ClassCmdThisPropertyMulAndAssign.create(),((ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign*)context)->property_t,((ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign*)context)->property_operand));
}

SlagObject* CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign*)context)->property_var_info)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__resolve( SXCRef context )
{
  return context;
}

static void CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_this_property_mul_and_assign)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign*)context)->property_operand);
}

void CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__type_name( SXCRef context )
{
  return str1215.value;
}

static SlagObject* CmdThisPropertyMulAndAssign__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassPropertyInfo*)((ClassCmdThisPropertyMulAndAssign*)context)->property_var_info)->property_type_context)),str1730.value),PropertyInfo__x_name(((ClassCmdThisPropertyMulAndAssign*)context)->property_var_info)),str1723.value),CallFn____Object(15,((ClassCmdThisPropertyMulAndAssign*)context)->property_operand)));
}

static SlagObject* CmdThisPropertyMulAndAssign__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdThisPropertyMulAndAssign*)context)->property_var_info)),str1723.value),CallFn____Object(35,((ClassCmdThisPropertyMulAndAssign*)context)->property_operand)));
}

static SlagObject* CmdThisPropertyMulAndAssign__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdThisPropertyMulAndAssign*)context)->property_var_info)),str1723.value),CallFn____Object(41,((ClassCmdThisPropertyMulAndAssign*)context)->property_operand)));
}

void CmdThisPropertyMulAndAssign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdThisPropertyMulAndAssign__type_name( SXCRef context )
{
  return str1216.value;
}

static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAdd.create(),((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs));
}

static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,String__opADD__String(str689.value,str388.value));
  if ((local_0_call != NULL))
  {
    return local_0_call;
  }
  SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary(sxc_singletons[8],context);
  return CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__optimize(context);
}

static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__optimize( SXCRef context )
{
  SXCRef local_0_left;
  SXCRef local_1_right;
  SXCRef local_2_left;
  SXCRef local_3_right;
  SXCRef local_4_left;
  SXCRef local_5_right;
  SXCRef local_6_left;
  SXCRef local_7_right;

  if ((sxc_instance_of(((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    if (sxc_instance_of(((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_0_left = ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs;
      local_1_right = ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs;
      ((ClassCmdLiteralInt64*)local_0_left)->property_value = (((ClassCmdLiteralInt64*)local_0_left)->property_value+((ClassCmdLiteralInt64*)local_1_right)->property_value);
      return ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs;
      local_3_right = ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = (((ClassCmdLiteralInt32*)local_2_left)->property_value+((ClassCmdLiteralInt32*)local_3_right)->property_value);
      return ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs,&type_ClassCmdLiteralReal64))
    {
      local_4_left = ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs;
      local_5_right = ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs;
      ((ClassCmdLiteralReal64*)local_4_left)->property_value = (((ClassCmdLiteralReal64*)local_4_left)->property_value+((ClassCmdLiteralReal64*)local_5_right)->property_value);
      return ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs,&type_ClassCmdLiteralReal32))
    {
      local_6_left = ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs;
      local_7_right = ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs;
      ((ClassCmdLiteralReal32*)local_6_left)->property_value = (((ClassCmdLiteralReal32*)local_6_left)->property_value+((ClassCmdLiteralReal32*)local_7_right)->property_value);
      return ((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_add)->property_ordinal);
  CallFn__(7,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs);
  CallFn__(7,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs);
}

static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_cpp( SXCRef context )
{
  SXCRef local_0_which_7726;
  SXCRef local_1_result;
  SXCRef local_2_which_7727;

  local_0_which_7726 = str388.value;
  if (String__opEQ__String(local_0_which_7726,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1666.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs)),str395.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7726,str392.value))
  {
    local_1_result = str39.value;
    local_2_which_7727 = CallFn____Object(0,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs);
    if ((local_2_which_7727 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      local_1_result = str1667.value;
    }
    else if ((local_2_which_7727 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      local_1_result = str1668.value;
    }
    else if ((local_2_which_7727 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      local_1_result = str1669.value;
    }
    else if ((local_2_which_7727 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      local_1_result = str1670.value;
    }
    return String__opADD__String(local_1_result,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1671.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs)),str1672.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs)),str62.value)));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(15,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs)),str388.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_cs( SXCRef context )
{
  SXCRef local_0_which_7728;

  local_0_which_7728 = str388.value;
  if (String__opEQ__String(local_0_which_7728,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7728,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),TypeInfo__x_name(CallFn____Object(0,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs))),str1925.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(35,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs)),str388.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_java( SXCRef context )
{
  SXCRef local_0_which_7729;

  local_0_which_7729 = str388.value;
  if (String__opEQ__String(local_0_which_7729,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7729,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2011.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(41,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_lhs)),str388.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add*)context)->property_rhs)),str62.value);
  }
}

void CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__type_name( SXCRef context )
{
  return str817.value;
}

static SlagObject* Array_of_Char__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Char.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Char__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Char__type_name( SXCRef context )
{
  return str26.value;
}

static SlagChar ArrayList_of_Char__last( SXCRef context )
{
  return ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->data))[(((ClassArrayList_of_Char*)context)->property_count-1)];
}

static void ArrayList_of_Char__swap__Int32_Int32( SXCRef context, SlagInt32 local_0_index_a, SlagInt32 local_1_index_b )
{
  SlagChar local_2_temp;

  local_2_temp = ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->data))[local_0_index_a];
  ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->data))[local_0_index_a] = ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->data))[local_1_index_b];
  ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->data))[local_1_index_b] = local_2_temp;
}

static SlagChar ArrayList_of_Char__remove_last( SXCRef context )
{
  return ArrayList_of_Char__remove__Int32(context,(((ClassArrayList_of_Char*)context)->property_count-1));
}

static void ArrayList_of_Char__reverse( SXCRef context )
{
  SlagInt32 local_0_i;
  SlagInt32 local_1_j;

  local_0_i = 0;
  local_1_j = (((ClassArrayList_of_Char*)context)->property_count-1);
  while ((local_0_i <= local_1_j))
  {
    ArrayList_of_Char__swap__Int32_Int32(context,local_0_i,local_1_j);
    ++local_0_i;
    --local_1_j;
  }
}

SlagObject* ArrayList_of_Char__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count3396;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Char*)context)->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count3396 = ((ClassArrayList_of_Char*)context)->property_count;
    while ((local_1_i < local_2__count3396))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Char(sxc_singletons[21],((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->data))[local_1_i]));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Char__init( SXCRef context )
{
  ArrayList_of_Char__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Char__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Char*)context)->property_data), type_ClassArray_of_Char.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Char__init__Array_of_Char_Logical( SXCRef context, SXCRef local_0_array, SlagLogical local_1_make_copy )
{
  if (local_1_make_copy)
  {
    sxc_write_ref( &(((ClassArrayList_of_Char*)context)->property_data), slag_duplicate_array(local_0_array) );
  }
  else
  {
    sxc_write_ref( &(((ClassArrayList_of_Char*)context)->property_data), local_0_array );
  }
  ((ClassArrayList_of_Char*)context)->property_count = ((SlagArray*)local_0_array)->array_count;
  return context;
}

static SlagObject* ArrayList_of_Char__create_reader( SXCRef context )
{
  return ArrayReader_of_Char__init__Collection_of_Char_Array_of_Char_Int32_Int32(type_ClassArrayReader_of_Char.create(),context,((ClassArrayList_of_Char*)context)->property_data,0,((ClassArrayList_of_Char*)context)->property_count);
}

static SlagObject* ArrayList_of_Char__reverse_order( SXCRef context )
{
  return ArrayReverseReader_of_Char__init__Collection_of_Char_Array_of_Char(type_ClassArrayReverseReader_of_Char.create(),context,((ClassArrayList_of_Char*)context)->property_data);
}

static SlagInt32 ArrayList_of_Char__count( SXCRef context )
{
  return ((ClassArrayList_of_Char*)context)->property_count;
}

static SlagInt32 ArrayList_of_Char__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Char*)context)->property_modification_count;
}

static void ArrayList_of_Char__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_min_capacity )
{
  SXCRef local_1_new_data;

  if ((((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->array_count < local_0_min_capacity))
  {
    local_1_new_data = type_ClassArray_of_Char.create(local_0_min_capacity);
    GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_1_new_data,((ClassArrayList_of_Char*)context)->property_data,0,0,((ClassArrayList_of_Char*)context)->property_count);
    sxc_write_ref( &(((ClassArrayList_of_Char*)context)->property_data), local_1_new_data );
  }
}

void ArrayList_of_Char__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Char__ensure_capacity__Int32(context,local_0_num_items);
  if ((local_0_num_items > ((ClassArrayList_of_Char*)context)->property_count))
  {
    ((ClassArrayList_of_Char*)context)->property_count = local_0_num_items;
    ((ClassArrayList_of_Char*)context)->property_modification_count = (((ClassArrayList_of_Char*)context)->property_modification_count+1);
  }
}

SlagObject* ArrayList_of_Char__add__Char( SXCRef context, SlagChar local_0_value )
{
  if ((((ClassArrayList_of_Char*)context)->property_count == ((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->array_count))
  {
    if ((((ClassArrayList_of_Char*)context)->property_count == 0))
    {
      ArrayList_of_Char__ensure_capacity__Int32(context,1);
    }
    else
    {
      ArrayList_of_Char__ensure_capacity__Int32(context,(((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->array_count<<1));
    }
  }
  ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->data))[((ClassArrayList_of_Char*)context)->property_count] = local_0_value;
  ++(((ClassArrayList_of_Char*)context)->property_count);
  ((ClassArrayList_of_Char*)context)->property_modification_count = (((ClassArrayList_of_Char*)context)->property_modification_count+1);
  return context;
}

static SlagObject* ArrayList_of_Char__insert__Char_Int32( SXCRef context, SlagChar local_0_value, SlagInt32 local_1_before_index )
{
  ArrayList_of_Char__add__Char(context,local_0_value);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Char*)context)->property_data,((ClassArrayList_of_Char*)context)->property_data,local_1_before_index,(local_1_before_index+1),(((ClassArrayList_of_Char*)context)->property_count-(local_1_before_index+1)));
  ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->data))[local_1_before_index] = local_0_value;
  return context;
}

static SlagChar ArrayList_of_Char__remove__Int32( SXCRef context, SlagInt32 local_0_index )
{
  SlagChar local_1_result;

  if ((local_0_index >= ((ClassArrayList_of_Char*)context)->property_count))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str82.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_index,10))) );
  }
  local_1_result = ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)context)->property_data)->data))[local_0_index];
  --(((ClassArrayList_of_Char*)context)->property_count);
  ((ClassArrayList_of_Char*)context)->property_modification_count = (((ClassArrayList_of_Char*)context)->property_modification_count+1);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Char*)context)->property_data,((ClassArrayList_of_Char*)context)->property_data,(local_0_index+1),local_0_index,(((ClassArrayList_of_Char*)context)->property_count-local_0_index));
  GenericArray__clear__Int32_Int32(((ClassArrayList_of_Char*)context)->property_data,((ClassArrayList_of_Char*)context)->property_count,((ClassArrayList_of_Char*)context)->property_count);
  return local_1_result;
}

static SlagObject* ArrayList_of_Char__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),((ClassArrayList_of_Char*)context)->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Char*)local_0_dup)->property_data,((ClassArrayList_of_Char*)context)->property_data,0,0,((ClassArrayList_of_Char*)context)->property_count);
  ((ClassArrayList_of_Char*)local_0_dup)->property_count = ((ClassArrayList_of_Char*)context)->property_count;
  return local_0_dup;
}

void ArrayList_of_Char__clear( SXCRef context )
{
  if ((((ClassArrayList_of_Char*)context)->property_count > 0))
  {
    GenericArray__clear__Int32_Int32(((ClassArrayList_of_Char*)context)->property_data,0,(((ClassArrayList_of_Char*)context)->property_count-1));
    ((ClassArrayList_of_Char*)context)->property_count = 0;
    ((ClassArrayList_of_Char*)context)->property_modification_count = (((ClassArrayList_of_Char*)context)->property_modification_count+1);
  }
}

void ArrayList_of_Char__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Char__type_name( SXCRef context )
{
  return str40.value;
}

static SlagObject* Array_of_Token__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Token.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Token__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Token__type_name( SXCRef context )
{
  return str212.value;
}

static SlagObject* ArrayList_of_Token__add__Readable_of_Token( SXCRef context, SXCRef local_0_source )
{
  SXCRef local_1__reader4408;
  SXCRef local_2_value;

  local_1__reader4408 = CallFn____Object(44,local_0_source);
  while (CallFn____Logical(14,local_1__reader4408))
  {
    local_2_value = CallFn____Object(45,local_1__reader4408);
    ArrayList_of_Object__add__Object(context,local_2_value);
  }
  return context;
}

static SlagObject* ArrayList_of_Token__remove_last( SXCRef context )
{
  return ((ClassToken*)ArrayList_of_Object__remove__Int32(context,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-1)));
}

SlagObject* ArrayList_of_Token__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count4434;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count4434 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count4434))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Token__init( SXCRef context )
{
  ArrayList_of_Token__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Token__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Token*)context)->property_data), type_ClassArray_of_Token.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Token__create_reader( SXCRef context )
{
  return ArrayReader_of_Token__init__Collection_of_Token_Array_of_Token_Int32_Int32(type_ClassArrayReader_of_Token.create(),context,((ClassArrayList_of_Token*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_Token__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_Token__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_Token__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

static SlagObject* ArrayList_of_Token__get__Int32( SXCRef context, SlagInt32 local_0_index )
{
  return ((ClassToken*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_0_index]);
}

SlagObject* ArrayList_of_Token__add__Token( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_Token*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_Token__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Token*)local_0_dup)->property_data,((ClassArrayList_of_Token*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_Token*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_Token__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_Token__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Token__type_name( SXCRef context )
{
  return str213.value;
}

static SlagObject* CmdStructureControl__init__Token_Int32( SXCRef context, SXCRef local_0_t_7675, SlagInt32 local_1_id_7674 )
{
  sxc_write_ref( &(((ClassCmdStructureControl*)context)->property_t), local_0_t_7675 );
  ((ClassCmdStructureControl*)context)->property_id = local_1_id_7674;
  return context;
}

SlagObject* CmdStructureControl__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str607.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdStructureControl*)context)->property_id,10))));
}

static SlagObject* CmdStructureControl__resolve( SXCRef context )
{
  ((ClassCmdStructureControl*)context)->property_id = GenericHashTable_of_Int32_and_Int32__get__Int32(((ClassHashTable_of_Int32_and_Int32*)((ClassContext*)sxc_singletons[10])->property_id_remap_table)->property_data,((ClassCmdStructureControl*)context)->property_id);
  return context;
}

static SlagObject* CmdStructureControl__finalize_calls( SXCRef context )
{
  return context;
}

static void CmdStructureControl__finalize_structure_info( SXCRef context )
{
  HashSet_of_Int32__add__Int32(((ClassContext*)sxc_singletons[10])->property_referenced_structures,((ClassCmdStructureControl*)context)->property_id);
}

static void CmdStructureControl__group_dynamic_methods( SXCRef context )
{
}

static SlagObject* CmdStructureControl__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  return context;
}

void CmdStructureControl__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdStructureControl__type_name( SXCRef context )
{
  return str794.value;
}

static SlagObject* CmdCompare__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCompare.create(),((ClassCmdCompare*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCompare*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCompare*)context)->property_rhs));
}

static SlagObject* CmdCompare__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_logical;
}

static SlagObject* CmdCompare__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,str691.value);
  if ((local_0_call != NULL))
  {
    return local_0_call;
  }
  return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(sxc_singletons[8],((ClassCmdCompare*)context)->property_t,((ClassContext*)sxc_singletons[10])->property_this_type,NULL,str1252.value,CmdList__init__Cmd(type_ClassCmdList.create(),CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdSub.create(),((ClassCmdCompare*)context)->property_t,((ClassCmdCompare*)context)->property_lhs,((ClassCmdCompare*)context)->property_rhs)));
}

void CmdCompare__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCompare__type_name( SXCRef context )
{
  return str876.value;
}

static SlagObject* CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpNE.create(),((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs));
}

static SlagObject* CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,str690.value);
  if ((sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs,&type_ClassCmdLiteralString) && sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs,&type_ClassCmdLiteralString)))
  {
    return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_t,!String__opEQ__String(((ClassCmdLiteralString*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs)->property_value,((ClassCmdLiteralString*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs)->property_value));
  }
  if ((local_0_call != NULL))
  {
    {
      SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],local_0_call,NULL);
      return CmdUnary__init__Token_Cmd(type_ClassCmdNot.create(),((ClassCmd*)local_0_call)->property_t,local_0_call);
    }
  }
  SlagAnalyzer__cast_operands_to_standard_value_types__CmdBinary(sxc_singletons[8],context);
  return CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__optimize(context);
}

static SlagObject* CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__optimize( SXCRef context )
{
  SXCRef local_0_type;

  if ((sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    local_0_type = CallFn____Object(0,((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs);
    if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_t,(((ClassCmdLiteralInt64*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs)->property_value != ((ClassCmdLiteralInt64*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_t,(((ClassCmdLiteralInt32*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs)->property_value != ((ClassCmdLiteralInt32*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_t,(((ClassCmdLiteralReal64*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs)->property_value != ((ClassCmdLiteralReal64*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_t,(((ClassCmdLiteralReal32*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs)->property_value != ((ClassCmdLiteralReal32*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_t,(((ClassCmdLiteralLogical*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs)->property_value != ((ClassCmdLiteralLogical*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs)->property_value));
    }
  }
  else if (sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs,&type_ClassCmdLiteralLogical))
  {
    if (((ClassCmdLiteralLogical*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs)->property_value)
    {
      {
        return CmdUnary__init__Token_Cmd(type_ClassCmdNot.create(),((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_t,((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs);
      }
    }
  }
  else if (sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs,&type_ClassCmdLiteralLogical))
  {
    if (((ClassCmdLiteralLogical*)((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs)->property_value)
    {
      {
        return CmdUnary__init__Token_Cmd(type_ClassCmdNot.create(),((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_t,((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs);
      }
    }
  }
  return context;
}

static void CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cmp_ne)->property_ordinal);
  CallFn__(7,((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_lhs);
  CallFn__(7,((ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne*)context)->property_rhs);
}

void CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__type_name( SXCRef context )
{
  return str887.value;
}

static SlagObject* ArrayList_of_Int64__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count3268;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Int64*)context)->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count3268 = ((ClassArrayList_of_Int64*)context)->property_count;
    while ((local_1_i < local_2__count3268))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,((ClassString*)Global__to_String__Int64_Int32(sxc_singletons[21],((SlagInt64*)(((SlagArray*)((ClassArrayList_of_Int64*)context)->property_data)->data))[local_1_i],10)));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

static SlagObject* ArrayList_of_Int64__init( SXCRef context )
{
  ArrayList_of_Int64__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Int64__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Int64*)context)->property_data), type_ClassArray_of_Int64.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Int64__init__Array_of_Int64_Logical( SXCRef context, SXCRef local_0_array, SlagLogical local_1_make_copy )
{
  if (local_1_make_copy)
  {
    sxc_write_ref( &(((ClassArrayList_of_Int64*)context)->property_data), slag_duplicate_array(local_0_array) );
  }
  else
  {
    sxc_write_ref( &(((ClassArrayList_of_Int64*)context)->property_data), local_0_array );
  }
  ((ClassArrayList_of_Int64*)context)->property_count = ((SlagArray*)local_0_array)->array_count;
  return context;
}

static SlagObject* ArrayList_of_Int64__create_reader( SXCRef context )
{
  return ArrayReader_of_Int64__init__Collection_of_Int64_Array_of_Int64_Int32_Int32(type_ClassArrayReader_of_Int64.create(),context,((ClassArrayList_of_Int64*)context)->property_data,0,((ClassArrayList_of_Int64*)context)->property_count);
}

static SlagInt32 ArrayList_of_Int64__count( SXCRef context )
{
  return ((ClassArrayList_of_Int64*)context)->property_count;
}

static SlagInt32 ArrayList_of_Int64__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Int64*)context)->property_modification_count;
}

static void ArrayList_of_Int64__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_min_capacity )
{
  SXCRef local_1_new_data;

  if ((((SlagArray*)((ClassArrayList_of_Int64*)context)->property_data)->array_count < local_0_min_capacity))
  {
    local_1_new_data = type_ClassArray_of_Int64.create(local_0_min_capacity);
    GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_1_new_data,((ClassArrayList_of_Int64*)context)->property_data,0,0,((ClassArrayList_of_Int64*)context)->property_count);
    sxc_write_ref( &(((ClassArrayList_of_Int64*)context)->property_data), local_1_new_data );
  }
}

void ArrayList_of_Int64__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Int64__ensure_capacity__Int32(context,local_0_num_items);
  if ((local_0_num_items > ((ClassArrayList_of_Int64*)context)->property_count))
  {
    ((ClassArrayList_of_Int64*)context)->property_count = local_0_num_items;
    ((ClassArrayList_of_Int64*)context)->property_modification_count = (((ClassArrayList_of_Int64*)context)->property_modification_count+1);
  }
}

SlagObject* ArrayList_of_Int64__add__Int64( SXCRef context, SlagInt64 local_0_value )
{
  if ((((ClassArrayList_of_Int64*)context)->property_count == ((SlagArray*)((ClassArrayList_of_Int64*)context)->property_data)->array_count))
  {
    if ((((ClassArrayList_of_Int64*)context)->property_count == 0))
    {
      ArrayList_of_Int64__ensure_capacity__Int32(context,1);
    }
    else
    {
      ArrayList_of_Int64__ensure_capacity__Int32(context,(((SlagArray*)((ClassArrayList_of_Int64*)context)->property_data)->array_count<<1));
    }
  }
  ((SlagInt64*)(((SlagArray*)((ClassArrayList_of_Int64*)context)->property_data)->data))[((ClassArrayList_of_Int64*)context)->property_count] = local_0_value;
  ++(((ClassArrayList_of_Int64*)context)->property_count);
  ((ClassArrayList_of_Int64*)context)->property_modification_count = (((ClassArrayList_of_Int64*)context)->property_modification_count+1);
  return context;
}

static SlagObject* ArrayList_of_Int64__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Int64__init__Int32(type_ClassArrayList_of_Int64.create(),((ClassArrayList_of_Int64*)context)->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Int64*)local_0_dup)->property_data,((ClassArrayList_of_Int64*)context)->property_data,0,0,((ClassArrayList_of_Int64*)context)->property_count);
  ((ClassArrayList_of_Int64*)local_0_dup)->property_count = ((ClassArrayList_of_Int64*)context)->property_count;
  return local_0_dup;
}

void ArrayList_of_Int64__clear( SXCRef context )
{
  if ((((ClassArrayList_of_Int64*)context)->property_count > 0))
  {
    GenericArray__clear__Int32_Int32(((ClassArrayList_of_Int64*)context)->property_data,0,(((ClassArrayList_of_Int64*)context)->property_count-1));
    ((ClassArrayList_of_Int64*)context)->property_count = 0;
    ((ClassArrayList_of_Int64*)context)->property_modification_count = (((ClassArrayList_of_Int64*)context)->property_modification_count+1);
  }
}

void ArrayList_of_Int64__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Int64__type_name( SXCRef context )
{
  return str75.value;
}

static SlagObject* StackTrace__init( SXCRef context )
{
  SXCRef local_0_h;

  local_0_h = StackTrace__native_history(context);
  if ((local_0_h != NULL))
  {
    sxc_write_ref( &(((ClassStackTrace*)context)->property_history), ArrayList_of_Int64__init__Array_of_Int64_Logical(type_ClassArrayList_of_Int64.create(),local_0_h,true) );
  }
  return context;
}

SlagObject* StackTrace__init__Array_of_Int64( SXCRef context, SXCRef local_0_record )
{
  sxc_write_ref( &(((ClassStackTrace*)context)->property_history), ArrayList_of_Int64__init__Array_of_Int64_Logical(type_ClassArrayList_of_Int64.create(),local_0_record,true) );
  return context;
}

SlagObject* StackTrace__to_String( SXCRef context )
{
  return StackTrace__to_String__Logical(context,false);
}

static SlagObject* StackTrace__to_String__Logical( SXCRef context, SlagLogical local_0_full_trace )
{
  SXCRef local_1_call_info;
  SXCRef local_2__reader161;
  SlagInt64 local_3_ip;
  SXCRef local_4_description;
  SXCRef local_5_info;
  SXCRef local_6_numst;
  SXCRef local_7_buffer;
  SlagInt32 local_8_count;
  SXCRef local_9__reader169;
  SXCRef local_10_info;
  SlagInt32 local_11_i;
  SlagInt32 local_12__last170;
  SlagInt32 local_13_i;
  SlagInt32 local_14__last171;
  SlagInt32 local_15_i;
  SlagInt32 local_16__last172;

  if ((((ClassStackTrace*)context)->property_history == NULL))
  {
    return str68.value;
  }
  local_1_call_info = ArrayList_of_StackTraceInfo__init__Int32(type_ClassArrayList_of_StackTraceInfo.create(),((ClassArrayList_of_Int64*)((ClassStackTrace*)context)->property_history)->property_count);
  local_2__reader161 = ArrayList_of_Int64__create_reader(((ClassStackTrace*)context)->property_history);
  while (ArrayReader_of_Int64__has_another(local_2__reader161))
  {
    local_3_ip = ArrayReader_of_Int64__read(local_2__reader161);
    local_4_description = StackTrace__describe__Int64(context,local_3_ip);
    local_5_info = StackTraceInfo__init(type_ClassStackTraceInfo.create());
    if ((String__index_of__Char_Int32(local_4_description,((SlagChar)64),0) >= 0))
    {
      local_6_numst = String__before_first__Char(local_4_description,((SlagChar)64));
      ((ClassStackTraceInfo*)local_5_info)->property_line = NumberConversions__parse_Int32__String_Int32(sxc_singletons[12],local_6_numst,10);
      sxc_write_ref( &(((ClassStackTraceInfo*)local_5_info)->property_filename), String__before_first__Char(String__after_first__Char(local_4_description,((SlagChar)64)),((SlagChar)124)) );
      sxc_write_ref( &(((ClassStackTraceInfo*)local_5_info)->property_method_name), String__after_first__Char(local_4_description,((SlagChar)124)) );
      if (!local_0_full_trace)
      {
        if ((String__index_of__String_Int32(((ClassStackTraceInfo*)local_5_info)->property_method_name,str79.value,0) >= 0))
        {
          goto next_4202;
        }
        if ((String__index_of__String_Int32(((ClassStackTraceInfo*)local_5_info)->property_method_name,str80.value,0) >= 0))
        {
          goto next_4202;
        }
        if ((String__index_of__String_Int32(((ClassStackTraceInfo*)local_5_info)->property_method_name,str81.value,0) >= 0))
        {
          goto next_4202;
        }
      }
    }
    else
    {
      sxc_write_ref( &(((ClassStackTraceInfo*)local_5_info)->property_method_name), local_4_description );
    }
    ArrayList_of_Object__add__Object(local_1_call_info,local_5_info);
    next_4202:;
  }
  end_4202:;
  while (((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_call_info))->property_count > 1) && (((ClassStackTraceInfo*)ArrayList_of_StackTraceInfo__last(local_1_call_info))->property_filename == NULL)))
  {
    ArrayList_of_StackTraceInfo__remove_last(local_1_call_info);
  }
  local_7_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_8_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_call_info))->property_count;
  if (((local_8_count <= 11) || local_0_full_trace))
  {
    local_9__reader169 = ArrayList_of_StackTraceInfo__create_reader(local_1_call_info);
    while (ArrayReader_of_StackTraceInfo__has_another(local_9__reader169))
    {
      local_10_info = ArrayReader_of_StackTraceInfo__read(local_9__reader169);
      TextWriter__println__Object(local_7_buffer,local_10_info);
    }
  }
  else if ((local_8_count <= 21))
  {
    local_11_i = 0;
    local_12__last170 = 9;
    while ((local_11_i <= local_12__last170))
    {
      TextWriter__println__Object(local_7_buffer,((ClassStackTraceInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_call_info))->property_data)->data))[local_11_i])));
      ++local_11_i;
    }
    TextWriter__println__String(local_7_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str84.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],(local_8_count-10),10))),str85.value)));
  }
  else
  {
    local_13_i = 0;
    local_14__last171 = 9;
    while ((local_13_i <= local_14__last171))
    {
      TextWriter__println__Object(local_7_buffer,((ClassStackTraceInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_call_info))->property_data)->data))[local_13_i])));
      ++local_13_i;
    }
    TextWriter__println__String(local_7_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str84.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],(local_8_count-20),10))),str85.value)));
    local_15_i = (local_8_count-10);
    local_16__last172 = (local_8_count-1);
    while ((local_15_i <= local_16__last172))
    {
      TextWriter__println__Object(local_7_buffer,((ClassStackTraceInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_call_info))->property_data)->data))[local_15_i])));
      ++local_15_i;
    }
  }
  return StringBuilder__to_String(local_7_buffer);
}

static SlagObject* StackTrace__native_history( SXCRef context )
{
  SLAG_PUSH_REF( context );
  StackTrace__native_history();
  return SLAG_POP_REF();
}

static SlagObject* StackTrace__describe__Int64( SXCRef context, SlagInt64 local_0_ip )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_INT64( local_0_ip );
  StackTrace__describe__Int64();
  return SLAG_POP_REF();
}

void StackTrace__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* StackTrace__type_name( SXCRef context )
{
  return str20.value;
}

void Exception__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassException*)context)->property_stack_trace), StackTrace__init(type_ClassStackTrace.create()) );
  if ((((ClassException*)context)->property_stack_trace == NULL))
  {
    sxc_write_ref( &(((ClassException*)context)->property_stack_trace), StackTrace__init(type_ClassStackTrace.create()) );
  }
}

SlagObject* Exception__init( SXCRef context )
{
  sxc_write_ref( &(((ClassException*)context)->property_message), str39.value );
  return context;
}

SlagObject* Exception__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str45.value),((ClassException*)context)->property_message),str46.value),Global__to_String__Object(sxc_singletons[21],((ClassException*)context)->property_stack_trace)));
}

SlagObject* Exception__type_name( SXCRef context )
{
  return str21.value;
}

void Error__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* Error__init( SXCRef context )
{
  sxc_write_ref( &(((ClassError*)context)->property_message), str39.value );
  return context;
}

SlagObject* Error__init__String( SXCRef context, SXCRef local_0_message_3666 )
{
  sxc_write_ref( &(((ClassError*)context)->property_message), local_0_message_3666 );
  return context;
}

SlagObject* Error__type_name( SXCRef context )
{
  return str22.value;
}

static SlagObject* SlagError__init__Token_String( SXCRef context, SXCRef local_0_t, SXCRef local_1_message_5222 )
{
  sxc_write_ref( &(((ClassSlagError*)context)->property_message), local_1_message_5222 );
  sxc_write_ref( &(((ClassSlagError*)context)->property_filename), ((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_0_t)->property_file_index]))) );
  ((ClassSlagError*)context)->property_pos = ((ClassToken*)local_0_t)->property_pos;
  return context;
}

static SlagObject* SlagError__init__String_String( SXCRef context, SXCRef local_0_filename_5224, SXCRef local_1_message_5223 )
{
  sxc_write_ref( &(((ClassSlagError*)context)->property_filename), local_0_filename_5224 );
  sxc_write_ref( &(((ClassSlagError*)context)->property_message), local_1_message_5223 );
  return context;
}

SlagObject* SlagError__to_String( SXCRef context )
{
  SXCRef local_0_buffer;
  SlagLogical local_1_first;
  SXCRef local_2__reader2348;
  SXCRef local_3_line;
  SXCRef local_4_line_str;
  SlagInt32 local_5__local_2350;
  SlagInt32 local_6__last2351;
  SlagLogical local_7_first;
  SXCRef local_8__reader2352;
  SXCRef local_9_line;
  SlagInt32 local_10__local_2354;
  SlagInt32 local_11__last2355;
  SXCRef local_12__reader2356;
  SXCRef local_13_line;
  SlagInt32 local_14__local_2358;
  SlagInt32 local_15__last2359;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  if ((((SlagInt32)(((ClassSlagError*)context)->property_pos.property_line)) == 0))
  {
    StringBuilder__print__String(local_0_buffer,str219.value);
    local_1_first = true;
    local_2__reader2348 = ArrayList_of_String__create_reader(String__word_wrap__Int32(((ClassSlagError*)context)->property_message,64));
    while (ArrayReader_of_String__has_another(local_2__reader2348))
    {
      local_3_line = ArrayReader_of_String__read(local_2__reader2348);
      if (local_1_first)
      {
        local_1_first = false;
      }
      else
      {
        StringBuilder__print__String(local_0_buffer,str220.value);
      }
      TextWriter__println__String(local_0_buffer,local_3_line);
    }
    CallFn__Char(18,local_0_buffer,((SlagChar)10));
    return StringBuilder__to_String(local_0_buffer);
  }
  local_4_line_str = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str221.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32)(((ClassSlagError*)context)->property_pos.property_line)),10))),str222.value));
  StringBuilder__print__String(local_0_buffer,str219.value);
  local_5__local_2350 = 9;
  local_6__last2351 = (((SlagString*)local_4_line_str)->count);
  while ((local_5__local_2350 <= local_6__last2351))
  {
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_buffer)->property_data,((SlagChar)32));
    ++local_5__local_2350;
  }
  local_7_first = true;
  local_8__reader2352 = ArrayList_of_String__create_reader(String__word_wrap__Int32(((ClassSlagError*)context)->property_message,64));
  while (ArrayReader_of_String__has_another(local_8__reader2352))
  {
    local_9_line = ArrayReader_of_String__read(local_8__reader2352);
    if (local_7_first)
    {
      local_7_first = false;
    }
    else
    {
      local_10__local_2354 = 1;
      local_11__last2355 = (((SlagString*)local_4_line_str)->count);
      while ((local_10__local_2354 <= local_11__last2355))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_buffer)->property_data,((SlagChar)32));
        ++local_10__local_2354;
      }
    }
    TextWriter__println__String(local_0_buffer,local_9_line);
  }
  CallFn__Char(18,local_0_buffer,((SlagChar)10));
  StringBuilder__print__String(local_0_buffer,local_4_line_str);
  local_7_first = true;
  local_12__reader2356 = LineReader__init__Reader_of_Char(type_ClassLineReader.create(),((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),SlagError__get_context__String_ParsePos(context,((ClassSlagError*)context)->property_filename,((ClassSlagError*)context)->property_pos),0,-1)));
  while ((((ClassLineReader*)local_12__reader2356)->property_next != NULL))
  {
    local_13_line = LineReader__read(local_12__reader2356);
    if (local_7_first)
    {
      local_7_first = false;
    }
    else
    {
      local_14__local_2358 = 1;
      local_15__last2359 = (((SlagString*)local_4_line_str)->count);
      while ((local_14__local_2358 <= local_15__last2359))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_buffer)->property_data,((SlagChar)32));
        ++local_14__local_2358;
      }
    }
    TextWriter__println__String(local_0_buffer,local_13_line);
  }
  return StringBuilder__to_String(local_0_buffer);
}

static SlagObject* SlagError__get_context__String_ParsePos( SXCRef context, SXCRef local_0_fname, CompoundParsePos local_1_p )
{
  SXCRef local_2_buffer;
  SXCRef local_3_file;
  SXCRef local_4_context;
  SlagInt32 local_5_col;
  SlagInt32 local_6_diff;
  SlagInt32 local_7__local_2366;
  SlagInt32 local_8__last2367;

  SLAG_TRY
  {
    local_2_buffer = StringBuilder__init(type_ClassStringBuilder.create());
    local_3_file = ParseReader__init__Reader_of_Char(type_ClassParseReader.create(),((AspectReader_of_Char*)FileReader__init__String(type_ClassFileReader.create(),((ClassFile*)File__init__String(type_ClassFile.create(),local_0_fname))->property_filepath)));
    while ((ParseReader__has_another(local_3_file) && (((SlagInt32)(ParseReader__cur_pos(local_3_file).property_line)) < ((SlagInt32)(local_1_p.property_line)))))
    {
      ParseReader__read(local_3_file);
    }
    if (ParseReader__has_another(local_3_file))
    {
      local_4_context = ParseReader__read_line(local_3_file);
      local_5_col = (((SlagInt32)(local_1_p.property_column))-1);
      while (((local_5_col > 0) && (((SlagInt32)String__get__Int32(local_4_context,0)) == 32)))
      {
        local_4_context = String__substring__Int32(local_4_context,1);
        --local_5_col;
      }
      if ((local_5_col > 50))
      {
        local_6_diff = (local_5_col-47);
        local_4_context = String__opADD__String(str225.value,String__substring__Int32(local_4_context,local_6_diff));
        local_5_col = 50;
      }
      if (((((SlagString*)local_4_context)->count) > 64))
      {
        local_4_context = String__opADD__String(((ClassString*)String__substring__Int32_Int32(local_4_context,0,(61-1))),str225.value);
      }
      TextWriter__println__String(local_2_buffer,local_4_context);
      local_7__local_2366 = 1;
      local_8__last2367 = local_5_col;
      while ((local_7__local_2366 <= local_8__last2367))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)32));
        ++local_7__local_2366;
      }
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)94));
    }
    return StringBuilder__to_String(local_2_buffer);
  }
  SLAG_CATCH(_err4)
  {
    SlagTypeInfo* _err4_type = _err4->type;
    if (_err4_type->instance_of(&type_ClassFileError))
    {
      SXCRef local_9_err = _err4;
      return str226.value;
    }
    else
    {
      SLAG_THROW(_err4);
    }
  }
}

void SlagError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* SlagError__type_name( SXCRef context )
{
  return str227.value;
}

static SlagObject* Array_of_Byte__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Byte.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Byte__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Byte__type_name( SXCRef context )
{
  return str87.value;
}

static SlagObject* CmdLiteralNull__init__Token( SXCRef context, SXCRef local_0_t_7927 )
{
  sxc_write_ref( &(((ClassCmdLiteralNull*)context)->property_t), local_0_t_7927 );
  return context;
}

static SlagObject* CmdLiteralNull__create_duplicate( SXCRef context )
{
  return CmdLiteralNull__init__Token(type_ClassCmdLiteralNull.create(),((ClassCmdLiteralNull*)context)->property_t);
}

static SlagObject* CmdLiteralNull__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_null;
}

SlagObject* CmdLiteralNull__to_String( SXCRef context )
{
  return str36.value;
}

static void CmdLiteralNull__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_literal_null)->property_ordinal);
}

static SlagObject* CmdLiteralNull__to_cpp( SXCRef context )
{
  return str1515.value;
}

static SlagObject* CmdLiteralNull__to_cs( SXCRef context )
{
  return str36.value;
}

static SlagObject* CmdLiteralNull__to_java( SXCRef context )
{
  return str36.value;
}

void CmdLiteralNull__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLiteralNull__type_name( SXCRef context )
{
  return str872.value;
}

void CmdVarAccess__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdVarAccess__type_name( SXCRef context )
{
  return str1042.value;
}

static SlagObject* CmdMemberVarAccess__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdMemberVarAccess*)context)->property_context), CallFn____Object(42,((ClassCmdMemberVarAccess*)context)->property_context) );
  return context;
}

static void CmdMemberVarAccess__finalize_structure_info( SXCRef context )
{
  CallFn__(21,((ClassCmdMemberVarAccess*)context)->property_context);
}

static void CmdMemberVarAccess__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdMemberVarAccess*)context)->property_context);
}

static SlagObject* CmdMemberVarAccess__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdMemberVarAccess*)context)->property_context), CallFn__CmdList__Object(1,((ClassCmdMemberVarAccess*)context)->property_context,local_0_arg_list) );
  return context;
}

void CmdMemberVarAccess__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdMemberVarAccess__type_name( SXCRef context )
{
  return str1129.value;
}

static SlagObject* CmdMemberVarRead__init__Token_Cmd_PropertyInfo( SXCRef context, SXCRef local_0_t_9255, SXCRef local_1_context_9254, SXCRef local_2_var_info_9253 )
{
  sxc_write_ref( &(((ClassCmdMemberVarRead*)context)->property_t), local_0_t_9255 );
  sxc_write_ref( &(((ClassCmdMemberVarRead*)context)->property_context), local_1_context_9254 );
  sxc_write_ref( &(((ClassCmdMemberVarRead*)context)->property_var_info), local_2_var_info_9253 );
  return context;
}

static SlagObject* CmdMemberVarRead__type( SXCRef context )
{
  return ((ClassPropertyInfo*)((ClassCmdMemberVarRead*)context)->property_var_info)->property_type;
}

void CmdMemberVarRead__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdMemberVarRead__type_name( SXCRef context )
{
  return str1130.value;
}

static SlagObject* CmdSingletonReference__init__Token_TypeInfo( SXCRef context, SXCRef local_0_t_8444, SXCRef local_1_of_type_8443 )
{
  sxc_write_ref( &(((ClassCmdSingletonReference*)context)->property_t), local_0_t_8444 );
  sxc_write_ref( &(((ClassCmdSingletonReference*)context)->property_of_type), local_1_of_type_8443 );
  if ((((ClassCmdSingletonReference*)context)->property_of_type == NULL))
  {
    SLAG_THROW( Error__init__String(type_ClassError.create(),str996.value) );
  }
  return context;
}

static SlagObject* CmdSingletonReference__create_duplicate( SXCRef context )
{
  return CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdSingletonReference*)context)->property_t,((ClassCmdSingletonReference*)context)->property_of_type);
}

static SlagObject* CmdSingletonReference__type( SXCRef context )
{
  return ((ClassCmdSingletonReference*)context)->property_of_type;
}

SlagObject* CmdSingletonReference__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CmdSingletonReference__type_name(context)),str61.value),((ClassTypeInfo*)((ClassCmdSingletonReference*)context)->property_of_type)->property_name),str62.value));
}

static SlagObject* CmdSingletonReference__resolve( SXCRef context )
{
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdSingletonReference*)context)->property_of_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0))
  {
    return CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdSingletonReference*)context)->property_t,CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdSingletonReference*)context)->property_t,TypeManager__get__String_Token(sxc_singletons[7],TypeInfo__manager_name(((ClassCmdSingletonReference*)context)->property_of_type),NULL)),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdSingletonReference*)context)->property_t,str1076.value,NULL)));
  }
  return context;
}

static SlagObject* CmdSingletonReference__finalize_calls( SXCRef context )
{
  if (!!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdSingletonReference*)context)->property_of_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmdSingletonReference*)context)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),Global__to_String__Object(sxc_singletons[21],((ClassCmdSingletonReference*)context)->property_of_type)),str1267.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdSingletonReference*)context)->property_of_type)),str1268.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdSingletonReference*)context)->property_of_type)),str1269.value)))) );
  }
  return context;
}

static SlagObject* CmdSingletonReference__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  return context;
}

static void CmdSingletonReference__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_singleton_reference)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassTypeInfo*)((ClassCmdSingletonReference*)context)->property_of_type)->property_index);
}

static SlagObject* CmdSingletonReference__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1695.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassTypeInfo*)((ClassCmdSingletonReference*)context)->property_of_type)->property_singleton_index,10))),str54.value));
}

static SlagObject* CmdSingletonReference__to_cs( SXCRef context )
{
  return String__opADD__String(str1936.value,TypeInfo__x_name(((ClassCmdSingletonReference*)context)->property_of_type));
}

static SlagObject* CmdSingletonReference__to_java( SXCRef context )
{
  return String__opADD__String(str2018.value,TypeInfo__x_name(((ClassCmdSingletonReference*)context)->property_of_type));
}

void CmdSingletonReference__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdSingletonReference__type_name( SXCRef context )
{
  return str997.value;
}

static SlagObject* CmdRange__init__Token_Cmd_Cmd_Cmd( SXCRef context, SXCRef local_0_t_8001, SXCRef local_1_first_8000, SXCRef local_2_last_7999, SXCRef local_3_increment_7998 )
{
  sxc_write_ref( &(((ClassCmdRange*)context)->property_t), local_0_t_8001 );
  sxc_write_ref( &(((ClassCmdRange*)context)->property_first), local_1_first_8000 );
  sxc_write_ref( &(((ClassCmdRange*)context)->property_last), local_2_last_7999 );
  sxc_write_ref( &(((ClassCmdRange*)context)->property_increment), local_3_increment_7998 );
  return context;
}

static SlagObject* CmdRange__type( SXCRef context )
{
  return CallFn____Object(0,((ClassCmdRange*)context)->property_first);
}

static SlagObject* CmdRange__resolve_range__String_Int32( SXCRef context, SXCRef local_0_range_name, SlagInt32 local_1_default_increment )
{
  SXCRef local_2_common_type;
  SXCRef local_3_range_type;

  sxc_write_ref( &(((ClassCmdRange*)context)->property_first), CallFn____Object(16,((ClassCmdRange*)context)->property_first) );
  sxc_write_ref( &(((ClassCmdRange*)context)->property_last), CallFn____Object(16,((ClassCmdRange*)context)->property_last) );
  local_2_common_type = SlagAnalyzer__determine_common_data_type__TypeInfo_TypeInfo(sxc_singletons[8],CallFn____Object(0,((ClassCmdRange*)context)->property_first),CallFn____Object(0,((ClassCmdRange*)context)->property_last));
  if ((((ClassCmdRange*)context)->property_increment != NULL))
  {
    sxc_write_ref( &(((ClassCmdRange*)context)->property_increment), CallFn____Object(16,((ClassCmdRange*)context)->property_increment) );
    local_2_common_type = SlagAnalyzer__determine_common_data_type__TypeInfo_TypeInfo(sxc_singletons[8],local_2_common_type,CallFn____Object(0,((ClassCmdRange*)context)->property_increment));
  }
  else
  {
    sxc_write_ref( &(((ClassCmdRange*)context)->property_increment), CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdRange*)context)->property_t,local_1_default_increment) );
  }
  sxc_write_ref( &(((ClassCmdRange*)context)->property_first), SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdRange*)context)->property_first,local_2_common_type,false) );
  sxc_write_ref( &(((ClassCmdRange*)context)->property_last), SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdRange*)context)->property_last,local_2_common_type,false) );
  sxc_write_ref( &(((ClassCmdRange*)context)->property_increment), SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdRange*)context)->property_increment,local_2_common_type,false) );
  local_3_range_type = TypeManager__get_type_reference__Token_String_TypeInfo(sxc_singletons[7],((ClassCmdRange*)context)->property_t,local_0_range_name,local_2_common_type);
  TypeInfo__resolve(local_3_range_type);
  return CmdUnresolvedNewObject__resolve(CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList(type_ClassCmdUnresolvedNewObject.create(),((ClassCmdRange*)context)->property_t,local_3_range_type,CmdList__init__Cmd_Cmd_Cmd(type_ClassCmdList.create(),((ClassCmdRange*)context)->property_first,((ClassCmdRange*)context)->property_last,((ClassCmdRange*)context)->property_increment)));
}

void CmdRange__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdRange__type_name( SXCRef context )
{
  return str897.value;
}

static SlagObject* CmdRangeLE__create_duplicate( SXCRef context )
{
  return CmdRange__init__Token_Cmd_Cmd_Cmd(type_ClassCmdRangeLE.create(),((ClassCmdRangeLE*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeLE*)context)->property_first),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeLE*)context)->property_last),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeLE*)context)->property_increment));
}

static SlagObject* CmdRangeLE__resolve( SXCRef context )
{
  return CmdRange__resolve_range__String_Int32(context,str1164.value,1);
}

void CmdRangeLE__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdRangeLE__type_name( SXCRef context )
{
  return str898.value;
}

static SlagObject* CmdStatement__finalize_calls( SXCRef context )
{
  return context;
}

static void CmdStatement__finalize_structure_info( SXCRef context )
{
}

static void CmdStatement__group_dynamic_methods( SXCRef context )
{
}

static SlagObject* CmdStatement__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  return context;
}

void CmdStatement__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdStatement__type_name( SXCRef context )
{
  return str682.value;
}

static SlagObject* Array_of_Mapping_of_Int32_and_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Mapping_of_Int32_and_Int32.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Mapping_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Mapping_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1020.value;
}

SlagObject* ArrayList_of_Mapping_of_Int32_and_Int32__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count8747;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count8747 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count8747))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Int32_and_Int32*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Mapping_of_Int32_and_Int32__init( SXCRef context )
{
  ArrayList_of_Mapping_of_Int32_and_Int32__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Mapping_of_Int32_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Mapping_of_Int32_and_Int32*)context)->property_data), type_ClassArray_of_Mapping_of_Int32_and_Int32.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Mapping_of_Int32_and_Int32__create_reader( SXCRef context )
{
  return ArrayReader_of_Mapping_of_Int32_and_Int32__init__Collection_of_Mapping_of_Int32_and_Int32_Array_of_Mapping_of_Int32_and_Int32_Int32_Int32(type_ClassArrayReader_of_Mapping_of_Int32_and_Int32.create(),context,((ClassArrayList_of_Mapping_of_Int32_and_Int32*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_Mapping_of_Int32_and_Int32__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_Mapping_of_Int32_and_Int32__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_Mapping_of_Int32_and_Int32__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_Mapping_of_Int32_and_Int32__add__Mapping_of_Int32_and_Int32( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_Mapping_of_Int32_and_Int32*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_Mapping_of_Int32_and_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Mapping_of_Int32_and_Int32__init__Int32(type_ClassArrayList_of_Mapping_of_Int32_and_Int32.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Mapping_of_Int32_and_Int32*)local_0_dup)->property_data,((ClassArrayList_of_Mapping_of_Int32_and_Int32*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_Mapping_of_Int32_and_Int32*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_Mapping_of_Int32_and_Int32__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_Mapping_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Mapping_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1021.value;
}

static SlagObject* HashTableBin_of_Int32_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  sxc_write_ref( &(((ClassHashTableBin_of_Int32_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Int32_and_Int32__init__Int32(type_ClassArrayList_of_Mapping_of_Int32_and_Int32.create(),local_0_initial_capacity) );
  return context;
}

static SlagInt32 HashTableBin_of_Int32_and_Int32__index_of_entry__Int32( SXCRef context, SlagInt32 local_0_key )
{
  SlagInt32 local_1_index;
  SlagInt32 local_2__count8607;

  {
    local_1_index = 0;
    local_2__count8607 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Int32_and_Int32*)context)->property_entries))->property_count;
    while ((local_1_index < local_2__count8607))
    {
      if ((((ClassMapping_of_Int32_and_Int32*)((ClassMapping_of_Int32_and_Int32*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Int32_and_Int32*)context)->property_entries))->property_data)->data))[local_1_index])))->property_key == local_0_key))
      {
        return local_1_index;
      }
      ++local_1_index;
    }
  }
  return -1;
}

static SlagObject* HashTableBin_of_Int32_and_Int32__find_entry__Int32( SXCRef context, SlagInt32 local_0_key )
{
  SlagInt32 local_1_index;

  local_1_index = HashTableBin_of_Int32_and_Int32__index_of_entry__Int32(context,local_0_key);
  if ((local_1_index == -1))
  {
    return NULL;
  }
  return ((ClassMapping_of_Int32_and_Int32*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Int32_and_Int32*)context)->property_entries))->property_data)->data))[local_1_index]));
}

static SlagLogical HashTableBin_of_Int32_and_Int32__add_entry__Int32_Int32( SXCRef context, SlagInt32 local_0_key, SlagInt32 local_1_value )
{
  SXCRef local_2_existing;

  local_2_existing = HashTableBin_of_Int32_and_Int32__find_entry__Int32(context,local_0_key);
  if ((local_2_existing == NULL))
  {
    ArrayList_of_Object__add__Object(((ClassHashTableBin_of_Int32_and_Int32*)context)->property_entries,Mapping_of_Int32_and_Int32__init__Int32_Int32(type_ClassMapping_of_Int32_and_Int32.create(),local_0_key,local_1_value));
    return true;
  }
  else
  {
    ((ClassMapping_of_Int32_and_Int32*)local_2_existing)->property_value = local_1_value;
    return false;
  }
}

static SlagLogical HashTableBin_of_Int32_and_Int32__add_entry__Mapping_of_Int32_and_Int32( SXCRef context, SXCRef local_0_entry )
{
  SXCRef local_1_existing;

  local_1_existing = HashTableBin_of_Int32_and_Int32__find_entry__Int32(context,((ClassMapping_of_Int32_and_Int32*)local_0_entry)->property_key);
  if ((local_1_existing == NULL))
  {
    ArrayList_of_Object__add__Object(((ClassHashTableBin_of_Int32_and_Int32*)context)->property_entries,local_0_entry);
    return true;
  }
  else
  {
    ((ClassMapping_of_Int32_and_Int32*)local_1_existing)->property_value = ((ClassMapping_of_Int32_and_Int32*)local_0_entry)->property_value;
    return false;
  }
}

SlagObject* HashTableBin_of_Int32_and_Int32__to_String( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader8612;
  SXCRef local_2_entry;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_1__reader8612 = ArrayList_of_Mapping_of_Int32_and_Int32__create_reader(((ClassHashTableBin_of_Int32_and_Int32*)context)->property_entries);
  while (ArrayReader_of_Mapping_of_Int32_and_Int32__has_another(local_1__reader8612))
  {
    local_2_entry = ArrayReader_of_Mapping_of_Int32_and_Int32__read(local_1__reader8612);
    StringBuilder__print__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str52.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMapping_of_Int32_and_Int32*)local_2_entry)->property_key,10))),str53.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMapping_of_Int32_and_Int32*)local_2_entry)->property_value,10))),str54.value)));
  }
  return StringBuilder__to_String(local_0_buffer);
}

void HashTableBin_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBin_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1023.value;
}

static SlagObject* CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpEQ.create(),((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs));
}

static SlagObject* CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,str690.value);
  if ((sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs,&type_ClassCmdLiteralString) && sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs,&type_ClassCmdLiteralString)))
  {
    return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_t,String__opEQ__String(((ClassCmdLiteralString*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs)->property_value,((ClassCmdLiteralString*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs)->property_value));
  }
  if ((local_0_call != NULL))
  {
    {
      return local_0_call;
    }
  }
  SlagAnalyzer__cast_operands_to_standard_value_types__CmdBinary(sxc_singletons[8],context);
  return CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__optimize(context);
}

static SlagObject* CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__optimize( SXCRef context )
{
  SXCRef local_0_type;

  if ((sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    local_0_type = CallFn____Object(0,((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs);
    if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_t,(((ClassCmdLiteralInt64*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs)->property_value == ((ClassCmdLiteralInt64*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_t,(((ClassCmdLiteralInt32*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs)->property_value == ((ClassCmdLiteralInt32*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_t,(((ClassCmdLiteralReal64*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs)->property_value == ((ClassCmdLiteralReal64*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_t,(((ClassCmdLiteralReal32*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs)->property_value == ((ClassCmdLiteralReal32*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_t,(((ClassCmdLiteralLogical*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs)->property_value == ((ClassCmdLiteralLogical*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs)->property_value));
    }
  }
  else if (sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs,&type_ClassCmdLiteralLogical))
  {
    if (((ClassCmdLiteralLogical*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs)->property_value)
    {
      {
        return ((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs;
      }
    }
  }
  else if (sxc_instance_of(((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs,&type_ClassCmdLiteralLogical))
  {
    if (((ClassCmdLiteralLogical*)((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs)->property_value)
    {
      {
        return ((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs;
      }
    }
  }
  return context;
}

static void CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cmp_eq)->property_ordinal);
  CallFn__(7,((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_lhs);
  CallFn__(7,((ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq*)context)->property_rhs);
}

void CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__type_name( SXCRef context )
{
  return str877.value;
}

static SlagObject* CmdCmpEQ__to_cpp( SXCRef context )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)CallFn____Object(0,((ClassCmdCmpEQ*)context)->property_lhs))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(15,((ClassCmdCmpEQ*)context)->property_lhs)),str1676.value),CallFn____Object(15,((ClassCmdCmpEQ*)context)->property_rhs)),str62.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdCmpEQ*)context)->property_lhs)),str1677.value),CallFn____Object(15,((ClassCmdCmpEQ*)context)->property_rhs)),str62.value));
  }
}

static SlagObject* CmdCmpEQ__to_cs( SXCRef context )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)CallFn____Object(0,((ClassCmdCmpEQ*)context)->property_lhs))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(35,((ClassCmdCmpEQ*)context)->property_lhs)),str1676.value),CallFn____Object(35,((ClassCmdCmpEQ*)context)->property_rhs)),str62.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCmpEQ*)context)->property_lhs)),str1677.value),CallFn____Object(35,((ClassCmdCmpEQ*)context)->property_rhs)),str62.value));
  }
}

static SlagObject* CmdCmpEQ__to_java( SXCRef context )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)CallFn____Object(0,((ClassCmdCmpEQ*)context)->property_lhs))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(41,((ClassCmdCmpEQ*)context)->property_lhs)),str1676.value),CallFn____Object(41,((ClassCmdCmpEQ*)context)->property_rhs)),str62.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCmpEQ*)context)->property_lhs)),str1677.value),CallFn____Object(41,((ClassCmdCmpEQ*)context)->property_rhs)),str62.value));
  }
}

void CmdCmpEQ__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpEQ__type_name( SXCRef context )
{
  return str878.value;
}

static SlagInt32 HashTableValueReader_of_Int32_and_Int32__available( SXCRef context )
{
  if ((((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_entries != NULL))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* HashTableValueReader_of_Int32_and_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),HashTableValueReader_of_Int32_and_Int32__available(context));
  while ((((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_entries != NULL))
  {
    ArrayList_of_Int32__add__Int32(local_0_result_list,HashTableValueReader_of_Int32_and_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* HashTableValueReader_of_Int32_and_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Int32__to_String(HashTableValueReader_of_Int32_and_Int32__to_List(context));
}

static SlagObject* HashTableValueReader_of_Int32_and_Int32__init__Reader_of_HashTableBin_of_Int32_and_Int32( SXCRef context, SXCRef local_0_bins_8814 )
{
  sxc_write_ref( &(((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_bins), local_0_bins_8814 );
  if (CallFn____Logical(14,((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_bins))
  {
    sxc_write_ref( &(((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Int32_and_Int32__create_reader(((ClassHashTableBin_of_Int32_and_Int32*)CallFn____Object(45,((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_bins))->property_entries) );
  }
  HashTableValueReader_of_Int32_and_Int32__prep_next(context);
  return context;
}

static void HashTableValueReader_of_Int32_and_Int32__prep_next( SXCRef context )
{
  if ((((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_entries == NULL))
  {
    return;
  }
  while (!CallFn____Logical(14,((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_entries))
  {
    if (CallFn____Logical(14,((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_bins))
    {
      sxc_write_ref( &(((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Int32_and_Int32__create_reader(((ClassHashTableBin_of_Int32_and_Int32*)CallFn____Object(45,((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_bins))->property_entries) );
    }
    else
    {
      sxc_write_ref( &(((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_entries), NULL );
      return;
    }
  }
}

static SlagLogical HashTableValueReader_of_Int32_and_Int32__has_another( SXCRef context )
{
  return (((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_entries != NULL);
}

static SlagInt32 HashTableValueReader_of_Int32_and_Int32__read( SXCRef context )
{
  SlagInt32 local_0_result;

  local_0_result = ((ClassMapping_of_Int32_and_Int32*)CallFn____Object(45,((ClassHashTableValueReader_of_Int32_and_Int32*)context)->property_entries))->property_value;
  HashTableValueReader_of_Int32_and_Int32__prep_next(context);
  return local_0_result;
}

void HashTableValueReader_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableValueReader_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1029.value;
}

static SlagObject* CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo( SXCRef context, SXCRef local_0_t_9451, SXCRef local_1_var_info_9450 )
{
  sxc_write_ref( &(((ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment*)context)->property_t), local_0_t_9451 );
  sxc_write_ref( &(((ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment*)context)->property_var_info), local_1_var_info_9450 );
  return context;
}

static SlagObject* CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__create_duplicate( SXCRef context )
{
  return CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo(type_ClassCmdLocalVarIncrement.create(),((ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment*)context)->property_t,((ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment*)context)->property_var_info);
}

SlagObject* CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassMethodVarInfo*)((ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodVarInfo*)((ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment*)context)->property_var_info)->property_index,10))),str62.value));
}

static SlagObject* CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__resolve( SXCRef context )
{
  return context;
}

static void CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_local_var_increment)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassMethodVarInfo*)((ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment*)context)->property_var_info)->property_index);
}

void CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__type_name( SXCRef context )
{
  return str1183.value;
}

static SlagObject* CmdLocalVarIncrement__to_cpp( SXCRef context )
{
  return String__opADD__String(str366.value,CallFn____Object(2,((ClassCmdLocalVarIncrement*)context)->property_var_info));
}

static SlagObject* CmdLocalVarIncrement__to_cs( SXCRef context )
{
  return String__opADD__String(str366.value,CallFn____Object(2,((ClassCmdLocalVarIncrement*)context)->property_var_info));
}

static SlagObject* CmdLocalVarIncrement__to_java( SXCRef context )
{
  return String__opADD__String(str366.value,CallFn____Object(2,((ClassCmdLocalVarIncrement*)context)->property_var_info));
}

void CmdLocalVarIncrement__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLocalVarIncrement__type_name( SXCRef context )
{
  return str1184.value;
}

SlagObject* ArrayList_of_TypeTemplate__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count5683;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count5683 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count5683))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassTypeTemplate*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_TypeTemplate__init( SXCRef context )
{
  ArrayList_of_TypeTemplate__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_TypeTemplate__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_TypeTemplate*)context)->property_data), type_ClassArray_of_TypeTemplate.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_TypeTemplate__create_reader( SXCRef context )
{
  return ArrayReader_of_TypeTemplate__init__Collection_of_TypeTemplate_Array_of_TypeTemplate_Int32_Int32(type_ClassArrayReader_of_TypeTemplate.create(),context,((ClassArrayList_of_TypeTemplate*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_TypeTemplate__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_TypeTemplate__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_TypeTemplate__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_TypeTemplate__add__TypeTemplate( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_TypeTemplate*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_TypeTemplate__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_TypeTemplate__init__Int32(type_ClassArrayList_of_TypeTemplate.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_TypeTemplate*)local_0_dup)->property_data,((ClassArrayList_of_TypeTemplate*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_TypeTemplate*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_TypeTemplate__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_TypeTemplate__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_TypeTemplate__type_name( SXCRef context )
{
  return str665.value;
}

SlagObject* Mapping_of_String_and_TypeTemplate____to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_TypeTemplate__*)context)->property_key),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_String_and_TypeTemplate__*)context)->property_value)));
}

void Mapping_of_String_and_TypeTemplate____init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_TypeTemplate____type_name( SXCRef context )
{
  return str663.value;
}

SlagObject* HashTableBase_of_String_and_Token___and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_Token___and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_Token___and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_Token___and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_Token___and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_Token___and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_Token__.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_Token___and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_Token___and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_Token__*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_Token___and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_Token___and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_Token___and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_Token___and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_Token___and_Object_and_Object__type_name( SXCRef context )
{
  return str916.value;
}

void HashTable_of_String_and_Token____init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_Token____type_name( SXCRef context )
{
  return str917.value;
}

static SlagInt32 TokenReader__available( SXCRef context )
{
  if (TokenReader__has_another(context))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* TokenReader__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),TokenReader__available(context));
  while (TokenReader__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,TokenReader__read(context));
  }
  return local_0_result_list;
}

SlagObject* TokenReader__to_String( SXCRef context )
{
  return ArrayList_of_Token__to_String(TokenReader__to_List(context));
}

static SlagLogical TokenReader__has_another( SXCRef context )
{
  return ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)context)->property_buffer))->property_count != 0) && (((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)context)->property_buffer))->property_data)->data))[0]))))->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_eof));
}

static SlagObject* TokenReader__peek__Int32( SXCRef context, SlagInt32 local_0_reads_ahead )
{
  while ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)context)->property_buffer))->property_count < local_0_reads_ahead))
  {
    CallFn__(36,context);
  }
  return ((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)context)->property_buffer))->property_data)->data))[(local_0_reads_ahead-1)]));
}

static SlagObject* TokenReader__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassToken*)((ClassToken*)ArrayList_of_Object__remove__Int32(((ClassTokenReader*)context)->property_buffer,0)));
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)context)->property_buffer))->property_count == 0))
  {
    CallFn__(36,context);
  }
  return local_0_result;
}

void TokenReader__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassTokenReader*)context)->property_buffer), ArrayList_of_Token__init(type_ClassArrayList_of_Token.create()) );
}

SlagObject* TokenReader__type_name( SXCRef context )
{
  return str471.value;
}

static SlagObject* TemplateReader__init__ArrayList_of_Token_HashTable_of_String_and_Token__( SXCRef context, SXCRef local_0_tokens, SXCRef local_1_mappings_8131 )
{
  sxc_write_ref( &(((ClassTemplateReader*)context)->property_mappings), local_1_mappings_8131 );
  sxc_write_ref( &(((ClassTemplateReader*)context)->property_src), ArrayList_of_Token__create_reader(local_0_tokens) );
  sxc_write_ref( &(((ClassTemplateReader*)context)->property_first), ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_tokens))->property_data)->data))[0]))) );
  TemplateReader__prep_next(context);
  return context;
}

static void TemplateReader__prep_next( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_entry;

  if (CallFn____Logical(14,((ClassTemplateReader*)context)->property_src))
  {
    local_0_t = CallFn____Object(45,((ClassTemplateReader*)context)->property_src);
    if ((((ClassToken*)local_0_t)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_placeholder_id))
    {
      local_1_entry = ((ClassMapping_of_String_and_Token__*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_Token__*)((ClassTemplateReader*)context)->property_mappings)->property_data,((ClassToken*)local_0_t)->property_content));
      if ((local_1_entry != NULL))
      {
        ArrayList_of_Token__add__Readable_of_Token(((ClassTemplateReader*)context)->property_buffer,((ClassMapping_of_String_and_Token__*)local_1_entry)->property_value);
      }
      else
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str919.value),((ClassToken*)local_0_t)->property_content),str920.value)))) );
      }
    }
    else
    {
      ArrayList_of_Object__add__Object(((ClassTemplateReader*)context)->property_buffer,local_0_t);
    }
  }
  else
  {
    ArrayList_of_Object__add__Object(((ClassTemplateReader*)context)->property_buffer,Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_eof,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)((ClassTemplateReader*)context)->property_first)->property_file_index]))),((ClassToken*)((ClassTemplateReader*)context)->property_first)->property_pos,NULL));
  }
}

void TemplateReader__init_object( SXCRef context )
{
  TokenReader__init_object(context);
}

SlagObject* TemplateReader__type_name( SXCRef context )
{
  return str921.value;
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9469, SXCRef local_1_var_info_9468, SXCRef local_2_operand_9467 )
{
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign*)context)->property_t), local_0_t_9469 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign*)context)->property_var_info), local_1_var_info_9468 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign*)context)->property_operand), local_2_operand_9467 );
  return context;
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__create_duplicate( SXCRef context )
{
  return CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarDivAndAssign.create(),((ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign*)context)->property_t,((ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign*)context)->property_operand));
}

SlagObject* CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign*)context)->property_var_info)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__resolve( SXCRef context )
{
  return context;
}

static void CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_local_var_div_and_assign)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign*)context)->property_operand);
}

void CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__type_name( SXCRef context )
{
  return str1193.value;
}

static SlagObject* CmdLocalVarDivAndAssign__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarDivAndAssign*)context)->property_var_info)),str1653.value),CallFn____Object(2,((ClassCmdLocalVarDivAndAssign*)context)->property_var_info)),str390.value),CallFn____Object(15,((ClassCmdLocalVarDivAndAssign*)context)->property_operand)));
}

static SlagObject* CmdLocalVarDivAndAssign__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarDivAndAssign*)context)->property_var_info)),str1653.value),CallFn____Object(2,((ClassCmdLocalVarDivAndAssign*)context)->property_var_info)),str390.value),CallFn____Object(35,((ClassCmdLocalVarDivAndAssign*)context)->property_operand)));
}

static SlagObject* CmdLocalVarDivAndAssign__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarDivAndAssign*)context)->property_var_info)),str1653.value),CallFn____Object(2,((ClassCmdLocalVarDivAndAssign*)context)->property_var_info)),str390.value),CallFn____Object(41,((ClassCmdLocalVarDivAndAssign*)context)->property_operand)));
}

void CmdLocalVarDivAndAssign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLocalVarDivAndAssign__type_name( SXCRef context )
{
  return str1194.value;
}

SlagObject* HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_TypeInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_TypeInfo*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

static SlagObject* HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__create_reader( SXCRef context )
{
  return ((AspectReader_of_TypeInfo*)CoerceReader_of_TypeInfo__init__Reader_of_Object(type_ClassCoerceReader_of_TypeInfo.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

static SlagObject* HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__values( SXCRef context )
{
  return CoerceReader_of_TypeInfo__init__Reader_of_Object(type_ClassCoerceReader_of_TypeInfo.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object*)context)->property_data)->property_bins))));
}

void HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__type_name( SXCRef context )
{
  return str478.value;
}

void HashTable_of_String_and_TypeInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_TypeInfo__type_name( SXCRef context )
{
  return str479.value;
}

SlagObject* HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_TypeTemplate__.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_TypeTemplate__*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__type_name( SXCRef context )
{
  return str480.value;
}

void HashTable_of_String_and_TypeTemplate____init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_TypeTemplate____type_name( SXCRef context )
{
  return str481.value;
}

SlagObject* HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_TypeTemplate.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_TypeTemplate*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__type_name( SXCRef context )
{
  return str482.value;
}

void HashTable_of_String_and_TypeTemplate__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_TypeTemplate__type_name( SXCRef context )
{
  return str483.value;
}

void HashTable_of_String_and_MethodGroup__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_MethodGroup__type_name( SXCRef context )
{
  return str559.value;
}

static SlagObject* Array_of_MethodGroup__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_MethodGroup.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_MethodGroup__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_MethodGroup__type_name( SXCRef context )
{
  return str561.value;
}

SlagObject* ArrayList_of_MethodGroup__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count5798;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count5798 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count5798))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassMethodGroup*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_MethodGroup__init( SXCRef context )
{
  ArrayList_of_MethodGroup__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_MethodGroup__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_MethodGroup*)context)->property_data), type_ClassArray_of_MethodGroup.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_MethodGroup__create_reader( SXCRef context )
{
  return ArrayReader_of_MethodGroup__init__Collection_of_MethodGroup_Array_of_MethodGroup_Int32_Int32(type_ClassArrayReader_of_MethodGroup.create(),context,((ClassArrayList_of_MethodGroup*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_MethodGroup__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_MethodGroup__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_MethodGroup__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_MethodGroup__add__MethodGroup( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_MethodGroup*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_MethodGroup__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_MethodGroup__init__Int32(type_ClassArrayList_of_MethodGroup.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_MethodGroup*)local_0_dup)->property_data,((ClassArrayList_of_MethodGroup*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_MethodGroup*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_MethodGroup__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_MethodGroup__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_MethodGroup__type_name( SXCRef context )
{
  return str562.value;
}

SlagObject* StringTable__init( SXCRef context )
{
  return context;
}

static SlagObject* StringTable__create_reader( SXCRef context )
{
  return ArrayList_of_String__create_reader(((ClassStringTable*)context)->property_strings);
}

static SlagInt32 StringTable__get__String( SXCRef context, SXCRef local_0_st )
{
  SXCRef local_1_entry;
  SlagInt32 local_2_i;

  local_1_entry = ((ClassMapping_of_String_and_Int32*)GenericHashTable_of_Object_and_Int32__find__Object(((ClassHashTable_of_String_and_Int32*)((ClassStringTable*)context)->property_map)->property_data,local_0_st));
  if ((local_1_entry == NULL))
  {
    local_2_i = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassStringTable*)context)->property_strings))->property_count;
    GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassStringTable*)context)->property_map)->property_data,local_0_st,local_2_i);
    ArrayList_of_Object__add__Object(((ClassStringTable*)context)->property_strings,local_0_st);
    return local_2_i;
  }
  else
  {
    return ((ClassMapping_of_String_and_Int32*)local_1_entry)->property_value;
  }
}

void StringTable__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassStringTable*)context)->property_strings), ArrayList_of_String__init(type_ClassArrayList_of_String.create()) );
  sxc_write_ref( &(((ClassStringTable*)context)->property_map), HashTableBase_of_String_and_Int32_and_Object_and_Int32__init(type_ClassHashTable_of_String_and_Int32.create()) );
}

SlagObject* StringTable__type_name( SXCRef context )
{
  return str563.value;
}

static void TypeManager__init_singleton( SXCRef context )
{
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_int64), TypeManager__define_type__TypeInfo(context,TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),NULL,str564.value,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))),NULL)) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_int32), TypeManager__define_type__TypeInfo(context,TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),NULL,str577.value,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))),NULL)) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_char), TypeManager__define_type__TypeInfo(context,TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),NULL,str578.value,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))),NULL)) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_byte), TypeManager__define_type__TypeInfo(context,TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),NULL,str579.value,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))),NULL)) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_real64), TypeManager__define_type__TypeInfo(context,TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),NULL,str580.value,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))),NULL)) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_real32), TypeManager__define_type__TypeInfo(context,TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),NULL,str581.value,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))),NULL)) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_logical), TypeManager__define_type__TypeInfo(context,TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),NULL,str582.value,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))),NULL)) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_null), TypeManager__define_type__TypeInfo(context,TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),NULL,str36.value,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))),NULL)) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_object), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str0.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_generic_enum), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str585.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_string), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str19.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_string_builder), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str11.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_exception), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str21.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_global), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str12.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_reader_type), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str586.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_readable_type), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str587.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_list_type), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str588.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_generic_array), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str7.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_var), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str589.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_requires_cleanup), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str590.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_manager_creates), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str591.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_string_id_access), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str592.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_runtime), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str593.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_delegate_type), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,NULL,str104.value,NULL) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_main_class), NULL );
}

static void TypeManager__store__TypeTemplate( SXCRef context, SXCRef local_0_template )
{
  SXCRef local_1_entry;
  SXCRef local_2_list;

  local_1_entry = ((ClassMapping_of_String_and_TypeTemplate__*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_TypeTemplate__*)((ClassTypeManager*)context)->property_templates)->property_data,((ClassTypeTemplate*)local_0_template)->property_name));
  if ((local_1_entry != NULL))
  {
    ArrayList_of_Object__add__Object(((ClassMapping_of_String_and_TypeTemplate__*)local_1_entry)->property_value,local_0_template);
  }
  else
  {
    local_2_list = ArrayList_of_TypeTemplate__init__Int32(type_ClassArrayList_of_TypeTemplate.create(),1);
    ArrayList_of_Object__add__Object(local_2_list,local_0_template);
    GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_TypeTemplate__*)((ClassTypeManager*)context)->property_templates)->property_data,((ClassTypeTemplate*)local_0_template)->property_name,local_2_list);
  }
}

static void TypeManager__store_framework__TypeTemplate( SXCRef context, SXCRef local_0__framework )
{
  SXCRef local_1_entry;

  local_1_entry = ((ClassMapping_of_String_and_TypeTemplate*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_TypeTemplate*)((ClassTypeManager*)context)->property_frameworks)->property_data,((ClassTypeTemplate*)local_0__framework)->property_name));
  if ((local_1_entry != NULL))
  {
    SLAG_THROW( ((ClassSlagError*)PriorSlagError__init__Token_String_Token(type_ClassPriorSlagError.create(),((ClassTypeTemplate*)local_0__framework)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str909.value),((ClassTypeTemplate*)local_0__framework)->property_name),str569.value)),((ClassTypeTemplate*)((ClassMapping_of_String_and_TypeTemplate*)local_1_entry)->property_value)->property_t)) );
  }
  else
  {
    GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_TypeTemplate*)((ClassTypeManager*)context)->property_frameworks)->property_data,((ClassTypeTemplate*)local_0__framework)->property_name,local_0__framework);
  }
}

static SlagObject* TypeManager__get__String_Token( SXCRef context, SXCRef local_0_type_name, SXCRef local_1_t )
{
  SXCRef local_2_mapping;
  SXCRef local_3_type;
  SXCRef local_4_mesg;

  local_2_mapping = ((ClassMapping_of_String_and_TypeInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)context)->property_types)->property_data,local_0_type_name));
  if ((local_2_mapping != NULL))
  {
    local_3_type = ((ClassMapping_of_String_and_TypeInfo*)local_2_mapping)->property_value;
    if ((((ClassTypeInfo*)local_3_type)->property_qualifiers != NULL))
    {
      return ((ClassMapping_of_String_and_TypeInfo*)local_2_mapping)->property_value;
    }
  }
  local_4_mesg = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str931.value),local_0_type_name),str242.value));
  if ((local_1_t != NULL))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,local_4_mesg)) );
  }
  else
  {
    SLAG_THROW( SlagError__init__String_String(type_ClassSlagError.create(),str477.value,local_4_mesg) );
  }
}

static SlagObject* TypeManager__get_type_reference__Token_String_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_name, SXCRef local_2_subst_type )
{
  return TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(context,local_0_t,local_1_name,((ClassArrayList_of_ArrayList_of_Token*)((ClassArrayList_of_ArrayList_of_Token*)ArrayList_of_Object__add__Object(ArrayList_of_ArrayList_of_Token__init__Int32(type_ClassArrayList_of_ArrayList_of_Token.create(),1),((ClassArrayList_of_Token*)((ClassArrayList_of_Token*)ArrayList_of_Object__add__Object(ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),1),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_identifier,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_0_t)->property_file_index]))),((ClassToken*)local_0_t)->property_pos,((ClassTypeInfo*)local_2_subst_type)->property_name))))))));
}

static SlagObject* TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token( SXCRef context, SXCRef local_0_t, SXCRef local_1_name, SXCRef local_2_substitution_tokens )
{
  SXCRef local_3_buffer;
  SlagLogical local_4_first;
  SXCRef local_5__reader1879;
  SXCRef local_6_group;
  SXCRef local_7__reader1881;
  SXCRef local_8_token;
  SXCRef local_9_entry;
  SXCRef local_10_placeholder_type;

  if ((local_2_substitution_tokens != NULL))
  {
    local_3_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),local_1_name);
    StringBuilder__print__String(local_3_buffer,str364.value);
    local_4_first = true;
    local_5__reader1879 = ArrayList_of_ArrayList_of_Token__create_reader(local_2_substitution_tokens);
    while (ArrayReader_of_ArrayList_of_Token__has_another(local_5__reader1879))
    {
      local_6_group = ArrayReader_of_ArrayList_of_Token__read(local_5__reader1879);
      if (local_4_first)
      {
        local_4_first = false;
      }
      else
      {
        StringBuilder__print__String(local_3_buffer,str395.value);
      }
      local_7__reader1881 = ArrayList_of_Token__create_reader(local_6_group);
      while (ArrayReader_of_Token__has_another(local_7__reader1881))
      {
        local_8_token = ArrayReader_of_Token__read(local_7__reader1881);
        StringBuilder__print__String(local_3_buffer,Token__to_String(local_8_token));
      }
    }
    StringBuilder__print__String(local_3_buffer,str365.value);
    local_1_name = StringBuilder__to_String(local_3_buffer);
  }
  local_9_entry = ((ClassMapping_of_String_and_TypeInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)context)->property_types)->property_data,local_1_name));
  if ((local_9_entry != NULL))
  {
    return ((ClassMapping_of_String_and_TypeInfo*)local_9_entry)->property_value;
  }
  local_10_placeholder_type = TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),local_0_t,local_1_name,NULL,local_2_substitution_tokens);
  GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)context)->property_types)->property_data,local_1_name,local_10_placeholder_type);
  return local_10_placeholder_type;
}

static SlagObject* TypeManager__define_type__TypeInfo( SXCRef context, SXCRef local_0_type )
{
  SXCRef local_1_entry;
  SXCRef local_2_existing;

  local_1_entry = ((ClassMapping_of_String_and_TypeInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)context)->property_types)->property_data,((ClassTypeInfo*)local_0_type)->property_name));
  if ((local_1_entry == NULL))
  {
    GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)context)->property_types)->property_data,((ClassTypeInfo*)local_0_type)->property_name,local_0_type);
    if (((((ClassTypeManager*)context)->property_main_class == NULL) && ((((ClassQualifiers*)((ClassTypeInfo*)local_0_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0)))
    {
      sxc_write_ref( &(((ClassTypeManager*)context)->property_main_class), local_0_type );
    }
    return local_0_type;
  }
  else if ((((ClassTypeInfo*)((ClassMapping_of_String_and_TypeInfo*)local_1_entry)->property_value)->property_qualifiers != NULL))
  {
    SLAG_THROW( ((ClassSlagError*)PriorSlagError__init__Token_String_Token(type_ClassPriorSlagError.create(),((ClassTypeInfo*)local_0_type)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str568.value),((ClassTypeInfo*)local_0_type)->property_name),str569.value)),((ClassTypeInfo*)((ClassMapping_of_String_and_TypeInfo*)local_1_entry)->property_value)->property_t)) );
  }
  else
  {
    local_2_existing = ((ClassMapping_of_String_and_TypeInfo*)local_1_entry)->property_value;
    TypeInfo__init__TypeInfo(local_2_existing,local_0_type);
    return local_2_existing;
  }
}

void TypeManager__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassTypeManager*)context)->property_types), HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_TypeInfo.create(),256,sxc_int64_as_real64(0x4008000000000000LL)) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_templates), HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_TypeTemplate__.create(),128,sxc_int64_as_real64(0x4008000000000000LL)) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_frameworks), HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init(type_ClassHashTable_of_String_and_TypeTemplate.create()) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_used_frameworks), ArrayList_of_TypeInfo__init(type_ClassArrayList_of_TypeInfo.create()) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_method_groups), HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init(type_ClassHashTable_of_String_and_MethodGroup.create()) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_augments), ArrayList_of_TypeInfo__init(type_ClassArrayList_of_TypeInfo.create()) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_type_list), ArrayList_of_TypeInfo__init(type_ClassArrayList_of_TypeInfo.create()) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_method_list), ArrayList_of_MethodInfo__init(type_ClassArrayList_of_MethodInfo.create()) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_method_group_list), ArrayList_of_MethodGroup__init(type_ClassArrayList_of_MethodGroup.create()) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_identifiers), StringTable__init(type_ClassStringTable.create()) );
  sxc_write_ref( &(((ClassTypeManager*)context)->property_strings), StringTable__init(type_ClassStringTable.create()) );
}

SlagObject* TypeManager__type_name( SXCRef context )
{
  return str594.value;
}

static SlagObject* Array_of_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Object.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Object__type_name( SXCRef context )
{
  return str9.value;
}

SlagObject* SlagAnalyzer__init( SXCRef context )
{
  return context;
}

static SlagLogical SlagAnalyzer__analyze_parsed_types( SXCRef context )
{
  SXCRef local_0_parser;
  SXCRef local_1__reader653;
  SXCRef local_2_m;
  SXCRef local_3_parser;
  SXCRef local_4__reader655;
  SXCRef local_5_m;
  SXCRef local_6__reader656;
  SXCRef local_7_type;
  SXCRef local_8__reader659;
  SXCRef local_9_type;
  SXCRef local_11__reader664;
  SXCRef local_12_type;
  SXCRef local_13__reader668;
  SXCRef local_14_m;
  SXCRef local_17_m_init;
  SXCRef local_19__reader675;
  SXCRef local_20_type;
  SXCRef local_21__reader677;
  SXCRef local_22_type;
  SXCRef local_23__reader679;
  SXCRef local_24_type;
  SXCRef local_25__reader681;
  SXCRef local_26_m;
  SXCRef local_27__reader682;
  SXCRef local_28_m;
  SXCRef local_29__reader684;
  SXCRef local_30_type;
  SXCRef local_31__reader686;
  SXCRef local_32_group;
  SXCRef local_33__list687;
  SlagInt32 local_34__count687;
  SlagInt32 local_35__write_pos687;
  SlagInt32 local_36__read_pos687;
  SlagLogical local_37__kept687;
  SXCRef local_38__reader687;
  SXCRef local_39_m;
  SXCRef local_41__reader689;
  SXCRef local_42_type;
  SXCRef local_43__list690;
  SlagInt32 local_44__count690;
  SlagInt32 local_45__write_pos690;
  SlagInt32 local_46__read_pos690;
  SlagLogical local_47__kept690;
  SXCRef local_48__reader690;
  SXCRef local_49_m;
  SXCRef local_51__reader695;
  SXCRef local_52_m;
  SXCRef local_54__reader698;
  SXCRef local_55_type;
  SXCRef local_56__reader700;
  SXCRef local_57_m;
  SXCRef local_58__reader701;
  SXCRef local_59_t2;
  SXCRef local_60_entry;
  SXCRef local_61_m2;
  SXCRef local_62__reader704;
  SXCRef local_63_m;
  SXCRef local_64__reader705;
  SXCRef local_65_m;
  SXCRef local_66__reader707;
  SXCRef local_67_m;
  SlagInt32 local_69_num_method_groups;
  SXCRef local_70__reader710;
  SXCRef local_71_group;
  SlagInt32 local_72_m_index;
  SXCRef local_73__list712;
  SlagInt32 local_74__count712;
  SlagInt32 local_75__write_pos712;
  SlagInt32 local_76__read_pos712;
  SlagLogical local_77__kept712;
  SXCRef local_78__reader712;
  SXCRef local_79_m;
  SXCRef local_81__reader714;
  SXCRef local_82_type;
  SXCRef local_83__list715;
  SlagInt32 local_84__count715;
  SlagInt32 local_85__write_pos715;
  SlagInt32 local_86__read_pos715;
  SlagLogical local_87__kept715;
  SXCRef local_88__reader715;
  SXCRef local_89_m;
  SXCRef local_91__reader717;
  SXCRef local_92_type;
  SXCRef local_93__reader719;
  SXCRef local_94_m;
  SlagInt32 local_95_index;
  SXCRef local_96__reader722;
  SXCRef local_97_type;
  SXCRef local_98__reader723;
  SXCRef local_99_type;
  SXCRef local_100__reader724;
  SXCRef local_101_p;
  SXCRef local_102__reader725;
  SXCRef local_103_m;
  SXCRef local_104__reader726;
  SXCRef local_105_p;
  SXCRef local_106__reader727;
  SXCRef local_107_v;
  SlagInt32 local_108_next_singleton_index;
  SXCRef local_109__reader728;
  SXCRef local_110_type;
  SXCRef local_111__reader731;
  SXCRef local_112_m;

  if ((((ClassTypeManager*)sxc_singletons[7])->property_main_class == NULL))
  {
    Errors__add__SlagError(sxc_singletons[38],SlagError__init__String_String(type_ClassSlagError.create(),str477.value,str923.value));
    return false;
  }
  if ((((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_main_class)->property_placeholder_types != NULL))
  {
    Errors__add__SlagError(sxc_singletons[38],TypeInfo__error__String(((ClassTypeManager*)sxc_singletons[7])->property_main_class,str924.value));
    return false;
  }
  sxc_write_ref( &(((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_main_class)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_main_class)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))) );
  SlagAnalyzer__store_general_augments(context);
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassErrors*)sxc_singletons[38])->property_errors))->property_count != 0))
  {
    return false;
  }
  if ((((ClassSlagCompiler*)sxc_singletons[14])->property_slagdoc_type != NULL))
  {
    local_0_parser = SlagParser__init__TokenReader(type_ClassSlagParser.create(),SlagPreprocessor__init__String_String(type_ClassSlagPreprocessor.create(),str933.value,((ClassSlagCompiler*)sxc_singletons[14])->property_slagdoc_type));
    sxc_write_ref( &(((ClassTypeManager*)sxc_singletons[7])->property_doc_type), SlagParser__parse_data_type(local_0_parser) );
    TypeInfo__prep__Token(((ClassTypeManager*)sxc_singletons[7])->property_doc_type,NULL);
    local_1__reader653 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_doc_type)->property_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_1__reader653))
    {
      local_2_m = ArrayReader_of_MethodInfo__read(local_1__reader653);
      sxc_write_ref( &(((ClassMethodInfo*)local_2_m)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_2_m)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))) );
    }
    sxc_write_ref( &(((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_doc_type)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_doc_type)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))) );
  }
  if ((((ClassSlagCompiler*)sxc_singletons[14])->property_help_type != NULL))
  {
    local_3_parser = SlagParser__init__TokenReader(type_ClassSlagParser.create(),SlagPreprocessor__init__String_String(type_ClassSlagPreprocessor.create(),str1001.value,String__before_first__String(((ClassSlagCompiler*)sxc_singletons[14])->property_help_type,str294.value)));
    sxc_write_ref( &(((ClassTypeManager*)sxc_singletons[7])->property_help_type), SlagParser__parse_data_type(local_3_parser) );
    TypeInfo__prep__Token(((ClassTypeManager*)sxc_singletons[7])->property_help_type,NULL);
    local_4__reader655 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_help_type)->property_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_4__reader655))
    {
      local_5_m = ArrayReader_of_MethodInfo__read(local_4__reader655);
      sxc_write_ref( &(((ClassMethodInfo*)local_5_m)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_5_m)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))) );
    }
    sxc_write_ref( &(((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_help_type)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_help_type)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))) );
  }
  local_6__reader656 = ArrayList_of_TypeInfo__create_reader(((ClassArrayList_of_TypeInfo*)CallFn____Object(13,((AspectReader_of_TypeInfo*)((AspectReader_of_TypeInfo*)CoerceReader_of_TypeInfo__init__Reader_of_Object(type_ClassCoerceReader_of_TypeInfo.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data)->property_bins)))))))));
  while (ArrayReader_of_TypeInfo__has_another(local_6__reader656))
  {
    local_7_type = ArrayReader_of_TypeInfo__read(local_6__reader656);
    if ((((((ClassTypeInfo*)local_7_type)->property_qualifiers != NULL) && ((((ClassQualifiers*)((ClassTypeInfo*)local_7_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0)) && (local_7_type != ((ClassTypeManager*)sxc_singletons[7])->property_type_null)))
    {
      TypeInfo__discover_runtime_types(local_7_type);
    }
  }
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassErrors*)sxc_singletons[38])->property_errors))->property_count != 0))
  {
    return false;
  }
  local_8__reader659 = ArrayList_of_TypeInfo__create_reader(((ClassArrayList_of_TypeInfo*)CallFn____Object(13,((AspectReader_of_TypeInfo*)((AspectReader_of_TypeInfo*)CoerceReader_of_TypeInfo__init__Reader_of_Object(type_ClassCoerceReader_of_TypeInfo.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data)->property_bins)))))))));
  while (ArrayReader_of_TypeInfo__has_another(local_8__reader659))
  {
    local_9_type = ArrayReader_of_TypeInfo__read(local_8__reader659);
    if (((((ClassTypeInfo*)local_9_type)->property_qualifiers != NULL) && ((((ClassQualifiers*)((ClassTypeInfo*)local_9_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0)))
    {
      sxc_write_ref( &(((ClassTypeInfo*)local_9_type)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_9_type)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))) );
      SLAG_TRY
      {
        TypeInfo__prep__Token(local_9_type,NULL);
      }
      SLAG_CATCH(_err5)
      {
        SlagTypeInfo* _err5_type = _err5->type;
        if (_err5_type->instance_of(&type_ClassSlagError))
        {
          SXCRef local_10_err = _err5;
          if (Errors__add__SlagError(sxc_singletons[38],local_10_err))
          {
            return false;
          }
        }
        else
        {
          SLAG_THROW(_err5);
        }
      }
    }
  }
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassErrors*)sxc_singletons[38])->property_errors))->property_count != 0))
  {
    return false;
  }
  local_11__reader664 = ArrayList_of_TypeInfo__create_reader(((ClassArrayList_of_TypeInfo*)CallFn____Object(13,((AspectReader_of_TypeInfo*)((AspectReader_of_TypeInfo*)CoerceReader_of_TypeInfo__init__Reader_of_Object(type_ClassCoerceReader_of_TypeInfo.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data)->property_bins)))))))));
  while (ArrayReader_of_TypeInfo__has_another(local_11__reader664))
  {
    local_12_type = ArrayReader_of_TypeInfo__read(local_11__reader664);
    if (((((ClassTypeInfo*)local_12_type)->property_qualifiers != NULL) && ((((ClassQualifiers*)((ClassTypeInfo*)local_12_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0)))
    {
      SLAG_TRY
      {
        TypeInfo__resolve(local_12_type);
        if (((((ClassQualifiers*)((ClassTypeInfo*)local_12_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
        {
          local_13__reader668 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_12_type)->property_methods);
          while (ArrayReader_of_MethodInfo__has_another(local_13__reader668))
          {
            local_14_m = ArrayReader_of_MethodInfo__read(local_13__reader668);
            if (((((ClassQualifiers*)((ClassMethodInfo*)local_14_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0))
            {
              SLAG_TRY
              {
                MethodInfo__resolve(local_14_m);
              }
              SLAG_CATCH(_err6)
              {
                SlagTypeInfo* _err6_type = _err6->type;
                if (_err6_type->instance_of(&type_ClassSlagError))
                {
                  SXCRef local_15_err = _err6;
                  if (Errors__add__SlagError(sxc_singletons[38],local_15_err))
                  {
                    return false;
                  }
                }
                else
                {
                  SLAG_THROW(_err6);
                }
              }
            }
          }
        }
      }
      SLAG_CATCH(_err7)
      {
        SlagTypeInfo* _err7_type = _err7->type;
        if (_err7_type->instance_of(&type_ClassSlagError))
        {
          SXCRef local_16_err = _err7;
          Errors__add__SlagError(sxc_singletons[38],local_16_err);
          return false;
        }
        else
        {
          SLAG_THROW(_err7);
        }
      }
    }
  }
  SLAG_TRY
  {
    local_17_m_init = TypeInfo__find_method__String(((ClassTypeManager*)sxc_singletons[7])->property_main_class,str988.value);
    if ((local_17_m_init == NULL))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_main_class)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1262.value),Global__to_String__Object(sxc_singletons[21],((ClassTypeManager*)sxc_singletons[7])->property_main_class)),str1263.value)))) );
    }
    MethodInfo__resolve(local_17_m_init);
    ((ClassMethodInfo*)local_17_m_init)->property_called = true;
  }
  SLAG_CATCH(_err8)
  {
    SlagTypeInfo* _err8_type = _err8->type;
    if (_err8_type->instance_of(&type_ClassSlagError))
    {
      SXCRef local_18_err = _err8;
      Errors__add__SlagError(sxc_singletons[38],local_18_err);
    }
    else
    {
      SLAG_THROW(_err8);
    }
  }
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassErrors*)sxc_singletons[38])->property_errors))->property_count != 0))
  {
    return false;
  }
  local_19__reader675 = ((AspectReader_of_TypeInfo*)CoerceReader_of_TypeInfo__init__Reader_of_Object(type_ClassCoerceReader_of_TypeInfo.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data)->property_bins)))));
  while (CallFn____Logical(14,local_19__reader675))
  {
    local_20_type = CallFn____Object(45,local_19__reader675);
    if (((ClassTypeInfo*)local_20_type)->property_resolved)
    {
      SlagAnalyzer__collect_type__TypeInfo(context,local_20_type);
    }
  }
  local_21__reader677 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_21__reader677))
  {
    local_22_type = ArrayReader_of_TypeInfo__read(local_21__reader677);
    if (TypeInfo__instance_of__TypeInfo(local_22_type,((ClassTypeManager*)sxc_singletons[7])->property_type_requires_cleanup))
    {
      sxc_write_ref( &(((ClassTypeInfo*)local_22_type)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_22_type)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requires_cleanup)->property_flags))) );
    }
  }
  local_23__reader679 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_23__reader679))
  {
    local_24_type = ArrayReader_of_TypeInfo__read(local_23__reader679);
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_24_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      local_25__reader681 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_24_type)->property_methods);
      while (ArrayReader_of_MethodInfo__has_another(local_25__reader681))
      {
        local_26_m = ArrayReader_of_MethodInfo__read(local_25__reader681);
        ArrayList_of_Object__clear(((ClassCmdStatementList*)((ClassMethodInfo*)local_26_m)->property_body)->property_statements);
        ((ClassMethodInfo*)local_26_m)->property_supports_inlining = false;
      }
    }
    local_27__reader682 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_24_type)->property_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_27__reader682))
    {
      local_28_m = ArrayReader_of_MethodInfo__read(local_27__reader682);
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassMethodInfo*)local_28_m)->property_body)->property_statements))->property_count == 0))
      {
        sxc_write_ref( &(((ClassMethodInfo*)local_28_m)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_28_m)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_empty_body)->property_flags))) );
      }
    }
  }
  local_29__reader684 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_29__reader684))
  {
    local_30_type = ArrayReader_of_TypeInfo__read(local_29__reader684);
    if ((((((ClassQualifiers*)((ClassTypeInfo*)local_30_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0) && (local_30_type != ((ClassTypeManager*)sxc_singletons[7])->property_type_object)))
    {
      ((ClassTypeInfo*)TypeInfo__base_class(local_30_type))->property_is_extended = true;
    }
  }
  local_31__reader686 = ((AspectReader_of_MethodGroup*)CoerceReader_of_MethodGroup__init__Reader_of_Object(type_ClassCoerceReader_of_MethodGroup.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTable_of_String_and_MethodGroup*)((ClassTypeManager*)sxc_singletons[7])->property_method_groups)->property_data)->property_bins)))));
  while (CallFn____Logical(14,local_31__reader686))
  {
    local_32_group = CallFn____Object(45,local_31__reader686);
    local_33__list687 = ((ClassMethodGroup*)local_32_group)->property_methods;
    local_34__count687 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33__list687))->property_count;
    local_35__write_pos687 = 0;
    local_36__read_pos687 = 0;
    local_37__kept687 = false;
    SLAG_TRY
    {
      local_38__reader687 = ArrayList_of_MethodInfo__create_reader(local_33__list687);
      while (ArrayReader_of_MethodInfo__has_another(local_38__reader687))
      {
        local_39_m = ArrayReader_of_MethodInfo__read(local_38__reader687);
        if (local_37__kept687)
        {
          ++local_35__write_pos687;
        }
        else
        {
          local_37__kept687 = true;
        }
        sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33__list687))->property_data)->data))+local_35__write_pos687, local_39_m );
        ++local_36__read_pos687;
        if (((((((ClassQualifiers*)((ClassMethodInfo*)local_39_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0) || !((ClassMethodInfo*)local_39_m)->property_resolved) || ((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_39_m)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0)))
        {
          local_37__kept687 = false;
        }
      }
      if (local_37__kept687)
      {
        ++local_35__write_pos687;
      }
      ArrayList_of_Object__discard__Int32_Int32(local_33__list687,local_35__write_pos687,(local_36__read_pos687-1));
    }
    SLAG_CATCH(_err9)
    {
      SlagTypeInfo* _err9_type = _err9->type;
      if (_err9_type->instance_of(&type_ClassException))
      {
        SXCRef local_40__err9704 = _err9;
        if (local_37__kept687)
        {
          ++local_35__write_pos687;
        }
        ArrayList_of_Object__discard__Int32_Int32(local_33__list687,local_35__write_pos687,(local_36__read_pos687-1));
        SLAG_THROW( local_40__err9704 );
      }
      else
      {
        SLAG_THROW(_err9);
      }
    }
  }
  local_41__reader689 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_41__reader689))
  {
    local_42_type = ArrayReader_of_TypeInfo__read(local_41__reader689);
    local_43__list690 = ((ClassTypeInfo*)local_42_type)->property_methods;
    local_44__count690 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_43__list690))->property_count;
    local_45__write_pos690 = 0;
    local_46__read_pos690 = 0;
    local_47__kept690 = false;
    SLAG_TRY
    {
      local_48__reader690 = ArrayList_of_MethodInfo__create_reader(local_43__list690);
      while (ArrayReader_of_MethodInfo__has_another(local_48__reader690))
      {
        local_49_m = ArrayReader_of_MethodInfo__read(local_48__reader690);
        if (local_47__kept690)
        {
          ++local_45__write_pos690;
        }
        else
        {
          local_47__kept690 = true;
        }
        sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_43__list690))->property_data)->data))+local_45__write_pos690, local_49_m );
        ++local_46__read_pos690;
        if (((ClassMethodInfo*)local_49_m)->property_resolved)
        {
          if (!((ClassMethodInfo*)local_49_m)->property_collected)
          {
            ((ClassMethodInfo*)local_49_m)->property_collected = true;
            ((ClassMethodInfo*)local_49_m)->property_index = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeManager*)sxc_singletons[7])->property_method_list))->property_count;
            ArrayList_of_Object__add__Object(((ClassTypeManager*)sxc_singletons[7])->property_method_list,local_49_m);
            if (!MethodInfo__finalize_structure_info(local_49_m))
            {
              ArrayList_of_Object__discard__Int32_Int32(local_43__list690,local_45__write_pos690,(local_46__read_pos690-1));
              return false;
            }
          }
        }
        else
        {
          local_47__kept690 = false;
        }
      }
      if (local_47__kept690)
      {
        ++local_45__write_pos690;
      }
      ArrayList_of_Object__discard__Int32_Int32(local_43__list690,local_45__write_pos690,(local_46__read_pos690-1));
    }
    SLAG_CATCH(_err10)
    {
      SlagTypeInfo* _err10_type = _err10->type;
      if (_err10_type->instance_of(&type_ClassException))
      {
        SXCRef local_50__err9716 = _err10;
        if (local_47__kept690)
        {
          ++local_45__write_pos690;
        }
        ArrayList_of_Object__discard__Int32_Int32(local_43__list690,local_45__write_pos690,(local_46__read_pos690-1));
        SLAG_THROW( local_50__err9716 );
      }
      else
      {
        SLAG_THROW(_err10);
      }
    }
  }
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassErrors*)sxc_singletons[38])->property_errors))->property_count != 0))
  {
    return false;
  }
  local_51__reader695 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_51__reader695))
  {
    local_52_m = ArrayReader_of_MethodInfo__read(local_51__reader695);
    SLAG_TRY
    {
      if (!MethodInfo__finalize_calls(local_52_m))
      {
        return false;
      }
    }
    SLAG_CATCH(_err11)
    {
      SlagTypeInfo* _err11_type = _err11->type;
      if (_err11_type->instance_of(&type_ClassSlagError))
      {
        SXCRef local_53_err = _err11;
        Errors__add__SlagError(sxc_singletons[38],local_53_err);
        return false;
      }
      else
      {
        SLAG_THROW(_err11);
      }
    }
  }
  local_54__reader698 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_54__reader698))
  {
    local_55_type = ArrayReader_of_TypeInfo__read(local_54__reader698);
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_55_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      local_56__reader700 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_55_type)->property_methods);
      while (ArrayReader_of_MethodInfo__has_another(local_56__reader700))
      {
        local_57_m = ArrayReader_of_MethodInfo__read(local_56__reader700);
        local_58__reader701 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_55_type)->property_incorporating_classes);
        while (ArrayReader_of_TypeInfo__has_another(local_58__reader701))
        {
          local_59_t2 = ArrayReader_of_TypeInfo__read(local_58__reader701);
          local_60_entry = ((ClassMapping_of_String_and_MethodInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_59_t2)->property_methods_by_signature)->property_data,((ClassMethodInfo*)local_57_m)->property_signature));
          if ((local_60_entry != NULL))
          {
            local_61_m2 = ((ClassMapping_of_String_and_MethodInfo*)local_60_entry)->property_value;
            if (((ClassMethodInfo*)local_61_m2)->property_resolved)
            {
              ArrayList_of_Object__add__Object(((ClassMethodInfo*)local_57_m)->property_overrides,local_61_m2);
            }
          }
        }
      }
    }
  }
  sxc_write_ref( &(((ClassTypeManager*)sxc_singletons[7])->property_method_groups), HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init(type_ClassHashTable_of_String_and_MethodGroup.create()) );
  local_62__reader704 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_62__reader704))
  {
    local_63_m = ArrayReader_of_MethodInfo__read(local_62__reader704);
    sxc_write_ref( &(((ClassMethodInfo*)local_63_m)->property_group), NULL );
  }
  local_64__reader705 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_64__reader705))
  {
    local_65_m = ArrayReader_of_MethodInfo__read(local_64__reader705);
    if ((((ClassMethodInfo*)local_65_m)->property_body != NULL))
    {
      CmdStatementList__group_dynamic_methods(((ClassMethodInfo*)local_65_m)->property_body);
    }
  }
  local_66__reader707 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_66__reader707))
  {
    local_67_m = ArrayReader_of_MethodInfo__read(local_66__reader707);
    SLAG_TRY
    {
      if (!MethodInfo__finalize_calls(local_67_m))
      {
        return false;
      }
    }
    SLAG_CATCH(_err12)
    {
      SlagTypeInfo* _err12_type = _err12->type;
      if (_err12_type->instance_of(&type_ClassSlagError))
      {
        SXCRef local_68_err = _err12;
        Errors__add__SlagError(sxc_singletons[38],local_68_err);
        return false;
      }
      else
      {
        SLAG_THROW(_err12);
      }
    }
  }
  local_69_num_method_groups = 0;
  local_70__reader710 = ((AspectReader_of_MethodGroup*)CoerceReader_of_MethodGroup__init__Reader_of_Object(type_ClassCoerceReader_of_MethodGroup.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTable_of_String_and_MethodGroup*)((ClassTypeManager*)sxc_singletons[7])->property_method_groups)->property_data)->property_bins)))));
  while (CallFn____Logical(14,local_70__reader710))
  {
    local_71_group = CallFn____Object(45,local_70__reader710);
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodGroup*)local_71_group)->property_methods))->property_count > 1))
    {
      ((ClassMethodGroup*)local_71_group)->property_index = local_69_num_method_groups;
      ++local_69_num_method_groups;
      ArrayList_of_Object__add__Object(((ClassTypeManager*)sxc_singletons[7])->property_method_group_list,local_71_group);
      MethodGroup__mark_called(local_71_group);
    }
  }
  local_72_m_index = 0;
  local_73__list712 = ((ClassTypeManager*)sxc_singletons[7])->property_method_list;
  local_74__count712 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_73__list712))->property_count;
  local_75__write_pos712 = 0;
  local_76__read_pos712 = 0;
  local_77__kept712 = false;
  SLAG_TRY
  {
    local_78__reader712 = ArrayList_of_MethodInfo__create_reader(local_73__list712);
    while (ArrayReader_of_MethodInfo__has_another(local_78__reader712))
    {
      local_79_m = ArrayReader_of_MethodInfo__read(local_78__reader712);
      if (local_77__kept712)
      {
        ++local_75__write_pos712;
      }
      else
      {
        local_77__kept712 = true;
      }
      sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_73__list712))->property_data)->data))+local_75__write_pos712, local_79_m );
      ++local_76__read_pos712;
      if (!(((((ClassQualifiers*)((ClassMethodInfo*)local_79_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0) || ((ClassMethodInfo*)local_79_m)->property_called))
      {
        ((ClassMethodInfo*)local_79_m)->property_index = -1;
        local_77__kept712 = false;
      }
      else
      {
        ((ClassMethodInfo*)local_79_m)->property_index = local_72_m_index;
        ++local_72_m_index;
      }
    }
    if (local_77__kept712)
    {
      ++local_75__write_pos712;
    }
    ArrayList_of_Object__discard__Int32_Int32(local_73__list712,local_75__write_pos712,(local_76__read_pos712-1));
  }
  SLAG_CATCH(_err13)
  {
    SlagTypeInfo* _err13_type = _err13->type;
    if (_err13_type->instance_of(&type_ClassException))
    {
      SXCRef local_80__err9822 = _err13;
      if (local_77__kept712)
      {
        ++local_75__write_pos712;
      }
      ArrayList_of_Object__discard__Int32_Int32(local_73__list712,local_75__write_pos712,(local_76__read_pos712-1));
      SLAG_THROW( local_80__err9822 );
    }
    else
    {
      SLAG_THROW(_err13);
    }
  }
  local_81__reader714 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_81__reader714))
  {
    local_82_type = ArrayReader_of_TypeInfo__read(local_81__reader714);
    local_83__list715 = ((ClassTypeInfo*)local_82_type)->property_methods;
    local_84__count715 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_83__list715))->property_count;
    local_85__write_pos715 = 0;
    local_86__read_pos715 = 0;
    local_87__kept715 = false;
    SLAG_TRY
    {
      local_88__reader715 = ArrayList_of_MethodInfo__create_reader(local_83__list715);
      while (ArrayReader_of_MethodInfo__has_another(local_88__reader715))
      {
        local_89_m = ArrayReader_of_MethodInfo__read(local_88__reader715);
        if (local_87__kept715)
        {
          ++local_85__write_pos715;
        }
        else
        {
          local_87__kept715 = true;
        }
        sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_83__list715))->property_data)->data))+local_85__write_pos715, local_89_m );
        ++local_86__read_pos715;
        if ((((ClassMethodInfo*)local_89_m)->property_index == -1))
        {
          local_87__kept715 = false;
        }
      }
      if (local_87__kept715)
      {
        ++local_85__write_pos715;
      }
      ArrayList_of_Object__discard__Int32_Int32(local_83__list715,local_85__write_pos715,(local_86__read_pos715-1));
    }
    SLAG_CATCH(_err14)
    {
      SlagTypeInfo* _err14_type = _err14->type;
      if (_err14_type->instance_of(&type_ClassException))
      {
        SXCRef local_90__err9834 = _err14;
        if (local_87__kept715)
        {
          ++local_85__write_pos715;
        }
        ArrayList_of_Object__discard__Int32_Int32(local_83__list715,local_85__write_pos715,(local_86__read_pos715-1));
        SLAG_THROW( local_90__err9834 );
      }
      else
      {
        SLAG_THROW(_err14);
      }
    }
  }
  local_91__reader717 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_91__reader717))
  {
    local_92_type = ArrayReader_of_TypeInfo__read(local_91__reader717);
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_92_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      sxc_write_ref( &(((ClassTypeInfo*)local_92_type)->property_dispatch_table), ((ClassArrayList_of_MethodInfo*)ListOf_of_MethodInfo__create__Int32(sxc_singletons[33],local_69_num_method_groups)) );
      local_93__reader719 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_92_type)->property_methods);
      while (ArrayReader_of_MethodInfo__has_another(local_93__reader719))
      {
        local_94_m = ArrayReader_of_MethodInfo__read(local_93__reader719);
        if ((((ClassMethodInfo*)local_94_m)->property_group != NULL))
        {
          local_95_index = ((ClassMethodGroup*)((ClassMethodInfo*)local_94_m)->property_group)->property_index;
          if ((local_95_index >= 0))
          {
            sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_92_type)->property_dispatch_table))->property_data)->data))+local_95_index, local_94_m );
          }
        }
      }
    }
  }
  local_96__reader722 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_96__reader722))
  {
    local_97_type = ArrayReader_of_TypeInfo__read(local_96__reader722);
    StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,((ClassTypeInfo*)local_97_type)->property_name);
  }
  local_98__reader723 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_98__reader723))
  {
    local_99_type = ArrayReader_of_TypeInfo__read(local_98__reader723);
    local_100__reader724 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_99_type)->property_properties);
    while (CallFn____Logical(14,local_100__reader724))
    {
      local_101_p = CallFn____Object(45,local_100__reader724);
      StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,((ClassPropertyInfo*)local_101_p)->property_name);
    }
    local_102__reader725 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_99_type)->property_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_102__reader725))
    {
      local_103_m = ArrayReader_of_MethodInfo__read(local_102__reader725);
      StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,((ClassMethodInfo*)local_103_m)->property_name);
      local_104__reader726 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_103_m)->property_parameters);
      while (CallFn____Logical(14,local_104__reader726))
      {
        local_105_p = CallFn____Object(45,local_104__reader726);
        StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,((ClassTypeInfo*)((ClassParameterInfo*)local_105_p)->property_type)->property_name);
      }
      local_106__reader727 = ArrayList_of_LocalVarInfo__create_reader(((ClassMethodInfo*)local_103_m)->property_local_vars);
      while (ArrayReader_of_LocalVarInfo__has_another(local_106__reader727))
      {
        local_107_v = ArrayReader_of_LocalVarInfo__read(local_106__reader727);
        StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,((ClassTypeInfo*)((ClassLocalVarInfo*)local_107_v)->property_type)->property_name);
      }
    }
  }
  local_108_next_singleton_index = 0;
  local_109__reader728 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_109__reader728))
  {
    local_110_type = ArrayReader_of_TypeInfo__read(local_109__reader728);
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_110_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
    {
      if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_110_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0))
      {
        sxc_write_ref( &(((ClassTypeInfo*)local_110_type)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_110_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),~((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags)))->property_flags))) );
      }
      else
      {
        ((ClassTypeInfo*)local_110_type)->property_singleton_index = local_108_next_singleton_index;
        ++local_108_next_singleton_index;
      }
    }
  }
  local_111__reader731 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_111__reader731))
  {
    local_112_m = ArrayReader_of_MethodInfo__read(local_111__reader731);
    MethodInfo__calculate_local_var_offsets(local_112_m);
  }
  if ((((ClassTypeManager*)sxc_singletons[7])->property_doc_type != NULL))
  {
    TypeInfo__write_slagdoc(((ClassTypeManager*)sxc_singletons[7])->property_doc_type);
  }
  if ((((ClassTypeManager*)sxc_singletons[7])->property_help_type != NULL))
  {
    TypeInfo__write_help(((ClassTypeManager*)sxc_singletons[7])->property_help_type);
  }
  return true;
}

static void SlagAnalyzer__collect_type__TypeInfo( SXCRef context, SXCRef local_0_type )
{
  SXCRef local_1__reader735;
  SXCRef local_2_p;
  SXCRef local_3__reader736;
  SXCRef local_4_b;

  if (((ClassTypeInfo*)local_0_type)->property_collected)
  {
    return;
  }
  ((ClassTypeInfo*)local_0_type)->property_collected = true;
  local_1__reader735 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_0_type)->property_properties);
  while (CallFn____Logical(14,local_1__reader735))
  {
    local_2_p = CallFn____Object(45,local_1__reader735);
    SlagAnalyzer__collect_type__TypeInfo(context,((ClassPropertyInfo*)local_2_p)->property_type);
  }
  local_3__reader736 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_0_type)->property_flat_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_3__reader736))
  {
    local_4_b = ArrayReader_of_TypeInfo__read(local_3__reader736);
    SlagAnalyzer__collect_type__TypeInfo(context,local_4_b);
  }
  ((ClassTypeInfo*)local_0_type)->property_index = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeManager*)sxc_singletons[7])->property_type_list))->property_count;
  ArrayList_of_Object__add__Object(((ClassTypeManager*)sxc_singletons[7])->property_type_list,local_0_type);
}

static void SlagAnalyzer__store_general_augments( SXCRef context )
{
  SXCRef local_0__reader737;
  SXCRef local_1_template_group;
  SXCRef local_2__list738;
  SlagInt32 local_3__count738;
  SlagInt32 local_4__write_pos738;
  SlagInt32 local_5__read_pos738;
  SlagLogical local_6__kept738;
  SXCRef local_7__reader738;
  SXCRef local_8_template;
  SXCRef local_9_entry;
  SXCRef local_10_aug;
  SXCRef local_11_t;
  SXCRef local_12_mappings;
  SXCRef local_13_parser;
  SXCRef local_15__reader742;
  SXCRef local_16_aug;
  SXCRef local_17_target;
  SXCRef local_18__reader744;
  SXCRef local_19_p;
  SXCRef local_20__reader745;
  SXCRef local_21_m;

  local_0__reader737 = ((AspectReader_of_TypeTemplate__*)CoerceReader_of_TypeTemplate____init__Reader_of_Object(type_ClassCoerceReader_of_TypeTemplate__.create(),((AspectReader_of_Object*)HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableValueReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTable_of_String_and_TypeTemplate__*)ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassTypeManager*)sxc_singletons[7])->property_templates))->property_data)->property_bins)))));
  while (CallFn____Logical(14,local_0__reader737))
  {
    local_1_template_group = CallFn____Object(45,local_0__reader737);
    local_2__list738 = local_1_template_group;
    local_3__count738 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2__list738))->property_count;
    local_4__write_pos738 = 0;
    local_5__read_pos738 = 0;
    local_6__kept738 = false;
    SLAG_TRY
    {
      local_7__reader738 = ArrayList_of_TypeTemplate__create_reader(local_2__list738);
      while (ArrayReader_of_TypeTemplate__has_another(local_7__reader738))
      {
        local_8_template = ArrayReader_of_TypeTemplate__read(local_7__reader738);
        if (local_6__kept738)
        {
          ++local_4__write_pos738;
        }
        else
        {
          local_6__kept738 = true;
        }
        sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2__list738))->property_data)->data))+local_4__write_pos738, local_8_template );
        ++local_5__read_pos738;
        if ((((((ClassQualifiers*)((ClassTypeTemplate*)local_8_template)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_augment)->property_flags) != 0) && (((ClassTypeTemplate*)local_8_template)->property_placeholder_types == NULL)))
        {
          local_9_entry = ((ClassMapping_of_String_and_TypeInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,((ClassTypeTemplate*)local_8_template)->property_name));
          if (((local_9_entry != NULL) && (((ClassTypeInfo*)((ClassMapping_of_String_and_TypeInfo*)local_9_entry)->property_value)->property_qualifiers != NULL)))
          {
            local_10_aug = TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),((ClassTypeTemplate*)local_8_template)->property_t,((ClassTypeTemplate*)local_8_template)->property_name,NULL,NULL);
            local_11_t = ((ClassTypeTemplate*)local_8_template)->property_t;
            local_12_mappings = HashTableBase_of_String_and_Token___and_Object_and_Object__init(type_ClassHashTable_of_String_and_Token__.create());
            GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_Token__*)local_12_mappings)->property_data,str929.value,((ClassArrayList_of_Token*)((ClassArrayList_of_Token*)ArrayList_of_Object__add__Object(ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),1),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_identifier,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_11_t)->property_file_index]))),((ClassToken*)local_11_t)->property_pos,((ClassTypeTemplate*)local_8_template)->property_name)))));
            local_13_parser = SlagParser__init__TokenReader(type_ClassSlagParser.create(),NULL);
            SlagParser__parse_type_def__TokenReader_TypeInfo_Qualifiers_Int32_String(local_13_parser,TemplateReader__init__ArrayList_of_Token_HashTable_of_String_and_Token__(type_ClassTemplateReader.create(),((ClassTypeTemplate*)local_8_template)->property_definition,local_12_mappings),local_10_aug,((ClassTypeTemplate*)local_8_template)->property_qualifiers,((ClassTypeTemplate*)local_8_template)->property_end_type,((ClassTypeTemplate*)local_8_template)->property_end_symbol);
            local_10_aug = ((ClassTypeInfo*)((ClassTypeInfo*)ArrayList_of_Object__remove__Int32(((ClassTypeManager*)sxc_singletons[7])->property_augments,0)));
            ArrayList_of_Object__add__Object(((ClassTypeManager*)sxc_singletons[7])->property_augments,local_10_aug);
            local_6__kept738 = false;
            if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_template_group))->property_count == 0))
            {
              GenericHashTable_of_Object_and_Object__remove__Object(((ClassHashTable_of_String_and_TypeTemplate__*)((ClassTypeManager*)sxc_singletons[7])->property_templates)->property_data,((ClassTypeTemplate*)local_8_template)->property_name);
            }
          }
        }
      }
      if (local_6__kept738)
      {
        ++local_4__write_pos738;
      }
      ArrayList_of_Object__discard__Int32_Int32(local_2__list738,local_4__write_pos738,(local_5__read_pos738-1));
    }
    SLAG_CATCH(_err15)
    {
      SlagTypeInfo* _err15_type = _err15->type;
      if (_err15_type->instance_of(&type_ClassException))
      {
        SXCRef local_14__err8167 = _err15;
        if (local_6__kept738)
        {
          ++local_4__write_pos738;
        }
        ArrayList_of_Object__discard__Int32_Int32(local_2__list738,local_4__write_pos738,(local_5__read_pos738-1));
        SLAG_THROW( local_14__err8167 );
      }
      else
      {
        SLAG_THROW(_err15);
      }
    }
  }
  local_15__reader742 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_augments);
  while (ArrayReader_of_TypeInfo__has_another(local_15__reader742))
  {
    local_16_aug = ArrayReader_of_TypeInfo__read(local_15__reader742);
    SLAG_TRY
    {
      local_17_target = TypeManager__get__String_Token(sxc_singletons[7],((ClassTypeInfo*)local_16_aug)->property_name,((ClassTypeInfo*)local_16_aug)->property_t);
      ArrayList_of_TypeInfo__add__Readable_of_TypeInfo(((ClassTypeInfo*)local_17_target)->property_base_types,((ClassTypeInfo*)local_16_aug)->property_base_types);
      local_18__reader744 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_16_aug)->property_properties);
      while (CallFn____Logical(14,local_18__reader744))
      {
        local_19_p = CallFn____Object(45,local_18__reader744);
        sxc_write_ref( &(((ClassPropertyInfo*)local_19_p)->property_type_context), local_17_target );
        ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_17_target)->property_properties,local_19_p);
      }
      local_20__reader745 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_16_aug)->property_methods);
      while (ArrayReader_of_MethodInfo__has_another(local_20__reader745))
      {
        local_21_m = ArrayReader_of_MethodInfo__read(local_20__reader745);
        sxc_write_ref( &(((ClassMethodInfo*)local_21_m)->property_type_context), local_17_target );
        ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_17_target)->property_methods,local_21_m);
      }
      ArrayList_of_TypeInfo__add__Readable_of_TypeInfo(((ClassTypeInfo*)local_17_target)->property_singletons,((ClassTypeInfo*)local_16_aug)->property_singletons);
      ArrayList_of_CategoryInfo__add__Readable_of_CategoryInfo(((ClassTypeInfo*)local_17_target)->property_categories,((ClassTypeInfo*)local_16_aug)->property_categories);
    }
    SLAG_CATCH(_err16)
    {
      SlagTypeInfo* _err16_type = _err16->type;
      if (_err16_type->instance_of(&type_ClassSlagError))
      {
        SXCRef local_22_err = _err16;
        Errors__add__SlagError(sxc_singletons[38],local_22_err);
      }
      else
      {
        SLAG_THROW(_err16);
      }
    }
  }
  ArrayList_of_Object__clear(((ClassTypeManager*)sxc_singletons[7])->property_augments);
}

static SlagObject* SlagAnalyzer__make_zero_value__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_for_type )
{
  SXCRef local_2_args;
  SXCRef local_3__reader747;
  SXCRef local_4_v;
  SXCRef local_5_which_748;

  if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_for_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return CmdLiteralNull__init__Token(type_ClassCmdLiteralNull.create(),local_0_t);
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_for_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    local_2_args = CmdList__init__Int32(type_ClassCmdList.create(),2);
    local_3__reader747 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_1_for_type)->property_properties);
    while (CallFn____Logical(14,local_3__reader747))
    {
      local_4_v = CallFn____Object(45,local_3__reader747);
      ArrayList_of_Object__add__Object(local_2_args,SlagAnalyzer__make_zero_value__Token_TypeInfo(context,local_0_t,((ClassPropertyInfo*)local_4_v)->property_type));
    }
    return CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList(type_ClassCmdUnresolvedNewObject.create(),local_0_t,local_1_for_type,local_2_args);
  }
  else
  {
    local_5_which_748 = local_1_for_type;
    if ((local_5_which_748 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),local_0_t,0LL);
    }
    else if ((local_5_which_748 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_0_t,0);
    }
    else if ((local_5_which_748 == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
    {
      return CmdLiteralChar__init__Token_Char(type_ClassCmdLiteralChar.create(),local_0_t,((SlagChar)0));
    }
    else if ((local_5_which_748 == ((ClassTypeManager*)sxc_singletons[7])->property_type_byte))
    {
      return CmdLiteralByte__init__Token_Byte(type_ClassCmdLiteralByte.create(),local_0_t,((SlagByte)0));
    }
    else if ((local_5_which_748 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      return CmdLiteralReal64__init__Token_Real64(type_ClassCmdLiteralReal64.create(),local_0_t,sxc_int64_as_real64(0x0000000000000000LL));
    }
    else if ((local_5_which_748 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      return CmdLiteralReal32__init__Token_Real32(type_ClassCmdLiteralReal32.create(),local_0_t,0.0);
    }
    else if ((local_5_which_748 == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),local_0_t,false);
    }
    else
    {
      SLAG_THROW( Error__init__String(type_ClassError.create(),String__opADD__String(str1244.value,((ClassTypeInfo*)local_1_for_type)->property_name)) );
    }
  }
}

static SlagObject* SlagAnalyzer__visit_with_implicit_context__Cmd_TypeInfo( SXCRef context, SXCRef local_0_cmd, SXCRef local_1_type )
{
  ArrayList_of_Object__add__Object(((ClassContext*)sxc_singletons[10])->property_implicit_context,local_1_type);
  SLAG_TRY
  {
    local_0_cmd = CallFn____Object(16,local_0_cmd);
    ArrayList_of_Object__discard_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
  }
  SLAG_CATCH(_err17)
  {
    SlagTypeInfo* _err17_type = _err17->type;
    if (_err17_type->instance_of(&type_ClassSlagError))
    {
      SXCRef local_2_err = _err17;
      ArrayList_of_Object__discard_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
      SLAG_THROW( local_2_err );
    }
    else
    {
      SLAG_THROW(_err17);
    }
  }
  SlagAnalyzer__require_value__Cmd(context,local_0_cmd);
  return local_0_cmd;
}

static SlagObject* SlagAnalyzer__require_value__Cmd( SXCRef context, SXCRef local_0_expr )
{
  SXCRef local_1_type;

  local_1_type = CallFn____Object(0,local_0_expr);
  if ((local_1_type != NULL))
  {
    return local_1_type;
  }
  if (sxc_instance_of(local_0_expr,&type_ClassCmdCall))
  {
    SLAG_THROW( Cmd__error__String(local_0_expr,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1058.value),((ClassMethodInfo*)((ClassCmdCall*)local_0_expr)->property_method_info)->property_full_signature),str1059.value))) );
  }
  else
  {
    SLAG_THROW( Cmd__error__String(local_0_expr,str1060.value) );
  }
}

static void SlagAnalyzer__require_value__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type )
{
  if ((local_1_type == NULL))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str1070.value)) );
  }
}

static void SlagAnalyzer__require_reference__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type )
{
  if (((local_1_type == NULL) || !((((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0)))
  {
    SLAG_THROW( SlagAnalyzer__bad_value_mesg__Token_TypeInfo_String(context,local_0_t,local_1_type,str1136.value) );
  }
}

static SlagObject* SlagAnalyzer__bad_value_mesg__Cmd_String_Token( SXCRef context, SXCRef local_0_cmd, SXCRef local_1_expected, SXCRef local_2_t )
{
  SXCRef local_3_type;

  if ((local_2_t == NULL))
  {
    local_2_t = ((ClassCmd*)local_0_cmd)->property_t;
  }
  local_3_type = CallFn____Object(0,local_0_cmd);
  return SlagAnalyzer__bad_value_mesg__Token_TypeInfo_String(context,local_2_t,local_3_type,local_1_expected);
}

static SlagObject* SlagAnalyzer__bad_value_mesg__Token_TypeInfo_String( SXCRef context, SXCRef local_0_t, SXCRef local_1_type, SXCRef local_2_expected )
{
  SXCRef local_3_mesg;

  local_3_mesg = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1079.value),local_2_expected),str1080.value));
  if ((local_1_type == NULL))
  {
    local_3_mesg = String__opADD__String(local_3_mesg,str1081.value);
  }
  else
  {
    local_3_mesg = String__opADD__String(local_3_mesg,String__opADD__String(((ClassTypeInfo*)local_1_type)->property_name,str62.value));
  }
  return ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,local_3_mesg));
}

static void SlagAnalyzer__require_standard_numerical__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type )
{
  if (((local_1_type == NULL) || !SlagAnalyzer__type_is_standard_numerical__TypeInfo(context,local_1_type)))
  {
    SLAG_THROW( SlagAnalyzer__bad_value_mesg__Token_TypeInfo_String(context,local_0_t,local_1_type,str1179.value) );
  }
}

static void SlagAnalyzer__require_standard_primitive__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type )
{
  if (((local_1_type == NULL) || !(SlagAnalyzer__type_is_standard_numerical__TypeInfo(context,local_1_type) || TypeInfo__is_logical(local_1_type))))
  {
    SLAG_THROW( SlagAnalyzer__bad_value_mesg__Token_TypeInfo_String(context,local_0_t,local_1_type,str1253.value) );
  }
}

static void SlagAnalyzer__require_standard_integer__Cmd( SXCRef context, SXCRef local_0_cmd )
{
  SXCRef local_1_type;

  local_1_type = CallFn____Object(0,local_0_cmd);
  if (((local_1_type == NULL) || !((local_1_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32) || (local_1_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))))
  {
    SLAG_THROW( SlagAnalyzer__bad_value_mesg__Cmd_String_Token(context,local_0_cmd,str1078.value,NULL) );
  }
}

static void SlagAnalyzer__require_standard_integer_or_logical__Token_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type )
{
  if (((local_1_type == NULL) || !(((local_1_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32) || (local_1_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64)) || (local_1_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))))
  {
    SLAG_THROW( SlagAnalyzer__bad_value_mesg__Token_TypeInfo_String(context,local_0_t,local_1_type,str1161.value) );
  }
}

static SlagObject* SlagAnalyzer__require_type__Cmd_TypeInfo( SXCRef context, SXCRef local_0_cmd, SXCRef local_1_required_type )
{
  SXCRef local_2_type;

  local_2_type = CallFn____Object(0,local_0_cmd);
  if (((local_2_type == NULL) || !TypeInfo__instance_of__TypeInfo(local_2_type,local_1_required_type)))
  {
    SLAG_THROW( SlagAnalyzer__bad_value_mesg__Cmd_String_Token(context,local_0_cmd,String__opADD__String(str1109.value,((ClassTypeInfo*)local_1_required_type)->property_name),NULL) );
  }
  return local_2_type;
}

static void SlagAnalyzer__require_int32__Cmd( SXCRef context, SXCRef local_0_cmd )
{
  SXCRef local_1_type;

  local_1_type = CallFn____Object(0,local_0_cmd);
  if ((local_1_type != ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
  {
    SLAG_THROW( SlagAnalyzer__bad_value_mesg__Cmd_String_Token(context,local_0_cmd,str1082.value,NULL) );
  }
}

static void SlagAnalyzer__require_logical__Cmd_Token( SXCRef context, SXCRef local_0_expr, SXCRef local_1_t )
{
  SXCRef local_2_type;

  local_2_type = SlagAnalyzer__require_value__Cmd(context,local_0_expr);
  if (!TypeInfo__instance_of__TypeInfo(local_2_type,((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
  {
    SLAG_THROW( SlagAnalyzer__bad_value_mesg__Cmd_String_Token(context,local_0_expr,str1162.value,local_1_t) );
  }
}

static SlagLogical SlagAnalyzer__type_is_standard_numerical__TypeInfo( SXCRef context, SXCRef local_0_type )
{
  return (((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32) || (local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64)) || TypeInfo__is_real(local_0_type));
}

static SlagObject* SlagAnalyzer__cast_compatible__Cmd_TypeInfo( SXCRef context, SXCRef local_0_value, SXCRef local_1_to_type )
{
  SXCRef local_2_value_type;

  local_2_value_type = CallFn____Object(0,local_0_value);
  if ((((((ClassQualifiers*)((ClassTypeInfo*)local_2_value_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0) && !TypeInfo__instance_of__TypeInfo(local_2_value_type,local_1_to_type)))
  {
    return local_0_value;
  }
  return SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(context,local_0_value,local_1_to_type,false);
}

static SlagObject* SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical( SXCRef context, SXCRef local_0_code, SXCRef local_1_to_type, SlagLogical local_2_allow_logical )
{
  SXCRef local_3_code_type;

  local_3_code_type = SlagAnalyzer__require_value__Cmd(context,local_0_code);
  SlagAnalyzer__require_value__Token_TypeInfo(context,((ClassCmd*)local_0_code)->property_t,local_1_to_type);
  if ((local_3_code_type == local_1_to_type))
  {
    return local_0_code;
  }
  if ((!local_2_allow_logical && (TypeInfo__is_logical(local_3_code_type)^TypeInfo__is_logical(local_1_to_type))))
  {
    SLAG_THROW( Cmd__error__String(local_0_code,str1071.value) );
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_3_code_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_to_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
    {
      if ((TypeInfo__instance_of__TypeInfo(local_1_to_type,local_3_code_type) || ((((ClassQualifiers*)((ClassTypeInfo*)local_1_to_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0)))
      {
        return CmdCast__init__Token_Cmd_TypeInfo(type_ClassCmdNarrowingCast.create(),((ClassCmd*)local_0_code)->property_t,local_0_code,local_1_to_type);
      }
      else if (TypeInfo__instance_of__TypeInfo(local_3_code_type,local_1_to_type))
      {
        return CmdCast__init__Token_Cmd_TypeInfo(type_ClassCmdWideningCast.create(),((ClassCmd*)local_0_code)->property_t,local_0_code,local_1_to_type);
      }
      else
      {
        SLAG_THROW( Cmd__error__String(local_0_code,str1074.value) );
      }
    }
    else
    {
      return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,((ClassCmd*)local_0_code)->property_t,local_3_code_type,local_0_code,String__opADD__String(str1075.value,((ClassTypeInfo*)local_1_to_type)->property_name),CmdList__init__Int32(type_ClassCmdList.create(),2));
    }
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)local_3_code_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
  {
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_to_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
    {
      return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,((ClassCmd*)local_0_code)->property_t,local_1_to_type,NULL,str1062.value,CmdList__init__Cmd(type_ClassCmdList.create(),local_0_code));
    }
    else if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_to_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
    {
      if ((local_1_to_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
      {
        if (((local_3_code_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64) || (local_3_code_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32)))
        {
          return CmdCastToInt64__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToInt64.create(),((ClassCmd*)local_0_code)->property_t,local_0_code));
        }
        else
        {
          return CmdCastToInt64__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToInt64.create(),((ClassCmd*)local_0_code)->property_t,CmdCastToInt32__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToInt32.create(),((ClassCmd*)local_0_code)->property_t,local_0_code))));
        }
      }
      else if ((local_1_to_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
      {
        return CmdCastToInt32__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToInt32.create(),((ClassCmd*)local_0_code)->property_t,local_0_code));
      }
      else if ((local_1_to_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
      {
        return CmdCastToChar__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToChar.create(),((ClassCmd*)local_0_code)->property_t,CmdCastToInt32__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToInt32.create(),((ClassCmd*)local_0_code)->property_t,local_0_code))));
      }
      else if ((local_1_to_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_byte))
      {
        return CmdCastToByte__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToByte.create(),((ClassCmd*)local_0_code)->property_t,CmdCastToInt32__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToInt32.create(),((ClassCmd*)local_0_code)->property_t,local_0_code))));
      }
      else if ((local_1_to_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
      {
        if (TypeInfo__is_real(local_3_code_type))
        {
          return CmdCastToLogical__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToLogical.create(),((ClassCmd*)local_0_code)->property_t,CmdCastToReal64__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToReal64.create(),((ClassCmd*)local_0_code)->property_t,local_0_code))));
        }
        else
        {
          return CmdCastToLogical__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToLogical.create(),((ClassCmd*)local_0_code)->property_t,CmdCastToInt32__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToInt32.create(),((ClassCmd*)local_0_code)->property_t,local_0_code))));
        }
      }
      else if ((local_1_to_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
      {
        if ((((local_3_code_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64) || (local_3_code_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32)) || (local_3_code_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32)))
        {
          return CmdCastToReal64__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToReal64.create(),((ClassCmd*)local_0_code)->property_t,local_0_code));
        }
        else
        {
          return CmdCastToReal64__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToReal64.create(),((ClassCmd*)local_0_code)->property_t,CmdCastToInt32__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToInt32.create(),((ClassCmd*)local_0_code)->property_t,local_0_code))));
        }
      }
      else if ((local_1_to_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
      {
        if ((((local_3_code_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64) || (local_3_code_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64)) || (local_3_code_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32)))
        {
          return CmdCastToReal32__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToReal32.create(),((ClassCmd*)local_0_code)->property_t,local_0_code));
        }
        else
        {
          return CmdCastToReal32__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToReal32.create(),((ClassCmd*)local_0_code)->property_t,CmdCastToInt32__optimize(CmdUnary__init__Token_Cmd(type_ClassCmdCastToInt32.create(),((ClassCmd*)local_0_code)->property_t,local_0_code))));
        }
      }
      else
      {
        SLAG_THROW( Cmd__error__String(local_0_code,str1095.value) );
      }
    }
    else
    {
      SLAG_THROW( Cmd__error__String(local_0_code,str1096.value) );
    }
  }
  else
  {
    return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,((ClassCmd*)local_0_code)->property_t,((ClassContext*)sxc_singletons[10])->property_this_type,NULL,String__opADD__String(str1075.value,((ClassTypeInfo*)local_1_to_type)->property_name),CmdList__init__Cmd(type_ClassCmdList.create(),local_0_code));
  }
}

static SlagObject* SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary( SXCRef context, SXCRef local_0_cmd )
{
  SXCRef local_1_type;

  local_1_type = SlagAnalyzer__determine_compatible_op_type__Token_Cmd_Cmd(context,((ClassCmdBinary*)local_0_cmd)->property_t,((ClassCmdBinary*)local_0_cmd)->property_lhs,((ClassCmdBinary*)local_0_cmd)->property_rhs);
  SlagAnalyzer__require_standard_numerical__Token_TypeInfo(context,((ClassCmdBinary*)local_0_cmd)->property_t,local_1_type);
  sxc_write_ref( &(((ClassCmdBinary*)local_0_cmd)->property_lhs), SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(context,((ClassCmdBinary*)local_0_cmd)->property_lhs,local_1_type,false) );
  sxc_write_ref( &(((ClassCmdBinary*)local_0_cmd)->property_rhs), SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(context,((ClassCmdBinary*)local_0_cmd)->property_rhs,local_1_type,false) );
  return local_1_type;
}

static SlagObject* SlagAnalyzer__cast_operands_to_standard_value_types__CmdBinary( SXCRef context, SXCRef local_0_cmd )
{
  SXCRef local_1_t;
  SXCRef local_2_type;

  local_1_t = ((ClassCmdBinary*)local_0_cmd)->property_t;
  local_2_type = SlagAnalyzer__determine_compatible_op_type__Token_Cmd_Cmd(context,local_1_t,((ClassCmdBinary*)local_0_cmd)->property_lhs,((ClassCmdBinary*)local_0_cmd)->property_rhs);
  if (!((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    SlagAnalyzer__require_standard_primitive__Token_TypeInfo(context,local_1_t,local_2_type);
  }
  sxc_write_ref( &(((ClassCmdBinary*)local_0_cmd)->property_lhs), SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(context,((ClassCmdBinary*)local_0_cmd)->property_lhs,local_2_type,false) );
  sxc_write_ref( &(((ClassCmdBinary*)local_0_cmd)->property_rhs), SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(context,((ClassCmdBinary*)local_0_cmd)->property_rhs,local_2_type,false) );
  return local_2_type;
}

static SlagObject* SlagAnalyzer__cast_operands_to_standard_integer_or_logical__CmdBinary( SXCRef context, SXCRef local_0_cmd )
{
  SXCRef local_1_t;
  SXCRef local_2_type;

  local_1_t = ((ClassCmdBinary*)local_0_cmd)->property_t;
  local_2_type = SlagAnalyzer__determine_compatible_op_type__Token_Cmd_Cmd(context,local_1_t,((ClassCmdBinary*)local_0_cmd)->property_lhs,((ClassCmdBinary*)local_0_cmd)->property_rhs);
  SlagAnalyzer__require_standard_integer_or_logical__Token_TypeInfo(context,local_1_t,local_2_type);
  sxc_write_ref( &(((ClassCmdBinary*)local_0_cmd)->property_lhs), SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(context,((ClassCmdBinary*)local_0_cmd)->property_lhs,local_2_type,false) );
  sxc_write_ref( &(((ClassCmdBinary*)local_0_cmd)->property_rhs), SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(context,((ClassCmdBinary*)local_0_cmd)->property_rhs,local_2_type,false) );
  return local_2_type;
}

static SlagObject* SlagAnalyzer__determine_compatible_op_type__Token_Cmd_Cmd( SXCRef context, SXCRef local_0_t, SXCRef local_1_lhs, SXCRef local_2_rhs )
{
  return SlagAnalyzer__determine_compatible_op_type__Token_TypeInfo_TypeInfo(context,local_0_t,SlagAnalyzer__require_value__Cmd(context,local_1_lhs),SlagAnalyzer__require_value__Cmd(context,local_2_rhs));
}

static SlagObject* SlagAnalyzer__determine_compatible_op_type__Token_TypeInfo_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_lhs_type, SXCRef local_2_rhs_type )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_lhs_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return local_1_lhs_type;
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_rhs_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return local_2_rhs_type;
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_lhs_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return local_1_lhs_type;
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_rhs_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return local_2_rhs_type;
  }
  if ((TypeInfo__is_logical(local_1_lhs_type) || TypeInfo__is_logical(local_2_rhs_type)))
  {
    if ((TypeInfo__is_logical(local_1_lhs_type)^TypeInfo__is_logical(local_2_rhs_type)))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1159.value),Global__to_String__Object(sxc_singletons[21],local_1_lhs_type)),str961.value),Global__to_String__Object(sxc_singletons[21],local_2_rhs_type)),str1160.value)))) );
    }
    return ((ClassTypeManager*)sxc_singletons[7])->property_type_logical;
  }
  else if ((TypeInfo__is_real(local_1_lhs_type) || TypeInfo__is_real(local_2_rhs_type)))
  {
    if (((local_1_lhs_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64) || (local_2_rhs_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64)))
    {
      return ((ClassTypeManager*)sxc_singletons[7])->property_type_real64;
    }
    else
    {
      return ((ClassTypeManager*)sxc_singletons[7])->property_type_real32;
    }
  }
  else
  {
    if (((local_1_lhs_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64) || (local_2_rhs_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64)))
    {
      return ((ClassTypeManager*)sxc_singletons[7])->property_type_int64;
    }
    else
    {
      return ((ClassTypeManager*)sxc_singletons[7])->property_type_int32;
    }
  }
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1159.value),Global__to_String__Object(sxc_singletons[21],local_1_lhs_type)),str961.value),Global__to_String__Object(sxc_singletons[21],local_2_rhs_type)),str38.value)))) );
}

static SlagObject* SlagAnalyzer__prep_binary_operator__CmdBinary_String( SXCRef context, SXCRef local_0_cmd, SXCRef local_1_operator_method_name )
{
  SXCRef local_2_lhs_type;

  sxc_write_ref( &(((ClassCmdBinary*)local_0_cmd)->property_lhs), CallFn____Object(16,((ClassCmdBinary*)local_0_cmd)->property_lhs) );
  local_2_lhs_type = CallFn____Object(0,((ClassCmdBinary*)local_0_cmd)->property_lhs);
  if (!(CallFn____Object(0,((ClassCmdBinary*)local_0_cmd)->property_lhs) != NULL))
  {
    SLAG_THROW( Cmd__error__String(local_0_cmd,str1177.value) );
  }
  sxc_write_ref( &(((ClassCmdBinary*)local_0_cmd)->property_rhs), SlagAnalyzer__visit_with_implicit_context__Cmd_TypeInfo(context,((ClassCmdBinary*)local_0_cmd)->property_rhs,local_2_lhs_type) );
  if ((local_1_operator_method_name != NULL))
  {
    return SlagAnalyzer__operator_method_check__CmdBinary_String(context,local_0_cmd,local_1_operator_method_name);
  }
  return NULL;
}

static SlagObject* SlagAnalyzer__operator_method_check__CmdBinary_String( SXCRef context, SXCRef local_0_cmd, SXCRef local_1_op_name )
{
  SXCRef local_2_t;
  SXCRef local_3_lhs_type;
  SXCRef local_4_rhs_type;

  local_2_t = ((ClassCmdBinary*)local_0_cmd)->property_t;
  local_3_lhs_type = CallFn____Object(0,((ClassCmdBinary*)local_0_cmd)->property_lhs);
  local_4_rhs_type = CallFn____Object(0,((ClassCmdBinary*)local_0_cmd)->property_rhs);
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_3_lhs_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_2_t,local_3_lhs_type,((ClassCmdBinary*)local_0_cmd)->property_lhs,local_1_op_name,CmdList__init__Cmd(type_ClassCmdList.create(),((ClassCmdBinary*)local_0_cmd)->property_rhs));
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)local_4_rhs_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    sxc_write_ref( &(((ClassCmdBinary*)local_0_cmd)->property_lhs), SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_2_t,local_4_rhs_type,NULL,str1062.value,CmdList__init__Cmd(type_ClassCmdList.create(),((ClassCmdBinary*)local_0_cmd)->property_lhs)) );
    return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_2_t,local_4_rhs_type,((ClassCmdBinary*)local_0_cmd)->property_lhs,local_1_op_name,CmdList__init__Cmd(type_ClassCmdList.create(),((ClassCmdBinary*)local_0_cmd)->property_rhs));
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)local_3_lhs_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    if ((!GenericHashTable_of_Object_and_Object__contains__Object(((ClassMethodTable*)((ClassTypeInfo*)local_3_lhs_type)->property_methods_by_name)->property_data,local_1_op_name) && (String__opEQ__String(local_1_op_name,str690.value) || String__opEQ__String(local_1_op_name,str1178.value))))
    {
      return NULL;
    }
    return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_2_t,local_3_lhs_type,NULL,local_1_op_name,CmdList__init__Cmd_Cmd(type_ClassCmdList.create(),((ClassCmdBinary*)local_0_cmd)->property_lhs,((ClassCmdBinary*)local_0_cmd)->property_rhs));
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)local_4_rhs_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    if ((!GenericHashTable_of_Object_and_Object__contains__Object(((ClassMethodTable*)((ClassTypeInfo*)local_4_rhs_type)->property_methods_by_name)->property_data,local_1_op_name) && (String__opEQ__String(local_1_op_name,str690.value) || String__opEQ__String(local_1_op_name,str1178.value))))
    {
      return NULL;
    }
    return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_2_t,local_4_rhs_type,NULL,local_1_op_name,CmdList__init__Cmd_Cmd(type_ClassCmdList.create(),((ClassCmdBinary*)local_0_cmd)->property_lhs,((ClassCmdBinary*)local_0_cmd)->property_rhs));
  }
  else
  {
    return NULL;
  }
}

static SlagObject* SlagAnalyzer__create_property_get__Token_TypeInfo_Cmd_String( SXCRef context, SXCRef local_0_t, SXCRef local_1_type, SXCRef local_2_context, SXCRef local_3_name )
{
  SXCRef local_4_v;
  SXCRef local_5_base_name;
  SlagLogical local_6_type_has_get_method;
  SXCRef local_7_result;
  SXCRef local_8_id_string;
  SXCRef local_9__reader799;
  SXCRef local_10_s;
  SlagLogical local_11_context_has_side_effects;
  SXCRef local_12_singleton_get;
  SXCRef local_13_id_string;
  SXCRef local_14__reader806;
  SXCRef local_15_s;
  SXCRef local_16__reader808;
  SXCRef local_17_c;
  SXCRef local_18__reader809;
  SXCRef local_19_s;

  local_4_v = NULL;
  local_5_base_name = local_3_name;
  if ((((SlagInt32)String__get__Int32(local_5_base_name,0)) == 38))
  {
    local_5_base_name = String__substring__Int32(local_5_base_name,1);
  }
  if ((local_2_context != NULL))
  {
    if (!(local_1_type != NULL))
    {
      SLAG_THROW( Cmd__error__String(local_2_context,str1127.value) );
    }
    local_6_type_has_get_method = GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_1_type)->property_get_methods)->property_data,local_3_name);
    if ((local_6_type_has_get_method && (((((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0) || !((((ClassQualifiers*)((ClassMethodInfo*)((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_1_type)->property_get_methods)->property_data,local_3_name)))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_automatic)->property_flags) != 0))))
    {
      local_7_result = SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_0_t,local_1_type,local_2_context,local_3_name,NULL);
      return local_7_result;
    }
    if ((((((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0) && (((SlagInt32)String__get__Int32(local_3_name,0)) == 38)))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str1128.value)) );
    }
    local_4_v = TypeInfo__find_property__String(local_1_type,local_5_base_name);
    if ((local_4_v != NULL))
    {
      if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
      {
        return CmdMemberVarRead__init__Token_Cmd_PropertyInfo(type_ClassCmdCompoundPropertyRead.create(),local_0_t,local_2_context,local_4_v);
      }
      else
      {
        return CmdMemberVarRead__init__Token_Cmd_PropertyInfo(type_ClassCmdPropertyRead.create(),local_0_t,local_2_context,local_4_v);
      }
    }
    if (local_6_type_has_get_method)
    {
      return NULL;
    }
    if (TypeInfo__instance_of__TypeInfo(local_1_type,((ClassTypeManager*)sxc_singletons[7])->property_type_string_id_access))
    {
      if ((((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_1_type)->property_methods_by_signature)->property_data,String__opADD__String(local_3_name,str1009.value))) != NULL))
      {
        return NULL;
      }
      local_8_id_string = CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),local_0_t,local_3_name,-1);
      return CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_0_t,local_2_context,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_0_t,str1076.value,CmdList__init__Cmd(type_ClassCmdList.create(),local_8_id_string))));
    }
    local_9__reader799 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_1_type)->property_singletons);
    while (ArrayReader_of_TypeInfo__has_another(local_9__reader799))
    {
      local_10_s = ArrayReader_of_TypeInfo__read(local_9__reader799);
      if ((GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_10_s)->property_get_methods)->property_data,local_3_name) || (TypeInfo__find_property__String(local_10_s,local_5_base_name) != NULL)))
      {
        local_11_context_has_side_effects = !Cmd__no_side_effects(local_2_context);
        local_12_singleton_get = SlagAnalyzer__create_property_get__Token_TypeInfo_Cmd_String(context,local_0_t,local_10_s,CmdSingletonReference__resolve(CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),local_0_t,local_10_s)),local_3_name);
        if (((local_12_singleton_get != NULL) && local_11_context_has_side_effects))
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str1135.value)) );
        }
        return local_12_singleton_get;
      }
    }
    return NULL;
  }
  if ((GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)((ClassContext*)sxc_singletons[10])->property_this_type)->property_get_methods)->property_data,local_3_name) && (((((ClassQualifiers*)((ClassTypeInfo*)((ClassContext*)sxc_singletons[10])->property_this_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0) || !((((ClassQualifiers*)((ClassMethodInfo*)((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)((ClassContext*)sxc_singletons[10])->property_this_type)->property_get_methods)->property_data,local_3_name)))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_automatic)->property_flags) != 0))))
  {
    if ((!String__opEQ__String(((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_name,local_3_name) || !(TypeInfo__find_property__String(((ClassContext*)sxc_singletons[10])->property_this_type,local_3_name) != NULL)))
    {
      local_2_context = CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),local_0_t,((ClassContext*)sxc_singletons[10])->property_this_type);
      return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_0_t,((ClassContext*)sxc_singletons[10])->property_this_type,local_2_context,local_3_name,NULL);
    }
  }
  local_4_v = TypeInfo__find_property__String(((ClassContext*)sxc_singletons[10])->property_this_type,local_5_base_name);
  if ((local_4_v != NULL))
  {
    local_2_context = CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),local_0_t,((ClassContext*)sxc_singletons[10])->property_this_type);
    return CmdMemberVarRead__init__Token_Cmd_PropertyInfo(type_ClassCmdPropertyRead.create(),local_0_t,local_2_context,local_4_v);
  }
  if (TypeInfo__instance_of__TypeInfo(((ClassContext*)sxc_singletons[10])->property_this_type,((ClassTypeManager*)sxc_singletons[7])->property_type_string_id_access))
  {
    local_2_context = CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),local_0_t,((ClassContext*)sxc_singletons[10])->property_this_type);
    local_13_id_string = CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),local_0_t,local_3_name,-1);
    return CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_0_t,local_2_context,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_0_t,str1076.value,CmdList__init__Cmd(type_ClassCmdList.create(),local_13_id_string))));
  }
  local_14__reader806 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)((ClassContext*)sxc_singletons[10])->property_this_type)->property_singletons);
  while (ArrayReader_of_TypeInfo__has_another(local_14__reader806))
  {
    local_15_s = ArrayReader_of_TypeInfo__read(local_14__reader806);
    if ((GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_15_s)->property_get_methods)->property_data,local_3_name) || (TypeInfo__find_property__String(local_15_s,local_5_base_name) != NULL)))
    {
      return SlagAnalyzer__create_property_get__Token_TypeInfo_Cmd_String(context,local_0_t,local_15_s,CmdSingletonReference__resolve(CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),local_0_t,local_15_s)),local_3_name);
    }
  }
  local_16__reader808 = ArrayList_of_TypeInfo__create_reader(((ClassContext*)sxc_singletons[10])->property_implicit_context);
  while (ArrayReader_of_TypeInfo__has_another(local_16__reader808))
  {
    local_17_c = ArrayReader_of_TypeInfo__read(local_16__reader808);
    local_18__reader809 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_17_c)->property_singletons);
    while (ArrayReader_of_TypeInfo__has_another(local_18__reader809))
    {
      local_19_s = ArrayReader_of_TypeInfo__read(local_18__reader809);
      if ((GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_19_s)->property_get_methods)->property_data,local_3_name) || (TypeInfo__find_property__String(local_19_s,local_5_base_name) != NULL)))
      {
        return SlagAnalyzer__create_property_get__Token_TypeInfo_Cmd_String(context,local_0_t,local_19_s,CmdSingletonReference__resolve(CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),local_0_t,local_19_s)),local_3_name);
      }
    }
  }
  return NULL;
}

static SlagObject* SlagAnalyzer__create_property_set__Token_TypeInfo_Cmd_String_Cmd( SXCRef context, SXCRef local_0_t, SXCRef local_1_type, SXCRef local_2_context, SXCRef local_3_name, SXCRef local_4_new_value )
{
  SXCRef local_5_v;
  SXCRef local_6_base_name;
  SXCRef local_7_id_string;
  SXCRef local_8__reader820;
  SXCRef local_9_s;
  SXCRef local_10_local_v;
  SXCRef local_11_set_methods;
  SlagLogical local_12_have_set_method;
  SXCRef local_13_cast_cmd;
  SXCRef local_14_id_string;
  SXCRef local_15__reader829;
  SXCRef local_16_s;
  SXCRef local_17__reader831;
  SXCRef local_18_implicit_con;
  SXCRef local_19__reader832;
  SXCRef local_20_s;

  local_5_v = NULL;
  local_6_base_name = local_3_name;
  if ((((SlagInt32)String__get__Int32(local_6_base_name,0)) == 38))
  {
    local_6_base_name = String__substring__Int32(local_6_base_name,1);
  }
  if ((local_1_type != NULL))
  {
    local_4_new_value = SlagAnalyzer__visit_with_implicit_context__Cmd_TypeInfo(context,local_4_new_value,local_1_type);
  }
  if ((local_2_context != NULL))
  {
    if (!(local_1_type != NULL))
    {
      SLAG_THROW( Cmd__error__String(local_2_context,str1127.value) );
    }
    if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_1_type)->property_set_methods)->property_data,local_3_name))
    {
      return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_0_t,local_1_type,local_2_context,local_3_name,CmdList__init__Cmd(type_ClassCmdList.create(),local_4_new_value));
    }
    if ((((((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0) && (((SlagInt32)String__get__Int32(local_3_name,0)) == 38)))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str1128.value)) );
    }
    local_5_v = TypeInfo__find_property__String(local_1_type,local_6_base_name);
    if ((local_5_v != NULL))
    {
      if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str1205.value)) );
      }
      return CmdPropertyWrite__resolve(CmdPropertyWrite__init__Token_Cmd_PropertyInfo_Cmd(type_ClassCmdPropertyWrite.create(),local_0_t,local_2_context,local_5_v,SlagAnalyzer__cast_compatible__Cmd_TypeInfo(context,local_4_new_value,((ClassPropertyInfo*)local_5_v)->property_type)));
    }
    if (TypeInfo__instance_of__TypeInfo(local_1_type,((ClassTypeManager*)sxc_singletons[7])->property_type_string_id_access))
    {
      local_7_id_string = CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),local_0_t,local_3_name,-1);
      return CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_0_t,local_2_context,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_0_t,str998.value,CmdList__init__Cmd_Cmd(type_ClassCmdList.create(),local_7_id_string,local_4_new_value))));
    }
    local_8__reader820 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_1_type)->property_singletons);
    while (ArrayReader_of_TypeInfo__has_another(local_8__reader820))
    {
      local_9_s = ArrayReader_of_TypeInfo__read(local_8__reader820);
      if ((GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_9_s)->property_set_methods)->property_data,local_3_name) || (TypeInfo__find_property__String(local_9_s,local_6_base_name) != NULL)))
      {
        return SlagAnalyzer__create_property_set__Token_TypeInfo_Cmd_String_Cmd(context,local_0_t,local_9_s,CmdSingletonReference__resolve(CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),local_0_t,local_9_s)),local_3_name,local_4_new_value);
      }
    }
    return NULL;
  }
  if ((LocalVarTable__get__String(((ClassContext*)sxc_singletons[10])->property_local_var_table,local_3_name) != NULL))
  {
    local_10_local_v = LocalVarTable__get__String(((ClassContext*)sxc_singletons[10])->property_local_var_table,local_3_name);
    local_1_type = ((ClassLocalVarInfo*)local_10_local_v)->property_type;
    local_4_new_value = SlagAnalyzer__visit_with_implicit_context__Cmd_TypeInfo(context,local_4_new_value,local_1_type);
    return CmdLocalVarWrite__resolve(CmdLocalVarWrite__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarWrite.create(),local_0_t,local_10_local_v,SlagAnalyzer__cast_compatible__Cmd_TypeInfo(context,local_4_new_value,local_1_type)));
  }
  local_11_set_methods = ((ClassTypeInfo*)((ClassContext*)sxc_singletons[10])->property_this_type)->property_set_methods;
  local_12_have_set_method = false;
  if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)local_11_set_methods)->property_data,local_3_name))
  {
    local_12_have_set_method = true;
    if ((((((ClassQualifiers*)((ClassTypeInfo*)((ClassContext*)sxc_singletons[10])->property_this_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0) || !((((ClassQualifiers*)((ClassMethodInfo*)((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)local_11_set_methods)->property_data,local_3_name)))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_automatic)->property_flags) != 0)))
    {
      if ((!String__opEQ__String(((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_name,local_3_name) || !(TypeInfo__find_property__String(((ClassContext*)sxc_singletons[10])->property_this_type,local_3_name) != NULL)))
      {
        local_2_context = CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),local_0_t,((ClassContext*)sxc_singletons[10])->property_this_type);
        local_4_new_value = CallFn____Object(16,local_4_new_value);
        SlagAnalyzer__require_value__Cmd(context,local_4_new_value);
        return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_0_t,((ClassContext*)sxc_singletons[10])->property_this_type,local_2_context,local_3_name,CmdList__init__Cmd(type_ClassCmdList.create(),local_4_new_value));
      }
      else
      {
        local_12_have_set_method = false;
      }
    }
  }
  local_5_v = TypeInfo__find_property__String(((ClassContext*)sxc_singletons[10])->property_this_type,local_6_base_name);
  if ((local_5_v != NULL))
  {
    local_2_context = CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),local_0_t,((ClassContext*)sxc_singletons[10])->property_this_type);
    local_4_new_value = CallFn____Object(16,local_4_new_value);
    SlagAnalyzer__require_value__Cmd(context,local_4_new_value);
    if ((local_12_have_set_method && (CallFn____Object(0,local_4_new_value) != ((ClassPropertyInfo*)local_5_v)->property_type)))
    {
      return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_0_t,((ClassContext*)sxc_singletons[10])->property_this_type,local_2_context,local_3_name,CmdList__init__Cmd(type_ClassCmdList.create(),local_4_new_value));
    }
    local_13_cast_cmd = SlagAnalyzer__cast_compatible__Cmd_TypeInfo(context,local_4_new_value,((ClassPropertyInfo*)local_5_v)->property_type);
    return CmdPropertyWrite__resolve(CmdPropertyWrite__init__Token_Cmd_PropertyInfo_Cmd(type_ClassCmdPropertyWrite.create(),local_0_t,local_2_context,local_5_v,local_13_cast_cmd));
  }
  if (TypeInfo__instance_of__TypeInfo(((ClassContext*)sxc_singletons[10])->property_this_type,((ClassTypeManager*)sxc_singletons[7])->property_type_string_id_access))
  {
    local_14_id_string = CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),local_0_t,local_3_name,-1);
    local_2_context = CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),local_0_t,((ClassContext*)sxc_singletons[10])->property_this_type);
    return CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_0_t,local_2_context,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_0_t,str998.value,CmdList__init__Cmd_Cmd(type_ClassCmdList.create(),local_14_id_string,local_4_new_value))));
  }
  local_15__reader829 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)((ClassContext*)sxc_singletons[10])->property_this_type)->property_singletons);
  while (ArrayReader_of_TypeInfo__has_another(local_15__reader829))
  {
    local_16_s = ArrayReader_of_TypeInfo__read(local_15__reader829);
    if ((GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_16_s)->property_set_methods)->property_data,local_3_name) || (TypeInfo__find_property__String(local_16_s,local_6_base_name) != NULL)))
    {
      return SlagAnalyzer__create_property_set__Token_TypeInfo_Cmd_String_Cmd(context,local_0_t,local_16_s,CmdSingletonReference__resolve(CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),local_0_t,local_16_s)),local_3_name,local_4_new_value);
    }
  }
  local_17__reader831 = ArrayList_of_TypeInfo__create_reader(((ClassContext*)sxc_singletons[10])->property_implicit_context);
  while (ArrayReader_of_TypeInfo__has_another(local_17__reader831))
  {
    local_18_implicit_con = ArrayReader_of_TypeInfo__read(local_17__reader831);
    local_19__reader832 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_18_implicit_con)->property_singletons);
    while (ArrayReader_of_TypeInfo__has_another(local_19__reader832))
    {
      local_20_s = ArrayReader_of_TypeInfo__read(local_19__reader832);
      if ((GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_20_s)->property_set_methods)->property_data,local_3_name) || (TypeInfo__find_property__String(local_20_s,local_6_base_name) != NULL)))
      {
        return SlagAnalyzer__create_property_set__Token_TypeInfo_Cmd_String_Cmd(context,local_0_t,local_20_s,CmdSingletonReference__resolve(CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),local_0_t,local_20_s)),local_3_name,local_4_new_value);
      }
    }
  }
  if ((local_1_type == NULL))
  {
    local_1_type = ((ClassContext*)sxc_singletons[10])->property_this_type;
  }
  if ((((SlagInt32)String__get__Int32(local_3_name,0)) == 38))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1222.value),local_6_base_name),str1223.value),Global__to_String__Object(sxc_singletons[21],local_1_type)),str242.value)))) );
  }
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1224.value),local_3_name),str1223.value),Global__to_String__Object(sxc_singletons[21],local_1_type)),str242.value)))) );
}

static SlagObject* SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList( SXCRef context, SXCRef local_0_t, SXCRef local_1_type_context, SXCRef local_2_context, SXCRef local_3_method_name, SXCRef local_4_args )
{
  SXCRef local_5_original_args;
  SXCRef local_6__reader837;
  SXCRef local_7_arg;
  SXCRef local_8_candidates;
  SlagLogical local_9_all_inherited;
  SXCRef local_10__reader840;
  SXCRef local_11_m;
  SXCRef local_12__reader843;
  SXCRef local_13_m;
  SXCRef local_14_base_name;
  SXCRef local_15_mgr_name;
  SXCRef local_16__reader845;
  SXCRef local_17_m;
  SXCRef local_18__reader847;
  SXCRef local_19_m;
  SXCRef local_20__reader849;
  SXCRef local_21_s;
  SXCRef local_22__reader850;
  SXCRef local_23_m;
  SlagInt32 local_24_index;
  SlagInt32 local_25__count853;
  SXCRef local_26_type;
  SXCRef local_27__reader855;
  SXCRef local_28_s;
  SXCRef local_29__reader856;
  SXCRef local_30_m;
  SXCRef local_31__reader859;
  SXCRef local_32_m;
  SXCRef local_33_matches;
  SlagInt32 local_34_callchain_arg_count;
  SXCRef local_35_callchain_method;
  SlagInt32 local_36_args_count;
  SXCRef local_37__reader862;
  SXCRef local_38_m;
  SlagInt32 local_39_param_count;
  SXCRef local_40_params;
  SlagInt32 local_41_index;
  SlagInt32 local_42__count868;
  SXCRef local_43_param;
  SXCRef local_44_arg;
  SXCRef local_45__reader869;
  SXCRef local_46_m;
  SlagInt32 local_47_index;
  SlagInt32 local_48__count871;
  SXCRef local_49_param;
  SXCRef local_50_arg;
  SXCRef local_51_old_args;
  SXCRef local_52__reader873;
  SXCRef local_53_m;
  SlagInt32 local_54_index;
  SlagInt32 local_55__count875;
  SXCRef local_56_param;
  SXCRef local_57_arg;
  SXCRef local_58_readable_type;
  SXCRef local_59_reader_type;
  SXCRef local_60_mgr_type;
  SXCRef local_61__reader882;
  SXCRef local_62_m;
  SXCRef local_63_context_type;
  SXCRef local_64__reader886;
  SXCRef local_65_m;
  SXCRef local_66__reader889;
  SXCRef local_67_m;
  SXCRef local_68__reader892;
  SXCRef local_69_m;
  SlagInt32 local_70_index;
  SlagInt32 local_71__count894;
  SXCRef local_72_param;
  SXCRef local_73_arg;
  SXCRef local_74__reader896;
  SXCRef local_75_m1;
  SXCRef local_76__reader898;
  SXCRef local_77_m1;
  SXCRef local_78__reader900;
  SXCRef local_79_m1;
  SXCRef local_80__reader903;
  SXCRef local_81_m;
  SXCRef local_82__reader905;
  SXCRef local_83_m1;
  SXCRef local_84__reader907;
  SXCRef local_85_m2;
  SXCRef local_86_t1;
  SXCRef local_87_t2;
  SXCRef local_88__reader909;
  SXCRef local_89_m;
  SXCRef local_90__reader911;
  SXCRef local_91_param;
  SXCRef local_92_param_type_name;
  SXCRef local_93_match;
  SXCRef local_94_param;
  SlagInt32 local_95_index;
  SlagInt32 local_96__count917;
  SXCRef local_97_arg;
  SXCRef local_98_param;
  SXCRef local_99_lhs;
  SXCRef local_100_rhs;
  SXCRef local_101_result;
  SXCRef local_102_which_921;
  SXCRef local_103_call;
  SXCRef local_104_context_type;
  SXCRef local_105_kind;
  SXCRef local_106_context_name;
  SXCRef local_107_buffer;
  SlagLogical local_108_first;
  SXCRef local_109__reader938;
  SXCRef local_110_arg;
  SXCRef local_111_cmd;
  SXCRef local_112_args_subset;
  SlagInt32 local_113__local_942;
  SlagInt32 local_114__last943;
  SXCRef local_115_arg;
  SXCRef local_116_mgr_type;
  SXCRef local_117__reader946;
  SXCRef local_118_m;
  SXCRef local_119_buffer;
  SXCRef local_120__reader948;
  SXCRef local_121_m;
  SXCRef local_122_err;
  SXCRef local_123_buffer;
  SXCRef local_124__reader949;
  SXCRef local_125_m;

  local_5_original_args = local_4_args;
  if (!(local_4_args != NULL))
  {
    local_4_args = CmdList__init__Int32(type_ClassCmdList.create(),2);
  }
  local_6__reader837 = ArrayList_of_Cmd__create_reader(local_4_args);
  while (CallFn____Logical(14,local_6__reader837))
  {
    local_7_arg = CallFn____Object(45,local_6__reader837);
    SlagAnalyzer__require_value__Cmd(context,local_7_arg);
  }
  local_8_candidates = ArrayList_of_MethodInfo__init(type_ClassArrayList_of_MethodInfo.create());
  if (String__opEQ__String(local_3_method_name,str667.value))
  {
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str1061.value)) );
    }
    else if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      local_9_all_inherited = true;
      local_10__reader840 = ArrayList_of_MethodInfo__create_reader(MethodTable__get__String(((ClassTypeInfo*)local_1_type_context)->property_methods_by_name,local_3_method_name));
      while (ArrayReader_of_MethodInfo__has_another(local_10__reader840))
      {
        local_11_m = ArrayReader_of_MethodInfo__read(local_10__reader840);
        if ((((ClassMethodInfo*)local_11_m)->property_type_context == local_1_type_context))
        {
          local_9_all_inherited = false;
          ArrayList_of_Object__add__Object(local_8_candidates,local_11_m);
        }
      }
      if (local_9_all_inherited)
      {
        local_12__reader843 = ArrayList_of_MethodInfo__create_reader(MethodTable__get__String(((ClassTypeInfo*)local_1_type_context)->property_methods_by_name,local_3_method_name));
        while (ArrayReader_of_MethodInfo__has_another(local_12__reader843))
        {
          local_13_m = ArrayReader_of_MethodInfo__read(local_12__reader843);
          if (!(ArrayList_of_MethodInfo__index_of__MethodInfo_Int32(local_8_candidates,local_13_m,0) >= 0))
          {
            ArrayList_of_Object__add__Object(local_8_candidates,local_13_m);
          }
        }
      }
    }
    else if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
    {
      ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,((ClassTypeInfo*)local_1_type_context)->property_methods);
      local_14_base_name = String__before_first__Char(((ClassTypeInfo*)local_1_type_context)->property_name,((SlagChar)60));
      local_15_mgr_name = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_14_base_name),str845.value),String__substring__Int32(((ClassTypeInfo*)local_1_type_context)->property_name,(((SlagString*)local_14_base_name)->count))));
      local_3_method_name = str1062.value;
      local_16__reader845 = ArrayList_of_MethodInfo__create_reader(MethodTable__get__String(((ClassTypeInfo*)((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,local_15_mgr_name)))->property_methods_by_name,str1062.value));
      while (ArrayReader_of_MethodInfo__has_another(local_16__reader845))
      {
        local_17_m = ArrayReader_of_MethodInfo__read(local_16__reader845);
        if (!(ArrayList_of_MethodInfo__index_of__MethodInfo_Int32(local_8_candidates,local_17_m,0) >= 0))
        {
          ArrayList_of_Object__add__Object(local_8_candidates,local_17_m);
        }
      }
    }
  }
  else
  {
    local_18__reader847 = ArrayList_of_MethodInfo__create_reader(MethodTable__get__String(((ClassTypeInfo*)local_1_type_context)->property_methods_by_name,local_3_method_name));
    while (ArrayReader_of_MethodInfo__has_another(local_18__reader847))
    {
      local_19_m = ArrayReader_of_MethodInfo__read(local_18__reader847);
      if (!(ArrayList_of_MethodInfo__index_of__MethodInfo_Int32(local_8_candidates,local_19_m,0) >= 0))
      {
        ArrayList_of_Object__add__Object(local_8_candidates,local_19_m);
      }
    }
    local_20__reader849 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_1_type_context)->property_singletons);
    while (ArrayReader_of_TypeInfo__has_another(local_20__reader849))
    {
      local_21_s = ArrayReader_of_TypeInfo__read(local_20__reader849);
      local_22__reader850 = ArrayList_of_MethodInfo__create_reader(MethodTable__get__String(((ClassTypeInfo*)local_21_s)->property_methods_by_name,local_3_method_name));
      while (ArrayReader_of_MethodInfo__has_another(local_22__reader850))
      {
        local_23_m = ArrayReader_of_MethodInfo__read(local_22__reader850);
        if (!(ArrayList_of_MethodInfo__index_of__MethodInfo_Int32(local_8_candidates,local_23_m,0) >= 0))
        {
          ArrayList_of_Object__add__Object(local_8_candidates,local_23_m);
        }
      }
    }
    if (!(local_2_context != NULL))
    {
      {
        local_24_index = 0;
        local_25__count853 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassContext*)sxc_singletons[10])->property_implicit_context))->property_count;
        while ((local_24_index < local_25__count853))
        {
          local_26_type = ((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassContext*)sxc_singletons[10])->property_implicit_context))->property_data)->data))[local_24_index]));
          if (((local_26_type != ((ClassContext*)sxc_singletons[10])->property_this_type) && (ArrayList_of_TypeInfo__index_of__TypeInfo_Int32(((ClassContext*)sxc_singletons[10])->property_implicit_context,local_26_type,0) == local_24_index)))
          {
            local_27__reader855 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_26_type)->property_singletons);
            while (ArrayReader_of_TypeInfo__has_another(local_27__reader855))
            {
              local_28_s = ArrayReader_of_TypeInfo__read(local_27__reader855);
              local_29__reader856 = ArrayList_of_MethodInfo__create_reader(MethodTable__get__String(((ClassTypeInfo*)local_28_s)->property_methods_by_name,local_3_method_name));
              while (ArrayReader_of_MethodInfo__has_another(local_29__reader856))
              {
                local_30_m = ArrayReader_of_MethodInfo__read(local_29__reader856);
                if (!(ArrayList_of_MethodInfo__index_of__MethodInfo_Int32(local_8_candidates,local_30_m,0) >= 0))
                {
                  ArrayList_of_Object__add__Object(local_8_candidates,local_30_m);
                }
              }
            }
          }
          ++local_24_index;
        }
      }
    }
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      local_31__reader859 = ArrayList_of_MethodInfo__create_reader(MethodTable__get__String(((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_type_object)->property_methods_by_name,local_3_method_name));
      while (ArrayReader_of_MethodInfo__has_another(local_31__reader859))
      {
        local_32_m = ArrayReader_of_MethodInfo__read(local_31__reader859);
        if (!(ArrayList_of_MethodInfo__index_of__MethodInfo_Int32(local_8_candidates,local_32_m,0) >= 0))
        {
          ArrayList_of_Object__add__Object(local_8_candidates,local_32_m);
        }
      }
    }
  }
  local_33_matches = ArrayList_of_MethodInfo__init__Int32(type_ClassArrayList_of_MethodInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count);
  local_34_callchain_arg_count = 0;
  local_35_callchain_method = NULL;
  {
    if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count > 0)) goto unsatisfied_8922;
    local_36_args_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count;
    local_37__reader862 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
    while (ArrayReader_of_MethodInfo__has_another(local_37__reader862))
    {
      local_38_m = ArrayReader_of_MethodInfo__read(local_37__reader862);
      local_39_param_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_38_m)->property_parameters))->property_count;
      if (((local_39_param_count >= local_36_args_count) && (local_36_args_count >= MethodInfo__min_params(local_38_m))))
      {
        ArrayList_of_Object__add__Object(local_33_matches,local_38_m);
      }
      else
      {
        if (((local_39_param_count < local_36_args_count) && (local_39_param_count > 0)))
        {
          if (((((ClassMethodInfo*)local_38_m)->property_return_type != NULL) && TypeInfo__instance_of__TypeInfo(((ClassMethodInfo*)local_38_m)->property_return_type,((ClassMethodInfo*)local_38_m)->property_type_context)))
          {
            if (((local_34_callchain_arg_count == 0) || (local_39_param_count < local_34_callchain_arg_count)))
            {
              {
                local_40_params = ((ClassMethodInfo*)local_38_m)->property_parameters;
                {
                  local_41_index = 0;
                  local_42__count868 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count;
                  while ((local_41_index < local_42__count868))
                  {
                    local_43_param = ((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_40_params))->property_data)->data))[sxc_mod(local_41_index,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_40_params))->property_count)]));
                    local_44_arg = ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[local_41_index]));
                    if (!TypeInfo__is_compatible_with__TypeInfo(CallFn____Object(0,local_44_arg),((ClassParameterInfo*)local_43_param)->property_type)) goto unsatisfied_8931;
                    ++local_41_index;
                  }
                }
                satisfied_8931:;
                {
                  local_35_callchain_method = local_38_m;
                  local_34_callchain_arg_count = local_39_param_count;
                }
                goto end_8931;
                unsatisfied_8931:;
              }
              end_8931:;
            }
          }
        }
      }
    }
    if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count > 0)) goto unsatisfied_8922;
    ArrayList_of_Object__clear(local_8_candidates);
    ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
    ArrayList_of_Object__clear(local_33_matches);
    local_45__reader869 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
    while (ArrayReader_of_MethodInfo__has_another(local_45__reader869))
    {
      local_46_m = ArrayReader_of_MethodInfo__read(local_45__reader869);
      {
        {
          local_47_index = 0;
          local_48__count871 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count;
          while ((local_47_index < local_48__count871))
          {
            local_49_param = ((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_46_m)->property_parameters))->property_data)->data))[local_47_index]));
            local_50_arg = ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[local_47_index]));
            if (!TypeInfo__is_compatible_with__TypeInfo(CallFn____Object(0,local_50_arg),((ClassParameterInfo*)local_49_param)->property_type)) goto unsatisfied_8940;
            ++local_47_index;
          }
        }
        satisfied_8940:;
        {
          ArrayList_of_Object__add__Object(local_33_matches,local_46_m);
        }
        goto end_8940;
        unsatisfied_8940:;
      }
      end_8940:;
    }
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count == 0))
    {
      local_51_old_args = NULL;
      local_52__reader873 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
      while (ArrayReader_of_MethodInfo__has_another(local_52__reader873))
      {
        local_53_m = ArrayReader_of_MethodInfo__read(local_52__reader873);
        {
          {
            local_54_index = 0;
            local_55__count875 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count;
            while ((local_54_index < local_55__count875))
            {
              local_56_param = ((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_53_m)->property_parameters))->property_data)->data))[local_54_index]));
              local_57_arg = ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[local_54_index]));
              if (!TypeInfo__is_compatible_with__TypeInfo(CallFn____Object(0,local_57_arg),((ClassParameterInfo*)local_56_param)->property_type))
              {
                local_58_readable_type = TypeInfo__readable_type(CallFn____Object(0,local_57_arg));
                local_59_reader_type = TypeInfo__reader_type(((ClassParameterInfo*)local_56_param)->property_type);
                if (((local_58_readable_type != NULL) && (local_58_readable_type == local_59_reader_type)))
                {
                  if ((local_51_old_args == NULL))
                  {
                    local_51_old_args = ObjectManager__create_duplicate__Object(sxc_singletons[34],local_4_args);
                  }
                  sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))+local_54_index, CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmd*)local_57_arg)->property_t,local_57_arg,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmd*)local_57_arg)->property_t,str1065.value,NULL))) );
                }
                else
                {
                  if (!false) goto unsatisfied_8946;
                }
              }
              ++local_54_index;
            }
          }
          satisfied_8946:;
          {
            ArrayList_of_Object__add__Object(local_33_matches,local_53_m);
          }
          goto end_8946;
          unsatisfied_8946:;
        }
        end_8946:;
      }
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count != 1))
      {
        ArrayList_of_Object__clear(local_33_matches);
        if ((local_51_old_args != NULL))
        {
          local_4_args = local_51_old_args;
        }
      }
    }
    if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count > 0)) goto unsatisfied_8922;
    ArrayList_of_Object__clear(local_8_candidates);
    ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
    ArrayList_of_Object__clear(local_33_matches);
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
    {
      local_60_mgr_type = ((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,TypeInfo__manager_name(local_1_type_context)));
      local_61__reader882 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
      while (ArrayReader_of_MethodInfo__has_another(local_61__reader882))
      {
        local_62_m = ArrayReader_of_MethodInfo__read(local_61__reader882);
        if ((((ClassMethodInfo*)local_62_m)->property_type_context == local_60_mgr_type))
        {
          ArrayList_of_Object__add__Object(local_33_matches,local_62_m);
        }
      }
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count > 0))
      {
        ArrayList_of_Object__clear(local_8_candidates);
        ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
        ArrayList_of_Object__clear(local_33_matches);
        if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count == 1)) goto satisfied_8922;
      }
      else
      {
        ArrayList_of_Object__clear(local_33_matches);
      }
    }
    else
    {
      if ((local_2_context != NULL))
      {
        local_63_context_type = CallFn____Object(0,local_2_context);
        local_64__reader886 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
        while (ArrayReader_of_MethodInfo__has_another(local_64__reader886))
        {
          local_65_m = ArrayReader_of_MethodInfo__read(local_64__reader886);
          if (TypeInfo__instance_of__TypeInfo(local_63_context_type,((ClassMethodInfo*)local_65_m)->property_type_context))
          {
            ArrayList_of_Object__add__Object(local_33_matches,local_65_m);
          }
        }
        if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count > 0))
        {
          ArrayList_of_Object__clear(local_8_candidates);
          ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
        }
        ArrayList_of_Object__clear(local_33_matches);
        if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count == 1)) goto satisfied_8922;
      }
      else
      {
        local_66__reader889 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
        while (ArrayReader_of_MethodInfo__has_another(local_66__reader889))
        {
          local_67_m = ArrayReader_of_MethodInfo__read(local_66__reader889);
          if (TypeInfo__instance_of__TypeInfo(((ClassContext*)sxc_singletons[10])->property_this_type,((ClassMethodInfo*)local_67_m)->property_type_context))
          {
            ArrayList_of_Object__add__Object(local_33_matches,local_67_m);
          }
        }
        if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count > 0))
        {
          ArrayList_of_Object__clear(local_8_candidates);
          ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
          ArrayList_of_Object__clear(local_33_matches);
          if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count == 1)) goto satisfied_8922;
        }
        else
        {
          ArrayList_of_Object__clear(local_33_matches);
        }
      }
    }
    local_68__reader892 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
    while (ArrayReader_of_MethodInfo__has_another(local_68__reader892))
    {
      local_69_m = ArrayReader_of_MethodInfo__read(local_68__reader892);
      {
        {
          local_70_index = 0;
          local_71__count894 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count;
          while ((local_70_index < local_71__count894))
          {
            local_72_param = ((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_69_m)->property_parameters))->property_data)->data))[local_70_index]));
            local_73_arg = ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[local_70_index]));
            if (!(CallFn____Object(0,local_73_arg) == ((ClassParameterInfo*)local_72_param)->property_type)) goto unsatisfied_8975;
            ++local_70_index;
          }
        }
        satisfied_8975:;
        {
          ArrayList_of_Object__add__Object(local_33_matches,local_69_m);
        }
        goto end_8975;
        unsatisfied_8975:;
      }
      end_8975:;
    }
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count > 0))
    {
      ArrayList_of_Object__clear(local_8_candidates);
      ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
      ArrayList_of_Object__clear(local_33_matches);
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count == 1)) goto satisfied_8922;
    }
    else
    {
      ArrayList_of_Object__clear(local_33_matches);
    }
    local_74__reader896 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
    while (ArrayReader_of_MethodInfo__has_another(local_74__reader896))
    {
      local_75_m1 = ArrayReader_of_MethodInfo__read(local_74__reader896);
      if (!SlagAnalyzer__other_method_improves_references__MethodInfo_CmdList_ArrayList_of_MethodInfo(context,local_75_m1,local_4_args,local_8_candidates))
      {
        ArrayList_of_Object__add__Object(local_33_matches,local_75_m1);
      }
    }
    if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count > 0)) goto unsatisfied_8922;
    ArrayList_of_Object__clear(local_8_candidates);
    ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
    ArrayList_of_Object__clear(local_33_matches);
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count == 1)) goto satisfied_8922;
    local_76__reader898 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
    while (ArrayReader_of_MethodInfo__has_another(local_76__reader898))
    {
      local_77_m1 = ArrayReader_of_MethodInfo__read(local_76__reader898);
      if (!SlagAnalyzer__other_method_improves_precision__MethodInfo_CmdList_ArrayList_of_MethodInfo(context,local_77_m1,local_4_args,local_8_candidates))
      {
        ArrayList_of_Object__add__Object(local_33_matches,local_77_m1);
      }
    }
    if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count > 0)) goto unsatisfied_8922;
    ArrayList_of_Object__clear(local_8_candidates);
    ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
    ArrayList_of_Object__clear(local_33_matches);
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count == 1)) goto satisfied_8922;
    local_78__reader900 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
    while (ArrayReader_of_MethodInfo__has_another(local_78__reader900))
    {
      local_79_m1 = ArrayReader_of_MethodInfo__read(local_78__reader900);
      if (!SlagAnalyzer__other_method_closer_precision__MethodInfo_CmdList_ArrayList_of_MethodInfo(context,local_79_m1,local_4_args,local_8_candidates))
      {
        ArrayList_of_Object__add__Object(local_33_matches,local_79_m1);
      }
    }
    if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count > 0)) goto unsatisfied_8922;
    ArrayList_of_Object__clear(local_8_candidates);
    ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
    ArrayList_of_Object__clear(local_33_matches);
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count == 1)) goto satisfied_8922;
    if (!(local_2_context != NULL))
    {
      local_80__reader903 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
      while (ArrayReader_of_MethodInfo__has_another(local_80__reader903))
      {
        local_81_m = ArrayReader_of_MethodInfo__read(local_80__reader903);
        if (TypeInfo__instance_of__TypeInfo(((ClassContext*)sxc_singletons[10])->property_this_type,((ClassMethodInfo*)local_81_m)->property_type_context))
        {
          ArrayList_of_Object__add__Object(local_33_matches,local_81_m);
        }
      }
      if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count > 0)) goto unsatisfied_8922;
      ArrayList_of_Object__clear(local_8_candidates);
      ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
      ArrayList_of_Object__clear(local_33_matches);
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count == 1)) goto satisfied_8922;
    }
    local_82__reader905 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
    while (ArrayReader_of_MethodInfo__has_another(local_82__reader905))
    {
      local_83_m1 = ArrayReader_of_MethodInfo__read(local_82__reader905);
      {
        local_84__reader907 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
        while (ArrayReader_of_MethodInfo__has_another(local_84__reader907))
        {
          local_85_m2 = ArrayReader_of_MethodInfo__read(local_84__reader907);
          if ((local_83_m1 == local_85_m2))
          {
            goto next_9027;
          }
          local_86_t1 = ((ClassMethodInfo*)local_83_m1)->property_type_context;
          local_87_t2 = ((ClassMethodInfo*)local_85_m2)->property_type_context;
          if (((local_86_t1 != local_87_t2) && TypeInfo__instance_of__TypeInfo(local_87_t2,local_86_t1))) goto satisfied_9026;
          next_9027:;
        }
        end_9027:;
        ArrayList_of_Object__add__Object(local_33_matches,local_83_m1);
        satisfied_9026:;
        goto end_9026;
        unsatisfied_9026:;
      }
      end_9026:;
    }
    if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count > 0)) goto unsatisfied_8922;
    ArrayList_of_Object__clear(local_8_candidates);
    ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
    ArrayList_of_Object__clear(local_33_matches);
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count == 1)) goto satisfied_8922;
    local_88__reader909 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
    while (ArrayReader_of_MethodInfo__has_another(local_88__reader909))
    {
      local_89_m = ArrayReader_of_MethodInfo__read(local_88__reader909);
      {
        local_90__reader911 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_89_m)->property_parameters);
        while (CallFn____Logical(14,local_90__reader911))
        {
          local_91_param = CallFn____Object(45,local_90__reader911);
          local_92_param_type_name = ((ClassTypeInfo*)((ClassParameterInfo*)local_91_param)->property_type)->property_name;
          if ((String__index_of__String_Int32(local_92_param_type_name,str1066.value,0) >= 0))
          {
            if (!!((String__index_of__String_Int32(local_92_param_type_name,str1067.value,0) >= 0) || (String__index_of__String_Int32(local_92_param_type_name,str1068.value,0) >= 0))) goto unsatisfied_9030;
          }
        }
        satisfied_9030:;
        {
          ArrayList_of_Object__add__Object(local_33_matches,local_89_m);
        }
        goto end_9030;
        unsatisfied_9030:;
      }
      end_9030:;
    }
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count == 0))
    {
      ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_33_matches,local_8_candidates);
    }
    if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count == 1)) goto unsatisfied_8922;
    ArrayList_of_Object__clear(local_8_candidates);
    ArrayList_of_MethodInfo__add__Readable_of_MethodInfo(local_8_candidates,local_33_matches);
    ArrayList_of_Object__clear(local_33_matches);
    satisfied_8922:;
    {
      local_93_match = ((ClassMethodInfo*)((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_data)->data))[0])));
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count < ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_93_match)->property_parameters))->property_count))
      {
        while ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count < ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_93_match)->property_parameters))->property_count))
        {
          local_94_param = ((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_93_match)->property_parameters))->property_data)->data))[((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count]));
          if (!(((ClassParameterInfo*)local_94_param)->property_default_value != NULL))
          {
            SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str1069.value)) );
          }
          ArrayList_of_Object__add__Object(local_4_args,CallFn____Object(16,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassParameterInfo*)local_94_param)->property_default_value)));
        }
        return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_0_t,local_1_type_context,local_2_context,local_3_method_name,local_4_args);
      }
      {
        local_95_index = 0;
        local_96__count917 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count;
        while ((local_95_index < local_96__count917))
        {
          local_97_arg = ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[local_95_index]));
          local_98_param = ((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_93_match)->property_parameters))->property_data)->data))[local_95_index]));
          sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))+local_95_index, SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(context,local_97_arg,((ClassParameterInfo*)local_98_param)->property_type,false) );
          ++local_95_index;
        }
      }
      if (String__opEQ__String(((ClassTypeInfo*)((ClassMethodInfo*)local_93_match)->property_type_context)->property_name,str6.value))
      {
        if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count == 2))
        {
          local_99_lhs = ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[0]));
          local_100_rhs = ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[1]));
          if ((((CallFn____Object(0,local_99_lhs) == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64) || (CallFn____Object(0,local_99_lhs) == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32)) && (CallFn____Object(0,local_100_rhs) == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32)))
          {
            local_101_result = NULL;
            local_102_which_921 = local_3_method_name;
            if (String__opEQ__String(local_102_which_921,str1097.value))
            {
              local_101_result = CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdLeftShifted.create(),local_0_t,local_99_lhs,local_100_rhs);
            }
            else if (String__opEQ__String(local_102_which_921,str1098.value))
            {
              local_101_result = CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdRightShifted.create(),local_0_t,local_99_lhs,local_100_rhs);
            }
            else if (String__opEQ__String(local_102_which_921,str1101.value))
            {
              local_101_result = CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdRightXShifted.create(),local_0_t,local_99_lhs,local_100_rhs);
            }
            if ((local_101_result != NULL))
            {
              if (((local_2_context != NULL) && Cmd__no_side_effects(local_2_context)))
              {
                local_2_context = NULL;
              }
              if ((local_2_context != NULL))
              {
                SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str1104.value)) );
              }
              return local_101_result;
            }
          }
        }
      }
      local_103_call = NULL;
      {
        if (!!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_93_match)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0)) goto unsatisfied_9206;
        if (!(((ClassMethodInfo*)local_93_match)->property_type_context != local_1_type_context)) goto unsatisfied_9206;
        if (!((local_2_context == NULL) || (((ClassMethodInfo*)local_93_match)->property_type_context != CallFn____Object(0,local_2_context)))) goto unsatisfied_9206;
        satisfied_9206:;
        {
          if (((local_2_context != NULL) && !Cmd__no_side_effects(local_2_context)))
          {
            SLAG_THROW( Cmd__error__String(local_2_context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str197.value),local_3_method_name),str1107.value))) );
          }
          local_2_context = CmdSingletonReference__resolve(CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),local_0_t,((ClassMethodInfo*)local_93_match)->property_type_context));
          local_103_call = CmdContextCall__init__Token_Cmd_MethodInfo_CmdList(type_ClassCmdDynamicCall.create(),local_0_t,local_2_context,local_93_match,local_4_args);
        }
        goto end_9206;
        unsatisfied_9206:;
        {
          if ((local_2_context == NULL))
          {
            local_2_context = CmdThisReference__init__Token_TypeInfo(type_ClassCmdThisReference.create(),local_0_t,((ClassContext*)sxc_singletons[10])->property_this_type);
          }
          local_104_context_type = CallFn____Object(0,local_2_context);
          if (((((ClassQualifiers*)((ClassTypeInfo*)local_104_context_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_array)->property_flags) != 0))
          {
            TypeInfo__resolve(local_104_context_type);
            if (String__opEQ__String(local_3_method_name,str1076.value))
            {
              if (((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count == 1) && (CallFn____Object(0,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[0]))) == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32)))
              {
                return CmdArrayGet__init__Token_Cmd_Cmd(type_ClassCmdArrayGet.create(),local_0_t,local_2_context,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[0])));
              }
            }
            else if (String__opEQ__String(local_3_method_name,str998.value))
            {
              if ((((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count == 2) && (CallFn____Object(0,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[0]))) == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32)) && (CallFn____Object(0,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[1]))) == ((ClassTypeInfo*)local_104_context_type)->property_element_type)))
              {
                return CmdArraySet__init__Token_Cmd_Cmd_Cmd(type_ClassCmdArraySet.create(),local_0_t,local_2_context,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[0])),((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[1])));
              }
            }
          }
          local_103_call = CmdContextCall__init__Token_Cmd_MethodInfo_CmdList(type_ClassCmdDynamicCall.create(),local_0_t,local_2_context,local_93_match,local_4_args);
        }
      }
      end_9206:;
      return CmdDynamicCall__resolve(local_103_call);
    }
    goto end_8922;
    unsatisfied_8922:;
    {
      local_105_kind = NULL;
      if ((String__index_of__Char_Int32(local_3_method_name,((SlagChar)60),0) >= 0))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1113.value),local_3_method_name),str242.value)))) );
      }
      if (String__opEQ__String(local_3_method_name,str667.value))
      {
        local_105_kind = str1114.value;
      }
      else if ((local_2_context != NULL))
      {
        if ((local_5_original_args != NULL))
        {
          local_105_kind = str292.value;
        }
        else
        {
          local_105_kind = str1115.value;
        }
      }
      else if ((local_5_original_args != NULL))
      {
        local_105_kind = str1116.value;
      }
      else
      {
        local_105_kind = str1117.value;
      }
      local_106_context_name = NULL;
      if ((local_1_type_context != NULL))
      {
        local_106_context_name = ((ClassTypeInfo*)local_1_type_context)->property_name;
      }
      else
      {
        local_106_context_name = ((ClassTypeInfo*)((ClassContext*)sxc_singletons[10])->property_this_type)->property_name;
      }
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_8_candidates))->property_count == 0))
      {
        if ((local_5_original_args != NULL))
        {
          local_107_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),local_3_method_name);
          ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_107_buffer)->property_data,((SlagChar)40));
          local_108_first = true;
          local_109__reader938 = ArrayList_of_Cmd__create_reader(local_4_args);
          while (CallFn____Logical(14,local_109__reader938))
          {
            local_110_arg = CallFn____Object(45,local_109__reader938);
            if (local_108_first)
            {
              local_108_first = false;
            }
            else
            {
              ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_107_buffer)->property_data,((SlagChar)44));
            }
            StringBuilder__print__String(local_107_buffer,((ClassTypeInfo*)CallFn____Object(0,local_110_arg))->property_name);
          }
          ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_107_buffer)->property_data,((SlagChar)41));
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1118.value),local_105_kind),str1119.value),Global__to_String__Object(sxc_singletons[21],local_107_buffer)),str1120.value),local_106_context_name),str38.value)))) );
        }
        else
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1118.value),local_105_kind),str1119.value),local_3_method_name),str1120.value),local_106_context_name),str38.value)))) );
        }
      }
      else if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_33_matches))->property_count == 0))
      {
        if (((local_34_callchain_arg_count > 0) && (sxc_mod(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count,local_34_callchain_arg_count) == 0)))
        {
          local_111_cmd = local_2_context;
          while ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count != 0))
          {
            local_112_args_subset = CmdList__init__Int32(type_ClassCmdList.create(),2);
            local_113__local_942 = 1;
            local_114__last943 = local_34_callchain_arg_count;
            while ((local_113__local_942 <= local_114__last943))
            {
              ArrayList_of_Object__add__Object(local_112_args_subset,((ClassCmd*)((ClassCmd*)ArrayList_of_Object__remove__Int32(local_4_args,0))));
              ++local_113__local_942;
            }
            local_111_cmd = SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_0_t,local_1_type_context,local_111_cmd,local_3_method_name,local_112_args_subset);
          }
          return CallFn____Object(16,local_111_cmd);
        }
        if ((((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_count == 1) && ((((ClassQualifiers*)((ClassTypeInfo*)CallFn____Object(0,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[0])))))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0)) && (((String__index_of__String_Int32(local_3_method_name,str1121.value,0) == 0) || String__opEQ__String(local_3_method_name,str993.value)) || String__opEQ__String(local_3_method_name,str692.value))))
        {
          local_115_arg = ((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_4_args))->property_data)->data))[0])));
          local_116_mgr_type = ((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,TypeInfo__manager_name(CallFn____Object(0,local_115_arg))));
          if ((TypeInfo__find_method__String(local_116_mgr_type,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str991.value),((ClassTypeInfo*)CallFn____Object(0,local_115_arg))->property_name),str62.value))) != NULL))
          {
            local_117__reader946 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
            while (ArrayReader_of_MethodInfo__has_another(local_117__reader946))
            {
              local_118_m = ArrayReader_of_MethodInfo__read(local_117__reader946);
              if (((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_118_m)->property_parameters))->property_count != 0) && TypeInfo__instance_of__TypeInfo(((ClassParameterInfo*)((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_118_m)->property_parameters))->property_data)->data))[0]))))->property_type,((ClassTypeManager*)sxc_singletons[7])->property_type_string)))
              {
                ArrayList_of_Object__remove__Int32(local_4_args,0);
                ArrayList_of_Object__add__Object(local_4_args,CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmd*)local_115_arg)->property_t,local_115_arg,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmd*)local_115_arg)->property_t,str993.value,NULL))));
                return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(context,local_0_t,local_1_type_context,local_2_context,local_3_method_name,local_4_args);
              }
            }
          }
        }
        local_119_buffer = StringBuilder__init(type_ClassStringBuilder.create());
        StringBuilder__print__String(local_119_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1122.value),local_3_method_name),SlagAnalyzer__create_call_signature__CmdList(context,local_4_args)),str1123.value),local_106_context_name),str1124.value)));
        local_120__reader948 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
        while (ArrayReader_of_MethodInfo__has_another(local_120__reader948))
        {
          local_121_m = ArrayReader_of_MethodInfo__read(local_120__reader948);
          TextWriter__println__String(local_119_buffer,String__opADD__String(str69.value,((ClassMethodInfo*)local_121_m)->property_full_signature));
        }
        local_122_err = ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(local_119_buffer)));
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(local_119_buffer))) );
      }
      else
      {
        local_123_buffer = StringBuilder__init(type_ClassStringBuilder.create());
        StringBuilder__print__String(local_123_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1125.value),local_3_method_name),SlagAnalyzer__create_call_signature__CmdList(context,local_4_args)),str1126.value)));
        local_124__reader949 = ArrayList_of_MethodInfo__create_reader(local_8_candidates);
        while (ArrayReader_of_MethodInfo__has_another(local_124__reader949))
        {
          local_125_m = ArrayReader_of_MethodInfo__read(local_124__reader949);
          TextWriter__println__String(local_123_buffer,String__opADD__String(str69.value,((ClassMethodInfo*)local_125_m)->property_full_signature));
        }
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(local_123_buffer))) );
      }
    }
  }
  end_8922:;
}

static SlagObject* SlagAnalyzer__create_call_signature__CmdList( SXCRef context, SXCRef local_0_args )
{
  SXCRef local_1_buffer;
  SlagLogical local_2_first;
  SXCRef local_3__reader950;
  SXCRef local_4_arg;

  local_1_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_buffer)->property_data,((SlagChar)40));
  local_2_first = true;
  local_3__reader950 = ArrayList_of_Cmd__create_reader(local_0_args);
  while (CallFn____Logical(14,local_3__reader950))
  {
    local_4_arg = CallFn____Object(45,local_3__reader950);
    if (local_2_first)
    {
      local_2_first = false;
    }
    else
    {
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_buffer)->property_data,((SlagChar)44));
    }
    StringBuilder__print__String(local_1_buffer,((ClassTypeInfo*)CallFn____Object(0,local_4_arg))->property_name);
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_buffer)->property_data,((SlagChar)41));
  return StringBuilder__to_String(local_1_buffer);
}

static SlagLogical SlagAnalyzer__other_method_closer_precision__MethodInfo_CmdList_ArrayList_of_MethodInfo( SXCRef context, SXCRef local_0_m1, SXCRef local_1_args, SXCRef local_2_m_candidates )
{
  SXCRef local_3__reader952;
  SXCRef local_4_m2;
  SlagLogical local_5_one_m2_lower;
  SlagInt32 local_6_index;
  SlagInt32 local_7__count954;
  SXCRef local_8_m1_type;
  SXCRef local_9_m2_type;
  SXCRef local_10_arg_type;

  local_3__reader952 = ArrayList_of_MethodInfo__create_reader(local_2_m_candidates);
  while (ArrayReader_of_MethodInfo__has_another(local_3__reader952))
  {
    local_4_m2 = ArrayReader_of_MethodInfo__read(local_3__reader952);
    if ((local_0_m1 == local_4_m2))
    {
      goto next_9014;
    }
    local_5_one_m2_lower = false;
    {
      local_6_index = 0;
      local_7__count954 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_args))->property_count;
      while ((local_6_index < local_7__count954))
      {
        local_8_m1_type = ((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m1)->property_parameters))->property_data)->data))[local_6_index])))->property_type;
        local_9_m2_type = ((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_4_m2)->property_parameters))->property_data)->data))[local_6_index])))->property_type;
        local_10_arg_type = CallFn____Object(0,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_args))->property_data)->data))[local_6_index])));
        if (TypeInfo__is_lower_precision_than__TypeInfo(local_8_m1_type,local_9_m2_type))
        {
          goto next_9014;
        }
        if (TypeInfo__is_lower_precision_than__TypeInfo(local_9_m2_type,local_10_arg_type))
        {
          goto next_9014;
        }
        if (TypeInfo__is_lower_precision_than__TypeInfo(local_9_m2_type,local_8_m1_type))
        {
          local_5_one_m2_lower = true;
        }
        ++local_6_index;
      }
    }
    return local_5_one_m2_lower;
    next_9014:;
  }
  end_9014:;
  return false;
}

static SlagLogical SlagAnalyzer__other_method_improves_precision__MethodInfo_CmdList_ArrayList_of_MethodInfo( SXCRef context, SXCRef local_0_m1, SXCRef local_1_args, SXCRef local_2_m_candidates )
{
  SlagInt32 local_3_index;
  SlagInt32 local_4__count959;
  SXCRef local_5__reader961;
  SXCRef local_6_m2;
  SlagInt32 local_7_index;
  SlagInt32 local_8__count963;

  {
    {
      local_3_index = 0;
      local_4__count959 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_args))->property_count;
      while ((local_3_index < local_4__count959))
      {
        if (TypeInfo__is_lower_precision_than__TypeInfo(((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m1)->property_parameters))->property_data)->data))[local_3_index])))->property_type,CallFn____Object(0,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_args))->property_data)->data))[local_3_index])))))
        {
          if (true) goto satisfied_8991;
        }
        ++local_3_index;
      }
    }
    return false;
    satisfied_8991:;
    {
      local_5__reader961 = ArrayList_of_MethodInfo__create_reader(local_2_m_candidates);
      while (ArrayReader_of_MethodInfo__has_another(local_5__reader961))
      {
        local_6_m2 = ArrayReader_of_MethodInfo__read(local_5__reader961);
        if ((local_0_m1 == local_6_m2))
        {
          goto next_9006;
        }
        {
          local_7_index = 0;
          local_8__count963 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_args))->property_count;
          while ((local_7_index < local_8__count963))
          {
            if (TypeInfo__is_lower_precision_than__TypeInfo(((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_6_m2)->property_parameters))->property_data)->data))[local_7_index])))->property_type,CallFn____Object(0,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_args))->property_data)->data))[local_7_index])))))
            {
              goto next_9006;
            }
            ++local_7_index;
          }
        }
        return true;
        next_9006:;
      }
      end_9006:;
      return false;
    }
    goto end_8991;
    unsatisfied_8991:;
  }
  end_8991:;
}

static SlagLogical SlagAnalyzer__other_method_improves_references__MethodInfo_CmdList_ArrayList_of_MethodInfo( SXCRef context, SXCRef local_0_m1, SXCRef local_1_args, SXCRef local_2_m_candidates )
{
  SXCRef local_3__reader965;
  SXCRef local_4_m2;
  SlagLogical local_5_found_one_different_type;
  SlagInt32 local_6_index;
  SlagInt32 local_7__count967;
  SXCRef local_8_m1_type;
  SXCRef local_9_m2_type;

  local_3__reader965 = ArrayList_of_MethodInfo__create_reader(local_2_m_candidates);
  while (ArrayReader_of_MethodInfo__has_another(local_3__reader965))
  {
    local_4_m2 = ArrayReader_of_MethodInfo__read(local_3__reader965);
    if ((local_0_m1 == local_4_m2))
    {
      goto next_8982;
    }
    local_5_found_one_different_type = false;
    {
      local_6_index = 0;
      local_7__count967 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_args))->property_count;
      while ((local_6_index < local_7__count967))
      {
        local_8_m1_type = ((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m1)->property_parameters))->property_data)->data))[local_6_index])))->property_type;
        local_9_m2_type = ((ClassParameterInfo*)((ClassParameterInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_4_m2)->property_parameters))->property_data)->data))[local_6_index])))->property_type;
        if (!TypeInfo__instance_of__TypeInfo(local_9_m2_type,local_8_m1_type))
        {
          goto next_8982;
        }
        if ((local_8_m1_type != local_9_m2_type))
        {
          local_5_found_one_different_type = true;
        }
        ++local_6_index;
      }
    }
    return local_5_found_one_different_type;
    next_8982:;
  }
  end_8982:;
  return false;
}

static SlagObject* SlagAnalyzer__find_common_element_type__Token_TypeInfo_TypeInfo( SXCRef context, SXCRef local_0_t, SXCRef local_1_type1, SXCRef local_2_type2 )
{
  SXCRef local_3_readable_type;
  SXCRef local_4_cur_type;
  SXCRef local_5_readable_type;

  if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_type1)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_type2)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
    {
      if (TypeInfo__instance_of__TypeInfo(local_2_type2,local_1_type1))
      {
        return local_1_type1;
      }
      if (TypeInfo__instance_of__TypeInfo(local_1_type1,local_2_type2))
      {
        return local_2_type2;
      }
      local_3_readable_type = TypeInfo__readable_type(local_1_type1);
      if ((local_3_readable_type != NULL))
      {
        if (TypeInfo__instance_of__TypeInfo(local_2_type2,local_3_readable_type))
        {
          return local_3_readable_type;
        }
        if (TypeInfo__instance_of__TypeInfo(local_3_readable_type,local_2_type2))
        {
          return local_2_type2;
        }
      }
      local_3_readable_type = TypeInfo__readable_type(local_2_type2);
      if ((local_3_readable_type != NULL))
      {
        if (TypeInfo__instance_of__TypeInfo(local_1_type1,local_3_readable_type))
        {
          return local_3_readable_type;
        }
        if (TypeInfo__instance_of__TypeInfo(local_3_readable_type,local_1_type1))
        {
          return local_1_type1;
        }
      }
      local_4_cur_type = TypeInfo__base_class(local_1_type1);
      while (!TypeInfo__instance_of__TypeInfo(local_2_type2,local_4_cur_type))
      {
        local_4_cur_type = TypeInfo__base_class(local_4_cur_type);
      }
      return local_4_cur_type;
    }
    else
    {
      return SlagAnalyzer__find_common_element_type__Token_TypeInfo_TypeInfo(context,local_0_t,local_2_type2,local_1_type1);
    }
  }
  else
  {
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_type2)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
    {
      local_5_readable_type = TypeInfo__readable_type(local_2_type2);
      if ((!(local_5_readable_type != NULL) || ((((ClassQualifiers*)((ClassTypeInfo*)local_5_readable_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0)))
      {
        return NULL;
      }
      local_2_type2 = local_5_readable_type;
    }
    return SlagAnalyzer__determine_common_data_type__TypeInfo_TypeInfo(context,local_1_type1,local_2_type2);
  }
}

static SlagObject* SlagAnalyzer__determine_common_data_type__TypeInfo_TypeInfo( SXCRef context, SXCRef local_0_type1, SXCRef local_1_type2 )
{
  if ((local_0_type1 == local_1_type2))
  {
    return local_0_type1;
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_type1)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return local_0_type1;
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_type2)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return local_1_type2;
  }
  if ((TypeInfo__is_logical(local_0_type1)^TypeInfo__is_logical(local_1_type2)))
  {
    return NULL;
  }
  if ((local_0_type1 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
  {
    return local_0_type1;
  }
  if ((local_1_type2 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
  {
    return local_1_type2;
  }
  if ((local_0_type1 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
  {
    return local_0_type1;
  }
  if ((local_1_type2 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
  {
    return local_1_type2;
  }
  if ((local_0_type1 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
  {
    return local_0_type1;
  }
  if ((local_1_type2 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
  {
    return local_1_type2;
  }
  if ((local_0_type1 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
  {
    return local_0_type1;
  }
  if ((local_1_type2 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
  {
    return local_1_type2;
  }
  if ((local_0_type1 == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
  {
    if ((local_1_type2 == ((ClassTypeManager*)sxc_singletons[7])->property_type_byte))
    {
      return local_0_type1;
    }
    else
    {
      return ((ClassTypeManager*)sxc_singletons[7])->property_type_int32;
    }
  }
  else if ((local_1_type2 == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
  {
    if ((local_0_type1 == ((ClassTypeManager*)sxc_singletons[7])->property_type_byte))
    {
      return local_1_type2;
    }
    else
    {
      return ((ClassTypeManager*)sxc_singletons[7])->property_type_int32;
    }
  }
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_logical;
}

static SlagObject* SlagAnalyzer__find_common_element_type__Token_ArrayList_of_Cmd( SXCRef context, SXCRef local_0_t, SXCRef local_1_list )
{
  SXCRef local_2_common_type;
  SXCRef local_3__reader999;
  SXCRef local_4_arg;
  SXCRef local_5_cur_type;

  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_list))->property_count == 0))
  {
    return NULL;
  }
  local_2_common_type = CallFn____Object(0,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_list))->property_data)->data))[0])));
  local_3__reader999 = ArrayList_of_Cmd__from__Int32(local_1_list,1);
  while (CallFn____Logical(14,local_3__reader999))
  {
    local_4_arg = CallFn____Object(45,local_3__reader999);
    local_5_cur_type = CallFn____Object(0,local_4_arg);
    local_2_common_type = SlagAnalyzer__find_common_element_type__Token_TypeInfo_TypeInfo(context,local_0_t,local_2_common_type,local_5_cur_type);
    if (!(local_2_common_type != NULL))
    {
      goto end_9355;
    }
    next_9355:;
  }
  end_9355:;
  return local_2_common_type;
}

static SlagObject* SlagAnalyzer__assemble_list__Token_TypeInfo_ArrayList_of_Cmd_Int32( SXCRef context, SXCRef local_0_t, SXCRef local_1_list_type, SXCRef local_2_args, SlagInt32 local_3_capacity )
{
  SlagInt32 local_4_midpoint;
  SlagInt32 local_5_rhs_size;
  SXCRef local_6_lhs;
  SXCRef local_7_rhs;
  SXCRef local_8_list;
  SXCRef local_9__reader1002;
  SXCRef local_10_arg;

  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_count > 8))
  {
    local_4_midpoint = (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_count/2);
    local_5_rhs_size = (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_count-local_4_midpoint);
    local_6_lhs = SlagAnalyzer__assemble_list__Token_TypeInfo_ArrayList_of_Cmd_Int32(context,local_0_t,local_1_list_type,ArrayList_of_Cmd__subset__Int32_Int32(local_2_args,0,(local_4_midpoint-1)),local_3_capacity);
    local_7_rhs = SlagAnalyzer__assemble_list__Token_TypeInfo_ArrayList_of_Cmd_Int32(context,local_0_t,local_1_list_type,ArrayList_of_Cmd__subset__Int32_Int32(local_2_args,local_4_midpoint,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_count-1)),local_5_rhs_size);
    return CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_0_t,local_6_lhs,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmd*)local_6_lhs)->property_t,str968.value,CmdList__init__Cmd(type_ClassCmdList.create(),local_7_rhs)));
  }
  else
  {
    local_8_list = CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList(type_ClassCmdUnresolvedNewObject.create(),local_0_t,local_1_list_type,CmdList__init__Cmd(type_ClassCmdList.create(),CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_0_t,local_3_capacity)));
    local_9__reader1002 = ArrayList_of_Cmd__create_reader(local_2_args);
    while (CallFn____Logical(14,local_9__reader1002))
    {
      local_10_arg = CallFn____Object(45,local_9__reader1002);
      local_8_list = CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmd*)local_10_arg)->property_t,local_8_list,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmd*)local_10_arg)->property_t,str968.value,CmdList__init__Cmd(type_ClassCmdList.create(),local_10_arg)));
    }
    return local_8_list;
  }
}

void SlagAnalyzer__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* SlagAnalyzer__type_name( SXCRef context )
{
  return str922.value;
}

static SlagObject* CmdPrimitiveCast__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdPrimitiveCast*)context)->property_operand), CallFn____Object(16,((ClassCmdPrimitiveCast*)context)->property_operand) );
  return CallFn____Object(28,context);
}

void CmdPrimitiveCast__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdPrimitiveCast__type_name( SXCRef context )
{
  return str1087.value;
}

static SlagObject* CmdCastToInt64__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdCastToInt64.create(),((ClassCmdCastToInt64*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCastToInt64*)context)->property_operand));
}

static SlagObject* CmdCastToInt64__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_int64;
}

static SlagObject* CmdCastToInt64__optimize( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdCastToInt64*)context)->property_operand,&type_ClassCmdLiteralPrimitive))
  {
    if (sxc_instance_of(((ClassCmdCastToInt64*)context)->property_operand,&type_ClassCmdLiteralInt64))
    {
      return ((ClassCmdCastToInt64*)context)->property_operand;
    }
    if (sxc_instance_of(((ClassCmdCastToInt64*)context)->property_operand,&type_ClassCmdLiteralInt32))
    {
      return CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),((ClassCmdCastToInt64*)context)->property_t,((SlagInt64)((SlagInt32)((ClassCmdLiteralInt32*)((ClassCmdCastToInt64*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToInt64*)context)->property_operand,&type_ClassCmdLiteralReal64))
    {
      return CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),((ClassCmdCastToInt64*)context)->property_t,((SlagInt64)((ClassCmdLiteralReal64*)((ClassCmdCastToInt64*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToInt64*)context)->property_operand,&type_ClassCmdLiteralReal32))
    {
      return CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),((ClassCmdCastToInt64*)context)->property_t,((SlagInt64)((ClassCmdLiteralReal32*)((ClassCmdCastToInt64*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToInt64*)context)->property_operand,&type_ClassCmdLiteralChar))
    {
      return CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),((ClassCmdCastToInt64*)context)->property_t,((SlagInt64)((SlagInt32)((ClassCmdLiteralChar*)((ClassCmdCastToInt64*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToInt64*)context)->property_operand,&type_ClassCmdLiteralByte))
    {
      return CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),((ClassCmdCastToInt64*)context)->property_t,((SlagInt64)((SlagInt32)((ClassCmdLiteralByte*)((ClassCmdCastToInt64*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToInt64*)context)->property_operand,&type_ClassCmdLiteralLogical))
    {
      return CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),((ClassCmdCastToInt64*)context)->property_t,((SlagInt64)((SlagInt32)((ClassCmdLiteralLogical*)((ClassCmdCastToInt64*)context)->property_operand)->property_value)));
    }
  }
  return context;
}

static void CmdCastToInt64__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cast_to_int64)->property_ordinal);
  CallFn__(7,((ClassCmdCastToInt64*)context)->property_operand);
}

static SlagObject* CmdCastToInt64__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(12,((ClassCmdCastToInt64*)context)->property_operand);
}

static SlagObject* CmdCastToInt64__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1698.value),CallFn____Object(15,((ClassCmdCastToInt64*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCastToInt64__statement_to_cs( SXCRef context )
{
  return CallFn____Object(33,((ClassCmdCastToInt64*)context)->property_operand);
}

static SlagObject* CmdCastToInt64__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1944.value),CallFn____Object(35,((ClassCmdCastToInt64*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCastToInt64__statement_to_java( SXCRef context )
{
  return CallFn____Object(6,((ClassCmdCastToInt64*)context)->property_operand);
}

static SlagObject* CmdCastToInt64__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2022.value),CallFn____Object(41,((ClassCmdCastToInt64*)context)->property_operand)),str62.value));
}

void CmdCastToInt64__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCastToInt64__type_name( SXCRef context )
{
  return str1088.value;
}

static SlagObject* CmdRangeLT__create_duplicate( SXCRef context )
{
  return CmdRange__init__Token_Cmd_Cmd_Cmd(type_ClassCmdRangeLT.create(),((ClassCmdRangeLT*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeLT*)context)->property_first),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeLT*)context)->property_last),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeLT*)context)->property_increment));
}

static SlagObject* CmdRangeLT__resolve( SXCRef context )
{
  return CmdRange__resolve_range__String_Int32(context,str1257.value,1);
}

void CmdRangeLT__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdRangeLT__type_name( SXCRef context )
{
  return str899.value;
}

static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdDiv.create(),((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs));
}

static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,String__opADD__String(str689.value,str390.value));
  if ((local_0_call != NULL))
  {
    return local_0_call;
  }
  SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary(sxc_singletons[8],context);
  return CallFn____Object(28,context);
}

static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__optimize( SXCRef context )
{
  SXCRef local_0_left;
  SXCRef local_1_right;
  SXCRef local_2_left;
  SXCRef local_3_right;
  SXCRef local_4_left;
  SXCRef local_5_right;
  SXCRef local_6_left;
  SXCRef local_7_right;

  if ((sxc_instance_of(((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    if (sxc_instance_of(((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_0_left = ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs;
      local_1_right = ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs;
      ((ClassCmdLiteralInt64*)local_0_left)->property_value = (((ClassCmdLiteralInt64*)local_0_left)->property_value/((ClassCmdLiteralInt64*)local_1_right)->property_value);
      return ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs;
      local_3_right = ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = (((ClassCmdLiteralInt32*)local_2_left)->property_value/((ClassCmdLiteralInt32*)local_3_right)->property_value);
      return ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs,&type_ClassCmdLiteralReal64))
    {
      local_4_left = ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs;
      local_5_right = ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs;
      ((ClassCmdLiteralReal64*)local_4_left)->property_value = (((ClassCmdLiteralReal64*)local_4_left)->property_value/((ClassCmdLiteralReal64*)local_5_right)->property_value);
      return ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs,&type_ClassCmdLiteralReal32))
    {
      local_6_left = ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs;
      local_7_right = ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs;
      ((ClassCmdLiteralReal32*)local_6_left)->property_value = (((ClassCmdLiteralReal32*)local_6_left)->property_value/((ClassCmdLiteralReal32*)local_7_right)->property_value);
      return ((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_div)->property_ordinal);
  CallFn__(7,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs);
  CallFn__(7,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs);
}

static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_cpp( SXCRef context )
{
  SXCRef local_0_which_7753;
  SXCRef local_1_result;
  SXCRef local_2_which_7754;

  local_0_which_7753 = str390.value;
  if (String__opEQ__String(local_0_which_7753,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1666.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs)),str395.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7753,str392.value))
  {
    local_1_result = str39.value;
    local_2_which_7754 = CallFn____Object(0,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs);
    if ((local_2_which_7754 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      local_1_result = str1667.value;
    }
    else if ((local_2_which_7754 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      local_1_result = str1668.value;
    }
    else if ((local_2_which_7754 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      local_1_result = str1669.value;
    }
    else if ((local_2_which_7754 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      local_1_result = str1670.value;
    }
    return String__opADD__String(local_1_result,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1671.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs)),str1672.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs)),str62.value)));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(15,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs)),str390.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_cs( SXCRef context )
{
  SXCRef local_0_which_7755;

  local_0_which_7755 = str390.value;
  if (String__opEQ__String(local_0_which_7755,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7755,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),TypeInfo__x_name(CallFn____Object(0,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs))),str1925.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(35,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs)),str390.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_java( SXCRef context )
{
  SXCRef local_0_which_7756;

  local_0_which_7756 = str390.value;
  if (String__opEQ__String(local_0_which_7756,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7756,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2011.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(41,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_lhs)),str390.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div*)context)->property_rhs)),str62.value);
  }
}

void CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__type_name( SXCRef context )
{
  return str823.value;
}

static SlagInt32 HashTableMappingReader_of_Int32_and_Int32__available( SXCRef context )
{
  if ((((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_entries != NULL))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* HashTableMappingReader_of_Int32_and_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Mapping_of_Int32_and_Int32__init__Int32(type_ClassArrayList_of_Mapping_of_Int32_and_Int32.create(),HashTableMappingReader_of_Int32_and_Int32__available(context));
  while ((((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_entries != NULL))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,HashTableMappingReader_of_Int32_and_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* HashTableMappingReader_of_Int32_and_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Mapping_of_Int32_and_Int32__to_String(HashTableMappingReader_of_Int32_and_Int32__to_List(context));
}

static SlagObject* HashTableMappingReader_of_Int32_and_Int32__init__Reader_of_HashTableBin_of_Int32_and_Int32( SXCRef context, SXCRef local_0_bins_8780 )
{
  sxc_write_ref( &(((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_bins), local_0_bins_8780 );
  if (CallFn____Logical(14,((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_bins))
  {
    sxc_write_ref( &(((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Int32_and_Int32__create_reader(((ClassHashTableBin_of_Int32_and_Int32*)CallFn____Object(45,((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_bins))->property_entries) );
  }
  HashTableMappingReader_of_Int32_and_Int32__prep_next(context);
  return context;
}

static void HashTableMappingReader_of_Int32_and_Int32__prep_next( SXCRef context )
{
  if ((((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_entries == NULL))
  {
    return;
  }
  while (!CallFn____Logical(14,((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_entries))
  {
    if (CallFn____Logical(14,((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_bins))
    {
      sxc_write_ref( &(((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Int32_and_Int32__create_reader(((ClassHashTableBin_of_Int32_and_Int32*)CallFn____Object(45,((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_bins))->property_entries) );
    }
    else
    {
      sxc_write_ref( &(((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_entries), NULL );
      return;
    }
  }
}

static SlagLogical HashTableMappingReader_of_Int32_and_Int32__has_another( SXCRef context )
{
  return (((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_entries != NULL);
}

static SlagObject* HashTableMappingReader_of_Int32_and_Int32__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = CallFn____Object(45,((ClassHashTableMappingReader_of_Int32_and_Int32*)context)->property_entries);
  HashTableMappingReader_of_Int32_and_Int32__prep_next(context);
  return local_0_result;
}

void HashTableMappingReader_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableMappingReader_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1026.value;
}

void MethodTableManager__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassMethodTableManager*)context)->property_empty_list), ArrayList_of_MethodInfo__init__Int32(type_ClassArrayList_of_MethodInfo.create(),0) );
}

SlagObject* MethodTableManager__type_name( SXCRef context )
{
  return str549.value;
}

static SlagInt32 CoerceReader_of_TypeTemplate____available( SXCRef context )
{
  if (CallFn____Logical(14,((ClassCoerceReader_of_TypeTemplate__*)context)->property_src))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* CoerceReader_of_TypeTemplate____to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_ArrayList_of_TypeTemplate__init__Int32(type_ClassArrayList_of_ArrayList_of_TypeTemplate.create(),CoerceReader_of_TypeTemplate____available(context));
  while (CallFn____Logical(14,((ClassCoerceReader_of_TypeTemplate__*)context)->property_src))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,((ClassArrayList_of_TypeTemplate*)CallFn____Object(45,((ClassCoerceReader_of_TypeTemplate__*)context)->property_src)));
  }
  return local_0_result_list;
}

SlagObject* CoerceReader_of_TypeTemplate____to_String( SXCRef context )
{
  return ArrayList_of_ArrayList_of_TypeTemplate__to_String(CoerceReader_of_TypeTemplate____to_List(context));
}

static SlagObject* CoerceReader_of_TypeTemplate____init__Reader_of_Object( SXCRef context, SXCRef local_0_src_8142 )
{
  sxc_write_ref( &(((ClassCoerceReader_of_TypeTemplate__*)context)->property_src), local_0_src_8142 );
  return context;
}

static SlagLogical CoerceReader_of_TypeTemplate____has_another( SXCRef context )
{
  return CallFn____Logical(14,((ClassCoerceReader_of_TypeTemplate__*)context)->property_src);
}

static SlagObject* CoerceReader_of_TypeTemplate____read( SXCRef context )
{
  return ((ClassArrayList_of_TypeTemplate*)CallFn____Object(45,((ClassCoerceReader_of_TypeTemplate__*)context)->property_src));
}

void CoerceReader_of_TypeTemplate____init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CoerceReader_of_TypeTemplate____type_name( SXCRef context )
{
  return str927.value;
}

SlagObject* HashTableBase_of_String_and_StructureType_and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_StructureType_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_StructureType_and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_StructureType_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_StructureType.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_StructureType*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_StructureType_and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_StructureType_and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_StructureType_and_Object_and_Object__type_name( SXCRef context )
{
  return str726.value;
}

static SlagObject* CmdCloseScope__init__Token( SXCRef context, SXCRef local_0_t_7633 )
{
  sxc_write_ref( &(((ClassCmdCloseScope*)context)->property_t), local_0_t_7633 );
  return context;
}

static SlagObject* CmdCloseScope__create_duplicate( SXCRef context )
{
  return context;
}

static SlagObject* CmdCloseScope__resolve( SXCRef context )
{
  ArrayList_of_Object__discard_last(((ClassLocalVarTable*)((ClassContext*)sxc_singletons[10])->property_local_var_table)->property_scopes);
  return NULL;
}

void CmdCloseScope__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCloseScope__type_name( SXCRef context )
{
  return str775.value;
}

static SlagObject* Array_of_Mapping_of_Int32_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Mapping_of_Int32_and_Object.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Mapping_of_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Mapping_of_Int32_and_Object__type_name( SXCRef context )
{
  return str200.value;
}

SlagObject* ArrayList_of_Mapping_of_Int32_and_Object__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count5116;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count5116 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count5116))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Int32_and_Object*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Mapping_of_Int32_and_Object__init( SXCRef context )
{
  ArrayList_of_Mapping_of_Int32_and_Object__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Mapping_of_Int32_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Mapping_of_Int32_and_Object*)context)->property_data), type_ClassArray_of_Mapping_of_Int32_and_Object.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Mapping_of_Int32_and_Object__create_reader( SXCRef context )
{
  return ArrayReader_of_Mapping_of_Int32_and_Object__init__Collection_of_Mapping_of_Int32_and_Object_Array_of_Mapping_of_Int32_and_Object_Int32_Int32(type_ClassArrayReader_of_Mapping_of_Int32_and_Object.create(),context,((ClassArrayList_of_Mapping_of_Int32_and_Object*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_Mapping_of_Int32_and_Object__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_Mapping_of_Int32_and_Object__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_Mapping_of_Int32_and_Object__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_Mapping_of_Int32_and_Object__add__Mapping_of_Int32_and_Object( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_Mapping_of_Int32_and_Object*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_Mapping_of_Int32_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Mapping_of_Int32_and_Object__init__Int32(type_ClassArrayList_of_Mapping_of_Int32_and_Object.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Mapping_of_Int32_and_Object*)local_0_dup)->property_data,((ClassArrayList_of_Mapping_of_Int32_and_Object*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_Mapping_of_Int32_and_Object*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_Mapping_of_Int32_and_Object__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_Mapping_of_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Mapping_of_Int32_and_Object__type_name( SXCRef context )
{
  return str201.value;
}

static SlagObject* HashTableBin_of_Int32_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  sxc_write_ref( &(((ClassHashTableBin_of_Int32_and_Object*)context)->property_entries), ArrayList_of_Mapping_of_Int32_and_Object__init__Int32(type_ClassArrayList_of_Mapping_of_Int32_and_Object.create(),local_0_initial_capacity) );
  return context;
}

static SlagInt32 HashTableBin_of_Int32_and_Object__index_of_entry__Int32( SXCRef context, SlagInt32 local_0_key )
{
  SlagInt32 local_1_index;
  SlagInt32 local_2__count4594;

  {
    local_1_index = 0;
    local_2__count4594 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Int32_and_Object*)context)->property_entries))->property_count;
    while ((local_1_index < local_2__count4594))
    {
      if ((((ClassMapping_of_Int32_and_Object*)((ClassMapping_of_Int32_and_Object*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Int32_and_Object*)context)->property_entries))->property_data)->data))[local_1_index])))->property_key == local_0_key))
      {
        return local_1_index;
      }
      ++local_1_index;
    }
  }
  return -1;
}

static SlagObject* HashTableBin_of_Int32_and_Object__find_entry__Int32( SXCRef context, SlagInt32 local_0_key )
{
  SlagInt32 local_1_index;

  local_1_index = HashTableBin_of_Int32_and_Object__index_of_entry__Int32(context,local_0_key);
  if ((local_1_index == -1))
  {
    return NULL;
  }
  return ((ClassMapping_of_Int32_and_Object*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Int32_and_Object*)context)->property_entries))->property_data)->data))[local_1_index]));
}

static SlagLogical HashTableBin_of_Int32_and_Object__add_entry__Int32_Object( SXCRef context, SlagInt32 local_0_key, SXCRef local_1_value )
{
  SXCRef local_2_existing;

  local_2_existing = HashTableBin_of_Int32_and_Object__find_entry__Int32(context,local_0_key);
  if ((local_2_existing == NULL))
  {
    ArrayList_of_Object__add__Object(((ClassHashTableBin_of_Int32_and_Object*)context)->property_entries,Mapping_of_Int32_and_Object__init__Int32_Object(type_ClassMapping_of_Int32_and_Object.create(),local_0_key,local_1_value));
    return true;
  }
  else
  {
    sxc_write_ref( &(((ClassMapping_of_Int32_and_Object*)local_2_existing)->property_value), local_1_value );
    return false;
  }
}

static SlagLogical HashTableBin_of_Int32_and_Object__add_entry__Mapping_of_Int32_and_Object( SXCRef context, SXCRef local_0_entry )
{
  SXCRef local_1_existing;

  local_1_existing = HashTableBin_of_Int32_and_Object__find_entry__Int32(context,((ClassMapping_of_Int32_and_Object*)local_0_entry)->property_key);
  if ((local_1_existing == NULL))
  {
    ArrayList_of_Object__add__Object(((ClassHashTableBin_of_Int32_and_Object*)context)->property_entries,local_0_entry);
    return true;
  }
  else
  {
    sxc_write_ref( &(((ClassMapping_of_Int32_and_Object*)local_1_existing)->property_value), ((ClassMapping_of_Int32_and_Object*)local_0_entry)->property_value );
    return false;
  }
}

SlagObject* HashTableBin_of_Int32_and_Object__to_String( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader4599;
  SXCRef local_2_entry;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_1__reader4599 = ArrayList_of_Mapping_of_Int32_and_Object__create_reader(((ClassHashTableBin_of_Int32_and_Object*)context)->property_entries);
  while (ArrayReader_of_Mapping_of_Int32_and_Object__has_another(local_1__reader4599))
  {
    local_2_entry = ArrayReader_of_Mapping_of_Int32_and_Object__read(local_1__reader4599);
    StringBuilder__print__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str52.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMapping_of_Int32_and_Object*)local_2_entry)->property_key,10))),str53.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Int32_and_Object*)local_2_entry)->property_value)),str54.value)));
  }
  return StringBuilder__to_String(local_0_buffer);
}

void HashTableBin_of_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBin_of_Int32_and_Object__type_name( SXCRef context )
{
  return str203.value;
}

SlagObject* FileError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassFileError*)context)->property_message), str90.value );
  return context;
}

SlagObject* FileError__init__String( SXCRef context, SXCRef local_0_filename )
{
  sxc_write_ref( &(((ClassFileError*)context)->property_message), StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str91.value),local_0_filename),str92.value)) );
  return context;
}

void FileError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* FileError__type_name( SXCRef context )
{
  return str93.value;
}

static SlagObject* CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpLT.create(),((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_rhs));
}

static SlagObject* CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,str691.value);
  if ((sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_lhs,&type_ClassCmdLiteralString) && sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_rhs,&type_ClassCmdLiteralString)))
  {
    return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_t,(String__opCMP__String(((ClassCmdLiteralString*)((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_lhs)->property_value,((ClassCmdLiteralString*)((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_rhs)->property_value) == -1));
  }
  if ((local_0_call != NULL))
  {
    SlagAnalyzer__require_int32__Cmd(sxc_singletons[8],local_0_call);
    return CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__optimize(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpEQ.create(),((ClassCmd*)local_0_call)->property_t,local_0_call,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_t,-1)));
  }
  SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary(sxc_singletons[8],context);
  return CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__optimize(context);
}

static SlagObject* CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__optimize( SXCRef context )
{
  SXCRef local_0_type;

  if ((sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    local_0_type = CallFn____Object(0,((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_lhs);
    if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_t,(((ClassCmdLiteralInt64*)((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_lhs)->property_value < ((ClassCmdLiteralInt64*)((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_t,(((ClassCmdLiteralInt32*)((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_lhs)->property_value < ((ClassCmdLiteralInt32*)((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_t,(((ClassCmdLiteralReal64*)((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_lhs)->property_value < ((ClassCmdLiteralReal64*)((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_t,(((ClassCmdLiteralReal32*)((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_lhs)->property_value < ((ClassCmdLiteralReal32*)((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_rhs)->property_value));
    }
  }
  return context;
}

static void CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cmp_lt)->property_ordinal);
  CallFn__(7,((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_lhs);
  CallFn__(7,((ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt*)context)->property_rhs);
}

void CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__type_name( SXCRef context )
{
  return str883.value;
}

static SlagObject* ArrayReader_of_MethodGroup__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_MethodGroup__init__Int32(type_ClassArrayList_of_MethodGroup.create(),ArrayReader_of_MethodGroup__remaining(context));
  while (ArrayReader_of_MethodGroup__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_MethodGroup__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_MethodGroup__to_String( SXCRef context )
{
  return ArrayList_of_MethodGroup__to_String(ArrayReader_of_MethodGroup__to_List(context));
}

static SlagObject* ArrayReader_of_MethodGroup__init__Collection_of_MethodGroup_Array_of_MethodGroup_Int32_Int32( SXCRef context, SXCRef local_0_collection_10395, SXCRef local_1_data_10394, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_MethodGroup*)context)->property_collection), local_0_collection_10395 );
  sxc_write_ref( &(((ClassArrayReader_of_MethodGroup*)context)->property_data), local_1_data_10394 );
  ((ClassArrayReader_of_MethodGroup*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_MethodGroup*)context)->property_collection);
  }
  ((ClassArrayReader_of_MethodGroup*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_MethodGroup*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_MethodGroup*)context)->property_collection)))
  {
    ((ClassArrayReader_of_MethodGroup*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_MethodGroup*)context)->property_collection);
  }
  ((ClassArrayReader_of_MethodGroup*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_MethodGroup*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_MethodGroup__create_duplicate( SXCRef context )
{
  return ArrayReader_of_MethodGroup__init__Collection_of_MethodGroup_Array_of_MethodGroup_Int32_Int32(type_ClassArrayReader_of_MethodGroup.create(),((ClassArrayReader_of_MethodGroup*)context)->property_collection,((ClassArrayReader_of_MethodGroup*)context)->property_data,((ClassArrayReader_of_MethodGroup*)context)->property_counter,(((ClassArrayReader_of_MethodGroup*)context)->property_last_exclusive-((ClassArrayReader_of_MethodGroup*)context)->property_counter));
}

static SlagLogical ArrayReader_of_MethodGroup__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_MethodGroup*)context)->property_counter < ((ClassArrayReader_of_MethodGroup*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_MethodGroup*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_MethodGroup*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_MethodGroup__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_MethodGroup*)context)->property_last_exclusive-((ClassArrayReader_of_MethodGroup*)context)->property_counter);
}

static SlagObject* ArrayReader_of_MethodGroup__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassMethodGroup**)(((SlagArray*)((ClassArrayReader_of_MethodGroup*)context)->property_data)->data))[((ClassArrayReader_of_MethodGroup*)context)->property_counter];
  ++(((ClassArrayReader_of_MethodGroup*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_MethodGroup__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_MethodGroup__type_name( SXCRef context )
{
  return str1559.value;
}

static SlagObject* CmdAssign__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),((ClassCmdAssign*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdAssign*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdAssign*)context)->property_rhs));
}

static SlagObject* CmdAssign__resolve( SXCRef context )
{
  SXCRef local_0_access;
  SXCRef local_1_set_call;
  SXCRef local_2_name;
  SXCRef local_3_type_context;
  SXCRef local_4_context;
  SXCRef local_5_con;
  SXCRef local_6_op;
  SXCRef local_7_con;
  SXCRef local_8_s;
  SXCRef local_9_result;

  if (sxc_instance_of(((ClassCmdAssign*)context)->property_lhs,&type_ClassCmdAccessIndex))
  {
    local_0_access = ((ClassCmdAssign*)context)->property_lhs;
    ArrayList_of_Object__add__Object(((ClassCmdAccessIndex*)local_0_access)->property_args,((ClassCmdAssign*)context)->property_rhs);
    local_1_set_call = CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdAccessIndex*)local_0_access)->property_t,str998.value,((ClassCmdAccessIndex*)local_0_access)->property_args);
    return CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdAccessIndex*)local_0_access)->property_t,((ClassCmdAccessIndex*)local_0_access)->property_operand,local_1_set_call));
  }
  local_2_name = NULL;
  local_3_type_context = NULL;
  local_4_context = NULL;
  {
    if (sxc_instance_of(((ClassCmdAssign*)context)->property_lhs,&type_ClassCmdConstruct))
    {
      local_5_con = ((ClassCmdAssign*)context)->property_lhs;
      if (!(((ClassCmdConstruct*)local_5_con)->property_args == NULL)) goto unsatisfied_9494;
      if (!!String__opEQ__String(((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)local_5_con)->property_type_or_id)->property_name),str999.value)) goto unsatisfied_9494;
      if (TypeInfo__is_valid_type(((ClassCmdConstruct*)local_5_con)->property_type_or_id))
      {
        sxc_write_ref( &(((ClassCmdAssign*)context)->property_lhs), CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdAssign*)context)->property_t,((ClassCmdConstruct*)local_5_con)->property_type_or_id) );
        return CmdAssign__resolve(context);
      }
      local_2_name = ((ClassTypeInfo*)((ClassCmdConstruct*)local_5_con)->property_type_or_id)->property_name;
    }
    else if (sxc_instance_of(((ClassCmdAssign*)context)->property_lhs,&type_ClassCmdMemberAccess))
    {
      local_6_op = ((ClassCmdAssign*)context)->property_lhs;
      if (((String__opEQ__String(((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)((ClassCmdMemberAccess*)local_6_op)->property_member)->property_type_or_id)->property_name),str1076.value) && (((ClassCmdConstruct*)((ClassCmdMemberAccess*)local_6_op)->property_member)->property_args != NULL)) && (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdConstruct*)((ClassCmdMemberAccess*)local_6_op)->property_member)->property_args))->property_count != 0)))
      {
        sxc_write_ref( &(((ClassCmdMemberAccess*)local_6_op)->property_member), CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdConstruct*)((ClassCmdMemberAccess*)local_6_op)->property_member)->property_t,str998.value,((ClassCmdConstruct*)((ClassCmdMemberAccess*)local_6_op)->property_member)->property_args) );
        ArrayList_of_Object__add__Object(((ClassCmdConstruct*)((ClassCmdMemberAccess*)local_6_op)->property_member)->property_args,((ClassCmdAssign*)context)->property_rhs);
        return CmdMemberAccess__resolve(local_6_op);
      }
      if (!(((ClassCmdConstruct*)((ClassCmdMemberAccess*)local_6_op)->property_member)->property_args == NULL)) goto unsatisfied_9494;
      local_7_con = sxc_as(((ClassCmdMemberAccess*)local_6_op)->property_operand,&type_ClassCmdConstruct);
      if (((local_7_con != NULL) && TypeInfo__is_valid_type(((ClassCmdConstruct*)local_7_con)->property_type_or_id)))
      {
        TypeInfo__resolve(((ClassCmdConstruct*)local_7_con)->property_type_or_id);
        local_3_type_context = ((ClassCmdConstruct*)local_7_con)->property_type_or_id;
        local_4_context = CmdSingletonReference__resolve(CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdConstruct*)local_7_con)->property_t,local_3_type_context));
      }
      else
      {
        local_4_context = CallFn____Object(16,((ClassCmdMemberAccess*)local_6_op)->property_operand);
        local_3_type_context = CallFn____Object(0,local_4_context);
      }
      local_2_name = ((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)((ClassCmdMemberAccess*)local_6_op)->property_member)->property_type_or_id)->property_name);
    }
    else if (sxc_instance_of(((ClassCmdAssign*)context)->property_lhs,&type_ClassCmdSingletonReference))
    {
      local_8_s = ((ClassCmdAssign*)context)->property_lhs;
      return CmdSingletonWrite__resolve(CmdSingletonWrite__init__Token_TypeInfo_Cmd(type_ClassCmdSingletonWrite.create(),((ClassCmdAssign*)context)->property_t,((ClassCmdSingletonReference*)local_8_s)->property_of_type,((ClassCmdAssign*)context)->property_rhs));
    }
    else if (sxc_instance_of(((ClassCmdAssign*)context)->property_lhs,&type_ClassCmdNewObject))
    {
      if (!false) goto unsatisfied_9494;
    }
    else
    {
      SLAG_THROW( Error__init__String(type_ClassError.create(),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1204.value),CallFn____Object(25,((ClassCmdAssign*)context)->property_lhs)),str242.value))) );
    }
    satisfied_9494:;
    {
      local_9_result = SlagAnalyzer__create_property_set__Token_TypeInfo_Cmd_String_Cmd(sxc_singletons[8],((ClassCmdAssign*)context)->property_t,local_3_type_context,local_4_context,local_2_name,((ClassCmdAssign*)context)->property_rhs);
      if ((local_9_result == NULL))
      {
        SLAG_THROW( Cmd__error__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1222.value),local_2_name),str1223.value),Global__to_String__Object(sxc_singletons[21],local_3_type_context)),str242.value))) );
      }
      return local_9_result;
    }
    goto end_9494;
    unsatisfied_9494:;
    {
      SLAG_THROW( Cmd__error__String(context,str1225.value) );
    }
  }
  end_9494:;
}

void CmdAssign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdAssign__type_name( SXCRef context )
{
  return str816.value;
}

SlagObject* NullReferenceError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassNullReferenceError*)context)->property_message), str94.value );
  return context;
}

SlagObject* NullReferenceError__init__String( SXCRef context, SXCRef local_0_message_3667 )
{
  sxc_write_ref( &(((ClassNullReferenceError*)context)->property_message), local_0_message_3667 );
  return context;
}

void NullReferenceError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* NullReferenceError__type_name( SXCRef context )
{
  return str95.value;
}

void HashTable_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1031.value;
}

static SlagObject* Array_of_HashTable_of_String_and_LocalVarInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_HashTable_of_String_and_LocalVarInfo.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_HashTable_of_String_and_LocalVarInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_HashTable_of_String_and_LocalVarInfo__type_name( SXCRef context )
{
  return str1016.value;
}

static SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__last( SXCRef context )
{
  return ((ClassHashTable_of_String_and_LocalVarInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-1)]));
}

SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count8550;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count8550 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count8550))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassHashTable_of_String_and_LocalVarInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__init( SXCRef context )
{
  ArrayList_of_HashTable_of_String_and_LocalVarInfo__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_HashTable_of_String_and_LocalVarInfo*)context)->property_data), type_ClassArray_of_HashTable_of_String_and_LocalVarInfo.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__create_reader( SXCRef context )
{
  return ArrayReader_of_HashTable_of_String_and_LocalVarInfo__init__Collection_of_HashTable_of_String_and_LocalVarInfo_Array_of_HashTable_of_String_and_LocalVarInfo_Int32_Int32(type_ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo.create(),context,((ClassArrayList_of_HashTable_of_String_and_LocalVarInfo*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_HashTable_of_String_and_LocalVarInfo__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_HashTable_of_String_and_LocalVarInfo__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_HashTable_of_String_and_LocalVarInfo__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__add__HashTable_of_String_and_LocalVarInfo( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_HashTable_of_String_and_LocalVarInfo*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_HashTable_of_String_and_LocalVarInfo__init__Int32(type_ClassArrayList_of_HashTable_of_String_and_LocalVarInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_HashTable_of_String_and_LocalVarInfo*)local_0_dup)->property_data,((ClassArrayList_of_HashTable_of_String_and_LocalVarInfo*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_HashTable_of_String_and_LocalVarInfo*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_HashTable_of_String_and_LocalVarInfo__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_HashTable_of_String_and_LocalVarInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_HashTable_of_String_and_LocalVarInfo__type_name( SXCRef context )
{
  return str1017.value;
}

static SlagInt32 HashTableValueReader_of_Object_and_Object__available( SXCRef context )
{
  if ((((ClassHashTableValueReader_of_Object_and_Object*)context)->property_entries != NULL))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* HashTableValueReader_of_Object_and_Object__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Object__init__Int32(type_ClassArrayList_of_Object.create(),HashTableValueReader_of_Object_and_Object__available(context));
  while ((((ClassHashTableValueReader_of_Object_and_Object*)context)->property_entries != NULL))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,HashTableValueReader_of_Object_and_Object__read(context));
  }
  return local_0_result_list;
}

SlagObject* HashTableValueReader_of_Object_and_Object__to_String( SXCRef context )
{
  return ArrayList_of_Object__to_String(HashTableValueReader_of_Object_and_Object__to_List(context));
}

static SlagObject* HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object( SXCRef context, SXCRef local_0_bins_6956 )
{
  sxc_write_ref( &(((ClassHashTableValueReader_of_Object_and_Object*)context)->property_bins), local_0_bins_6956 );
  if (CallFn____Logical(14,((ClassHashTableValueReader_of_Object_and_Object*)context)->property_bins))
  {
    sxc_write_ref( &(((ClassHashTableValueReader_of_Object_and_Object*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Object__create_reader(((ClassHashTableBin_of_Object_and_Object*)CallFn____Object(45,((ClassHashTableValueReader_of_Object_and_Object*)context)->property_bins))->property_entries) );
  }
  HashTableValueReader_of_Object_and_Object__prep_next(context);
  return context;
}

static void HashTableValueReader_of_Object_and_Object__prep_next( SXCRef context )
{
  if ((((ClassHashTableValueReader_of_Object_and_Object*)context)->property_entries == NULL))
  {
    return;
  }
  while (!CallFn____Logical(14,((ClassHashTableValueReader_of_Object_and_Object*)context)->property_entries))
  {
    if (CallFn____Logical(14,((ClassHashTableValueReader_of_Object_and_Object*)context)->property_bins))
    {
      sxc_write_ref( &(((ClassHashTableValueReader_of_Object_and_Object*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Object__create_reader(((ClassHashTableBin_of_Object_and_Object*)CallFn____Object(45,((ClassHashTableValueReader_of_Object_and_Object*)context)->property_bins))->property_entries) );
    }
    else
    {
      sxc_write_ref( &(((ClassHashTableValueReader_of_Object_and_Object*)context)->property_entries), NULL );
      return;
    }
  }
}

static SlagLogical HashTableValueReader_of_Object_and_Object__has_another( SXCRef context )
{
  return (((ClassHashTableValueReader_of_Object_and_Object*)context)->property_entries != NULL);
}

static SlagObject* HashTableValueReader_of_Object_and_Object__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassMapping_of_Object_and_Object*)CallFn____Object(45,((ClassHashTableValueReader_of_Object_and_Object*)context)->property_entries))->property_value;
  HashTableValueReader_of_Object_and_Object__prep_next(context);
  return local_0_result;
}

void HashTableValueReader_of_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableValueReader_of_Object_and_Object__type_name( SXCRef context )
{
  return str574.value;
}

SlagObject* InvalidStateError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassInvalidStateError*)context)->property_message), str96.value );
  return context;
}

SlagObject* InvalidStateError__init__String( SXCRef context, SXCRef local_0_message_3668 )
{
  sxc_write_ref( &(((ClassInvalidStateError*)context)->property_message), local_0_message_3668 );
  return context;
}

void InvalidStateError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* InvalidStateError__type_name( SXCRef context )
{
  return str97.value;
}

static SlagObject* CmdCmpIs__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpIs.create(),((ClassCmdCmpIs*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpIs*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpIs*)context)->property_rhs));
}

static SlagObject* CmdCmpIs__resolve( SXCRef context )
{
  SXCRef local_0_lhs_type;
  SXCRef local_1_rhs_type;

  sxc_write_ref( &(((ClassCmdCmpIs*)context)->property_lhs), CallFn____Object(16,((ClassCmdCmpIs*)context)->property_lhs) );
  sxc_write_ref( &(((ClassCmdCmpIs*)context)->property_rhs), CallFn____Object(16,((ClassCmdCmpIs*)context)->property_rhs) );
  local_0_lhs_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdCmpIs*)context)->property_lhs);
  local_1_rhs_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdCmpIs*)context)->property_rhs);
  if ((!((((ClassQualifiers*)((ClassTypeInfo*)local_0_lhs_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0) || !((((ClassQualifiers*)((ClassTypeInfo*)local_1_rhs_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0)))
  {
    return CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__resolve(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpEQ.create(),((ClassCmdCmpIs*)context)->property_t,((ClassCmdCmpIs*)context)->property_lhs,((ClassCmdCmpIs*)context)->property_rhs));
  }
  if (sxc_instance_of(((ClassCmdCmpIs*)context)->property_lhs,&type_ClassCmdLiteralNull))
  {
    if (sxc_instance_of(((ClassCmdCmpIs*)context)->property_rhs,&type_ClassCmdLiteralNull))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpIs*)context)->property_t,true);
    }
    return CmdUnary__init__Token_Cmd(type_ClassCmdCmpIsNull.create(),((ClassCmdCmpIs*)context)->property_t,((ClassCmdCmpIs*)context)->property_rhs);
  }
  else if (sxc_instance_of(((ClassCmdCmpIs*)context)->property_rhs,&type_ClassCmdLiteralNull))
  {
    return CmdUnary__init__Token_Cmd(type_ClassCmdCmpIsNull.create(),((ClassCmdCmpIs*)context)->property_t,((ClassCmdCmpIs*)context)->property_lhs);
  }
  return context;
}

static void CmdCmpIs__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cmp_is)->property_ordinal);
  CallFn__(7,((ClassCmdCmpIs*)context)->property_lhs);
  CallFn__(7,((ClassCmdCmpIs*)context)->property_rhs);
}

static SlagObject* CmdCmpIs__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdCmpIs*)context)->property_lhs)),str1677.value),CallFn____Object(15,((ClassCmdCmpIs*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpIs__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCmpIs*)context)->property_lhs)),str1677.value),CallFn____Object(35,((ClassCmdCmpIs*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpIs__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCmpIs*)context)->property_lhs)),str1677.value),CallFn____Object(41,((ClassCmdCmpIs*)context)->property_rhs)),str62.value));
}

void CmdCmpIs__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpIs__type_name( SXCRef context )
{
  return str889.value;
}

SlagObject* ArrayList_of_SlagFile__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count6573;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count6573 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count6573))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassSlagFile*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_SlagFile__init( SXCRef context )
{
  ArrayList_of_SlagFile__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_SlagFile__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_SlagFile*)context)->property_data), type_ClassArray_of_SlagFile.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_SlagFile__create_reader( SXCRef context )
{
  return ArrayReader_of_SlagFile__init__Collection_of_SlagFile_Array_of_SlagFile_Int32_Int32(type_ClassArrayReader_of_SlagFile.create(),context,((ClassArrayList_of_SlagFile*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_SlagFile__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_SlagFile__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_SlagFile__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_SlagFile__add__SlagFile( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_SlagFile*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_SlagFile__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_SlagFile__init__Int32(type_ClassArrayList_of_SlagFile.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_SlagFile*)local_0_dup)->property_data,((ClassArrayList_of_SlagFile*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_SlagFile*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_SlagFile__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_SlagFile__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_SlagFile__type_name( SXCRef context )
{
  return str469.value;
}

static SlagObject* CmdContextCall__init__Token_Cmd_MethodInfo_CmdList( SXCRef context, SXCRef local_0_t_8865, SXCRef local_1_context_8864, SXCRef local_2_method_info_8863, SXCRef local_3_args_8862 )
{
  sxc_write_ref( &(((ClassCmdContextCall*)context)->property_t), local_0_t_8865 );
  sxc_write_ref( &(((ClassCmdContextCall*)context)->property_context), local_1_context_8864 );
  sxc_write_ref( &(((ClassCmdContextCall*)context)->property_method_info), local_2_method_info_8863 );
  sxc_write_ref( &(((ClassCmdContextCall*)context)->property_args), local_3_args_8862 );
  return context;
}

static SlagObject* CmdContextCall__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdContextCall*)context)->property_context), CallFn____Object(16,((ClassCmdContextCall*)context)->property_context) );
  CmdList__resolve(((ClassCmdContextCall*)context)->property_args);
  return context;
}

static void CmdContextCall__finalize_structure_info( SXCRef context )
{
  CallFn__(21,((ClassCmdContextCall*)context)->property_context);
  CmdList__finalize_structure_info(((ClassCmdContextCall*)context)->property_args);
}

static void CmdContextCall__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdContextCall*)context)->property_context);
  CmdList__group_dynamic_methods(((ClassCmdContextCall*)context)->property_args);
}

static SlagObject* CmdContextCall__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdContextCall*)context)->property_context), CallFn__CmdList__Object(1,((ClassCmdContextCall*)context)->property_context,local_0_arg_list) );
  CmdList__to_inline__CmdList(((ClassCmdContextCall*)context)->property_args,local_0_arg_list);
  return context;
}

void CmdContextCall__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdContextCall__type_name( SXCRef context )
{
  return str1047.value;
}

static SlagObject* CmdStaticCall__create_duplicate( SXCRef context )
{
  return CmdContextCall__init__Token_Cmd_MethodInfo_CmdList(type_ClassCmdStaticCall.create(),((ClassCmdStaticCall*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdStaticCall*)context)->property_context),((ClassCmdStaticCall*)context)->property_method_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdStaticCall*)context)->property_args));
}

SlagObject* CmdStaticCall__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CmdStaticCall__type_name(context)),str61.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdStaticCall*)context)->property_context)),str395.value),((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_full_signature),str395.value),((ClassString*)ArrayList_of_Cmd__format__String_String(((ClassCmdStaticCall*)context)->property_args,str1049.value,str64.value))),str62.value));
}

static SlagObject* CmdStaticCall__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdStaticCall*)context)->property_context), CallFn____Object(16,((ClassCmdStaticCall*)context)->property_context) );
  CmdList__resolve(((ClassCmdStaticCall*)context)->property_args);
  MethodInfo__resolve(((ClassCmdStaticCall*)context)->property_method_info);
  return context;
}

static SlagObject* CmdStaticCall__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdStaticCall*)context)->property_context), CallFn____Object(42,((ClassCmdStaticCall*)context)->property_context) );
  CmdList__finalize_calls(((ClassCmdStaticCall*)context)->property_args);
  return CmdStaticCall__inline_check(context);
}

static SlagObject* CmdStaticCall__inline_check( SXCRef context )
{
  SXCRef local_0_arg_list;
  SXCRef local_1_result;

  if ((((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_supports_inlining && (((ClassCmdStaticCall*)context)->property_method_info != ((ClassContext*)sxc_singletons[10])->property_this_method)))
  {
    if (((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_inlining_lock)
    {
      SLAG_THROW( SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmdStaticCall*)context)->property_t,str1270.value) );
    }
    ((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_inlining_lock = true;
    local_0_arg_list = CmdList__init__Int32(type_ClassCmdList.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_count+1));
    ArrayList_of_Object__add__Object(local_0_arg_list,((ClassCmdStaticCall*)context)->property_context);
    ArrayList_of_Cmd__add__Readable_of_Cmd(local_0_arg_list,((ClassCmdStaticCall*)context)->property_args);
    SLAG_TRY
    {
      local_1_result = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_body);
      local_1_result = CallFn__CmdList__Object(1,local_1_result,local_0_arg_list);
      ((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_inlining_lock = false;
      if ((((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_return_type != NULL))
      {
        return CmdCoerceAs__init__Token_Cmd_TypeInfo(type_ClassCmdCoerceAs.create(),((ClassCmdStaticCall*)context)->property_t,local_1_result,((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_return_type);
      }
      else
      {
        return local_1_result;
      }
    }
    SLAG_CATCH(_err18)
    {
      SlagTypeInfo* _err18_type = _err18->type;
      if (_err18_type->instance_of(&type_ClassSlagError))
      {
        SXCRef local_2_err = _err18;
        ((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_supports_inlining = false;
      }
      else
      {
        SLAG_THROW(_err18);
      }
    }
  }
  ((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_called = true;
  return context;
}

static void CmdStaticCall__write_etc( SXCRef context )
{
  SlagInt32 local_0_index;

  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_static_call)->property_ordinal);
  local_0_index = ((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_index;
  if ((local_0_index == -1))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1382.value),((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_full_signature),str1488.value),((ClassMethodInfo*)((ClassETCWriter*)sxc_singletons[13])->property_this_method)->property_full_signature),str962.value)))) );
  }
  ETCWriter__writeX__Int32(sxc_singletons[13],local_0_index);
  CallFn__(7,((ClassCmdStaticCall*)context)->property_context);
  CmdList__write_etc(((ClassCmdStaticCall*)context)->property_args);
}

static SlagObject* CmdStaticCall__statement_to_cpp( SXCRef context )
{
  return CmdStaticCall__to_cpp__Logical(context,false);
}

static SlagObject* CmdStaticCall__to_cpp( SXCRef context )
{
  return CmdStaticCall__to_cpp__Logical(context,true);
}

static SlagObject* CmdStaticCall__to_cpp__Logical( SXCRef context, SlagLogical local_0_cast_return_value )
{
  SXCRef local_1_which_2936;
  SXCRef local_2_native_call_str;

  if ((((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_type_context == ((ClassTypeManager*)sxc_singletons[7])->property_type_generic_array))
  {
    local_1_which_2936 = ((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_name;
    if (String__opEQ__String(local_1_which_2936,str1233.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1696.value),CallFn____Object(15,((ClassCmdStaticCall*)context)->property_context)),str1697.value));
    }
  }
  local_2_native_call_str = NULL;
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
  {
    local_2_native_call_str = CPPWriter__native_call__MethodInfo_String_CmdList(sxc_singletons[11],((ClassCmdStaticCall*)context)->property_method_info,CallFn____Object(15,((ClassCmdStaticCall*)context)->property_context),((ClassCmdStaticCall*)context)->property_args);
  }
  if ((local_2_native_call_str != NULL))
  {
    return local_2_native_call_str;
  }
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_count != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info)),str61.value),CallFn____Object(15,((ClassCmdStaticCall*)context)->property_context)),str395.value),CmdList__to_cpp(((ClassCmdStaticCall*)context)->property_args)),str62.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info)),str61.value),CallFn____Object(15,((ClassCmdStaticCall*)context)->property_context)),str62.value));
  }
}

static SlagObject* CmdStaticCall__statement_to_cs( SXCRef context )
{
  return CmdStaticCall__to_cs__Logical(context,false);
}

static SlagObject* CmdStaticCall__to_cs( SXCRef context )
{
  return CmdStaticCall__to_cs__Logical(context,true);
}

static SlagObject* CmdStaticCall__to_cs__Logical( SXCRef context, SlagLogical local_0_cast_return_value )
{
  SXCRef local_1_which_2941;
  SXCRef local_2_cast;
  SXCRef local_3_this_method;
  SXCRef local_4_this_type;

  if ((((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_type_context == ((ClassTypeManager*)sxc_singletons[7])->property_type_generic_array))
  {
    local_1_which_2941 = ((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_name;
    if (String__opEQ__String(local_1_which_2941,str1233.value))
    {
      return String__opADD__String(CallFn____Object(35,((ClassCmdStaticCall*)context)->property_context),str1937.value);
    }
    else if (String__opEQ__String(local_1_which_2941,str1938.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1939.value),CallFn____Object(35,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[0])))),str395.value),CallFn____Object(35,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[1])))),str395.value),CallFn____Object(35,((ClassCmdStaticCall*)context)->property_context)),str395.value),CallFn____Object(35,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[2])))),str395.value),CallFn____Object(35,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[3])))),str62.value));
    }
    else if (String__opEQ__String(local_1_which_2941,str1940.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1941.value),CallFn____Object(35,((ClassCmdStaticCall*)context)->property_context)),str395.value),CallFn____Object(35,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[0])))),str395.value),CallFn____Object(35,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[1])))),str62.value));
    }
    else
    {
      return String__opADD__String(str1942.value,MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info));
    }
  }
  local_2_cast = str39.value;
  if ((local_0_cast_return_value && (((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_return_type != MethodInfo__base_return_type(((ClassCmdStaticCall*)context)->property_method_info))))
  {
    local_2_cast = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),TypeInfo__x_name(((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_return_type)),str62.value));
  }
  if (sxc_instance_of(((ClassCmdStaticCall*)context)->property_context,&type_ClassCmdThisReference))
  {
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
    {
      return String__opADD__String(local_2_cast,CSWriter__native_call__String_String_String_CmdList(sxc_singletons[28],((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_full_signature,MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info),str999.value,((ClassCmdStaticCall*)context)->property_args));
    }
    else
    {
      local_3_this_method = ((ClassCSWriter*)sxc_singletons[28])->property_this_method;
      local_4_this_type = ((ClassMethodInfo*)local_3_this_method)->property_type_context;
      if ((((local_4_this_type != ((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_type_context) && GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_4_this_type)->property_methods_by_signature)->property_data,((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_signature)) && (((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_4_this_type)->property_methods_by_signature)->property_data,((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_signature)) != ((ClassCmdStaticCall*)context)->property_method_info)))
      {
        return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_2_cast),str1943.value),MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info)),str61.value),CmdList__to_cs(((ClassCmdStaticCall*)context)->property_args)),str62.value));
      }
      else
      {
        return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_2_cast),MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info)),str61.value),CmdList__to_cs(((ClassCmdStaticCall*)context)->property_args)),str62.value));
      }
    }
  }
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
  {
    return String__opADD__String(local_2_cast,CSWriter__native_call__String_String_String_CmdList(sxc_singletons[28],((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_full_signature,MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info),CallFn____Object(35,((ClassCmdStaticCall*)context)->property_context),((ClassCmdStaticCall*)context)->property_args));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_2_cast),CallFn____Object(35,((ClassCmdStaticCall*)context)->property_context)),str38.value),MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info)),str61.value),CmdList__to_cs(((ClassCmdStaticCall*)context)->property_args)),str62.value));
  }
}

static SlagObject* CmdStaticCall__statement_to_java( SXCRef context )
{
  return CmdStaticCall__to_java__Logical(context,false);
}

static SlagObject* CmdStaticCall__to_java( SXCRef context )
{
  return CmdStaticCall__to_java__Logical(context,true);
}

static SlagObject* CmdStaticCall__to_java__Logical( SXCRef context, SlagLogical local_0_cast_return_value )
{
  SXCRef local_1_which_2948;
  SXCRef local_2_cast;
  SXCRef local_3_this_method;
  SXCRef local_4_this_type;

  if ((((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_type_context == ((ClassTypeManager*)sxc_singletons[7])->property_type_generic_array))
  {
    local_1_which_2948 = ((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_name;
    if (String__opEQ__String(local_1_which_2948,str1233.value))
    {
      return String__opADD__String(CallFn____Object(41,((ClassCmdStaticCall*)context)->property_context),str2019.value);
    }
    else if (String__opEQ__String(local_1_which_2948,str1938.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2020.value),CallFn____Object(41,((ClassCmdWideningCast*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[0])))->property_operand)),str395.value),CallFn____Object(41,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[1])))),str395.value),CallFn____Object(41,((ClassCmdStaticCall*)context)->property_context)),str395.value),CallFn____Object(41,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[2])))),str395.value),CallFn____Object(41,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[3])))),str62.value));
    }
    else if (String__opEQ__String(local_1_which_2948,str1940.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1941.value),CallFn____Object(41,((ClassCmdStaticCall*)context)->property_context)),str395.value),CallFn____Object(41,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[0])))),str395.value),CallFn____Object(41,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStaticCall*)context)->property_args))->property_data)->data))[1])))),str62.value));
    }
    else
    {
      return String__opADD__String(str1942.value,MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info));
    }
  }
  local_2_cast = str39.value;
  if (sxc_instance_of(((ClassCmdStaticCall*)context)->property_context,&type_ClassCmdThisReference))
  {
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
    {
      return String__opADD__String(local_2_cast,JavaWriter__native_call__String_String_String_CmdList(sxc_singletons[19],((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_full_signature,MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info),str999.value,((ClassCmdStaticCall*)context)->property_args));
    }
    else
    {
      local_3_this_method = ((ClassJavaWriter*)sxc_singletons[19])->property_this_method;
      local_4_this_type = ((ClassMethodInfo*)local_3_this_method)->property_type_context;
      if ((((local_4_this_type != ((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_type_context) && GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_4_this_type)->property_methods_by_signature)->property_data,((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_signature)) && (((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_4_this_type)->property_methods_by_signature)->property_data,((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_signature)) != ((ClassCmdStaticCall*)context)->property_method_info)))
      {
        return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_2_cast),str2021.value),MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info)),str61.value),CmdList__to_java(((ClassCmdStaticCall*)context)->property_args)),str62.value));
      }
      else
      {
        return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_2_cast),MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info)),str61.value),CmdList__to_java(((ClassCmdStaticCall*)context)->property_args)),str62.value));
      }
    }
  }
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
  {
    return String__opADD__String(local_2_cast,JavaWriter__native_call__String_String_String_CmdList(sxc_singletons[19],((ClassMethodInfo*)((ClassCmdStaticCall*)context)->property_method_info)->property_full_signature,MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info),CallFn____Object(41,((ClassCmdStaticCall*)context)->property_context),((ClassCmdStaticCall*)context)->property_args));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_2_cast),CallFn____Object(41,((ClassCmdStaticCall*)context)->property_context)),str38.value),MethodInfo__x_name(((ClassCmdStaticCall*)context)->property_method_info)),str61.value),CmdList__to_java(((ClassCmdStaticCall*)context)->property_args)),str62.value));
  }
}

void CmdStaticCall__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdStaticCall__type_name( SXCRef context )
{
  return str1048.value;
}

SlagObject* Mapping_of_String_and_MethodInfo____to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_MethodInfo__*)context)->property_key),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_String_and_MethodInfo__*)context)->property_value)));
}

void Mapping_of_String_and_MethodInfo____init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_MethodInfo____type_name( SXCRef context )
{
  return str987.value;
}

static SlagObject* Array_of_CmdWhichCase__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_CmdWhichCase.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_CmdWhichCase__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_CmdWhichCase__type_name( SXCRef context )
{
  return str752.value;
}

static SlagObject* ArrayReader_of_CmdWhichCase__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_CmdWhichCase__init__Int32(type_ClassArrayList_of_CmdWhichCase.create(),ArrayReader_of_CmdWhichCase__remaining(context));
  while (ArrayReader_of_CmdWhichCase__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_CmdWhichCase__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_CmdWhichCase__to_String( SXCRef context )
{
  return ArrayList_of_CmdWhichCase__to_String(ArrayReader_of_CmdWhichCase__to_List(context));
}

static SlagObject* ArrayReader_of_CmdWhichCase__init__Collection_of_CmdWhichCase_Array_of_CmdWhichCase_Int32_Int32( SXCRef context, SXCRef local_0_collection_7512, SXCRef local_1_data_7511, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_CmdWhichCase*)context)->property_collection), local_0_collection_7512 );
  sxc_write_ref( &(((ClassArrayReader_of_CmdWhichCase*)context)->property_data), local_1_data_7511 );
  ((ClassArrayReader_of_CmdWhichCase*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_CmdWhichCase*)context)->property_collection);
  }
  ((ClassArrayReader_of_CmdWhichCase*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_CmdWhichCase*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_CmdWhichCase*)context)->property_collection)))
  {
    ((ClassArrayReader_of_CmdWhichCase*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_CmdWhichCase*)context)->property_collection);
  }
  ((ClassArrayReader_of_CmdWhichCase*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_CmdWhichCase*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_CmdWhichCase__create_duplicate( SXCRef context )
{
  return ArrayReader_of_CmdWhichCase__init__Collection_of_CmdWhichCase_Array_of_CmdWhichCase_Int32_Int32(type_ClassArrayReader_of_CmdWhichCase.create(),((ClassArrayReader_of_CmdWhichCase*)context)->property_collection,((ClassArrayReader_of_CmdWhichCase*)context)->property_data,((ClassArrayReader_of_CmdWhichCase*)context)->property_counter,(((ClassArrayReader_of_CmdWhichCase*)context)->property_last_exclusive-((ClassArrayReader_of_CmdWhichCase*)context)->property_counter));
}

static SlagLogical ArrayReader_of_CmdWhichCase__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_CmdWhichCase*)context)->property_counter < ((ClassArrayReader_of_CmdWhichCase*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_CmdWhichCase*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_CmdWhichCase*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_CmdWhichCase__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_CmdWhichCase*)context)->property_last_exclusive-((ClassArrayReader_of_CmdWhichCase*)context)->property_counter);
}

static SlagObject* ArrayReader_of_CmdWhichCase__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassCmdWhichCase**)(((SlagArray*)((ClassArrayReader_of_CmdWhichCase*)context)->property_data)->data))[((ClassArrayReader_of_CmdWhichCase*)context)->property_counter];
  ++(((ClassArrayReader_of_CmdWhichCase*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_CmdWhichCase__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_CmdWhichCase__type_name( SXCRef context )
{
  return str754.value;
}

static SlagObject* Array_of_Qualifiers__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Qualifiers.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Qualifiers__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Qualifiers__type_name( SXCRef context )
{
  return str492.value;
}

static SlagObject* Array_of_CmdElseIf__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_CmdElseIf.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_CmdElseIf__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_CmdElseIf__type_name( SXCRef context )
{
  return str743.value;
}

static void ArrayList_of_CmdElseIf__discard_from__Int32( SXCRef context, SlagInt32 local_0_first_index )
{
  ArrayList_of_Object__discard__Int32_Int32(context,local_0_first_index,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-1));
}

SlagObject* ArrayList_of_CmdElseIf__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count7371;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count7371 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count7371))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassCmdElseIf*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_CmdElseIf__init( SXCRef context )
{
  ArrayList_of_CmdElseIf__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_CmdElseIf__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_CmdElseIf*)context)->property_data), type_ClassArray_of_CmdElseIf.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_CmdElseIf__create_reader( SXCRef context )
{
  return ArrayReader_of_CmdElseIf__init__Collection_of_CmdElseIf_Array_of_CmdElseIf_Int32_Int32(type_ClassArrayReader_of_CmdElseIf.create(),context,((ClassArrayList_of_CmdElseIf*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_CmdElseIf__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_CmdElseIf__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_CmdElseIf__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_CmdElseIf__add__CmdElseIf( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_CmdElseIf*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_CmdElseIf__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_CmdElseIf__init__Int32(type_ClassArrayList_of_CmdElseIf.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_CmdElseIf*)local_0_dup)->property_data,((ClassArrayList_of_CmdElseIf*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_CmdElseIf*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_CmdElseIf__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_CmdElseIf__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_CmdElseIf__type_name( SXCRef context )
{
  return str744.value;
}

static SlagObject* Array_of_Mapping_of_String_and_SignalHandler__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Mapping_of_String_and_SignalHandler.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Mapping_of_String_and_SignalHandler__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Mapping_of_String_and_SignalHandler__type_name( SXCRef context )
{
  return str100.value;
}

static SlagObject* ReferenceTable_of_String_and_SignalHandler__init__Int32( SXCRef context, SlagInt32 local_0_capacity )
{
  sxc_write_ref( &(((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries), type_ClassArray_of_Mapping_of_String_and_SignalHandler.create(local_0_capacity) );
  ((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_open_spots = (local_0_capacity/2);
  return context;
}

static void ReferenceTable_of_String_and_SignalHandler__set__String_SignalHandler( SXCRef context, SXCRef local_0_key, SXCRef local_1_value )
{
  SlagInt32 local_2_limit;
  SlagInt32 local_3_highest;
  SlagInt32 local_4_i;
  SXCRef local_5_entry;
  SXCRef local_6_new_table;
  SlagInt32 local_7_index;
  SlagInt32 local_8__last3793;

  local_2_limit = ((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->array_count;
  local_3_highest = (local_2_limit-1);
  local_4_i = ((((SlagString*)local_0_key)->hash_code)&local_3_highest);
  for (;;)
  {
    local_5_entry = ((ClassMapping_of_String_and_SignalHandler**)(((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->data))[local_4_i];
    if ((local_5_entry != NULL))
    {
      if (String__opEQ__String(((ClassMapping_of_String_and_SignalHandler*)local_5_entry)->property_key,local_0_key))
      {
        sxc_write_ref( &(((ClassMapping_of_String_and_SignalHandler*)local_5_entry)->property_value), local_1_value );
        return;
      }
    }
    else
    {
      sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->data))+local_4_i, Mapping_of_String_and_SignalHandler__init__String_SignalHandler(type_ClassMapping_of_String_and_SignalHandler.create(),local_0_key,local_1_value) );
      --(((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_open_spots);
      if ((((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_open_spots == 0))
      {
        local_6_new_table = ReferenceTable_of_String_and_SignalHandler__init__Int32(type_ClassReferenceTable_of_String_and_SignalHandler.create(),(local_2_limit<<1));
        local_7_index = 0;
        local_8__last3793 = local_3_highest;
        while ((local_7_index <= local_8__last3793))
        {
          local_5_entry = ((ClassMapping_of_String_and_SignalHandler**)(((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->data))[local_7_index];
          if ((local_5_entry != NULL))
          {
            ReferenceTable_of_String_and_SignalHandler__set__String_SignalHandler(local_6_new_table,((ClassMapping_of_String_and_SignalHandler*)local_5_entry)->property_key,((ClassMapping_of_String_and_SignalHandler*)local_5_entry)->property_value);
          }
          ++local_7_index;
        }
        sxc_write_ref( &(((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries), ((ClassReferenceTable_of_String_and_SignalHandler*)local_6_new_table)->property_entries );
        ((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_open_spots = ((ClassReferenceTable_of_String_and_SignalHandler*)local_6_new_table)->property_open_spots;
      }
      return;
    }
    local_4_i = ((local_4_i+1)&local_3_highest);
  }
}

static SlagObject* ReferenceTable_of_String_and_SignalHandler__get__String( SXCRef context, SXCRef local_0_key )
{
  SlagInt32 local_1_highest;
  SlagInt32 local_2_first_i;
  SlagInt32 local_3_i;
  SXCRef local_4_entry;
  SXCRef local_5_entry;

  local_1_highest = (((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->array_count-1);
  local_2_first_i = ((((SlagString*)local_0_key)->hash_code)&local_1_highest);
  local_3_i = local_2_first_i;
  for (;;)
  {
    next_4296:;
    local_4_entry = ((ClassMapping_of_String_and_SignalHandler**)(((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->data))[local_3_i];
    if ((local_4_entry != NULL))
    {
      if ((((ClassMapping_of_String_and_SignalHandler*)local_4_entry)->property_key == local_0_key))
      {
        return ((ClassMapping_of_String_and_SignalHandler*)local_4_entry)->property_value;
      }
    }
    else
    {
      goto end_4296;
    }
    local_3_i = ((local_3_i+1)&local_1_highest);
  }
  end_4296:;
  local_3_i = local_2_first_i;
  for (;;)
  {
    local_5_entry = ((ClassMapping_of_String_and_SignalHandler**)(((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->data))[local_3_i];
    if ((local_5_entry != NULL))
    {
      if (String__opEQ__String(((ClassMapping_of_String_and_SignalHandler*)local_5_entry)->property_key,local_0_key))
      {
        return ((ClassMapping_of_String_and_SignalHandler*)local_5_entry)->property_value;
      }
    }
    else
    {
      return NULL;
    }
    local_3_i = ((local_3_i+1)&local_1_highest);
  }
}

static SlagObject* ReferenceTable_of_String_and_SignalHandler__find_key__String( SXCRef context, SXCRef local_0_key )
{
  SlagInt32 local_1_highest;
  SlagInt32 local_2_i;
  SXCRef local_3_entry;

  local_1_highest = (((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->array_count-1);
  local_2_i = ((((SlagString*)local_0_key)->hash_code)&local_1_highest);
  for (;;)
  {
    local_3_entry = ((ClassMapping_of_String_and_SignalHandler**)(((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->data))[local_2_i];
    if ((local_3_entry != NULL))
    {
      if (String__opEQ__String(((ClassMapping_of_String_and_SignalHandler*)local_3_entry)->property_key,local_0_key))
      {
        return ((ClassMapping_of_String_and_SignalHandler*)local_3_entry)->property_key;
      }
    }
    else
    {
      return NULL;
    }
    local_2_i = ((local_2_i+1)&local_1_highest);
  }
}

static SlagObject* ReferenceTable_of_String_and_SignalHandler__remove__String( SXCRef context, SXCRef local_0_key )
{
  SlagInt32 local_1_highest;
  SlagInt32 local_2_i;
  SXCRef local_3_entry;

  local_1_highest = (((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->array_count-1);
  local_2_i = ((((SlagString*)local_0_key)->hash_code)&local_1_highest);
  for (;;)
  {
    local_3_entry = ((ClassMapping_of_String_and_SignalHandler**)(((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->data))[local_2_i];
    if ((local_3_entry != NULL))
    {
      if (String__opEQ__String(((ClassMapping_of_String_and_SignalHandler*)local_3_entry)->property_key,local_0_key))
      {
        sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_entries)->data))+local_2_i, NULL );
        ++(((ClassReferenceTable_of_String_and_SignalHandler*)context)->property_open_spots);
        return ((ClassMapping_of_String_and_SignalHandler*)local_3_entry)->property_value;
      }
    }
    else
    {
      return NULL;
    }
    local_2_i = ((local_2_i+1)&local_1_highest);
  }
}

void ReferenceTable_of_String_and_SignalHandler__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ReferenceTable_of_String_and_SignalHandler__type_name( SXCRef context )
{
  return str98.value;
}

static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Object__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_HashTableBin_of_Object_and_Object__init__Int32(type_ClassArrayList_of_HashTableBin_of_Object_and_Object.create(),ArrayReader_of_HashTableBin_of_Object_and_Object__remaining(context));
  while (ArrayReader_of_HashTableBin_of_Object_and_Object__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_HashTableBin_of_Object_and_Object__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Object__to_String( SXCRef context )
{
  return ArrayList_of_HashTableBin_of_Object_and_Object__to_String(ArrayReader_of_HashTableBin_of_Object_and_Object__to_List(context));
}

static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Object__init__Collection_of_HashTableBin_of_Object_and_Object_Array_of_HashTableBin_of_Object_and_Object_Int32_Int32( SXCRef context, SXCRef local_0_collection_4084, SXCRef local_1_data_4083, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_collection), local_0_collection_4084 );
  sxc_write_ref( &(((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_data), local_1_data_4083 );
  ((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_collection);
  }
  ((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_collection)))
  {
    ((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_collection);
  }
  ((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Object__create_duplicate( SXCRef context )
{
  return ArrayReader_of_HashTableBin_of_Object_and_Object__init__Collection_of_HashTableBin_of_Object_and_Object_Array_of_HashTableBin_of_Object_and_Object_Int32_Int32(type_ClassArrayReader_of_HashTableBin_of_Object_and_Object.create(),((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_collection,((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_data,((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_counter,(((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_last_exclusive-((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_counter));
}

static SlagLogical ArrayReader_of_HashTableBin_of_Object_and_Object__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_counter < ((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_HashTableBin_of_Object_and_Object__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_last_exclusive-((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_counter);
}

static SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Object__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassHashTableBin_of_Object_and_Object**)(((SlagArray*)((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_data)->data))[((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_counter];
  ++(((ClassArrayReader_of_HashTableBin_of_Object_and_Object*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_HashTableBin_of_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_HashTableBin_of_Object_and_Object__type_name( SXCRef context )
{
  return str58.value;
}

SlagObject* Mapping_of_String_and_Token____to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_Token__*)context)->property_key),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_String_and_Token__*)context)->property_value)));
}

void Mapping_of_String_and_Token____init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_Token____type_name( SXCRef context )
{
  return str918.value;
}

static SlagObject* CmdCmpInstanceOf__init__Token_Cmd_TypeInfo( SXCRef context, SXCRef local_0_t_7980, SXCRef local_1_operand_7979, SXCRef local_2_of_type_7978 )
{
  sxc_write_ref( &(((ClassCmdCmpInstanceOf*)context)->property_t), local_0_t_7980 );
  sxc_write_ref( &(((ClassCmdCmpInstanceOf*)context)->property_operand), local_1_operand_7979 );
  sxc_write_ref( &(((ClassCmdCmpInstanceOf*)context)->property_of_type), local_2_of_type_7978 );
  return context;
}

static SlagObject* CmdCmpInstanceOf__create_duplicate( SXCRef context )
{
  return CmdCmpInstanceOf__init__Token_Cmd_TypeInfo(type_ClassCmdCmpInstanceOf.create(),((ClassCmdCmpInstanceOf*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpInstanceOf*)context)->property_operand),((ClassCmdCmpInstanceOf*)context)->property_of_type);
}

static SlagObject* CmdCmpInstanceOf__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_logical;
}

SlagObject* CmdCmpInstanceOf__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CmdCmpInstanceOf__type_name(context)),str61.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdCmpInstanceOf*)context)->property_operand)),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdCmpInstanceOf*)context)->property_of_type)),str62.value));
}

static SlagObject* CmdCmpInstanceOf__resolve( SXCRef context )
{
  SXCRef local_0_operand_type;

  sxc_write_ref( &(((ClassCmdCmpInstanceOf*)context)->property_operand), CallFn____Object(16,((ClassCmdCmpInstanceOf*)context)->property_operand) );
  local_0_operand_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdCmpInstanceOf*)context)->property_operand);
  TypeInfo__resolve(((ClassCmdCmpInstanceOf*)context)->property_of_type);
  if (TypeInfo__instance_of__TypeInfo(local_0_operand_type,((ClassCmdCmpInstanceOf*)context)->property_of_type))
  {
    return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpInstanceOf*)context)->property_t,true);
  }
  else
  {
    SlagAnalyzer__require_reference__Token_TypeInfo(sxc_singletons[8],((ClassCmdCmpInstanceOf*)context)->property_t,local_0_operand_type);
    return context;
  }
}

static void CmdCmpInstanceOf__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cmp_instance_of)->property_ordinal);
  CallFn__(7,((ClassCmdCmpInstanceOf*)context)->property_operand);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassTypeInfo*)((ClassCmdCmpInstanceOf*)context)->property_of_type)->property_index);
}

static SlagObject* CmdCmpInstanceOf__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1692.value),CallFn____Object(15,((ClassCmdCmpInstanceOf*)context)->property_operand)),str1689.value),TypeInfo__x_name(((ClassCmdCmpInstanceOf*)context)->property_of_type)),str62.value));
}

static SlagObject* CmdCmpInstanceOf__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCmpInstanceOf*)context)->property_operand)),str1935.value),TypeInfo__x_name(((ClassCmdCmpInstanceOf*)context)->property_of_type)),str62.value));
}

static SlagObject* CmdCmpInstanceOf__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCmpInstanceOf*)context)->property_operand)),str2017.value),TypeInfo__x_name(((ClassCmdCmpInstanceOf*)context)->property_of_type)),str62.value));
}

void CmdCmpInstanceOf__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpInstanceOf__type_name( SXCRef context )
{
  return str893.value;
}

static SlagObject* Array_of_ArrayList_of_TypeTemplate__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_ArrayList_of_TypeTemplate.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_ArrayList_of_TypeTemplate__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_ArrayList_of_TypeTemplate__type_name( SXCRef context )
{
  return str925.value;
}

SlagObject* ArrayList_of_ArrayList_of_TypeTemplate__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count5878;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count5878 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count5878))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassArrayList_of_TypeTemplate*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_ArrayList_of_TypeTemplate__init( SXCRef context )
{
  ArrayList_of_ArrayList_of_TypeTemplate__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_ArrayList_of_TypeTemplate__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_ArrayList_of_TypeTemplate*)context)->property_data), type_ClassArray_of_ArrayList_of_TypeTemplate.create(local_0_initial_capacity) );
  return context;
}

void ArrayList_of_ArrayList_of_TypeTemplate__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_ArrayList_of_TypeTemplate__add__ArrayList_of_TypeTemplate( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_ArrayList_of_TypeTemplate*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_ArrayList_of_TypeTemplate__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_ArrayList_of_TypeTemplate__init__Int32(type_ClassArrayList_of_ArrayList_of_TypeTemplate.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_ArrayList_of_TypeTemplate*)local_0_dup)->property_data,((ClassArrayList_of_ArrayList_of_TypeTemplate*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_ArrayList_of_TypeTemplate*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_ArrayList_of_TypeTemplate__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_ArrayList_of_TypeTemplate__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_ArrayList_of_TypeTemplate__type_name( SXCRef context )
{
  return str926.value;
}

static SlagObject* ArrayReader_of_Token__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),ArrayReader_of_Token__remaining(context));
  while (ArrayReader_of_Token__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_Token__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_Token__to_String( SXCRef context )
{
  return ArrayList_of_Token__to_String(ArrayReader_of_Token__to_List(context));
}

static SlagObject* ArrayReader_of_Token__init__Collection_of_Token_Array_of_Token_Int32_Int32( SXCRef context, SXCRef local_0_collection_6986, SXCRef local_1_data_6985, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_Token*)context)->property_collection), local_0_collection_6986 );
  sxc_write_ref( &(((ClassArrayReader_of_Token*)context)->property_data), local_1_data_6985 );
  ((ClassArrayReader_of_Token*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_Token*)context)->property_collection);
  }
  ((ClassArrayReader_of_Token*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_Token*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_Token*)context)->property_collection)))
  {
    ((ClassArrayReader_of_Token*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_Token*)context)->property_collection);
  }
  ((ClassArrayReader_of_Token*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_Token*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_Token__create_duplicate( SXCRef context )
{
  return ArrayReader_of_Token__init__Collection_of_Token_Array_of_Token_Int32_Int32(type_ClassArrayReader_of_Token.create(),((ClassArrayReader_of_Token*)context)->property_collection,((ClassArrayReader_of_Token*)context)->property_data,((ClassArrayReader_of_Token*)context)->property_counter,(((ClassArrayReader_of_Token*)context)->property_last_exclusive-((ClassArrayReader_of_Token*)context)->property_counter));
}

static SlagLogical ArrayReader_of_Token__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_Token*)context)->property_counter < ((ClassArrayReader_of_Token*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_Token*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_Token*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_Token__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_Token*)context)->property_last_exclusive-((ClassArrayReader_of_Token*)context)->property_counter);
}

static SlagObject* ArrayReader_of_Token__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassToken**)(((SlagArray*)((ClassArrayReader_of_Token*)context)->property_data)->data))[((ClassArrayReader_of_Token*)context)->property_counter];
  ++(((ClassArrayReader_of_Token*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_Token__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_Token__type_name( SXCRef context )
{
  return str584.value;
}

SlagObject* CmdLocalVarAccess__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1045.value),((ClassMethodVarInfo*)((ClassCmdLocalVarAccess*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodVarInfo*)((ClassCmdLocalVarAccess*)context)->property_var_info)->property_index,10))),str62.value));
}

static SlagObject* CmdLocalVarAccess__resolve( SXCRef context )
{
  return context;
}

static SlagObject* CmdLocalVarAccess__finalize_calls( SXCRef context )
{
  return context;
}

static void CmdLocalVarAccess__finalize_structure_info( SXCRef context )
{
}

static void CmdLocalVarAccess__group_dynamic_methods( SXCRef context )
{
}

static SlagObject* CmdLocalVarAccess__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  return context;
}

void CmdLocalVarAccess__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLocalVarAccess__type_name( SXCRef context )
{
  return str1043.value;
}

static SlagObject* CmdLocalVarWrite__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9445, SXCRef local_1_var_info_9444, SXCRef local_2_new_value_9443 )
{
  sxc_write_ref( &(((ClassCmdLocalVarWrite*)context)->property_t), local_0_t_9445 );
  sxc_write_ref( &(((ClassCmdLocalVarWrite*)context)->property_var_info), local_1_var_info_9444 );
  sxc_write_ref( &(((ClassCmdLocalVarWrite*)context)->property_new_value), local_2_new_value_9443 );
  return context;
}

static SlagObject* CmdLocalVarWrite__create_duplicate( SXCRef context )
{
  return CmdLocalVarWrite__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarWrite.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdLocalVarWrite*)context)->property_new_value));
}

SlagObject* CmdLocalVarWrite__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1182.value),((ClassMethodVarInfo*)((ClassCmdLocalVarWrite*)context)->property_var_info)->property_name),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdLocalVarWrite*)context)->property_new_value)),str62.value));
}

static SlagObject* CmdLocalVarWrite__resolve( SXCRef context )
{
  SlagAnalyzer__require_type__Cmd_TypeInfo(sxc_singletons[8],((ClassCmdLocalVarWrite*)context)->property_new_value,((ClassMethodVarInfo*)((ClassCmdLocalVarWrite*)context)->property_var_info)->property_type);
  return CmdLocalVarWrite__optimize(context);
}

static SlagObject* CmdLocalVarWrite__optimize( SXCRef context )
{
  SXCRef local_0_value;
  SXCRef local_1_left;
  SXCRef local_2_left_type;
  SXCRef local_3_right;

  if (sxc_instance_of(((ClassCmdLocalVarWrite*)context)->property_new_value,&type_ClassCmdBinary))
  {
    local_0_value = ((ClassCmdLocalVarWrite*)context)->property_new_value;
    local_1_left = ((ClassCmdBinary*)local_0_value)->property_lhs;
    local_2_left_type = CallFn____Object(0,local_1_left);
    if (((sxc_instance_of(local_1_left,&type_ClassCmdLocalVarRead) && (((ClassCmdLocalVarRead*)local_1_left)->property_var_info == ((ClassCmdLocalVarWrite*)context)->property_var_info)) && ((local_2_left_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32) || (local_2_left_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))))
    {
      local_3_right = ((ClassCmdBinary*)local_0_value)->property_rhs;
      if (sxc_instance_of(local_0_value,&type_ClassCmdAdd))
      {
        if ((sxc_instance_of(local_3_right,&type_ClassCmdLiteralInt32) && (((ClassCmdLiteralInt32*)local_3_right)->property_value == 1)))
        {
          return CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo(type_ClassCmdLocalVarIncrement.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info);
        }
        else if ((sxc_instance_of(local_3_right,&type_ClassCmdLiteralReal64) && (((ClassCmdLiteralReal64*)local_3_right)->property_value == sxc_int64_as_real64(0x3ff0000000000000LL))))
        {
          return CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo(type_ClassCmdLocalVarIncrement.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info);
        }
        else if ((sxc_instance_of(local_3_right,&type_ClassCmdLiteralInt32) && (((ClassCmdLiteralInt32*)local_3_right)->property_value == -1)))
        {
          return CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init__Token_MethodVarInfo(type_ClassCmdLocalVarDecrement.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info);
        }
        else if ((sxc_instance_of(local_3_right,&type_ClassCmdLiteralReal64) && (((ClassCmdLiteralReal64*)local_3_right)->property_value == -sxc_int64_as_real64(0x3ff0000000000000LL))))
        {
          return CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init__Token_MethodVarInfo(type_ClassCmdLocalVarDecrement.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info);
        }
        else
        {
          return CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarAddAndAssign.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info,local_3_right);
        }
      }
      if (sxc_instance_of(local_0_value,&type_ClassCmdSub))
      {
        if ((sxc_instance_of(local_3_right,&type_ClassCmdLiteralInt32) && (((ClassCmdLiteralInt32*)local_3_right)->property_value == 1)))
        {
          return CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init__Token_MethodVarInfo(type_ClassCmdLocalVarDecrement.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info);
        }
        else if ((sxc_instance_of(local_3_right,&type_ClassCmdLiteralReal64) && (((ClassCmdLiteralReal64*)local_3_right)->property_value == sxc_int64_as_real64(0x3ff0000000000000LL))))
        {
          return CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init__Token_MethodVarInfo(type_ClassCmdLocalVarDecrement.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info);
        }
        else if ((sxc_instance_of(local_3_right,&type_ClassCmdLiteralInt32) && (((ClassCmdLiteralInt32*)local_3_right)->property_value == -1)))
        {
          return CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo(type_ClassCmdLocalVarIncrement.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info);
        }
        else if ((sxc_instance_of(local_3_right,&type_ClassCmdLiteralReal64) && (((ClassCmdLiteralReal64*)local_3_right)->property_value == -sxc_int64_as_real64(0x3ff0000000000000LL))))
        {
          return CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo(type_ClassCmdLocalVarIncrement.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info);
        }
        else
        {
          return CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarSubAndAssign.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info,local_3_right);
        }
      }
      if (sxc_instance_of(local_0_value,&type_ClassCmdMul))
      {
        return CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarMulAndAssign.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info,local_3_right);
      }
      if (sxc_instance_of(local_0_value,&type_ClassCmdDiv))
      {
        return CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarDivAndAssign.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info,local_3_right);
      }
      if ((sxc_instance_of(local_0_value,&type_ClassCmdMod) && (local_2_left_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32)))
      {
        return CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarModAndAssign.create(),((ClassCmdLocalVarWrite*)context)->property_t,((ClassCmdLocalVarWrite*)context)->property_var_info,local_3_right);
      }
    }
  }
  return context;
}

static SlagObject* CmdLocalVarWrite__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdLocalVarWrite*)context)->property_new_value), CallFn____Object(42,((ClassCmdLocalVarWrite*)context)->property_new_value) );
  return context;
}

static void CmdLocalVarWrite__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
  CallFn__(21,((ClassCmdLocalVarWrite*)context)->property_new_value);
}

static void CmdLocalVarWrite__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdLocalVarWrite*)context)->property_new_value);
}

static SlagObject* CmdLocalVarWrite__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdLocalVarWrite*)context)->property_new_value), CallFn__CmdList__Object(1,((ClassCmdLocalVarWrite*)context)->property_new_value,local_0_arg_list) );
  return context;
}

static void CmdLocalVarWrite__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_local_var_write)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassMethodVarInfo*)((ClassCmdLocalVarWrite*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdLocalVarWrite*)context)->property_new_value);
}

static SlagObject* CmdLocalVarWrite__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarWrite*)context)->property_var_info)),str1653.value),CallFn____Object(15,((ClassCmdLocalVarWrite*)context)->property_new_value)));
}

static SlagObject* CmdLocalVarWrite__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarWrite*)context)->property_var_info)),str1653.value),CallFn____Object(35,((ClassCmdLocalVarWrite*)context)->property_new_value)));
}

static SlagObject* CmdLocalVarWrite__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarWrite*)context)->property_var_info)),str1653.value),CallFn____Object(41,((ClassCmdLocalVarWrite*)context)->property_new_value)));
}

void CmdLocalVarWrite__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLocalVarWrite__type_name( SXCRef context )
{
  return str1197.value;
}

static SlagObject* ArrayReader_of_Int64__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Int64__init__Int32(type_ClassArrayList_of_Int64.create(),ArrayReader_of_Int64__remaining(context));
  while (ArrayReader_of_Int64__has_another(context))
  {
    ArrayList_of_Int64__add__Int64(local_0_result_list,ArrayReader_of_Int64__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_Int64__to_String( SXCRef context )
{
  return ArrayList_of_Int64__to_String(ArrayReader_of_Int64__to_List(context));
}

static SlagObject* ArrayReader_of_Int64__init__Collection_of_Int64_Array_of_Int64_Int32_Int32( SXCRef context, SXCRef local_0_collection_4196, SXCRef local_1_data_4195, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_Int64*)context)->property_collection), local_0_collection_4196 );
  sxc_write_ref( &(((ClassArrayReader_of_Int64*)context)->property_data), local_1_data_4195 );
  ((ClassArrayReader_of_Int64*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_Int64*)context)->property_collection);
  }
  ((ClassArrayReader_of_Int64*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_Int64*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_Int64*)context)->property_collection)))
  {
    ((ClassArrayReader_of_Int64*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_Int64*)context)->property_collection);
  }
  ((ClassArrayReader_of_Int64*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_Int64*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_Int64__create_duplicate( SXCRef context )
{
  return ArrayReader_of_Int64__init__Collection_of_Int64_Array_of_Int64_Int32_Int32(type_ClassArrayReader_of_Int64.create(),((ClassArrayReader_of_Int64*)context)->property_collection,((ClassArrayReader_of_Int64*)context)->property_data,((ClassArrayReader_of_Int64*)context)->property_counter,(((ClassArrayReader_of_Int64*)context)->property_last_exclusive-((ClassArrayReader_of_Int64*)context)->property_counter));
}

static SlagLogical ArrayReader_of_Int64__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_Int64*)context)->property_counter < ((ClassArrayReader_of_Int64*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_Int64*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_Int64*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_Int64__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_Int64*)context)->property_last_exclusive-((ClassArrayReader_of_Int64*)context)->property_counter);
}

static SlagInt64 ArrayReader_of_Int64__read( SXCRef context )
{
  SlagInt64 local_0_result;

  local_0_result = ((SlagInt64*)(((SlagArray*)((ClassArrayReader_of_Int64*)context)->property_data)->data))[((ClassArrayReader_of_Int64*)context)->property_counter];
  ++(((ClassArrayReader_of_Int64*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_Int64__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_Int64__type_name( SXCRef context )
{
  return str76.value;
}

static SlagObject* BigInt__init__Int64( SXCRef context, SlagInt64 local_0_value )
{
  if ((local_0_value == ((SlagInt64)((SlagInt32)((SlagInt32)local_0_value)))))
  {
    BigInt__init__Int32(context,((SlagInt32)local_0_value));
  }
  else
  {
    sxc_write_ref( &(((ClassBigInt*)context)->property_data), ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),4) );
    if ((local_0_value < 0LL))
    {
      ((ClassBigInt*)context)->property_sign_flag = -1;
      local_0_value = (~local_0_value+1LL);
    }
    ArrayList_of_Char__add__Char(((ClassBigInt*)context)->property_data,((SlagChar)((SlagInt32)local_0_value)));
    local_0_value = sxc_shr(local_0_value,16);
    while ((local_0_value != 0LL))
    {
      ArrayList_of_Char__add__Char(((ClassBigInt*)context)->property_data,((SlagChar)((SlagInt32)local_0_value)));
      local_0_value = sxc_shr(local_0_value,16);
    }
  }
  return context;
}

static SlagObject* BigInt__init__Int32( SXCRef context, SlagInt32 local_0_value )
{
  if ((((local_0_value >= 0) && (local_0_value < 16)) && (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassBigIntManager*)sxc_singletons[24])->property_values))->property_count > local_0_value)))
  {
    sxc_write_ref( &(((ClassBigInt*)context)->property_data), ((ClassBigInt*)((ClassBigInt*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassBigIntManager*)sxc_singletons[24])->property_values))->property_data)->data))[local_0_value])))->property_data );
  }
  else
  {
    sxc_write_ref( &(((ClassBigInt*)context)->property_data), ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),2) );
    if ((local_0_value < 0))
    {
      ((ClassBigInt*)context)->property_sign_flag = -1;
      local_0_value = (~local_0_value+1);
    }
    ArrayList_of_Char__add__Char(((ClassBigInt*)context)->property_data,((SlagChar)((SlagInt32)local_0_value)));
    local_0_value = sxc_shr(local_0_value,16);
    while ((local_0_value != 0))
    {
      ArrayList_of_Char__add__Char(((ClassBigInt*)context)->property_data,((SlagChar)((SlagInt32)local_0_value)));
      local_0_value = sxc_shr(local_0_value,16);
    }
  }
  return context;
}

static SlagObject* BigInt__init__String_Int32( SXCRef context, SXCRef local_0_value, SlagInt32 local_1_base )
{
  SlagInt32 local_2_which_547;
  SXCRef local_3_buffer;
  SlagInt32 local_4_index;
  SlagInt32 local_5__last550;
  SXCRef local_6_buffer;
  SlagInt32 local_7_index;
  SlagInt32 local_8__last553;
  SXCRef local_9_work;
  SXCRef local_10__reader554;
  SlagChar local_11_ch;

  if ((((SlagInt32)String__get__Int32(local_0_value,0)) == 45))
  {
    ((ClassBigInt*)context)->property_sign_flag = -1;
    local_0_value = String__substring__Int32(local_0_value,1);
  }
  local_2_which_547 = local_1_base;
  if ((local_2_which_547 == 2))
  {
    if ((((((SlagString*)local_0_value)->count)&15) != 0))
    {
      local_3_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),local_0_value);
      StringBuilder__reverse(local_3_buffer);
      while (((((ClassArrayList_of_Char*)((ClassStringBuilder*)local_3_buffer)->property_data)->property_count&15) != 0))
      {
        StringBuilder__add__Char(local_3_buffer,((SlagChar)48));
      }
      StringBuilder__reverse(local_3_buffer);
      local_0_value = StringBuilder__to_String(local_3_buffer);
    }
    sxc_write_ref( &(((ClassBigInt*)context)->property_data), ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),((((SlagString*)local_0_value)->count)/16)) );
    local_4_index = 0;
    local_5__last550 = (((SlagString*)local_0_value)->count);
    while ((local_4_index < local_5__last550))
    {
      ArrayList_of_Char__add__Char(((ClassBigInt*)context)->property_data,((SlagChar)((SlagInt32)NumberConversions__parse_Int32__String_Int32(sxc_singletons[12],String__substring__Int32_Int32(local_0_value,local_4_index,(local_4_index+15)),2))));
      local_4_index += 16;
    }
    ArrayList_of_Char__reverse(((ClassBigInt*)context)->property_data);
  }
  else if ((local_2_which_547 == 16))
  {
    if ((((((SlagString*)local_0_value)->count)&3) != 0))
    {
      local_6_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),local_0_value);
      StringBuilder__reverse(local_6_buffer);
      while (((((ClassArrayList_of_Char*)((ClassStringBuilder*)local_6_buffer)->property_data)->property_count&3) != 0))
      {
        StringBuilder__add__Char(local_6_buffer,((SlagChar)48));
      }
      StringBuilder__reverse(local_6_buffer);
      local_0_value = StringBuilder__to_String(local_6_buffer);
    }
    sxc_write_ref( &(((ClassBigInt*)context)->property_data), ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),((((SlagString*)local_0_value)->count)/4)) );
    local_7_index = 0;
    local_8__last553 = (((SlagString*)local_0_value)->count);
    while ((local_7_index < local_8__last553))
    {
      ArrayList_of_Char__add__Char(((ClassBigInt*)context)->property_data,((SlagChar)((SlagInt32)NumberConversions__parse_Int32__String_Int32(sxc_singletons[12],String__substring__Int32_Int32(local_0_value,local_7_index,(local_7_index+3)),16))));
      local_7_index += 4;
    }
    ArrayList_of_Char__reverse(((ClassBigInt*)context)->property_data);
  }
  else if ((local_2_which_547 == 10))
  {
    local_9_work = BigInt__init__Int32(type_ClassBigInt.create(),0);
    local_10__reader554 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_value,0,-1));
    while (CallFn____Logical(14,local_10__reader554))
    {
      local_11_ch = CallFn____Char(29,local_10__reader554);
      local_9_work = BigInt__opMUL__BigInt(local_9_work,((ClassBigIntManager*)sxc_singletons[24])->property_ten);
      if (((((SlagInt32)local_11_ch) >= 48) && (((SlagInt32)local_11_ch) <= 57)))
      {
        local_9_work = BigInt__opADD__BigInt(local_9_work,((ClassBigInt*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassBigIntManager*)sxc_singletons[24])->property_values))->property_data)->data))[(((SlagInt32)local_11_ch)-48)])));
      }
      else
      {
        SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str165.value,local_0_value) );
      }
    }
    sxc_write_ref( &(((ClassBigInt*)context)->property_data), ((ClassBigInt*)local_9_work)->property_data );
  }
  else
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str166.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_1_base,10))) );
  }
  return context;
}

static SlagObject* BigInt__init__BigInt( SXCRef context, SXCRef local_0_other )
{
  sxc_write_ref( &(((ClassBigInt*)context)->property_data), ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassBigInt*)local_0_other)->property_data) );
  ((ClassBigInt*)context)->property_sign_flag = ((ClassBigInt*)local_0_other)->property_sign_flag;
  return context;
}

SlagObject* BigInt__init( SXCRef context )
{
  ((ClassBigInt*)context)->property_sign_flag = 1;
  return context;
}

static SlagObject* BigInt__left_shifted__Int32( SXCRef context, SlagInt32 local_0_bits )
{
  SXCRef local_1_work;
  SXCRef local_2_work_data;
  SlagInt32 local_3_excess_bits;
  SlagInt32 local_4_carry;
  SlagInt32 local_5_index;
  SlagInt32 local_6__count559;
  SlagChar local_7_c;

  if ((local_0_bits == 0))
  {
    return context;
  }
  local_1_work = BigInt__init__BigInt(type_ClassBigInt.create(),context);
  local_2_work_data = ((ClassBigInt*)local_1_work)->property_data;
  while ((local_0_bits >= 16))
  {
    ArrayList_of_Char__insert__Char_Int32(local_2_work_data,((SlagChar)0),0);
    local_0_bits -= 16;
  }
  if ((local_0_bits == 0))
  {
    return local_1_work;
  }
  local_3_excess_bits = (16-local_0_bits);
  local_4_carry = 0;
  {
    local_5_index = 0;
    local_6__count559 = ((ClassArrayList_of_Char*)local_2_work_data)->property_count;
    while ((local_5_index < local_6__count559))
    {
      local_4_carry = (local_4_carry|((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_2_work_data)->property_data)->data))[local_5_index]));
      local_4_carry = BitwiseOperations__left_rotated__Int32_Int32(sxc_singletons[15],local_4_carry,local_0_bits);
      ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_2_work_data)->property_data)->data))[local_5_index] = ((SlagChar)((SlagInt32)local_4_carry));
      local_4_carry = BitwiseOperations__left_rotated__Int32_Int32(sxc_singletons[15],local_4_carry,local_3_excess_bits);
      local_4_carry = (local_4_carry&-65536);
      ++local_5_index;
    }
  }
  local_4_carry = BitwiseOperations__left_rotated__Int32_Int32(sxc_singletons[15],local_4_carry,local_0_bits);
  local_7_c = ((SlagChar)((SlagInt32)local_4_carry));
  if ((((SlagInt32)local_7_c) != 0))
  {
    ArrayList_of_Char__add__Char(local_2_work_data,((SlagChar)((SlagInt32)local_4_carry)));
  }
  return local_1_work;
}

static SlagObject* BigInt__right_shifted__Int32( SXCRef context, SlagInt32 local_0_bits )
{
  SXCRef local_1_work;
  SXCRef local_2_work_data;
  SlagInt32 local_3_excess_bits;
  SlagInt32 local_4_carry;
  SXCRef local_5__reader565;
  SlagInt32 local_6_index;

  if ((local_0_bits == 0))
  {
    return context;
  }
  local_1_work = BigInt__init__BigInt(type_ClassBigInt.create(),context);
  local_2_work_data = ((ClassBigInt*)local_1_work)->property_data;
  while ((local_0_bits >= 16))
  {
    ArrayList_of_Char__remove__Int32(local_2_work_data,0);
    if ((((ClassArrayList_of_Char*)local_2_work_data)->property_count == 0))
    {
      ArrayList_of_Char__add__Char(local_2_work_data,((SlagChar)0));
      return local_1_work;
    }
    local_0_bits -= 16;
  }
  if ((local_0_bits == 0))
  {
    return local_1_work;
  }
  local_3_excess_bits = (16-local_0_bits);
  local_4_carry = 0;
  local_5__reader565 = CallFn____Object(44,((ClassRange_of_Int32*)RangeGE_of_Int32__init__Int32_Int32_Int32(type_ClassRangeGE_of_Int32.create(),(((ClassArrayList_of_Char*)local_2_work_data)->property_count-1),0,-1)));
  while (CallFn____Logical(14,local_5__reader565))
  {
    local_6_index = CallFn____Int32(30,local_5__reader565);
    local_4_carry = (local_4_carry|((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_2_work_data)->property_data)->data))[local_6_index]));
    local_4_carry = BitwiseOperations__right_rotated__Int32_Int32(sxc_singletons[15],local_4_carry,local_0_bits);
    ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_2_work_data)->property_data)->data))[local_6_index] = ((SlagChar)((SlagInt32)local_4_carry));
    local_4_carry = BitwiseOperations__right_rotated__Int32_Int32(sxc_singletons[15],local_4_carry,local_3_excess_bits);
    local_4_carry = (local_4_carry&-65536);
  }
  return BigInt__normalized(local_1_work);
}

static SlagObject* BigInt__normalized( SXCRef context )
{
  while (((((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count > 1) && (((SlagInt32)ArrayList_of_Char__last(((ClassBigInt*)context)->property_data)) == 0)))
  {
    ArrayList_of_Char__remove_last(((ClassBigInt*)context)->property_data);
  }
  if (((((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count == 1) && (((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_data)->data))[0]) == 0)))
  {
    ((ClassBigInt*)context)->property_sign_flag = 1;
  }
  return context;
}

static SlagObject* BigInt__to_String__Int32( SXCRef context, SlagInt32 local_0_base )
{
  SlagInt32 local_1_which_568;
  SXCRef local_2_buffer;
  SXCRef local_3__reader570;
  SlagChar local_4_u16;

  local_1_which_568 = local_0_base;
  if ((local_1_which_568 == 10))
  {
    return BigInt__to_String(context);
  }
  else if (((local_1_which_568 == 2) || (local_1_which_568 == 16)))
  {
    local_2_buffer = StringBuilder__init(type_ClassStringBuilder.create());
    if ((((ClassBigInt*)context)->property_sign_flag == -1))
    {
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)45));
    }
    local_3__reader570 = ArrayList_of_Char__reverse_order(((ClassBigInt*)context)->property_data);
    while (CallFn____Logical(14,local_3__reader570))
    {
      local_4_u16 = CallFn____Char(29,local_3__reader570);
      StringBuilder__print__String(local_2_buffer,Global__to_String__Char_Int32(sxc_singletons[21],local_4_u16,local_0_base));
    }
    return StringBuilder__to_String(local_2_buffer);
  }
  else
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str166.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_base,10))) );
  }
}

SlagObject* BigInt__to_String( SXCRef context )
{
  SXCRef local_0_result;
  SXCRef local_1_work;
  SXCRef local_2_rhs;
  SXCRef local_3_rhs;
  SXCRef local_4_rhs;
  SXCRef local_5_result;

  if ((((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count == 1))
  {
    return ((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],(((ClassBigInt*)context)->property_sign_flag*((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_data)->data))[0])),10));
  }
  if ((((ClassBigInt*)context)->property_sign_flag == -1))
  {
    ((ClassBigInt*)context)->property_sign_flag = 1;
    local_0_result = BigInt__to_String(context);
    ((ClassBigInt*)context)->property_sign_flag = -1;
    return String__opADD__String(str168.value,local_0_result);
  }
  local_1_work = Global__abs__BigInt(sxc_singletons[21],context);
  if ((BigInt__opCMP__BigInt(local_1_work,((ClassBigIntManager*)sxc_singletons[24])->property_ten_e18) == -1))
  {
    return ((ClassString*)Global__to_String__Int64_Int32(sxc_singletons[21],BigInt__to_Int64(context),10));
  }
  if ((BigInt__opCMP__BigInt(local_1_work,((ClassBigIntManager*)sxc_singletons[24])->property_ten_e144) == 1))
  {
    local_1_work = BigInt__opDIV__BigInt(local_1_work,((ClassBigIntManager*)sxc_singletons[24])->property_ten_e144);
    local_2_rhs = BigInt__to_String(((ClassBigIntManager*)sxc_singletons[24])->property_last_modulo);
    return String__opADD__String(Global__to_String__Object(sxc_singletons[21],local_1_work),Global__format_string__String_Int32_Int32_Char(sxc_singletons[21],local_2_rhs,144,4,((SlagChar)48)));
  }
  if ((BigInt__opCMP__BigInt(local_1_work,((ClassBigIntManager*)sxc_singletons[24])->property_ten_e72) == 1))
  {
    local_1_work = BigInt__opDIV__BigInt(local_1_work,((ClassBigIntManager*)sxc_singletons[24])->property_ten_e72);
    local_3_rhs = BigInt__to_String(((ClassBigIntManager*)sxc_singletons[24])->property_last_modulo);
    return String__opADD__String(Global__to_String__Object(sxc_singletons[21],local_1_work),Global__format_string__String_Int32_Int32_Char(sxc_singletons[21],local_3_rhs,72,4,((SlagChar)48)));
  }
  if ((BigInt__opCMP__BigInt(local_1_work,((ClassBigIntManager*)sxc_singletons[24])->property_ten_e36) == 1))
  {
    local_1_work = BigInt__opDIV__BigInt(local_1_work,((ClassBigIntManager*)sxc_singletons[24])->property_ten_e36);
    local_4_rhs = BigInt__to_String(((ClassBigIntManager*)sxc_singletons[24])->property_last_modulo);
    return String__opADD__String(Global__to_String__Object(sxc_singletons[21],local_1_work),Global__format_string__String_Int32_Int32_Char(sxc_singletons[21],local_4_rhs,36,4,((SlagChar)48)));
  }
  local_5_result = str39.value;
  while (!BigInt__is_zero(local_1_work))
  {
    local_1_work = BigInt__opDIV__BigInt(local_1_work,((ClassBigIntManager*)sxc_singletons[24])->property_ten_e18);
    if (BigInt__is_zero(local_1_work))
    {
      local_5_result = String__opADD__String(Global__to_String__Object(sxc_singletons[21],((ClassBigIntManager*)sxc_singletons[24])->property_last_modulo),local_5_result);
    }
    else
    {
      local_5_result = String__opADD__String(Global__format_string__Object_Int32_Int32_Char(sxc_singletons[21],((ClassBigIntManager*)sxc_singletons[24])->property_last_modulo,18,4,((SlagChar)48)),local_5_result);
    }
  }
  if ((((ClassBigInt*)context)->property_sign_flag == -1))
  {
    local_5_result = String__opADD__String(str168.value,local_5_result);
  }
  return local_5_result;
}

static SlagInt64 BigInt__internal_to_Int64( SXCRef context )
{
  SlagInt64 local_0_result;
  SXCRef local_1__reader580;
  SlagChar local_2_u16;

  local_0_result = 0LL;
  local_1__reader580 = ArrayList_of_Char__reverse_order(((ClassBigInt*)context)->property_data);
  while (CallFn____Logical(14,local_1__reader580))
  {
    local_2_u16 = CallFn____Char(29,local_1__reader580);
    local_0_result = ((local_0_result<<16)|((SlagInt64)((SlagInt32)local_2_u16)));
  }
  if ((((ClassBigInt*)context)->property_sign_flag == -1))
  {
    local_0_result = -local_0_result;
  }
  return local_0_result;
}

static SlagLogical BigInt__is_valid_Int32( SXCRef context )
{
  SlagInt32 local_0_result;

  {
    if (!(((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count <= 2)) goto unsatisfied_7905;
    local_0_result = ((SlagInt32)BigInt__internal_to_Int64(context));
    if (!(((((ClassBigInt*)context)->property_sign_flag == -1) && (local_0_result < 0)) || ((((ClassBigInt*)context)->property_sign_flag == 1) && (local_0_result >= 0)))) goto unsatisfied_7905;
    satisfied_7905:;
    {
      return true;
    }
    goto end_7905;
    unsatisfied_7905:;
    {
      return false;
    }
  }
  end_7905:;
}

static SlagLogical BigInt__is_valid_Int64( SXCRef context )
{
  SlagInt64 local_0_result;

  {
    if (!(((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count <= 4)) goto unsatisfied_7907;
    local_0_result = BigInt__internal_to_Int64(context);
    if (!(((((ClassBigInt*)context)->property_sign_flag == -1) && (local_0_result < 0LL)) || ((((ClassBigInt*)context)->property_sign_flag == 1) && (local_0_result >= 0LL)))) goto unsatisfied_7907;
    satisfied_7907:;
    {
      return true;
    }
    goto end_7907;
    unsatisfied_7907:;
    {
      return false;
    }
  }
  end_7907:;
}

static SlagInt32 BigInt__to_Int32( SXCRef context )
{
  SlagInt32 local_0_result;

  {
    if (!(((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count <= 2)) goto unsatisfied_7906;
    local_0_result = ((SlagInt32)BigInt__internal_to_Int64(context));
    if (!(((((ClassBigInt*)context)->property_sign_flag == -1) && (local_0_result < 0)) || ((((ClassBigInt*)context)->property_sign_flag == 1) && (local_0_result >= 0)))) goto unsatisfied_7906;
    return local_0_result;
    satisfied_7906:;
    goto end_7906;
    unsatisfied_7906:;
    {
      SLAG_THROW( OutOfBoundsError__init__String(type_ClassOutOfBoundsError.create(),str866.value) );
    }
  }
  end_7906:;
}

static SlagInt64 BigInt__to_Int64( SXCRef context )
{
  SlagInt64 local_0_result;

  {
    if (!(((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count <= 4)) goto unsatisfied_4901;
    local_0_result = BigInt__internal_to_Int64(context);
    if (!(((((ClassBigInt*)context)->property_sign_flag == -1) && (local_0_result < 0LL)) || ((((ClassBigInt*)context)->property_sign_flag == 1) && (local_0_result >= 0LL)))) goto unsatisfied_4901;
    return local_0_result;
    satisfied_4901:;
    goto end_4901;
    unsatisfied_4901:;
    {
      SLAG_THROW( OutOfBoundsError__init__String(type_ClassOutOfBoundsError.create(),str172.value) );
    }
  }
  end_4901:;
}

static SlagLogical BigInt__is_zero( SXCRef context )
{
  if ((((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count > 1))
  {
    return false;
  }
  return (((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_data)->data))[0]) == 0);
}

static SlagLogical BigInt__opEQ__Object( SXCRef context, SXCRef local_0_other )
{
  if (!sxc_instance_of(local_0_other,&type_ClassBigInt))
  {
    return false;
  }
  return BigInt__opEQ__BigInt(context,local_0_other);
}

static SlagLogical BigInt__opEQ__BigInt( SXCRef context, SXCRef local_0_other )
{
  SlagInt32 local_1_index;
  SlagInt32 local_2__count590;

  if ((((ClassBigInt*)context)->property_sign_flag != ((ClassBigInt*)local_0_other)->property_sign_flag))
  {
    return false;
  }
  {
    local_1_index = 0;
    local_2__count590 = ((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count;
    while ((local_1_index < local_2__count590))
    {
      if ((((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_data)->data))[local_1_index]) != ((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassBigInt*)local_0_other)->property_data)->property_data)->data))[local_1_index])))
      {
        return false;
      }
      ++local_1_index;
    }
  }
  return true;
}

static SlagInt32 BigInt__opCMP__BigInt( SXCRef context, SXCRef local_0_other )
{
  SXCRef local_1_other_data;
  SXCRef local_2__reader598;
  SlagInt32 local_3_index;
  SlagChar local_4_e1;
  SlagChar local_5_e2;
  SXCRef local_6_other_data;
  SXCRef local_7__reader603;
  SlagInt32 local_8_index;
  SlagChar local_9_e1;
  SlagChar local_10_e2;

  if (BigInt__is_zero(context))
  {
    if (BigInt__is_zero(local_0_other))
    {
      return 0;
    }
    else if ((((ClassBigInt*)local_0_other)->property_sign_flag == -1))
    {
      return 1;
    }
    else
    {
      return -1;
    }
  }
  else if (BigInt__is_zero(local_0_other))
  {
    if ((((ClassBigInt*)context)->property_sign_flag == -1))
    {
      return -1;
    }
    return 1;
  }
  else if ((((ClassBigInt*)context)->property_sign_flag == -1))
  {
    if ((((ClassBigInt*)local_0_other)->property_sign_flag == -1))
    {
      local_1_other_data = ((ClassBigInt*)local_0_other)->property_data;
      if ((((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count < ((ClassArrayList_of_Char*)local_1_other_data)->property_count))
      {
        return 1;
      }
      if ((((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count > ((ClassArrayList_of_Char*)local_1_other_data)->property_count))
      {
        return -1;
      }
      local_2__reader598 = CallFn____Object(44,((ClassRange_of_Int32*)RangeGE_of_Int32__init__Int32_Int32_Int32(type_ClassRangeGE_of_Int32.create(),(((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count-1),0,-1)));
      while (CallFn____Logical(14,local_2__reader598))
      {
        local_3_index = CallFn____Int32(30,local_2__reader598);
        local_4_e1 = ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_data)->data))[local_3_index];
        local_5_e2 = ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_1_other_data)->property_data)->data))[local_3_index];
        if ((((SlagInt32)local_4_e1) > ((SlagInt32)local_5_e2)))
        {
          return -1;
        }
        else if ((((SlagInt32)local_4_e1) < ((SlagInt32)local_5_e2)))
        {
          return 1;
        }
      }
      return 0;
    }
    else
    {
      return -1;
    }
  }
  else
  {
    if ((((ClassBigInt*)local_0_other)->property_sign_flag == -1))
    {
      return 1;
    }
    else
    {
      local_6_other_data = ((ClassBigInt*)local_0_other)->property_data;
      if ((((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count < ((ClassArrayList_of_Char*)local_6_other_data)->property_count))
      {
        return -1;
      }
      if ((((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count > ((ClassArrayList_of_Char*)local_6_other_data)->property_count))
      {
        return 1;
      }
      local_7__reader603 = CallFn____Object(44,((ClassRange_of_Int32*)RangeGE_of_Int32__init__Int32_Int32_Int32(type_ClassRangeGE_of_Int32.create(),(((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_count-1),0,-1)));
      while (CallFn____Logical(14,local_7__reader603))
      {
        local_8_index = CallFn____Int32(30,local_7__reader603);
        local_9_e1 = ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassBigInt*)context)->property_data)->property_data)->data))[local_8_index];
        local_10_e2 = ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_6_other_data)->property_data)->data))[local_8_index];
        if ((((SlagInt32)local_9_e1) > ((SlagInt32)local_10_e2)))
        {
          return 1;
        }
        else if ((((SlagInt32)local_9_e1) < ((SlagInt32)local_10_e2)))
        {
          return -1;
        }
      }
      return 0;
    }
  }
}

static SlagObject* BigInt__opSUB( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = BigInt__init(type_ClassBigInt.create());
  sxc_write_ref( &(((ClassBigInt*)local_0_result)->property_data), ((ClassBigInt*)context)->property_data );
  ((ClassBigInt*)local_0_result)->property_sign_flag = -((ClassBigInt*)context)->property_sign_flag;
  return BigInt__normalized(local_0_result);
}

static SlagObject* BigInt__opADD__BigInt( SXCRef context, SXCRef local_0_n )
{
  SXCRef local_1_work;
  SXCRef local_2_dest;
  SXCRef local_3_src;
  SlagInt32 local_4_carry;
  SlagInt32 local_5_index;
  SlagInt32 local_6__local_607;
  SlagInt32 local_7__last608;
  SlagInt32 local_8__local_609;
  SlagInt32 local_9__last610;

  if (((((ClassBigInt*)context)->property_sign_flag == -1) == (((ClassBigInt*)local_0_n)->property_sign_flag == -1)))
  {
    local_1_work = BigInt__init__BigInt(type_ClassBigInt.create(),context);
    local_2_dest = ((ClassBigInt*)local_1_work)->property_data;
    local_3_src = ((ClassBigInt*)local_0_n)->property_data;
    local_4_carry = 0;
    local_5_index = 0;
    while ((((ClassArrayList_of_Char*)local_2_dest)->property_count < ((ClassArrayList_of_Char*)local_3_src)->property_count))
    {
      ArrayList_of_Char__add__Char(local_2_dest,((SlagChar)0));
    }
    local_6__local_607 = 1;
    local_7__last608 = ((ClassArrayList_of_Char*)local_3_src)->property_count;
    while ((local_6__local_607 <= local_7__last608))
    {
      local_4_carry += ((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_3_src)->property_data)->data))[local_5_index]);
      local_4_carry += ((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_2_dest)->property_data)->data))[local_5_index]);
      ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_2_dest)->property_data)->data))[local_5_index] = ((SlagChar)((SlagInt32)local_4_carry));
      local_4_carry = sxc_shr(local_4_carry,16);
      ++local_5_index;
      ++local_6__local_607;
    }
    local_8__local_609 = local_5_index;
    local_9__last610 = ((ClassArrayList_of_Char*)local_2_dest)->property_count;
    while ((local_8__local_609 < local_9__last610))
    {
      if ((local_4_carry == 0))
      {
        goto end_4795;
      }
      local_4_carry += ((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_2_dest)->property_data)->data))[local_5_index]);
      ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_2_dest)->property_data)->data))[local_5_index] = ((SlagChar)((SlagInt32)local_4_carry));
      local_4_carry = sxc_shr(local_4_carry,16);
      ++local_5_index;
      ++local_8__local_609;
      next_4795:;
    }
    end_4795:;
    if ((local_4_carry != 0))
    {
      ArrayList_of_Char__add__Char(local_2_dest,((SlagChar)((SlagInt32)local_4_carry)));
    }
    return local_1_work;
  }
  else
  {
    if ((((ClassBigInt*)context)->property_sign_flag == -1))
    {
      return BigInt__opSUB__BigInt(local_0_n,BigInt__opSUB(context));
    }
    else
    {
      return BigInt__opSUB__BigInt(context,BigInt__opSUB(local_0_n));
    }
  }
}

static SlagObject* BigInt__opSUB__BigInt( SXCRef context, SXCRef local_0_n )
{
  SXCRef local_1_work;
  SlagInt32 local_2_index;
  SlagLogical local_3_borrow;
  SXCRef local_4_dest;
  SXCRef local_5_src;
  SlagInt32 local_6__local_616;
  SlagInt32 local_7__last617;
  SlagInt32 local_8_diff;
  SlagInt32 local_9_diff;

  if ((((ClassBigInt*)local_0_n)->property_sign_flag == -1))
  {
    return BigInt__opADD__BigInt(context,BigInt__opSUB(local_0_n));
  }
  else if ((((ClassBigInt*)context)->property_sign_flag == -1))
  {
    return BigInt__opSUB(BigInt__opADD__BigInt(BigInt__opSUB(context),local_0_n));
  }
  else
  {
    if ((BigInt__opCMP__BigInt(context,local_0_n) == -1))
    {
      return BigInt__opSUB(BigInt__opSUB__BigInt(local_0_n,context));
    }
    else
    {
      local_1_work = BigInt__init__BigInt(type_ClassBigInt.create(),context);
      local_2_index = 0;
      local_3_borrow = false;
      local_4_dest = ((ClassBigInt*)local_1_work)->property_data;
      local_5_src = ((ClassBigInt*)local_0_n)->property_data;
      local_6__local_616 = 1;
      local_7__last617 = ((ClassArrayList_of_Char*)local_5_src)->property_count;
      while ((local_6__local_616 <= local_7__last617))
      {
        local_8_diff = ((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_4_dest)->property_data)->data))[local_2_index]);
        if (local_3_borrow)
        {
          --local_8_diff;
        }
        local_8_diff -= ((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_5_src)->property_data)->data))[local_2_index]);
        if ((local_8_diff < 0))
        {
          local_3_borrow = true;
          local_8_diff += 65536;
        }
        else
        {
          local_3_borrow = false;
        }
        ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_4_dest)->property_data)->data))[local_2_index] = ((SlagChar)((SlagInt32)local_8_diff));
        ++local_2_index;
        ++local_6__local_616;
      }
      while (local_3_borrow)
      {
        local_9_diff = ((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_4_dest)->property_data)->data))[local_2_index]);
        --local_9_diff;
        if ((local_9_diff < 0))
        {
          local_3_borrow = true;
          local_9_diff += 65536;
        }
        else
        {
          local_3_borrow = false;
        }
        ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)local_4_dest)->property_data)->data))[local_2_index] = ((SlagChar)((SlagInt32)local_9_diff));
        ++local_2_index;
      }
      return BigInt__normalized(local_1_work);
    }
  }
}

static SlagObject* BigInt__opMUL__BigInt( SXCRef context, SXCRef local_0_n )
{
  SXCRef local_1_result;
  SXCRef local_2_factor;
  SXCRef local_3_control;

  if ((BigInt__opCMP__BigInt(context,local_0_n) == -1))
  {
    return BigInt__opMUL__BigInt(local_0_n,context);
  }
  local_1_result = ((ClassBigIntManager*)sxc_singletons[24])->property_zero;
  local_2_factor = BigInt__init__BigInt(type_ClassBigInt.create(),context);
  local_3_control = BigInt__init__BigInt(type_ClassBigInt.create(),local_0_n);
  ((ClassBigInt*)local_2_factor)->property_sign_flag = 1;
  ((ClassBigInt*)local_3_control)->property_sign_flag = 1;
  while (!BigInt__is_zero(local_3_control))
  {
    if (((((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassBigInt*)local_3_control)->property_data)->property_data)->data))[0])&1) == 1))
    {
      local_1_result = BigInt__opADD__BigInt(local_1_result,local_2_factor);
    }
    local_2_factor = BigInt__left_shifted__Int32(local_2_factor,1);
    local_3_control = BigInt__right_shifted__Int32(local_3_control,1);
  }
  ((ClassBigInt*)context)->property_sign_flag *= ((ClassBigInt*)local_0_n)->property_sign_flag;
  return BigInt__normalized(local_1_result);
}

static SlagObject* BigInt__opDIV__BigInt( SXCRef context, SXCRef local_0_n )
{
  SXCRef local_1_result;
  SXCRef local_2_remaining;
  SlagInt32 local_3_factor;
  SXCRef local_4_divisor;

  if (BigInt__is_zero(local_0_n))
  {
    SLAG_THROW( DivideByZeroError__init(type_ClassDivideByZeroError.create()) );
  }
  local_1_result = ((ClassBigIntManager*)sxc_singletons[24])->property_zero;
  local_2_remaining = BigInt__init__BigInt(type_ClassBigInt.create(),context);
  local_3_factor = 0;
  local_4_divisor = BigInt__init__BigInt(type_ClassBigInt.create(),local_0_n);
  ((ClassBigInt*)local_2_remaining)->property_sign_flag = 1;
  ((ClassBigInt*)local_4_divisor)->property_sign_flag = 1;
  while ((BigInt__opCMP__BigInt(local_4_divisor,local_2_remaining) == -1))
  {
    ++local_3_factor;
    local_4_divisor = BigInt__left_shifted__Int32(local_4_divisor,1);
  }
  while ((local_3_factor >= 0))
  {
    if ((BigInt__opCMP__BigInt(local_4_divisor,local_2_remaining) != 1))
    {
      local_1_result = BigInt__opADD__BigInt(local_1_result,BigInt__left_shifted__Int32(BigInt__init__Int32(type_ClassBigInt.create(),1),local_3_factor));
      local_2_remaining = BigInt__opSUB__BigInt(local_2_remaining,local_4_divisor);
    }
    local_4_divisor = BigInt__right_shifted__Int32(local_4_divisor,1);
    --local_3_factor;
  }
  ((ClassBigInt*)local_2_remaining)->property_sign_flag = ((ClassBigInt*)context)->property_sign_flag;
  if (((((ClassBigInt*)local_2_remaining)->property_sign_flag == 1)^(((ClassBigInt*)local_0_n)->property_sign_flag == 1)))
  {
    local_2_remaining = BigInt__opADD__BigInt(local_2_remaining,local_0_n);
  }
  sxc_write_ref( &(((ClassBigIntManager*)sxc_singletons[24])->property_last_modulo), BigInt__normalized(local_2_remaining) );
  ((ClassBigInt*)context)->property_sign_flag *= ((ClassBigInt*)local_0_n)->property_sign_flag;
  return BigInt__normalized(local_1_result);
}

static SlagObject* BigInt__opEXP__BigInt( SXCRef context, SXCRef local_0_n )
{
  SXCRef local_1_half_power;

  if ((((ClassBigInt*)local_0_n)->property_sign_flag == -1))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str152.value,Global__to_String__Object(sxc_singletons[21],local_0_n)) );
  }
  if (BigInt__is_zero(local_0_n))
  {
    return ((ClassBigIntManager*)sxc_singletons[24])->property_one;
  }
  if (BigInt__opEQ__BigInt(local_0_n,((ClassBigIntManager*)sxc_singletons[24])->property_one))
  {
    return context;
  }
  if (Global__is_odd__BigInt(sxc_singletons[21],local_0_n))
  {
    return BigInt__opMUL__BigInt(context,BigInt__opEXP__BigInt(context,BigInt__opSUB__BigInt(local_0_n,((ClassBigIntManager*)sxc_singletons[24])->property_one)));
  }
  local_1_half_power = BigInt__opEXP__BigInt(context,BigInt__right_shifted__Int32(local_0_n,1));
  return BigInt__opMUL__BigInt(local_1_half_power,local_1_half_power);
}

void BigInt__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassBigInt*)context)->property_sign_flag = 1;
}

SlagObject* BigInt__type_name( SXCRef context )
{
  return str175.value;
}

static SlagObject* ParamInfo__init__ArrayList_of_ParameterInfo( SXCRef context, SXCRef local_0_parameters_10165 )
{
  sxc_write_ref( &(((ClassParamInfo*)context)->property_parameters), local_0_parameters_10165 );
  return context;
}

void ParamInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ParamInfo__type_name( SXCRef context )
{
  return str1367.value;
}

SlagObject* StructureType__init( SXCRef context )
{
  return context;
}

SlagObject* StructureType__to_String( SXCRef context )
{
  return ((ClassString*)((ClassStructureType*)context)->property_name);
}

static SlagInt32 StructureType__opCMP__StructureType( SXCRef context, SXCRef local_0_other )
{
  SlagInt32 local_1_a;
  SlagInt32 local_2_b;

  local_1_a = ((ClassStructureType*)context)->property_ordinal;
  local_2_b = ((ClassStructureType*)local_0_other)->property_ordinal;
  if ((local_1_a < local_2_b))
  {
    return -1;
  }
  if ((local_1_a == local_2_b))
  {
    return 0;
  }
  return 1;
}

static SlagInt32 StructureType__hash_code( SXCRef context )
{
  return ((ClassStructureType*)context)->property_ordinal;
}

static SlagObject* StructureType__init__Logical( SXCRef context, SlagLogical local_0_is_loop_6788 )
{
  ((ClassStructureType*)context)->property_is_loop = local_0_is_loop_6788;
  return context;
}

void StructureType__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* StructureType__type_name( SXCRef context )
{
  return str737.value;
}

static SlagObject* CmdInitialAssignment__init__Token_Cmd( SXCRef context, SXCRef local_0_t_7851, SXCRef local_1_expression_7850 )
{
  sxc_write_ref( &(((ClassCmdInitialAssignment*)context)->property_t), local_0_t_7851 );
  sxc_write_ref( &(((ClassCmdInitialAssignment*)context)->property_expression), local_1_expression_7850 );
  return context;
}

static SlagObject* CmdInitialAssignment__create_duplicate( SXCRef context )
{
  return CmdInitialAssignment__init__Token_Cmd(type_ClassCmdInitialAssignment.create(),((ClassCmdInitialAssignment*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdInitialAssignment*)context)->property_expression));
}

static SlagObject* CmdInitialAssignment__resolve( SXCRef context )
{
  SLAG_THROW( Error__init__String(type_ClassError.create(),str1199.value) );
}

void CmdInitialAssignment__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdInitialAssignment__type_name( SXCRef context )
{
  return str847.value;
}

static SlagObject* CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdRightXShifted.create(),((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_rhs));
}

static SlagObject* CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs), CallFn____Object(16,((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs) );
  sxc_write_ref( &(((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_rhs), CallFn____Object(16,((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_rhs) );
  SlagAnalyzer__require_standard_integer__Cmd(sxc_singletons[8],((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs);
  SlagAnalyzer__require_int32__Cmd(sxc_singletons[8],((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_rhs);
  return CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__optimize(context);
}

static SlagObject* CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__optimize( SXCRef context )
{
  SXCRef local_0_right;
  SXCRef local_1_left;
  SXCRef local_2_left;

  if ((sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    local_0_right = ((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_rhs;
    if (sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_1_left = ((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs;
      ((ClassCmdLiteralInt64*)local_1_left)->property_value = (((ClassCmdLiteralInt64*)local_1_left)->property_value>>((ClassCmdLiteralInt32*)local_0_right)->property_value);
      return ((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = (((ClassCmdLiteralInt32*)local_2_left)->property_value>>((ClassCmdLiteralInt32*)local_0_right)->property_value);
      return ((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_right_xshifted)->property_ordinal);
  CallFn__(7,((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_lhs);
  CallFn__(7,((ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted*)context)->property_rhs);
}

void CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__type_name( SXCRef context )
{
  return str1102.value;
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__init__Token_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9527, SXCRef local_1_var_info_9526, SXCRef local_2_operand_9525 )
{
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign*)context)->property_t), local_0_t_9527 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign*)context)->property_var_info), local_1_var_info_9526 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign*)context)->property_operand), local_2_operand_9525 );
  return context;
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__create_duplicate( SXCRef context )
{
  return CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__init__Token_PropertyInfo_Cmd(type_ClassCmdThisPropertyAddAndAssign.create(),((ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign*)context)->property_t,((ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign*)context)->property_operand));
}

SlagObject* CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign*)context)->property_var_info)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__resolve( SXCRef context )
{
  return context;
}

static void CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_this_property_add_and_assign)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign*)context)->property_operand);
}

void CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__type_name( SXCRef context )
{
  return str1211.value;
}

static SlagObject* CmdCmpIsNotNull__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdCmpIsNotNull.create(),((ClassCmdCmpIsNotNull*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpIsNotNull*)context)->property_operand));
}

static SlagObject* CmdCmpIsNotNull__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_logical;
}

static SlagObject* CmdCmpIsNotNull__resolve( SXCRef context )
{
  return context;
}

static SlagObject* CmdCmpIsNotNull__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdCmpIsNotNull*)context)->property_operand)),str1736.value));
}

static SlagObject* CmdCmpIsNotNull__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCmpIsNotNull*)context)->property_operand)),str1959.value));
}

static void CmdCmpIsNotNull__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cmp_is_not_null)->property_ordinal);
  CallFn__(7,((ClassCmdCmpIsNotNull*)context)->property_operand);
}

static SlagObject* CmdCmpIsNotNull__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCmpIsNotNull*)context)->property_operand)),str1959.value));
}

void CmdCmpIsNotNull__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpIsNotNull__type_name( SXCRef context )
{
  return str1255.value;
}

static SlagObject* CmdLiteralReal64__init__Token_Real64( SXCRef context, SXCRef local_0_t_7920, SlagReal64 local_1_value_7919 )
{
  sxc_write_ref( &(((ClassCmdLiteralReal64*)context)->property_t), local_0_t_7920 );
  ((ClassCmdLiteralReal64*)context)->property_value = local_1_value_7919;
  return context;
}

static SlagObject* CmdLiteralReal64__create_duplicate( SXCRef context )
{
  return CmdLiteralReal64__init__Token_Real64(type_ClassCmdLiteralReal64.create(),((ClassCmdLiteralReal64*)context)->property_t,((ClassCmdLiteralReal64*)context)->property_value);
}

static SlagObject* CmdLiteralReal64__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_real64;
}

SlagObject* CmdLiteralReal64__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)String__after_first__String(CmdLiteralReal64__type_name(context),str758.value))),str61.value),Global__to_String__Real64(sxc_singletons[21],((ClassCmdLiteralReal64*)context)->property_value)),str62.value));
}

static SlagObject* CmdLiteralReal64__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1674.value),Global__to_String__Int64_Int32(sxc_singletons[21],sxc_real64_as_int64(((ClassCmdLiteralReal64*)context)->property_value),16)),str1675.value));
}

static SlagObject* CmdLiteralReal64__to_cs( SXCRef context )
{
  if ((((ClassCmdLiteralReal64*)context)->property_value == ((SlagReal64)((SlagInt32)((ClassCmdLiteralReal64*)context)->property_value))))
  {
    return Global__format_string__Real64_Int32_Int32_Char(sxc_singletons[21],((ClassCmdLiteralReal64*)context)->property_value,1,1,((SlagChar)32));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1927.value),Global__to_String__Int64_Int32(sxc_singletons[21],sxc_real64_as_int64(((ClassCmdLiteralReal64*)context)->property_value),16)),str1928.value));
  }
}

static SlagObject* CmdLiteralReal64__to_java( SXCRef context )
{
  if ((((ClassCmdLiteralReal64*)context)->property_value == ((SlagReal64)((SlagInt32)((ClassCmdLiteralReal64*)context)->property_value))))
  {
    return Global__format_string__Real64_Int32_Int32_Char(sxc_singletons[21],((ClassCmdLiteralReal64*)context)->property_value,1,1,((SlagChar)32));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2012.value),Global__to_String__Int64_Int32(sxc_singletons[21],sxc_real64_as_int64(((ClassCmdLiteralReal64*)context)->property_value),16)),str1928.value));
  }
}

static void CmdLiteralReal64__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_literal_real64)->property_ordinal);
  BitWriter__write_Int64__Int64(((ClassETCWriter*)sxc_singletons[13])->property_out,sxc_real64_as_int64(((ClassCmdLiteralReal64*)context)->property_value));
}

void CmdLiteralReal64__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLiteralReal64__type_name( SXCRef context )
{
  return str869.value;
}

static SlagObject* CmdCastToReal64__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdCastToReal64.create(),((ClassCmdCastToReal64*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCastToReal64*)context)->property_operand));
}

static SlagObject* CmdCastToReal64__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_real64;
}

static SlagObject* CmdCastToReal64__optimize( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdCastToReal64*)context)->property_operand,&type_ClassCmdLiteralPrimitive))
  {
    if (sxc_instance_of(((ClassCmdCastToReal64*)context)->property_operand,&type_ClassCmdLiteralInt64))
    {
      return CmdLiteralReal64__init__Token_Real64(type_ClassCmdLiteralReal64.create(),((ClassCmdCastToReal64*)context)->property_t,((SlagReal64)((ClassCmdLiteralInt64*)((ClassCmdCastToReal64*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToReal64*)context)->property_operand,&type_ClassCmdLiteralInt32))
    {
      return CmdLiteralReal64__init__Token_Real64(type_ClassCmdLiteralReal64.create(),((ClassCmdCastToReal64*)context)->property_t,((SlagReal64)((ClassCmdLiteralInt32*)((ClassCmdCastToReal64*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToReal64*)context)->property_operand,&type_ClassCmdLiteralReal64))
    {
      return ((ClassCmdCastToReal64*)context)->property_operand;
    }
    if (sxc_instance_of(((ClassCmdCastToReal64*)context)->property_operand,&type_ClassCmdLiteralReal32))
    {
      return CmdLiteralReal64__init__Token_Real64(type_ClassCmdLiteralReal64.create(),((ClassCmdCastToReal64*)context)->property_t,((SlagReal64)((ClassCmdLiteralReal32*)((ClassCmdCastToReal64*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToReal64*)context)->property_operand,&type_ClassCmdLiteralChar))
    {
      return CmdLiteralReal64__init__Token_Real64(type_ClassCmdLiteralReal64.create(),((ClassCmdCastToReal64*)context)->property_t,((SlagReal64)((SlagInt32)((ClassCmdLiteralChar*)((ClassCmdCastToReal64*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToReal64*)context)->property_operand,&type_ClassCmdLiteralByte))
    {
      return CmdLiteralReal64__init__Token_Real64(type_ClassCmdLiteralReal64.create(),((ClassCmdCastToReal64*)context)->property_t,((SlagReal64)((SlagInt32)((ClassCmdLiteralByte*)((ClassCmdCastToReal64*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToReal64*)context)->property_operand,&type_ClassCmdLiteralLogical))
    {
      return CmdLiteralReal64__init__Token_Real64(type_ClassCmdLiteralReal64.create(),((ClassCmdCastToReal64*)context)->property_t,((SlagReal64)((SlagInt32)((ClassCmdLiteralLogical*)((ClassCmdCastToReal64*)context)->property_operand)->property_value)));
    }
  }
  return context;
}

static SlagObject* CmdCastToReal64__statement_to_java( SXCRef context )
{
  return CallFn____Object(6,((ClassCmdCastToReal64*)context)->property_operand);
}

static SlagObject* CmdCastToReal64__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1950.value),CallFn____Object(41,((ClassCmdCastToReal64*)context)->property_operand)),str62.value));
}

static void CmdCastToReal64__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cast_to_real64)->property_ordinal);
  CallFn__(7,((ClassCmdCastToReal64*)context)->property_operand);
}

static SlagObject* CmdCastToReal64__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(12,((ClassCmdCastToReal64*)context)->property_operand);
}

static SlagObject* CmdCastToReal64__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1703.value),CallFn____Object(15,((ClassCmdCastToReal64*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCastToReal64__statement_to_cs( SXCRef context )
{
  return CallFn____Object(33,((ClassCmdCastToReal64*)context)->property_operand);
}

static SlagObject* CmdCastToReal64__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1950.value),CallFn____Object(35,((ClassCmdCastToReal64*)context)->property_operand)),str62.value));
}

void CmdCastToReal64__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCastToReal64__type_name( SXCRef context )
{
  return str1093.value;
}

static SlagObject* Array_of_StructureType__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_StructureType.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_StructureType__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_StructureType__type_name( SXCRef context )
{
  return str724.value;
}

static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Mapping_of_Int32_and_Int32__init__Int32(type_ClassArrayList_of_Mapping_of_Int32_and_Int32.create(),ArrayReader_of_Mapping_of_Int32_and_Int32__remaining(context));
  while (ArrayReader_of_Mapping_of_Int32_and_Int32__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_Mapping_of_Int32_and_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_Mapping_of_Int32_and_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Mapping_of_Int32_and_Int32__to_String(ArrayReader_of_Mapping_of_Int32_and_Int32__to_List(context));
}

static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Int32__init__Collection_of_Mapping_of_Int32_and_Int32_Array_of_Mapping_of_Int32_and_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_8767, SXCRef local_1_data_8766, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_collection), local_0_collection_8767 );
  sxc_write_ref( &(((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_data), local_1_data_8766 );
  ((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_collection);
  }
  ((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_collection)))
  {
    ((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_collection);
  }
  ((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Int32__create_duplicate( SXCRef context )
{
  return ArrayReader_of_Mapping_of_Int32_and_Int32__init__Collection_of_Mapping_of_Int32_and_Int32_Array_of_Mapping_of_Int32_and_Int32_Int32_Int32(type_ClassArrayReader_of_Mapping_of_Int32_and_Int32.create(),((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_collection,((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_data,((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_counter,(((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_last_exclusive-((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_counter));
}

static SlagLogical ArrayReader_of_Mapping_of_Int32_and_Int32__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_counter < ((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_Mapping_of_Int32_and_Int32__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_last_exclusive-((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_counter);
}

static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Int32__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassMapping_of_Int32_and_Int32**)(((SlagArray*)((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_data)->data))[((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_counter];
  ++(((ClassArrayReader_of_Mapping_of_Int32_and_Int32*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_Mapping_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_Mapping_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1022.value;
}

static SlagObject* CmdInitialConstructor__init__Token_CmdList( SXCRef context, SXCRef local_0_t_7662, SXCRef local_1_args_7661 )
{
  sxc_write_ref( &(((ClassCmdInitialConstructor*)context)->property_t), local_0_t_7662 );
  sxc_write_ref( &(((ClassCmdInitialConstructor*)context)->property_args), local_1_args_7661 );
  return context;
}

static SlagObject* CmdInitialConstructor__create_duplicate( SXCRef context )
{
  return CmdInitialConstructor__init__Token_CmdList(type_ClassCmdInitialConstructor.create(),((ClassCmdInitialConstructor*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdInitialConstructor*)context)->property_args));
}

static SlagObject* CmdInitialConstructor__resolve( SXCRef context )
{
  SLAG_THROW( Error__init__String(type_ClassError.create(),str1199.value) );
}

void CmdInitialConstructor__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdInitialConstructor__type_name( SXCRef context )
{
  return str788.value;
}

static SlagInt32 RangeIteratorDescending_of_Int32__available( SXCRef context )
{
  if (RangeIteratorDescending_of_Int32__has_another(context))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* RangeIteratorDescending_of_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),RangeIteratorDescending_of_Int32__available(context));
  while (RangeIteratorDescending_of_Int32__has_another(context))
  {
    ArrayList_of_Int32__add__Int32(local_0_result_list,RangeIteratorDescending_of_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* RangeIteratorDescending_of_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Int32__to_String(RangeIteratorDescending_of_Int32__to_List(context));
}

static SlagObject* RangeIteratorDescending_of_Int32__init__Int32_Int32_Int32( SXCRef context, SlagInt32 local_0_first_value, SlagInt32 local_1_last_value_4838, SlagInt32 local_2_step_size_4837 )
{
  ((ClassRangeIteratorDescending_of_Int32*)context)->property_last_value = local_1_last_value_4838;
  ((ClassRangeIteratorDescending_of_Int32*)context)->property_step_size = local_2_step_size_4837;
  ((ClassRangeIteratorDescending_of_Int32*)context)->property_next_value = local_0_first_value;
  return context;
}

static SlagObject* RangeIteratorDescending_of_Int32__create_duplicate( SXCRef context )
{
  return RangeIteratorDescending_of_Int32__init__Int32_Int32_Int32(type_ClassRangeIteratorDescending_of_Int32.create(),((ClassRangeIteratorDescending_of_Int32*)context)->property_next_value,((ClassRangeIteratorDescending_of_Int32*)context)->property_last_value,((ClassRangeIteratorDescending_of_Int32*)context)->property_step_size);
}

static SlagLogical RangeIteratorDescending_of_Int32__has_another( SXCRef context )
{
  return (((ClassRangeIteratorDescending_of_Int32*)context)->property_next_value >= ((ClassRangeIteratorDescending_of_Int32*)context)->property_last_value);
}

static SlagInt32 RangeIteratorDescending_of_Int32__read( SXCRef context )
{
  SlagInt32 local_0_result;

  if ((((ClassRangeIteratorDescending_of_Int32*)context)->property_next_value < ((ClassRangeIteratorDescending_of_Int32*)context)->property_last_value))
  {
    SLAG_THROW( NoNextValueError__init(type_ClassNoNextValueError.create()) );
  }
  local_0_result = ((ClassRangeIteratorDescending_of_Int32*)context)->property_next_value;
  ((ClassRangeIteratorDescending_of_Int32*)context)->property_next_value += ((ClassRangeIteratorDescending_of_Int32*)context)->property_step_size;
  return local_0_result;
}

void RangeIteratorDescending_of_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* RangeIteratorDescending_of_Int32__type_name( SXCRef context )
{
  return str160.value;
}

static SlagObject* Array_of_Signal__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Signal.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Signal__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Signal__type_name( SXCRef context )
{
  return str101.value;
}

static SlagObject* ArrayList_of_Signal__add__Readable_of_Signal( SXCRef context, SXCRef local_0_source )
{
  SXCRef local_1__reader3830;
  SXCRef local_2_value;

  local_1__reader3830 = CallFn____Object(44,local_0_source);
  while (CallFn____Logical(14,local_1__reader3830))
  {
    local_2_value = CallFn____Object(45,local_1__reader3830);
    ArrayList_of_Object__add__Object(context,local_2_value);
  }
  return context;
}

static SlagObject* ArrayList_of_Signal__transfer_from__List_of_Signal( SXCRef context, SXCRef local_0_source )
{
  ArrayList_of_Object__clear(context);
  ArrayList_of_Signal__add__Readable_of_Signal(context,local_0_source);
  CallFn__(24,local_0_source);
  return context;
}

SlagObject* ArrayList_of_Signal__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count3856;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count3856 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count3856))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassSignal*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Signal__init( SXCRef context )
{
  ArrayList_of_Signal__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Signal__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Signal*)context)->property_data), type_ClassArray_of_Signal.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Signal__create_reader( SXCRef context )
{
  return ArrayReader_of_Signal__init__Collection_of_Signal_Array_of_Signal_Int32_Int32(type_ClassArrayReader_of_Signal.create(),context,((ClassArrayList_of_Signal*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_Signal__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_Signal__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_Signal__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_Signal__add__Signal( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_Signal*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_Signal__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Signal__init__Int32(type_ClassArrayList_of_Signal.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Signal*)local_0_dup)->property_data,((ClassArrayList_of_Signal*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_Signal*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_Signal__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_Signal__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Signal__type_name( SXCRef context )
{
  return str102.value;
}

SlagObject* Signal__init__String_Object( SXCRef context, SXCRef local_0_id_3670, SXCRef local_1_argument_3669 )
{
  sxc_write_ref( &(((ClassSignal*)context)->property_id), local_0_id_3670 );
  sxc_write_ref( &(((ClassSignal*)context)->property_argument), local_1_argument_3669 );
  return context;
}

void Signal__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Signal__type_name( SXCRef context )
{
  return str117.value;
}

SlagObject* ArrayList_of_Byte__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count3455;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Byte*)context)->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count3455 = ((ClassArrayList_of_Byte*)context)->property_count;
    while ((local_1_i < local_2__count3455))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,((ClassString*)Global__to_String__Byte_Int32(sxc_singletons[21],((SlagByte*)(((SlagArray*)((ClassArrayList_of_Byte*)context)->property_data)->data))[local_1_i],10)));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Byte__init( SXCRef context )
{
  ArrayList_of_Byte__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Byte__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Byte*)context)->property_data), type_ClassArray_of_Byte.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Byte__init__Array_of_Byte_Logical( SXCRef context, SXCRef local_0_array, SlagLogical local_1_make_copy )
{
  if (local_1_make_copy)
  {
    sxc_write_ref( &(((ClassArrayList_of_Byte*)context)->property_data), slag_duplicate_array(local_0_array) );
  }
  else
  {
    sxc_write_ref( &(((ClassArrayList_of_Byte*)context)->property_data), local_0_array );
  }
  ((ClassArrayList_of_Byte*)context)->property_count = ((SlagArray*)local_0_array)->array_count;
  return context;
}

static void ArrayList_of_Byte__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_min_capacity )
{
  SXCRef local_1_new_data;

  if ((((SlagArray*)((ClassArrayList_of_Byte*)context)->property_data)->array_count < local_0_min_capacity))
  {
    local_1_new_data = type_ClassArray_of_Byte.create(local_0_min_capacity);
    GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_1_new_data,((ClassArrayList_of_Byte*)context)->property_data,0,0,((ClassArrayList_of_Byte*)context)->property_count);
    sxc_write_ref( &(((ClassArrayList_of_Byte*)context)->property_data), local_1_new_data );
  }
}

void ArrayList_of_Byte__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Byte__ensure_capacity__Int32(context,local_0_num_items);
  if ((local_0_num_items > ((ClassArrayList_of_Byte*)context)->property_count))
  {
    ((ClassArrayList_of_Byte*)context)->property_count = local_0_num_items;
    ((ClassArrayList_of_Byte*)context)->property_modification_count = (((ClassArrayList_of_Byte*)context)->property_modification_count+1);
  }
}

SlagObject* ArrayList_of_Byte__add__Byte( SXCRef context, SlagByte local_0_value )
{
  if ((((ClassArrayList_of_Byte*)context)->property_count == ((SlagArray*)((ClassArrayList_of_Byte*)context)->property_data)->array_count))
  {
    if ((((ClassArrayList_of_Byte*)context)->property_count == 0))
    {
      ArrayList_of_Byte__ensure_capacity__Int32(context,1);
    }
    else
    {
      ArrayList_of_Byte__ensure_capacity__Int32(context,(((SlagArray*)((ClassArrayList_of_Byte*)context)->property_data)->array_count<<1));
    }
  }
  ((SlagByte*)(((SlagArray*)((ClassArrayList_of_Byte*)context)->property_data)->data))[((ClassArrayList_of_Byte*)context)->property_count] = local_0_value;
  ++(((ClassArrayList_of_Byte*)context)->property_count);
  ((ClassArrayList_of_Byte*)context)->property_modification_count = (((ClassArrayList_of_Byte*)context)->property_modification_count+1);
  return context;
}

static SlagObject* ArrayList_of_Byte__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Byte__init__Int32(type_ClassArrayList_of_Byte.create(),((ClassArrayList_of_Byte*)context)->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Byte*)local_0_dup)->property_data,((ClassArrayList_of_Byte*)context)->property_data,0,0,((ClassArrayList_of_Byte*)context)->property_count);
  ((ClassArrayList_of_Byte*)local_0_dup)->property_count = ((ClassArrayList_of_Byte*)context)->property_count;
  return local_0_dup;
}

void ArrayList_of_Byte__clear( SXCRef context )
{
  if ((((ClassArrayList_of_Byte*)context)->property_count > 0))
  {
    GenericArray__clear__Int32_Int32(((ClassArrayList_of_Byte*)context)->property_data,0,(((ClassArrayList_of_Byte*)context)->property_count-1));
    ((ClassArrayList_of_Byte*)context)->property_count = 0;
    ((ClassArrayList_of_Byte*)context)->property_modification_count = (((ClassArrayList_of_Byte*)context)->property_modification_count+1);
  }
}

void ArrayList_of_Byte__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Byte__type_name( SXCRef context )
{
  return str88.value;
}

static SlagObject* CmdSingletonWrite__init__Token_TypeInfo_Cmd( SXCRef context, SXCRef local_0_t_9501, SXCRef local_1_of_type_9500, SXCRef local_2_new_value_9499 )
{
  sxc_write_ref( &(((ClassCmdSingletonWrite*)context)->property_t), local_0_t_9501 );
  sxc_write_ref( &(((ClassCmdSingletonWrite*)context)->property_of_type), local_1_of_type_9500 );
  sxc_write_ref( &(((ClassCmdSingletonWrite*)context)->property_new_value), local_2_new_value_9499 );
  return context;
}

static SlagObject* CmdSingletonWrite__create_duplicate( SXCRef context )
{
  return CmdSingletonWrite__init__Token_TypeInfo_Cmd(type_ClassCmdSingletonWrite.create(),((ClassCmdSingletonWrite*)context)->property_t,((ClassCmdSingletonWrite*)context)->property_of_type,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdSingletonWrite*)context)->property_new_value));
}

SlagObject* CmdSingletonWrite__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CmdSingletonWrite__type_name(context)),str61.value),((ClassTypeInfo*)((ClassCmdSingletonWrite*)context)->property_of_type)->property_name),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdSingletonWrite*)context)->property_new_value)),str62.value));
}

static SlagObject* CmdSingletonWrite__resolve( SXCRef context )
{
  TypeInfo__resolve(((ClassCmdSingletonWrite*)context)->property_of_type);
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdSingletonWrite*)context)->property_of_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0))
  {
    return CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdSingletonWrite*)context)->property_t,CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdSingletonWrite*)context)->property_t,TypeManager__get__String_Token(sxc_singletons[7],TypeInfo__manager_name(((ClassCmdSingletonWrite*)context)->property_of_type),NULL)),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdSingletonWrite*)context)->property_t,str998.value,CmdList__init__Cmd(type_ClassCmdList.create(),((ClassCmdSingletonWrite*)context)->property_new_value))));
  }
  sxc_write_ref( &(((ClassCmdSingletonWrite*)context)->property_new_value), CallFn____Object(16,((ClassCmdSingletonWrite*)context)->property_new_value) );
  SlagAnalyzer__require_type__Cmd_TypeInfo(sxc_singletons[8],((ClassCmdSingletonWrite*)context)->property_new_value,((ClassCmdSingletonWrite*)context)->property_of_type);
  return context;
}

static SlagObject* CmdSingletonWrite__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdSingletonWrite*)context)->property_new_value), CallFn____Object(42,((ClassCmdSingletonWrite*)context)->property_new_value) );
  return context;
}

static void CmdSingletonWrite__finalize_structure_info( SXCRef context )
{
  CallFn__(21,((ClassCmdSingletonWrite*)context)->property_new_value);
}

static void CmdSingletonWrite__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdSingletonWrite*)context)->property_new_value);
}

static SlagObject* CmdSingletonWrite__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdSingletonWrite*)context)->property_new_value), CallFn__CmdList__Object(1,((ClassCmdSingletonWrite*)context)->property_new_value,local_0_arg_list) );
  return context;
}

static SlagObject* CmdSingletonWrite__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1936.value),TypeInfo__x_name(((ClassCmdSingletonWrite*)context)->property_of_type)),str1653.value),CallFn____Object(35,((ClassCmdSingletonWrite*)context)->property_new_value)));
}

static SlagObject* CmdSingletonWrite__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2018.value),TypeInfo__x_name(((ClassCmdSingletonWrite*)context)->property_of_type)),str1653.value),CallFn____Object(41,((ClassCmdSingletonWrite*)context)->property_new_value)));
}

static void CmdSingletonWrite__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_singleton_write)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassTypeInfo*)((ClassCmdSingletonWrite*)context)->property_of_type)->property_index);
  CallFn__(7,((ClassCmdSingletonWrite*)context)->property_new_value);
}

static SlagObject* CmdSingletonWrite__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1725.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassTypeInfo*)((ClassCmdSingletonWrite*)context)->property_of_type)->property_singleton_index,10))),str1726.value),CallFn____Object(15,((ClassCmdSingletonWrite*)context)->property_new_value)),str635.value));
}

void CmdSingletonWrite__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdSingletonWrite__type_name( SXCRef context )
{
  return str1203.value;
}

static SlagObject* ArrayReader_of_MethodInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_MethodInfo__init__Int32(type_ClassArrayList_of_MethodInfo.create(),ArrayReader_of_MethodInfo__remaining(context));
  while (ArrayReader_of_MethodInfo__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_MethodInfo__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_MethodInfo__to_String( SXCRef context )
{
  return ArrayList_of_MethodInfo__to_String(ArrayReader_of_MethodInfo__to_List(context));
}

static SlagObject* ArrayReader_of_MethodInfo__init__Collection_of_MethodInfo_Array_of_MethodInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_6943, SXCRef local_1_data_6942, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_MethodInfo*)context)->property_collection), local_0_collection_6943 );
  sxc_write_ref( &(((ClassArrayReader_of_MethodInfo*)context)->property_data), local_1_data_6942 );
  ((ClassArrayReader_of_MethodInfo*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_MethodInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_MethodInfo*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_MethodInfo*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_MethodInfo*)context)->property_collection)))
  {
    ((ClassArrayReader_of_MethodInfo*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_MethodInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_MethodInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_MethodInfo*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_MethodInfo__create_duplicate( SXCRef context )
{
  return ArrayReader_of_MethodInfo__init__Collection_of_MethodInfo_Array_of_MethodInfo_Int32_Int32(type_ClassArrayReader_of_MethodInfo.create(),((ClassArrayReader_of_MethodInfo*)context)->property_collection,((ClassArrayReader_of_MethodInfo*)context)->property_data,((ClassArrayReader_of_MethodInfo*)context)->property_counter,(((ClassArrayReader_of_MethodInfo*)context)->property_last_exclusive-((ClassArrayReader_of_MethodInfo*)context)->property_counter));
}

static SlagLogical ArrayReader_of_MethodInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_MethodInfo*)context)->property_counter < ((ClassArrayReader_of_MethodInfo*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_MethodInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_MethodInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_MethodInfo__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_MethodInfo*)context)->property_last_exclusive-((ClassArrayReader_of_MethodInfo*)context)->property_counter);
}

static SlagObject* ArrayReader_of_MethodInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassMethodInfo**)(((SlagArray*)((ClassArrayReader_of_MethodInfo*)context)->property_data)->data))[((ClassArrayReader_of_MethodInfo*)context)->property_counter];
  ++(((ClassArrayReader_of_MethodInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_MethodInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_MethodInfo__type_name( SXCRef context )
{
  return str572.value;
}

static SlagObject* LocalVarTable__init__MethodInfo( SXCRef context, SXCRef local_0_this_method_8570 )
{
  sxc_write_ref( &(((ClassLocalVarTable*)context)->property_this_method), local_0_this_method_8570 );
  return context;
}

static SlagObject* LocalVarTable__define__LocalVarInfo( SXCRef context, SXCRef local_0_v )
{
  if ((LocalVarTable__get__String(context,((ClassLocalVarInfo*)local_0_v)->property_name) != NULL))
  {
    SLAG_THROW( ((ClassSlagError*)PriorSlagError__init__Token_String_Token(type_ClassPriorSlagError.create(),((ClassLocalVarInfo*)local_0_v)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1038.value),((ClassLocalVarInfo*)local_0_v)->property_name),str1039.value)),((ClassLocalVarInfo*)LocalVarTable__get__String(context,((ClassLocalVarInfo*)local_0_v)->property_name))->property_t)) );
  }
  ((ClassLocalVarInfo*)local_0_v)->property_index = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)((ClassLocalVarTable*)context)->property_this_method)->property_local_vars))->property_count;
  ArrayList_of_Object__add__Object(((ClassMethodInfo*)((ClassLocalVarTable*)context)->property_this_method)->property_local_vars,local_0_v);
  GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_LocalVarInfo*)ArrayList_of_HashTable_of_String_and_LocalVarInfo__last(((ClassLocalVarTable*)context)->property_scopes))->property_data,((ClassLocalVarInfo*)local_0_v)->property_name,local_0_v);
  return local_0_v;
}

static SlagObject* LocalVarTable__get__String( SXCRef context, SXCRef local_0_name )
{
  SXCRef local_1__reader1004;
  SXCRef local_2_scope;
  SXCRef local_3_entry;

  local_1__reader1004 = ArrayList_of_HashTable_of_String_and_LocalVarInfo__create_reader(((ClassLocalVarTable*)context)->property_scopes);
  while (ArrayReader_of_HashTable_of_String_and_LocalVarInfo__has_another(local_1__reader1004))
  {
    local_2_scope = ArrayReader_of_HashTable_of_String_and_LocalVarInfo__read(local_1__reader1004);
    local_3_entry = ((ClassMapping_of_String_and_LocalVarInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_LocalVarInfo*)local_2_scope)->property_data,local_0_name));
    if ((local_3_entry != NULL))
    {
      return ((ClassMapping_of_String_and_LocalVarInfo*)local_3_entry)->property_value;
    }
  }
  return NULL;
}

void LocalVarTable__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassLocalVarTable*)context)->property_scopes), ArrayList_of_HashTable_of_String_and_LocalVarInfo__init(type_ClassArrayList_of_HashTable_of_String_and_LocalVarInfo.create()) );
}

SlagObject* LocalVarTable__type_name( SXCRef context )
{
  return str1018.value;
}

static SlagObject* HashSet_of_Int32__add__Int32( SXCRef context, SlagInt32 local_0_value )
{
  if (!GenericHashTable_of_Int32_and_Int32__contains__Int32(((ClassHashSet_of_Int32*)context)->property_data,local_0_value))
  {
    GenericHashTable_of_Int32_and_Int32__set__Int32_Int32(((ClassHashSet_of_Int32*)context)->property_data,local_0_value,local_0_value);
  }
  return context;
}

static SlagObject* HashSet_of_Int32__create_reader( SXCRef context )
{
  return ((AspectReader_of_Int32*)CoerceReader_of_Int32__init__Reader_of_Int32(type_ClassCoerceReader_of_Int32.create(),((AspectReader_of_Int32*)HashTableValueReader_of_Int32_and_Int32__init__Reader_of_HashTableBin_of_Int32_and_Int32(type_ClassHashTableValueReader_of_Int32_and_Int32.create(),ArrayList_of_HashTableBin_of_Int32_and_Int32__create_reader(((ClassGenericHashTable_of_Int32_and_Int32*)((ClassHashSet_of_Int32*)context)->property_data)->property_bins)))));
}

void HashSet_of_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashSet_of_Int32__type_name( SXCRef context )
{
  return str1034.value;
}

SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Object__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count4628;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count4628 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count4628))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassHashTableBin_of_Int32_and_Object*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Object__init( SXCRef context )
{
  ArrayList_of_HashTableBin_of_Int32_and_Object__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_HashTableBin_of_Int32_and_Object*)context)->property_data), type_ClassArray_of_HashTableBin_of_Int32_and_Object.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader( SXCRef context )
{
  return ArrayReader_of_HashTableBin_of_Int32_and_Object__init__Collection_of_HashTableBin_of_Int32_and_Object_Array_of_HashTableBin_of_Int32_and_Object_Int32_Int32(type_ClassArrayReader_of_HashTableBin_of_Int32_and_Object.create(),context,((ClassArrayList_of_HashTableBin_of_Int32_and_Object*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_HashTableBin_of_Int32_and_Object__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_HashTableBin_of_Int32_and_Object__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_HashTableBin_of_Int32_and_Object__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Object__add__HashTableBin_of_Int32_and_Object( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_HashTableBin_of_Int32_and_Object*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_HashTableBin_of_Int32_and_Object__init__Int32(type_ClassArrayList_of_HashTableBin_of_Int32_and_Object.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_HashTableBin_of_Int32_and_Object*)local_0_dup)->property_data,((ClassArrayList_of_HashTableBin_of_Int32_and_Object*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_HashTableBin_of_Int32_and_Object*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_HashTableBin_of_Int32_and_Object__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_HashTableBin_of_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_HashTableBin_of_Int32_and_Object__type_name( SXCRef context )
{
  return str205.value;
}

SlagObject* GenericHashTable_of_Int32_and_Object__init( SXCRef context )
{
  GenericHashTable_of_Int32_and_Object__init__Int32_Real64(context,16,sxc_int64_as_real64(0x4008000000000000LL));
  return context;
}

static SlagObject* GenericHashTable_of_Int32_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size_4648 )
{
  SlagInt32 local_2__local_4558;
  SlagInt32 local_3__last4559;

  ((ClassGenericHashTable_of_Int32_and_Object*)context)->property_average_bin_size = local_1_average_bin_size_4648;
  local_0_num_bins = BitwiseOperations__rounded_up_to_power_of_two__Int32(sxc_singletons[15],local_0_num_bins);
  ((ClassGenericHashTable_of_Int32_and_Object*)context)->property_hash_mask = (local_0_num_bins-1);
  ((ClassGenericHashTable_of_Int32_and_Object*)context)->property_max_entries = (((SlagReal64)local_0_num_bins)*((ClassGenericHashTable_of_Int32_and_Object*)context)->property_average_bin_size);
  sxc_write_ref( &(((ClassGenericHashTable_of_Int32_and_Object*)context)->property_bins), ArrayList_of_HashTableBin_of_Int32_and_Object__init(type_ClassArrayList_of_HashTableBin_of_Int32_and_Object.create()) );
  local_2__local_4558 = 1;
  local_3__last4559 = local_0_num_bins;
  while ((local_2__local_4558 <= local_3__last4559))
  {
    ArrayList_of_Object__add__Object(((ClassGenericHashTable_of_Int32_and_Object*)context)->property_bins,HashTableBin_of_Int32_and_Object__init__Int32(type_ClassHashTableBin_of_Int32_and_Object.create(),((SlagInt32)((ClassGenericHashTable_of_Int32_and_Object*)context)->property_average_bin_size)));
    ++local_2__local_4558;
  }
  return context;
}

static void GenericHashTable_of_Int32_and_Object__set__Int32_Object( SXCRef context, SlagInt32 local_0_key, SXCRef local_1_value )
{
  if ((((SlagReal64)((ClassGenericHashTable_of_Int32_and_Object*)context)->property_num_entries) == ((ClassGenericHashTable_of_Int32_and_Object*)context)->property_max_entries))
  {
    GenericHashTable_of_Int32_and_Object__expand_table(context);
  }
  if (HashTableBin_of_Int32_and_Object__add_entry__Int32_Object(GenericHashTable_of_Int32_and_Object__get_bin__Int32(context,local_0_key),local_0_key,local_1_value))
  {
    ++(((ClassGenericHashTable_of_Int32_and_Object*)context)->property_num_entries);
  }
}

static void GenericHashTable_of_Int32_and_Object__set__Mapping_of_Int32_and_Object( SXCRef context, SXCRef local_0_entry )
{
  if ((((SlagReal64)((ClassGenericHashTable_of_Int32_and_Object*)context)->property_num_entries) == ((ClassGenericHashTable_of_Int32_and_Object*)context)->property_max_entries))
  {
    GenericHashTable_of_Int32_and_Object__expand_table(context);
  }
  if (HashTableBin_of_Int32_and_Object__add_entry__Mapping_of_Int32_and_Object(GenericHashTable_of_Int32_and_Object__get_bin__Int32(context,((ClassMapping_of_Int32_and_Object*)local_0_entry)->property_key),local_0_entry))
  {
    ++(((ClassGenericHashTable_of_Int32_and_Object*)context)->property_num_entries);
  }
}

static SlagObject* GenericHashTable_of_Int32_and_Object__get__Int32( SXCRef context, SlagInt32 local_0_key )
{
  SXCRef local_1_entry;
  SXCRef local_2_null_result;

  local_1_entry = HashTableBin_of_Int32_and_Object__find_entry__Int32(GenericHashTable_of_Int32_and_Object__get_bin__Int32(context,local_0_key),local_0_key);
  if ((local_1_entry == NULL))
  {
    local_2_null_result = NULL;
    return local_2_null_result;
  }
  return ((ClassMapping_of_Int32_and_Object*)local_1_entry)->property_value;
}

static SlagObject* GenericHashTable_of_Int32_and_Object__find__Int32( SXCRef context, SlagInt32 local_0_key )
{
  return HashTableBin_of_Int32_and_Object__find_entry__Int32(GenericHashTable_of_Int32_and_Object__get_bin__Int32(context,local_0_key),local_0_key);
}

static SlagObject* GenericHashTable_of_Int32_and_Object__get_bin__Int32( SXCRef context, SlagInt32 local_0_key )
{
  return ((ClassHashTableBin_of_Int32_and_Object*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Int32_and_Object*)context)->property_bins))->property_data)->data))[(Global__hash_code__Int32(sxc_singletons[21],local_0_key)&((ClassGenericHashTable_of_Int32_and_Object*)context)->property_hash_mask)]));
}

static void GenericHashTable_of_Int32_and_Object__add__GenericHashTable_of_Int32_and_Object( SXCRef context, SXCRef local_0_other )
{
  SXCRef local_1__reader4568;
  SXCRef local_2_bin;
  SXCRef local_3__reader4569;
  SXCRef local_4_entry;

  local_1__reader4568 = ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader(((ClassGenericHashTable_of_Int32_and_Object*)local_0_other)->property_bins);
  while (ArrayReader_of_HashTableBin_of_Int32_and_Object__has_another(local_1__reader4568))
  {
    local_2_bin = ArrayReader_of_HashTableBin_of_Int32_and_Object__read(local_1__reader4568);
    local_3__reader4569 = ArrayList_of_Mapping_of_Int32_and_Object__create_reader(((ClassHashTableBin_of_Int32_and_Object*)local_2_bin)->property_entries);
    while (ArrayReader_of_Mapping_of_Int32_and_Object__has_another(local_3__reader4569))
    {
      local_4_entry = ArrayReader_of_Mapping_of_Int32_and_Object__read(local_3__reader4569);
      GenericHashTable_of_Int32_and_Object__set__Int32_Object(context,((ClassMapping_of_Int32_and_Object*)local_4_entry)->property_key,((ClassMapping_of_Int32_and_Object*)local_4_entry)->property_value);
    }
  }
}

static void GenericHashTable_of_Int32_and_Object__expand_table( SXCRef context )
{
  SXCRef local_0_new_table;
  SXCRef local_1__reader4571;
  SXCRef local_2_bin;
  SXCRef local_3__reader4572;
  SXCRef local_4_entry;

  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Int32_and_Object*)context)->property_bins))->property_count >= ((ClassGenericHashTable_of_Int32_and_Object*)context)->property_max_bins))
  {
    return;
  }
  local_0_new_table = GenericHashTable_of_Int32_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Int32_and_Object.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Int32_and_Object*)context)->property_bins))->property_count<<1),((ClassGenericHashTable_of_Int32_and_Object*)context)->property_average_bin_size);
  local_1__reader4571 = ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader(((ClassGenericHashTable_of_Int32_and_Object*)context)->property_bins);
  while (ArrayReader_of_HashTableBin_of_Int32_and_Object__has_another(local_1__reader4571))
  {
    local_2_bin = ArrayReader_of_HashTableBin_of_Int32_and_Object__read(local_1__reader4571);
    local_3__reader4572 = ArrayList_of_Mapping_of_Int32_and_Object__create_reader(((ClassHashTableBin_of_Int32_and_Object*)local_2_bin)->property_entries);
    while (ArrayReader_of_Mapping_of_Int32_and_Object__has_another(local_3__reader4572))
    {
      local_4_entry = ArrayReader_of_Mapping_of_Int32_and_Object__read(local_3__reader4572);
      GenericHashTable_of_Int32_and_Object__set__Mapping_of_Int32_and_Object(local_0_new_table,local_4_entry);
    }
  }
  sxc_write_ref( &(((ClassGenericHashTable_of_Int32_and_Object*)context)->property_bins), ((ClassGenericHashTable_of_Int32_and_Object*)local_0_new_table)->property_bins );
  ((ClassGenericHashTable_of_Int32_and_Object*)context)->property_max_entries = ((ClassGenericHashTable_of_Int32_and_Object*)local_0_new_table)->property_max_entries;
  ((ClassGenericHashTable_of_Int32_and_Object*)context)->property_hash_mask = ((ClassGenericHashTable_of_Int32_and_Object*)local_0_new_table)->property_hash_mask;
}

SlagObject* GenericHashTable_of_Int32_and_Object__to_String( SXCRef context )
{
  return CallFn____Object(47,((AspectReader_of_Mapping_of_Int32_and_Object*)HashTableMappingReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object(type_ClassHashTableMappingReader_of_Int32_and_Object.create(),ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader(((ClassGenericHashTable_of_Int32_and_Object*)context)->property_bins))));
}

static SlagObject* GenericHashTable_of_Int32_and_Object__values( SXCRef context )
{
  return HashTableValueReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object(type_ClassHashTableValueReader_of_Int32_and_Object.create(),ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader(((ClassGenericHashTable_of_Int32_and_Object*)context)->property_bins));
}

void GenericHashTable_of_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassGenericHashTable_of_Int32_and_Object*)context)->property_num_entries = 0;
  ((ClassGenericHashTable_of_Int32_and_Object*)context)->property_max_bins = 512;
}

SlagObject* GenericHashTable_of_Int32_and_Object__type_name( SXCRef context )
{
  return str208.value;
}

SlagObject* HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object*)context)->property_data), GenericHashTable_of_Int32_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Int32_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object*)context)->property_data), GenericHashTable_of_Int32_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Int32_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init__Int32_Real64(type_ClassHashTable_of_Int32_and_Cmd.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Int32_and_Object*)((ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Int32_and_Object*)((ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Int32_and_Object__add__GenericHashTable_of_Int32_and_Object(((ClassHashTable_of_Int32_and_Cmd*)local_0_new_table)->property_data,((ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Int32_and_Object*)HashTableMappingReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object(type_ClassHashTableMappingReader_of_Int32_and_Object.create(),ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader(((ClassGenericHashTable_of_Int32_and_Object*)((ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object*)context)->property_data)->property_bins)))));
}

static SlagObject* HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__create_reader( SXCRef context )
{
  return ((AspectReader_of_Cmd*)CoerceReader_of_Cmd__init__Reader_of_Object(type_ClassCoerceReader_of_Cmd.create(),((AspectReader_of_Object*)HashTableValueReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object(type_ClassHashTableValueReader_of_Int32_and_Object.create(),ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader(((ClassGenericHashTable_of_Int32_and_Object*)((ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__type_name( SXCRef context )
{
  return str1032.value;
}

void HashTable_of_Int32_and_Cmd__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_Int32_and_Cmd__type_name( SXCRef context )
{
  return str1033.value;
}

static SlagInt32 ArrayList_of_Int32__last( SXCRef context )
{
  return ((SlagInt32*)(((SlagArray*)((ClassArrayList_of_Int32*)context)->property_data)->data))[(((ClassArrayList_of_Int32*)context)->property_count-1)];
}

static SlagObject* ArrayList_of_Int32__add__Readable_of_Int32( SXCRef context, SXCRef local_0_source )
{
  SXCRef local_1__reader3306;
  SlagInt32 local_2_value;

  local_1__reader3306 = CallFn____Object(44,local_0_source);
  while (CallFn____Logical(14,local_1__reader3306))
  {
    local_2_value = CallFn____Int32(30,local_1__reader3306);
    ArrayList_of_Int32__add__Int32(context,local_2_value);
  }
  return context;
}

static SlagInt32 ArrayList_of_Int32__remove_last( SXCRef context )
{
  return ArrayList_of_Int32__remove__Int32(context,(((ClassArrayList_of_Int32*)context)->property_count-1));
}

SlagObject* ArrayList_of_Int32__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count3332;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Int32*)context)->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count3332 = ((ClassArrayList_of_Int32*)context)->property_count;
    while ((local_1_i < local_2__count3332))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32*)(((SlagArray*)((ClassArrayList_of_Int32*)context)->property_data)->data))[local_1_i],10)));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Int32__init( SXCRef context )
{
  ArrayList_of_Int32__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Int32*)context)->property_data), type_ClassArray_of_Int32.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Int32__create_reader( SXCRef context )
{
  return ArrayReader_of_Int32__init__Collection_of_Int32_Array_of_Int32_Int32_Int32(type_ClassArrayReader_of_Int32.create(),context,((ClassArrayList_of_Int32*)context)->property_data,0,((ClassArrayList_of_Int32*)context)->property_count);
}

static SlagInt32 ArrayList_of_Int32__count( SXCRef context )
{
  return ((ClassArrayList_of_Int32*)context)->property_count;
}

static SlagInt32 ArrayList_of_Int32__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Int32*)context)->property_modification_count;
}

static void ArrayList_of_Int32__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_min_capacity )
{
  SXCRef local_1_new_data;

  if ((((SlagArray*)((ClassArrayList_of_Int32*)context)->property_data)->array_count < local_0_min_capacity))
  {
    local_1_new_data = type_ClassArray_of_Int32.create(local_0_min_capacity);
    GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_1_new_data,((ClassArrayList_of_Int32*)context)->property_data,0,0,((ClassArrayList_of_Int32*)context)->property_count);
    sxc_write_ref( &(((ClassArrayList_of_Int32*)context)->property_data), local_1_new_data );
  }
}

void ArrayList_of_Int32__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Int32__ensure_capacity__Int32(context,local_0_num_items);
  if ((local_0_num_items > ((ClassArrayList_of_Int32*)context)->property_count))
  {
    ((ClassArrayList_of_Int32*)context)->property_count = local_0_num_items;
    ((ClassArrayList_of_Int32*)context)->property_modification_count = (((ClassArrayList_of_Int32*)context)->property_modification_count+1);
  }
}

SlagObject* ArrayList_of_Int32__add__Int32( SXCRef context, SlagInt32 local_0_value )
{
  if ((((ClassArrayList_of_Int32*)context)->property_count == ((SlagArray*)((ClassArrayList_of_Int32*)context)->property_data)->array_count))
  {
    if ((((ClassArrayList_of_Int32*)context)->property_count == 0))
    {
      ArrayList_of_Int32__ensure_capacity__Int32(context,1);
    }
    else
    {
      ArrayList_of_Int32__ensure_capacity__Int32(context,(((SlagArray*)((ClassArrayList_of_Int32*)context)->property_data)->array_count<<1));
    }
  }
  ((SlagInt32*)(((SlagArray*)((ClassArrayList_of_Int32*)context)->property_data)->data))[((ClassArrayList_of_Int32*)context)->property_count] = local_0_value;
  ++(((ClassArrayList_of_Int32*)context)->property_count);
  ((ClassArrayList_of_Int32*)context)->property_modification_count = (((ClassArrayList_of_Int32*)context)->property_modification_count+1);
  return context;
}

static SlagInt32 ArrayList_of_Int32__remove__Int32( SXCRef context, SlagInt32 local_0_index )
{
  SlagInt32 local_1_result;

  if ((local_0_index >= ((ClassArrayList_of_Int32*)context)->property_count))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str82.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_index,10))) );
  }
  local_1_result = ((SlagInt32*)(((SlagArray*)((ClassArrayList_of_Int32*)context)->property_data)->data))[local_0_index];
  --(((ClassArrayList_of_Int32*)context)->property_count);
  ((ClassArrayList_of_Int32*)context)->property_modification_count = (((ClassArrayList_of_Int32*)context)->property_modification_count+1);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Int32*)context)->property_data,((ClassArrayList_of_Int32*)context)->property_data,(local_0_index+1),local_0_index,(((ClassArrayList_of_Int32*)context)->property_count-local_0_index));
  GenericArray__clear__Int32_Int32(((ClassArrayList_of_Int32*)context)->property_data,((ClassArrayList_of_Int32*)context)->property_count,((ClassArrayList_of_Int32*)context)->property_count);
  return local_1_result;
}

static void ArrayList_of_Int32__discard_last( SXCRef context )
{
  --(((ClassArrayList_of_Int32*)context)->property_count);
  ((ClassArrayList_of_Int32*)context)->property_modification_count = (((ClassArrayList_of_Int32*)context)->property_modification_count+1);
  GenericArray__clear__Int32_Int32(((ClassArrayList_of_Int32*)context)->property_data,((ClassArrayList_of_Int32*)context)->property_count,((ClassArrayList_of_Int32*)context)->property_count);
}

static SlagObject* ArrayList_of_Int32__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),((ClassArrayList_of_Int32*)context)->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Int32*)local_0_dup)->property_data,((ClassArrayList_of_Int32*)context)->property_data,0,0,((ClassArrayList_of_Int32*)context)->property_count);
  ((ClassArrayList_of_Int32*)local_0_dup)->property_count = ((ClassArrayList_of_Int32*)context)->property_count;
  return local_0_dup;
}

void ArrayList_of_Int32__clear( SXCRef context )
{
  if ((((ClassArrayList_of_Int32*)context)->property_count > 0))
  {
    GenericArray__clear__Int32_Int32(((ClassArrayList_of_Int32*)context)->property_data,0,(((ClassArrayList_of_Int32*)context)->property_count-1));
    ((ClassArrayList_of_Int32*)context)->property_count = 0;
    ((ClassArrayList_of_Int32*)context)->property_modification_count = (((ClassArrayList_of_Int32*)context)->property_modification_count+1);
  }
}

void ArrayList_of_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Int32__type_name( SXCRef context )
{
  return str158.value;
}

static SlagObject* Context__init__TypeInfo_MethodInfo_Logical( SXCRef context, SXCRef local_0_this_type_8679, SXCRef local_1_this_method_8678, SlagLogical local_2_resolve_phase )
{
  sxc_write_ref( &(((ClassContext*)context)->property_this_type), local_0_this_type_8679 );
  sxc_write_ref( &(((ClassContext*)context)->property_this_method), local_1_this_method_8678 );
  if (local_2_resolve_phase)
  {
    sxc_write_ref( &(((ClassContext*)context)->property_local_var_table), LocalVarTable__init__MethodInfo(type_ClassLocalVarTable.create(),((ClassContext*)context)->property_this_method) );
    sxc_write_ref( &(((ClassContext*)context)->property_implicit_context), ArrayList_of_TypeInfo__init__Int32(type_ClassArrayList_of_TypeInfo.create(),2) );
    sxc_write_ref( &(((ClassContext*)context)->property_id_remap_table), HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init__Int32_Real64(type_ClassHashTable_of_Int32_and_Int32.create(),8,sxc_int64_as_real64(0x4000000000000000LL)) );
    sxc_write_ref( &(((ClassContext*)context)->property_next_iteration_injections), HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init__Int32_Real64(type_ClassHashTable_of_Int32_and_Cmd.create(),4,sxc_int64_as_real64(0x3ff0000000000000LL)) );
    sxc_write_ref( &(((ClassContext*)context)->property_foreach_fixups), ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),4) );
  }
  else
  {
    sxc_write_ref( &(((ClassContext*)context)->property_referenced_structures), HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init__Int32_Real64(type_ClassHashSet_of_Int32.create(),8,sxc_int64_as_real64(0x4000000000000000LL)) );
  }
  sxc_write_ref( &(((ClassContext*)context)->property_underlying_m), ((ClassMethodInfo*)((ClassContext*)context)->property_this_method)->property_underlying_m );
  return context;
}

static SlagObject* Context__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_context;

  local_0_new_context = Context__init__TypeInfo_MethodInfo_Logical(type_ClassContext.create(),((ClassContext*)context)->property_this_type,((ClassContext*)context)->property_this_method,false);
  sxc_write_ref( &(((ClassContext*)local_0_new_context)->property_local_var_table), ((ClassContext*)context)->property_local_var_table );
  sxc_write_ref( &(((ClassContext*)local_0_new_context)->property_implicit_context), ((ClassContext*)context)->property_implicit_context );
  sxc_write_ref( &(((ClassContext*)local_0_new_context)->property_this_type), ((ClassContext*)context)->property_this_type );
  sxc_write_ref( &(((ClassContext*)local_0_new_context)->property_this_method), ((ClassContext*)context)->property_this_method );
  sxc_write_ref( &(((ClassContext*)local_0_new_context)->property_underlying_m), ((ClassContext*)context)->property_underlying_m );
  sxc_write_ref( &(((ClassContext*)local_0_new_context)->property_id_remap_table), ((ClassContext*)context)->property_id_remap_table );
  sxc_write_ref( &(((ClassContext*)local_0_new_context)->property_referenced_structures), ((ClassContext*)context)->property_referenced_structures );
  sxc_write_ref( &(((ClassContext*)local_0_new_context)->property_next_iteration_injections), ((ClassContext*)context)->property_next_iteration_injections );
  sxc_write_ref( &(((ClassContext*)local_0_new_context)->property_foreach_fixups), ((ClassContext*)context)->property_foreach_fixups );
  return local_0_new_context;
}

void Context__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Context__type_name( SXCRef context )
{
  return str1035.value;
}

static SlagObject* Array_of_SlagError__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_SlagError.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_SlagError__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_SlagError__type_name( SXCRef context )
{
  return str912.value;
}

static void CPPWriter__write__String( SXCRef context, SXCRef local_0_output_filename_6424 )
{
  SXCRef local_1__reader1038;
  SXCRef local_2_m;

  sxc_write_ref( &(((ClassCPPWriter*)context)->property_output_filename), local_0_output_filename_6424 );
  sxc_write_ref( &(((ClassCPPWriter*)context)->property_output_filename), String__before_first__String(((ClassCPPWriter*)context)->property_output_filename,str1491.value) );
  sxc_write_ref( &(((ClassCPPWriter*)context)->property_output_filename), String__opADD__String(((ClassCPPWriter*)context)->property_output_filename,str1492.value) );
  sxc_write_ref( &(((ClassCPPWriter*)context)->property_base_name), String__after_last__Char(String__after_last__Char(((ClassCPPWriter*)context)->property_output_filename,((SlagChar)47)),((SlagChar)92)) );
  CPPWriter__assign_cross_compile_names(context);
  local_1__reader1038 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_1__reader1038))
  {
    local_2_m = ArrayReader_of_MethodInfo__read(local_1__reader1038);
    StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,String__from_first__Char(((ClassMethodInfo*)local_2_m)->property_signature,((SlagChar)40)));
  }
  if (!((ClassSlagCompiler*)sxc_singletons[14])->property_quiet)
  {
    Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1366.value),((ClassCPPWriter*)context)->property_output_filename),str1502.value)));
  }
  sxc_write_ref( &(((ClassCPPWriter*)context)->property_out), ((ClassTextWriter*)FileWriter__init__String_Logical(type_ClassFileWriter.create(),((ClassFile*)File__init__String(type_ClassFile.create(),String__opADD__String(((ClassCPPWriter*)context)->property_output_filename,str1502.value)))->property_filepath,false)) );
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1503.value),String__to_uppercase(((ClassCPPWriter*)context)->property_base_name)),str1504.value)));
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1505.value),String__to_uppercase(((ClassCPPWriter*)context)->property_base_name)),str1504.value)));
  CPPWriter__print_header__String(context,str1506.value);
  CPPWriter__println(context);
  CPPWriter__println__String(context,str1510.value);
  CPPWriter__println(context);
  CPPWriter__print_compound_defs(context);
  CPPWriter__print_type_defs(context);
  CPPWriter__print_method_prototypes__Logical(context,true);
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1536.value),String__to_uppercase(((ClassCPPWriter*)context)->property_base_name)),str1504.value)));
  CallFn__(20,((ClassCPPWriter*)context)->property_out);
  if (!((ClassSlagCompiler*)sxc_singletons[14])->property_quiet)
  {
    Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1366.value),((ClassCPPWriter*)context)->property_output_filename),str1491.value)));
  }
  sxc_write_ref( &(((ClassCPPWriter*)context)->property_out), ((ClassTextWriter*)FileWriter__init__String_Logical(type_ClassFileWriter.create(),((ClassFile*)File__init__String(type_ClassFile.create(),String__opADD__String(((ClassCPPWriter*)context)->property_output_filename,str1491.value)))->property_filepath,false)) );
  CPPWriter__print_header__String(context,str434.value);
  CPPWriter__println(context);
  CPPWriter__println__String(context,str1510.value);
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1537.value),((ClassCPPWriter*)context)->property_base_name),str1538.value)));
  CPPWriter__println(context);
  CPPWriter__print_identifiers(context);
  CPPWriter__print_type_info_defs(context);
  CPPWriter__print_property_info(context);
  CPPWriter__print_method_prototypes__Logical(context,false);
  CPPWriter__print_literal_strings(context);
  CPPWriter__print_function_typedefs(context);
  CPPWriter__print_method_defs(context);
  CPPWriter__print_base_type_index_table(context);
  CPPWriter__print_method_pointers(context);
  CPPWriter__print_method_info(context);
  CPPWriter__print_dispatch_table(context);
  CPPWriter__print_configuration_function(context);
  CPPWriter__print_miscellaneous(context);
  CallFn__(20,((ClassCPPWriter*)context)->property_out);
}

static void CPPWriter__do_indent( SXCRef context )
{
  while ((((ClassCPPWriter*)context)->property_col <= ((ClassCPPWriter*)context)->property_indent))
  {
    CallFn__Char(46,((ClassCPPWriter*)context)->property_out,((SlagChar)32));
    ++(((ClassCPPWriter*)context)->property_col);
  }
}

static void CPPWriter__print__Char( SXCRef context, SlagChar local_0_ch )
{
  CPPWriter__do_indent(context);
  CallFn__Char(46,((ClassCPPWriter*)context)->property_out,local_0_ch);
  ++(((ClassCPPWriter*)context)->property_col);
}

static void CPPWriter__print__String( SXCRef context, SXCRef local_0_st )
{
  SXCRef local_1__reader1042;
  SlagChar local_2_ch;

  CPPWriter__do_indent(context);
  local_1__reader1042 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_st,0,-1));
  while (CallFn____Logical(14,local_1__reader1042))
  {
    local_2_ch = CallFn____Char(29,local_1__reader1042);
    CPPWriter__print__Char(context,local_2_ch);
  }
}

static void CPPWriter__print__Int32( SXCRef context, SlagInt32 local_0_n )
{
  CPPWriter__do_indent(context);
  CallFn__String(8,((ClassCPPWriter*)context)->property_out,((ClassString*)Global__to_String__Int64_Int32(sxc_singletons[21],((SlagInt64)((SlagInt32)local_0_n)),10)));
  ((ClassCPPWriter*)context)->property_col += (((SlagString*)((ClassString*)String__opADD__String(str39.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_n,10)))))->count);
}

static void CPPWriter__println__String( SXCRef context, SXCRef local_0_st )
{
  CPPWriter__print__String(context,local_0_st);
  CPPWriter__println(context);
}

static void CPPWriter__println__Char( SXCRef context, SlagChar local_0_ch )
{
  CPPWriter__print__Char(context,local_0_ch);
  CPPWriter__println(context);
}

static void CPPWriter__println( SXCRef context )
{
  CallFn__Char(46,((ClassCPPWriter*)context)->property_out,((SlagChar)10));
  ((ClassCPPWriter*)context)->property_col = 1;
  ++(((ClassCPPWriter*)context)->property_lines);
}

static void CPPWriter__print_header__String( SXCRef context, SXCRef local_0_extension )
{
  SlagInt32 local_1__local_1044;
  SlagInt32 local_2__last1045;
  SlagInt32 local_3__local_1046;
  SlagInt32 local_4__last1047;

  CPPWriter__print__String(context,str1507.value);
  local_1__local_1044 = 1;
  local_2__last1045 = 77;
  while ((local_1__local_1044 <= local_2__last1045))
  {
    CPPWriter__print__Char(context,((SlagChar)61));
    ++local_1__local_1044;
  }
  CPPWriter__println(context);
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1508.value),((ClassCPPWriter*)context)->property_base_name),str38.value),local_0_extension)));
  CPPWriter__println__String(context,String__opADD__String(str1509.value,Global__to_String__Object(sxc_singletons[21],Date__init(type_ClassDate.create()))));
  CPPWriter__print__String(context,str1507.value);
  local_3__local_1046 = 1;
  local_4__last1047 = 77;
  while ((local_3__local_1046 <= local_4__last1047))
  {
    CPPWriter__print__Char(context,((SlagChar)61));
    ++local_3__local_1046;
  }
  CPPWriter__println(context);
}

static void CPPWriter__assign_cross_compile_names( SXCRef context )
{
  SXCRef local_0__reader1048;
  SXCRef local_1_type;
  SXCRef local_2__reader1049;
  SXCRef local_3_m;

  local_0__reader1048 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader1048))
  {
    local_1_type = ArrayReader_of_TypeInfo__read(local_0__reader1048);
    TypeInfo__x_name(local_1_type);
  }
  local_2__reader1049 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_2__reader1049))
  {
    local_3_m = ArrayReader_of_MethodInfo__read(local_2__reader1049);
    MethodInfo__x_name(local_3_m);
  }
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str580.value,NULL))->property_x_name), str1495.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str581.value,NULL))->property_x_name), str1496.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str564.value,NULL))->property_x_name), str1497.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str577.value,NULL))->property_x_name), str1498.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str578.value,NULL))->property_x_name), str1499.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str579.value,NULL))->property_x_name), str1500.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str582.value,NULL))->property_x_name), str1501.value );
}

static void CPPWriter__print_compound_defs( SXCRef context )
{
  SXCRef local_0__reader1050;
  SXCRef local_1_type;
  SXCRef local_2__reader1052;
  SXCRef local_3_p;
  SlagLogical local_4_first;
  SXCRef local_5__reader1056;
  SXCRef local_6_p;
  SlagLogical local_7_first;
  SXCRef local_8__reader1059;
  SXCRef local_9_p;
  SXCRef local_10__reader1064;
  SXCRef local_11_p;

  local_0__reader1050 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader1050))
  {
    local_1_type = ArrayReader_of_TypeInfo__read(local_0__reader1050);
    if (!((((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
    {
      goto next_10331;
    }
    CPPWriter__println__String(context,String__opADD__String(str1511.value,TypeInfo__x_name(local_1_type)));
    CPPWriter__println__String(context,str247.value);
    ((ClassCPPWriter*)context)->property_indent += 2;
    local_2__reader1052 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_1_type)->property_properties);
    while (CallFn____Logical(14,local_2__reader1052))
    {
      local_3_p = CallFn____Object(45,local_2__reader1052);
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_3_p)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
      {
        if (TypeInfo__is_real(((ClassPropertyInfo*)local_3_p)->property_type))
        {
          CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1512.value),PropertyInfo__x_name(local_3_p)),str396.value)));
        }
        else
        {
          CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1513.value),PropertyInfo__x_name(local_3_p)),str396.value)));
        }
      }
      else
      {
        CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassPropertyInfo*)local_3_p)->property_type)),str607.value),PropertyInfo__x_name(local_3_p)),str396.value)));
      }
    }
    CPPWriter__println(context);
    CPPWriter__print__String(context,String__opADD__String(TypeInfo__x_name(local_1_type),str1009.value));
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_1_type)->property_properties))->property_count != 0))
    {
      CPPWriter__println(context);
      CPPWriter__print__String(context,str1514.value);
      local_4_first = true;
      local_5__reader1056 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_1_type)->property_properties);
      while (CallFn____Logical(14,local_5__reader1056))
      {
        local_6_p = CallFn____Object(45,local_5__reader1056);
        if (local_4_first)
        {
          local_4_first = false;
        }
        else
        {
          CPPWriter__print__String(context,str634.value);
        }
        CPPWriter__print__String(context,PropertyInfo__x_name(local_6_p));
        CPPWriter__print__Char(context,((SlagChar)40));
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_6_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          CPPWriter__print__String(context,str1515.value);
        }
        else if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_6_p)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
        {
          CPPWriter__print__String(context,str214.value);
        }
        else
        {
          CPPWriter__print__String(context,String__opADD__String(TypeInfo__x_name(((ClassPropertyInfo*)local_6_p)->property_type),str1009.value));
        }
        CPPWriter__print__Char(context,((SlagChar)41));
      }
    }
    CPPWriter__println__String(context,str1516.value);
    CPPWriter__println(context);
    CPPWriter__print__String(context,String__opADD__String(TypeInfo__x_name(local_1_type),str1517.value));
    local_7_first = true;
    local_8__reader1059 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_1_type)->property_properties);
    while (CallFn____Logical(14,local_8__reader1059))
    {
      local_9_p = CallFn____Object(45,local_8__reader1059);
      if (local_7_first)
      {
        local_7_first = false;
      }
      else
      {
        CPPWriter__print__String(context,str634.value);
      }
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_9_p)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
      {
        if (TypeInfo__is_real(((ClassPropertyInfo*)local_9_p)->property_type))
        {
          CPPWriter__print__String(context,String__opADD__String(str1512.value,PropertyInfo__x_name(local_9_p)));
        }
        else
        {
          CPPWriter__print__String(context,String__opADD__String(str1518.value,PropertyInfo__x_name(local_9_p)));
        }
      }
      else
      {
        CPPWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassPropertyInfo*)local_9_p)->property_type)),str607.value),PropertyInfo__x_name(local_9_p))));
      }
    }
    CPPWriter__print__String(context,str635.value);
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_1_type)->property_properties))->property_count != 0))
    {
      CPPWriter__print__String(context,str1309.value);
      local_7_first = true;
      local_10__reader1064 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_1_type)->property_properties);
      while (CallFn____Logical(14,local_10__reader1064))
      {
        local_11_p = CallFn____Object(45,local_10__reader1064);
        if (local_7_first)
        {
          local_7_first = false;
        }
        else
        {
          CPPWriter__print__String(context,str634.value);
        }
        CPPWriter__print__String(context,String__opADD__String(PropertyInfo__x_name(local_11_p),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),PropertyInfo__x_name(local_11_p)),str62.value))));
      }
    }
    CPPWriter__println__String(context,str1516.value);
    CPPWriter__println(context);
    CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1519.value),TypeInfo__x_name(local_1_type)),str1520.value)));
    CPPWriter__println__String(context,str247.value);
    CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1521.value),TypeInfo__x_name(local_1_type)),str1522.value)));
    CPPWriter__println__String(context,str397.value);
    CPPWriter__println(context);
    CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1523.value),TypeInfo__x_name(local_1_type)),str1520.value)));
    CPPWriter__println__Char(context,((SlagChar)123));
    CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1524.value),TypeInfo__x_name(local_1_type)),str1525.value)));
    CPPWriter__println__Char(context,((SlagChar)125));
    CPPWriter__println(context);
    ((ClassCPPWriter*)context)->property_indent -= 2;
    CPPWriter__println__String(context,str1526.value);
    CPPWriter__println(context);
    CPPWriter__println(context);
    next_10331:;
  }
  end_10331:;
}

static void CPPWriter__print_type_defs( SXCRef context )
{
  SXCRef local_0__reader1066;
  SXCRef local_1_type;
  SlagLogical local_2_new_property;
  SXCRef local_3__reader1072;
  SXCRef local_4_p;

  local_0__reader1066 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader1066))
  {
    local_1_type = ArrayReader_of_TypeInfo__read(local_0__reader1066);
    if ((local_1_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_null))
    {
      goto next_10347;
    }
    if (!((((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
    {
      goto next_10347;
    }
    CPPWriter__print__String(context,String__opADD__String(str1511.value,TypeInfo__x_name(local_1_type)));
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      if (((local_1_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_object) || ((((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0)))
      {
        CPPWriter__print__String(context,str1527.value);
      }
      else
      {
        CPPWriter__print__String(context,String__opADD__String(str1309.value,TypeInfo__x_name(TypeInfo__base_class(local_1_type))));
      }
    }
    else
    {
      CPPWriter__print__String(context,str1527.value);
    }
    CPPWriter__println(context);
    CPPWriter__println__String(context,str247.value);
    ((ClassCPPWriter*)context)->property_indent += 2;
    if (!((((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      local_2_new_property = false;
      local_3__reader1072 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_1_type)->property_properties);
      while (CallFn____Logical(14,local_3__reader1072))
      {
        local_4_p = CallFn____Object(45,local_3__reader1072);
        if (((TypeInfo__base_class(local_1_type) == NULL) || !GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_PropertyInfo*)((ClassTypeInfo*)TypeInfo__base_class(local_1_type))->property_properties_by_name)->property_data,((ClassPropertyInfo*)local_4_p)->property_name)))
        {
          if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_4_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1528.value),PropertyInfo__x_name(local_4_p)),str396.value)));
          }
          else
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassPropertyInfo*)local_4_p)->property_type)),str607.value),PropertyInfo__x_name(local_4_p)),str396.value)));
          }
          local_2_new_property = true;
        }
      }
    }
    ((ClassCPPWriter*)context)->property_indent -= 2;
    CPPWriter__println__String(context,str1526.value);
    CPPWriter__println(context);
    CPPWriter__println(context);
    next_10347:;
  }
  end_10347:;
  CPPWriter__println(context);
}

static void CPPWriter__print_identifiers( SXCRef context )
{
  SlagLogical local_0_first;
  SXCRef local_1__reader1075;
  SXCRef local_2_id;
  SXCRef local_3__reader1077;
  SlagChar local_4_ch;
  SlagChar local_5_which_1078;

  CPPWriter__println__String(context,str1539.value);
  CPPWriter__println__String(context,str247.value);
  ((ClassCPPWriter*)context)->property_indent += 2;
  local_0_first = true;
  local_1__reader1075 = ((AspectReader_of_String*)ArrayList_of_String__create_reader(((ClassStringTable*)((ClassTypeManager*)sxc_singletons[7])->property_identifiers)->property_strings));
  while (CallFn____Logical(14,local_1__reader1075))
  {
    local_2_id = CallFn____Object(45,local_1__reader1075);
    if (local_0_first)
    {
      local_0_first = false;
    }
    else
    {
      CPPWriter__println__String(context,str395.value);
    }
    CPPWriter__print__Char(context,((SlagChar)34));
    local_3__reader1077 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_2_id,0,-1));
    while (CallFn____Logical(14,local_3__reader1077))
    {
      local_4_ch = CallFn____Char(29,local_3__reader1077);
      local_5_which_1078 = local_4_ch;
      if ((((SlagInt32)local_5_which_1078) == 34))
      {
        CPPWriter__print__String(context,str1540.value);
      }
      else if ((((SlagInt32)local_5_which_1078) == 92))
      {
        CPPWriter__print__String(context,str1541.value);
      }
      else if ((((SlagInt32)local_5_which_1078) == 10))
      {
        CPPWriter__print__String(context,str1542.value);
      }
      else
      {
        if (((((SlagInt32)local_4_ch) >= 32) && (((SlagInt32)local_4_ch) <= 126)))
        {
          CPPWriter__print__Char(context,local_4_ch);
        }
        else
        {
          CPPWriter__print__String(context,String__opADD__String(str1543.value,String__rightmost__Int32(Global__to_String__Char_Int32(sxc_singletons[21],local_4_ch,8),3)));
        }
      }
    }
    CPPWriter__print__Char(context,((SlagChar)34));
  }
  CPPWriter__println(context);
  ((ClassCPPWriter*)context)->property_indent -= 2;
  CPPWriter__println__String(context,str1526.value);
  CPPWriter__println(context);
  CPPWriter__println(context);
}

static void CPPWriter__print_property_info( SXCRef context )
{
  SlagLogical local_0_first;
  SXCRef local_1__reader1080;
  SXCRef local_2_type;
  SlagLogical local_3_first_p;
  SXCRef local_4__reader1084;
  SXCRef local_5_p;

  CPPWriter__println__String(context,str1555.value);
  CPPWriter__println__String(context,str247.value);
  ((ClassCPPWriter*)context)->property_indent += 2;
  local_0_first = true;
  local_1__reader1080 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_1__reader1080))
  {
    local_2_type = ArrayReader_of_TypeInfo__read(local_1__reader1080);
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      goto next_10380;
    }
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_2_type)->property_properties))->property_count != 0))
    {
      if (local_0_first)
      {
        local_0_first = false;
      }
      else
      {
        CPPWriter__println__String(context,str395.value);
      }
      local_3_first_p = true;
      local_4__reader1084 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_properties);
      while (CallFn____Logical(14,local_4__reader1084))
      {
        local_5_p = CallFn____Object(45,local_4__reader1084);
        if (local_3_first_p)
        {
          local_3_first_p = false;
        }
        else
        {
          CPPWriter__print__String(context,str395.value);
        }
        CPPWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassTypeInfo*)((ClassPropertyInfo*)local_5_p)->property_type)->property_index,10))),str395.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,((ClassPropertyInfo*)local_5_p)->property_name),10)))));
      }
    }
    next_10380:;
  }
  end_10380:;
  CPPWriter__println(context);
  ((ClassCPPWriter*)context)->property_indent -= 2;
  CPPWriter__println__String(context,str1526.value);
  CPPWriter__println(context);
  CPPWriter__println(context);
}

static void CPPWriter__print_type_info_defs( SXCRef context )
{
  SlagInt32 local_0_num_singletons;
  SXCRef local_1__reader1086;
  SXCRef local_2_type;
  SXCRef local_3__reader1088;
  SXCRef local_4_type;
  SlagInt32 local_5_reference_property_count;
  SXCRef local_6__reader1090;
  SXCRef local_7_p;

  local_0_num_singletons = 0;
  local_1__reader1086 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_1__reader1086))
  {
    local_2_type = ArrayReader_of_TypeInfo__read(local_1__reader1086);
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
    {
      ++local_0_num_singletons;
    }
  }
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1544.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeManager*)sxc_singletons[7])->property_type_list))->property_count,10))),str1545.value)));
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1546.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeManager*)sxc_singletons[7])->property_type_list))->property_count,10))),str396.value)));
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1547.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_num_singletons,10))),str1545.value)));
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1548.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_num_singletons,10))),str396.value)));
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1549.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeManager*)sxc_singletons[7])->property_method_list))->property_count,10))),str1550.value)));
  CPPWriter__println(context);
  local_3__reader1088 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_3__reader1088))
  {
    local_4_type = ArrayReader_of_TypeInfo__read(local_3__reader1088);
    if ((local_4_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_null))
    {
      goto next_10376;
    }
    local_5_reference_property_count = 0;
    local_6__reader1090 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_4_type)->property_properties);
    while (CallFn____Logical(14,local_6__reader1090))
    {
      local_7_p = CallFn____Object(45,local_6__reader1090);
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_7_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        ++local_5_reference_property_count;
      }
    }
    CPPWriter__print__String(context,String__opADD__String(str1551.value,TypeInfo__x_name(local_4_type)));
    CPPWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,((ClassTypeInfo*)local_4_type)->property_name),10))),str395.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassQualifiers*)((ClassTypeInfo*)local_4_type)->property_qualifiers)->property_flags,10))),str395.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassTypeInfo*)local_4_type)->property_index,10))),str395.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassTypeInfo*)local_4_type)->property_singleton_index,10))),str395.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_4_type)->property_flat_base_types))->property_count,10))),str1552.value),TypeInfo__x_name(local_4_type)),str1553.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_5_reference_property_count,10))),str1554.value)));
    CPPWriter__println(context);
    next_10376:;
  }
  end_10376:;
  CPPWriter__println(context);
}

static void CPPWriter__print_base_type_index_table( SXCRef context )
{
  SlagLogical local_0_first;
  SlagInt32 local_1_count;
  SXCRef local_2__reader1092;
  SXCRef local_3_type;
  SXCRef local_4__reader1094;
  SXCRef local_5_base_type;

  CPPWriter__println__String(context,str1737.value);
  CPPWriter__println__String(context,str247.value);
  ((ClassCPPWriter*)context)->property_indent += 2;
  local_0_first = true;
  local_1_count = 0;
  local_2__reader1092 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_2__reader1092))
  {
    local_3_type = ArrayReader_of_TypeInfo__read(local_2__reader1092);
    if ((local_3_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_null))
    {
      goto next_10502;
    }
    local_4__reader1094 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_flat_base_types);
    while (ArrayReader_of_TypeInfo__has_another(local_4__reader1094))
    {
      local_5_base_type = ArrayReader_of_TypeInfo__read(local_4__reader1094);
      if (local_0_first)
      {
        local_0_first = false;
      }
      else
      {
        CPPWriter__print__Char(context,((SlagChar)44));
      }
      if ((local_1_count == 16))
      {
        CPPWriter__println(context);
        local_1_count = 0;
      }
      CPPWriter__print__Int32(context,((ClassTypeInfo*)local_5_base_type)->property_index);
      ++local_1_count;
    }
    next_10502:;
  }
  end_10502:;
  CPPWriter__println(context);
  ((ClassCPPWriter*)context)->property_indent -= 2;
  CPPWriter__println__String(context,str1526.value);
  CPPWriter__println(context);
}

static void CPPWriter__print_method_pointers( SXCRef context )
{
  SlagLogical local_0_first;
  SXCRef local_1__reader1097;
  SXCRef local_2_m;
  SXCRef local_3__reader1104;
  SXCRef local_4_p;

  CPPWriter__println__String(context,str1738.value);
  CPPWriter__println__String(context,str247.value);
  ((ClassCPPWriter*)context)->property_indent += 2;
  local_0_first = true;
  local_1__reader1097 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_1__reader1097))
  {
    local_2_m = ArrayReader_of_MethodInfo__read(local_1__reader1097);
    if (local_0_first)
    {
      local_0_first = false;
    }
    else
    {
      CPPWriter__println__Char(context,((SlagChar)44));
    }
    if (((((((ClassQualifiers*)((ClassMethodInfo*)local_2_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0) || ((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_2_m)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0)) || (((ClassMethodInfo*)local_2_m)->property_type_context == ((ClassTypeManager*)sxc_singletons[7])->property_type_null)))
    {
      CPPWriter__print__String(context,str1515.value);
      goto next_10507;
    }
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_2_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
    {
      CPPWriter__print__String(context,str1739.value);
      if ((((ClassMethodInfo*)local_2_m)->property_return_type != NULL))
      {
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_2_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          CPPWriter__print__String(context,str1562.value);
        }
        else
        {
          CPPWriter__print__String(context,TypeInfo__x_name(((ClassMethodInfo*)local_2_m)->property_return_type));
        }
      }
      else
      {
        if (String__opEQ__String(((ClassMethodInfo*)local_2_m)->property_name,str667.value))
        {
          CPPWriter__print__String(context,str1562.value);
        }
        else
        {
          CPPWriter__print__String(context,str1563.value);
        }
      }
      CPPWriter__print__String(context,str1740.value);
      local_3__reader1104 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_2_m)->property_parameters);
      while (CallFn____Logical(14,local_3__reader1104))
      {
        local_4_p = CallFn____Object(45,local_3__reader1104);
        CPPWriter__print__Char(context,((SlagChar)44));
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_4_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          CPPWriter__print__String(context,str1562.value);
        }
        else
        {
          CPPWriter__print__String(context,TypeInfo__x_name(((ClassParameterInfo*)local_4_p)->property_type));
        }
      }
      CPPWriter__print__String(context,String__opADD__String(str1741.value,MethodInfo__x_name(local_2_m)));
    }
    else
    {
      CPPWriter__print__String(context,String__opADD__String(str1742.value,MethodInfo__x_name(local_2_m)));
    }
    next_10507:;
  }
  end_10507:;
  CPPWriter__println(context);
  ((ClassCPPWriter*)context)->property_indent -= 2;
  CPPWriter__println__String(context,str1526.value);
  CPPWriter__println(context);
}

static void CPPWriter__print_method_info( SXCRef context )
{
  SXCRef local_0_defined_callers;
  SXCRef local_1_callers_list;
  SXCRef local_2_method_callers;
  SXCRef local_3__reader1106;
  SXCRef local_4_m;
  SXCRef local_5_buffer;
  SlagLogical local_6_first;
  SXCRef local_7__reader1108;
  SXCRef local_8_p;
  SXCRef local_9_call_sig;
  SlagInt32 local_10_index;
  SXCRef local_11__reader1114;
  SXCRef local_12_p;
  SXCRef local_13_which_1116;
  SXCRef local_14_which_1119;
  SXCRef local_15__reader1122;
  SXCRef local_16_p;
  SXCRef local_17__reader1124;
  SXCRef local_18_p;
  SlagLogical local_19_first;
  SXCRef local_20__reader1126;
  SXCRef local_21_sig;
  SXCRef local_22__reader1128;
  SXCRef local_23_m;
  SXCRef local_24_list_data;
  SXCRef local_25__reader1130;
  SXCRef local_26_type;
  SXCRef local_27__reader1133;
  SXCRef local_28_m;
  SlagInt32 local_29_c;
  SXCRef local_30__reader1134;
  SlagInt32 local_31_i;

  local_0_defined_callers = HashTableBase_of_String_and_Int32_and_Object_and_Int32__init(type_ClassHashTable_of_String_and_Int32.create());
  local_1_callers_list = ArrayList_of_String__init(type_ClassArrayList_of_String.create());
  local_2_method_callers = ArrayList_of_Int32__init(type_ClassArrayList_of_Int32.create());
  local_3__reader1106 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_3__reader1106))
  {
    local_4_m = ArrayReader_of_MethodInfo__read(local_3__reader1106);
    if (((((((ClassQualifiers*)((ClassMethodInfo*)local_4_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0) || ((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_4_m)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0)) || (((ClassMethodInfo*)local_4_m)->property_type_context == ((ClassTypeManager*)sxc_singletons[7])->property_type_null)))
    {
      ArrayList_of_Int32__add__Int32(local_2_method_callers,0);
      goto next_10516;
    }
    local_5_buffer = StringBuilder__init(type_ClassStringBuilder.create());
    StringBuilder__print__String(local_5_buffer,str1743.value);
    local_6_first = true;
    local_7__reader1108 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_4_m)->property_parameters);
    while (CallFn____Logical(14,local_7__reader1108))
    {
      local_8_p = CallFn____Object(45,local_7__reader1108);
      if (local_6_first)
      {
        local_6_first = false;
      }
      else
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_5_buffer)->property_data,((SlagChar)95));
      }
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_8_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        StringBuilder__print__String(local_5_buffer,str0.value);
      }
      else
      {
        StringBuilder__print__String(local_5_buffer,String__x_compatible(((ClassTypeInfo*)((ClassParameterInfo*)local_8_p)->property_type)->property_name));
      }
    }
    StringBuilder__print__String(local_5_buffer,str631.value);
    if ((((ClassMethodInfo*)local_4_m)->property_return_type != NULL))
    {
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_4_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        StringBuilder__print__String(local_5_buffer,str0.value);
      }
      else
      {
        StringBuilder__print__String(local_5_buffer,String__x_compatible(((ClassTypeInfo*)((ClassMethodInfo*)local_4_m)->property_return_type)->property_name));
      }
    }
    local_9_call_sig = StringBuilder__to_String(local_5_buffer);
    if (!GenericHashTable_of_Object_and_Int32__contains__Object(((ClassHashTable_of_String_and_Int32*)local_0_defined_callers)->property_data,local_9_call_sig))
    {
      GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)local_0_defined_callers)->property_data,local_9_call_sig,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_callers_list))->property_count);
      ArrayList_of_Object__add__Object(local_1_callers_list,local_9_call_sig);
      CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1744.value),local_9_call_sig),str1745.value)));
      CPPWriter__println__String(context,str247.value);
      ((ClassCPPWriter*)context)->property_indent += 2;
      local_10_index = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_4_m)->property_parameters))->property_count;
      local_11__reader1114 = ArrayList_of_ParameterInfo__reverse_order(((ClassMethodInfo*)local_4_m)->property_parameters);
      while (CallFn____Logical(14,local_11__reader1114))
      {
        local_12_p = CallFn____Object(45,local_11__reader1114);
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_12_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1746.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_10_index,10))),str1747.value)));
        }
        else if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_12_p)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
        {
          local_13_which_1116 = ((ClassParameterInfo*)local_12_p)->property_type;
          if ((local_13_which_1116 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1748.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_10_index,10))),str1749.value)));
          }
          else if ((local_13_which_1116 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1750.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_10_index,10))),str1751.value)));
          }
          else if ((local_13_which_1116 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1752.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_10_index,10))),str1753.value)));
          }
          else if ((local_13_which_1116 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1754.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_10_index,10))),str1755.value)));
          }
          else if ((local_13_which_1116 == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1756.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_10_index,10))),str1757.value)));
          }
          else if ((local_13_which_1116 == ((ClassTypeManager*)sxc_singletons[7])->property_type_byte))
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1758.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_10_index,10))),str1759.value)));
          }
          else if ((local_13_which_1116 == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1760.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_10_index,10))),str1761.value)));
          }
        }
        else
        {
          CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassParameterInfo*)local_12_p)->property_type)),str1762.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_10_index,10))),str1763.value),TypeInfo__x_name(((ClassParameterInfo*)local_12_p)->property_type)),str1554.value)));
        }
        --local_10_index;
      }
      CPPWriter__println__String(context,str1764.value);
      if ((((ClassMethodInfo*)local_4_m)->property_return_type != NULL))
      {
        CPPWriter__print__String(context,str1765.value);
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_4_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          CPPWriter__print__String(context,str1766.value);
        }
        else if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_4_m)->property_return_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
        {
          local_14_which_1119 = ((ClassMethodInfo*)local_4_m)->property_return_type;
          if ((local_14_which_1119 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
          {
            CPPWriter__print__String(context,str1767.value);
          }
          else if ((local_14_which_1119 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
          {
            CPPWriter__print__String(context,str1768.value);
          }
          else if ((local_14_which_1119 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
          {
            CPPWriter__print__String(context,str1769.value);
          }
          else if ((local_14_which_1119 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
          {
            CPPWriter__print__String(context,str1770.value);
          }
          else if ((local_14_which_1119 == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
          {
            CPPWriter__print__String(context,str1771.value);
          }
          else if ((local_14_which_1119 == ((ClassTypeManager*)sxc_singletons[7])->property_type_byte))
          {
            CPPWriter__print__String(context,str1772.value);
          }
          else if ((local_14_which_1119 == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
          {
            CPPWriter__print__String(context,str1773.value);
          }
        }
        else
        {
          CPPWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1517.value),TypeInfo__x_name(((ClassMethodInfo*)local_4_m)->property_return_type)),str634.value)));
        }
      }
      CPPWriter__print__String(context,str1690.value);
      if ((((ClassMethodInfo*)local_4_m)->property_return_type != NULL))
      {
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_4_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          CPPWriter__print__String(context,str1562.value);
        }
        else
        {
          CPPWriter__print__String(context,TypeInfo__x_name(((ClassMethodInfo*)local_4_m)->property_return_type));
        }
      }
      else
      {
        CPPWriter__print__String(context,str1563.value);
      }
      CPPWriter__print__String(context,str1740.value);
      local_15__reader1122 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_4_m)->property_parameters);
      while (CallFn____Logical(14,local_15__reader1122))
      {
        local_16_p = CallFn____Object(45,local_15__reader1122);
        CPPWriter__print__Char(context,((SlagChar)44));
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_16_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          CPPWriter__print__String(context,str1562.value);
        }
        else
        {
          CPPWriter__print__String(context,TypeInfo__x_name(((ClassParameterInfo*)local_16_p)->property_type));
        }
      }
      CPPWriter__print__String(context,str1774.value);
      local_10_index = 1;
      local_17__reader1124 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_4_m)->property_parameters);
      while (CallFn____Logical(14,local_17__reader1124))
      {
        local_18_p = CallFn____Object(45,local_17__reader1124);
        CPPWriter__print__String(context,String__opADD__String(str1775.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_10_index,10))));
        ++local_10_index;
      }
      if ((((ClassMethodInfo*)local_4_m)->property_return_type != NULL))
      {
        CPPWriter__println__String(context,str1522.value);
      }
      else
      {
        CPPWriter__println__String(context,str1554.value);
      }
      ((ClassCPPWriter*)context)->property_indent -= 2;
      CPPWriter__println__String(context,str397.value);
      CPPWriter__println(context);
    }
    ArrayList_of_Int32__add__Int32(local_2_method_callers,GenericHashTable_of_Object_and_Int32__get__Object(((ClassHashTable_of_String_and_Int32*)local_0_defined_callers)->property_data,local_9_call_sig));
    next_10516:;
  }
  end_10516:;
  CPPWriter__println__String(context,str1776.value);
  CPPWriter__println__String(context,str247.value);
  ((ClassCPPWriter*)context)->property_indent += 2;
  local_19_first = true;
  local_20__reader1126 = ArrayList_of_String__create_reader(local_1_callers_list);
  while (ArrayReader_of_String__has_another(local_20__reader1126))
  {
    local_21_sig = ArrayReader_of_String__read(local_20__reader1126);
    if (local_19_first)
    {
      local_19_first = false;
    }
    else
    {
      CPPWriter__println__String(context,str395.value);
    }
    CPPWriter__print__String(context,String__opADD__String(str1742.value,local_21_sig));
  }
  CPPWriter__println(context);
  ((ClassCPPWriter*)context)->property_indent -= 2;
  CPPWriter__println__String(context,str1526.value);
  CPPWriter__println(context);
  CPPWriter__println__String(context,str1777.value);
  CPPWriter__println__String(context,str247.value);
  ((ClassCPPWriter*)context)->property_indent += 2;
  local_19_first = true;
  local_22__reader1128 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_22__reader1128))
  {
    local_23_m = ArrayReader_of_MethodInfo__read(local_22__reader1128);
    if (local_19_first)
    {
      local_19_first = false;
    }
    else
    {
      CPPWriter__println__String(context,str395.value);
    }
    CPPWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,((ClassMethodInfo*)local_23_m)->property_name),10))),str634.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,String__from_first__Char(((ClassMethodInfo*)local_23_m)->property_signature,((SlagChar)40))),10))),str634.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32*)(((SlagArray*)((ClassArrayList_of_Int32*)local_2_method_callers)->property_data)->data))[((ClassMethodInfo*)local_23_m)->property_index],10)))));
  }
  CPPWriter__println(context);
  ((ClassCPPWriter*)context)->property_indent -= 2;
  CPPWriter__println__String(context,str1526.value);
  CPPWriter__println(context);
  local_24_list_data = ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),1000);
  local_25__reader1130 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_25__reader1130))
  {
    local_26_type = ArrayReader_of_TypeInfo__read(local_25__reader1130);
    if ((local_26_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_null))
    {
      goto next_10540;
    }
    if (!((((ClassQualifiers*)((ClassTypeInfo*)local_26_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      goto next_10540;
    }
    ++(((ClassCPPWriter*)context)->property_num_method_lists);
    ArrayList_of_Int32__add__Int32(local_24_list_data,((ClassTypeInfo*)local_26_type)->property_index);
    ArrayList_of_Int32__add__Int32(local_24_list_data,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_26_type)->property_methods))->property_count);
    local_27__reader1133 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_26_type)->property_methods);
    while (ArrayReader_of_MethodInfo__has_another(local_27__reader1133))
    {
      local_28_m = ArrayReader_of_MethodInfo__read(local_27__reader1133);
      ArrayList_of_Int32__add__Int32(local_24_list_data,((ClassMethodInfo*)local_28_m)->property_index);
    }
    next_10540:;
  }
  end_10540:;
  CPPWriter__println__String(context,str1778.value);
  CPPWriter__println__String(context,str247.value);
  ((ClassCPPWriter*)context)->property_indent += 2;
  local_29_c = 0;
  local_30__reader1134 = ArrayList_of_Int32__create_reader(local_24_list_data);
  while (ArrayReader_of_Int32__has_another(local_30__reader1134))
  {
    local_31_i = ArrayReader_of_Int32__read(local_30__reader1134);
    if ((local_29_c > 0))
    {
      if (((local_29_c&15) == 0))
      {
        CPPWriter__println__Char(context,((SlagChar)44));
        local_29_c = 0;
      }
      else
      {
        CPPWriter__print__Char(context,((SlagChar)44));
      }
    }
    CPPWriter__print__Int32(context,local_31_i);
    ++local_29_c;
  }
  CPPWriter__println(context);
  ((ClassCPPWriter*)context)->property_indent -= 2;
  CPPWriter__println__String(context,str1526.value);
  CPPWriter__println(context);
}

static void CPPWriter__print_dispatch_table( SXCRef context )
{
  SlagLogical local_0_first;
  SXCRef local_1__reader1137;
  SXCRef local_2_type;
  SXCRef local_3__reader1141;
  SXCRef local_4_m;
  SXCRef local_5__reader1147;
  SXCRef local_6_p;

  CPPWriter__println__String(context,str1779.value);
  CPPWriter__println__String(context,str247.value);
  ((ClassCPPWriter*)context)->property_indent += 2;
  local_0_first = true;
  local_1__reader1137 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_1__reader1137))
  {
    local_2_type = ArrayReader_of_TypeInfo__read(local_1__reader1137);
    if ((local_2_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_null))
    {
      goto next_10547;
    }
    if (!((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
    {
      goto next_10547;
    }
    if ((((ClassTypeInfo*)local_2_type)->property_dispatch_table != NULL))
    {
      local_3__reader1141 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_dispatch_table);
      while (ArrayReader_of_MethodInfo__has_another(local_3__reader1141))
      {
        local_4_m = ArrayReader_of_MethodInfo__read(local_3__reader1141);
        if (local_0_first)
        {
          local_0_first = false;
        }
        else if (((local_4_m != NULL) && !((((ClassQualifiers*)((ClassMethodInfo*)local_4_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0)))
        {
          CPPWriter__println__Char(context,((SlagChar)44));
        }
        else
        {
          CPPWriter__print__String(context,str634.value);
        }
        if (((local_4_m != NULL) && !((((ClassQualifiers*)((ClassMethodInfo*)local_4_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0)))
        {
          if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_4_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
          {
            CPPWriter__print__String(context,str1739.value);
            if ((((ClassMethodInfo*)local_4_m)->property_return_type != NULL))
            {
              if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_4_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
              {
                CPPWriter__print__String(context,str1562.value);
              }
              else
              {
                CPPWriter__print__String(context,TypeInfo__x_name(((ClassMethodInfo*)local_4_m)->property_return_type));
              }
            }
            else
            {
              CPPWriter__print__String(context,str1563.value);
            }
            CPPWriter__print__String(context,str1740.value);
            local_5__reader1147 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_4_m)->property_parameters);
            while (CallFn____Logical(14,local_5__reader1147))
            {
              local_6_p = CallFn____Object(45,local_5__reader1147);
              CPPWriter__print__Char(context,((SlagChar)44));
              if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_6_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
              {
                CPPWriter__print__String(context,str1562.value);
              }
              else
              {
                CPPWriter__print__String(context,TypeInfo__x_name(((ClassParameterInfo*)local_6_p)->property_type));
              }
            }
            CPPWriter__print__String(context,String__opADD__String(str1741.value,MethodInfo__x_name(local_4_m)));
          }
          else
          {
            CPPWriter__print__String(context,String__opADD__String(str1742.value,MethodInfo__x_name(local_4_m)));
          }
        }
        else
        {
          CPPWriter__print__String(context,str1515.value);
        }
      }
    }
    next_10547:;
  }
  end_10547:;
  CPPWriter__println(context);
  ((ClassCPPWriter*)context)->property_indent -= 2;
  CPPWriter__println__String(context,str1526.value);
  CPPWriter__println(context);
}

static void CPPWriter__print_configuration_function( SXCRef context )
{
  SlagInt32 local_0_type_table_index;
  SlagInt32 local_1_property_info_index;
  SlagInt32 local_2_dispatch_index;
  SXCRef local_3__reader1149;
  SXCRef local_4_type;
  SXCRef local_5_m;
  SXCRef local_6__reader1160;
  SXCRef local_7_type;
  SXCRef local_8_main_class;
  SXCRef local_9__reader1164;
  SXCRef local_10_type;
  SXCRef local_11__reader1167;
  SXCRef local_12_type;
  SXCRef local_13_m;

  CPPWriter__println__String(context,str1780.value);
  CPPWriter__println__String(context,str247.value);
  ((ClassCPPWriter*)context)->property_indent += 2;
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1781.value),TypeInfo__x_name(((ClassTypeManager*)sxc_singletons[7])->property_main_class)),str396.value)));
  CPPWriter__println(context);
  CPPWriter__println__String(context,str1782.value);
  local_0_type_table_index = 0;
  local_1_property_info_index = 0;
  local_2_dispatch_index = 0;
  local_3__reader1149 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_3__reader1149))
  {
    local_4_type = ArrayReader_of_TypeInfo__read(local_3__reader1149);
    if ((local_4_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_null))
    {
      goto next_10559;
    }
    if ((!((((ClassQualifiers*)((ClassTypeInfo*)local_4_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0) && (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_4_type)->property_properties))->property_count != 0)))
    {
      CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1716.value),TypeInfo__x_name(local_4_type)),str1783.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_1_property_info_index,10))),str634.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_4_type)->property_properties))->property_count,10))),str1535.value)));
      local_1_property_info_index += (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_4_type)->property_properties))->property_count<<1);
    }
    if (!((((ClassQualifiers*)((ClassTypeInfo*)local_4_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
    {
      goto next_10559;
    }
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_4_type)->property_flat_base_types))->property_count != 0))
    {
      CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1716.value),TypeInfo__x_name(local_4_type)),str1784.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_type_table_index,10))),str1554.value)));
      local_0_type_table_index += ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_4_type)->property_flat_base_types))->property_count;
    }
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_4_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_array)->property_flags) != 0))
    {
      if (((((ClassQualifiers*)((ClassTypeInfo*)local_4_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_reference_array)->property_flags) != 0))
      {
        CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1716.value),TypeInfo__x_name(local_4_type)),str1785.value)));
      }
      else
      {
        CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1716.value),TypeInfo__x_name(local_4_type)),str1786.value),TypeInfo__x_name(((ClassTypeInfo*)local_4_type)->property_element_type)),str1554.value)));
      }
    }
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_4_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      local_5_m = TypeInfo__find_method__String(local_4_type,str975.value);
      if ((((local_5_m != NULL) && ((((ClassQualifiers*)((ClassMethodInfo*)local_5_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_empty_body)->property_flags) == 0)) && ((ClassMethodInfo*)local_5_m)->property_collected))
      {
        CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1716.value),TypeInfo__x_name(local_4_type)),str1787.value),MethodInfo__x_name(local_5_m)),str396.value)));
      }
      if (((((ClassQualifiers*)((ClassTypeInfo*)local_4_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requires_cleanup)->property_flags) != 0))
      {
        local_5_m = TypeInfo__find_method__String(local_4_type,str1788.value);
        CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1716.value),TypeInfo__x_name(local_4_type)),str1789.value),MethodInfo__x_name(local_5_m)),str396.value)));
      }
      if ((((ClassTypeInfo*)local_4_type)->property_dispatch_table != NULL))
      {
        CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1716.value),TypeInfo__x_name(local_4_type)),str1790.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_2_dispatch_index,10))),str396.value)));
        local_2_dispatch_index += ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_4_type)->property_dispatch_table))->property_count;
      }
    }
    next_10559:;
  }
  end_10559:;
  CPPWriter__println(context);
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1791.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeManager*)sxc_singletons[7])->property_method_list))->property_count,10))),str1535.value)));
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1792.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCPPWriter*)context)->property_num_method_lists,10))),str1535.value)));
  local_6__reader1160 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_6__reader1160))
  {
    local_7_type = ArrayReader_of_TypeInfo__read(local_6__reader1160);
    if (!!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_7_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
    {
      goto next_10570;
    }
    CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1725.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassTypeInfo*)local_7_type)->property_singleton_index,10))),str1793.value),TypeInfo__x_name(local_7_type)),str1794.value)));
    next_10570:;
  }
  end_10570:;
  CPPWriter__println(context);
  CPPWriter__println__String(context,str1795.value);
  CPPWriter__println(context);
  local_8_main_class = ((ClassTypeManager*)sxc_singletons[7])->property_main_class;
  CPPWriter__println__String(context,str1796.value);
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_8_main_class)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
  {
    CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1797.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassTypeInfo*)local_8_main_class)->property_singleton_index,10))),str1550.value)));
  }
  else
  {
    CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1798.value),TypeInfo__x_name(local_8_main_class)),str1799.value)));
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_8_main_class)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0))
    {
      CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(local_8_main_class)),str1800.value),TypeInfo__x_name(local_8_main_class)),str1801.value),TypeInfo__x_name(local_8_main_class)),str1802.value)));
      CPPWriter__println__String(context,str1803.value);
      CPPWriter__println__String(context,str1804.value);
    }
  }
  CPPWriter__println__String(context,str1805.value);
  CPPWriter__println(context);
  local_9__reader1164 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_9__reader1164))
  {
    local_10_type = ArrayReader_of_TypeInfo__read(local_9__reader1164);
    if (!!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_10_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
    {
      goto next_10574;
    }
    if ((local_10_type == ((ClassTypeManager*)sxc_singletons[7])->property_main_class))
    {
      goto next_10574;
    }
    CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),MethodInfo__x_name(TypeInfo__must_find_method__String(local_10_type,str975.value))),str1806.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassTypeInfo*)local_10_type)->property_singleton_index,10))),str1807.value)));
    next_10574:;
  }
  end_10574:;
  CPPWriter__println(context);
  local_11__reader1167 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_11__reader1167))
  {
    local_12_type = ArrayReader_of_TypeInfo__read(local_11__reader1167);
    if (((local_12_type == ((ClassTypeManager*)sxc_singletons[7])->property_main_class) || !!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_12_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0)))
    {
      goto next_10577;
    }
    local_13_m = TypeInfo__find_method__String(local_12_type,str1261.value);
    if ((local_13_m != NULL))
    {
      CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),MethodInfo__x_name(local_13_m)),str1806.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassTypeInfo*)local_12_type)->property_singleton_index,10))),str1807.value)));
    }
    next_10577:;
  }
  end_10577:;
  ((ClassCPPWriter*)context)->property_indent -= 2;
  CPPWriter__println__String(context,str397.value);
  CPPWriter__println(context);
}

static void CPPWriter__print_miscellaneous( SXCRef context )
{
  CPPWriter__println__String(context,str1808.value);
  CPPWriter__println__String(context,str247.value);
  CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1809.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str12.value,NULL))->property_singleton_index,10))),str1810.value)));
  CPPWriter__println__String(context,str397.value);
  CPPWriter__println(context);
}

static void CPPWriter__print_literal_strings( SXCRef context )
{
  SlagInt32 local_0_i;
  SlagInt32 local_1__count1170;
  SXCRef local_2__reader1171;
  SlagChar local_3_ch;
  SlagChar local_4_which_1173;

  {
    local_0_i = 0;
    local_1__count1170 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassStringTable*)((ClassTypeManager*)sxc_singletons[7])->property_strings)->property_strings))->property_count;
    while ((local_0_i < local_1__count1170))
    {
      CPPWriter__print__String(context,((ClassString*)String__opADD__String(str1556.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_i,10)))));
      CPPWriter__print__String(context,str1557.value);
      local_2__reader1171 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),String__to_utf8(((ClassString*)((ClassString*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassStringTable*)((ClassTypeManager*)sxc_singletons[7])->property_strings)->property_strings))->property_data)->data))[local_0_i]))),0,-1));
      while (CallFn____Logical(14,local_2__reader1171))
      {
        local_3_ch = CallFn____Char(29,local_2__reader1171);
        if (((((SlagInt32)local_3_ch) >= 32) && (((SlagInt32)local_3_ch) <= 126)))
        {
          local_4_which_1173 = local_3_ch;
          if ((((SlagInt32)local_4_which_1173) == 34))
          {
            CPPWriter__print__String(context,str1540.value);
          }
          else if ((((SlagInt32)local_4_which_1173) == 92))
          {
            CPPWriter__print__String(context,str1541.value);
          }
          else
          {
            CPPWriter__print__Char(context,local_3_ch);
          }
        }
        else
        {
          CPPWriter__print__String(context,String__opADD__String(str1543.value,String__rightmost__Int32(Global__to_String__Char_Int32(sxc_singletons[21],local_3_ch,8),3)));
        }
      }
      CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1558.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],(((SlagString*)((ClassString*)((ClassString*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassStringTable*)((ClassTypeManager*)sxc_singletons[7])->property_strings)->property_strings))->property_data)->data))[local_0_i])))->count),10))),str1535.value)));
      ++local_0_i;
    }
  }
  CPPWriter__println(context);
}

static void CPPWriter__print_function_typedefs( SXCRef context )
{
  SXCRef local_0_fnptr_lookup;
  SXCRef local_1_unique_groups;
  SXCRef local_2__reader1174;
  SXCRef local_3_group;
  SXCRef local_4_m;
  SXCRef local_5_buffer;
  SlagLogical local_6_first;
  SXCRef local_7__reader1175;
  SXCRef local_8_p;
  SXCRef local_9_name;
  SXCRef local_10__reader1182;
  SXCRef local_11_p;
  SXCRef local_12__reader1184;
  SXCRef local_13_group;
  SXCRef local_14_m;
  SlagInt32 local_15_index;
  SXCRef local_16__reader1187;
  SXCRef local_17_p;
  SlagInt32 local_18_i;
  SlagInt32 local_19__last1190;

  local_0_fnptr_lookup = HashTableBase_of_String_and_String_and_Object_and_Object__init(type_ClassHashTable_of_String_and_String.create());
  local_1_unique_groups = ArrayList_of_MethodGroup__init(type_ClassArrayList_of_MethodGroup.create());
  local_2__reader1174 = ArrayList_of_MethodGroup__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_group_list);
  while (ArrayReader_of_MethodGroup__has_another(local_2__reader1174))
  {
    local_3_group = ArrayReader_of_MethodGroup__read(local_2__reader1174);
    local_4_m = ((ClassMethodInfo*)((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodGroup*)local_3_group)->property_methods))->property_data)->data))[0])));
    local_5_buffer = StringBuilder__init(type_ClassStringBuilder.create());
    StringBuilder__print__String(local_5_buffer,str1560.value);
    local_6_first = true;
    local_7__reader1175 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_4_m)->property_parameters);
    while (CallFn____Logical(14,local_7__reader1175))
    {
      local_8_p = CallFn____Object(45,local_7__reader1175);
      if (local_6_first)
      {
        local_6_first = false;
      }
      else
      {
        StringBuilder__print__String(local_5_buffer,str629.value);
      }
      StringBuilder__print__String(local_5_buffer,String__x_compatible(((ClassTypeInfo*)((ClassParameterInfo*)local_8_p)->property_type)->property_name));
    }
    if ((((ClassMethodInfo*)local_4_m)->property_return_type != NULL))
    {
      StringBuilder__print__String(local_5_buffer,str631.value);
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_4_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        StringBuilder__print__String(local_5_buffer,str0.value);
      }
      else
      {
        StringBuilder__print__String(local_5_buffer,String__x_compatible(((ClassTypeInfo*)((ClassMethodInfo*)local_4_m)->property_return_type)->property_name));
      }
    }
    local_9_name = StringBuilder__to_String(local_5_buffer);
    sxc_write_ref( &(((ClassMethodGroup*)local_3_group)->property_x_name), local_9_name );
    if (!GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_String*)local_0_fnptr_lookup)->property_data,local_9_name))
    {
      GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_String*)local_0_fnptr_lookup)->property_data,local_9_name,local_9_name);
      ArrayList_of_Object__add__Object(local_1_unique_groups,local_3_group);
      CPPWriter__print__String(context,str1561.value);
      if ((((ClassMethodInfo*)local_4_m)->property_return_type != NULL))
      {
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_4_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          CPPWriter__print__String(context,str1562.value);
        }
        else
        {
          CPPWriter__print__String(context,TypeInfo__x_name(((ClassMethodInfo*)local_4_m)->property_return_type));
        }
      }
      else
      {
        CPPWriter__print__String(context,str1563.value);
      }
      CPPWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1564.value),local_9_name),str1565.value)));
      local_10__reader1182 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_4_m)->property_parameters);
      while (CallFn____Logical(14,local_10__reader1182))
      {
        local_11_p = CallFn____Object(45,local_10__reader1182);
        CPPWriter__print__String(context,str395.value);
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_11_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          CPPWriter__print__String(context,str1562.value);
        }
        else
        {
          CPPWriter__print__String(context,TypeInfo__x_name(((ClassParameterInfo*)local_11_p)->property_type));
        }
      }
      CPPWriter__println__String(context,str1554.value);
    }
  }
  CPPWriter__println(context);
  local_12__reader1184 = ArrayList_of_MethodGroup__create_reader(local_1_unique_groups);
  while (ArrayReader_of_MethodGroup__has_another(local_12__reader1184))
  {
    local_13_group = ArrayReader_of_MethodGroup__read(local_12__reader1184);
    local_14_m = ((ClassMethodInfo*)((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodGroup*)local_13_group)->property_methods))->property_data)->data))[0])));
    CPPWriter__print__String(context,str1531.value);
    if ((((ClassMethodInfo*)local_14_m)->property_return_type != NULL))
    {
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_14_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        CPPWriter__print__String(context,str1562.value);
      }
      else
      {
        CPPWriter__print__String(context,TypeInfo__x_name(((ClassMethodInfo*)local_14_m)->property_return_type));
      }
    }
    else
    {
      CPPWriter__print__String(context,str1563.value);
    }
    CPPWriter__print__String(context,String__opADD__String(str1566.value,((ClassMethodGroup*)local_13_group)->property_x_name));
    CPPWriter__print__String(context,str1567.value);
    local_15_index = 1;
    local_16__reader1187 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_14_m)->property_parameters);
    while (CallFn____Logical(14,local_16__reader1187))
    {
      local_17_p = CallFn____Object(45,local_16__reader1187);
      CPPWriter__print__String(context,str634.value);
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_17_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        CPPWriter__print__String(context,String__opADD__String(str1568.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_15_index,10))));
      }
      else
      {
        CPPWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassParameterInfo*)local_17_p)->property_type)),str1569.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_15_index,10)))));
      }
      ++local_15_index;
    }
    CPPWriter__println__String(context,str635.value);
    CPPWriter__println__String(context,str247.value);
    ((ClassCPPWriter*)context)->property_indent += 2;
    CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMethodGroup*)local_13_group)->property_x_name),str1570.value),((ClassMethodGroup*)local_13_group)->property_x_name),str1571.value)));
    if ((((ClassMethodInfo*)local_14_m)->property_return_type != NULL))
    {
      CPPWriter__print__String(context,str810.value);
    }
    CPPWriter__print__String(context,str1572.value);
    local_18_i = 1;
    local_19__last1190 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_14_m)->property_parameters))->property_count;
    while ((local_18_i <= local_19__last1190))
    {
      CPPWriter__print__String(context,((ClassString*)String__opADD__String(str1573.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_18_i,10)))));
      ++local_18_i;
    }
    CPPWriter__println__String(context,str1535.value);
    ((ClassCPPWriter*)context)->property_indent -= 2;
    CPPWriter__println__String(context,str397.value);
    CPPWriter__println(context);
  }
}

static void CPPWriter__print_method_prototypes__Logical( SXCRef context, SlagLogical local_0_print_requisite )
{
  SXCRef local_1__reader1191;
  SXCRef local_2_m;
  SlagLogical local_3_is_initializer;
  SXCRef local_4__reader1199;
  SXCRef local_5_p;

  local_1__reader1191 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_1__reader1191))
  {
    local_2_m = ArrayReader_of_MethodInfo__read(local_1__reader1191);
    if ((((((ClassQualifiers*)((ClassMethodInfo*)local_2_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0) || ((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_2_m)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0)))
    {
      goto next_10356;
    }
    if ((((ClassMethodInfo*)local_2_m)->property_type_context == ((ClassTypeManager*)sxc_singletons[7])->property_type_null))
    {
      goto next_10356;
    }
    if ((local_0_print_requisite^((((ClassQualifiers*)((ClassMethodInfo*)local_2_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0)))
    {
      goto next_10356;
    }
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_2_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
    {
      CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1529.value),MethodInfo__x_name(local_2_m)),str1530.value)));
    }
    if (!((((ClassQualifiers*)((ClassMethodInfo*)local_2_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0))
    {
      CPPWriter__print__String(context,str1531.value);
    }
    local_3_is_initializer = String__opEQ__String(((ClassMethodInfo*)local_2_m)->property_name,str667.value);
    if ((((ClassMethodInfo*)local_2_m)->property_return_type != NULL))
    {
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_2_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        CPPWriter__print__String(context,str1528.value);
      }
      else
      {
        CPPWriter__print__String(context,String__opADD__String(TypeInfo__x_name(((ClassMethodInfo*)local_2_m)->property_return_type),str607.value));
      }
    }
    else if (local_3_is_initializer)
    {
      CPPWriter__print__String(context,str1528.value);
    }
    else
    {
      CPPWriter__print__String(context,str1529.value);
    }
    CPPWriter__print__String(context,String__opADD__String(MethodInfo__x_name(local_2_m),str1517.value));
    CPPWriter__print__String(context,str1532.value);
    local_4__reader1199 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_2_m)->property_parameters);
    while (CallFn____Logical(14,local_4__reader1199))
    {
      local_5_p = CallFn____Object(45,local_4__reader1199);
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_5_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        CPPWriter__print__String(context,str1533.value);
      }
      else
      {
        CPPWriter__print__String(context,String__opADD__String(str634.value,TypeInfo__x_name(((ClassParameterInfo*)local_5_p)->property_type)));
      }
      CPPWriter__print__String(context,String__opADD__String(str607.value,ParameterInfo__x_name(local_5_p)));
    }
    CPPWriter__println__String(context,str1535.value);
    next_10356:;
  }
  end_10356:;
  CPPWriter__println(context);
}

static void CPPWriter__print_method_defs( SXCRef context )
{
  SXCRef local_0__reader1201;
  SXCRef local_1_m;
  SlagLogical local_2_is_initializer;
  SXCRef local_3__reader1207;
  SXCRef local_4_p;
  SXCRef local_5_args;
  SXCRef local_6__reader1210;
  SXCRef local_7_p;
  SXCRef local_8_native_call_str;
  SXCRef local_9__reader1214;
  SXCRef local_10_p;
  SXCRef local_11_which_1216;
  SXCRef local_12_which_1219;
  SlagLogical local_13_any_locals;
  SXCRef local_14__reader1220;
  SXCRef local_15_v;

  local_0__reader1201 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_0__reader1201))
  {
    local_1_m = ArrayReader_of_MethodInfo__read(local_0__reader1201);
    if ((((((ClassQualifiers*)((ClassMethodInfo*)local_1_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0) || ((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_1_m)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0)))
    {
      goto next_10418;
    }
    if ((((ClassMethodInfo*)local_1_m)->property_type_context == ((ClassTypeManager*)sxc_singletons[7])->property_type_null))
    {
      goto next_10418;
    }
    if (!((((ClassQualifiers*)((ClassMethodInfo*)local_1_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0))
    {
      CPPWriter__print__String(context,str1531.value);
    }
    sxc_write_ref( &(((ClassCPPWriter*)context)->property_this_method), local_1_m );
    local_2_is_initializer = String__opEQ__String(((ClassMethodInfo*)local_1_m)->property_name,str667.value);
    if ((((ClassMethodInfo*)local_1_m)->property_return_type != NULL))
    {
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_1_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        CPPWriter__print__String(context,str1528.value);
      }
      else
      {
        CPPWriter__print__String(context,String__opADD__String(TypeInfo__x_name(((ClassMethodInfo*)local_1_m)->property_return_type),str607.value));
      }
    }
    else if (local_2_is_initializer)
    {
      CPPWriter__print__String(context,str1528.value);
    }
    else
    {
      CPPWriter__print__String(context,str1529.value);
    }
    CPPWriter__print__String(context,String__opADD__String(MethodInfo__x_name(local_1_m),str1517.value));
    CPPWriter__print__String(context,str1532.value);
    local_3__reader1207 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_1_m)->property_parameters);
    while (CallFn____Logical(14,local_3__reader1207))
    {
      local_4_p = CallFn____Object(45,local_3__reader1207);
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_4_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        CPPWriter__print__String(context,str1533.value);
      }
      else
      {
        CPPWriter__print__String(context,String__opADD__String(str634.value,TypeInfo__x_name(((ClassParameterInfo*)local_4_p)->property_type)));
      }
      CPPWriter__print__String(context,String__opADD__String(str607.value,ParameterInfo__x_name(local_4_p)));
    }
    CPPWriter__println__String(context,str635.value);
    CPPWriter__println__String(context,str247.value);
    ((ClassCPPWriter*)context)->property_indent += 2;
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_1_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
    {
      local_5_args = ArrayList_of_String__init(type_ClassArrayList_of_String.create());
      local_6__reader1210 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_1_m)->property_parameters);
      while (CallFn____Logical(14,local_6__reader1210))
      {
        local_7_p = CallFn____Object(45,local_6__reader1210);
        ArrayList_of_Object__add__Object(local_5_args,ParameterInfo__x_name(local_7_p));
      }
      local_8_native_call_str = CPPWriter__native_call__MethodInfo_String_ArrayList_of_String(context,local_1_m,str1574.value,local_5_args);
      if ((local_8_native_call_str != NULL))
      {
        if ((((ClassMethodInfo*)local_1_m)->property_return_type != NULL))
        {
          CPPWriter__print__String(context,str810.value);
        }
        CPPWriter__print__String(context,local_8_native_call_str);
        CPPWriter__println__String(context,str396.value);
        if (local_2_is_initializer)
        {
          CPPWriter__println__String(context,str1607.value);
        }
      }
      else
      {
        CPPWriter__println__String(context,str1608.value);
        local_9__reader1214 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_1_m)->property_parameters);
        while (CallFn____Logical(14,local_9__reader1214))
        {
          local_10_p = CallFn____Object(45,local_9__reader1214);
          if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_10_p)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1609.value),ParameterInfo__x_name(local_10_p)),str1535.value)));
          }
          else if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassParameterInfo*)local_10_p)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
          {
            CPPWriter__print__String(context,str1610.value);
            local_11_which_1216 = ((ClassParameterInfo*)local_10_p)->property_type;
            if ((local_11_which_1216 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
            {
              CPPWriter__print__String(context,str1611.value);
            }
            else if ((local_11_which_1216 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
            {
              CPPWriter__print__String(context,str1612.value);
            }
            else if ((local_11_which_1216 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
            {
              CPPWriter__print__String(context,str1613.value);
            }
            else if ((local_11_which_1216 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
            {
              CPPWriter__print__String(context,str1614.value);
            }
            else if ((local_11_which_1216 == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
            {
              CPPWriter__print__String(context,str1615.value);
            }
            else if ((local_11_which_1216 == ((ClassTypeManager*)sxc_singletons[7])->property_type_byte))
            {
              CPPWriter__print__String(context,str1616.value);
            }
            else if ((local_11_which_1216 == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
            {
              CPPWriter__print__String(context,str1617.value);
            }
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1517.value),ParameterInfo__x_name(local_10_p)),str1535.value)));
          }
          else
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1618.value),TypeInfo__x_name(((ClassParameterInfo*)local_10_p)->property_type)),str634.value),ParameterInfo__x_name(local_10_p)),str1535.value)));
          }
        }
        CPPWriter__print__String(context,MethodInfo__x_name(local_1_m));
        CPPWriter__println__String(context,str1530.value);
        if (local_2_is_initializer)
        {
          CPPWriter__println__String(context,str1607.value);
        }
        else if ((((ClassMethodInfo*)local_1_m)->property_return_type != NULL))
        {
          if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_1_m)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
          {
            CPPWriter__println__String(context,str1619.value);
          }
          else if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_1_m)->property_return_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
          {
            CPPWriter__print__String(context,str1620.value);
            local_12_which_1219 = ((ClassMethodInfo*)local_1_m)->property_return_type;
            if ((local_12_which_1219 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
            {
              CPPWriter__println__String(context,str1621.value);
            }
            else if ((local_12_which_1219 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
            {
              CPPWriter__println__String(context,str1622.value);
            }
            else if ((local_12_which_1219 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
            {
              CPPWriter__println__String(context,str1623.value);
            }
            else if ((local_12_which_1219 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
            {
              CPPWriter__println__String(context,str1624.value);
            }
            else if ((local_12_which_1219 == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
            {
              CPPWriter__println__String(context,str1625.value);
            }
            else if ((local_12_which_1219 == ((ClassTypeManager*)sxc_singletons[7])->property_type_byte))
            {
              CPPWriter__println__String(context,str1626.value);
            }
            else if ((local_12_which_1219 == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
            {
              CPPWriter__println__String(context,str1627.value);
            }
          }
          else
          {
            CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1628.value),TypeInfo__x_name(((ClassMethodInfo*)local_1_m)->property_return_type)),str1535.value)));
          }
        }
      }
      ((ClassCPPWriter*)context)->property_indent -= 2;
      CPPWriter__println__String(context,str397.value);
      CPPWriter__println(context);
      goto next_10418;
    }
    local_13_any_locals = false;
    local_14__reader1220 = ArrayList_of_LocalVarInfo__from__Int32(((ClassMethodInfo*)local_1_m)->property_local_vars,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_1_m)->property_parameters))->property_count);
    while (ArrayReader_of_LocalVarInfo__has_another(local_14__reader1220))
    {
      local_15_v = ArrayReader_of_LocalVarInfo__read(local_14__reader1220);
      if (!((ClassLocalVarInfo*)local_15_v)->property_is_catch_var)
      {
        local_13_any_locals = true;
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassLocalVarInfo*)local_15_v)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
        {
          CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1528.value),LocalVarInfo__x_name(local_15_v)),str396.value)));
        }
        else
        {
          CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassLocalVarInfo*)local_15_v)->property_type)),str607.value),LocalVarInfo__x_name(local_15_v)),str396.value)));
        }
      }
    }
    if (local_13_any_locals)
    {
      CPPWriter__println(context);
    }
    CmdStatementList__to_cpp(((ClassMethodInfo*)local_1_m)->property_body);
    if (local_2_is_initializer)
    {
      CPPWriter__println__String(context,str1607.value);
    }
    ((ClassCPPWriter*)context)->property_indent -= 2;
    CPPWriter__println__String(context,str397.value);
    CPPWriter__println(context);
    next_10418:;
  }
  end_10418:;
  CPPWriter__println(context);
}

static void CPPWriter__write_continue_id__CmdStructure( SXCRef context, SXCRef local_0_cmd )
{
  if (((ClassCmdStructure*)local_0_cmd)->property_referenced)
  {
    CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1657.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdStructure*)local_0_cmd)->property_id,10))),str1635.value)));
  }
}

static void CPPWriter__write_end_id__CmdStructure( SXCRef context, SXCRef local_0_cmd )
{
  if (((ClassCmdStructure*)local_0_cmd)->property_referenced)
  {
    CPPWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1634.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdStructure*)local_0_cmd)->property_id,10))),str1635.value)));
  }
}

static SlagObject* CPPWriter__native_call__MethodInfo_String_CmdList( SXCRef context, SXCRef local_0_m, SXCRef local_1_context, SXCRef local_2_args )
{
  SXCRef local_3_string_args;
  SXCRef local_4__reader1227;
  SXCRef local_5_arg;

  local_3_string_args = ArrayList_of_String__init(type_ClassArrayList_of_String.create());
  local_4__reader1227 = ArrayList_of_Cmd__create_reader(local_2_args);
  while (CallFn____Logical(14,local_4__reader1227))
  {
    local_5_arg = CallFn____Object(45,local_4__reader1227);
    ArrayList_of_Object__add__Object(local_3_string_args,CallFn____Object(15,local_5_arg));
  }
  return CPPWriter__native_call__MethodInfo_String_ArrayList_of_String(context,local_0_m,local_1_context,local_3_string_args);
}

static SlagObject* CPPWriter__native_call__MethodInfo_String_ArrayList_of_String( SXCRef context, SXCRef local_0_m, SXCRef local_1_context, SXCRef local_2_args )
{
  SlagChar local_3_which_1228;
  SXCRef local_4_which_1229;
  SXCRef local_5_which_1230;
  SXCRef local_6_which_1231;

  local_3_which_1228 = String__get__Int32(((ClassMethodInfo*)local_0_m)->property_full_signature,0);
  if ((((SlagInt32)local_3_which_1228) == 71))
  {
    local_4_which_1229 = ((ClassMethodInfo*)local_0_m)->property_full_signature;
    if (String__opEQ__String(local_4_which_1229,str1575.value))
    {
      return str1576.value;
    }
  }
  else if ((((SlagInt32)local_3_which_1228) == 77))
  {
    local_5_which_1230 = ((ClassMethodInfo*)local_0_m)->property_full_signature;
    if (String__opEQ__String(local_5_which_1230,str1577.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1578.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_5_which_1230,str1579.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1578.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_5_which_1230,str1580.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1581.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_5_which_1230,str1582.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1583.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_5_which_1230,str1584.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1585.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_5_which_1230,str1586.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1587.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str1588.value));
    }
    else if (String__opEQ__String(local_5_which_1230,str1589.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1590.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str1588.value));
    }
    else if (String__opEQ__String(local_5_which_1230,str1591.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1592.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str1588.value));
    }
    else if (String__opEQ__String(local_5_which_1230,str1593.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1594.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str1595.value));
    }
    else if (String__opEQ__String(local_5_which_1230,str1596.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1597.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str1595.value));
    }
    else if (String__opEQ__String(local_5_which_1230,str1598.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1599.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str1595.value));
    }
    else if (String__opEQ__String(local_5_which_1230,str1600.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1601.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[0]))),str395.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_2_args))->property_data)->data))[1]))),str1595.value));
    }
  }
  else if ((((SlagInt32)local_3_which_1228) == 83))
  {
    local_6_which_1231 = ((ClassMethodInfo*)local_0_m)->property_full_signature;
    if (String__opEQ__String(local_6_which_1231,str1602.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1603.value),local_1_context),str1604.value));
    }
    else if (String__opEQ__String(local_6_which_1231,str1605.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1603.value),local_1_context),str1606.value));
    }
  }
  else
  {
  }
  return NULL;
}

void CPPWriter__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassCPPWriter*)context)->property_col = 1;
}

SlagObject* CPPWriter__type_name( SXCRef context )
{
  return str436.value;
}

static SlagChar NumberConversions__to_digit__Int32( SXCRef context, SlagInt32 local_0_n )
{
  if ((local_0_n <= 9))
  {
    return ((SlagChar)((SlagInt32)(local_0_n+48)));
  }
  else
  {
    return ((SlagChar)((SlagInt32)((local_0_n-10)+97)));
  }
}

static SlagLogical NumberConversions__is_digit__Char_Int32( SXCRef context, SlagChar local_0_ch, SlagInt32 local_1_base )
{
  SlagInt32 local_2_value;

  local_2_value = NumberConversions__to_value__Char(context,local_0_ch);
  return ((local_2_value >= 0) && (local_2_value < local_1_base));
}

static SlagInt32 NumberConversions__to_value__Char( SXCRef context, SlagChar local_0_ch )
{
  if (((((SlagInt32)local_0_ch) >= 48) && (((SlagInt32)local_0_ch) <= 57)))
  {
    return (((SlagInt32)local_0_ch)-48);
  }
  else if (((((SlagInt32)local_0_ch) >= 65) && (((SlagInt32)local_0_ch) <= 90)))
  {
    return ((((SlagInt32)local_0_ch)-65)+10);
  }
  else if (((((SlagInt32)local_0_ch) >= 97) && (((SlagInt32)local_0_ch) <= 122)))
  {
    return ((((SlagInt32)local_0_ch)-97)+10);
  }
  return -1;
}

static SlagObject* NumberConversions__Int64_to_String__Int64_Int32_Int32( SXCRef context, SlagInt64 local_0_n, SlagInt32 local_1_base, SlagInt32 local_2_min_digits )
{
  SXCRef local_3_buffer;
  SlagLogical local_4_is_negative;
  SlagInt32 local_5_bit_size;
  SlagInt32 local_6_bit_mask;
  SlagInt32 local_7__local_115;
  SlagInt32 local_8__last116;

  local_3_buffer = ArrayList_of_Char__init(type_ClassArrayList_of_Char.create());
  local_4_is_negative = false;
  if (BitwiseOperations__is_power_of_two__Int32(sxc_singletons[15],local_1_base))
  {
    local_5_bit_size = (BitwiseOperations__min_bits__Int32(sxc_singletons[15],local_1_base)-1);
    local_6_bit_mask = ((1<<local_5_bit_size)-1);
    local_7__local_115 = 1;
    local_8__last116 = local_2_min_digits;
    while ((local_7__local_115 <= local_8__last116))
    {
      ArrayList_of_Char__add__Char(local_3_buffer,NumberConversions__to_digit__Int32(context,((SlagInt32)(local_0_n&((SlagInt64)((SlagInt32)local_6_bit_mask))))));
      local_0_n = sxc_shr(local_0_n,local_5_bit_size);
      ++local_7__local_115;
    }
  }
  else
  {
    if ((local_0_n < 0LL))
    {
      if ((local_0_n == -local_0_n))
      {
        ArrayList_of_Char__add__Char(local_3_buffer,NumberConversions__to_digit__Int32(context,((SlagInt32)(((SlagInt64)((SlagInt32)local_1_base))-sxc_mod(local_0_n,((SlagInt64)((SlagInt32)local_1_base)))))));
        local_0_n = (local_0_n/((SlagInt64)((SlagInt32)local_1_base)));
      }
      local_4_is_negative = true;
      local_0_n = -local_0_n;
    }
    while ((local_0_n > 9LL))
    {
      ArrayList_of_Char__add__Char(local_3_buffer,NumberConversions__to_digit__Int32(context,((SlagInt32)sxc_mod(local_0_n,((SlagInt64)((SlagInt32)local_1_base))))));
      local_0_n = (local_0_n/((SlagInt64)((SlagInt32)local_1_base)));
    }
    ArrayList_of_Char__add__Char(local_3_buffer,NumberConversions__to_digit__Int32(context,((SlagInt32)local_0_n)));
  }
  while ((((ClassArrayList_of_Char*)local_3_buffer)->property_count < local_2_min_digits))
  {
    ArrayList_of_Char__add__Char(local_3_buffer,((SlagChar)48));
  }
  if (local_4_is_negative)
  {
    ArrayList_of_Char__add__Char(local_3_buffer,((SlagChar)45));
  }
  ArrayList_of_Char__reverse(local_3_buffer);
  return StringManager__create_from__ArrayList_of_Char(sxc_singletons[18],local_3_buffer);
}

static SlagObject* NumberConversions__Real64_to_String__Real64_Int32_Int32_Int32_Char( SXCRef context, SlagReal64 local_0_n, SlagInt32 local_1_base, SlagInt32 local_2_whole_digits, SlagInt32 local_3_decimal_digits, SlagChar local_4_fill_char )
{
  SXCRef local_5_result;
  SlagLogical local_6_is_negative;
  SlagReal64 local_7_shift;
  SlagReal64 local_8_whole;
  SlagReal64 local_9_fraction;
  SXCRef local_10_whole_st;
  SXCRef local_11_fraction_st;
  SlagInt32 local_12_whole_count;
  SlagInt32 local_13__local_130;
  SlagInt32 local_14__last131;
  SlagInt32 local_15__local_132;
  SlagInt32 local_16__last133;

  if ((local_0_n == sxc_int64_as_real64(0x7ff0000000000000LL)))
  {
    return Global__format_string__String_Int32_Int32_Char(sxc_singletons[21],str232.value,((local_2_whole_digits+local_3_decimal_digits)+1),0,((SlagChar)32));
  }
  if ((local_0_n == -sxc_int64_as_real64(0x7ff0000000000000LL)))
  {
    return Global__format_string__String_Int32_Int32_Char(sxc_singletons[21],str453.value,((local_2_whole_digits+local_3_decimal_digits)+1),0,((SlagChar)32));
  }
  if (Math__is_NaN__Real64(sxc_singletons[4],local_0_n))
  {
    return Global__format_string__String_Int32_Int32_Char(sxc_singletons[21],str233.value,local_2_whole_digits,0,((SlagChar)32));
  }
  if ((local_3_decimal_digits == 0))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(context,((SlagInt64)local_0_n),local_1_base,1);
  }
  local_5_result = StringBuilder__init(type_ClassStringBuilder.create());
  local_6_is_negative = false;
  if ((local_0_n < sxc_int64_as_real64(0x0000000000000000LL)))
  {
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_5_result)->property_data,((SlagChar)45));
    local_0_n = -local_0_n;
    local_6_is_negative = true;
  }
  local_7_shift = (SlagReal64)pow((double)((SlagReal64)local_1_base),(double)((SlagReal64)local_3_decimal_digits));
  local_0_n *= local_7_shift;
  if ((Math__fractional_part__Real64(sxc_singletons[4],local_0_n) >= sxc_int64_as_real64(0x3fe0000000000000LL)))
  {
    ++local_0_n;
  }
  local_0_n = (floor(local_0_n)/local_7_shift);
  local_8_whole = floor(local_0_n);
  local_9_fraction = (Math__fractional_part__Real64(sxc_singletons[4],local_0_n)*local_7_shift);
  if ((Math__fractional_part__Real64(sxc_singletons[4],local_9_fraction) >= sxc_int64_as_real64(0x3fe0000000000000LL)))
  {
    ++local_9_fraction;
  }
  local_10_whole_st = NumberConversions__Int64_to_String__Int64_Int32_Int32(context,((SlagInt64)local_8_whole),local_1_base,1);
  local_11_fraction_st = NumberConversions__Int64_to_String__Int64_Int32_Int32(context,((SlagInt64)local_9_fraction),local_1_base,1);
  local_12_whole_count = (((SlagString*)local_10_whole_st)->count);
  if (local_6_is_negative)
  {
    ++local_12_whole_count;
  }
  local_13__local_130 = local_12_whole_count;
  local_14__last131 = local_2_whole_digits;
  while ((local_13__local_130 < local_14__last131))
  {
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_5_result)->property_data,local_4_fill_char);
    ++local_13__local_130;
  }
  StringBuilder__print__String(local_5_result,local_10_whole_st);
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_5_result)->property_data,((SlagChar)46));
  local_15__local_132 = (((SlagString*)local_11_fraction_st)->count);
  local_16__last133 = local_3_decimal_digits;
  while ((local_15__local_132 < local_16__last133))
  {
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_5_result)->property_data,((SlagChar)48));
    ++local_15__local_132;
  }
  StringBuilder__print__String(local_5_result,local_11_fraction_st);
  return StringBuilder__to_String(local_5_result);
}

static SlagInt64 NumberConversions__parse_Int64__String_Int32( SXCRef context, SXCRef local_0_st, SlagInt32 local_1_base )
{
  SlagLogical local_2_is_negative;
  SlagLogical local_3_is_first;
  SlagInt64 local_4_num;
  SXCRef local_5__reader135;
  SlagChar local_6_ch;

  if (((((SlagString*)local_0_st)->count) == 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str77.value,str78.value) );
  }
  local_2_is_negative = false;
  local_3_is_first = true;
  local_4_num = 0LL;
  local_5__reader135 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_st,0,-1));
  while (CallFn____Logical(14,local_5__reader135))
  {
    local_6_ch = CallFn____Char(29,local_5__reader135);
    if ((((SlagInt32)local_6_ch) == 45))
    {
      if ((!local_3_is_first || ((((SlagString*)local_0_st)->count) < 2)))
      {
        SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str77.value,local_0_st) );
      }
      local_2_is_negative = true;
      local_3_is_first = false;
      goto next_7913;
    }
    else if ((((SlagInt32)local_6_ch) == 43))
    {
      if ((!local_3_is_first || ((((SlagString*)local_0_st)->count) < 2)))
      {
        SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str77.value,local_0_st) );
      }
      local_3_is_first = false;
      goto next_7913;
    }
    local_3_is_first = false;
    if (!NumberConversions__is_digit__Char_Int32(context,local_6_ch,local_1_base))
    {
      SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str77.value,local_0_st) );
    }
    local_4_num = ((local_4_num*((SlagInt64)((SlagInt32)local_1_base)))+((SlagInt64)((SlagInt32)NumberConversions__to_value__Char(context,local_6_ch))));
    next_7913:;
  }
  end_7913:;
  if (local_2_is_negative)
  {
    local_4_num = -local_4_num;
  }
  return local_4_num;
}

static SlagInt32 NumberConversions__parse_Int32__String_Int32( SXCRef context, SXCRef local_0_st, SlagInt32 local_1_base )
{
  SlagLogical local_2_is_negative;
  SlagLogical local_3_is_first;
  SlagInt32 local_4_num;
  SXCRef local_5__reader142;
  SlagChar local_6_ch;

  if (((((SlagString*)local_0_st)->count) == 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str77.value,str78.value) );
  }
  local_2_is_negative = false;
  local_3_is_first = true;
  local_4_num = 0;
  local_5__reader142 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_st,0,-1));
  while (CallFn____Logical(14,local_5__reader142))
  {
    local_6_ch = CallFn____Char(29,local_5__reader142);
    if ((((SlagInt32)local_6_ch) == 45))
    {
      if ((!local_3_is_first || ((((SlagString*)local_0_st)->count) < 2)))
      {
        SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str77.value,local_0_st) );
      }
      local_2_is_negative = true;
      local_3_is_first = false;
      goto next_4206;
    }
    else if ((((SlagInt32)local_6_ch) == 43))
    {
      if ((!local_3_is_first || ((((SlagString*)local_0_st)->count) < 2)))
      {
        SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str77.value,local_0_st) );
      }
      local_3_is_first = false;
      goto next_4206;
    }
    local_3_is_first = false;
    if (!NumberConversions__is_digit__Char_Int32(context,local_6_ch,local_1_base))
    {
      SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str77.value,local_0_st) );
    }
    local_4_num = ((local_4_num*local_1_base)+NumberConversions__to_value__Char(context,local_6_ch));
    next_4206:;
  }
  end_4206:;
  if (local_2_is_negative)
  {
    local_4_num = -local_4_num;
  }
  return local_4_num;
}

static SlagReal64 NumberConversions__parse_Real64__String( SXCRef context, SXCRef local_0_st )
{
  SlagInt32 local_1_e_index;
  SlagReal64 local_2_base_value;
  SlagReal64 local_3_exponent;
  SlagLogical local_4_is_negative;
  SlagInt32 local_5_decimal;
  SXCRef local_6_left;
  SXCRef local_7_right;
  SlagReal64 local_8_dec;
  SXCRef local_9__reader154;
  SlagChar local_10_ch;
  SlagReal64 local_11_w;
  SXCRef local_12__reader155;
  SlagChar local_13_ch;
  SlagReal64 local_14_r;

  if (((((SlagString*)local_0_st)->count) == 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str77.value,str78.value) );
  }
  local_1_e_index = String__index_of__Char_Int32(local_0_st,((SlagChar)101),0);
  if ((local_1_e_index == -1))
  {
    local_1_e_index = String__index_of__Char_Int32(local_0_st,((SlagChar)69),0);
  }
  if ((local_1_e_index >= 0))
  {
    local_2_base_value = NumberConversions__parse_Real64__String(context,((ClassString*)String__substring__Int32_Int32(local_0_st,0,(local_1_e_index-1))));
    local_3_exponent = NumberConversions__parse_Real64__String(context,((ClassString*)String__substring__Int32(local_0_st,(local_1_e_index+1))));
    return (local_2_base_value*(SlagReal64)pow((double)sxc_int64_as_real64(0x4024000000000000LL),(double)local_3_exponent));
  }
  local_4_is_negative = false;
  if ((((SlagInt32)String__get__Int32(local_0_st,0)) == 45))
  {
    local_4_is_negative = true;
    local_0_st = String__substring__Int32(local_0_st,1);
  }
  if ((String__index_of__Char_Int32(local_0_st,((SlagChar)45),0) >= 0))
  {
    SLAG_THROW( InvalidOperandError__init__String(type_ClassInvalidOperandError.create(),String__opADD__String(str215.value,local_0_st)) );
  }
  local_5_decimal = String__index_of__Char_Int32(local_0_st,((SlagChar)46),0);
  if ((local_5_decimal == -1))
  {
    local_0_st = String__opADD__String(local_0_st,str216.value);
  }
  else if ((local_5_decimal == 0))
  {
    local_0_st = String__opADD__String(str214.value,local_0_st);
  }
  local_5_decimal = String__index_of__Char_Int32(local_0_st,((SlagChar)46),0);
  local_6_left = String__substring__Int32_Int32(local_0_st,0,(local_5_decimal-1));
  local_7_right = String__substring__Int32(local_0_st,(local_5_decimal+1));
  local_8_dec = sxc_int64_as_real64(0x0000000000000000LL);
  local_9__reader154 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),String__reversed(local_7_right),0,-1));
  while (CallFn____Logical(14,local_9__reader154))
  {
    local_10_ch = CallFn____Char(29,local_9__reader154);
    local_8_dec = ((local_8_dec+((SlagReal64)NumberConversions__to_value__Char(context,local_10_ch)))/sxc_int64_as_real64(0x4024000000000000LL));
  }
  local_11_w = sxc_int64_as_real64(0x0000000000000000LL);
  local_12__reader155 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_6_left,0,-1));
  while (CallFn____Logical(14,local_12__reader155))
  {
    local_13_ch = CallFn____Char(29,local_12__reader155);
    local_11_w = ((local_11_w*sxc_int64_as_real64(0x4024000000000000LL))+((SlagReal64)NumberConversions__to_value__Char(context,local_13_ch)));
  }
  local_14_r = (local_11_w+local_8_dec);
  if (local_4_is_negative)
  {
    local_14_r = -local_14_r;
  }
  return local_14_r;
}

void NumberConversions__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* NumberConversions__type_name( SXCRef context )
{
  return str28.value;
}

static SlagObject* ArrayReader_of_LocalVarInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_LocalVarInfo__init__Int32(type_ClassArrayList_of_LocalVarInfo.create(),ArrayReader_of_LocalVarInfo__remaining(context));
  while (ArrayReader_of_LocalVarInfo__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_LocalVarInfo__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_LocalVarInfo__to_String( SXCRef context )
{
  return ArrayList_of_LocalVarInfo__to_String(ArrayReader_of_LocalVarInfo__to_List(context));
}

static SlagObject* ArrayReader_of_LocalVarInfo__init__Collection_of_LocalVarInfo_Array_of_LocalVarInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_8848, SXCRef local_1_data_8847, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_LocalVarInfo*)context)->property_collection), local_0_collection_8848 );
  sxc_write_ref( &(((ClassArrayReader_of_LocalVarInfo*)context)->property_data), local_1_data_8847 );
  ((ClassArrayReader_of_LocalVarInfo*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_LocalVarInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_LocalVarInfo*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_LocalVarInfo*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_LocalVarInfo*)context)->property_collection)))
  {
    ((ClassArrayReader_of_LocalVarInfo*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_LocalVarInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_LocalVarInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_LocalVarInfo*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_LocalVarInfo__create_duplicate( SXCRef context )
{
  return ArrayReader_of_LocalVarInfo__init__Collection_of_LocalVarInfo_Array_of_LocalVarInfo_Int32_Int32(type_ClassArrayReader_of_LocalVarInfo.create(),((ClassArrayReader_of_LocalVarInfo*)context)->property_collection,((ClassArrayReader_of_LocalVarInfo*)context)->property_data,((ClassArrayReader_of_LocalVarInfo*)context)->property_counter,(((ClassArrayReader_of_LocalVarInfo*)context)->property_last_exclusive-((ClassArrayReader_of_LocalVarInfo*)context)->property_counter));
}

static SlagLogical ArrayReader_of_LocalVarInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_LocalVarInfo*)context)->property_counter < ((ClassArrayReader_of_LocalVarInfo*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_LocalVarInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_LocalVarInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_LocalVarInfo__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_LocalVarInfo*)context)->property_last_exclusive-((ClassArrayReader_of_LocalVarInfo*)context)->property_counter);
}

static SlagObject* ArrayReader_of_LocalVarInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassLocalVarInfo**)(((SlagArray*)((ClassArrayReader_of_LocalVarInfo*)context)->property_data)->data))[((ClassArrayReader_of_LocalVarInfo*)context)->property_counter];
  ++(((ClassArrayReader_of_LocalVarInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_LocalVarInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_LocalVarInfo__type_name( SXCRef context )
{
  return str1041.value;
}

static SlagObject* CmdRightXShifted__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdRightXShifted*)context)->property_lhs)),str365.value),CallFn____Object(15,((ClassCmdRightXShifted*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdRightXShifted__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdRightXShifted*)context)->property_lhs)),str365.value),CallFn____Object(35,((ClassCmdRightXShifted*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdRightXShifted__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdRightXShifted*)context)->property_lhs)),str365.value),CallFn____Object(41,((ClassCmdRightXShifted*)context)->property_rhs)),str62.value));
}

void CmdRightXShifted__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdRightXShifted__type_name( SXCRef context )
{
  return str1103.value;
}

static SlagObject* CategoryInfo__init__CmdConstruct( SXCRef context, SXCRef local_0_construct_6909 )
{
  sxc_write_ref( &(((ClassCategoryInfo*)context)->property_construct), local_0_construct_6909 );
  sxc_write_ref( &(((ClassCategoryInfo*)context)->property_t), ((ClassCmdConstruct*)((ClassCategoryInfo*)context)->property_construct)->property_t );
  return context;
}

void CategoryInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CategoryInfo__type_name( SXCRef context )
{
  return str541.value;
}

static SlagObject* CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init__Token_PropertyInfo( SXCRef context, SXCRef local_0_t_9522, SXCRef local_1_var_info_9521 )
{
  sxc_write_ref( &(((ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment*)context)->property_t), local_0_t_9522 );
  sxc_write_ref( &(((ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment*)context)->property_var_info), local_1_var_info_9521 );
  return context;
}

static SlagObject* CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__create_duplicate( SXCRef context )
{
  return CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init__Token_PropertyInfo(type_ClassCmdThisPropertyIncrement.create(),((ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment*)context)->property_t,((ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment*)context)->property_var_info);
}

SlagObject* CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassPropertyInfo*)((ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassPropertyInfo*)((ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment*)context)->property_var_info)->property_index,10))),str62.value));
}

static SlagObject* CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__resolve( SXCRef context )
{
  return context;
}

static void CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_this_property_increment)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassPropertyInfo*)((ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment*)context)->property_var_info)->property_index);
}

void CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__type_name( SXCRef context )
{
  return str1207.value;
}

static SlagObject* CmdThisPropertyIncrement__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1729.value),TypeInfo__x_name(((ClassPropertyInfo*)((ClassCmdThisPropertyIncrement*)context)->property_var_info)->property_type_context)),str1730.value),PropertyInfo__x_name(((ClassCmdThisPropertyIncrement*)context)->property_var_info)),str62.value));
}

static SlagObject* CmdThisPropertyIncrement__to_cs( SXCRef context )
{
  return String__opADD__String(str366.value,PropertyInfo__x_name(((ClassCmdThisPropertyIncrement*)context)->property_var_info));
}

static SlagObject* CmdThisPropertyIncrement__to_java( SXCRef context )
{
  return String__opADD__String(str366.value,PropertyInfo__x_name(((ClassCmdThisPropertyIncrement*)context)->property_var_info));
}

void CmdThisPropertyIncrement__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdThisPropertyIncrement__type_name( SXCRef context )
{
  return str1208.value;
}

SlagObject* HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_RuntimeType.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_RuntimeType*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__type_name( SXCRef context )
{
  return str2044.value;
}

void HashTable_of_String_and_RuntimeType__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_RuntimeType__type_name( SXCRef context )
{
  return str2045.value;
}

static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdMod.create(),((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs));
}

static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,String__opADD__String(str689.value,str391.value));
  if ((local_0_call != NULL))
  {
    return local_0_call;
  }
  SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary(sxc_singletons[8],context);
  return CallFn____Object(28,context);
}

static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__optimize( SXCRef context )
{
  SXCRef local_0_left;
  SXCRef local_1_right;
  SXCRef local_2_left;
  SXCRef local_3_right;
  SXCRef local_4_left;
  SXCRef local_5_right;
  SXCRef local_6_left;
  SXCRef local_7_right;

  if ((sxc_instance_of(((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    if (sxc_instance_of(((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_0_left = ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs;
      local_1_right = ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs;
      ((ClassCmdLiteralInt64*)local_0_left)->property_value = sxc_mod(((ClassCmdLiteralInt64*)local_0_left)->property_value,((ClassCmdLiteralInt64*)local_1_right)->property_value);
      return ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs;
      local_3_right = ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = sxc_mod(((ClassCmdLiteralInt32*)local_2_left)->property_value,((ClassCmdLiteralInt32*)local_3_right)->property_value);
      return ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs,&type_ClassCmdLiteralReal64))
    {
      local_4_left = ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs;
      local_5_right = ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs;
      ((ClassCmdLiteralReal64*)local_4_left)->property_value = sxc_mod(((ClassCmdLiteralReal64*)local_4_left)->property_value,((ClassCmdLiteralReal64*)local_5_right)->property_value);
      return ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs,&type_ClassCmdLiteralReal32))
    {
      local_6_left = ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs;
      local_7_right = ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs;
      ((ClassCmdLiteralReal32*)local_6_left)->property_value = sxc_mod(((ClassCmdLiteralReal32*)local_6_left)->property_value,((ClassCmdLiteralReal32*)local_7_right)->property_value);
      return ((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_mod)->property_ordinal);
  CallFn__(7,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs);
  CallFn__(7,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs);
}

static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_cpp( SXCRef context )
{
  SXCRef local_0_which_7761;
  SXCRef local_1_result;
  SXCRef local_2_which_7762;

  local_0_which_7761 = str391.value;
  if (String__opEQ__String(local_0_which_7761,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1666.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs)),str395.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7761,str392.value))
  {
    local_1_result = str39.value;
    local_2_which_7762 = CallFn____Object(0,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs);
    if ((local_2_which_7762 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      local_1_result = str1667.value;
    }
    else if ((local_2_which_7762 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      local_1_result = str1668.value;
    }
    else if ((local_2_which_7762 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      local_1_result = str1669.value;
    }
    else if ((local_2_which_7762 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      local_1_result = str1670.value;
    }
    return String__opADD__String(local_1_result,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1671.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs)),str1672.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs)),str62.value)));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(15,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs)),str391.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_cs( SXCRef context )
{
  SXCRef local_0_which_7763;

  local_0_which_7763 = str391.value;
  if (String__opEQ__String(local_0_which_7763,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7763,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),TypeInfo__x_name(CallFn____Object(0,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs))),str1925.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(35,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs)),str391.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_java( SXCRef context )
{
  SXCRef local_0_which_7764;

  local_0_which_7764 = str391.value;
  if (String__opEQ__String(local_0_which_7764,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7764,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2011.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(41,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_lhs)),str391.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod*)context)->property_rhs)),str62.value);
  }
}

void CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__type_name( SXCRef context )
{
  return str825.value;
}

static SlagObject* CmdMod__optimize( SXCRef context )
{
  if ((sxc_instance_of(((ClassCmdMod*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdMod*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    if ((sxc_instance_of(((ClassCmdMod*)context)->property_lhs,&type_ClassCmdLiteralInt64) && (((ClassCmdLiteralInt64*)((ClassCmdMod*)context)->property_rhs)->property_value == 0LL)))
    {
      SLAG_THROW( Cmd__error__String(((ClassCmdMod*)context)->property_rhs,str1085.value) );
    }
    else if ((sxc_instance_of(((ClassCmdMod*)context)->property_lhs,&type_ClassCmdLiteralInt32) && (((ClassCmdLiteralInt32*)((ClassCmdMod*)context)->property_rhs)->property_value == 0)))
    {
      SLAG_THROW( Cmd__error__String(((ClassCmdMod*)context)->property_rhs,str1085.value) );
    }
    return CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__optimize(context);
  }
  return context;
}

void CmdMod__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdMod__type_name( SXCRef context )
{
  return str826.value;
}

static SlagObject* BitWriter__init__Writer_of_Char( SXCRef context, SXCRef local_0_dest_10144 )
{
  sxc_write_ref( &(((ClassBitWriter*)context)->property_dest), local_0_dest_10144 );
  return context;
}

static void BitWriter__write__Char( SXCRef context, SlagChar local_0_value )
{
  BitWriter__write__Int32_Int32(context,((SlagInt32)((SlagInt64)((SlagInt32)local_0_value))),8);
}

static void BitWriter__write__Int32_Int32( SXCRef context, SlagInt32 local_0_value, SlagInt32 local_1_n_bits )
{
  local_0_value = ((SlagInt32)(((SlagInt64)((SlagInt32)local_0_value))&((1LL<<local_1_n_bits)-1LL)));
  ((ClassBitWriter*)context)->property_bit_buffer = ((((ClassBitWriter*)context)->property_bit_buffer<<local_1_n_bits)|((SlagInt64)((SlagInt32)local_0_value)));
  ((ClassBitWriter*)context)->property_bit_count += local_1_n_bits;
  while ((((ClassBitWriter*)context)->property_bit_count >= 8))
  {
    CallFn__Char(18,((ClassBitWriter*)context)->property_dest,((SlagChar)((SlagInt32)(sxc_shr(((ClassBitWriter*)context)->property_bit_buffer,(((ClassBitWriter*)context)->property_bit_count-8))&255LL))));
    ((ClassBitWriter*)context)->property_bit_count -= 8;
  }
}

static void BitWriter__write_Int64__Int64( SXCRef context, SlagInt64 local_0_value )
{
  BitWriter__write__Int32_Int32(context,((SlagInt32)sxc_shr(local_0_value,32)),32);
  BitWriter__write__Int32_Int32(context,((SlagInt32)local_0_value),32);
}

void BitWriter__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* BitWriter__type_name( SXCRef context )
{
  return str1371.value;
}

static void ETCWriter__write__Writer_of_Char( SXCRef context, SXCRef local_0_dest )
{
  SXCRef local_1__reader1006;
  SXCRef local_2_filepath;
  SXCRef local_3__reader1007;
  SXCRef local_4_id;
  SXCRef local_5__reader1009;
  SXCRef local_6_type;
  SXCRef local_7__reader1010;
  SXCRef local_8_m;
  SXCRef local_9_sig;
  SXCRef local_10__reader1012;
  SXCRef local_11_pinfo;
  SXCRef local_12__reader1013;
  SXCRef local_13_m;
  SXCRef local_14__reader1014;
  SXCRef local_15_type;
  SXCRef local_16__reader1015;
  SXCRef local_17_st;
  SXCRef local_18__reader1017;
  SXCRef local_19_m;

  sxc_write_ref( &(((ClassETCWriter*)context)->property_out), BitWriter__init__Writer_of_Char(type_ClassBitWriter.create(),local_0_dest) );
  ETCWriter__write_header__String(context,str1372.value);
  BitWriter__write__Int32_Int32(((ClassETCWriter*)context)->property_out,((ClassETCWriter*)context)->property_etc_version,32);
  ETCWriter__write_header__String(context,str1373.value);
  ETCWriter__writeX__Int32(context,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_count);
  local_1__reader1006 = ArrayList_of_String__create_reader(((ClassTokenManager*)sxc_singletons[2])->property_filename_list);
  while (ArrayReader_of_String__has_another(local_1__reader1006))
  {
    local_2_filepath = ArrayReader_of_String__read(local_1__reader1006);
    ETCWriter__write_utf8__String(context,File__filename(File__init__String(type_ClassFile.create(),local_2_filepath)));
  }
  ETCWriter__write_header__String(context,str1374.value);
  ETCWriter__writeX__Int32(context,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassStringTable*)((ClassTypeManager*)sxc_singletons[7])->property_identifiers)->property_strings))->property_count);
  local_3__reader1007 = ((AspectReader_of_String*)ArrayList_of_String__create_reader(((ClassStringTable*)((ClassTypeManager*)sxc_singletons[7])->property_identifiers)->property_strings));
  while (CallFn____Logical(14,local_3__reader1007))
  {
    local_4_id = CallFn____Object(45,local_3__reader1007);
    if ((local_4_id != NULL))
    {
      ETCWriter__write_utf8__String(context,local_4_id);
    }
  }
  ETCWriter__write_header__String(context,str1375.value);
  ETCWriter__writeX__Int32(context,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeManager*)sxc_singletons[7])->property_type_list))->property_count);
  local_5__reader1009 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_5__reader1009))
  {
    local_6_type = ArrayReader_of_TypeInfo__read(local_5__reader1009);
    ETCWriter__write_type_meta__TypeInfo(context,local_6_type);
  }
  ETCWriter__writeX__Int32(context,((ClassTypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_main_class)->property_index);
  ETCWriter__write_header__String(context,str1376.value);
  local_7__reader1010 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_7__reader1010))
  {
    local_8_m = ArrayReader_of_MethodInfo__read(local_7__reader1010);
    local_9_sig = String__from_first__Char(((ClassMethodInfo*)local_8_m)->property_signature,((SlagChar)40));
    if (!GenericHashTable_of_Object_and_Int32__contains__Object(((ClassHashTable_of_String_and_Int32*)((ClassETCWriter*)context)->property_param_info_table)->property_data,local_9_sig))
    {
      GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassETCWriter*)context)->property_param_info_table)->property_data,local_9_sig,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassETCWriter*)context)->property_param_info_list))->property_count);
      ArrayList_of_Object__add__Object(((ClassETCWriter*)context)->property_param_info_list,ParamInfo__init__ArrayList_of_ParameterInfo(type_ClassParamInfo.create(),((ClassMethodInfo*)local_8_m)->property_parameters));
    }
  }
  ETCWriter__writeX__Int32(context,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassETCWriter*)context)->property_param_info_list))->property_count);
  local_10__reader1012 = ArrayList_of_ParamInfo__create_reader(((ClassETCWriter*)context)->property_param_info_list);
  while (ArrayReader_of_ParamInfo__has_another(local_10__reader1012))
  {
    local_11_pinfo = ArrayReader_of_ParamInfo__read(local_10__reader1012);
    ETCWriter__write_param_info__ParamInfo(context,local_11_pinfo);
  }
  ETCWriter__write_header__String(context,str1378.value);
  ETCWriter__writeX__Int32(context,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeManager*)sxc_singletons[7])->property_method_list))->property_count);
  local_12__reader1013 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_12__reader1013))
  {
    local_13_m = ArrayReader_of_MethodInfo__read(local_12__reader1013);
    ETCWriter__write_method_meta__MethodInfo(context,local_13_m);
  }
  ETCWriter__write_header__String(context,str1379.value);
  local_14__reader1014 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_14__reader1014))
  {
    local_15_type = ArrayReader_of_TypeInfo__read(local_14__reader1014);
    ETCWriter__write_type_def__TypeInfo(context,local_15_type);
  }
  ETCWriter__write_header__String(context,str1380.value);
  ETCWriter__writeX__Int32(context,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassStringTable*)((ClassTypeManager*)sxc_singletons[7])->property_strings)->property_strings))->property_count);
  local_16__reader1015 = ((AspectReader_of_String*)ArrayList_of_String__create_reader(((ClassStringTable*)((ClassTypeManager*)sxc_singletons[7])->property_strings)->property_strings));
  while (CallFn____Logical(14,local_16__reader1015))
  {
    local_17_st = CallFn____Object(45,local_16__reader1015);
    if ((local_17_st != NULL))
    {
      ETCWriter__write_utf8__String(context,local_17_st);
    }
  }
  ETCWriter__write_header__String(context,str1381.value);
  local_18__reader1017 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_18__reader1017))
  {
    local_19_m = ArrayReader_of_MethodInfo__read(local_18__reader1017);
    ETCWriter__write_method_body__MethodInfo(context,local_19_m);
  }
}

static void ETCWriter__write_header__String( SXCRef context, SXCRef local_0_header_id )
{
  SXCRef local_1__reader1018;
  SlagChar local_2_ch;

  BitWriter__write__Int32_Int32(((ClassETCWriter*)context)->property_out,((SlagInt32)((SlagInt64)((SlagInt32)((SlagChar)((SlagInt32)(((SlagString*)local_0_header_id)->count)))))),8);
  local_1__reader1018 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_header_id,0,-1));
  while (CallFn____Logical(14,local_1__reader1018))
  {
    local_2_ch = CallFn____Char(29,local_1__reader1018);
    BitWriter__write__Int32_Int32(((ClassETCWriter*)context)->property_out,((SlagInt32)((SlagInt64)((SlagInt32)((SlagChar)((SlagInt32)((SlagInt32)local_2_ch)))))),8);
  }
}

static void ETCWriter__write_type_meta__TypeInfo( SXCRef context, SXCRef local_0_type )
{
  SXCRef local_1__reader1019;
  SXCRef local_2_base_type;

  ETCWriter__writeX__Int32(context,StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,((ClassTypeInfo*)local_0_type)->property_name));
  ETCWriter__writeX__Int32(context,((ClassQualifiers*)((ClassTypeInfo*)local_0_type)->property_qualifiers)->property_flags);
  ETCWriter__writeX__Int32(context,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_0_type)->property_flat_base_types))->property_count);
  local_1__reader1019 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_0_type)->property_flat_base_types);
  while (ArrayReader_of_TypeInfo__has_another(local_1__reader1019))
  {
    local_2_base_type = ArrayReader_of_TypeInfo__read(local_1__reader1019);
    ETCWriter__writeX__Int32(context,((ClassTypeInfo*)local_2_base_type)->property_index);
  }
  if ((((ClassTypeInfo*)local_0_type)->property_element_type != NULL))
  {
    ETCWriter__writeX__Int32(context,((ClassTypeInfo*)((ClassTypeInfo*)local_0_type)->property_element_type)->property_index);
  }
  else
  {
    ETCWriter__writeX__Int32(context,-1);
  }
}

static void ETCWriter__write_param_info__ParamInfo( SXCRef context, SXCRef local_0_pinfo )
{
  SXCRef local_1__reader1021;
  SXCRef local_2_p;

  ETCWriter__writeX__Int32(context,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassParamInfo*)local_0_pinfo)->property_parameters))->property_count);
  local_1__reader1021 = ArrayList_of_ParameterInfo__create_reader(((ClassParamInfo*)local_0_pinfo)->property_parameters);
  while (CallFn____Logical(14,local_1__reader1021))
  {
    local_2_p = CallFn____Object(45,local_1__reader1021);
    ETCWriter__writeX__Int32(context,((ClassTypeInfo*)((ClassParameterInfo*)local_2_p)->property_type)->property_index);
  }
}

static void ETCWriter__write_method_meta__MethodInfo( SXCRef context, SXCRef local_0_m )
{
  SXCRef local_1__reader1023;
  SXCRef local_2_v;

  ETCWriter__writeX__Int32(context,StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,((ClassMethodInfo*)local_0_m)->property_name));
  ETCWriter__writeX__Int32(context,((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags);
  ETCWriter__writeX__Int32(context,((ClassTypeInfo*)((ClassMethodInfo*)local_0_m)->property_type_context)->property_index);
  ETCWriter__writeX__Int32(context,GenericHashTable_of_Object_and_Int32__get__Object(((ClassHashTable_of_String_and_Int32*)((ClassETCWriter*)context)->property_param_info_table)->property_data,String__from_first__Char(((ClassMethodInfo*)local_0_m)->property_signature,((SlagChar)40))));
  if ((((ClassMethodInfo*)local_0_m)->property_return_type == NULL))
  {
    ETCWriter__writeX__Int32(context,-1);
  }
  else
  {
    ETCWriter__writeX__Int32(context,((ClassTypeInfo*)((ClassMethodInfo*)local_0_m)->property_return_type)->property_index);
  }
  ETCWriter__writeX__Int32(context,((ClassMethodInfo*)local_0_m)->property_num_catches);
  ETCWriter__writeX__Int32(context,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_local_vars))->property_count-((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_count));
  local_1__reader1023 = ArrayList_of_LocalVarInfo__from__Int32(((ClassMethodInfo*)local_0_m)->property_local_vars,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_count);
  while (ArrayReader_of_LocalVarInfo__has_another(local_1__reader1023))
  {
    local_2_v = ArrayReader_of_LocalVarInfo__read(local_1__reader1023);
    ETCWriter__writeX__Int32(context,((ClassTypeInfo*)((ClassLocalVarInfo*)local_2_v)->property_type)->property_index);
  }
}

static void ETCWriter__write_type_def__TypeInfo( SXCRef context, SXCRef local_0_type )
{
  SXCRef local_1__reader1024;
  SXCRef local_2_p;
  SXCRef local_3__reader1025;
  SXCRef local_4_m;
  SXCRef local_5__reader1027;
  SXCRef local_6_m;

  ETCWriter__writeX__Int32(context,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_0_type)->property_properties))->property_count);
  local_1__reader1024 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_0_type)->property_properties);
  while (CallFn____Logical(14,local_1__reader1024))
  {
    local_2_p = CallFn____Object(45,local_1__reader1024);
    ETCWriter__writeX__Int32(context,((ClassTypeInfo*)((ClassPropertyInfo*)local_2_p)->property_type)->property_index);
    ETCWriter__writeX__Int32(context,StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_identifiers,((ClassPropertyInfo*)local_2_p)->property_name));
  }
  ETCWriter__writeX__Int32(context,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_0_type)->property_methods))->property_count);
  local_3__reader1025 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_0_type)->property_methods);
  while (ArrayReader_of_MethodInfo__has_another(local_3__reader1025))
  {
    local_4_m = ArrayReader_of_MethodInfo__read(local_3__reader1025);
    ETCWriter__writeX__Int32(context,((ClassMethodInfo*)local_4_m)->property_index);
  }
  if ((((ClassTypeInfo*)local_0_type)->property_dispatch_table != NULL))
  {
    ETCWriter__writeX__Int32(context,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_0_type)->property_dispatch_table))->property_count);
    local_5__reader1027 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_0_type)->property_dispatch_table);
    while (ArrayReader_of_MethodInfo__has_another(local_5__reader1027))
    {
      local_6_m = ArrayReader_of_MethodInfo__read(local_5__reader1027);
      if ((local_6_m != NULL))
      {
        ETCWriter__writeX__Int32(context,((ClassMethodInfo*)local_6_m)->property_index);
      }
      else
      {
        ETCWriter__writeX__Int32(context,-1);
      }
    }
  }
  else
  {
    ETCWriter__writeX__Int32(context,0);
  }
}

static void ETCWriter__write_method_body__MethodInfo( SXCRef context, SXCRef local_0_m )
{
  sxc_write_ref( &(((ClassETCWriter*)context)->property_this_method), local_0_m );
  sxc_write_ref( &(((ClassETCWriter*)context)->property_this_type), ((ClassMethodInfo*)local_0_m)->property_type_context );
  if ((((((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0) && (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassMethodInfo*)local_0_m)->property_body)->property_statements))->property_count != 0)))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassMethodInfo*)local_0_m)->property_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1382.value),((ClassMethodInfo*)local_0_m)->property_full_signature),str1383.value)))) );
  }
  CmdStatementList__write_etc(((ClassMethodInfo*)local_0_m)->property_body);
}

static void ETCWriter__writeX__Int32( SXCRef context, SlagInt32 local_0_n )
{
  ++local_0_n;
  if (((local_0_n < 0) || (local_0_n >= 268435456)))
  {
    BitWriter__write__Int32_Int32(((ClassETCWriter*)context)->property_out,((SlagInt32)((SlagInt64)((SlagInt32)((SlagChar)((SlagInt32)240))))),8);
    BitWriter__write__Int32_Int32(((ClassETCWriter*)context)->property_out,local_0_n,32);
  }
  else if ((local_0_n <= 127))
  {
    BitWriter__write__Int32_Int32(((ClassETCWriter*)context)->property_out,((SlagInt32)((SlagInt64)((SlagInt32)((SlagChar)((SlagInt32)local_0_n))))),8);
  }
  else if ((local_0_n <= 16383))
  {
    BitWriter__write__Int32_Int32(((ClassETCWriter*)context)->property_out,(32768|local_0_n),16);
  }
  else if ((local_0_n <= 2097151))
  {
    BitWriter__write__Int32_Int32(((ClassETCWriter*)context)->property_out,(12582912|local_0_n),24);
  }
  else
  {
    BitWriter__write__Int32_Int32(((ClassETCWriter*)context)->property_out,(-536870912|local_0_n),32);
  }
}

static void ETCWriter__write_utf8__String( SXCRef context, SXCRef local_0_st )
{
  SXCRef local_1_utf8;
  SXCRef local_2__reader1031;
  SlagChar local_3_ch;

  local_1_utf8 = ETCWriter__string_to_utf8__String(context,local_0_st);
  ETCWriter__writeX__Int32(context,(((SlagString*)local_0_st)->count));
  local_2__reader1031 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_1_utf8,0,-1));
  while (CallFn____Logical(14,local_2__reader1031))
  {
    local_3_ch = CallFn____Char(29,local_2__reader1031);
    BitWriter__write__Int32_Int32(((ClassETCWriter*)context)->property_out,((SlagInt32)((SlagInt64)((SlagInt32)((SlagChar)((SlagInt32)((SlagInt32)local_3_ch)))))),8);
  }
}

static SlagObject* ETCWriter__string_to_utf8__String( SXCRef context, SXCRef local_0_st )
{
  SXCRef local_1_result;
  SXCRef local_2__reader1032;
  SlagChar local_3_ch;

  local_1_result = StringBuilder__init(type_ClassStringBuilder.create());
  local_2__reader1032 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_st,0,-1));
  while (CallFn____Logical(14,local_2__reader1032))
  {
    local_3_ch = CallFn____Char(29,local_2__reader1032);
    if ((((SlagInt32)local_3_ch) < 128))
    {
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_result)->property_data,local_3_ch);
    }
    else if ((((SlagInt32)local_3_ch) < 2048))
    {
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_result)->property_data,((SlagChar)((SlagInt32)((sxc_shr(((SlagInt32)local_3_ch),6)&31)|192))));
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_result)->property_data,((SlagChar)((SlagInt32)((((SlagInt32)local_3_ch)&63)|128))));
    }
    else
    {
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_result)->property_data,((SlagChar)((SlagInt32)((sxc_shr(((SlagInt32)local_3_ch),12)&15)|224))));
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_result)->property_data,((SlagChar)((SlagInt32)((sxc_shr(((SlagInt32)local_3_ch),6)&63)|128))));
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_1_result)->property_data,((SlagChar)((SlagInt32)((((SlagInt32)local_3_ch)&63)|128))));
    }
  }
  return StringBuilder__to_String(local_1_result);
}

static void ETCWriter__write_source_position__Token( SXCRef context, SXCRef local_0_t )
{
  if ((local_0_t == NULL))
  {
    return;
  }
  if ((((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_0_t)->property_file_index]))) != ((ClassETCWriter*)context)->property_cur_filename))
  {
    ((ClassETCWriter*)context)->property_cur_line = ((SlagInt32)(((ClassToken*)local_0_t)->property_pos.property_line));
    ETCWriter__writeX__Int32(context,((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_set_filename_and_line)->property_ordinal);
    ETCWriter__writeX__Int32(context,((ClassToken*)local_0_t)->property_file_index);
    ETCWriter__writeX__Int32(context,((ClassETCWriter*)context)->property_cur_line);
  }
  else if ((((SlagInt32)(((ClassToken*)local_0_t)->property_pos.property_line)) != ((ClassETCWriter*)context)->property_cur_line))
  {
    if ((((SlagInt32)(((ClassToken*)local_0_t)->property_pos.property_line)) == (((ClassETCWriter*)context)->property_cur_line+1)))
    {
      ++(((ClassETCWriter*)context)->property_cur_line);
      ETCWriter__writeX__Int32(context,((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_inc_line)->property_ordinal);
    }
    else
    {
      ((ClassETCWriter*)context)->property_cur_line = ((SlagInt32)(((ClassToken*)local_0_t)->property_pos.property_line));
      ETCWriter__writeX__Int32(context,((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_set_line)->property_ordinal);
      ETCWriter__writeX__Int32(context,((ClassETCWriter*)context)->property_cur_line);
    }
  }
}

static void ETCWriter__write_structure_id__CmdStructure( SXCRef context, SXCRef local_0_cmd )
{
  if (((ClassCmdStructure*)local_0_cmd)->property_referenced)
  {
    ETCWriter__writeX__Int32(context,((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_structure_id)->property_ordinal);
    ETCWriter__writeX__Int32(context,((ClassCmdStructure*)local_0_cmd)->property_id);
  }
}

void ETCWriter__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassETCWriter*)context)->property_etc_version = 537985281;
  sxc_write_ref( &(((ClassETCWriter*)context)->property_platform), str122.value );
  sxc_write_ref( &(((ClassETCWriter*)context)->property_param_info_table), HashTableBase_of_String_and_Int32_and_Object_and_Int32__init__Int32_Real64(type_ClassHashTable_of_String_and_Int32.create(),512,sxc_int64_as_real64(0x4008000000000000LL)) );
  sxc_write_ref( &(((ClassETCWriter*)context)->property_param_info_list), ArrayList_of_ParamInfo__init__Int32(type_ClassArrayList_of_ParamInfo.create(),512) );
}

SlagObject* ETCWriter__type_name( SXCRef context )
{
  return str1370.value;
}

SlagObject* HashTableBase_of_Int32_and_String_and_Int32_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object*)context)->property_data), GenericHashTable_of_Int32_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Int32_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_Int32_and_String_and_Int32_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object*)context)->property_data), GenericHashTable_of_Int32_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Int32_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_Int32_and_String_and_Int32_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_Int32_and_String_and_Int32_and_Object__init__Int32_Real64(type_ClassHashTable_of_Int32_and_String.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Int32_and_Object*)((ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Int32_and_Object*)((ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Int32_and_Object__add__GenericHashTable_of_Int32_and_Object(((ClassHashTable_of_Int32_and_String*)local_0_new_table)->property_data,((ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_Int32_and_String_and_Int32_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Int32_and_Object*)HashTableMappingReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object(type_ClassHashTableMappingReader_of_Int32_and_Object.create(),ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader(((ClassGenericHashTable_of_Int32_and_Object*)((ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object*)context)->property_data)->property_bins)))));
}

static SlagObject* HashTableBase_of_Int32_and_String_and_Int32_and_Object__create_reader( SXCRef context )
{
  return ((AspectReader_of_String*)CoerceReader_of_String__init__Reader_of_Object(type_ClassCoerceReader_of_String.create(),((AspectReader_of_Object*)HashTableValueReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object(type_ClassHashTableValueReader_of_Int32_and_Object.create(),ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader(((ClassGenericHashTable_of_Int32_and_Object*)((ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_Int32_and_String_and_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_Int32_and_String_and_Int32_and_Object__type_name( SXCRef context )
{
  return str209.value;
}

void HashTable_of_Int32_and_String__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_Int32_and_String__type_name( SXCRef context )
{
  return str210.value;
}

SlagObject* TypeMapping__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassTypeMapping*)context)->property_old_name),str552.value),((ClassTypeMapping*)context)->property_new_name));
}

void TypeMapping__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* TypeMapping__type_name( SXCRef context )
{
  return str553.value;
}

static SlagInt32 CoerceReader_of_String__available( SXCRef context )
{
  if (CallFn____Logical(14,((ClassCoerceReader_of_String*)context)->property_src))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* CoerceReader_of_String__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_String__init__Int32(type_ClassArrayList_of_String.create(),CoerceReader_of_String__available(context));
  while (CallFn____Logical(14,((ClassCoerceReader_of_String*)context)->property_src))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,((ClassString*)CallFn____Object(45,((ClassCoerceReader_of_String*)context)->property_src)));
  }
  return local_0_result_list;
}

SlagObject* CoerceReader_of_String__to_String( SXCRef context )
{
  return ((ClassString*)ArrayList_of_String__format__String_String(CoerceReader_of_String__to_List(context),str63.value,str64.value));
}

static SlagObject* CoerceReader_of_String__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_5332 )
{
  sxc_write_ref( &(((ClassCoerceReader_of_String*)context)->property_src), local_0_src_5332 );
  return context;
}

static SlagLogical CoerceReader_of_String__has_another( SXCRef context )
{
  return CallFn____Logical(14,((ClassCoerceReader_of_String*)context)->property_src);
}

static SlagObject* CoerceReader_of_String__read( SXCRef context )
{
  return ((ClassString*)CallFn____Object(45,((ClassCoerceReader_of_String*)context)->property_src));
}

void CoerceReader_of_String__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CoerceReader_of_String__type_name( SXCRef context )
{
  return str362.value;
}

SlagObject* NoNextValueError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassNoNextValueError*)context)->property_message), str118.value );
  return context;
}

SlagObject* NoNextValueError__init__String( SXCRef context, SXCRef local_0_message_3671 )
{
  sxc_write_ref( &(((ClassNoNextValueError*)context)->property_message), local_0_message_3671 );
  return context;
}

void NoNextValueError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* NoNextValueError__type_name( SXCRef context )
{
  return str119.value;
}

static SlagObject* Mapping_of_Object_and_Int32__init__Object_Int32( SXCRef context, SXCRef local_0_key_5012, SlagInt32 local_1_value_5011 )
{
  sxc_write_ref( &(((ClassMapping_of_Object_and_Int32*)context)->property_key), local_0_key_5012 );
  ((ClassMapping_of_Object_and_Int32*)context)->property_value = local_1_value_5011;
  return context;
}

SlagObject* Mapping_of_Object_and_Int32__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Object_and_Int32*)context)->property_key)),str41.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMapping_of_Object_and_Int32*)context)->property_value,10))));
}

void Mapping_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_Object_and_Int32__type_name( SXCRef context )
{
  return str178.value;
}

static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdXor.create(),((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs));
}

static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,String__opADD__String(str689.value,str385.value));
  if ((local_0_call != NULL))
  {
    return local_0_call;
  }
  SlagAnalyzer__cast_operands_to_standard_integer_or_logical__CmdBinary(sxc_singletons[8],context);
  return CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__optimize(context);
}

static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__optimize( SXCRef context )
{
  SXCRef local_0_left;
  SXCRef local_1_right;
  SXCRef local_2_left;
  SXCRef local_3_right;
  SXCRef local_4_left;
  SXCRef local_5_right;

  if ((sxc_instance_of(((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    if (sxc_instance_of(((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_0_left = ((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs;
      local_1_right = ((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs;
      ((ClassCmdLiteralInt64*)local_0_left)->property_value = (((ClassCmdLiteralInt64*)local_0_left)->property_value^((ClassCmdLiteralInt64*)local_1_right)->property_value);
      return ((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs;
      local_3_right = ((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = (((ClassCmdLiteralInt32*)local_2_left)->property_value^((ClassCmdLiteralInt32*)local_3_right)->property_value);
      return ((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs,&type_ClassCmdLiteralLogical))
    {
      local_4_left = ((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs;
      local_5_right = ((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs;
      ((ClassCmdLiteralLogical*)local_4_left)->property_value = (((ClassCmdLiteralLogical*)local_4_left)->property_value^((ClassCmdLiteralLogical*)local_5_right)->property_value);
      return ((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_xor)->property_ordinal);
  CallFn__(7,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs);
  CallFn__(7,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs);
}

static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cpp( SXCRef context )
{
  SXCRef local_0_which_7791;

  local_0_which_7791 = str385.value;
  if (String__opEQ__String(local_0_which_7791,str385.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs)),str392.value),CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs)),str385.value),CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cs( SXCRef context )
{
  SXCRef local_0_which_7792;

  local_0_which_7792 = str385.value;
  if (String__opEQ__String(local_0_which_7792,str385.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs)),str392.value),CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs)),str385.value),CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_java( SXCRef context )
{
  SXCRef local_0_which_7793;

  local_0_which_7793 = str385.value;
  if (String__opEQ__String(local_0_which_7793,str385.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs)),str392.value),CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_lhs)),str385.value),CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor*)context)->property_rhs)),str62.value);
  }
}

void CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__type_name( SXCRef context )
{
  return str833.value;
}

static SlagInt32 CoerceReader_of_MethodInfo__available( SXCRef context )
{
  if (CallFn____Logical(14,((ClassCoerceReader_of_MethodInfo*)context)->property_src))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* CoerceReader_of_MethodInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_MethodInfo__init__Int32(type_ClassArrayList_of_MethodInfo.create(),CoerceReader_of_MethodInfo__available(context));
  while (CallFn____Logical(14,((ClassCoerceReader_of_MethodInfo*)context)->property_src))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,((ClassMethodInfo*)CallFn____Object(45,((ClassCoerceReader_of_MethodInfo*)context)->property_src)));
  }
  return local_0_result_list;
}

SlagObject* CoerceReader_of_MethodInfo__to_String( SXCRef context )
{
  return ArrayList_of_MethodInfo__to_String(CoerceReader_of_MethodInfo__to_List(context));
}

static SlagObject* CoerceReader_of_MethodInfo__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_6949 )
{
  sxc_write_ref( &(((ClassCoerceReader_of_MethodInfo*)context)->property_src), local_0_src_6949 );
  return context;
}

static SlagLogical CoerceReader_of_MethodInfo__has_another( SXCRef context )
{
  return CallFn____Logical(14,((ClassCoerceReader_of_MethodInfo*)context)->property_src);
}

static SlagObject* CoerceReader_of_MethodInfo__read( SXCRef context )
{
  return ((ClassMethodInfo*)CallFn____Object(45,((ClassCoerceReader_of_MethodInfo*)context)->property_src));
}

void CoerceReader_of_MethodInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CoerceReader_of_MethodInfo__type_name( SXCRef context )
{
  return str573.value;
}

SlagObject* Mapping_of_String_and_String__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_String*)context)->property_key),str41.value),((ClassMapping_of_String_and_String*)context)->property_value));
}

void Mapping_of_String_and_String__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_String__type_name( SXCRef context )
{
  return str980.value;
}

static SlagObject* CmdIf__init__Token_Int32_Cmd( SXCRef context, SXCRef local_0_t_7393, SlagInt32 local_1_id_7392, SXCRef local_2_condition_7391 )
{
  sxc_write_ref( &(((ClassCmdIf*)context)->property_t), local_0_t_7393 );
  ((ClassCmdIf*)context)->property_id = local_1_id_7392;
  sxc_write_ref( &(((ClassCmdIf*)context)->property_condition), local_2_condition_7391 );
  return context;
}

static SlagObject* CmdIf__init__Token_Int32_Cmd_CmdStatementList( SXCRef context, SXCRef local_0_t_7397, SlagInt32 local_1_id_7396, SXCRef local_2_condition_7395, SXCRef local_3_body_7394 )
{
  sxc_write_ref( &(((ClassCmdIf*)context)->property_t), local_0_t_7397 );
  ((ClassCmdIf*)context)->property_id = local_1_id_7396;
  sxc_write_ref( &(((ClassCmdIf*)context)->property_condition), local_2_condition_7395 );
  sxc_write_ref( &(((ClassCmdIf*)context)->property_body), local_3_body_7394 );
  return context;
}

static SlagObject* CmdIf__create_duplicate( SXCRef context )
{
  SXCRef local_0_result;
  SXCRef local_1__reader2524;
  SXCRef local_2_elif;

  local_0_result = CmdIf__init__Token_Int32_Cmd_CmdStatementList(type_ClassCmdIf.create(),((ClassCmdIf*)context)->property_t,((ClassCmdIf*)context)->property_id,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdIf*)context)->property_condition),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdIf*)context)->property_body));
  local_1__reader2524 = ArrayList_of_CmdElseIf__create_reader(((ClassCmdIf*)context)->property_elseifs);
  while (ArrayReader_of_CmdElseIf__has_another(local_1__reader2524))
  {
    local_2_elif = ArrayReader_of_CmdElseIf__read(local_1__reader2524);
    ArrayList_of_Object__add__Object(((ClassCmdIf*)local_0_result)->property_elseifs,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_2_elif));
  }
  sxc_write_ref( &(((ClassCmdIf*)local_0_result)->property_else_cmd), ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdIf*)context)->property_else_cmd) );
  return local_0_result;
}

SlagObject* CmdIf__to_String( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader2525;
  SXCRef local_2_elseif;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CmdIf__type_name(context)),str294.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdIf*)context)->property_id,10))),str747.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdIf*)context)->property_condition)),str62.value)));
  TextWriter__print__Object(local_0_buffer,((ClassCmdIf*)context)->property_body);
  local_1__reader2525 = ArrayList_of_CmdElseIf__create_reader(((ClassCmdIf*)context)->property_elseifs);
  while (ArrayReader_of_CmdElseIf__has_another(local_1__reader2525))
  {
    local_2_elseif = ArrayReader_of_CmdElseIf__read(local_1__reader2525);
    TextWriter__print__Object(local_0_buffer,local_2_elseif);
  }
  if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
  {
    TextWriter__println__String(local_0_buffer,str297.value);
    TextWriter__print__Object(local_0_buffer,((ClassCmdIf*)context)->property_else_cmd);
  }
  TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str720.value),CmdIf__type_name(context)),str294.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdIf*)context)->property_id,10)))));
  return StringBuilder__to_String(local_0_buffer);
}

static SlagObject* CmdIf__resolve( SXCRef context )
{
  SXCRef local_0__reader2530;
  SXCRef local_1_e;

  CmdStructure__remap_id(context);
  sxc_write_ref( &(((ClassCmdIf*)context)->property_condition), CallFn____Object(16,((ClassCmdIf*)context)->property_condition) );
  SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdIf*)context)->property_condition,NULL);
  CmdStatementList__resolve(((ClassCmdIf*)context)->property_body);
  local_0__reader2530 = ArrayList_of_CmdElseIf__create_reader(((ClassCmdIf*)context)->property_elseifs);
  while (ArrayReader_of_CmdElseIf__has_another(local_0__reader2530))
  {
    local_1_e = ArrayReader_of_CmdElseIf__read(local_0__reader2530);
    CmdElseIf__resolve(local_1_e);
  }
  if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
  {
    CmdStatementList__resolve(((ClassCmdIf*)context)->property_else_cmd);
    SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdIf*)context)->property_condition,NULL);
  }
  return CmdIf__optimize(context);
}

static SlagObject* CmdIf__optimize( SXCRef context )
{
  SXCRef local_0_new_head;
  SlagInt32 local_1_index;

  for (;;)
  {
    next_9049:;
    if (sxc_instance_of(((ClassCmdIf*)context)->property_condition,&type_ClassCmdLiteralLogical))
    {
      if (((ClassCmdLiteralLogical*)((ClassCmdIf*)context)->property_condition)->property_value)
      {
        return CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdBlock.create(),((ClassCmdIf*)context)->property_t,((ClassCmdIf*)context)->property_id,((ClassCmdIf*)context)->property_body);
      }
      else
      {
        if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdIf*)context)->property_elseifs))->property_count != 0))
        {
          local_0_new_head = ((ClassCmdElseIf*)((ClassCmdElseIf*)ArrayList_of_Object__remove__Int32(((ClassCmdIf*)context)->property_elseifs,0)));
          sxc_write_ref( &(((ClassCmdIf*)context)->property_condition), ((ClassCmdElseIf*)local_0_new_head)->property_condition );
          sxc_write_ref( &(((ClassCmdIf*)context)->property_body), ((ClassCmdElseIf*)local_0_new_head)->property_body );
          goto next_9049;
        }
        else if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
        {
          return CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdBlock.create(),((ClassCmdIf*)context)->property_t,((ClassCmdIf*)context)->property_id,((ClassCmdIf*)context)->property_else_cmd);
        }
        else
        {
          return NULL;
        }
      }
    }
    local_1_index = 0;
    while ((local_1_index < ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdIf*)context)->property_elseifs))->property_count))
    {
      if (sxc_instance_of(((ClassCmdElseIf*)((ClassCmdElseIf*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdIf*)context)->property_elseifs))->property_data)->data))[local_1_index])))->property_condition,&type_ClassCmdLiteralLogical))
      {
        if (((ClassCmdLiteralLogical*)((ClassCmdElseIf*)((ClassCmdElseIf*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdIf*)context)->property_elseifs))->property_data)->data))[local_1_index])))->property_condition)->property_value)
        {
          sxc_write_ref( &(((ClassCmdIf*)context)->property_else_cmd), ((ClassCmdElseIf*)((ClassCmdElseIf*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdIf*)context)->property_elseifs))->property_data)->data))[local_1_index])))->property_body );
          ArrayList_of_CmdElseIf__discard_from__Int32(((ClassCmdIf*)context)->property_elseifs,local_1_index);
          return context;
        }
        else
        {
          ArrayList_of_Object__remove__Int32(((ClassCmdIf*)context)->property_elseifs,local_1_index);
          goto next_9053;
        }
      }
      ++local_1_index;
      next_9053:;
    }
    end_9053:;
    return context;
  }
  end_9049:;
}

static SlagObject* CmdIf__finalize_calls( SXCRef context )
{
  SXCRef local_0__reader2539;
  SXCRef local_1_e;

  sxc_write_ref( &(((ClassCmdIf*)context)->property_condition), CallFn____Object(42,((ClassCmdIf*)context)->property_condition) );
  CmdStatementList__finalize_calls(((ClassCmdIf*)context)->property_body);
  local_0__reader2539 = ArrayList_of_CmdElseIf__create_reader(((ClassCmdIf*)context)->property_elseifs);
  while (ArrayReader_of_CmdElseIf__has_another(local_0__reader2539))
  {
    local_1_e = ArrayReader_of_CmdElseIf__read(local_0__reader2539);
    CmdElseIf__finalize_calls(local_1_e);
  }
  if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
  {
    CmdStatementList__finalize_calls(((ClassCmdIf*)context)->property_else_cmd);
  }
  return context;
}

static void CmdIf__finalize_structure_info( SXCRef context )
{
  SXCRef local_0__reader2541;
  SXCRef local_1_e;

  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
  CallFn__(21,((ClassCmdIf*)context)->property_condition);
  CmdStatementList__finalize_structure_info(((ClassCmdIf*)context)->property_body);
  local_0__reader2541 = ArrayList_of_CmdElseIf__create_reader(((ClassCmdIf*)context)->property_elseifs);
  while (ArrayReader_of_CmdElseIf__has_another(local_0__reader2541))
  {
    local_1_e = ArrayReader_of_CmdElseIf__read(local_0__reader2541);
    CmdElseIf__finalize_structure_info(local_1_e);
  }
  if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
  {
    CmdStatementList__finalize_structure_info(((ClassCmdIf*)context)->property_else_cmd);
  }
  if (GenericHashTable_of_Int32_and_Int32__contains__Int32(((ClassHashSet_of_Int32*)((ClassContext*)sxc_singletons[10])->property_referenced_structures)->property_data,((ClassCmdIf*)context)->property_id))
  {
    ((ClassCmdIf*)context)->property_referenced = true;
  }
}

static void CmdIf__group_dynamic_methods( SXCRef context )
{
  SXCRef local_0__reader2544;
  SXCRef local_1_e;

  CallFn__(38,((ClassCmdIf*)context)->property_condition);
  CmdStatementList__group_dynamic_methods(((ClassCmdIf*)context)->property_body);
  local_0__reader2544 = ArrayList_of_CmdElseIf__create_reader(((ClassCmdIf*)context)->property_elseifs);
  while (ArrayReader_of_CmdElseIf__has_another(local_0__reader2544))
  {
    local_1_e = ArrayReader_of_CmdElseIf__read(local_0__reader2544);
    CmdElseIf__group_dynamic_methods(local_1_e);
  }
  if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
  {
    CmdStatementList__group_dynamic_methods(((ClassCmdIf*)context)->property_else_cmd);
  }
}

static SlagObject* CmdIf__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  SXCRef local_1__reader2546;
  SXCRef local_2_e;

  sxc_write_ref( &(((ClassCmdIf*)context)->property_condition), CallFn__CmdList__Object(1,((ClassCmdIf*)context)->property_condition,local_0_arg_list) );
  CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdIf*)context)->property_body)->property_statements))->property_data)->data))[0]))),local_0_arg_list);
  local_1__reader2546 = ArrayList_of_CmdElseIf__create_reader(((ClassCmdIf*)context)->property_elseifs);
  while (ArrayReader_of_CmdElseIf__has_another(local_1__reader2546))
  {
    local_2_e = ArrayReader_of_CmdElseIf__read(local_1__reader2546);
    CmdElseIf__to_inline__CmdList(local_2_e,local_0_arg_list);
  }
  if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
  {
    CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdIf*)context)->property_else_cmd)->property_statements))->property_data)->data))[0]))),local_0_arg_list);
  }
  return context;
}

static void CmdIf__write_etc( SXCRef context )
{
  SlagInt32 local_0_num_elseifs;
  SXCRef local_1__reader2868;
  SXCRef local_2_e;

  ETCWriter__write_structure_id__CmdStructure(sxc_singletons[13],context);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_if)->property_ordinal);
  local_0_num_elseifs = (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdIf*)context)->property_elseifs))->property_count+1);
  if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
  {
    local_0_num_elseifs = -local_0_num_elseifs;
  }
  ETCWriter__writeX__Int32(sxc_singletons[13],local_0_num_elseifs);
  CallFn__(7,((ClassCmdIf*)context)->property_condition);
  CmdStatementList__write_etc(((ClassCmdIf*)context)->property_body);
  local_1__reader2868 = ArrayList_of_CmdElseIf__create_reader(((ClassCmdIf*)context)->property_elseifs);
  while (ArrayReader_of_CmdElseIf__has_another(local_1__reader2868))
  {
    local_2_e = ArrayReader_of_CmdElseIf__read(local_1__reader2868);
    CmdElseIf__write_etc(local_2_e);
  }
  if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
  {
    CmdStatementList__write_etc(((ClassCmdIf*)context)->property_else_cmd);
  }
}

static SlagObject* CmdIf__to_cpp( SXCRef context )
{
  SXCRef local_0__reader2870;
  SXCRef local_1_e;

  CPPWriter__println__String(sxc_singletons[11],String__opADD__String(String__opADD__String(str1636.value,CallFn____Object(15,((ClassCmdIf*)context)->property_condition)),str62.value));
  CPPWriter__println__String(sxc_singletons[11],str247.value);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
  CmdStatementList__to_cpp(((ClassCmdIf*)context)->property_body);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
  CPPWriter__println__String(sxc_singletons[11],str397.value);
  local_0__reader2870 = ArrayList_of_CmdElseIf__create_reader(((ClassCmdIf*)context)->property_elseifs);
  while (ArrayReader_of_CmdElseIf__has_another(local_0__reader2870))
  {
    local_1_e = ArrayReader_of_CmdElseIf__read(local_0__reader2870);
    CmdElseIf__to_cpp(local_1_e);
  }
  if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
  {
    CPPWriter__println__String(sxc_singletons[11],str297.value);
    CPPWriter__println__String(sxc_singletons[11],str247.value);
    ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
    CmdStatementList__to_cpp(((ClassCmdIf*)context)->property_else_cmd);
    ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
    CPPWriter__println__String(sxc_singletons[11],str397.value);
  }
  CPPWriter__write_end_id__CmdStructure(sxc_singletons[11],context);
  return NULL;
}

static SlagObject* CmdIf__to_cs( SXCRef context )
{
  SXCRef local_0__reader2872;
  SXCRef local_1_e;

  CSWriter__println__String(sxc_singletons[28],String__opADD__String(String__opADD__String(str1636.value,CallFn____Object(35,((ClassCmdIf*)context)->property_condition)),str62.value));
  CSWriter__println__String(sxc_singletons[28],str247.value);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent+2);
  CmdStatementList__to_cs(((ClassCmdIf*)context)->property_body);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent-2);
  CSWriter__println__String(sxc_singletons[28],str397.value);
  local_0__reader2872 = ArrayList_of_CmdElseIf__create_reader(((ClassCmdIf*)context)->property_elseifs);
  while (ArrayReader_of_CmdElseIf__has_another(local_0__reader2872))
  {
    local_1_e = ArrayReader_of_CmdElseIf__read(local_0__reader2872);
    CmdElseIf__to_cs(local_1_e);
  }
  if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
  {
    CSWriter__println__String(sxc_singletons[28],str297.value);
    CSWriter__println__String(sxc_singletons[28],str247.value);
    ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent+2);
    CmdStatementList__to_cs(((ClassCmdIf*)context)->property_else_cmd);
    ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent-2);
    CSWriter__println__String(sxc_singletons[28],str397.value);
  }
  CSWriter__write_end_id__CmdStructure(sxc_singletons[28],context);
  return NULL;
}

static SlagObject* CmdIf__to_java( SXCRef context )
{
  SXCRef local_0__reader2874;
  SXCRef local_1_e;

  JavaWriter__write_end_id__CmdStructure(sxc_singletons[19],context);
  JavaWriter__println__String(sxc_singletons[19],String__opADD__String(String__opADD__String(str1636.value,CallFn____Object(41,((ClassCmdIf*)context)->property_condition)),str62.value));
  JavaWriter__println__String(sxc_singletons[19],str247.value);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
  CmdStatementList__to_java(((ClassCmdIf*)context)->property_body);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
  JavaWriter__println__String(sxc_singletons[19],str397.value);
  local_0__reader2874 = ArrayList_of_CmdElseIf__create_reader(((ClassCmdIf*)context)->property_elseifs);
  while (ArrayReader_of_CmdElseIf__has_another(local_0__reader2874))
  {
    local_1_e = ArrayReader_of_CmdElseIf__read(local_0__reader2874);
    CmdElseIf__to_java(local_1_e);
  }
  if ((((ClassCmdIf*)context)->property_else_cmd != NULL))
  {
    JavaWriter__println__String(sxc_singletons[19],str297.value);
    JavaWriter__println__String(sxc_singletons[19],str247.value);
    ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
    CmdStatementList__to_java(((ClassCmdIf*)context)->property_else_cmd);
    ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
    JavaWriter__println__String(sxc_singletons[19],str397.value);
  }
  return NULL;
}

void CmdIf__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassCmdIf*)context)->property_elseifs), ArrayList_of_CmdElseIf__init__Int32(type_ClassArrayList_of_CmdElseIf.create(),1) );
}

SlagObject* CmdIf__type_name( SXCRef context )
{
  return str746.value;
}

static SlagObject* CmdRemoveCurrent__init__Token_Int32( SXCRef context, SXCRef local_0_t_7707, SlagInt32 local_1_id_7706 )
{
  sxc_write_ref( &(((ClassCmdRemoveCurrent*)context)->property_t), local_0_t_7707 );
  ((ClassCmdRemoveCurrent*)context)->property_id = local_1_id_7706;
  return context;
}

static SlagObject* CmdRemoveCurrent__create_duplicate( SXCRef context )
{
  return CmdRemoveCurrent__init__Token_Int32(type_ClassCmdRemoveCurrent.create(),((ClassCmdRemoveCurrent*)context)->property_t,((ClassCmdRemoveCurrent*)context)->property_id);
}

static SlagObject* CmdRemoveCurrent__resolve( SXCRef context )
{
  return CmdAssign__resolve(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),((ClassCmdRemoveCurrent*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdRemoveCurrent*)context)->property_t,String__opADD__String(str1236.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdRemoveCurrent*)context)->property_id,10))),NULL),CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdRemoveCurrent*)context)->property_t,false)));
}

void CmdRemoveCurrent__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdRemoveCurrent__type_name( SXCRef context )
{
  return str807.value;
}

static SlagObject* File__init__String( SXCRef context, SXCRef local_0_filepath_3672 )
{
  sxc_write_ref( &(((ClassFile*)context)->property_filepath), local_0_filepath_3672 );
  return context;
}

static SlagLogical File__exists( SXCRef context )
{
  SLAG_PUSH_REF( context );
  File__exists();
  return SLAG_POP_LOGICAL();
}

static SlagLogical File__is_directory( SXCRef context )
{
  SLAG_PUSH_REF( context );
  File__is_directory();
  return SLAG_POP_LOGICAL();
}

static SlagObject* File__path( SXCRef context )
{
  SlagInt32 local_0_i1;
  SlagInt32 local_1_i2;

  if (File__is_directory(context))
  {
    return ((ClassFile*)context)->property_filepath;
  }
  local_0_i1 = String__last_index_of__Char_Int32(((ClassFile*)context)->property_filepath,((SlagChar)47),-1);
  local_1_i2 = String__last_index_of__Char_Int32(((ClassFile*)context)->property_filepath,((SlagChar)92),-1);
  if (((local_0_i1 == -1) && (local_1_i2 == -1)))
  {
    return str38.value;
  }
  if ((local_0_i1 == -1))
  {
    return String__substring__Int32_Int32(((ClassFile*)context)->property_filepath,0,(local_1_i2-1));
  }
  if ((local_1_i2 == -1))
  {
    return String__substring__Int32_Int32(((ClassFile*)context)->property_filepath,0,(local_0_i1-1));
  }
  if ((local_0_i1 > local_1_i2))
  {
    return String__substring__Int32_Int32(((ClassFile*)context)->property_filepath,0,(local_0_i1-1));
  }
  else
  {
    return String__substring__Int32_Int32(((ClassFile*)context)->property_filepath,0,(local_1_i2-1));
  }
}

static SlagObject* File__filename( SXCRef context )
{
  SlagInt32 local_0_i1;
  SlagInt32 local_1_i2;

  if (File__is_directory(context))
  {
    return str39.value;
  }
  local_0_i1 = String__last_index_of__Char_Int32(((ClassFile*)context)->property_filepath,((SlagChar)47),-1);
  local_1_i2 = String__last_index_of__Char_Int32(((ClassFile*)context)->property_filepath,((SlagChar)92),-1);
  if (((local_0_i1 == -1) && (local_1_i2 == -1)))
  {
    return ((ClassFile*)context)->property_filepath;
  }
  if ((local_0_i1 == -1))
  {
    return String__substring__Int32(((ClassFile*)context)->property_filepath,(local_1_i2+1));
  }
  if ((local_1_i2 == -1))
  {
    return String__substring__Int32(((ClassFile*)context)->property_filepath,(local_0_i1+1));
  }
  if ((local_0_i1 > local_1_i2))
  {
    return String__substring__Int32(((ClassFile*)context)->property_filepath,(local_0_i1+1));
  }
  else
  {
    return String__substring__Int32(((ClassFile*)context)->property_filepath,(local_1_i2+1));
  }
}

SlagObject* File__to_String( SXCRef context )
{
  return ((ClassFile*)context)->property_filepath;
}

static SlagObject* File__absolute_filepath( SXCRef context )
{
  SLAG_PUSH_REF( context );
  File__absolute_filepath();
  return SLAG_POP_REF();
}

static SlagObject* File__directory_listing( SXCRef context )
{
  SXCRef local_0_list;

  local_0_list = ArrayList_of_String__init(type_ClassArrayList_of_String.create());
  File__directory_listing__ArrayList_of_String(context,local_0_list);
  return local_0_list;
}

static void File__directory_listing__ArrayList_of_String( SXCRef context, SXCRef local_0_list )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_list );
  File__directory_listing__ArrayList_of_String();
}

static SlagObject* File__directory_listing__Int32( SXCRef context, SlagInt32 local_0_flags )
{
  SXCRef local_1_entries;
  SlagLogical local_2_no_hidden;
  SlagInt32 local_3_recursive_flags;
  SXCRef local_4_work_list;
  SXCRef local_5__reader422;
  SXCRef local_6_filename;
  SXCRef local_7_file;
  SXCRef local_8_prefix;
  SXCRef local_9__reader425;
  SXCRef local_10_child;
  SXCRef local_11__list426;
  SlagInt32 local_12__count426;
  SlagInt32 local_13__write_pos426;
  SlagInt32 local_14__read_pos426;
  SlagLogical local_15__kept426;
  SXCRef local_16__reader426;
  SXCRef local_17_filename;
  SXCRef local_19_abs_path;
  SlagInt32 local_20_index;
  SlagInt32 local_21__count429;

  local_1_entries = File__directory_listing(context);
  local_2_no_hidden = ((local_0_flags&((ClassFileManager*)sxc_singletons[16])->property_ignore_hidden) != 0);
  if (((local_0_flags&((ClassFileManager*)sxc_singletons[16])->property_recursive) != 0))
  {
    local_3_recursive_flags = ((ClassFileManager*)sxc_singletons[16])->property_recursive;
    if (local_2_no_hidden)
    {
      local_3_recursive_flags += ((ClassFileManager*)sxc_singletons[16])->property_ignore_hidden;
    }
    local_4_work_list = ArrayList_of_String__init__Int32(type_ClassArrayList_of_String.create(),Math__max__Int32_Int32(sxc_singletons[4],(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_entries))->property_count<<1),10));
    local_5__reader422 = ArrayList_of_String__create_reader(local_1_entries);
    while (ArrayReader_of_String__has_another(local_5__reader422))
    {
      local_6_filename = ArrayReader_of_String__read(local_5__reader422);
      if ((local_2_no_hidden && (((SlagInt32)String__get__Int32(local_6_filename,0)) == 46)))
      {
        goto next_7048;
      }
      ArrayList_of_Object__add__Object(local_4_work_list,local_6_filename);
      local_7_file = File__init__String(type_ClassFile.create(),String__opADD__String(String__opADD__Char(((ClassFile*)context)->property_filepath,FileManager__directory_separator(sxc_singletons[16])),local_6_filename));
      if (File__is_directory(local_7_file))
      {
        local_8_prefix = String__opADD__Char(local_6_filename,FileManager__directory_separator(sxc_singletons[16]));
        local_9__reader425 = ArrayList_of_String__create_reader(File__directory_listing__Int32(local_7_file,local_3_recursive_flags));
        while (ArrayReader_of_String__has_another(local_9__reader425))
        {
          local_10_child = ArrayReader_of_String__read(local_9__reader425);
          ArrayList_of_Object__add__Object(local_4_work_list,String__opADD__String(local_8_prefix,local_10_child));
        }
      }
      next_7048:;
    }
    end_7048:;
    ArrayList_of_String__copy_from__Readable_of_String(local_1_entries,local_4_work_list);
  }
  else if (local_2_no_hidden)
  {
    local_11__list426 = local_1_entries;
    local_12__count426 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_11__list426))->property_count;
    local_13__write_pos426 = 0;
    local_14__read_pos426 = 0;
    local_15__kept426 = false;
    SLAG_TRY
    {
      local_16__reader426 = ArrayList_of_String__create_reader(local_11__list426);
      while (ArrayReader_of_String__has_another(local_16__reader426))
      {
        local_17_filename = ArrayReader_of_String__read(local_16__reader426);
        if (local_15__kept426)
        {
          ++local_13__write_pos426;
        }
        else
        {
          local_15__kept426 = true;
        }
        sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_11__list426))->property_data)->data))+local_13__write_pos426, local_17_filename );
        ++local_14__read_pos426;
        if ((((SlagInt32)String__get__Int32(local_17_filename,0)) == 46))
        {
          local_15__kept426 = false;
        }
      }
      if (local_15__kept426)
      {
        ++local_13__write_pos426;
      }
      ArrayList_of_Object__discard__Int32_Int32(local_11__list426,local_13__write_pos426,(local_14__read_pos426-1));
    }
    SLAG_CATCH(_err19)
    {
      SlagTypeInfo* _err19_type = _err19->type;
      if (_err19_type->instance_of(&type_ClassException))
      {
        SXCRef local_18__err7067 = _err19;
        if (local_15__kept426)
        {
          ++local_13__write_pos426;
        }
        ArrayList_of_Object__discard__Int32_Int32(local_11__list426,local_13__write_pos426,(local_14__read_pos426-1));
        SLAG_THROW( local_18__err7067 );
      }
      else
      {
        SLAG_THROW(_err19);
      }
    }
  }
  if (!((local_0_flags&((ClassFileManager*)sxc_singletons[16])->property_absolute) != 0))
  {
    return local_1_entries;
  }
  local_19_abs_path = String__opADD__Char(File__absolute_filepath(context),FileManager__directory_separator(sxc_singletons[16]));
  {
    local_20_index = 0;
    local_21__count429 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_entries))->property_count;
    while ((local_20_index < local_21__count429))
    {
      sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_entries))->property_data)->data))+local_20_index, String__opADD__String(local_19_abs_path,((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_1_entries))->property_data)->data))[local_20_index]))) );
      ++local_20_index;
    }
  }
  return local_1_entries;
}

void File__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* File__type_name( SXCRef context )
{
  return str124.value;
}

static void SlagCompiler__print_usage( SXCRef context )
{
  Global__println__String(sxc_singletons[21],String__opADD__String(str132.value,((ClassSlagCompiler*)context)->property_version));
  Global__println__String(sxc_singletons[21],str133.value);
  Global__println__String(sxc_singletons[21],str134.value);
  Global__println__String(sxc_singletons[21],str135.value);
  Global__println__String(sxc_singletons[21],str136.value);
  Global__println__String(sxc_singletons[21],str137.value);
  Global__println__String(sxc_singletons[21],str138.value);
  Global__println__String(sxc_singletons[21],str139.value);
  Global__println__String(sxc_singletons[21],str140.value);
  Global__println__String(sxc_singletons[21],str141.value);
}

SlagObject* SlagCompiler__init( SXCRef context )
{
  SXCRef local_0_exe_path;

  SLAG_TRY
  {
    local_0_exe_path = File__path(File__init__String(type_ClassFile.create(),System__exe_filepath(sxc_singletons[0])));
    ArrayList_of_Object__add__Object(((ClassSlagCompiler*)context)->property_source_dirs,local_0_exe_path);
    if (File__exists(File__init__String(type_ClassFile.create(),String__opADD__String(local_0_exe_path,str128.value))))
    {
      ArrayList_of_Object__add__Object(((ClassSlagCompiler*)context)->property_source_dirs,String__opADD__String(local_0_exe_path,str128.value));
      ArrayList_of_Object__add__Object(((ClassSlagCompiler*)context)->property_source_dirs,String__opADD__String(local_0_exe_path,str129.value));
    }
    SlagCompiler__process_args(context);
  }
  SLAG_CATCH(_err20)
  {
    SlagTypeInfo* _err20_type = _err20->type;
    if (_err20_type->instance_of(&type_ClassCompilerError))
    {
      SXCRef local_1_err = _err20;
      Global__println__String(sxc_singletons[21],ArrayList_of_String__format__String_String(String__word_wrap__Int32(((ClassCompilerError*)local_1_err)->property_message,66),str63.value,str64.value));
      System__exit_program__Int32_String(sxc_singletons[0],1,NULL);
    }
    else if (_err20_type->instance_of(&type_ClassSlagError))
    {
      SXCRef local_2_err = _err20;
      Errors__add__SlagError(sxc_singletons[38],local_2_err);
      Errors__print(sxc_singletons[38]);
      System__exit_program__Int32_String(sxc_singletons[0],1,NULL);
    }
    else if (_err20_type->instance_of(&type_ClassError))
    {
      SXCRef local_3_err = _err20;
      Global__println__String(sxc_singletons[21],str2034.value);
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassErrors*)sxc_singletons[38])->property_errors))->property_count != 0))
      {
        Errors__print(sxc_singletons[38]);
      }
      else
      {
        Global__println__Object(sxc_singletons[21],local_3_err);
      }
      System__exit_program__Int32_String(sxc_singletons[0],1,NULL);
    }
    else
    {
      SLAG_THROW(_err20);
    }
  }
  return context;
}

static void SlagCompiler__process_args( SXCRef context )
{
  SXCRef local_0_args;
  SXCRef local_1__reader4;
  SXCRef local_2_arg;
  SXCRef local_3_which_5;
  SXCRef local_4__reader8;
  SXCRef local_5_path;
  SXCRef local_6_dir;
  SXCRef local_7_def;
  SXCRef local_8_def_id;
  SXCRef local_9_def_value;
  SXCRef local_10_f;
  SXCRef local_11_exe_path;
  SlagInt32 local_12_index;
  SlagInt32 local_13__count30;
  SXCRef local_14__reader31;
  SXCRef local_15_filename;

  local_0_args = ArrayList_of_String__create_reader(((ClassGlobal*)sxc_singletons[21])->property_command_line_args);
  local_1__reader4 = local_0_args;
  while (ArrayReader_of_String__has_another(local_1__reader4))
  {
    local_2_arg = ArrayReader_of_String__read(local_1__reader4);
    local_3_which_5 = local_2_arg;
    if ((String__opEQ__String(local_3_which_5,str130.value) || String__opEQ__String(local_3_which_5,str131.value)))
    {
      SlagCompiler__print_usage(context);
      return;
    }
    else if (String__opEQ__String(local_3_which_5,str142.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        sxc_write_ref( &(((ClassSlagCompiler*)context)->property_help_type), ArrayReader_of_String__read(local_0_args) );
        ((ClassSlagCompiler*)context)->property_quiet = true;
      }
      else
      {
        SlagCompiler__print_usage(context);
        return;
      }
    }
    else if (String__opEQ__String(local_3_which_5,str143.value))
    {
      ((ClassSlagCompiler*)context)->property_thorough = true;
    }
    else if (String__opEQ__String(local_3_which_5,str144.value))
    {
      ((ClassSlagCompiler*)context)->property_quiet = true;
    }
    else if (String__opEQ__String(local_3_which_5,str145.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        local_4__reader8 = ArrayList_of_String__create_reader(String__split__Char(ArrayReader_of_String__read(local_0_args),((SlagChar)59)));
        while (ArrayReader_of_String__has_another(local_4__reader8))
        {
          local_5_path = ArrayReader_of_String__read(local_4__reader8);
          local_6_dir = File__init__String(type_ClassFile.create(),local_5_path);
          if (File__exists(local_6_dir))
          {
            ArrayList_of_Object__add__Object(((ClassSlagCompiler*)context)->property_source_dirs,File__absolute_filepath(local_6_dir));
          }
        }
      }
      else
      {
        SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str147.value) );
      }
    }
    else if (String__opEQ__String(local_3_which_5,str148.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        local_7_def = ArrayReader_of_String__read(local_0_args);
        if ((String__index_of__Char_Int32(local_7_def,((SlagChar)58),0) >= 0))
        {
          local_8_def_id = String__before_first__Char(local_7_def,((SlagChar)58));
          local_9_def_value = String__after_first__Char(local_7_def,((SlagChar)58));
          SlagScannerManager__add_define__String_String(sxc_singletons[20],local_8_def_id,local_9_def_value);
        }
        else
        {
          SlagScannerManager__add_define__String_String(sxc_singletons[20],local_7_def,local_7_def);
        }
      }
      else
      {
        SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str407.value) );
      }
    }
    else if (String__opEQ__String(local_3_which_5,str408.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        sxc_write_ref( &(((ClassSlagCompiler*)context)->property_platform), String__to_uppercase(ArrayReader_of_String__read(local_0_args)) );
      }
      else
      {
        SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str409.value) );
      }
    }
    else if (String__opEQ__String(local_3_which_5,str410.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        ArrayList_of_Object__add__Object(((ClassSlagCompiler*)context)->property_includes,ArrayReader_of_String__read(local_0_args));
      }
      else
      {
        SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str411.value) );
      }
    }
    else if (String__opEQ__String(local_3_which_5,str412.value))
    {
      ((ClassSlagCompiler*)context)->property_nostdlib = true;
    }
    else if (String__opEQ__String(local_3_which_5,str413.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        SlagCompiler__set_dest_path__String(context,ArrayReader_of_String__read(local_0_args));
      }
      else
      {
        SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str418.value) );
      }
    }
    else if (String__opEQ__String(local_3_which_5,str419.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        ArrayList_of_Object__add__Object(((ClassSlagCompiler*)context)->property_force_native,ArrayReader_of_String__read(local_0_args));
      }
      else
      {
        SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str420.value) );
      }
    }
    else if (String__opEQ__String(local_3_which_5,str421.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        sxc_write_ref( &(((ClassSlagCompiler*)context)->property_output_name), ArrayReader_of_String__read(local_0_args) );
        if ((((String__index_of__Char_Int32(((ClassSlagCompiler*)context)->property_output_name,((SlagChar)47),0) >= 0) || (String__index_of__Char_Int32(((ClassSlagCompiler*)context)->property_output_name,((SlagChar)92),0) >= 0)) && ((((SlagString*)((ClassSlagCompiler*)context)->property_output_name)->count) > 0)))
        {
          local_10_f = File__init__String(type_ClassFile.create(),((ClassSlagCompiler*)context)->property_output_name);
          SlagCompiler__set_dest_path__String(context,File__path(local_10_f));
          sxc_write_ref( &(((ClassSlagCompiler*)context)->property_output_name), File__filename(local_10_f) );
        }
      }
      else
      {
        SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str422.value) );
      }
    }
    else if (String__opEQ__String(local_3_which_5,str423.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        sxc_write_ref( &(((ClassSlagCompiler*)context)->property_inspect), ArrayReader_of_String__read(local_0_args) );
      }
      else
      {
        SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str424.value) );
      }
    }
    else if (String__opEQ__String(local_3_which_5,str425.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        sxc_write_ref( &(((ClassSlagCompiler*)context)->property_slagdoc_type), ArrayReader_of_String__read(local_0_args) );
      }
      else
      {
        SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str426.value) );
      }
    }
    else if (String__opEQ__String(local_3_which_5,str427.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        local_11_exe_path = ArrayReader_of_String__read(local_0_args);
        if ((String__index_of__Char_Int32(local_11_exe_path,((SlagChar)59),0) >= 0))
        {
          SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str428.value) );
        }
        sxc_write_ref( &(((ClassSlagCompiler*)context)->property_exe_dir), File__init__String(type_ClassFile.create(),local_11_exe_path) );
        if (!File__exists(((ClassSlagCompiler*)context)->property_exe_dir))
        {
          SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str429.value),local_11_exe_path),str417.value))) );
        }
        sxc_write_ref( &(((ClassSlagCompiler*)context)->property_exe_dir), File__init__String(type_ClassFile.create(),File__absolute_filepath(((ClassSlagCompiler*)context)->property_exe_dir)) );
      }
      else
      {
        SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str430.value) );
      }
    }
    else if (String__opEQ__String(local_3_which_5,str431.value))
    {
      sxc_write_ref( &(((ClassSlagCompiler*)context)->property_exe_dir), NULL );
    }
    else if (String__opEQ__String(local_3_which_5,str432.value))
    {
      sxc_write_ref( &(((ClassSlagCompiler*)context)->property_code_target), str121.value );
    }
    else if (String__opEQ__String(local_3_which_5,str433.value))
    {
      sxc_write_ref( &(((ClassSlagCompiler*)context)->property_code_target), str434.value );
    }
    else if (String__opEQ__String(local_3_which_5,str435.value))
    {
      ((ClassCPPWriter*)sxc_singletons[11])->property_use_longjmp = true;
    }
    else if (String__opEQ__String(local_3_which_5,str437.value))
    {
      sxc_write_ref( &(((ClassSlagCompiler*)context)->property_code_target), str438.value );
      ((ClassSlagCompiler*)context)->property_allow_generic = false;
    }
    else if (String__opEQ__String(local_3_which_5,str439.value))
    {
      sxc_write_ref( &(((ClassSlagCompiler*)context)->property_code_target), str440.value );
      ((ClassSlagCompiler*)context)->property_allow_generic = false;
    }
    else if (String__opEQ__String(local_3_which_5,str441.value))
    {
      if (ArrayReader_of_String__has_another(local_0_args))
      {
        sxc_write_ref( &(((ClassSlagCompiler*)context)->property_java_package), ArrayReader_of_String__read(local_0_args) );
      }
      else
      {
        SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str442.value) );
      }
    }
    else
    {
      if (((((SlagString*)local_2_arg)->count) != 0))
      {
        if ((((SlagInt32)String__get__Int32(local_2_arg,0)) == 45))
        {
          SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str443.value),local_2_arg),str444.value))) );
        }
        else
        {
          if (!(ArrayList_of_String__index_of__String_Int32(((ClassSlagCompiler*)context)->property_filenames,local_2_arg,0) >= 0))
          {
            ArrayList_of_Object__add__Object(((ClassSlagCompiler*)context)->property_filenames,local_2_arg);
          }
        }
      }
    }
  }
  SlagScannerManager__add_define__String_String(sxc_singletons[20],str445.value,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str196.value),((ClassSlagCompiler*)context)->property_platform),str196.value)));
  SlagScannerManager__add_define__String_String(sxc_singletons[20],String__opADD__String(str446.value,((ClassSlagCompiler*)context)->property_platform),str237.value);
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassSlagCompiler*)context)->property_filenames))->property_count == 0))
  {
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGlobal*)sxc_singletons[21])->property_command_line_args))->property_count != 0))
    {
      SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str447.value) );
    }
    else
    {
      SlagCompiler__print_usage(context);
      return;
    }
  }
  if (!((ClassSlagCompiler*)context)->property_nostdlib)
  {
    ArrayList_of_Object__add__Object(((ClassSlagCompiler*)context)->property_includes,str448.value);
  }
  {
    local_12_index = 0;
    local_13__count30 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassSlagCompiler*)context)->property_includes))->property_count;
    while ((local_12_index < local_13__count30))
    {
      sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassSlagCompiler*)context)->property_includes))->property_data)->data))+local_12_index, SlagCompiler__find_file__String(context,((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassSlagCompiler*)context)->property_includes))->property_data)->data))[local_12_index]))) );
      ++local_12_index;
    }
  }
  local_14__reader31 = ArrayList_of_String__create_reader(((ClassSlagCompiler*)context)->property_filenames);
  while (ArrayReader_of_String__has_another(local_14__reader31))
  {
    local_15_filename = ArrayReader_of_String__read(local_14__reader31);
    SlagCompiler__compile__String(context,SlagCompiler__find_file__String(context,local_15_filename));
  }
}

static void SlagCompiler__set_dest_path__String( SXCRef context, SXCRef local_0_dest_path )
{
  if ((((ClassSlagCompiler*)context)->property_dest_dir != NULL))
  {
    SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str414.value) );
  }
  if ((String__index_of__Char_Int32(local_0_dest_path,((SlagChar)59),0) >= 0))
  {
    SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),str415.value) );
  }
  sxc_write_ref( &(((ClassSlagCompiler*)context)->property_dest_dir), File__init__String(type_ClassFile.create(),local_0_dest_path) );
  if (!File__exists(((ClassSlagCompiler*)context)->property_dest_dir))
  {
    SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str416.value),local_0_dest_path),str417.value))) );
  }
  sxc_write_ref( &(((ClassSlagCompiler*)context)->property_dest_dir), File__init__String(type_ClassFile.create(),File__absolute_filepath(((ClassSlagCompiler*)context)->property_dest_dir)) );
}

static void SlagCompiler__compile__String( SXCRef context, SXCRef local_0_filename )
{
  SXCRef local_1_outname;
  SXCRef local_2_src;
  SXCRef local_3_dest_dir_name;
  SXCRef local_4_dest;
  SXCRef local_5_timer;
  SXCRef local_6_parser;
  SXCRef local_7__reader37;
  SXCRef local_8_file;
  SlagLogical local_9_success;
  SXCRef local_10_type_name;
  SXCRef local_11_type;
  SXCRef local_12_m;
  SXCRef local_13__reader47;
  SXCRef local_14_sig;
  SXCRef local_15_entry;
  SXCRef local_16_type;
  SXCRef local_17_m;
  SXCRef local_18_which_50;

  local_0_filename = String__before_last__String(local_0_filename,str452.value);
  local_0_filename = String__before_last__String(local_0_filename,str126.value);
  local_0_filename = String__before_last__String(local_0_filename,str449.value);
  local_0_filename = String__opADD__String(local_0_filename,str449.value);
  if ((((ClassSlagCompiler*)context)->property_output_name == NULL))
  {
    sxc_write_ref( &(((ClassSlagCompiler*)context)->property_output_name), local_0_filename );
  }
  local_1_outname = ((ClassSlagCompiler*)context)->property_output_name;
  local_1_outname = String__before_last__String(local_1_outname,str452.value);
  local_1_outname = String__before_last__String(local_1_outname,str126.value);
  local_1_outname = String__before_last__String(local_1_outname,str449.value);
  local_2_src = String__after_last__Char(String__after_last__Char(local_0_filename,((SlagChar)47)),((SlagChar)92));
  local_3_dest_dir_name = str39.value;
  if ((((ClassSlagCompiler*)context)->property_dest_dir != NULL))
  {
    local_3_dest_dir_name = String__opADD__String(File__absolute_filepath(((ClassSlagCompiler*)context)->property_dest_dir),str390.value);
  }
  local_1_outname = String__opADD__String(local_3_dest_dir_name,String__after_last__Char(String__after_last__Char(local_1_outname,((SlagChar)47)),((SlagChar)92)));
  local_1_outname = File__absolute_filepath(File__init__String(type_ClassFile.create(),local_1_outname));
  local_4_dest = String__after_last__Char(String__after_last__Char(local_1_outname,((SlagChar)47)),((SlagChar)92));
  local_5_timer = Stopwatch__init__Logical(type_ClassStopwatch.create(),true);
  local_6_parser = SlagParser__init__TokenReader(type_ClassSlagParser.create(),NULL);
  sxc_write_ref( &(((ClassSlagParser*)local_6_parser)->property_src_paths), ((ClassSlagCompiler*)context)->property_source_dirs );
  ArrayList_of_Object__add__Object(((ClassSlagParser*)local_6_parser)->property_includes,SlagFile__init__Token_String_String(type_ClassSlagFile.create(),NULL,local_0_filename,NULL));
  local_7__reader37 = ArrayList_of_String__create_reader(((ClassSlagCompiler*)context)->property_includes);
  while (ArrayReader_of_String__has_another(local_7__reader37))
  {
    local_8_file = ArrayReader_of_String__read(local_7__reader37);
    ArrayList_of_Object__add__Object(((ClassSlagParser*)local_6_parser)->property_includes,SlagFile__init__Token_String_String(type_ClassSlagFile.create(),NULL,local_8_file,NULL));
  }
  if (!((ClassSlagCompiler*)context)->property_quiet)
  {
    Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str474.value),local_2_src),str225.value)));
  }
  local_9_success = SlagParser__parse_pending(local_6_parser);
  if (local_9_success)
  {
    local_9_success = SlagAnalyzer__analyze_parsed_types(sxc_singletons[8]);
  }
  if (local_9_success)
  {
    if ((((ClassSlagCompiler*)context)->property_help_type != NULL))
    {
      return;
    }
    if ((((ClassSlagCompiler*)context)->property_inspect != NULL))
    {
      if ((String__index_of__String_Int32(((ClassSlagCompiler*)context)->property_inspect,str294.value,0) >= 0))
      {
        local_10_type_name = String__before_first__String(((ClassSlagCompiler*)context)->property_inspect,str294.value);
        if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,local_10_type_name))
        {
          local_11_type = TypeManager__get__String_Token(sxc_singletons[7],local_10_type_name,NULL);
          local_12_m = TypeInfo__find_method__String(local_11_type,String__after_first__String(((ClassSlagCompiler*)context)->property_inspect,str294.value));
          if ((local_12_m != NULL))
          {
            Global__println__Object(sxc_singletons[21],((ClassMethodInfo*)local_12_m)->property_body);
          }
          else
          {
            Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1358.value),((ClassSlagCompiler*)context)->property_inspect),str92.value)));
          }
        }
        else
        {
          Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1359.value),local_10_type_name),str92.value)));
        }
      }
      else
      {
        if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,((ClassSlagCompiler*)context)->property_inspect))
        {
          TypeInfo__display(TypeManager__get__String_Token(sxc_singletons[7],((ClassSlagCompiler*)context)->property_inspect,NULL));
        }
        else
        {
          Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1359.value),((ClassSlagCompiler*)context)->property_inspect),str92.value)));
        }
      }
    }
    local_13__reader47 = ArrayList_of_String__create_reader(((ClassSlagCompiler*)context)->property_force_native);
    while (ArrayReader_of_String__has_another(local_13__reader47))
    {
      local_14_sig = ArrayReader_of_String__read(local_13__reader47);
      local_15_entry = ((ClassMapping_of_String_and_TypeInfo*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,String__before_first__Char(local_14_sig,((SlagChar)58))));
      if ((local_15_entry != NULL))
      {
        local_16_type = ((ClassMapping_of_String_and_TypeInfo*)local_15_entry)->property_value;
        local_17_m = TypeInfo__find_method__String(local_16_type,String__after_first__String(local_14_sig,str294.value));
        if ((local_17_m != NULL))
        {
          sxc_write_ref( &(((ClassMethodInfo*)local_17_m)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_17_m)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))) );
          ArrayList_of_Object__clear(((ClassCmdStatementList*)((ClassMethodInfo*)local_17_m)->property_body)->property_statements);
          ((ClassMethodInfo*)local_17_m)->property_supports_inlining = false;
        }
        else
        {
          Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1364.value),String__after_first__String(local_14_sig,str294.value)),str1123.value),((ClassTypeInfo*)local_16_type)->property_name),str38.value)));
        }
      }
      else
      {
        Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1365.value),String__before_first__Char(local_14_sig,((SlagChar)58))),str92.value)));
      }
    }
    local_18_which_50 = ((ClassSlagCompiler*)context)->property_code_target;
    if (String__opEQ__String(local_18_which_50,str121.value))
    {
      if (!((ClassSlagCompiler*)context)->property_quiet)
      {
        Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1366.value),local_1_outname),str452.value)));
      }
      ETCWriter__write__Writer_of_Char(sxc_singletons[13],((ClassTextWriter*)FileWriter__init__String_Logical(type_ClassFileWriter.create(),((ClassFile*)((ClassFile*)File__init__String(type_ClassFile.create(),String__opADD__String(local_1_outname,str452.value))))->property_filepath,false)));
    }
    else if (String__opEQ__String(local_18_which_50,str434.value))
    {
      CPPWriter__write__String(sxc_singletons[11],local_1_outname);
    }
    else if (String__opEQ__String(local_18_which_50,str438.value))
    {
      CSWriter__write__String(sxc_singletons[28],local_1_outname);
    }
    else if (String__opEQ__String(local_18_which_50,str440.value))
    {
      JavaWriter__write__String(sxc_singletons[19],local_1_outname);
    }
    if (!((ClassSlagCompiler*)context)->property_quiet)
    {
      Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2027.value),Global__to_String__Object(sxc_singletons[21],local_5_timer)),str62.value)));
    }
  }
  else
  {
    Errors__print(sxc_singletons[38]);
    System__exit_program__Int32_String(sxc_singletons[0],1,NULL);
  }
}

static SlagObject* SlagCompiler__find_file__String( SXCRef context, SXCRef local_0_filename )
{
  SXCRef local_1__reader54;
  SXCRef local_2_dir;
  SXCRef local_3_file;

  if (File__exists(File__init__String(type_ClassFile.create(),local_0_filename)))
  {
    return File__absolute_filepath(File__init__String(type_ClassFile.create(),local_0_filename));
  }
  local_1__reader54 = ArrayList_of_String__create_reader(((ClassSlagCompiler*)context)->property_source_dirs);
  while (ArrayReader_of_String__has_another(local_1__reader54))
  {
    local_2_dir = ArrayReader_of_String__read(local_1__reader54);
    local_3_file = File__init__String(type_ClassFile.create(),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_2_dir),str390.value),local_0_filename)));
    if (File__exists(local_3_file))
    {
      return File__absolute_filepath(local_3_file);
    }
  }
  if (!String__ends_with__String(local_0_filename,str449.value))
  {
    return SlagCompiler__find_file__String(context,String__opADD__String(local_0_filename,str449.value));
  }
  SLAG_THROW( Error__init__String(type_ClassCompilerError.create(),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str450.value),local_0_filename),str451.value),String__before_last__String(local_0_filename,str449.value)),str92.value))) );
}

void SlagCompiler__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassSlagCompiler*)context)->property_version), str120.value );
  ((ClassSlagCompiler*)context)->property_byte_alignment = 4;
  sxc_write_ref( &(((ClassSlagCompiler*)context)->property_filenames), ArrayList_of_String__init(type_ClassArrayList_of_String.create()) );
  sxc_write_ref( &(((ClassSlagCompiler*)context)->property_source_dirs), ArrayList_of_String__init(type_ClassArrayList_of_String.create()) );
  sxc_write_ref( &(((ClassSlagCompiler*)context)->property_includes), ArrayList_of_String__init(type_ClassArrayList_of_String.create()) );
  sxc_write_ref( &(((ClassSlagCompiler*)context)->property_code_target), str121.value );
  sxc_write_ref( &(((ClassSlagCompiler*)context)->property_platform), str122.value );
  sxc_write_ref( &(((ClassSlagCompiler*)context)->property_force_native), ArrayList_of_String__init(type_ClassArrayList_of_String.create()) );
  ((ClassSlagCompiler*)context)->property_allow_generic = true;
  sxc_write_ref( &(((ClassSlagCompiler*)context)->property_java_package), str39.value );
}

SlagObject* SlagCompiler__type_name( SXCRef context )
{
  return str2035.value;
}

static SlagObject* ArrayReader_of_PropertyInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_PropertyInfo__init__Int32(type_ClassArrayList_of_PropertyInfo.create(),CallFn____Int32(31,context));
  while (CallFn____Logical(14,context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,CallFn____Object(45,context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_PropertyInfo__to_String( SXCRef context )
{
  return ArrayList_of_PropertyInfo__to_String(ArrayReader_of_PropertyInfo__to_List(context));
}

static SlagObject* ArrayReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_6965, SXCRef local_1_data_6964, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_PropertyInfo*)context)->property_collection), local_0_collection_6965 );
  sxc_write_ref( &(((ClassArrayReader_of_PropertyInfo*)context)->property_data), local_1_data_6964 );
  ((ClassArrayReader_of_PropertyInfo*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_PropertyInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_PropertyInfo*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_PropertyInfo*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_PropertyInfo*)context)->property_collection)))
  {
    ((ClassArrayReader_of_PropertyInfo*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_PropertyInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_PropertyInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_PropertyInfo*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_PropertyInfo__create_duplicate( SXCRef context )
{
  return ArrayReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo_Int32_Int32(type_ClassArrayReader_of_PropertyInfo.create(),((ClassArrayReader_of_PropertyInfo*)context)->property_collection,((ClassArrayReader_of_PropertyInfo*)context)->property_data,((ClassArrayReader_of_PropertyInfo*)context)->property_counter,(((ClassArrayReader_of_PropertyInfo*)context)->property_last_exclusive-((ClassArrayReader_of_PropertyInfo*)context)->property_counter));
}

static SlagLogical ArrayReader_of_PropertyInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_PropertyInfo*)context)->property_counter < ((ClassArrayReader_of_PropertyInfo*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_PropertyInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_PropertyInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_PropertyInfo__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_PropertyInfo*)context)->property_last_exclusive-((ClassArrayReader_of_PropertyInfo*)context)->property_counter);
}

static SlagObject* ArrayReader_of_PropertyInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassPropertyInfo**)(((SlagArray*)((ClassArrayReader_of_PropertyInfo*)context)->property_data)->data))[((ClassArrayReader_of_PropertyInfo*)context)->property_counter];
  ++(((ClassArrayReader_of_PropertyInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_PropertyInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_PropertyInfo__type_name( SXCRef context )
{
  return str575.value;
}

static SlagObject* Array_of_ControlStructureInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_ControlStructureInfo.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_ControlStructureInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_ControlStructureInfo__type_name( SXCRef context )
{
  return str465.value;
}

static SlagObject* ArrayReader_of_ControlStructureInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_ControlStructureInfo__init__Int32(type_ClassArrayList_of_ControlStructureInfo.create(),CallFn____Int32(31,context));
  while (CallFn____Logical(14,context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,CallFn____Object(45,context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_ControlStructureInfo__to_String( SXCRef context )
{
  return ArrayList_of_ControlStructureInfo__to_String(ArrayReader_of_ControlStructureInfo__to_List(context));
}

static SlagObject* ArrayReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_7314, SXCRef local_1_data_7313, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_ControlStructureInfo*)context)->property_collection), local_0_collection_7314 );
  sxc_write_ref( &(((ClassArrayReader_of_ControlStructureInfo*)context)->property_data), local_1_data_7313 );
  ((ClassArrayReader_of_ControlStructureInfo*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_ControlStructureInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_ControlStructureInfo*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_ControlStructureInfo*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_ControlStructureInfo*)context)->property_collection)))
  {
    ((ClassArrayReader_of_ControlStructureInfo*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_ControlStructureInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_ControlStructureInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_ControlStructureInfo*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_ControlStructureInfo__create_duplicate( SXCRef context )
{
  return ArrayReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo_Int32_Int32(type_ClassArrayReader_of_ControlStructureInfo.create(),((ClassArrayReader_of_ControlStructureInfo*)context)->property_collection,((ClassArrayReader_of_ControlStructureInfo*)context)->property_data,((ClassArrayReader_of_ControlStructureInfo*)context)->property_counter,(((ClassArrayReader_of_ControlStructureInfo*)context)->property_last_exclusive-((ClassArrayReader_of_ControlStructureInfo*)context)->property_counter));
}

static SlagLogical ArrayReader_of_ControlStructureInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_ControlStructureInfo*)context)->property_counter < ((ClassArrayReader_of_ControlStructureInfo*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_ControlStructureInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_ControlStructureInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_ControlStructureInfo__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_ControlStructureInfo*)context)->property_last_exclusive-((ClassArrayReader_of_ControlStructureInfo*)context)->property_counter);
}

static SlagObject* ArrayReader_of_ControlStructureInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassControlStructureInfo**)(((SlagArray*)((ClassArrayReader_of_ControlStructureInfo*)context)->property_data)->data))[((ClassArrayReader_of_ControlStructureInfo*)context)->property_counter];
  ++(((ClassArrayReader_of_ControlStructureInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_ControlStructureInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_ControlStructureInfo__type_name( SXCRef context )
{
  return str738.value;
}

static SlagObject* CmdNot__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdNot.create(),((ClassCmdNot*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdNot*)context)->property_operand));
}

static SlagObject* CmdNot__resolve( SXCRef context )
{
  SXCRef local_0_operand_type;

  sxc_write_ref( &(((ClassCmdNot*)context)->property_operand), CallFn____Object(16,((ClassCmdNot*)context)->property_operand) );
  local_0_operand_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdNot*)context)->property_operand);
  local_0_operand_type = SlagAnalyzer__determine_compatible_op_type__Token_TypeInfo_TypeInfo(sxc_singletons[8],((ClassCmdNot*)context)->property_t,local_0_operand_type,local_0_operand_type);
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_operand_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(sxc_singletons[8],((ClassCmdNot*)context)->property_t,local_0_operand_type,((ClassCmdNot*)context)->property_operand,str701.value,NULL);
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_operand_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(sxc_singletons[8],((ClassCmdNot*)context)->property_t,local_0_operand_type,NULL,str701.value,CmdList__init__Cmd(type_ClassCmdList.create(),((ClassCmdNot*)context)->property_operand));
  }
  else
  {
    SlagAnalyzer__require_standard_integer_or_logical__Token_TypeInfo(sxc_singletons[8],((ClassCmdNot*)context)->property_t,local_0_operand_type);
    sxc_write_ref( &(((ClassCmdNot*)context)->property_operand), SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdNot*)context)->property_operand,local_0_operand_type,false) );
    return context;
  }
}

static void CmdNot__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_not)->property_ordinal);
  CallFn__(7,((ClassCmdNot*)context)->property_operand);
}

static SlagObject* CmdNot__to_cpp( SXCRef context )
{
  if (TypeInfo__is_logical(CallFn____Object(0,((ClassCmdNot*)context)->property_operand)))
  {
    return String__opADD__String(str393.value,CallFn____Object(15,((ClassCmdNot*)context)->property_operand));
  }
  else
  {
    return String__opADD__String(str385.value,CallFn____Object(15,((ClassCmdNot*)context)->property_operand));
  }
}

static SlagObject* CmdNot__to_cs( SXCRef context )
{
  if (TypeInfo__is_logical(CallFn____Object(0,((ClassCmdNot*)context)->property_operand)))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1912.value),CallFn____Object(35,((ClassCmdNot*)context)->property_operand)),str62.value));
  }
  else
  {
    return String__opADD__String(str385.value,CallFn____Object(35,((ClassCmdNot*)context)->property_operand));
  }
}

static SlagObject* CmdNot__to_java( SXCRef context )
{
  if (TypeInfo__is_logical(CallFn____Object(0,((ClassCmdNot*)context)->property_operand)))
  {
    return String__opADD__String(str393.value,CallFn____Object(41,((ClassCmdNot*)context)->property_operand));
  }
  else
  {
    return String__opADD__String(str385.value,CallFn____Object(41,((ClassCmdNot*)context)->property_operand));
  }
}

void CmdNot__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdNot__type_name( SXCRef context )
{
  return str671.value;
}

static SlagInt32 BitwiseOperations__left_rotated__Int32_Int32( SXCRef context, SlagInt32 local_0_n, SlagInt32 local_1_bits )
{
  local_0_n = (local_0_n&-1);
  if ((local_1_bits == 0))
  {
    return local_0_n;
  }
  local_0_n = ((local_0_n<<local_1_bits)|(sxc_shr(local_0_n,(32-local_1_bits))&((1<<local_1_bits)-1)));
  return (local_0_n&-1);
}

static SlagInt32 BitwiseOperations__right_rotated__Int32_Int32( SXCRef context, SlagInt32 local_0_n, SlagInt32 local_1_bits )
{
  SlagInt32 local_2_lower_bit_count;

  local_0_n = (local_0_n&-1);
  if ((local_1_bits == 0))
  {
    return local_0_n;
  }
  local_2_lower_bit_count = (32-local_1_bits);
  local_0_n = (((local_0_n>>local_1_bits)&((1<<local_2_lower_bit_count)-1))|(local_0_n<<local_2_lower_bit_count));
  return (local_0_n&-1);
}

static SlagLogical BitwiseOperations__is_power_of_two__Int64( SXCRef context, SlagInt64 local_0_n )
{
  return ((local_0_n&(local_0_n-1LL)) == 0LL);
}

static SlagLogical BitwiseOperations__is_power_of_two__Int32( SXCRef context, SlagInt32 local_0_n )
{
  return ((local_0_n&(local_0_n-1)) == 0);
}

static SlagInt32 BitwiseOperations__min_bits__Int64( SXCRef context, SlagInt64 local_0_n )
{
  SlagInt32 local_1_bits;

  if ((local_0_n < 0LL))
  {
    return 64;
  }
  if ((local_0_n >= 4611686018427387904LL))
  {
    return 63;
  }
  local_1_bits = 1;
  while ((((SlagInt64)((SlagInt32)(1<<local_1_bits))) <= local_0_n))
  {
    ++local_1_bits;
  }
  return local_1_bits;
}

static SlagInt32 BitwiseOperations__min_bits__Int32( SXCRef context, SlagInt32 local_0_n )
{
  SlagInt32 local_1_bits;

  if ((local_0_n < 0))
  {
    return 32;
  }
  if ((local_0_n >= 1073741824))
  {
    return 31;
  }
  local_1_bits = 1;
  while (((1<<local_1_bits) <= local_0_n))
  {
    ++local_1_bits;
  }
  return local_1_bits;
}

static SlagInt32 BitwiseOperations__rounded_up_to_power_of_two__Int32( SXCRef context, SlagInt32 local_0_n )
{
  if (BitwiseOperations__is_power_of_two__Int32(sxc_singletons[15],local_0_n))
  {
    return local_0_n;
  }
  return (1<<BitwiseOperations__min_bits__Int32(sxc_singletons[15],local_0_n));
}

void BitwiseOperations__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* BitwiseOperations__type_name( SXCRef context )
{
  return str6.value;
}

void CmdXor__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdXor__type_name( SXCRef context )
{
  return str834.value;
}

static SlagObject* CmdDuplicate__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdDuplicate.create(),((ClassCmdDuplicate*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdDuplicate*)context)->property_operand));
}

static SlagObject* CmdDuplicate__resolve( SXCRef context )
{
  SXCRef local_0_ref_type;
  SXCRef local_1_result;

  sxc_write_ref( &(((ClassCmdDuplicate*)context)->property_operand), CallFn____Object(16,((ClassCmdDuplicate*)context)->property_operand) );
  local_0_ref_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdDuplicate*)context)->property_operand);
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_ref_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_ref_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_array)->property_flags) != 0))
    {
      return CmdArrayDuplicate__resolve(CmdArrayDuplicate__init__Token_Cmd(type_ClassCmdArrayDuplicate.create(),((ClassCmdDuplicate*)context)->property_t,((ClassCmdDuplicate*)context)->property_operand));
    }
    local_1_result = CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdDuplicate*)context)->property_t,CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdDuplicate*)context)->property_t,((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,str1.value))),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdDuplicate*)context)->property_t,str1251.value,CmdList__init__Cmd(type_ClassCmdList.create(),((ClassCmdDuplicate*)context)->property_operand))));
    return SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],local_1_result,local_0_ref_type,false);
  }
  else
  {
    return ((ClassCmdDuplicate*)context)->property_operand;
  }
}

void CmdDuplicate__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdDuplicate__type_name( SXCRef context )
{
  return str873.value;
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__init__Token_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9543, SXCRef local_1_var_info_9542, SXCRef local_2_operand_9541 )
{
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign*)context)->property_t), local_0_t_9543 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign*)context)->property_var_info), local_1_var_info_9542 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign*)context)->property_operand), local_2_operand_9541 );
  return context;
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__create_duplicate( SXCRef context )
{
  return CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__init__Token_PropertyInfo_Cmd(type_ClassCmdThisPropertyModAndAssign.create(),((ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign*)context)->property_t,((ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign*)context)->property_operand));
}

SlagObject* CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign*)context)->property_var_info)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__resolve( SXCRef context )
{
  return context;
}

static void CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_this_property_mod_and_assign)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign*)context)->property_operand);
}

void CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__type_name( SXCRef context )
{
  return str1219.value;
}

static SlagObject* CmdThisPropertyModAndAssign__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassPropertyInfo*)((ClassCmdThisPropertyModAndAssign*)context)->property_var_info)->property_type_context)),str1730.value),PropertyInfo__x_name(((ClassCmdThisPropertyModAndAssign*)context)->property_var_info)),str1733.value),PropertyInfo__x_name(((ClassCmdThisPropertyModAndAssign*)context)->property_var_info)),str395.value),CallFn____Object(15,((ClassCmdThisPropertyModAndAssign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdThisPropertyModAndAssign__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdThisPropertyModAndAssign*)context)->property_var_info)),str1956.value),PropertyInfo__x_name(((ClassCmdThisPropertyModAndAssign*)context)->property_var_info)),str395.value),CallFn____Object(35,((ClassCmdThisPropertyModAndAssign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdThisPropertyModAndAssign__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdThisPropertyModAndAssign*)context)->property_var_info)),str1956.value),PropertyInfo__x_name(((ClassCmdThisPropertyModAndAssign*)context)->property_var_info)),str395.value),CallFn____Object(41,((ClassCmdThisPropertyModAndAssign*)context)->property_operand)),str62.value));
}

void CmdThisPropertyModAndAssign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdThisPropertyModAndAssign__type_name( SXCRef context )
{
  return str1220.value;
}

static SlagObject* CmdLiteralInt32__init__Token_Int32( SXCRef context, SXCRef local_0_t_7530, SlagInt32 local_1_value_7529 )
{
  sxc_write_ref( &(((ClassCmdLiteralInt32*)context)->property_t), local_0_t_7530 );
  ((ClassCmdLiteralInt32*)context)->property_value = local_1_value_7529;
  return context;
}

static SlagObject* CmdLiteralInt32__create_duplicate( SXCRef context )
{
  return CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdLiteralInt32*)context)->property_t,((ClassCmdLiteralInt32*)context)->property_value);
}

static SlagObject* CmdLiteralInt32__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_int32;
}

SlagObject* CmdLiteralInt32__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)String__after_first__String(CmdLiteralInt32__type_name(context),str758.value))),str61.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdLiteralInt32*)context)->property_value,10))),str62.value));
}

static void CmdLiteralInt32__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_literal_int32)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCmdLiteralInt32*)context)->property_value);
}

static SlagObject* CmdLiteralInt32__to_cpp( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str39.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdLiteralInt32*)context)->property_value,10))));
}

static SlagObject* CmdLiteralInt32__to_cs( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str39.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdLiteralInt32*)context)->property_value,10))));
}

static SlagObject* CmdLiteralInt32__to_java( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str39.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdLiteralInt32*)context)->property_value,10))));
}

void CmdLiteralInt32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLiteralInt32__type_name( SXCRef context )
{
  return str759.value;
}

static SlagObject* CmdCmpNE__to_cpp( SXCRef context )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)CallFn____Object(0,((ClassCmdCmpNE*)context)->property_lhs))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1682.value),CallFn____Object(15,((ClassCmdCmpNE*)context)->property_lhs)),str1676.value),CallFn____Object(15,((ClassCmdCmpNE*)context)->property_rhs)),str1595.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdCmpNE*)context)->property_lhs)),str1683.value),CallFn____Object(15,((ClassCmdCmpNE*)context)->property_rhs)),str62.value));
  }
}

static SlagObject* CmdCmpNE__to_cs( SXCRef context )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)CallFn____Object(0,((ClassCmdCmpNE*)context)->property_lhs))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1682.value),CallFn____Object(35,((ClassCmdCmpNE*)context)->property_lhs)),str1676.value),CallFn____Object(35,((ClassCmdCmpNE*)context)->property_rhs)),str1595.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCmpNE*)context)->property_lhs)),str1683.value),CallFn____Object(35,((ClassCmdCmpNE*)context)->property_rhs)),str62.value));
  }
}

static SlagObject* CmdCmpNE__to_java( SXCRef context )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)CallFn____Object(0,((ClassCmdCmpNE*)context)->property_lhs))->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1682.value),CallFn____Object(41,((ClassCmdCmpNE*)context)->property_lhs)),str1676.value),CallFn____Object(41,((ClassCmdCmpNE*)context)->property_rhs)),str1595.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCmpNE*)context)->property_lhs)),str1683.value),CallFn____Object(41,((ClassCmdCmpNE*)context)->property_rhs)),str62.value));
  }
}

void CmdCmpNE__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpNE__type_name( SXCRef context )
{
  return str888.value;
}

SlagObject* SpecializedComparator_2167__init( SXCRef context )
{
  return context;
}

static SlagLogical SpecializedComparator_2167__a_before_b__MethodInfo_MethodInfo( SXCRef context, SXCRef local_0_a, SXCRef local_1_b )
{
  if (String__opEQ__String(((ClassMethodInfo*)local_0_a)->property_name,str667.value))
  {
    if (String__opEQ__String(((ClassMethodInfo*)local_1_b)->property_name,str667.value))
    {
      return (String__opCMP__String(((ClassMethodInfo*)local_0_a)->property_signature,((ClassMethodInfo*)local_1_b)->property_signature) == -1);
    }
    else
    {
      return true;
    }
  }
  else
  {
    if (String__opEQ__String(((ClassMethodInfo*)local_1_b)->property_name,str667.value))
    {
      return false;
    }
    else
    {
      return (String__opCMP__String(((ClassMethodInfo*)local_0_a)->property_signature,((ClassMethodInfo*)local_1_b)->property_signature) == -1);
    }
  }
}

void SpecializedComparator_2167__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* SpecializedComparator_2167__type_name( SXCRef context )
{
  return str1313.value;
}

SlagObject* ArrayList_of_CmdWhichCase__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count7480;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count7480 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count7480))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassCmdWhichCase*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_CmdWhichCase__init( SXCRef context )
{
  ArrayList_of_CmdWhichCase__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_CmdWhichCase__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_CmdWhichCase*)context)->property_data), type_ClassArray_of_CmdWhichCase.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_CmdWhichCase__create_reader( SXCRef context )
{
  return ArrayReader_of_CmdWhichCase__init__Collection_of_CmdWhichCase_Array_of_CmdWhichCase_Int32_Int32(type_ClassArrayReader_of_CmdWhichCase.create(),context,((ClassArrayList_of_CmdWhichCase*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_CmdWhichCase__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_CmdWhichCase__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_CmdWhichCase__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_CmdWhichCase__add__CmdWhichCase( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_CmdWhichCase*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_CmdWhichCase__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_CmdWhichCase__init__Int32(type_ClassArrayList_of_CmdWhichCase.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_CmdWhichCase*)local_0_dup)->property_data,((ClassArrayList_of_CmdWhichCase*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_CmdWhichCase*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_CmdWhichCase__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_CmdWhichCase__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_CmdWhichCase__type_name( SXCRef context )
{
  return str753.value;
}

static SlagObject* CmdWhich__init__Token_Int32_Cmd_Logical( SXCRef context, SXCRef local_0_t_7503, SlagInt32 local_1_id_7502, SXCRef local_2_expression_7501, SlagLogical local_3_use_is_comparison_7500 )
{
  sxc_write_ref( &(((ClassCmdWhich*)context)->property_t), local_0_t_7503 );
  ((ClassCmdWhich*)context)->property_id = local_1_id_7502;
  sxc_write_ref( &(((ClassCmdWhich*)context)->property_expression), local_2_expression_7501 );
  ((ClassCmdWhich*)context)->property_use_is_comparison = local_3_use_is_comparison_7500;
  return context;
}

static SlagObject* CmdWhich__create_duplicate( SXCRef context )
{
  SXCRef local_0_result;
  SXCRef local_1__reader2821;
  SXCRef local_2_c;

  local_0_result = CmdWhich__init__Token_Int32_Cmd_Logical(type_ClassCmdWhich.create(),((ClassCmdWhich*)context)->property_t,((ClassCmdWhich*)context)->property_id,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdWhich*)context)->property_expression),((ClassCmdWhich*)context)->property_use_is_comparison);
  local_1__reader2821 = ArrayList_of_CmdWhichCase__create_reader(((ClassCmdWhich*)context)->property_cases);
  while (ArrayReader_of_CmdWhichCase__has_another(local_1__reader2821))
  {
    local_2_c = ArrayReader_of_CmdWhichCase__read(local_1__reader2821);
    ArrayList_of_Object__add__Object(((ClassCmdWhich*)local_0_result)->property_cases,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_2_c));
  }
  sxc_write_ref( &(((ClassCmdWhich*)local_0_result)->property_case_others), ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdWhich*)context)->property_case_others) );
  return local_0_result;
}

SlagObject* CmdWhich__to_String( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader2822;
  SXCRef local_2_c;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str755.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdWhich*)context)->property_id,10))),str747.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdWhich*)context)->property_expression)),str62.value)));
  local_1__reader2822 = ArrayList_of_CmdWhichCase__create_reader(((ClassCmdWhich*)context)->property_cases);
  while (ArrayReader_of_CmdWhichCase__has_another(local_1__reader2822))
  {
    local_2_c = ArrayReader_of_CmdWhichCase__read(local_1__reader2822);
    TextWriter__println__Object(local_0_buffer,local_2_c);
  }
  TextWriter__println__String(local_0_buffer,str304.value);
  return StringBuilder__to_String(local_0_buffer);
}

static SlagObject* CmdWhich__resolve( SXCRef context )
{
  SXCRef local_0_var_name;
  SXCRef local_1_expr_type;
  SlagLogical local_2_literal_expr;
  SXCRef local_3_v_info;
  SXCRef local_4_cmds;
  SXCRef local_5_conditionals;
  SXCRef local_6__reader2824;
  SXCRef local_7_c;
  SXCRef local_8_or_terms;
  SXCRef local_9__reader2825;
  SXCRef local_10_term;
  SXCRef local_11_cur_t;
  SXCRef local_12_v;
  SXCRef local_13_cmp;
  SXCRef local_14_range;

  local_0_var_name = String__opADD__String(str1181.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdWhich*)context)->property_id,10)));
  sxc_write_ref( &(((ClassCmdWhich*)context)->property_expression), CallFn____Object(16,((ClassCmdWhich*)context)->property_expression) );
  local_1_expr_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdWhich*)context)->property_expression);
  local_2_literal_expr = sxc_instance_of(((ClassCmdWhich*)context)->property_expression,&type_ClassCmdLiteralPrimitive);
  local_3_v_info = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),((ClassCmdWhich*)context)->property_t,((ClassContext*)sxc_singletons[10])->property_this_method,local_1_expr_type,local_0_var_name,-1);
  LocalVarTable__define__LocalVarInfo(((ClassContext*)sxc_singletons[10])->property_local_var_table,local_3_v_info);
  local_4_cmds = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassCmdWhich*)context)->property_t,2);
  if (!local_2_literal_expr)
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_4_cmds)->property_statements,CmdLocalVarWrite__optimize(CmdLocalVarWrite__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarWrite.create(),((ClassCmdWhich*)context)->property_t,local_3_v_info,((ClassCmdWhich*)context)->property_expression)));
  }
  local_5_conditionals = NULL;
  local_6__reader2824 = ArrayList_of_CmdWhichCase__create_reader(((ClassCmdWhich*)context)->property_cases);
  while (ArrayReader_of_CmdWhichCase__has_another(local_6__reader2824))
  {
    local_7_c = ArrayReader_of_CmdWhichCase__read(local_6__reader2824);
    local_8_or_terms = CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdWhichCase*)local_7_c)->property_t,false);
    local_9__reader2825 = ArrayList_of_Cmd__create_reader(((ClassCmdWhichCase*)local_7_c)->property_values);
    while (CallFn____Logical(14,local_9__reader2825))
    {
      local_10_term = CallFn____Object(45,local_9__reader2825);
      local_11_cur_t = ((ClassCmd*)local_10_term)->property_t;
      local_12_v = NULL;
      if (local_2_literal_expr)
      {
        local_12_v = ((ClassCmdWhich*)context)->property_expression;
      }
      else
      {
        local_12_v = CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_11_cur_t,local_0_var_name,NULL);
      }
      local_13_cmp = NULL;
      if (sxc_instance_of(local_10_term,&type_ClassCmdRange))
      {
        local_14_range = local_10_term;
        {
          if (!sxc_instance_of(local_14_range,&type_ClassCmdRangeLE)) goto unsatisfied_9478;
          if (!(((ClassCmdRange*)local_14_range)->property_increment == NULL)) goto unsatisfied_9478;
          local_13_cmp = CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpGE.create(),local_11_cur_t,local_12_v,((ClassCmdRange*)local_14_range)->property_first);
          local_13_cmp = CmdLazyAnd__init__Token_Cmd_Cmd(type_ClassCmdLazyAnd.create(),local_11_cur_t,local_13_cmp,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpLE.create(),local_11_cur_t,local_12_v,((ClassCmdRange*)local_14_range)->property_last));
          satisfied_9478:;
          goto end_9478;
          unsatisfied_9478:;
          {
            SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_11_cur_t,str1198.value)) );
          }
        }
        end_9478:;
      }
      else
      {
        if (((ClassCmdWhich*)context)->property_use_is_comparison)
        {
          local_13_cmp = CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpIs.create(),local_11_cur_t,local_12_v,local_10_term);
        }
        else
        {
          local_13_cmp = CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpEQ.create(),local_11_cur_t,local_12_v,local_10_term);
        }
      }
      local_8_or_terms = CmdLazyOr__init__Token_Cmd_Cmd(type_ClassCmdLazyOr.create(),((ClassCmdWhichCase*)local_7_c)->property_t,local_8_or_terms,local_13_cmp);
    }
    if ((local_5_conditionals != NULL))
    {
      ArrayList_of_Object__add__Object(((ClassCmdIf*)local_5_conditionals)->property_elseifs,CmdElseIf__init__Token_Cmd_CmdStatementList(type_ClassCmdElseIf.create(),((ClassCmd*)local_8_or_terms)->property_t,local_8_or_terms,((ClassCmdWhichCase*)local_7_c)->property_body));
    }
    else
    {
      local_5_conditionals = CmdIf__init__Token_Int32_Cmd_CmdStatementList(type_ClassCmdIf.create(),((ClassCmd*)local_8_or_terms)->property_t,((ClassCmdWhich*)context)->property_id,local_8_or_terms,((ClassCmdWhichCase*)local_7_c)->property_body);
    }
  }
  if ((local_5_conditionals != NULL))
  {
    sxc_write_ref( &(((ClassCmdIf*)local_5_conditionals)->property_else_cmd), ((ClassCmdWhich*)context)->property_case_others );
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_4_cmds)->property_statements,CmdIf__resolve(local_5_conditionals));
  }
  else if ((((ClassCmdWhich*)context)->property_case_others != NULL))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_4_cmds)->property_statements,CmdStatementList__resolve(((ClassCmdWhich*)context)->property_case_others));
  }
  return local_4_cmds;
}

void CmdWhich__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassCmdWhich*)context)->property_cases), ArrayList_of_CmdWhichCase__init__Int32(type_ClassArrayList_of_CmdWhichCase.create(),1) );
}

SlagObject* CmdWhich__type_name( SXCRef context )
{
  return str756.value;
}

static SlagObject* CmdAs__init__Token_Cmd_TypeInfo( SXCRef context, SXCRef local_0_t_7974, SXCRef local_1_operand_7973, SXCRef local_2_as_type_7972 )
{
  sxc_write_ref( &(((ClassCmdAs*)context)->property_t), local_0_t_7974 );
  sxc_write_ref( &(((ClassCmdAs*)context)->property_operand), local_1_operand_7973 );
  sxc_write_ref( &(((ClassCmdAs*)context)->property_as_type), local_2_as_type_7972 );
  return context;
}

static SlagObject* CmdAs__create_duplicate( SXCRef context )
{
  return CmdAs__init__Token_Cmd_TypeInfo(type_ClassCmdAs.create(),((ClassCmdAs*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdAs*)context)->property_operand),((ClassCmdAs*)context)->property_as_type);
}

static SlagObject* CmdAs__type( SXCRef context )
{
  return ((ClassCmdAs*)context)->property_as_type;
}

SlagObject* CmdAs__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CmdAs__type_name(context)),str61.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdAs*)context)->property_operand)),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdAs*)context)->property_as_type)),str62.value));
}

static SlagObject* CmdAs__resolve( SXCRef context )
{
  SXCRef local_0_operand_type;

  sxc_write_ref( &(((ClassCmdAs*)context)->property_operand), CallFn____Object(16,((ClassCmdAs*)context)->property_operand) );
  local_0_operand_type = CallFn____Object(0,((ClassCmdAs*)context)->property_operand);
  TypeInfo__resolve(((ClassCmdAs*)context)->property_as_type);
  if ((local_0_operand_type == ((ClassCmdAs*)context)->property_as_type))
  {
    return ((ClassCmdAs*)context)->property_operand;
  }
  if ((((((ClassQualifiers*)((ClassTypeInfo*)local_0_operand_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0)^((((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdAs*)context)->property_as_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0)))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmdAs*)context)->property_t,str1256.value)) );
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdAs*)context)->property_as_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
  {
    if ((((ClassCmdAs*)context)->property_as_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      if ((local_0_operand_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
      {
        return context;
      }
      if ((local_0_operand_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
      {
        return CallFn____Object(16,SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdAs*)context)->property_operand,((ClassTypeManager*)sxc_singletons[7])->property_type_real64,false));
      }
      else
      {
        sxc_write_ref( &(((ClassCmdAs*)context)->property_operand), CallFn____Object(16,SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdAs*)context)->property_operand,((ClassTypeManager*)sxc_singletons[7])->property_type_int64,false)) );
        return context;
      }
    }
    else if ((((ClassCmdAs*)context)->property_as_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      if ((local_0_operand_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
      {
        return context;
      }
      if ((local_0_operand_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
      {
        sxc_write_ref( &(((ClassCmdAs*)context)->property_operand), CallFn____Object(16,SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdAs*)context)->property_operand,((ClassTypeManager*)sxc_singletons[7])->property_type_real64,false)) );
        return context;
      }
      else
      {
        return CallFn____Object(16,SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdAs*)context)->property_operand,((ClassTypeManager*)sxc_singletons[7])->property_type_int64,false));
      }
    }
    else if ((((ClassCmdAs*)context)->property_as_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      if ((local_0_operand_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
      {
        return context;
      }
      if ((local_0_operand_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
      {
        return CallFn____Object(16,SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdAs*)context)->property_operand,((ClassTypeManager*)sxc_singletons[7])->property_type_real32,false));
      }
      else
      {
        sxc_write_ref( &(((ClassCmdAs*)context)->property_operand), CallFn____Object(16,SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdAs*)context)->property_operand,((ClassTypeManager*)sxc_singletons[7])->property_type_int32,false)) );
        return context;
      }
    }
    else if ((((ClassCmdAs*)context)->property_as_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      if ((local_0_operand_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
      {
        return context;
      }
      if ((local_0_operand_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
      {
        sxc_write_ref( &(((ClassCmdAs*)context)->property_operand), CallFn____Object(16,SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdAs*)context)->property_operand,((ClassTypeManager*)sxc_singletons[7])->property_type_real32,false)) );
        return context;
      }
      else
      {
        return CallFn____Object(16,SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdAs*)context)->property_operand,((ClassTypeManager*)sxc_singletons[7])->property_type_int32,false));
      }
    }
    else
    {
      return CallFn____Object(16,SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdAs*)context)->property_operand,((ClassCmdAs*)context)->property_as_type,false));
    }
  }
  else
  {
    if (TypeInfo__instance_of__TypeInfo(local_0_operand_type,((ClassCmdAs*)context)->property_as_type))
    {
      return CmdUnary__init__Token_Cmd(type_ClassCmdWideningCast.create(),((ClassCmdAs*)context)->property_t,((ClassCmdAs*)context)->property_operand);
    }
    else
    {
      return context;
    }
  }
}

static void CmdAs__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_as)->property_ordinal);
  CallFn__(7,((ClassCmdAs*)context)->property_operand);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassTypeInfo*)((ClassCmdAs*)context)->property_as_type)->property_index);
}

static SlagObject* CmdAs__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(12,((ClassCmdAs*)context)->property_operand);
}

static SlagObject* CmdAs__to_cpp( SXCRef context )
{
  SXCRef local_0_op;
  SXCRef local_1_which_2899;

  local_0_op = CallFn____Object(15,((ClassCmdAs*)context)->property_operand);
  if ((((ClassCmdAs*)context)->property_as_type == CallFn____Object(0,((ClassCmdAs*)context)->property_operand)))
  {
    return local_0_op;
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdAs*)context)->property_as_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
  {
    local_1_which_2899 = ((ClassCmdAs*)context)->property_as_type;
    if ((local_1_which_2899 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1684.value),local_0_op),str62.value));
    }
    else if ((local_1_which_2899 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1685.value),local_0_op),str62.value));
    }
    else if ((local_1_which_2899 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1686.value),local_0_op),str62.value));
    }
    else if ((local_1_which_2899 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1687.value),local_0_op),str62.value));
    }
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1688.value),CallFn____Object(15,((ClassCmdAs*)context)->property_operand)),str1689.value),TypeInfo__x_name(((ClassCmdAs*)context)->property_as_type)),str62.value));
}

static SlagObject* CmdAs__statement_to_cs( SXCRef context )
{
  return CallFn____Object(33,((ClassCmdAs*)context)->property_operand);
}

static SlagObject* CmdAs__to_cs( SXCRef context )
{
  SXCRef local_0_op_string;
  SXCRef local_1_which_2902;

  local_0_op_string = CallFn____Object(35,((ClassCmdAs*)context)->property_operand);
  if ((((ClassCmdAs*)context)->property_as_type == CallFn____Object(0,((ClassCmdAs*)context)->property_operand)))
  {
    return local_0_op_string;
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdAs*)context)->property_as_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
  {
    local_1_which_2902 = ((ClassCmdAs*)context)->property_as_type;
    if ((local_1_which_2902 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1929.value),local_0_op_string),str62.value));
    }
    else if ((local_1_which_2902 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1930.value),local_0_op_string),str62.value));
    }
    else if ((local_1_which_2902 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1931.value),local_0_op_string),str1932.value));
    }
    else if ((local_1_which_2902 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1933.value),local_0_op_string),str1932.value));
    }
    else
    {
      SLAG_THROW( Error__init(type_ClassError.create()) );
    }
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),local_0_op_string),str1934.value),TypeInfo__x_name(((ClassCmdAs*)context)->property_as_type)),str62.value));
}

static SlagObject* CmdAs__statement_to_java( SXCRef context )
{
  return CallFn____Object(6,((ClassCmdAs*)context)->property_operand);
}

static SlagObject* CmdAs__to_java( SXCRef context )
{
  SXCRef local_0_op_string;
  SXCRef local_1_which_2905;

  local_0_op_string = CallFn____Object(41,((ClassCmdAs*)context)->property_operand);
  if ((((ClassCmdAs*)context)->property_as_type == CallFn____Object(0,((ClassCmdAs*)context)->property_operand)))
  {
    return local_0_op_string;
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdAs*)context)->property_as_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
  {
    local_1_which_2905 = ((ClassCmdAs*)context)->property_as_type;
    if ((local_1_which_2905 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2013.value),local_0_op_string),str62.value));
    }
    else if ((local_1_which_2905 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2014.value),local_0_op_string),str62.value));
    }
    else if ((local_1_which_2905 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2015.value),local_0_op_string),str62.value));
    }
    else if ((local_1_which_2905 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2016.value),local_0_op_string),str62.value));
    }
    else
    {
      SLAG_THROW( Error__init(type_ClassError.create()) );
    }
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassCmdAs*)context)->property_as_type)),str62.value),local_0_op_string),str62.value));
}

void CmdAs__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdAs__type_name( SXCRef context )
{
  return str891.value;
}

static SlagObject* CmdArrayDuplicate__init__Token_Cmd( SXCRef context, SXCRef local_0_t_9607, SXCRef local_1_context_9606 )
{
  sxc_write_ref( &(((ClassCmdArrayDuplicate*)context)->property_t), local_0_t_9607 );
  sxc_write_ref( &(((ClassCmdArrayDuplicate*)context)->property_context), local_1_context_9606 );
  return context;
}

static SlagObject* CmdArrayDuplicate__create_duplicate( SXCRef context )
{
  return CmdArrayDuplicate__init__Token_Cmd(type_ClassCmdArrayDuplicate.create(),((ClassCmdArrayDuplicate*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdArrayDuplicate*)context)->property_context));
}

static SlagObject* CmdArrayDuplicate__type( SXCRef context )
{
  return CallFn____Object(0,((ClassCmdArrayDuplicate*)context)->property_context);
}

SlagObject* CmdArrayDuplicate__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1249.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdArrayDuplicate*)context)->property_context)),str62.value));
}

static SlagObject* CmdArrayDuplicate__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdArrayDuplicate*)context)->property_context), CallFn____Object(16,((ClassCmdArrayDuplicate*)context)->property_context) );
  TypeInfo__resolve(SlagAnalyzer__require_type__Cmd_TypeInfo(sxc_singletons[8],((ClassCmdArrayDuplicate*)context)->property_context,((ClassTypeManager*)sxc_singletons[7])->property_type_generic_array));
  return context;
}

static SlagObject* CmdArrayDuplicate__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdArrayDuplicate*)context)->property_context), CallFn____Object(42,((ClassCmdArrayDuplicate*)context)->property_context) );
  return context;
}

static void CmdArrayDuplicate__finalize_structure_info( SXCRef context )
{
  CallFn__(21,((ClassCmdArrayDuplicate*)context)->property_context);
}

static void CmdArrayDuplicate__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdArrayDuplicate*)context)->property_context);
}

static SlagObject* CmdArrayDuplicate__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdArrayDuplicate*)context)->property_context), CallFn__CmdList__Object(1,((ClassCmdArrayDuplicate*)context)->property_context,local_0_arg_list) );
  return context;
}

static void CmdArrayDuplicate__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_array_duplicate)->property_ordinal);
  CallFn__(7,((ClassCmdArrayDuplicate*)context)->property_context);
}

static SlagObject* CmdArrayDuplicate__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1734.value),CallFn____Object(15,((ClassCmdArrayDuplicate*)context)->property_context)),str62.value));
}

static SlagObject* CmdArrayDuplicate__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(CallFn____Object(0,((ClassCmdArrayDuplicate*)context)->property_context))),str1957.value),CallFn____Object(35,((ClassCmdArrayDuplicate*)context)->property_context)),str1595.value));
}

static SlagObject* CmdArrayDuplicate__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(CallFn____Object(0,((ClassCmdArrayDuplicate*)context)->property_context))),str1957.value),CallFn____Object(41,((ClassCmdArrayDuplicate*)context)->property_context)),str1595.value));
}

void CmdArrayDuplicate__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdArrayDuplicate__type_name( SXCRef context )
{
  return str1250.value;
}

static SlagObject* CmdLiteralByte__init__Token_Byte( SXCRef context, SXCRef local_0_t_9138, SlagByte local_1_value_9137 )
{
  sxc_write_ref( &(((ClassCmdLiteralByte*)context)->property_t), local_0_t_9138 );
  ((ClassCmdLiteralByte*)context)->property_value = local_1_value_9137;
  return context;
}

static SlagObject* CmdLiteralByte__create_duplicate( SXCRef context )
{
  return CmdLiteralByte__init__Token_Byte(type_ClassCmdLiteralByte.create(),((ClassCmdLiteralByte*)context)->property_t,((ClassCmdLiteralByte*)context)->property_value);
}

static SlagObject* CmdLiteralByte__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_byte;
}

SlagObject* CmdLiteralByte__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)String__after_first__String(CmdLiteralByte__type_name(context),str758.value))),str61.value),((ClassString*)Global__to_String__Byte_Int32(sxc_singletons[21],((ClassCmdLiteralByte*)context)->property_value,10))),str62.value));
}

static void CmdLiteralByte__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_literal_byte)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((SlagInt32)((ClassCmdLiteralByte*)context)->property_value));
}

static SlagObject* CmdLiteralByte__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1700.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32)((ClassCmdLiteralByte*)context)->property_value),10))),str62.value));
}

static SlagObject* CmdLiteralByte__to_cs( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str39.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32)((ClassCmdLiteralByte*)context)->property_value),10))));
}

static SlagObject* CmdLiteralByte__to_java( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str39.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32)((ClassCmdLiteralByte*)context)->property_value),10))));
}

void CmdLiteralByte__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLiteralByte__type_name( SXCRef context )
{
  return str1086.value;
}

static SlagObject* CmdCastToByte__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdCastToByte.create(),((ClassCmdCastToByte*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCastToByte*)context)->property_operand));
}

static SlagObject* CmdCastToByte__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_byte;
}

static SlagObject* CmdCastToByte__optimize( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdCastToByte*)context)->property_operand,&type_ClassCmdLiteralPrimitive))
  {
    if (sxc_instance_of(((ClassCmdCastToByte*)context)->property_operand,&type_ClassCmdLiteralInt64))
    {
      return CmdLiteralByte__init__Token_Byte(type_ClassCmdLiteralByte.create(),((ClassCmdCastToByte*)context)->property_t,((SlagByte)((SlagInt32)((ClassCmdLiteralInt64*)((ClassCmdCastToByte*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToByte*)context)->property_operand,&type_ClassCmdLiteralInt32))
    {
      return CmdLiteralByte__init__Token_Byte(type_ClassCmdLiteralByte.create(),((ClassCmdCastToByte*)context)->property_t,((SlagByte)((SlagInt32)((ClassCmdLiteralInt32*)((ClassCmdCastToByte*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToByte*)context)->property_operand,&type_ClassCmdLiteralReal64))
    {
      return CmdLiteralByte__init__Token_Byte(type_ClassCmdLiteralByte.create(),((ClassCmdCastToByte*)context)->property_t,((SlagByte)((SlagInt32)((ClassCmdLiteralReal64*)((ClassCmdCastToByte*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToByte*)context)->property_operand,&type_ClassCmdLiteralReal32))
    {
      return CmdLiteralByte__init__Token_Byte(type_ClassCmdLiteralByte.create(),((ClassCmdCastToByte*)context)->property_t,((SlagByte)((SlagInt32)((ClassCmdLiteralReal32*)((ClassCmdCastToByte*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToByte*)context)->property_operand,&type_ClassCmdLiteralChar))
    {
      return CmdLiteralByte__init__Token_Byte(type_ClassCmdLiteralByte.create(),((ClassCmdCastToByte*)context)->property_t,((SlagByte)((SlagInt32)((ClassCmdLiteralChar*)((ClassCmdCastToByte*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToByte*)context)->property_operand,&type_ClassCmdLiteralByte))
    {
      return ((ClassCmdCastToByte*)context)->property_operand;
    }
    if (sxc_instance_of(((ClassCmdCastToByte*)context)->property_operand,&type_ClassCmdLiteralLogical))
    {
      return CmdLiteralByte__init__Token_Byte(type_ClassCmdLiteralByte.create(),((ClassCmdCastToByte*)context)->property_t,((SlagByte)((SlagInt32)((ClassCmdLiteralLogical*)((ClassCmdCastToByte*)context)->property_operand)->property_value)));
    }
  }
  return context;
}

static void CmdCastToByte__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cast_to_byte)->property_ordinal);
  CallFn__(7,((ClassCmdCastToByte*)context)->property_operand);
}

static SlagObject* CmdCastToByte__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(12,((ClassCmdCastToByte*)context)->property_operand);
}

static SlagObject* CmdCastToByte__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1700.value),CallFn____Object(15,((ClassCmdCastToByte*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCastToByte__statement_to_cs( SXCRef context )
{
  return CallFn____Object(33,((ClassCmdCastToByte*)context)->property_operand);
}

static SlagObject* CmdCastToByte__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1948.value),CallFn____Object(35,((ClassCmdCastToByte*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCastToByte__statement_to_java( SXCRef context )
{
  return CallFn____Object(6,((ClassCmdCastToByte*)context)->property_operand);
}

static SlagObject* CmdCastToByte__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2025.value),CallFn____Object(41,((ClassCmdCastToByte*)context)->property_operand)),str62.value));
}

void CmdCastToByte__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCastToByte__type_name( SXCRef context )
{
  return str1091.value;
}

static SlagObject* CmdReturnNil__init__Token_Logical( SXCRef context, SXCRef local_0_t_7714, SlagLogical local_1_handled_foreach_fixup_7713 )
{
  sxc_write_ref( &(((ClassCmdReturnNil*)context)->property_t), local_0_t_7714 );
  ((ClassCmdReturnNil*)context)->property_handled_foreach_fixup = local_1_handled_foreach_fixup_7713;
  return context;
}

static SlagObject* CmdReturnNil__create_duplicate( SXCRef context )
{
  return CmdReturnNil__init__Token_Logical(type_ClassCmdReturnNil.create(),((ClassCmdReturnNil*)context)->property_t,((ClassCmdReturnNil*)context)->property_handled_foreach_fixup);
}

static SlagObject* CmdReturnNil__resolve( SXCRef context )
{
  SXCRef local_0_statements;
  SXCRef local_1__reader2503;
  SlagInt32 local_2_id;

  if ((((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_return_type != NULL))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmdReturnNil*)context)->property_t,str1246.value)) );
  }
  if (((((ClassArrayList_of_Int32*)((ClassContext*)sxc_singletons[10])->property_foreach_fixups)->property_count != 0) && !((ClassCmdReturnNil*)context)->property_handled_foreach_fixup))
  {
    ((ClassCmdReturnNil*)context)->property_handled_foreach_fixup = true;
    local_0_statements = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassCmdReturnNil*)context)->property_t,(((ClassArrayList_of_Int32*)((ClassContext*)sxc_singletons[10])->property_foreach_fixups)->property_count+1));
    local_1__reader2503 = ArrayList_of_Int32__create_reader(((ClassContext*)sxc_singletons[10])->property_foreach_fixups);
    while (ArrayReader_of_Int32__has_another(local_1__reader2503))
    {
      local_2_id = ArrayReader_of_Int32__read(local_1__reader2503);
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_statements)->property_statements,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdReturnNil*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdReturnNil*)context)->property_t,String__opADD__String(str1231.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_2_id,10))),NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdReturnNil*)context)->property_t,str1237.value,CmdList__init__Cmd_Cmd(type_ClassCmdList.create(),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdReturnNil*)context)->property_t,String__opADD__String(str1234.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_2_id,10))),NULL),CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdSub.create(),((ClassCmdReturnNil*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdReturnNil*)context)->property_t,String__opADD__String(str1235.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_2_id,10))),NULL),CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdReturnNil*)context)->property_t,1))))));
    }
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_statements)->property_statements,context);
    return CmdStatementList__resolve(local_0_statements);
  }
  return context;
}

static void CmdReturnNil__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_return_nil)->property_ordinal);
}

static SlagObject* CmdReturnNil__to_cpp( SXCRef context )
{
  return str341.value;
}

static SlagObject* CmdReturnNil__to_cs( SXCRef context )
{
  return str341.value;
}

static SlagObject* CmdReturnNil__to_java( SXCRef context )
{
  return str341.value;
}

void CmdReturnNil__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdReturnNil__type_name( SXCRef context )
{
  return str809.value;
}

static SlagChar FileManager__path_separator( SXCRef context )
{
  SXCRef local_0_which_405;

  local_0_which_405 = System__os(sxc_singletons[0]);
  if (String__opEQ__String(local_0_which_405,str125.value))
  {
    return ((SlagChar)59);
  }
  else
  {
    return ((SlagChar)58);
  }
}

static SlagChar FileManager__directory_separator( SXCRef context )
{
  SXCRef local_0_which_406;

  local_0_which_406 = System__os(sxc_singletons[0]);
  if (String__opEQ__String(local_0_which_406,str125.value))
  {
    return ((SlagChar)92);
  }
  else
  {
    return ((SlagChar)47);
  }
}

void FileManager__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassFileManager*)context)->property_relative = 1;
  ((ClassFileManager*)context)->property_absolute = 2;
  ((ClassFileManager*)context)->property_recursive = 4;
  ((ClassFileManager*)context)->property_ignore_hidden = 8;
}

SlagObject* FileManager__type_name( SXCRef context )
{
  return str123.value;
}

static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Object__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Mapping_of_Int32_and_Object__init__Int32(type_ClassArrayList_of_Mapping_of_Int32_and_Object.create(),ArrayReader_of_Mapping_of_Int32_and_Object__remaining(context));
  while (ArrayReader_of_Mapping_of_Int32_and_Object__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_Mapping_of_Int32_and_Object__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_Mapping_of_Int32_and_Object__to_String( SXCRef context )
{
  return ArrayList_of_Mapping_of_Int32_and_Object__to_String(ArrayReader_of_Mapping_of_Int32_and_Object__to_List(context));
}

static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Object__init__Collection_of_Mapping_of_Int32_and_Object_Array_of_Mapping_of_Int32_and_Object_Int32_Int32( SXCRef context, SXCRef local_0_collection_5136, SXCRef local_1_data_5135, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_collection), local_0_collection_5136 );
  sxc_write_ref( &(((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_data), local_1_data_5135 );
  ((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_collection);
  }
  ((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_collection)))
  {
    ((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_collection);
  }
  ((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Object__create_duplicate( SXCRef context )
{
  return ArrayReader_of_Mapping_of_Int32_and_Object__init__Collection_of_Mapping_of_Int32_and_Object_Array_of_Mapping_of_Int32_and_Object_Int32_Int32(type_ClassArrayReader_of_Mapping_of_Int32_and_Object.create(),((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_collection,((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_data,((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_counter,(((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_last_exclusive-((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_counter));
}

static SlagLogical ArrayReader_of_Mapping_of_Int32_and_Object__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_counter < ((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_Mapping_of_Int32_and_Object__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_last_exclusive-((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_counter);
}

static SlagObject* ArrayReader_of_Mapping_of_Int32_and_Object__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassMapping_of_Int32_and_Object**)(((SlagArray*)((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_data)->data))[((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_counter];
  ++(((ClassArrayReader_of_Mapping_of_Int32_and_Object*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_Mapping_of_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_Mapping_of_Int32_and_Object__type_name( SXCRef context )
{
  return str202.value;
}

static SlagObject* Mapping_of_String_and_SignalHandler__init__String_SignalHandler( SXCRef context, SXCRef local_0_key_4288, SXCRef local_1_value_4287 )
{
  sxc_write_ref( &(((ClassMapping_of_String_and_SignalHandler*)context)->property_key), local_0_key_4288 );
  sxc_write_ref( &(((ClassMapping_of_String_and_SignalHandler*)context)->property_value), local_1_value_4287 );
  return context;
}

SlagObject* Mapping_of_String_and_SignalHandler__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_SignalHandler*)context)->property_key),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_String_and_SignalHandler*)context)->property_value)));
}

void Mapping_of_String_and_SignalHandler__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_SignalHandler__type_name( SXCRef context )
{
  return str99.value;
}

void NativeData__clean_up( SXCRef context )
{
  SLAG_PUSH_REF( context );
  NativeData__clean_up();
}

void NativeData__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* NativeData__type_name( SXCRef context )
{
  return str33.value;
}

static SlagObject* CmdThrow__init__Token_Cmd( SXCRef context, SXCRef local_0_t_7719, SXCRef local_1_operand_7718 )
{
  sxc_write_ref( &(((ClassCmdThrow*)context)->property_t), local_0_t_7719 );
  sxc_write_ref( &(((ClassCmdThrow*)context)->property_operand), local_1_operand_7718 );
  return context;
}

static SlagObject* CmdThrow__create_duplicate( SXCRef context )
{
  return CmdThrow__init__Token_Cmd(type_ClassCmdThrow.create(),((ClassCmdThrow*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdThrow*)context)->property_operand));
}

SlagObject* CmdThrow__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str813.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdThrow*)context)->property_operand)),str62.value));
}

static SlagObject* CmdThrow__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdThrow*)context)->property_operand), CallFn____Object(16,((ClassCmdThrow*)context)->property_operand) );
  SlagAnalyzer__require_type__Cmd_TypeInfo(sxc_singletons[8],((ClassCmdThrow*)context)->property_operand,((ClassTypeManager*)sxc_singletons[7])->property_type_exception);
  return context;
}

static SlagObject* CmdThrow__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdThrow*)context)->property_operand), CallFn____Object(42,((ClassCmdThrow*)context)->property_operand) );
  return context;
}

static void CmdThrow__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
  CallFn__(21,((ClassCmdThrow*)context)->property_operand);
  sxc_write_ref( &(((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_contains_throw)->property_flags))) );
}

static SlagObject* CmdThrow__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdThrow*)context)->property_operand), CallFn__CmdList__Object(1,((ClassCmdThrow*)context)->property_operand,local_0_arg_list) );
  return context;
}

static void CmdThrow__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_throw)->property_ordinal);
  CallFn__(7,((ClassCmdThrow*)context)->property_operand);
}

static SlagObject* CmdThrow__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1665.value),CallFn____Object(15,((ClassCmdThrow*)context)->property_operand)),str635.value));
}

static SlagObject* CmdThrow__to_cs( SXCRef context )
{
  return String__opADD__String(str1923.value,CallFn____Object(35,((ClassCmdThrow*)context)->property_operand));
}

static SlagObject* CmdThrow__to_java( SXCRef context )
{
  return String__opADD__String(str1923.value,CallFn____Object(41,((ClassCmdThrow*)context)->property_operand));
}

void CmdThrow__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdThrow__type_name( SXCRef context )
{
  return str814.value;
}

SlagObject* NoSuchElementError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassNoSuchElementError*)context)->property_message), str2036.value );
  return context;
}

SlagObject* NoSuchElementError__init__String( SXCRef context, SXCRef local_0_element_name )
{
  sxc_write_ref( &(((ClassNoSuchElementError*)context)->property_message), StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2037.value),local_0_element_name),str92.value)) );
  return context;
}

void NoSuchElementError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* NoSuchElementError__type_name( SXCRef context )
{
  return str2038.value;
}

static SlagObject* CmdAssignNewObject__init__Token_LocalVarInfo_CmdInitialConstructor( SXCRef context, SXCRef local_0_t_7665, SXCRef local_1_var_info_7664, SXCRef local_2_constructor_7663 )
{
  sxc_write_ref( &(((ClassCmdAssignNewObject*)context)->property_t), local_0_t_7665 );
  sxc_write_ref( &(((ClassCmdAssignNewObject*)context)->property_var_info), local_1_var_info_7664 );
  sxc_write_ref( &(((ClassCmdAssignNewObject*)context)->property_constructor), local_2_constructor_7663 );
  return context;
}

static SlagObject* CmdAssignNewObject__create_duplicate( SXCRef context )
{
  return CmdAssignNewObject__init__Token_LocalVarInfo_CmdInitialConstructor(type_ClassCmdAssignNewObject.create(),((ClassCmdAssignNewObject*)context)->property_t,((ClassCmdAssignNewObject*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdAssignNewObject*)context)->property_constructor));
}

static SlagObject* CmdAssignNewObject__resolve( SXCRef context )
{
  SXCRef local_0_v;
  SlagInt32 local_1_which_2820;

  local_0_v = LocalVarTable__get__String(((ClassContext*)sxc_singletons[10])->property_local_var_table,((ClassLocalVarInfo*)((ClassCmdAssignNewObject*)context)->property_var_info)->property_name);
  TypeInfo__resolve(((ClassLocalVarInfo*)local_0_v)->property_type);
  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassLocalVarInfo*)local_0_v)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
  {
    local_1_which_2820 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdInitialConstructor*)((ClassCmdAssignNewObject*)context)->property_constructor)->property_args))->property_count;
    if ((local_1_which_2820 == 0))
    {
      return CmdAssignZeroValue__resolve(CmdAssignZeroValue__init__Token_LocalVarInfo(type_ClassCmdAssignZeroValue.create(),((ClassCmdAssignNewObject*)context)->property_t,((ClassCmdAssignNewObject*)context)->property_var_info));
    }
    else if ((local_1_which_2820 == 1))
    {
      return CmdAssign__resolve(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),((ClassCmdAssignNewObject*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdAssignNewObject*)context)->property_t,((ClassLocalVarInfo*)((ClassCmdAssignNewObject*)context)->property_var_info)->property_name,NULL),((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdInitialConstructor*)((ClassCmdAssignNewObject*)context)->property_constructor)->property_args))->property_data)->data))[0])))));
    }
    else
    {
      SLAG_THROW( Cmd__error__String(context,str1245.value) );
    }
  }
  else
  {
    return CmdAssign__resolve(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),((ClassCmdAssignNewObject*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdAssignNewObject*)context)->property_t,((ClassLocalVarInfo*)((ClassCmdAssignNewObject*)context)->property_var_info)->property_name,NULL),CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList(type_ClassCmdUnresolvedNewObject.create(),((ClassCmdAssignNewObject*)context)->property_t,((ClassLocalVarInfo*)local_0_v)->property_type,((ClassCmdInitialConstructor*)((ClassCmdAssignNewObject*)context)->property_constructor)->property_args)));
  }
  return context;
}

void CmdAssignNewObject__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdAssignNewObject__type_name( SXCRef context )
{
  return str789.value;
}

SlagObject* SocketError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassSocketError*)context)->property_message), str2039.value );
  return context;
}

SlagObject* SocketError__init__String( SXCRef context, SXCRef local_0_message_3673 )
{
  sxc_write_ref( &(((ClassSocketError*)context)->property_message), local_0_message_3673 );
  return context;
}

void SocketError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* SocketError__type_name( SXCRef context )
{
  return str2040.value;
}

static SlagObject* CmdCastToInt32__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdCastToInt32.create(),((ClassCmdCastToInt32*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCastToInt32*)context)->property_operand));
}

static SlagObject* CmdCastToInt32__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_int32;
}

static SlagObject* CmdCastToInt32__optimize( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdCastToInt32*)context)->property_operand,&type_ClassCmdLiteralPrimitive))
  {
    if (sxc_instance_of(((ClassCmdCastToInt32*)context)->property_operand,&type_ClassCmdLiteralInt64))
    {
      return CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdCastToInt32*)context)->property_t,((SlagInt32)((ClassCmdLiteralInt64*)((ClassCmdCastToInt32*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToInt32*)context)->property_operand,&type_ClassCmdLiteralInt32))
    {
      return ((ClassCmdCastToInt32*)context)->property_operand;
    }
    if (sxc_instance_of(((ClassCmdCastToInt32*)context)->property_operand,&type_ClassCmdLiteralReal64))
    {
      return CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdCastToInt32*)context)->property_t,((SlagInt32)((ClassCmdLiteralReal64*)((ClassCmdCastToInt32*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToInt32*)context)->property_operand,&type_ClassCmdLiteralReal32))
    {
      return CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdCastToInt32*)context)->property_t,((SlagInt32)((ClassCmdLiteralReal32*)((ClassCmdCastToInt32*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToInt32*)context)->property_operand,&type_ClassCmdLiteralChar))
    {
      return CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdCastToInt32*)context)->property_t,((SlagInt32)((ClassCmdLiteralChar*)((ClassCmdCastToInt32*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToInt32*)context)->property_operand,&type_ClassCmdLiteralByte))
    {
      return CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdCastToInt32*)context)->property_t,((SlagInt32)((ClassCmdLiteralByte*)((ClassCmdCastToInt32*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToInt32*)context)->property_operand,&type_ClassCmdLiteralLogical))
    {
      return CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdCastToInt32*)context)->property_t,((SlagInt32)((ClassCmdLiteralLogical*)((ClassCmdCastToInt32*)context)->property_operand)->property_value));
    }
  }
  return context;
}

static void CmdCastToInt32__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cast_to_int32)->property_ordinal);
  CallFn__(7,((ClassCmdCastToInt32*)context)->property_operand);
}

static SlagObject* CmdCastToInt32__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(12,((ClassCmdCastToInt32*)context)->property_operand);
}

static SlagObject* CmdCastToInt32__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1701.value),CallFn____Object(15,((ClassCmdCastToInt32*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCastToInt32__statement_to_cs( SXCRef context )
{
  return CallFn____Object(33,((ClassCmdCastToInt32*)context)->property_operand);
}

static SlagObject* CmdCastToInt32__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1946.value),CallFn____Object(35,((ClassCmdCastToInt32*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCastToInt32__statement_to_java( SXCRef context )
{
  return CallFn____Object(6,((ClassCmdCastToInt32*)context)->property_operand);
}

static SlagObject* CmdCastToInt32__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2024.value),CallFn____Object(41,((ClassCmdCastToInt32*)context)->property_operand)),str62.value));
}

void CmdCastToInt32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCastToInt32__type_name( SXCRef context )
{
  return str1089.value;
}

SlagObject* Mapping_of_String_and_TypeInfo__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_TypeInfo*)context)->property_key),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_String_and_TypeInfo*)context)->property_value)));
}

void Mapping_of_String_and_TypeInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_TypeInfo__type_name( SXCRef context )
{
  return str567.value;
}

static SlagObject* CmdWhichCase__init__Token( SXCRef context, SXCRef local_0_t_7508 )
{
  sxc_write_ref( &(((ClassCmdWhichCase*)context)->property_t), local_0_t_7508 );
  return context;
}

static SlagObject* CmdWhichCase__create_duplicate( SXCRef context )
{
  SXCRef local_0_result;
  SXCRef local_1__reader2832;
  SXCRef local_2_v;

  local_0_result = CmdWhichCase__init__Token(type_ClassCmdWhichCase.create(),((ClassCmdWhichCase*)context)->property_t);
  local_1__reader2832 = ArrayList_of_Cmd__create_reader(((ClassCmdWhichCase*)context)->property_values);
  while (CallFn____Logical(14,local_1__reader2832))
  {
    local_2_v = CallFn____Object(45,local_1__reader2832);
    ArrayList_of_Object__add__Object(((ClassCmdWhichCase*)local_0_result)->property_values,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_2_v));
  }
  sxc_write_ref( &(((ClassCmdWhichCase*)local_0_result)->property_body), ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdWhichCase*)context)->property_body) );
  return local_0_result;
}

SlagObject* CmdWhichCase__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str749.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdWhichCase*)context)->property_values)),str750.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdWhichCase*)context)->property_body)));
}

static SlagObject* CmdWhichCase__resolve( SXCRef context )
{
  SLAG_THROW( Error__init__String(type_ClassError.create(),str1199.value) );
}

void CmdWhichCase__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassCmdWhichCase*)context)->property_values), CmdList__init__Int32(type_ClassCmdList.create(),1) );
}

SlagObject* CmdWhichCase__type_name( SXCRef context )
{
  return str751.value;
}

static SlagObject* CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpGT.create(),((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_rhs));
}

static SlagObject* CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,str691.value);
  if ((sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_lhs,&type_ClassCmdLiteralString) && sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_rhs,&type_ClassCmdLiteralString)))
  {
    return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_t,(String__opCMP__String(((ClassCmdLiteralString*)((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_lhs)->property_value,((ClassCmdLiteralString*)((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_rhs)->property_value) == 1));
  }
  if ((local_0_call != NULL))
  {
    SlagAnalyzer__require_int32__Cmd(sxc_singletons[8],local_0_call);
    return CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__optimize(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpEQ.create(),((ClassCmd*)local_0_call)->property_t,local_0_call,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_t,1)));
  }
  SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary(sxc_singletons[8],context);
  return CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__optimize(context);
}

static SlagObject* CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__optimize( SXCRef context )
{
  SXCRef local_0_type;

  if ((sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    local_0_type = CallFn____Object(0,((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_lhs);
    if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_t,(((ClassCmdLiteralInt64*)((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_lhs)->property_value > ((ClassCmdLiteralInt64*)((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_t,(((ClassCmdLiteralInt32*)((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_lhs)->property_value > ((ClassCmdLiteralInt32*)((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_t,(((ClassCmdLiteralReal64*)((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_lhs)->property_value > ((ClassCmdLiteralReal64*)((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_t,(((ClassCmdLiteralReal32*)((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_lhs)->property_value > ((ClassCmdLiteralReal32*)((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_rhs)->property_value));
    }
  }
  return context;
}

static void CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cmp_gt)->property_ordinal);
  CallFn__(7,((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_lhs);
  CallFn__(7,((ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt*)context)->property_rhs);
}

void CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__type_name( SXCRef context )
{
  return str885.value;
}

static SlagObject* SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__init__SignalHandler( SXCRef context, SXCRef local_0_context_4294 )
{
  sxc_write_ref( &(((ClassSpecializedDelegate_____of_SignalHandler_and_delegate_dummy*)context)->property_context), local_0_context_4294 );
  return context;
}

void SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__type_name( SXCRef context )
{
  return str106.value;
}

static SlagObject* CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList( SXCRef context, SXCRef local_0_t_9300, SXCRef local_1_of_type_9299, SXCRef local_2_args_9298 )
{
  sxc_write_ref( &(((ClassCmdUnresolvedNewObject*)context)->property_t), local_0_t_9300 );
  sxc_write_ref( &(((ClassCmdUnresolvedNewObject*)context)->property_of_type), local_1_of_type_9299 );
  sxc_write_ref( &(((ClassCmdUnresolvedNewObject*)context)->property_args), local_2_args_9298 );
  return context;
}

static SlagObject* CmdUnresolvedNewObject__create_duplicate( SXCRef context )
{
  return CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList(type_ClassCmdUnresolvedNewObject.create(),((ClassCmdUnresolvedNewObject*)context)->property_t,((ClassCmdUnresolvedNewObject*)context)->property_of_type,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdUnresolvedNewObject*)context)->property_args));
}

static SlagObject* CmdUnresolvedNewObject__resolve( SXCRef context )
{
  SXCRef local_0_call;
  SXCRef local_1_m;
  SXCRef local_2_result;
  SXCRef local_3_result;
  SlagInt32 local_4_index;
  SlagInt32 local_5__count2731;

  TypeInfo__resolve(((ClassCmdUnresolvedNewObject*)context)->property_of_type);
  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdUnresolvedNewObject*)context)->property_of_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0))
  {
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdUnresolvedNewObject*)context)->property_args))->property_count != 1))
    {
      SLAG_THROW( Cmd__error__String(context,str1144.value) );
    }
    CmdList__resolve(((ClassCmdUnresolvedNewObject*)context)->property_args);
    return SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdUnresolvedNewObject*)context)->property_args))->property_data)->data))[0]))),((ClassCmdUnresolvedNewObject*)context)->property_of_type,true);
  }
  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdUnresolvedNewObject*)context)->property_of_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
  {
    if ((String__index_of__String_Int32(((ClassTypeInfo*)((ClassCmdUnresolvedNewObject*)context)->property_of_type)->property_name,str1145.value,0) == 0))
    {
      sxc_write_ref( &(((ClassCmdUnresolvedNewObject*)context)->property_of_type), TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassCmdUnresolvedNewObject*)context)->property_t,String__opADD__String(str1146.value,((ClassTypeInfo*)((ClassCmdUnresolvedNewObject*)context)->property_of_type)->property_name),NULL) );
      TypeInfo__resolve(((ClassCmdUnresolvedNewObject*)context)->property_of_type);
    }
  }
  ArrayList_of_Object__add__Object(((ClassContext*)sxc_singletons[10])->property_implicit_context,((ClassCmdUnresolvedNewObject*)context)->property_of_type);
  SLAG_TRY
  {
    CmdList__resolve(((ClassCmdUnresolvedNewObject*)context)->property_args);
    if (TypeInfo__instance_of__TypeInfo(((ClassCmdUnresolvedNewObject*)context)->property_of_type,((ClassTypeManager*)sxc_singletons[7])->property_type_manager_creates))
    {
      ArrayList_of_TypeInfo__remove_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
      return CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdUnresolvedNewObject*)context)->property_t,CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdUnresolvedNewObject*)context)->property_t,((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,TypeInfo__manager_name(((ClassCmdUnresolvedNewObject*)context)->property_of_type)))),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdUnresolvedNewObject*)context)->property_t,str1062.value,((ClassCmdUnresolvedNewObject*)context)->property_args)));
    }
    if (((((((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdUnresolvedNewObject*)context)->property_of_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0) && (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdUnresolvedNewObject*)context)->property_args))->property_count == 1)) && (CallFn____Object(0,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdUnresolvedNewObject*)context)->property_args))->property_data)->data))[0])))) == ((ClassCmdUnresolvedNewObject*)context)->property_of_type)))
    {
      return ((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdUnresolvedNewObject*)context)->property_args))->property_data)->data))[0])));
    }
    local_0_call = SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(sxc_singletons[8],((ClassCmdUnresolvedNewObject*)context)->property_t,((ClassCmdUnresolvedNewObject*)context)->property_of_type,NULL,str667.value,((ClassCmdUnresolvedNewObject*)context)->property_args);
    local_1_m = ((ClassCmdDynamicCall*)local_0_call)->property_method_info;
    if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdUnresolvedNewObject*)context)->property_of_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassCmdUnresolvedNewObject*)context)->property_of_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_array)->property_flags) != 0))
      {
        if (!String__opEQ__String(((ClassMethodInfo*)((ClassCmdDynamicCall*)local_0_call)->property_method_info)->property_signature,str1147.value))
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmdUnresolvedNewObject*)context)->property_t,str1148.value)) );
        }
        if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)((ClassCmdUnresolvedNewObject*)context)->property_of_type)->property_properties))->property_count != 0))
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassPropertyInfo*)((ClassPropertyInfo*)((ClassPropertyInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)((ClassCmdUnresolvedNewObject*)context)->property_of_type)->property_properties))->property_data)->data))[0]))))->property_t,str1149.value)) );
        }
        local_2_result = CmdArrayCreate__init__Token_TypeInfo_Cmd(type_ClassCmdArrayCreate.create(),((ClassCmdUnresolvedNewObject*)context)->property_t,((ClassCmdUnresolvedNewObject*)context)->property_of_type,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdDynamicCall*)local_0_call)->property_args))->property_data)->data))[0]))));
        ArrayList_of_TypeInfo__remove_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
        return local_2_result;
      }
      local_3_result = ((ClassCmd*)CmdNewObject__init__Token_TypeInfo_MethodInfo_CmdList(type_ClassCmdNewObject.create(),((ClassCmdUnresolvedNewObject*)context)->property_t,((ClassCmdUnresolvedNewObject*)context)->property_of_type,local_1_m,((ClassCmdDynamicCall*)local_0_call)->property_args));
      ArrayList_of_TypeInfo__remove_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
      return local_3_result;
    }
    else
    {
      {
        if (((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdDynamicCall*)local_0_call)->property_args))->property_count == 1) && (CallFn____Object(0,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdDynamicCall*)local_0_call)->property_args))->property_data)->data))[0])))) == ((ClassCmdUnresolvedNewObject*)context)->property_of_type)))
        {
          ArrayList_of_TypeInfo__remove_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
          return ((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdDynamicCall*)local_0_call)->property_args))->property_data)->data))[0])));
        }
        if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdDynamicCall*)local_0_call)->property_args))->property_count == ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)((ClassCmdUnresolvedNewObject*)context)->property_of_type)->property_properties))->property_count)) goto unsatisfied_9322;
        {
          local_4_index = 0;
          local_5__count2731 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdDynamicCall*)local_0_call)->property_args))->property_count;
          while ((local_4_index < local_5__count2731))
          {
            if (!(CallFn____Object(0,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdDynamicCall*)local_0_call)->property_args))->property_data)->data))[local_4_index]))) == ((ClassPropertyInfo*)((ClassPropertyInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)((ClassCmdUnresolvedNewObject*)context)->property_of_type)->property_properties))->property_data)->data))[local_4_index])))->property_type)) goto unsatisfied_9322;
            ++local_4_index;
          }
        }
        satisfied_9322:;
        {
          ArrayList_of_TypeInfo__remove_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
          return CmdNewCompound__init__Token_TypeInfo_CmdList(type_ClassCmdNewCompound.create(),((ClassCmdUnresolvedNewObject*)context)->property_t,((ClassCmdUnresolvedNewObject*)context)->property_of_type,((ClassCmdDynamicCall*)local_0_call)->property_args);
        }
        goto end_9322;
        unsatisfied_9322:;
        {
          if (!(((ClassMethodInfo*)local_1_m)->property_return_type != NULL))
          {
            SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassMethodInfo*)local_1_m)->property_t,str1156.value)) );
          }
          ArrayList_of_TypeInfo__remove_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
          return local_0_call;
        }
      }
      end_9322:;
    }
  }
  SLAG_CATCH(_err21)
  {
    SlagTypeInfo* _err21_type = _err21->type;
    if (_err21_type->instance_of(&type_ClassSlagError))
    {
      SXCRef local_6_err = _err21;
      ArrayList_of_TypeInfo__remove_last(((ClassContext*)sxc_singletons[10])->property_implicit_context);
      SLAG_THROW( local_6_err );
    }
    else
    {
      SLAG_THROW(_err21);
    }
  }
}

void CmdUnresolvedNewObject__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdUnresolvedNewObject__type_name( SXCRef context )
{
  return str1157.value;
}

static SlagObject* ArrayReader_of_ParameterInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),CallFn____Int32(31,context));
  while (CallFn____Logical(14,context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,CallFn____Object(45,context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_ParameterInfo__to_String( SXCRef context )
{
  return ArrayList_of_ParameterInfo__to_String(ArrayReader_of_ParameterInfo__to_List(context));
}

static SlagObject* ArrayReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_6881, SXCRef local_1_data_6880, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_ParameterInfo*)context)->property_collection), local_0_collection_6881 );
  sxc_write_ref( &(((ClassArrayReader_of_ParameterInfo*)context)->property_data), local_1_data_6880 );
  ((ClassArrayReader_of_ParameterInfo*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_ParameterInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_ParameterInfo*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_ParameterInfo*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_ParameterInfo*)context)->property_collection)))
  {
    ((ClassArrayReader_of_ParameterInfo*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_ParameterInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_ParameterInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_ParameterInfo*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_ParameterInfo__create_duplicate( SXCRef context )
{
  return ArrayReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo_Int32_Int32(type_ClassArrayReader_of_ParameterInfo.create(),((ClassArrayReader_of_ParameterInfo*)context)->property_collection,((ClassArrayReader_of_ParameterInfo*)context)->property_data,((ClassArrayReader_of_ParameterInfo*)context)->property_counter,(((ClassArrayReader_of_ParameterInfo*)context)->property_last_exclusive-((ClassArrayReader_of_ParameterInfo*)context)->property_counter));
}

static SlagLogical ArrayReader_of_ParameterInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_ParameterInfo*)context)->property_counter < ((ClassArrayReader_of_ParameterInfo*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_ParameterInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_ParameterInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_ParameterInfo__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_ParameterInfo*)context)->property_last_exclusive-((ClassArrayReader_of_ParameterInfo*)context)->property_counter);
}

static SlagObject* ArrayReader_of_ParameterInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassParameterInfo**)(((SlagArray*)((ClassArrayReader_of_ParameterInfo*)context)->property_data)->data))[((ClassArrayReader_of_ParameterInfo*)context)->property_counter];
  ++(((ClassArrayReader_of_ParameterInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_ParameterInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_ParameterInfo__type_name( SXCRef context )
{
  return str535.value;
}

static void HeapSort_of_MethodInfo__sort__ArrayList_of_MethodInfo_Comparator_of_MethodInfo( SXCRef context, SXCRef local_0_list, SXCRef local_1_comparator )
{
  SlagInt32 local_2_index;
  SlagInt32 local_3__count9944;
  SlagInt32 local_4_cur;
  SlagInt32 local_5_parent;
  SlagInt32 local_6_index;
  SlagInt32 local_7__last9946;
  SlagInt32 local_8_cur;
  SlagInt32 local_9_left_child;
  SlagInt32 local_10_right_child;
  SXCRef local_11_cur_value;
  SXCRef local_12_left_value;
  SXCRef local_13_right_value;

  if ((local_1_comparator == NULL))
  {
    local_1_comparator = ((ClassHeapSort_of_MethodInfo*)context)->property_default_comparator;
  }
  {
    local_2_index = 0;
    local_3__count9944 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_list))->property_count;
    while ((local_2_index < local_3__count9944))
    {
      local_4_cur = local_2_index;
      local_5_parent = ((local_2_index-1)/2);
      while (((local_4_cur != 0) && !CallFn__MethodInfo_MethodInfo__Logical(22,local_1_comparator,((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_list))->property_data)->data))[local_4_cur])),((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_list))->property_data)->data))[local_5_parent])))))
      {
        ArrayList_of_MethodInfo__swap__Int32_Int32(local_0_list,local_4_cur,local_5_parent);
        local_4_cur = local_5_parent;
        local_5_parent = ((local_5_parent-1)/2);
      }
      ++local_2_index;
    }
  }
  local_6_index = (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_list))->property_count-1);
  local_7__last9946 = 0;
  while ((local_6_index > local_7__last9946))
  {
    ArrayList_of_MethodInfo__swap__Int32_Int32(local_0_list,0,local_6_index);
    local_8_cur = 0;
    for (;;)
    {
      next_9964:;
      local_9_left_child = ((local_8_cur<<1)+1);
      local_10_right_child = ((local_8_cur<<1)+2);
      local_11_cur_value = ((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_list))->property_data)->data))[local_8_cur]));
      if ((local_10_right_child < local_6_index))
      {
        local_12_left_value = ((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_list))->property_data)->data))[local_9_left_child]));
        local_13_right_value = ((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_list))->property_data)->data))[local_10_right_child]));
        if ((CallFn__MethodInfo_MethodInfo__Logical(22,local_1_comparator,local_11_cur_value,local_12_left_value) && !CallFn__MethodInfo_MethodInfo__Logical(22,local_1_comparator,local_12_left_value,local_13_right_value)))
        {
          ArrayList_of_MethodInfo__swap__Int32_Int32(local_0_list,local_8_cur,local_9_left_child);
          local_8_cur = local_9_left_child;
        }
        else if (CallFn__MethodInfo_MethodInfo__Logical(22,local_1_comparator,local_11_cur_value,local_13_right_value))
        {
          ArrayList_of_MethodInfo__swap__Int32_Int32(local_0_list,local_8_cur,local_10_right_child);
          local_8_cur = local_10_right_child;
        }
        else
        {
          goto end_9964;
        }
      }
      else if (((local_9_left_child < local_6_index) && CallFn__MethodInfo_MethodInfo__Logical(22,local_1_comparator,local_11_cur_value,((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_list))->property_data)->data))[local_9_left_child])))))
      {
        ArrayList_of_MethodInfo__swap__Int32_Int32(local_0_list,local_8_cur,local_9_left_child);
        goto end_9964;
      }
      else
      {
        goto end_9964;
      }
    }
    end_9964:;
    --local_6_index;
  }
}

void HeapSort_of_MethodInfo__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassHeapSort_of_MethodInfo*)context)->property_default_comparator), CompareFn_of_MethodInfo_and_a_of___init(type_ClassCompareFn_of_MethodInfo_and_a_of_.create()) );
}

SlagObject* HeapSort_of_MethodInfo__type_name( SXCRef context )
{
  return str1312.value;
}

static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdMul.create(),((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs));
}

static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,String__opADD__String(str689.value,str389.value));
  if ((local_0_call != NULL))
  {
    return local_0_call;
  }
  SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary(sxc_singletons[8],context);
  return CallFn____Object(28,context);
}

static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__optimize( SXCRef context )
{
  SXCRef local_0_left;
  SXCRef local_1_right;
  SXCRef local_2_left;
  SXCRef local_3_right;
  SXCRef local_4_left;
  SXCRef local_5_right;
  SXCRef local_6_left;
  SXCRef local_7_right;

  if ((sxc_instance_of(((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    if (sxc_instance_of(((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_0_left = ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs;
      local_1_right = ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs;
      ((ClassCmdLiteralInt64*)local_0_left)->property_value = (((ClassCmdLiteralInt64*)local_0_left)->property_value*((ClassCmdLiteralInt64*)local_1_right)->property_value);
      return ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs;
      local_3_right = ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = (((ClassCmdLiteralInt32*)local_2_left)->property_value*((ClassCmdLiteralInt32*)local_3_right)->property_value);
      return ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs,&type_ClassCmdLiteralReal64))
    {
      local_4_left = ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs;
      local_5_right = ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs;
      ((ClassCmdLiteralReal64*)local_4_left)->property_value = (((ClassCmdLiteralReal64*)local_4_left)->property_value*((ClassCmdLiteralReal64*)local_5_right)->property_value);
      return ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs,&type_ClassCmdLiteralReal32))
    {
      local_6_left = ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs;
      local_7_right = ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs;
      ((ClassCmdLiteralReal32*)local_6_left)->property_value = (((ClassCmdLiteralReal32*)local_6_left)->property_value*((ClassCmdLiteralReal32*)local_7_right)->property_value);
      return ((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_mul)->property_ordinal);
  CallFn__(7,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs);
  CallFn__(7,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs);
}

static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_cpp( SXCRef context )
{
  SXCRef local_0_which_7745;
  SXCRef local_1_result;
  SXCRef local_2_which_7746;

  local_0_which_7745 = str389.value;
  if (String__opEQ__String(local_0_which_7745,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1666.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs)),str395.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7745,str392.value))
  {
    local_1_result = str39.value;
    local_2_which_7746 = CallFn____Object(0,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs);
    if ((local_2_which_7746 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      local_1_result = str1667.value;
    }
    else if ((local_2_which_7746 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      local_1_result = str1668.value;
    }
    else if ((local_2_which_7746 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      local_1_result = str1669.value;
    }
    else if ((local_2_which_7746 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      local_1_result = str1670.value;
    }
    return String__opADD__String(local_1_result,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1671.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs)),str1672.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs)),str62.value)));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(15,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs)),str389.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_cs( SXCRef context )
{
  SXCRef local_0_which_7747;

  local_0_which_7747 = str389.value;
  if (String__opEQ__String(local_0_which_7747,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7747,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),TypeInfo__x_name(CallFn____Object(0,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs))),str1925.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(35,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs)),str389.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_java( SXCRef context )
{
  SXCRef local_0_which_7748;

  local_0_which_7748 = str389.value;
  if (String__opEQ__String(local_0_which_7748,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7748,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2011.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(41,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_lhs)),str389.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul*)context)->property_rhs)),str62.value);
  }
}

void CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__type_name( SXCRef context )
{
  return str821.value;
}

SlagObject* HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object*)context)->property_data), GenericHashTable_of_Int32_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Int32_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object*)context)->property_data), GenericHashTable_of_Int32_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Int32_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init__Int32_Real64(type_ClassHashTable_of_Int32_and_KeywordPairing.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Int32_and_Object*)((ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Int32_and_Object*)((ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Int32_and_Object__add__GenericHashTable_of_Int32_and_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)local_0_new_table)->property_data,((ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Int32_and_Object*)HashTableMappingReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object(type_ClassHashTableMappingReader_of_Int32_and_Object.create(),ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader(((ClassGenericHashTable_of_Int32_and_Object*)((ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__type_name( SXCRef context )
{
  return str459.value;
}

void HashTable_of_Int32_and_KeywordPairing__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_Int32_and_KeywordPairing__type_name( SXCRef context )
{
  return str460.value;
}

SlagObject* ArrayList_of_Object__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count3933;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)context)->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count3933 = ((ClassArrayList_of_Object*)context)->property_count;
    while ((local_1_i < local_2__count3933))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)context)->property_data)->data))[local_1_i])));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Object__init( SXCRef context )
{
  ArrayList_of_Object__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Object*)context)->property_data), type_ClassArray_of_Object.create(local_0_initial_capacity) );
  return context;
}

static void ArrayList_of_Object__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_min_capacity )
{
  SXCRef local_1_new_data;

  if ((((SlagArray*)((ClassArrayList_of_Object*)context)->property_data)->array_count < local_0_min_capacity))
  {
    local_1_new_data = type_ClassArray_of_Object.create(local_0_min_capacity);
    GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_1_new_data,((ClassArrayList_of_Object*)context)->property_data,0,0,((ClassArrayList_of_Object*)context)->property_count);
    sxc_write_ref( &(((ClassArrayList_of_Object*)context)->property_data), local_1_new_data );
  }
}

void ArrayList_of_Object__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_capacity__Int32(context,local_0_num_items);
  if ((local_0_num_items > ((ClassArrayList_of_Object*)context)->property_count))
  {
    ((ClassArrayList_of_Object*)context)->property_count = local_0_num_items;
    ((ClassArrayList_of_Object*)context)->property_modification_count = (((ClassArrayList_of_Object*)context)->property_modification_count+1);
  }
}

SlagObject* ArrayList_of_Object__add__Object( SXCRef context, SXCRef local_0_value )
{
  if ((((ClassArrayList_of_Object*)context)->property_count == ((SlagArray*)((ClassArrayList_of_Object*)context)->property_data)->array_count))
  {
    if ((((ClassArrayList_of_Object*)context)->property_count == 0))
    {
      ArrayList_of_Object__ensure_capacity__Int32(context,1);
    }
    else
    {
      ArrayList_of_Object__ensure_capacity__Int32(context,(((SlagArray*)((ClassArrayList_of_Object*)context)->property_data)->array_count<<1));
    }
  }
  sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)context)->property_data)->data))+((ClassArrayList_of_Object*)context)->property_count, local_0_value );
  ++(((ClassArrayList_of_Object*)context)->property_count);
  ((ClassArrayList_of_Object*)context)->property_modification_count = (((ClassArrayList_of_Object*)context)->property_modification_count+1);
  return context;
}

static SlagObject* ArrayList_of_Object__insert__Object_Int32( SXCRef context, SXCRef local_0_value, SlagInt32 local_1_before_index )
{
  ArrayList_of_Object__add__Object(context,local_0_value);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Object*)context)->property_data,((ClassArrayList_of_Object*)context)->property_data,local_1_before_index,(local_1_before_index+1),(((ClassArrayList_of_Object*)context)->property_count-(local_1_before_index+1)));
  sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)context)->property_data)->data))+local_1_before_index, local_0_value );
  return context;
}

static SlagObject* ArrayList_of_Object__remove__Int32( SXCRef context, SlagInt32 local_0_index )
{
  SXCRef local_1_result;

  if ((local_0_index >= ((ClassArrayList_of_Object*)context)->property_count))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str82.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_index,10))) );
  }
  local_1_result = ((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)context)->property_data)->data))[local_0_index];
  --(((ClassArrayList_of_Object*)context)->property_count);
  ((ClassArrayList_of_Object*)context)->property_modification_count = (((ClassArrayList_of_Object*)context)->property_modification_count+1);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Object*)context)->property_data,((ClassArrayList_of_Object*)context)->property_data,(local_0_index+1),local_0_index,(((ClassArrayList_of_Object*)context)->property_count-local_0_index));
  GenericArray__clear__Int32_Int32(((ClassArrayList_of_Object*)context)->property_data,((ClassArrayList_of_Object*)context)->property_count,((ClassArrayList_of_Object*)context)->property_count);
  return local_1_result;
}

static void ArrayList_of_Object__discard__Int32_Int32( SXCRef context, SlagInt32 local_0_first_index, SlagInt32 local_1_last_index )
{
  SlagInt32 local_2_len;

  if ((local_0_first_index < 0))
  {
    local_0_first_index = 0;
  }
  if ((local_1_last_index >= ((ClassArrayList_of_Object*)context)->property_count))
  {
    local_1_last_index = (((ClassArrayList_of_Object*)context)->property_count-1);
  }
  local_2_len = ((local_1_last_index-local_0_first_index)+1);
  if ((local_2_len == 0))
  {
    return;
  }
  if ((local_1_last_index >= ((ClassArrayList_of_Object*)context)->property_count))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str618.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_1_last_index,10))) );
  }
  ((ClassArrayList_of_Object*)context)->property_count -= local_2_len;
  ((ClassArrayList_of_Object*)context)->property_modification_count = (((ClassArrayList_of_Object*)context)->property_modification_count+1);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Object*)context)->property_data,((ClassArrayList_of_Object*)context)->property_data,(local_1_last_index+1),local_0_first_index,(((ClassArrayList_of_Object*)context)->property_count-local_0_first_index));
  GenericArray__clear__Int32_Int32(((ClassArrayList_of_Object*)context)->property_data,((ClassArrayList_of_Object*)context)->property_count,((((ClassArrayList_of_Object*)context)->property_count+local_2_len)-1));
}

static void ArrayList_of_Object__discard_last( SXCRef context )
{
  --(((ClassArrayList_of_Object*)context)->property_count);
  ((ClassArrayList_of_Object*)context)->property_modification_count = (((ClassArrayList_of_Object*)context)->property_modification_count+1);
  GenericArray__clear__Int32_Int32(((ClassArrayList_of_Object*)context)->property_data,((ClassArrayList_of_Object*)context)->property_count,((ClassArrayList_of_Object*)context)->property_count);
}

static SlagObject* ArrayList_of_Object__trim_to_count( SXCRef context )
{
  SXCRef local_0_new_data;

  local_0_new_data = type_ClassArray_of_Object.create(((ClassArrayList_of_Object*)context)->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_new_data,((ClassArrayList_of_Object*)context)->property_data,0,0,((ClassArrayList_of_Object*)context)->property_count);
  sxc_write_ref( &(((ClassArrayList_of_Object*)context)->property_data), local_0_new_data );
  return context;
}

static SlagObject* ArrayList_of_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Object__init__Int32(type_ClassArrayList_of_Object.create(),((ClassArrayList_of_Object*)context)->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Object*)local_0_dup)->property_data,((ClassArrayList_of_Object*)context)->property_data,0,0,((ClassArrayList_of_Object*)context)->property_count);
  ((ClassArrayList_of_Object*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)context)->property_count;
  return local_0_dup;
}

void ArrayList_of_Object__clear( SXCRef context )
{
  if ((((ClassArrayList_of_Object*)context)->property_count > 0))
  {
    GenericArray__clear__Int32_Int32(((ClassArrayList_of_Object*)context)->property_data,0,(((ClassArrayList_of_Object*)context)->property_count-1));
    ((ClassArrayList_of_Object*)context)->property_count = 0;
    ((ClassArrayList_of_Object*)context)->property_modification_count = (((ClassArrayList_of_Object*)context)->property_modification_count+1);
  }
}

void ArrayList_of_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Object__type_name( SXCRef context )
{
  return str24.value;
}

static SlagInt32 ParseReader__available( SXCRef context )
{
  if (ParseReader__has_another(context))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* ParseReader__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),ParseReader__available(context));
  while (ParseReader__has_another(context))
  {
    ArrayList_of_Char__add__Char(local_0_result_list,ParseReader__read(context));
  }
  return local_0_result_list;
}

SlagObject* ParseReader__to_String( SXCRef context )
{
  return ArrayList_of_Char__to_String(ParseReader__to_List(context));
}

static SlagObject* ParseReader__read_line( SXCRef context )
{
  SXCRef local_0_result;
  SXCRef local_1__reader3073;
  SlagChar local_2_ch;

  local_0_result = StringBuilder__init(type_ClassStringBuilder.create());
  local_1__reader3073 = context;
  while (ParseReader__has_another(local_1__reader3073))
  {
    local_2_ch = ParseReader__read(local_1__reader3073);
    if ((((SlagInt32)local_2_ch) == 13))
    {
      goto next_5263;
    }
    if ((((SlagInt32)local_2_ch) == 10))
    {
      goto end_5263;
    }
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_result)->property_data,local_2_ch);
    next_5263:;
  }
  end_5263:;
  return StringBuilder__to_String(local_0_result);
}

static SlagObject* ParseReader__init__Reader_of_Char( SXCRef context, SXCRef local_0_reader )
{
  SXCRef local_1_list;
  SXCRef local_2_new_list;
  SXCRef local_3__reader331;
  SlagChar local_4_ch;

  local_1_list = CallFn____Object(13,local_0_reader);
  if (!true)
  {
    local_2_new_list = ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),((ClassArrayList_of_Char*)local_1_list)->property_count);
    local_3__reader331 = ArrayList_of_Char__create_reader(local_1_list);
    while (CallFn____Logical(14,local_3__reader331))
    {
      local_4_ch = CallFn____Char(29,local_3__reader331);
      ArrayList_of_Char__add__Char(local_2_new_list,local_4_ch);
    }
    local_1_list = local_2_new_list;
  }
  ParseReader__init__ArrayList_of_Char(context,local_1_list);
  return context;
}

static SlagObject* ParseReader__init__ArrayList_of_Char( SXCRef context, SXCRef local_0_list )
{
  sxc_write_ref( &(((ClassParseReader*)context)->property_data), ((ClassArrayList_of_Char*)local_0_list)->property_data );
  ((ClassParseReader*)context)->property_remaining = ((ClassArrayList_of_Char*)local_0_list)->property_count;
  ParseReader__prep_data(context);
  ((ClassParseReader*)context)->property_current_mark = CompoundParseReaderMark(((ClassParseReader*)context)->property_line,((ClassParseReader*)context)->property_column,((ClassParseReader*)context)->property_pos,((ClassParseReader*)context)->property_remaining);
  return context;
}

static SlagObject* ParseReader__init__Array_of_Char( SXCRef context, SXCRef local_0_data_3674 )
{
  sxc_write_ref( &(((ClassParseReader*)context)->property_data), local_0_data_3674 );
  ((ClassParseReader*)context)->property_remaining = ((SlagArray*)((ClassParseReader*)context)->property_data)->array_count;
  ParseReader__prep_data(context);
  ((ClassParseReader*)context)->property_current_mark = CompoundParseReaderMark(((ClassParseReader*)context)->property_line,((ClassParseReader*)context)->property_column,((ClassParseReader*)context)->property_pos,((ClassParseReader*)context)->property_remaining);
  return context;
}

static SlagObject* ParseReader__init__String( SXCRef context, SXCRef local_0_text )
{
  sxc_write_ref( &(((ClassParseReader*)context)->property_data), String__to_Array(local_0_text) );
  ((ClassParseReader*)context)->property_remaining = ((SlagArray*)((ClassParseReader*)context)->property_data)->array_count;
  ParseReader__prep_data(context);
  ((ClassParseReader*)context)->property_current_mark = CompoundParseReaderMark(((ClassParseReader*)context)->property_line,((ClassParseReader*)context)->property_column,((ClassParseReader*)context)->property_pos,((ClassParseReader*)context)->property_remaining);
  return context;
}

static void ParseReader__prep_data( SXCRef context )
{
  SLAG_PUSH_REF( context );
  ParseReader__prep_data();
}

static SlagLogical ParseReader__has_another( SXCRef context )
{
  SLAG_PUSH_REF( context );
  ParseReader__has_another();
  return SLAG_POP_LOGICAL();
}

static SlagChar ParseReader__peek( SXCRef context )
{
  SLAG_PUSH_REF( context );
  ParseReader__peek();
  return SLAG_POP_CHAR();
}

static SlagChar ParseReader__peek__Int32( SXCRef context, SlagInt32 local_0_n )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_INT32( local_0_n );
  ParseReader__peek__Int32();
  return SLAG_POP_CHAR();
}

static SlagChar ParseReader__read( SXCRef context )
{
  SLAG_PUSH_REF( context );
  ParseReader__read();
  return SLAG_POP_CHAR();
}

static SlagLogical ParseReader__consume__Char( SXCRef context, SlagChar local_0_ch )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_CHAR( local_0_ch );
  ParseReader__consume__Char();
  return SLAG_POP_LOGICAL();
}

static SlagLogical ParseReader__consume__String( SXCRef context, SXCRef local_0_st )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_st );
  ParseReader__consume__String();
  return SLAG_POP_LOGICAL();
}

static CompoundParsePos ParseReader__cur_pos( SXCRef context )
{
  return CompoundParsePos(((ClassParseReader*)context)->property_line,((ClassParseReader*)context)->property_column);
}

void ParseReader__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassParseReader*)context)->property_line = 1;
  ((ClassParseReader*)context)->property_column = 1;
  ((ClassParseReader*)context)->property_spaces_per_tab = 2;
}

SlagObject* ParseReader__type_name( SXCRef context )
{
  return str31.value;
}

static SlagObject* ArrayReader_of_Cmd__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Cmd__init__Int32(type_ClassArrayList_of_Cmd.create(),CallFn____Int32(31,context));
  while (CallFn____Logical(14,context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,CallFn____Object(45,context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_Cmd__to_String( SXCRef context )
{
  return ArrayList_of_Cmd__to_String(ArrayReader_of_Cmd__to_List(context));
}

static SlagObject* ArrayReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd_Int32_Int32( SXCRef context, SXCRef local_0_collection_7187, SXCRef local_1_data_7186, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_Cmd*)context)->property_collection), local_0_collection_7187 );
  sxc_write_ref( &(((ClassArrayReader_of_Cmd*)context)->property_data), local_1_data_7186 );
  ((ClassArrayReader_of_Cmd*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_Cmd*)context)->property_collection);
  }
  ((ClassArrayReader_of_Cmd*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_Cmd*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_Cmd*)context)->property_collection)))
  {
    ((ClassArrayReader_of_Cmd*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_Cmd*)context)->property_collection);
  }
  ((ClassArrayReader_of_Cmd*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_Cmd*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_Cmd__create_duplicate( SXCRef context )
{
  return ArrayReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd_Int32_Int32(type_ClassArrayReader_of_Cmd.create(),((ClassArrayReader_of_Cmd*)context)->property_collection,((ClassArrayReader_of_Cmd*)context)->property_data,((ClassArrayReader_of_Cmd*)context)->property_counter,(((ClassArrayReader_of_Cmd*)context)->property_last_exclusive-((ClassArrayReader_of_Cmd*)context)->property_counter));
}

static SlagLogical ArrayReader_of_Cmd__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_Cmd*)context)->property_counter < ((ClassArrayReader_of_Cmd*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_Cmd*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_Cmd*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_Cmd__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_Cmd*)context)->property_last_exclusive-((ClassArrayReader_of_Cmd*)context)->property_counter);
}

static SlagObject* ArrayReader_of_Cmd__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassCmd**)(((SlagArray*)((ClassArrayReader_of_Cmd*)context)->property_data)->data))[((ClassArrayReader_of_Cmd*)context)->property_counter];
  ++(((ClassArrayReader_of_Cmd*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_Cmd__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_Cmd__type_name( SXCRef context )
{
  return str675.value;
}

static SlagObject* CmdLiteralString__init__Token_String_Int32( SXCRef context, SXCRef local_0_t_7217, SXCRef local_1_value_7216, SlagInt32 local_2_index_7215 )
{
  sxc_write_ref( &(((ClassCmdLiteralString*)context)->property_t), local_0_t_7217 );
  sxc_write_ref( &(((ClassCmdLiteralString*)context)->property_value), local_1_value_7216 );
  ((ClassCmdLiteralString*)context)->property_index = local_2_index_7215;
  return context;
}

static SlagObject* CmdLiteralString__create_duplicate( SXCRef context )
{
  return CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),((ClassCmdLiteralString*)context)->property_t,((ClassCmdLiteralString*)context)->property_value,((ClassCmdLiteralString*)context)->property_index);
}

static SlagObject* CmdLiteralString__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_string;
}

SlagObject* CmdLiteralString__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str687.value),((ClassCmdLiteralString*)context)->property_value),str688.value));
}

static SlagObject* CmdLiteralString__resolve( SXCRef context )
{
  if ((((ClassCmdLiteralString*)context)->property_index == -1))
  {
    ((ClassCmdLiteralString*)context)->property_index = StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_strings,((ClassCmdLiteralString*)context)->property_value);
  }
  return context;
}

static void CmdLiteralString__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_literal_string)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_strings,((ClassCmdLiteralString*)context)->property_value));
}

static SlagObject* CmdLiteralString__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1630.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],StringTable__get__String(((ClassTypeManager*)sxc_singletons[7])->property_strings,((ClassCmdLiteralString*)context)->property_value),10))),str1631.value));
}

static SlagObject* CmdLiteralString__to_cs( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader2924;
  SlagChar local_2_ch;
  SlagChar local_3_which_2926;
  SlagChar local_4_which_2927;

  local_0_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),str1913.value);
  local_1__reader2924 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),((ClassCmdLiteralString*)context)->property_value,0,-1));
  while (CallFn____Logical(14,local_1__reader2924))
  {
    local_2_ch = CallFn____Char(29,local_1__reader2924);
    if (((((SlagInt32)local_2_ch) >= 32) && (((SlagInt32)local_2_ch) <= 126)))
    {
      local_3_which_2926 = local_2_ch;
      if ((((SlagInt32)local_3_which_2926) == 92))
      {
        StringBuilder__print__String(local_0_buffer,str1541.value);
      }
      else if ((((SlagInt32)local_3_which_2926) == 34))
      {
        StringBuilder__print__String(local_0_buffer,str1540.value);
      }
      else
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_buffer)->property_data,local_2_ch);
      }
    }
    else
    {
      local_4_which_2927 = local_2_ch;
      if ((((SlagInt32)local_4_which_2927) == 9))
      {
        StringBuilder__print__String(local_0_buffer,str1914.value);
      }
      else if ((((SlagInt32)local_4_which_2927) == 10))
      {
        StringBuilder__print__String(local_0_buffer,str1542.value);
      }
      else if ((((SlagInt32)local_4_which_2927) == 13))
      {
        StringBuilder__print__String(local_0_buffer,str1915.value);
      }
      else
      {
        if ((((SlagInt32)local_2_ch) <= 255))
        {
          StringBuilder__print__String(local_0_buffer,String__opADD__String(str1543.value,String__rightmost__Int32(String__opADD__String(str1916.value,Global__to_String__Char_Int32(sxc_singletons[21],local_2_ch,8)),3)));
        }
        else
        {
          StringBuilder__print__String(local_0_buffer,String__opADD__String(str1917.value,Global__format_string__String_Int32_Int32_Char(sxc_singletons[21],Global__to_String__Char_Int32(sxc_singletons[21],local_2_ch,16),4,4,((SlagChar)48))));
        }
      }
    }
  }
  return String__opADD__String(StringBuilder__to_String(local_0_buffer),str1918.value);
}

static SlagObject* CmdLiteralString__to_java( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader2929;
  SlagChar local_2_ch;
  SlagChar local_3_which_2931;
  SlagChar local_4_which_2932;

  local_0_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),str1913.value);
  local_1__reader2929 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),((ClassCmdLiteralString*)context)->property_value,0,-1));
  while (CallFn____Logical(14,local_1__reader2929))
  {
    local_2_ch = CallFn____Char(29,local_1__reader2929);
    if (((((SlagInt32)local_2_ch) >= 32) && (((SlagInt32)local_2_ch) <= 126)))
    {
      local_3_which_2931 = local_2_ch;
      if ((((SlagInt32)local_3_which_2931) == 92))
      {
        StringBuilder__print__String(local_0_buffer,str1541.value);
      }
      else if ((((SlagInt32)local_3_which_2931) == 34))
      {
        StringBuilder__print__String(local_0_buffer,str1540.value);
      }
      else
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_buffer)->property_data,local_2_ch);
      }
    }
    else
    {
      local_4_which_2932 = local_2_ch;
      if ((((SlagInt32)local_4_which_2932) == 9))
      {
        StringBuilder__print__String(local_0_buffer,str1914.value);
      }
      else if ((((SlagInt32)local_4_which_2932) == 10))
      {
        StringBuilder__print__String(local_0_buffer,str1542.value);
      }
      else if ((((SlagInt32)local_4_which_2932) == 13))
      {
        StringBuilder__print__String(local_0_buffer,str1915.value);
      }
      else
      {
        if ((((SlagInt32)local_2_ch) <= 255))
        {
          StringBuilder__print__String(local_0_buffer,String__opADD__String(str1543.value,String__rightmost__Int32(String__opADD__String(str1916.value,Global__to_String__Char_Int32(sxc_singletons[21],local_2_ch,8)),3)));
        }
        else
        {
          StringBuilder__print__String(local_0_buffer,String__opADD__String(str1917.value,Global__format_string__String_Int32_Int32_Char(sxc_singletons[21],Global__to_String__Char_Int32(sxc_singletons[21],local_2_ch,16),4,4,((SlagChar)48))));
        }
      }
    }
  }
  return String__opADD__String(StringBuilder__to_String(local_0_buffer),str1918.value);
}

void CmdLiteralString__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLiteralString__type_name( SXCRef context )
{
  return str686.value;
}

static SlagLogical StringReader__consume__Char( SXCRef context, SlagChar local_0_look_for )
{
  if (!StringReader__has_another(context))
  {
    return false;
  }
  if ((((SlagInt32)StringReader__peek(context)) == ((SlagInt32)local_0_look_for)))
  {
    StringReader__read(context);
    return true;
  }
  return false;
}

static SlagObject* StringReader__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),StringReader__remaining(context));
  while (StringReader__has_another(context))
  {
    ArrayList_of_Char__add__Char(local_0_result_list,StringReader__read(context));
  }
  return local_0_result_list;
}

SlagObject* StringReader__to_String( SXCRef context )
{
  return ArrayList_of_Char__to_String(StringReader__to_List(context));
}

static SlagObject* StringReader__init__String_Int32_Int32( SXCRef context, SXCRef local_0_string_3968, SlagInt32 local_1_first_index, SlagInt32 local_2_count )
{
  sxc_write_ref( &(((ClassStringReader*)context)->property_string), local_0_string_3968 );
  ((ClassStringReader*)context)->property_counter = local_1_first_index;
  if ((local_2_count == -1))
  {
    local_2_count = (((SlagString*)((ClassStringReader*)context)->property_string)->count);
  }
  ((ClassStringReader*)context)->property_last_exclusive = (local_1_first_index+local_2_count);
  if ((((ClassStringReader*)context)->property_last_exclusive > (((SlagString*)((ClassStringReader*)context)->property_string)->count)))
  {
    ((ClassStringReader*)context)->property_last_exclusive = (((SlagString*)((ClassStringReader*)context)->property_string)->count);
  }
  return context;
}

static SlagObject* StringReader__create_duplicate( SXCRef context )
{
  return StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),((ClassStringReader*)context)->property_string,((ClassStringReader*)context)->property_counter,(((ClassStringReader*)context)->property_last_exclusive-((ClassStringReader*)context)->property_counter));
}

static SlagLogical StringReader__has_another( SXCRef context )
{
  return (((ClassStringReader*)context)->property_counter < ((ClassStringReader*)context)->property_last_exclusive);
}

static SlagInt32 StringReader__remaining( SXCRef context )
{
  return (((ClassStringReader*)context)->property_last_exclusive-((ClassStringReader*)context)->property_counter);
}

static SlagChar StringReader__peek( SXCRef context )
{
  return String__get__Int32(((ClassStringReader*)context)->property_string,((ClassStringReader*)context)->property_counter);
}

static SlagChar StringReader__read( SXCRef context )
{
  SlagChar local_0_result;

  local_0_result = String__get__Int32(((ClassStringReader*)context)->property_string,((ClassStringReader*)context)->property_counter);
  ++(((ClassStringReader*)context)->property_counter);
  return local_0_result;
}

void StringReader__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* StringReader__type_name( SXCRef context )
{
  return str30.value;
}

static SlagObject* ArrayReverseReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd( SXCRef context, SXCRef local_0_collection_10307, SXCRef local_1_data_10306 )
{
  sxc_write_ref( &(((ClassArrayReverseReader_of_Cmd*)context)->property_collection), local_0_collection_10307 );
  sxc_write_ref( &(((ClassArrayReverseReader_of_Cmd*)context)->property_data), local_1_data_10306 );
  ((ClassArrayReverseReader_of_Cmd*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReverseReader_of_Cmd*)context)->property_collection);
  ((ClassArrayReverseReader_of_Cmd*)context)->property_counter = (CallFn____Int32(19,((ClassArrayReverseReader_of_Cmd*)context)->property_collection)-1);
  return context;
}

static SlagObject* ArrayReverseReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_10312, SXCRef local_1_data_10311, SlagInt32 local_2_counter_10310, SlagInt32 local_3_last_exclusive_10309, SlagInt32 local_4_original_modification_count_10308 )
{
  sxc_write_ref( &(((ClassArrayReverseReader_of_Cmd*)context)->property_collection), local_0_collection_10312 );
  sxc_write_ref( &(((ClassArrayReverseReader_of_Cmd*)context)->property_data), local_1_data_10311 );
  ((ClassArrayReverseReader_of_Cmd*)context)->property_counter = local_2_counter_10310;
  ((ClassArrayReverseReader_of_Cmd*)context)->property_last_exclusive = local_3_last_exclusive_10309;
  ((ClassArrayReverseReader_of_Cmd*)context)->property_original_modification_count = local_4_original_modification_count_10308;
  return context;
}

static SlagObject* ArrayReverseReader_of_Cmd__create_duplicate( SXCRef context )
{
  return ArrayReverseReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd_Int32_Int32_Int32(type_ClassArrayReverseReader_of_Cmd.create(),((ClassArrayReverseReader_of_Cmd*)context)->property_collection,((ClassArrayReverseReader_of_Cmd*)context)->property_data,((ClassArrayReverseReader_of_Cmd*)context)->property_counter,((ClassArrayReverseReader_of_Cmd*)context)->property_last_exclusive,((ClassArrayReverseReader_of_Cmd*)context)->property_original_modification_count);
}

static SlagLogical ArrayReverseReader_of_Cmd__has_another( SXCRef context )
{
  if ((((ClassArrayReverseReader_of_Cmd*)context)->property_counter >= 0))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReverseReader_of_Cmd*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReverseReader_of_Cmd*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReverseReader_of_Cmd__remaining( SXCRef context )
{
  return (((ClassArrayReverseReader_of_Cmd*)context)->property_counter+1);
}

static SlagObject* ArrayReverseReader_of_Cmd__read( SXCRef context )
{
  SXCRef local_0_result;

  if ((((ClassArrayReverseReader_of_Cmd*)context)->property_counter < 0))
  {
    SLAG_THROW( NoNextValueError__init(type_ClassNoNextValueError.create()) );
  }
  local_0_result = ((ClassCmd**)(((SlagArray*)((ClassArrayReverseReader_of_Cmd*)context)->property_data)->data))[((ClassArrayReverseReader_of_Cmd*)context)->property_counter];
  --(((ClassArrayReverseReader_of_Cmd*)context)->property_counter);
  return local_0_result;
}

void ArrayReverseReader_of_Cmd__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReverseReader_of_Cmd__type_name( SXCRef context )
{
  return str1490.value;
}

SlagObject* Mapping_of_Int32_and_Cmd__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMapping_of_Int32_and_Cmd*)context)->property_key,10))),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Int32_and_Cmd*)context)->property_value)));
}

void Mapping_of_Int32_and_Cmd__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_Int32_and_Cmd__type_name( SXCRef context )
{
  return str1180.value;
}

static SlagObject* CmdNextIteration__create_duplicate( SXCRef context )
{
  return CmdStructureControl__init__Token_Int32(type_ClassCmdNextIteration.create(),((ClassCmdNextIteration*)context)->property_t,((ClassCmdNextIteration*)context)->property_id);
}

static SlagObject* CmdNextIteration__resolve( SXCRef context )
{
  SXCRef local_0_entry;
  SXCRef local_1_code;

  ((ClassCmdNextIteration*)context)->property_id = GenericHashTable_of_Int32_and_Int32__get__Int32(((ClassHashTable_of_Int32_and_Int32*)((ClassContext*)sxc_singletons[10])->property_id_remap_table)->property_data,((ClassCmdNextIteration*)context)->property_id);
  local_0_entry = ((ClassMapping_of_Int32_and_Cmd*)GenericHashTable_of_Int32_and_Object__find__Int32(((ClassHashTable_of_Int32_and_Cmd*)((ClassContext*)sxc_singletons[10])->property_next_iteration_injections)->property_data,((ClassCmdNextIteration*)context)->property_id));
  if ((local_0_entry != NULL))
  {
    local_1_code = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassCmdNextIteration*)context)->property_t,2);
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_1_code)->property_statements,CallFn____Object(16,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassMapping_of_Int32_and_Cmd*)local_0_entry)->property_value)));
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_1_code)->property_statements,context);
    return local_1_code;
  }
  else
  {
    return context;
  }
}

static void CmdNextIteration__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_next_iteration)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCmdNextIteration*)context)->property_id);
}

static SlagObject* CmdNextIteration__to_cpp( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str1661.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdNextIteration*)context)->property_id,10))));
}

static SlagObject* CmdNextIteration__to_cs( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str1661.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdNextIteration*)context)->property_id,10))));
}

static SlagObject* CmdNextIteration__to_java( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str2008.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdNextIteration*)context)->property_id,10))));
}

void CmdNextIteration__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdNextIteration__type_name( SXCRef context )
{
  return str801.value;
}

static SlagObject* CmdEscape__create_duplicate( SXCRef context )
{
  return CmdStructureControl__init__Token_Int32(type_ClassCmdEscape.create(),((ClassCmdEscape*)context)->property_t,((ClassCmdEscape*)context)->property_id);
}

static void CmdEscape__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_escape)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCmdEscape*)context)->property_id);
}

static SlagObject* CmdEscape__to_cpp( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str1639.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdEscape*)context)->property_id,10))));
}

static SlagObject* CmdEscape__to_cs( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str1639.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdEscape*)context)->property_id,10))));
}

static SlagObject* CmdEscape__to_java( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str2006.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdEscape*)context)->property_id,10))));
}

void CmdEscape__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdEscape__type_name( SXCRef context )
{
  return str795.value;
}

static SlagObject* CmdForEachOf__create_duplicate( SXCRef context )
{
  return CmdForEach__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList(type_ClassCmdForEachOf.create(),((ClassCmdForEachOf*)context)->property_t,((ClassCmdForEachOf*)context)->property_id,((ClassCmdForEachOf*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdForEachOf*)context)->property_control),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdForEachOf*)context)->property_body));
}

static SlagObject* CmdForEachOf__resolve( SXCRef context )
{
  SXCRef local_0_locals;
  SXCRef local_1_count_name;
  SXCRef local_2_count_info;
  SXCRef local_3_result;
  SXCRef local_4_modifier;

  local_0_locals = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassCmdForEachOf*)context)->property_t,2);
  local_1_count_name = String__opADD__String(str1232.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdForEachOf*)context)->property_id,10)));
  local_2_count_info = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),((ClassCmdForEachOf*)context)->property_t,((ClassContext*)sxc_singletons[10])->property_this_method,((ClassTypeManager*)sxc_singletons[7])->property_type_var,local_1_count_name,-1);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_locals)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),((ClassCmdForEachOf*)context)->property_t,((ClassCmdForEachOf*)context)->property_var_info,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdForEachOf*)context)->property_t,0)));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_locals)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),((ClassCmdForEachOf*)context)->property_t,local_2_count_info,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdForEachOf*)context)->property_t,((ClassCmdForEachOf*)context)->property_control,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdForEachOf*)context)->property_t,str1233.value,NULL))));
  local_3_result = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassCmdForEachOf*)context)->property_t,5);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_3_result)->property_statements,CmdOpenScope__init__Token(type_ClassCmdOpenScope.create(),((ClassCmdForEachOf*)context)->property_t));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_3_result)->property_statements,local_0_locals);
  local_4_modifier = CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo(type_ClassCmdLocalVarIncrement.create(),((ClassCmdForEachOf*)context)->property_t,((ClassCmdForEachOf*)context)->property_var_info);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_Cmd*)((ClassContext*)sxc_singletons[10])->property_next_iteration_injections)->property_data,((ClassCmdForEachOf*)context)->property_id,local_4_modifier);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)((ClassCmdForEachOf*)context)->property_body)->property_statements,local_4_modifier);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_3_result)->property_statements,CmdWhile__init__Token_Int32_Cmd_CmdStatementList(type_ClassCmdWhile.create(),((ClassCmdForEachOf*)context)->property_t,((ClassCmdForEachOf*)context)->property_id,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpLT.create(),((ClassCmdForEachOf*)context)->property_t,CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),((ClassCmdForEachOf*)context)->property_t,((ClassCmdForEachOf*)context)->property_var_info),CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),((ClassCmdForEachOf*)context)->property_t,local_2_count_info)),((ClassCmdForEachOf*)context)->property_body));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_3_result)->property_statements,CmdCloseScope__init__Token(type_ClassCmdCloseScope.create(),((ClassCmdForEachOf*)context)->property_t));
  return CmdBlock__resolve(CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdBlock.create(),((ClassCmdForEachOf*)context)->property_t,SlagParserManager__unique_id(sxc_singletons[35]),local_3_result));
}

void CmdForEachOf__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdForEachOf__type_name( SXCRef context )
{
  return str784.value;
}

static SlagObject* CmdNewCompound__init__Token_TypeInfo_CmdList( SXCRef context, SXCRef local_0_t_9331, SXCRef local_1_of_type_9330, SXCRef local_2_args_9329 )
{
  sxc_write_ref( &(((ClassCmdNewCompound*)context)->property_t), local_0_t_9331 );
  sxc_write_ref( &(((ClassCmdNewCompound*)context)->property_of_type), local_1_of_type_9330 );
  sxc_write_ref( &(((ClassCmdNewCompound*)context)->property_args), local_2_args_9329 );
  return context;
}

static SlagObject* CmdNewCompound__create_duplicate( SXCRef context )
{
  return CmdNewCompound__init__Token_TypeInfo_CmdList(type_ClassCmdNewCompound.create(),((ClassCmdNewCompound*)context)->property_t,((ClassCmdNewCompound*)context)->property_of_type,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdNewCompound*)context)->property_args));
}

static SlagObject* CmdNewCompound__type( SXCRef context )
{
  return ((ClassCmdNewCompound*)context)->property_of_type;
}

SlagObject* CmdNewCompound__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CmdNewCompound__type_name(context)),str61.value),((ClassTypeInfo*)((ClassCmdNewCompound*)context)->property_of_type)->property_name),str395.value),ArrayList_of_Cmd__format__String_String(((ClassCmdNewCompound*)context)->property_args,str1049.value,str64.value)),str62.value));
}

static SlagObject* CmdNewCompound__resolve( SXCRef context )
{
  return context;
}

static SlagObject* CmdNewCompound__finalize_calls( SXCRef context )
{
  CmdList__finalize_calls(((ClassCmdNewCompound*)context)->property_args);
  return context;
}

static void CmdNewCompound__finalize_structure_info( SXCRef context )
{
  CmdList__finalize_structure_info(((ClassCmdNewCompound*)context)->property_args);
}

static void CmdNewCompound__group_dynamic_methods( SXCRef context )
{
  CmdList__group_dynamic_methods(((ClassCmdNewCompound*)context)->property_args);
}

static SlagObject* CmdNewCompound__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  CmdList__to_inline__CmdList(((ClassCmdNewCompound*)context)->property_args,local_0_arg_list);
  return context;
}

static void CmdNewCompound__write_etc( SXCRef context )
{
  SXCRef local_0__reader2967;
  SXCRef local_1_arg;

  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_new_compound)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassTypeInfo*)((ClassCmdNewCompound*)context)->property_of_type)->property_index);
  local_0__reader2967 = ArrayList_of_Cmd__reverse_order(((ClassCmdNewCompound*)context)->property_args);
  while (CallFn____Logical(14,local_0__reader2967))
  {
    local_1_arg = CallFn____Object(45,local_0__reader2967);
    CallFn__(7,local_1_arg);
  }
}

static SlagObject* CmdNewCompound__to_cpp( SXCRef context )
{
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdNewCompound*)context)->property_args))->property_count != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassCmdNewCompound*)context)->property_of_type)),str61.value),CmdList__to_cpp(((ClassCmdNewCompound*)context)->property_args)),str62.value));
  }
  else
  {
    return TypeInfo__x_name(((ClassCmdNewCompound*)context)->property_of_type);
  }
}

static SlagObject* CmdNewCompound__to_cs( SXCRef context )
{
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdNewCompound*)context)->property_args))->property_count != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1955.value),TypeInfo__x_name(((ClassCmdNewCompound*)context)->property_of_type)),str61.value),CmdList__to_cs(((ClassCmdNewCompound*)context)->property_args)),str62.value));
  }
  else
  {
    return String__opADD__String(str1955.value,TypeInfo__x_name(((ClassCmdNewCompound*)context)->property_of_type));
  }
}

static SlagObject* CmdNewCompound__to_java( SXCRef context )
{
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdNewCompound*)context)->property_args))->property_count != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1955.value),TypeInfo__x_name(((ClassCmdNewCompound*)context)->property_of_type)),str61.value),CmdList__to_java(((ClassCmdNewCompound*)context)->property_args)),str62.value));
  }
  else
  {
    return String__opADD__String(str1955.value,TypeInfo__x_name(((ClassCmdNewCompound*)context)->property_of_type));
  }
}

void CmdNewCompound__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdNewCompound__type_name( SXCRef context )
{
  return str1155.value;
}

static SlagObject* FileWriter__init__String_Logical( SXCRef context, SXCRef local_0_filename, SlagLogical local_1_append )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_filename );
  SLAG_PUSH_LOGICAL( local_1_append );
  FileWriter__init__String_Logical();
  return context;
}

static void FileWriter__close( SXCRef context )
{
  SLAG_PUSH_REF( context );
  FileWriter__close();
}

static void FileWriter__write__Char( SXCRef context, SlagChar local_0_value )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_CHAR( local_0_value );
  FileWriter__write__Char();
}

static void FileWriter__write__String( SXCRef context, SXCRef local_0_value )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_value );
  FileWriter__write__String();
}

static void FileWriter__print__String( SXCRef context, SXCRef local_0_value )
{
  FileWriter__write__String(context,local_0_value);
}

void FileWriter__clean_up( SXCRef context )
{
  FileWriter__close(context);
  CallFn__(20,context);
}

void FileWriter__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* FileWriter__type_name( SXCRef context )
{
  return str34.value;
}

static SlagObject* ArrayReader_of_ParamInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_ParamInfo__init__Int32(type_ClassArrayList_of_ParamInfo.create(),ArrayReader_of_ParamInfo__remaining(context));
  while (ArrayReader_of_ParamInfo__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_ParamInfo__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_ParamInfo__to_String( SXCRef context )
{
  return ArrayList_of_ParamInfo__to_String(ArrayReader_of_ParamInfo__to_List(context));
}

static SlagObject* ArrayReader_of_ParamInfo__init__Collection_of_ParamInfo_Array_of_ParamInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_10183, SXCRef local_1_data_10182, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_ParamInfo*)context)->property_collection), local_0_collection_10183 );
  sxc_write_ref( &(((ClassArrayReader_of_ParamInfo*)context)->property_data), local_1_data_10182 );
  ((ClassArrayReader_of_ParamInfo*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_ParamInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_ParamInfo*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_ParamInfo*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_ParamInfo*)context)->property_collection)))
  {
    ((ClassArrayReader_of_ParamInfo*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_ParamInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_ParamInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_ParamInfo*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_ParamInfo__create_duplicate( SXCRef context )
{
  return ArrayReader_of_ParamInfo__init__Collection_of_ParamInfo_Array_of_ParamInfo_Int32_Int32(type_ClassArrayReader_of_ParamInfo.create(),((ClassArrayReader_of_ParamInfo*)context)->property_collection,((ClassArrayReader_of_ParamInfo*)context)->property_data,((ClassArrayReader_of_ParamInfo*)context)->property_counter,(((ClassArrayReader_of_ParamInfo*)context)->property_last_exclusive-((ClassArrayReader_of_ParamInfo*)context)->property_counter));
}

static SlagLogical ArrayReader_of_ParamInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_ParamInfo*)context)->property_counter < ((ClassArrayReader_of_ParamInfo*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_ParamInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_ParamInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_ParamInfo__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_ParamInfo*)context)->property_last_exclusive-((ClassArrayReader_of_ParamInfo*)context)->property_counter);
}

static SlagObject* ArrayReader_of_ParamInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassParamInfo**)(((SlagArray*)((ClassArrayReader_of_ParamInfo*)context)->property_data)->data))[((ClassArrayReader_of_ParamInfo*)context)->property_counter];
  ++(((ClassArrayReader_of_ParamInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_ParamInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_ParamInfo__type_name( SXCRef context )
{
  return str1377.value;
}

static SlagInt32 HashTableKeyReader_of_Object_and_Int32__available( SXCRef context )
{
  if ((((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_entries != NULL))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* HashTableKeyReader_of_Object_and_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Object__init__Int32(type_ClassArrayList_of_Object.create(),HashTableKeyReader_of_Object_and_Int32__available(context));
  while ((((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_entries != NULL))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,HashTableKeyReader_of_Object_and_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* HashTableKeyReader_of_Object_and_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Object__to_String(HashTableKeyReader_of_Object_and_Int32__to_List(context));
}

static SlagObject* HashTableKeyReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32( SXCRef context, SXCRef local_0_bins_5339 )
{
  sxc_write_ref( &(((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_bins), local_0_bins_5339 );
  if (CallFn____Logical(14,((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_bins))
  {
    sxc_write_ref( &(((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Int32__create_reader(((ClassHashTableBin_of_Object_and_Int32*)CallFn____Object(45,((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_bins))->property_entries) );
  }
  HashTableKeyReader_of_Object_and_Int32__prep_next(context);
  return context;
}

static void HashTableKeyReader_of_Object_and_Int32__prep_next( SXCRef context )
{
  if ((((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_entries == NULL))
  {
    return;
  }
  while (!CallFn____Logical(14,((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_entries))
  {
    if (CallFn____Logical(14,((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_bins))
    {
      sxc_write_ref( &(((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Int32__create_reader(((ClassHashTableBin_of_Object_and_Int32*)CallFn____Object(45,((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_bins))->property_entries) );
    }
    else
    {
      sxc_write_ref( &(((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_entries), NULL );
      return;
    }
  }
}

static SlagLogical HashTableKeyReader_of_Object_and_Int32__has_another( SXCRef context )
{
  return (((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_entries != NULL);
}

static SlagObject* HashTableKeyReader_of_Object_and_Int32__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassMapping_of_Object_and_Int32*)CallFn____Object(45,((ClassHashTableKeyReader_of_Object_and_Int32*)context)->property_entries))->property_key;
  HashTableKeyReader_of_Object_and_Int32__prep_next(context);
  return local_0_result;
}

void HashTableKeyReader_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableKeyReader_of_Object_and_Int32__type_name( SXCRef context )
{
  return str363.value;
}

SlagObject* StackTraceInfo__init( SXCRef context )
{
  return context;
}

SlagObject* StackTraceInfo__to_String( SXCRef context )
{
  if ((((ClassStackTraceInfo*)context)->property_filename == NULL))
  {
    return String__opADD__String(str69.value,((ClassStackTraceInfo*)context)->property_method_name);
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str69.value),((ClassStackTraceInfo*)context)->property_method_name),str70.value),((ClassStackTraceInfo*)context)->property_filename),str71.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassStackTraceInfo*)context)->property_line,10))));
}

void StackTraceInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* StackTraceInfo__type_name( SXCRef context )
{
  return str72.value;
}

static SlagObject* ArrayReader_of_Qualifiers__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Qualifiers__init__Int32(type_ClassArrayList_of_Qualifiers.create(),ArrayReader_of_Qualifiers__remaining(context));
  while (ArrayReader_of_Qualifiers__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_Qualifiers__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_Qualifiers__to_String( SXCRef context )
{
  return ArrayList_of_Qualifiers__to_String(ArrayReader_of_Qualifiers__to_List(context));
}

static SlagObject* ArrayReader_of_Qualifiers__init__Collection_of_Qualifiers_Array_of_Qualifiers_Int32_Int32( SXCRef context, SXCRef local_0_collection_6860, SXCRef local_1_data_6859, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_Qualifiers*)context)->property_collection), local_0_collection_6860 );
  sxc_write_ref( &(((ClassArrayReader_of_Qualifiers*)context)->property_data), local_1_data_6859 );
  ((ClassArrayReader_of_Qualifiers*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_Qualifiers*)context)->property_collection);
  }
  ((ClassArrayReader_of_Qualifiers*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_Qualifiers*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_Qualifiers*)context)->property_collection)))
  {
    ((ClassArrayReader_of_Qualifiers*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_Qualifiers*)context)->property_collection);
  }
  ((ClassArrayReader_of_Qualifiers*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_Qualifiers*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_Qualifiers__create_duplicate( SXCRef context )
{
  return ArrayReader_of_Qualifiers__init__Collection_of_Qualifiers_Array_of_Qualifiers_Int32_Int32(type_ClassArrayReader_of_Qualifiers.create(),((ClassArrayReader_of_Qualifiers*)context)->property_collection,((ClassArrayReader_of_Qualifiers*)context)->property_data,((ClassArrayReader_of_Qualifiers*)context)->property_counter,(((ClassArrayReader_of_Qualifiers*)context)->property_last_exclusive-((ClassArrayReader_of_Qualifiers*)context)->property_counter));
}

static SlagLogical ArrayReader_of_Qualifiers__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_Qualifiers*)context)->property_counter < ((ClassArrayReader_of_Qualifiers*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_Qualifiers*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_Qualifiers*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_Qualifiers__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_Qualifiers*)context)->property_last_exclusive-((ClassArrayReader_of_Qualifiers*)context)->property_counter);
}

static SlagObject* ArrayReader_of_Qualifiers__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassQualifiers**)(((SlagArray*)((ClassArrayReader_of_Qualifiers*)context)->property_data)->data))[((ClassArrayReader_of_Qualifiers*)context)->property_counter];
  ++(((ClassArrayReader_of_Qualifiers*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_Qualifiers__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_Qualifiers__type_name( SXCRef context )
{
  return str527.value;
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9456, SXCRef local_1_var_info_9455, SXCRef local_2_operand_9454 )
{
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign*)context)->property_t), local_0_t_9456 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign*)context)->property_var_info), local_1_var_info_9455 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign*)context)->property_operand), local_2_operand_9454 );
  return context;
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__create_duplicate( SXCRef context )
{
  return CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarAddAndAssign.create(),((ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign*)context)->property_t,((ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign*)context)->property_operand));
}

SlagObject* CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign*)context)->property_var_info)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__resolve( SXCRef context )
{
  return context;
}

static void CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_local_var_add_and_assign)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign*)context)->property_operand);
}

void CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__type_name( SXCRef context )
{
  return str1187.value;
}

static SlagObject* CmdLocalVarAddAndAssign__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarAddAndAssign*)context)->property_var_info)),str1721.value),CallFn____Object(15,((ClassCmdLocalVarAddAndAssign*)context)->property_operand)));
}

static SlagObject* CmdLocalVarAddAndAssign__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarAddAndAssign*)context)->property_var_info)),str1721.value),CallFn____Object(35,((ClassCmdLocalVarAddAndAssign*)context)->property_operand)));
}

static SlagObject* CmdLocalVarAddAndAssign__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarAddAndAssign*)context)->property_var_info)),str1721.value),CallFn____Object(41,((ClassCmdLocalVarAddAndAssign*)context)->property_operand)));
}

void CmdLocalVarAddAndAssign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLocalVarAddAndAssign__type_name( SXCRef context )
{
  return str1188.value;
}

SlagObject* HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init( SXCRef context )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),16,sxc_int64_as_real64(0x4008000000000000LL)) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init__Int32_Real64( SXCRef context, SlagInt32 local_0_num_bins, SlagReal64 local_1_average_bin_size )
{
  sxc_write_ref( &(((ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object*)context)->property_data), GenericHashTable_of_Object_and_Object__init__Int32_Real64(type_ClassGenericHashTable_of_Object_and_Object.create(),local_0_num_bins,local_1_average_bin_size) );
  return context;
}

static SlagObject* HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_new_table;

  local_0_new_table = HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_Qualifiers.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object*)context)->property_data)->property_bins))->property_count,((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object*)context)->property_data)->property_average_bin_size);
  GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object(((ClassHashTable_of_String_and_Qualifiers*)local_0_new_table)->property_data,((ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object*)context)->property_data);
  return local_0_new_table;
}

SlagObject* HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__to_String( SXCRef context )
{
  return ((ClassString*)CallFn____Object(47,((AspectReader_of_Mapping_of_Object_and_Object*)HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object(type_ClassHashTableMappingReader_of_Object_and_Object.create(),ArrayList_of_HashTableBin_of_Object_and_Object__create_reader(((ClassGenericHashTable_of_Object_and_Object*)((ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object*)context)->property_data)->property_bins)))));
}

void HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__type_name( SXCRef context )
{
  return str494.value;
}

void HashTable_of_String_and_Qualifiers__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_Qualifiers__type_name( SXCRef context )
{
  return str495.value;
}

static void StringBuilder__swap__Int32_Int32( SXCRef context, SlagInt32 local_0_index_a, SlagInt32 local_1_index_b )
{
  SlagChar local_2_temp;

  local_2_temp = ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_data)->data))[local_0_index_a];
  ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_data)->data))[local_0_index_a] = ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_data)->data))[local_1_index_b];
  ((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_data)->data))[local_1_index_b] = local_2_temp;
}

static void StringBuilder__ensure_capacity__Int32( SXCRef context, SlagInt32 local_0_desired_capacity )
{
}

void StringBuilder__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  SlagChar local_1_empty_item;

  local_1_empty_item = ((SlagChar)0);
  StringBuilder__ensure_capacity__Int32(context,local_0_num_items);
  while ((((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count < local_0_num_items))
  {
    StringBuilder__add__Char(context,local_1_empty_item);
  }
}

static SlagObject* StringBuilder__add__Char( SXCRef context, SlagChar local_0_value )
{
  return StringBuilder__insert__Char_Int32(context,local_0_value,((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count);
}

static SlagObject* StringBuilder__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;
  SXCRef local_1__reader3690;
  SlagChar local_2_element;

  local_0_dup = StringBuilder__init__Int32(type_ClassStringBuilder.create(),((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count);
  local_1__reader3690 = ((ClassArrayReader_of_Char*)ArrayList_of_Char__create_reader(((ClassStringBuilder*)context)->property_data));
  while (CallFn____Logical(14,local_1__reader3690))
  {
    local_2_element = CallFn____Char(29,local_1__reader3690);
    StringBuilder__add__Char(local_0_dup,local_2_element);
  }
  return local_0_dup;
}

static void StringBuilder__reverse( SXCRef context )
{
  SlagInt32 local_0_i;
  SlagInt32 local_1_j;

  local_0_i = 0;
  local_1_j = (((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count-1);
  while ((local_0_i <= local_1_j))
  {
    StringBuilder__swap__Int32_Int32(context,local_0_i,local_1_j);
    ++local_0_i;
    --local_1_j;
  }
}

SlagObject* StringBuilder__init( SXCRef context )
{
  sxc_write_ref( &(((ClassStringBuilder*)context)->property_data), ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),80) );
  return context;
}

static SlagObject* StringBuilder__init__Int32( SXCRef context, SlagInt32 local_0_capacity )
{
  sxc_write_ref( &(((ClassStringBuilder*)context)->property_data), ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),local_0_capacity) );
  return context;
}

static SlagObject* StringBuilder__init__String( SXCRef context, SXCRef local_0_st )
{
  sxc_write_ref( &(((ClassStringBuilder*)context)->property_data), ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),80) );
  StringBuilder__print__String(context,local_0_st);
  return context;
}

static SlagObject* StringBuilder__add__String( SXCRef context, SXCRef local_0_st )
{
  StringBuilder__print__String(context,local_0_st);
  return context;
}

static void StringBuilder__print__String( SXCRef context, SXCRef local_0_st )
{
  if ((local_0_st == NULL))
  {
    local_0_st = str36.value;
  }
  ArrayList_of_Char__ensure_capacity__Int32(((ClassStringBuilder*)context)->property_data,(((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count+(((SlagString*)local_0_st)->count)));
  StringBuilder__native_copy__String_Array_of_Char_Int32(context,local_0_st,((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_data,((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count);
  ((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count = (((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count+(((SlagString*)local_0_st)->count));
}

static void StringBuilder__native_copy__String_Array_of_Char_Int32( SXCRef context, SXCRef local_0_src_string, SXCRef local_1_dest_array, SlagInt32 local_2_dest_offset )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_src_string );
  SLAG_PUSH_REF( local_1_dest_array );
  SLAG_PUSH_INT32( local_2_dest_offset );
  StringBuilder__native_copy__String_Array_of_Char_Int32();
}

static void StringBuilder__write__Char( SXCRef context, SlagChar local_0_ch )
{
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)context)->property_data,local_0_ch);
}

void StringBuilder__clear( SXCRef context )
{
  ArrayList_of_Char__clear(((ClassStringBuilder*)context)->property_data);
}

static SlagInt32 StringBuilder__count( SXCRef context )
{
  return ((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count;
}

static SlagInt32 StringBuilder__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_modification_count;
}

static SlagObject* StringBuilder__insert__Char_Int32( SXCRef context, SlagChar local_0_value, SlagInt32 local_1_before_index )
{
  ArrayList_of_Char__insert__Char_Int32(((ClassStringBuilder*)context)->property_data,local_0_value,local_1_before_index);
  return context;
}

SlagObject* StringBuilder__to_String( SXCRef context )
{
  SXCRef local_0_str_data;

  if ((((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count == 0))
  {
    return str39.value;
  }
  local_0_str_data = type_ClassArray_of_Char.create(((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_str_data,((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_data,0,0,((ClassArrayList_of_Char*)((ClassStringBuilder*)context)->property_data)->property_count);
  return StringManager__create_from__Array_of_Char_Int32(sxc_singletons[18],local_0_str_data,-1);
}

void StringBuilder__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* StringBuilder__type_name( SXCRef context )
{
  return str11.value;
}

static SlagInt32 SlagScanner__available( SXCRef context )
{
  if (!((ClassSlagScanner*)context)->property_exhausted)
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* SlagScanner__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),SlagScanner__available(context));
  while (!((ClassSlagScanner*)context)->property_exhausted)
  {
    ArrayList_of_Object__add__Object(local_0_result_list,SlagScanner__read(context));
  }
  return local_0_result_list;
}

SlagObject* SlagScanner__to_String( SXCRef context )
{
  return ArrayList_of_Token__to_String(SlagScanner__to_List(context));
}

static SlagObject* SlagScanner__init__String( SXCRef context, SXCRef local_0_filename_4737 )
{
  SXCRef local_1_today;

  sxc_write_ref( &(((ClassSlagScanner*)context)->property_filename), local_0_filename_4737 );
  SlagScannerManager__add_define__String_String(sxc_singletons[20],str399.value,str606.value);
  local_1_today = Date__init(type_ClassDate.create());
  SlagScannerManager__add_define__String_String(sxc_singletons[20],str609.value,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str196.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassDate*)local_1_today)->property_year,10))),str38.value),Global__format_string__Int32_Int32_Int32_Char(sxc_singletons[21],((ClassDate*)local_1_today)->property_month,2,4,((SlagChar)48))),str38.value),Global__format_string__Int32_Int32_Int32_Char(sxc_singletons[21],((ClassDate*)local_1_today)->property_day,2,4,((SlagChar)48))),str196.value)));
  SlagScannerManager__add_define__String_String(sxc_singletons[20],str610.value,str577.value);
  SlagScannerManager__add_define__String_String(sxc_singletons[20],str611.value,str577.value);
  SlagScannerManager__add_define__String_String(sxc_singletons[20],str612.value,str580.value);
  sxc_write_ref( &(((ClassSlagScanner*)context)->property_src), ParseReader__init__ArrayList_of_Char(type_ClassParseReader.create(),((ClassArrayList_of_Char*)CallFn____Object(13,((AspectReader_of_Char*)FileReader__init__String(type_ClassFileReader.create(),((ClassFile*)File__init__String(type_ClassFile.create(),((ClassSlagScanner*)context)->property_filename))->property_filepath))))) );
  SlagScanner__prep_next(context);
  return context;
}

static SlagObject* SlagScanner__init__String_String( SXCRef context, SXCRef local_0_filename_4738, SXCRef local_1__src )
{
  SXCRef local_2_today;

  sxc_write_ref( &(((ClassSlagScanner*)context)->property_filename), local_0_filename_4738 );
  SlagScannerManager__add_define__String_String(sxc_singletons[20],str399.value,str606.value);
  local_2_today = Date__init(type_ClassDate.create());
  SlagScannerManager__add_define__String_String(sxc_singletons[20],str609.value,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str196.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassDate*)local_2_today)->property_year,10))),str38.value),Global__format_string__Int32_Int32_Int32_Char(sxc_singletons[21],((ClassDate*)local_2_today)->property_month,2,4,((SlagChar)48))),str38.value),Global__format_string__Int32_Int32_Int32_Char(sxc_singletons[21],((ClassDate*)local_2_today)->property_day,2,4,((SlagChar)48))),str196.value)));
  SlagScannerManager__add_define__String_String(sxc_singletons[20],str610.value,str577.value);
  SlagScannerManager__add_define__String_String(sxc_singletons[20],str611.value,str577.value);
  SlagScannerManager__add_define__String_String(sxc_singletons[20],str612.value,str580.value);
  sxc_write_ref( &(((ClassSlagScanner*)context)->property_src), ParseReader__init__String(type_ClassParseReader.create(),local_1__src) );
  SlagScanner__prep_next(context);
  return context;
}

static SlagLogical SlagScanner__has_another( SXCRef context )
{
  return !((ClassSlagScanner*)context)->property_exhausted;
}

static SlagObject* SlagScanner__peek( SXCRef context )
{
  SXCRef local_0_comment;

  while ((((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_comment))
  {
    local_0_comment = ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content;
    SlagScanner__prep_next(context);
    if ((((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
    {
      sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), local_0_comment );
    }
  }
  return ((ClassSlagScanner*)context)->property_next;
}

static SlagObject* SlagScanner__read( SXCRef context )
{
  SXCRef local_0_comment;
  SXCRef local_1_result;

  while ((((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_comment))
  {
    local_0_comment = ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content;
    SlagScanner__prep_next(context);
    if ((((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
    {
      sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), local_0_comment );
    }
  }
  if ((((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eof))
  {
    if (!((ClassSlagScanner*)context)->property_exhausted)
    {
      ((ClassSlagScanner*)context)->property_exhausted = true;
      return Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_eol,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_file_index]))),((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_pos,NULL);
    }
    return ((ClassSlagScanner*)context)->property_next;
  }
  else
  {
    local_1_result = ((ClassSlagScanner*)context)->property_next;
    SlagScanner__prep_next(context);
    return local_1_result;
  }
}

static SlagLogical SlagScanner__consume__Int32( SXCRef context, SlagInt32 local_0_token_type )
{
  if ((((ClassToken*)SlagScanner__peek(context))->property_type != local_0_token_type))
  {
    return false;
  }
  SlagScanner__read(context);
  return true;
}

static void SlagScanner__must_consume__Int32_String( SXCRef context, SlagInt32 local_0_token_type, SXCRef local_1_expected )
{
  if (!SlagScanner__consume__Int32(context,local_0_token_type))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str197.value),local_1_expected),str596.value)))) );
  }
}

static void SlagScanner__prep_next( SXCRef context )
{
  SlagChar local_0_ch;
  CompoundParsePos local_1_pos;

  for (;;)
  {
    next_5184:;
    SlagScanner__consume_ws(context);
    if (!ParseReader__has_another(((ClassSlagScanner*)context)->property_src))
    {
      if (!((ClassSlagScanner*)context)->property_exhausted)
      {
        ((ClassSlagScanner*)context)->property_exhausted = true;
        sxc_write_ref( &(((ClassSlagScanner*)context)->property_next), Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_eol,((ClassSlagScanner*)context)->property_filename,ParseReader__cur_pos(((ClassSlagScanner*)context)->property_src),NULL) );
      }
      else
      {
        sxc_write_ref( &(((ClassSlagScanner*)context)->property_next), Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_eof,((ClassSlagScanner*)context)->property_filename,ParseReader__cur_pos(((ClassSlagScanner*)context)->property_src),NULL) );
      }
      return;
    }
    local_0_ch = ParseReader__peek(((ClassSlagScanner*)context)->property_src);
    if (((((SlagInt32)local_0_ch) >= 48) && (((SlagInt32)local_0_ch) <= 57)))
    {
      SlagScanner__scan_number(context);
      return;
    }
    if (((((((SlagInt32)local_0_ch) >= 97) && (((SlagInt32)local_0_ch) <= 122)) || ((((SlagInt32)local_0_ch) >= 65) && (((SlagInt32)local_0_ch) <= 90))) || (((SlagInt32)local_0_ch) == 95)))
    {
      local_1_pos = ParseReader__cur_pos(((ClassSlagScanner*)context)->property_src);
      sxc_write_ref( &(((ClassSlagScanner*)context)->property_next), Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_identifier,((ClassSlagScanner*)context)->property_filename,local_1_pos,SlagScanner__scan_id(context)) );
      if (!SlagScanner__check_for_keywords(context))
      {
        goto next_5184;
      }
      return;
    }
    if ((((SlagInt32)local_0_ch) == 34))
    {
      SlagScanner__scan_string(context);
      return;
    }
    if (!SlagScanner__scan_symbol(context))
    {
      goto next_5184;
    }
    return;
  }
  end_5184:;
}

static void SlagScanner__consume_ws( SXCRef context )
{
  while ((ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)32)) || ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)9))))
  {
  }
}

static void SlagScanner__scan_number( SXCRef context )
{
  SlagInt32 local_0_base;
  SlagChar local_1_which_2404;
  SXCRef local_2_n;

  sxc_write_ref( &(((ClassSlagScanner*)context)->property_next), Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),0,((ClassSlagScanner*)context)->property_filename,ParseReader__cur_pos(((ClassSlagScanner*)context)->property_src),NULL) );
  local_0_base = 10;
  if ((((SlagInt32)ParseReader__peek(((ClassSlagScanner*)context)->property_src)) == 48))
  {
    ParseReader__read(((ClassSlagScanner*)context)->property_src);
    if ((((SlagInt32)ParseReader__peek(((ClassSlagScanner*)context)->property_src)) == 46))
    {
      if (Global__is_digit__Char_Int32(sxc_singletons[21],ParseReader__peek__Int32(((ClassSlagScanner*)context)->property_src,2),10))
      {
        ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_real;
        ParseReader__read(((ClassSlagScanner*)context)->property_src);
        sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), Global__to_String__Int64_Int32(sxc_singletons[21],sxc_real64_as_int64(SlagScanner__scan_fraction__Int32(context,10)),16) );
      }
      else
      {
        ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_int;
        sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), str214.value );
      }
      return;
    }
    local_1_which_2404 = ParseReader__peek(((ClassSlagScanner*)context)->property_src);
    if ((((SlagInt32)local_1_which_2404) == 120))
    {
      local_0_base = 16;
    }
    else if ((((SlagInt32)local_1_which_2404) == 100))
    {
      local_0_base = 10;
    }
    else if ((((SlagInt32)local_1_which_2404) == 99))
    {
      local_0_base = 8;
    }
    else if ((((SlagInt32)local_1_which_2404) == 98))
    {
      local_0_base = 2;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_int;
      sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), str214.value );
      return;
    }
    ParseReader__read(((ClassSlagScanner*)context)->property_src);
  }
  SlagScanner__scan_number__Int32(context,local_0_base);
  if (((local_0_base == 16) && (((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_int)))
  {
    if ((((((SlagString*)((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content)->count) == 10) || ((((SlagString*)((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content)->count) >= 19)))
    {
      local_2_n = BigInt__init__String_Int32(type_ClassBigInt.create(),((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content,10);
      if ((((BigInt__opCMP__BigInt(local_2_n,((ClassSlagScanner*)context)->property_value_0x80000000) != -1) && (BigInt__opCMP__BigInt(local_2_n,((ClassSlagScanner*)context)->property_value_0xffffffff) != 1)) || ((BigInt__opCMP__BigInt(local_2_n,((ClassSlagScanner*)context)->property_value_signed_64_low) != -1) && (BigInt__opCMP__BigInt(local_2_n,((ClassSlagScanner*)context)->property_value_signed_64_high) != 1))))
      {
        ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_hex_int;
        sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), BigInt__to_String__Int32(local_2_n,16) );
      }
    }
  }
}

static void SlagScanner__scan_number__Int32( SXCRef context, SlagInt32 local_0_base )
{
  if (Global__is_digit__Char_Int32(sxc_singletons[21],ParseReader__peek(((ClassSlagScanner*)context)->property_src),local_0_base))
  {
    sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), SlagScanner__scan_integer__Int32(context,local_0_base) );
    if (((((SlagInt32)ParseReader__peek(((ClassSlagScanner*)context)->property_src)) == 46) && Global__is_digit__Char_Int32(sxc_singletons[21],ParseReader__peek__Int32(((ClassSlagScanner*)context)->property_src,2),local_0_base)))
    {
      ParseReader__read(((ClassSlagScanner*)context)->property_src);
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_real;
      sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), Global__to_String__Int64_Int32(sxc_singletons[21],sxc_real64_as_int64((NumberConversions__parse_Real64__String(sxc_singletons[12],((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content)+SlagScanner__scan_fraction__Int32(context,local_0_base))),16) );
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_int;
    }
  }
  else if (((((SlagInt32)ParseReader__peek(((ClassSlagScanner*)context)->property_src)) == 46) && Global__is_digit__Char_Int32(sxc_singletons[21],ParseReader__peek__Int32(((ClassSlagScanner*)context)->property_src,2),local_0_base)))
  {
    ParseReader__read(((ClassSlagScanner*)context)->property_src);
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_real;
    sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), Global__to_String__Int64_Int32(sxc_singletons[21],sxc_real64_as_int64(SlagScanner__scan_fraction__Int32(context,local_0_base)),16) );
  }
}

static SlagObject* SlagScanner__scan_integer__Int32( SXCRef context, SlagInt32 local_0_base )
{
  SXCRef local_1_n;

  local_1_n = BigInt__init__Int32(type_ClassBigInt.create(),0);
  while (Global__is_digit__Char_Int32(sxc_singletons[21],ParseReader__peek(((ClassSlagScanner*)context)->property_src),local_0_base))
  {
    local_1_n = ((ClassBigInt*)BigInt__opADD__BigInt(((ClassBigInt*)BigInt__opMUL__BigInt(local_1_n,BigIntManager__create_from__Int64(sxc_singletons[24],((SlagInt64)((SlagInt32)local_0_base))))),BigIntManager__create_from__Int64(sxc_singletons[24],((SlagInt64)((SlagInt32)Global__to_value__Char(sxc_singletons[21],ParseReader__read(((ClassSlagScanner*)context)->property_src)))))));
  }
  if ((BigInt__opEQ__BigInt(local_1_n,((ClassBigIntManager*)sxc_singletons[24])->property_i64_limit) && (local_0_base == 16)))
  {
    local_1_n = BigInt__opSUB(local_1_n);
  }
  return BigInt__to_String(local_1_n);
}

static SlagReal64 SlagScanner__scan_fraction__Int32( SXCRef context, SlagInt32 local_0_base )
{
  SlagReal64 local_1_n;
  SlagReal64 local_2_count;

  local_1_n = sxc_int64_as_real64(0x0000000000000000LL);
  local_2_count = sxc_int64_as_real64(0x0000000000000000LL);
  while (Global__is_digit__Char_Int32(sxc_singletons[21],ParseReader__peek(((ClassSlagScanner*)context)->property_src),local_0_base))
  {
    local_1_n = ((local_1_n*((SlagReal64)local_0_base))+((SlagReal64)Global__to_value__Char(sxc_singletons[21],ParseReader__read(((ClassSlagScanner*)context)->property_src))));
    ++local_2_count;
  }
  local_1_n = local_1_n/(SlagReal64)pow((double)((SlagReal64)local_0_base),(double)local_2_count);
  return local_1_n;
}

static SlagObject* SlagScanner__scan_id( SXCRef context )
{
  SlagChar local_0_ch;

  ArrayList_of_Char__clear(((ClassStringBuilder*)((ClassSlagScanner*)context)->property_text_buffer)->property_data);
  local_0_ch = ParseReader__peek(((ClassSlagScanner*)context)->property_src);
  while ((((((((SlagInt32)local_0_ch) >= 97) && (((SlagInt32)local_0_ch) <= 122)) || ((((SlagInt32)local_0_ch) >= 65) && (((SlagInt32)local_0_ch) <= 90))) || ((((SlagInt32)local_0_ch) >= 48) && (((SlagInt32)local_0_ch) <= 57))) || (((SlagInt32)local_0_ch) == 95)))
  {
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)((ClassSlagScanner*)context)->property_text_buffer)->property_data,ParseReader__read(((ClassSlagScanner*)context)->property_src));
    if (!ParseReader__has_another(((ClassSlagScanner*)context)->property_src))
    {
      goto end_5216;
    }
    local_0_ch = ParseReader__peek(((ClassSlagScanner*)context)->property_src);
    next_5216:;
  }
  end_5216:;
  return StringBuilder__to_String(((ClassSlagScanner*)context)->property_text_buffer);
}

static SlagLogical SlagScanner__check_for_keywords( SXCRef context )
{
  SXCRef local_0_entry;
  SlagInt32 local_1_type;
  SlagInt32 local_2_which_2416;
  SXCRef local_3_content;
  SXCRef local_4_content;
  SlagChar local_5_ch;
  SXCRef local_6_define_id;
  SXCRef local_7_value;
  SXCRef local_8_new_data;
  SlagInt32 local_9_line;
  SlagInt32 local_10_column;

  local_0_entry = ((ClassMapping_of_String_and_Int32*)GenericHashTable_of_Object_and_Int32__find__Object(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)sxc_singletons[20])->property_keywords)->property_data,((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content));
  if ((local_0_entry != NULL))
  {
    local_1_type = ((ClassMapping_of_String_and_Int32*)local_0_entry)->property_value;
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = local_1_type;
    local_2_which_2416 = local_1_type;
    if ((local_2_which_2416 == ((ClassTokenManager*)sxc_singletons[2])->property_literal_logical))
    {
      if (String__opEQ__String(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content,str217.value))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str218.value)) );
      }
    }
    else if ((local_2_which_2416 == ((ClassTokenManager*)sxc_singletons[2])->property_literal_int))
    {
      local_3_content = ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content;
      if (String__opEQ__String(local_3_content,str228.value))
      {
        sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), str229.value );
      }
      else if (String__opEQ__String(local_3_content,str230.value))
      {
        sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), str214.value );
      }
      else if (String__opEQ__String(local_3_content,str231.value))
      {
        ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_hex_int;
        sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), str177.value );
      }
    }
    else if ((local_2_which_2416 == ((ClassTokenManager*)sxc_singletons[2])->property_literal_real))
    {
      local_4_content = ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content;
      if (String__opEQ__String(local_4_content,str232.value))
      {
        sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), Global__to_String__Int64_Int32(sxc_singletons[21],sxc_real64_as_int64(sxc_int64_as_real64(0x7ff0000000000000LL)),16) );
      }
      else if (String__opEQ__String(local_4_content,str233.value))
      {
        sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), Global__to_String__Int64_Int32(sxc_singletons[21],sxc_real64_as_int64(sxc_int64_as_real64(0x7ff8000000000000LL)),16) );
      }
      else if (String__opEQ__String(local_4_content,str234.value))
      {
        sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), Global__to_String__Int64_Int32(sxc_singletons[21],sxc_real64_as_int64(sxc_int64_as_real64(0x400921fb54442d18LL)),16) );
      }
    }
    else if ((local_2_which_2416 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_defined))
    {
      while ((ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)32)) || ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)9))))
      {
      }
      if (!ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)40)))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str235.value)) );
      }
      while ((ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)32)) || ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)9))))
      {
      }
      local_5_ch = ParseReader__peek(((ClassSlagScanner*)context)->property_src);
      if (!((((((SlagInt32)local_5_ch) >= 65) && (((SlagInt32)local_5_ch) <= 90)) || ((((SlagInt32)local_5_ch) >= 97) && (((SlagInt32)local_5_ch) <= 122))) || (((SlagInt32)local_5_ch) == 95)))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str236.value)) );
      }
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_logical;
      local_6_define_id = SlagScanner__scan_id(context);
      if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_String*)((ClassSlagScannerManager*)sxc_singletons[20])->property_defines)->property_data,local_6_define_id))
      {
        sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), str237.value );
      }
      else
      {
        sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), str238.value );
      }
      while ((ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)32)) || ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)9))))
      {
      }
      if (!ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)41)))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str239.value)) );
      }
    }
    else if ((local_2_which_2416 == ((ClassTokenManager*)sxc_singletons[2])->property_defined_value))
    {
      local_7_value = ((ClassString*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_String*)((ClassSlagScannerManager*)sxc_singletons[20])->property_defines)->property_data,((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content));
      if ((((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_pos < (((SlagString*)local_7_value)->count)))
      {
        local_8_new_data = type_ClassArray_of_Char.create((((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_remaining+(((SlagString*)local_7_value)->count)));
        GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_8_new_data,((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_data,((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_pos,0,((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_remaining);
        GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_8_new_data,String__to_Array(local_7_value),0,((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_remaining,(((SlagString*)local_7_value)->count));
        local_9_line = ((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_line;
        local_10_column = ((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_column;
        ParseReader__init__Array_of_Char(((ClassSlagScanner*)context)->property_src,local_8_new_data);
        ((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_line = local_9_line;
        ((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_column = local_10_column;
      }
      else
      {
        ((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_pos = (((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_pos-(((SlagString*)local_7_value)->count));
        ((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_remaining = (((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_remaining+(((SlagString*)local_7_value)->count));
        GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_data,String__to_Array(local_7_value),0,((ClassParseReader*)((ClassSlagScanner*)context)->property_src)->property_pos,(((SlagString*)local_7_value)->count));
      }
      return false;
    }
    else
    {
      sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), NULL );
    }
  }
  return true;
}

static void SlagScanner__scan_string( SXCRef context )
{
  CompoundParsePos local_0_pos;

  local_0_pos = ParseReader__cur_pos(((ClassSlagScanner*)context)->property_src);
  ArrayList_of_Char__clear(((ClassStringBuilder*)((ClassSlagScanner*)context)->property_text_buffer)->property_data);
  ParseReader__read(((ClassSlagScanner*)context)->property_src);
  while (ParseReader__has_another(((ClassSlagScanner*)context)->property_src))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)34)))
    {
      sxc_write_ref( &(((ClassSlagScanner*)context)->property_next), Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_literal_string,((ClassSlagScanner*)context)->property_filename,local_0_pos,StringBuilder__to_String(((ClassSlagScanner*)context)->property_text_buffer)) );
      return;
    }
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)((ClassSlagScanner*)context)->property_text_buffer)->property_data,SlagScanner__scan_literal_char(context));
  }
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),0,((ClassSlagScanner*)context)->property_filename,local_0_pos,NULL),str246.value)) );
}

static SlagObject* SlagScanner__scan_alternate_string( SXCRef context )
{
  SlagChar local_0_ch;

  ArrayList_of_Char__clear(((ClassStringBuilder*)((ClassSlagScanner*)context)->property_text_buffer)->property_data);
  while (ParseReader__has_another(((ClassSlagScanner*)context)->property_src))
  {
    local_0_ch = ((SlagChar)0);
    if ((((SlagInt32)ParseReader__peek(((ClassSlagScanner*)context)->property_src)) == 47))
    {
      local_0_ch = ParseReader__read(((ClassSlagScanner*)context)->property_src);
      if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)47)))
      {
        return StringBuilder__to_String(((ClassSlagScanner*)context)->property_text_buffer);
      }
    }
    else
    {
      local_0_ch = SlagScanner__scan_literal_char(context);
    }
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)((ClassSlagScanner*)context)->property_text_buffer)->property_data,local_0_ch);
  }
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),0,((ClassSlagScanner*)context)->property_filename,ParseReader__cur_pos(((ClassSlagScanner*)context)->property_src),NULL),str255.value)) );
}

static SlagChar SlagScanner__scan_literal_char( SXCRef context )
{
  SlagChar local_0_ch;
  SlagChar local_1_which_2433;
  CompoundParsePos local_2_src_pos;
  SlagChar local_3_which_2434;
  SlagChar local_4_unicode;
  SlagInt32 local_5__local_2435;
  SlagInt32 local_6__last2436;
  SXCRef local_7_str;
  SlagChar local_8_ch2;
  SlagChar local_9_ch3;

  local_0_ch = ParseReader__peek(((ClassSlagScanner*)context)->property_src);
  local_1_which_2433 = local_0_ch;
  if ((((SlagInt32)local_1_which_2433) == 10))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),0,((ClassSlagScanner*)context)->property_filename,ParseReader__cur_pos(((ClassSlagScanner*)context)->property_src),NULL),str240.value)) );
  }
  else if ((((SlagInt32)local_1_which_2433) == 92))
  {
    local_2_src_pos = ParseReader__cur_pos(((ClassSlagScanner*)context)->property_src);
    ParseReader__read(((ClassSlagScanner*)context)->property_src);
    local_3_which_2434 = ParseReader__read(((ClassSlagScanner*)context)->property_src);
    if ((((SlagInt32)local_3_which_2434) == 110))
    {
      return ((SlagChar)10);
    }
    else if ((((SlagInt32)local_3_which_2434) == 114))
    {
      return ((SlagChar)13);
    }
    else if ((((SlagInt32)local_3_which_2434) == 116))
    {
      return ((SlagChar)9);
    }
    else if ((((SlagInt32)local_3_which_2434) == 48))
    {
      return ((SlagChar)0);
    }
    else if ((((SlagInt32)local_3_which_2434) == 47))
    {
      return ((SlagChar)47);
    }
    else if ((((SlagInt32)local_3_which_2434) == 39))
    {
      return ((SlagChar)39);
    }
    else if ((((SlagInt32)local_3_which_2434) == 92))
    {
      return ((SlagChar)92);
    }
    else if ((((SlagInt32)local_3_which_2434) == 34))
    {
      return ((SlagChar)34);
    }
    else if ((((SlagInt32)local_3_which_2434) == 117))
    {
      local_4_unicode = ((SlagChar)0);
      local_5__local_2435 = 1;
      local_6__last2436 = 4;
      while ((local_5__local_2435 <= local_6__last2436))
      {
        if (!Global__is_digit__Char_Int32(sxc_singletons[21],ParseReader__peek(((ClassSlagScanner*)context)->property_src),16))
        {
          local_0_ch = ParseReader__peek(((ClassSlagScanner*)context)->property_src);
          local_7_str = NULL;
          if (((((SlagInt32)local_0_ch) < 32) || (((SlagInt32)local_0_ch) == 127)))
          {
            local_7_str = ((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32)local_0_ch),10));
          }
          else
          {
            local_7_str = Global__to_String__Char(sxc_singletons[21],local_0_ch);
          }
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),0,((ClassSlagScanner*)context)->property_filename,local_2_src_pos,NULL),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str241.value),local_7_str),str242.value)))) );
        }
        local_4_unicode = ((SlagChar)((SlagInt32)((((SlagInt32)local_4_unicode)<<4)+Global__to_value__Char(sxc_singletons[21],ParseReader__read(((ClassSlagScanner*)context)->property_src)))));
        ++local_5__local_2435;
      }
      return local_4_unicode;
    }
    else
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),0,((ClassSlagScanner*)context)->property_filename,local_2_src_pos,NULL),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str244.value),str243.value),str245.value)))) );
    }
  }
  else
  {
    ParseReader__read(((ClassSlagScanner*)context)->property_src);
    if (((((SlagInt32)local_0_ch)&128) != 0))
    {
      local_8_ch2 = ParseReader__read(((ClassSlagScanner*)context)->property_src);
      if (((((SlagInt32)local_0_ch)&32) == 0))
      {
        local_0_ch = ((SlagChar)((SlagInt32)(((SlagInt32)local_0_ch)&31)));
        local_8_ch2 = ((SlagChar)((SlagInt32)(((SlagInt32)local_8_ch2)&63)));
        local_0_ch = ((SlagChar)((SlagInt32)((((SlagInt32)local_0_ch)<<6)|((SlagInt32)local_8_ch2))));
      }
      else
      {
        local_9_ch3 = ParseReader__read(((ClassSlagScanner*)context)->property_src);
        local_0_ch = ((SlagChar)((SlagInt32)(((SlagInt32)local_0_ch)&15)));
        local_8_ch2 = ((SlagChar)((SlagInt32)(((SlagInt32)local_8_ch2)&63)));
        local_9_ch3 = ((SlagChar)((SlagInt32)(((SlagInt32)local_9_ch3)&63)));
        local_0_ch = ((SlagChar)((SlagInt32)(((((SlagInt32)local_0_ch)<<12)|(((SlagInt32)local_8_ch2)<<6))|((SlagInt32)local_9_ch3))));
      }
    }
    return local_0_ch;
  }
}

static SlagLogical SlagScanner__scan_symbol( SXCRef context )
{
  SlagChar local_0_ch;
  SlagChar local_1_which_2441;

  sxc_write_ref( &(((ClassSlagScanner*)context)->property_next), Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),0,((ClassSlagScanner*)context)->property_filename,ParseReader__cur_pos(((ClassSlagScanner*)context)->property_src),NULL) );
  local_0_ch = ParseReader__read(((ClassSlagScanner*)context)->property_src);
  local_1_which_2441 = local_0_ch;
  if ((((SlagInt32)local_1_which_2441) == 10))
  {
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_eol;
  }
  else if ((((SlagInt32)local_1_which_2441) == 33))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_ne;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_not;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 35))
  {
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_comment;
    if (ParseReader__consume__String(((ClassSlagScanner*)context)->property_src,str247.value))
    {
      sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), SlagScanner__scan_multi_line_comment(context) );
    }
    else
    {
      sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), SlagScanner__scan_single_line_comment(context) );
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 36))
  {
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_placeholder_id;
    sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), String__opADD__String(str251.value,SlagScanner__scan_id(context)) );
  }
  else if ((((SlagInt32)local_1_which_2441) == 37))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_mod_with_assign;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_mod;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 38))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)38)))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str252.value)) );
    }
    else if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_and_with_assign;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_ampersand;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 39))
  {
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_char;
    sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), String__opADD__Char(str39.value,SlagScanner__scan_literal_char(context)) );
    if (!ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)39)))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str253.value)) );
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 40))
  {
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren;
  }
  else if ((((SlagInt32)local_1_which_2441) == 41))
  {
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren;
  }
  else if ((((SlagInt32)local_1_which_2441) == 42))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_multiply_with_assign;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_times;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 43))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_add_with_assign;
    }
    else if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)43)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_increment;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_plus;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 44))
  {
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma;
  }
  else if ((((SlagInt32)local_1_which_2441) == 45))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_subtract_with_assign;
    }
    else if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)45)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_decrement;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_minus;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 46))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)46)))
    {
      if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)46)))
      {
        SlagScanner__consume_ws(context);
        while (ParseReader__consume__String(((ClassSlagScanner*)context)->property_src,str195.value))
        {
          if (ParseReader__consume__String(((ClassSlagScanner*)context)->property_src,str247.value))
          {
            SlagScanner__scan_multi_line_comment(context);
          }
          else
          {
            SlagScanner__scan_single_line_comment(context);
          }
        }
        if (!ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)10)))
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str254.value)) );
        }
        return false;
      }
      else if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)60)))
      {
        ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_uptolessthan;
      }
      else if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)62)))
      {
        ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_downtogreaterthan;
      }
      else
      {
        ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_upto;
      }
    }
    else if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_member_with_assign;
    }
    else if (Global__is_digit__Char_Int32(sxc_singletons[21],ParseReader__peek(((ClassSlagScanner*)context)->property_src),10))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_real;
      sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), Global__to_String__Int64_Int32(sxc_singletons[21],sxc_real64_as_int64(SlagScanner__scan_fraction__Int32(context,10)),16) );
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_member_access;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 47))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)47)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_string;
      sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), SlagScanner__scan_alternate_string(context) );
    }
    else if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_divide_with_assign;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_divide;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 58))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)58)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_scope;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_colon;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 59))
  {
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_semicolon;
  }
  else if ((((SlagInt32)local_1_which_2441) == 60))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)60)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_template;
    }
    else if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_le;
    }
    else if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)62)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_compare;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_lt;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 61))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_eq;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_assign;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 62))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_ge;
    }
    else if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)62)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_template;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_gt;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 63))
  {
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_logicalize;
  }
  else if ((((SlagInt32)local_1_which_2441) == 91))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)93)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_dimension;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_bracket;
      return SlagScanner__check_for_special(context);
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 93))
  {
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket;
  }
  else if ((((SlagInt32)local_1_which_2441) == 94))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_power_with_assign;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_power;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 123))
  {
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_brace;
  }
  else if ((((SlagInt32)local_1_which_2441) == 124))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_or_with_assign;
    }
    else if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)124)))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str404.value)) );
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_or;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 125))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)35)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_comment;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_brace;
    }
  }
  else if ((((SlagInt32)local_1_which_2441) == 126))
  {
    if (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)61)))
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_xor_with_assign;
    }
    else
    {
      ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_xor;
    }
  }
  else
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,String__opADD__Char(str405.value,local_0_ch))) );
  }
  return true;
}

static SlagLogical SlagScanner__check_for_special( SXCRef context )
{
  SlagChar local_0_ch;
  SXCRef local_1_define_id;
  SXCRef local_2_define_value;
  SXCRef local_3_buffer;
  SlagChar local_4_ch;

  if (ParseReader__consume__String(((ClassSlagScanner*)context)->property_src,str256.value))
  {
    while (ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)32)))
    {
    }
    local_0_ch = ParseReader__peek(((ClassSlagScanner*)context)->property_src);
    if (!((((((SlagInt32)local_0_ch) >= 97) && (((SlagInt32)local_0_ch) <= 122)) || ((((SlagInt32)local_0_ch) >= 65) && (((SlagInt32)local_0_ch) <= 90))) || (((SlagInt32)local_0_ch) == 95)))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str257.value)) );
    }
    local_1_define_id = SlagScanner__scan_id(context);
    ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)32));
    ArrayList_of_Char__clear(((ClassStringBuilder*)((ClassSlagScanner*)context)->property_text_buffer)->property_data);
    while (!ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)93)))
    {
      if ((!ParseReader__has_another(((ClassSlagScanner*)context)->property_src) || (((SlagInt32)ParseReader__peek(((ClassSlagScanner*)context)->property_src)) == 10)))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str258.value)) );
      }
      ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)92));
      StringBuilder__add__Char(((ClassSlagScanner*)context)->property_text_buffer,ParseReader__read(((ClassSlagScanner*)context)->property_src));
    }
    local_2_define_value = StringBuilder__to_String(((ClassSlagScanner*)context)->property_text_buffer);
    if (((ClassSlagScanner*)context)->property_allow_defines)
    {
      if (String__opEQ__String(local_1_define_id,local_2_define_value))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str259.value)) );
      }
      SlagScannerManager__add_define__String_String(sxc_singletons[20],local_1_define_id,local_2_define_value);
    }
    return false;
  }
  else if (ParseReader__consume__String(((ClassSlagScanner*)context)->property_src,str401.value))
  {
    SlagScanner__consume_ws(context);
    ParseReader__consume__Char(((ClassSlagScanner*)context)->property_src,((SlagChar)10));
    ((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_type = ((ClassTokenManager*)sxc_singletons[2])->property_literal_string;
    local_3_buffer = StringBuilder__init(type_ClassStringBuilder.create());
    while (ParseReader__has_another(((ClassSlagScanner*)context)->property_src))
    {
      local_4_ch = ParseReader__read(((ClassSlagScanner*)context)->property_src);
      if ((((SlagInt32)local_4_ch) == 91))
      {
        if (ParseReader__consume__String(((ClassSlagScanner*)context)->property_src,str402.value))
        {
          sxc_write_ref( &(((ClassToken*)((ClassSlagScanner*)context)->property_next)->property_content), StringBuilder__to_String(local_3_buffer) );
          return true;
        }
        else
        {
          ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_3_buffer)->property_data,((SlagChar)91));
        }
      }
      else
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_3_buffer)->property_data,local_4_ch);
      }
    }
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str403.value)) );
  }
  else
  {
    return true;
  }
}

static SlagObject* SlagScanner__scan_single_line_comment( SXCRef context )
{
  SlagChar local_0_ch;

  ArrayList_of_Char__clear(((ClassStringBuilder*)((ClassSlagScanner*)context)->property_text_buffer)->property_data);
  while (ParseReader__has_another(((ClassSlagScanner*)context)->property_src))
  {
    local_0_ch = ParseReader__peek(((ClassSlagScanner*)context)->property_src);
    if ((((SlagInt32)local_0_ch) == 10))
    {
      goto end_5302;
    }
    StringBuilder__add__Char(((ClassSlagScanner*)context)->property_text_buffer,ParseReader__read(((ClassSlagScanner*)context)->property_src));
    next_5302:;
  }
  end_5302:;
  return StringBuilder__to_String(((ClassSlagScanner*)context)->property_text_buffer);
}

static SlagObject* SlagScanner__scan_multi_line_comment( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader2477;
  SlagChar local_2_ch;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_1__reader2477 = ((ClassSlagScanner*)context)->property_src;
  while (ParseReader__has_another(local_1__reader2477))
  {
    local_2_ch = ParseReader__read(local_1__reader2477);
    if ((((SlagInt32)local_2_ch) == 35))
    {
      if ((((SlagInt32)ParseReader__peek(((ClassSlagScanner*)context)->property_src)) == 123))
      {
        ParseReader__read(((ClassSlagScanner*)context)->property_src);
        StringBuilder__print__String(local_0_buffer,str248.value);
        StringBuilder__print__String(local_0_buffer,SlagScanner__scan_multi_line_comment(context));
        StringBuilder__print__String(local_0_buffer,str249.value);
        goto next_5298;
      }
    }
    else if ((((SlagInt32)local_2_ch) == 125))
    {
      if ((((SlagInt32)ParseReader__peek(((ClassSlagScanner*)context)->property_src)) == 35))
      {
        ParseReader__read(((ClassSlagScanner*)context)->property_src);
        return StringBuilder__to_String(local_0_buffer);
      }
    }
    StringBuilder__add__Char(local_0_buffer,local_2_ch);
    next_5298:;
  }
  end_5298:;
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassSlagScanner*)context)->property_next,str250.value)) );
}

void SlagScanner__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassSlagScanner*)context)->property_text_buffer), StringBuilder__init(type_ClassStringBuilder.create()) );
  ((ClassSlagScanner*)context)->property_allow_defines = true;
  sxc_write_ref( &(((ClassSlagScanner*)context)->property_value_0x80000000), BigInt__init__String_Int32(type_ClassBigInt.create(),str176.value,16) );
  sxc_write_ref( &(((ClassSlagScanner*)context)->property_value_0xffffffff), BigInt__init__String_Int32(type_ClassBigInt.create(),str177.value,16) );
  sxc_write_ref( &(((ClassSlagScanner*)context)->property_value_signed_64_low), ((ClassBigInt*)BigInt__opEXP__BigInt(BigInt__init__Int32(type_ClassBigInt.create(),2),BigIntManager__create_from__Int64(sxc_singletons[24],63LL))) );
  sxc_write_ref( &(((ClassSlagScanner*)context)->property_value_signed_64_high), ((ClassBigInt*)BigInt__opSUB__BigInt(((ClassBigInt*)BigInt__opEXP__BigInt(BigInt__init__Int32(type_ClassBigInt.create(),2),BigIntManager__create_from__Int64(sxc_singletons[24],64LL))),BigIntManager__create_from__Int64(sxc_singletons[24],1LL))) );
}

SlagObject* SlagScanner__type_name( SXCRef context )
{
  return str406.value;
}

static SlagObject* SlagPreprocessor__init__String( SXCRef context, SXCRef local_0_filename )
{
  sxc_write_ref( &(((ClassSlagPreprocessor*)context)->property_scanner), SlagScanner__init__String(type_ClassSlagScanner.create(),local_0_filename) );
  SlagPreprocessor__prep_next(context);
  return context;
}

static SlagObject* SlagPreprocessor__init__String_String( SXCRef context, SXCRef local_0_filename, SXCRef local_1_data )
{
  sxc_write_ref( &(((ClassSlagPreprocessor*)context)->property_scanner), SlagScanner__init__String_String(type_ClassSlagScanner.create(),local_0_filename,local_1_data) );
  SlagPreprocessor__prep_next(context);
  return context;
}

static void SlagPreprocessor__prep_next( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_t2;
  SXCRef local_2_t2;
  SlagLogical local_3_result;
  SlagLogical local_4_result;
  SlagInt32 local_5_which_1859;
  SlagInt32 local_6_which_1862;

  for (;;)
  {
    next_6997:;
    local_0_t = SlagScanner__read(((ClassSlagPreprocessor*)context)->property_scanner);
    if ((((ClassToken*)local_0_t)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_string))
    {
      for (;;)
      {
        next_6999:;
        local_1_t2 = SlagScanner__peek(((ClassSlagPreprocessor*)context)->property_scanner);
        if ((((ClassToken*)local_1_t2)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
        {
          SlagScanner__read(((ClassSlagPreprocessor*)context)->property_scanner);
          if ((((ClassToken*)SlagScanner__peek(((ClassSlagPreprocessor*)context)->property_scanner))->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_literal_string))
          {
            ArrayList_of_Object__add__Object(((ClassSlagPreprocessor*)context)->property_buffer,local_0_t);
            ArrayList_of_Object__add__Object(((ClassSlagPreprocessor*)context)->property_buffer,local_1_t2);
            return;
          }
          else
          {
            sxc_write_ref( &(((ClassToken*)local_0_t)->property_content), String__opADD__String(((ClassToken*)local_0_t)->property_content,((ClassToken*)SlagScanner__read(((ClassSlagPreprocessor*)context)->property_scanner))->property_content) );
            goto next_6999;
          }
        }
        else if ((((ClassToken*)SlagScanner__peek(((ClassSlagPreprocessor*)context)->property_scanner))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_string))
        {
          sxc_write_ref( &(((ClassToken*)local_0_t)->property_content), String__opADD__String(((ClassToken*)local_0_t)->property_content,((ClassToken*)SlagScanner__read(((ClassSlagPreprocessor*)context)->property_scanner))->property_content) );
          goto next_6999;
        }
        else
        {
          goto end_6999;
        }
      }
      end_6999:;
    }
    else if ((((ClassToken*)local_0_t)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_bracket))
    {
      local_2_t2 = SlagScanner__peek(((ClassSlagPreprocessor*)context)->property_scanner);
      if (SlagScanner__consume__Int32(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_if))
      {
        local_3_result = SlagPreprocessor__preprocessor_evaluate_literal_expression(context);
        SlagScanner__must_consume__Int32_String(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,str54.value);
        if (((((ClassArrayList_of_Int32*)((ClassSlagPreprocessor*)context)->property_ifdef_stack)->property_count != 0) && (ArrayList_of_Int32__last(((ClassSlagPreprocessor*)context)->property_ifdef_stack) <= 0)))
        {
          ArrayList_of_Int32__add__Int32(((ClassSlagPreprocessor*)context)->property_ifdef_stack,-1);
        }
        else if (local_3_result)
        {
          ArrayList_of_Int32__add__Int32(((ClassSlagPreprocessor*)context)->property_ifdef_stack,1);
        }
        else
        {
          ArrayList_of_Int32__add__Int32(((ClassSlagPreprocessor*)context)->property_ifdef_stack,0);
        }
        ((ClassSlagPreprocessor*)context)->property_discard_tokens = ((((ClassArrayList_of_Int32*)((ClassSlagPreprocessor*)context)->property_ifdef_stack)->property_count > 0) && (ArrayList_of_Int32__last(((ClassSlagPreprocessor*)context)->property_ifdef_stack) <= 0));
        ((ClassSlagScanner*)((ClassSlagPreprocessor*)context)->property_scanner)->property_allow_defines = !((ClassSlagPreprocessor*)context)->property_discard_tokens;
        goto next_6997;
      }
      else if (SlagScanner__consume__Int32(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_elseif))
      {
        local_4_result = SlagPreprocessor__preprocessor_evaluate_literal_expression(context);
        SlagScanner__must_consume__Int32_String(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,str54.value);
        if ((((ClassArrayList_of_Int32*)((ClassSlagPreprocessor*)context)->property_ifdef_stack)->property_count != 0))
        {
          local_5_which_1859 = ArrayList_of_Int32__remove_last(((ClassSlagPreprocessor*)context)->property_ifdef_stack);
          if ((local_5_which_1859 == 0))
          {
            if (local_4_result)
            {
              ArrayList_of_Int32__add__Int32(((ClassSlagPreprocessor*)context)->property_ifdef_stack,1);
            }
            else
            {
              ArrayList_of_Int32__add__Int32(((ClassSlagPreprocessor*)context)->property_ifdef_stack,0);
            }
          }
          else
          {
            ArrayList_of_Int32__add__Int32(((ClassSlagPreprocessor*)context)->property_ifdef_stack,-1);
          }
        }
        else
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_2_t2,str601.value)) );
        }
        ((ClassSlagPreprocessor*)context)->property_discard_tokens = (ArrayList_of_Int32__last(((ClassSlagPreprocessor*)context)->property_ifdef_stack) <= 0);
        ((ClassSlagScanner*)((ClassSlagPreprocessor*)context)->property_scanner)->property_allow_defines = !((ClassSlagPreprocessor*)context)->property_discard_tokens;
        goto next_6997;
      }
      else if (SlagScanner__consume__Int32(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_else))
      {
        SlagScanner__must_consume__Int32_String(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,str54.value);
        if ((((ClassArrayList_of_Int32*)((ClassSlagPreprocessor*)context)->property_ifdef_stack)->property_count != 0))
        {
          local_6_which_1862 = ArrayList_of_Int32__remove_last(((ClassSlagPreprocessor*)context)->property_ifdef_stack);
          if ((local_6_which_1862 == 0))
          {
            ArrayList_of_Int32__add__Int32(((ClassSlagPreprocessor*)context)->property_ifdef_stack,1);
          }
          else
          {
            ArrayList_of_Int32__add__Int32(((ClassSlagPreprocessor*)context)->property_ifdef_stack,-1);
          }
        }
        else
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_2_t2,str602.value)) );
        }
        ((ClassSlagPreprocessor*)context)->property_discard_tokens = (ArrayList_of_Int32__last(((ClassSlagPreprocessor*)context)->property_ifdef_stack) <= 0);
        ((ClassSlagScanner*)((ClassSlagPreprocessor*)context)->property_scanner)->property_allow_defines = !((ClassSlagPreprocessor*)context)->property_discard_tokens;
        goto next_6997;
      }
      else if (SlagScanner__consume__Int32(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endif))
      {
        SlagScanner__must_consume__Int32_String(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,str54.value);
        if ((((ClassArrayList_of_Int32*)((ClassSlagPreprocessor*)context)->property_ifdef_stack)->property_count != 0))
        {
          ArrayList_of_Int32__discard_last(((ClassSlagPreprocessor*)context)->property_ifdef_stack);
        }
        else
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_2_t2,str603.value)) );
        }
        ((ClassSlagPreprocessor*)context)->property_discard_tokens = ((((ClassArrayList_of_Int32*)((ClassSlagPreprocessor*)context)->property_ifdef_stack)->property_count > 0) && (ArrayList_of_Int32__last(((ClassSlagPreprocessor*)context)->property_ifdef_stack) <= 0));
        ((ClassSlagScanner*)((ClassSlagPreprocessor*)context)->property_scanner)->property_allow_defines = !((ClassSlagPreprocessor*)context)->property_discard_tokens;
        goto next_6997;
      }
    }
    if (((ClassSlagPreprocessor*)context)->property_discard_tokens)
    {
      if ((((ClassToken*)local_0_t)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eof))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str604.value)) );
      }
      goto next_6997;
    }
    ArrayList_of_Object__add__Object(((ClassSlagPreprocessor*)context)->property_buffer,local_0_t);
    return;
  }
  end_6997:;
}

static SlagLogical SlagPreprocessor__preprocessor_evaluate_literal_expression( SXCRef context )
{
  SXCRef local_0_term;

  local_0_term = SlagPreprocessor__evaluate_literal_or(context);
  if (!sxc_instance_of(local_0_term,&type_ClassLiteralLogical))
  {
    SLAG_THROW( Cmd__error__String(local_0_term,str600.value) );
  }
  return CallFn____Logical(39,local_0_term);
}

static SlagObject* SlagPreprocessor__evaluate_literal_or( SXCRef context )
{
  return SlagPreprocessor__evaluate_literal_or__LiteralTerm(context,SlagPreprocessor__evaluate_literal_and(context));
}

static SlagObject* SlagPreprocessor__evaluate_literal_or__LiteralTerm( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;
  SXCRef local_2_rhs;

  local_1_t = SlagScanner__peek(((ClassSlagPreprocessor*)context)->property_scanner);
  if (SlagScanner__consume__Int32(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logical_or))
  {
    local_2_rhs = SlagPreprocessor__evaluate_literal_and(context);
    CallFn__(40,local_0_lhs);
    CallFn__(40,local_2_rhs);
    return SlagPreprocessor__evaluate_literal_or__LiteralTerm(context,LiteralLogical__init__Token_Logical(type_ClassLiteralLogical.create(),local_1_t,(CallFn____Logical(39,local_0_lhs) || CallFn____Logical(39,local_2_rhs))));
  }
  else
  {
    return local_0_lhs;
  }
}

static SlagObject* SlagPreprocessor__evaluate_literal_and( SXCRef context )
{
  return SlagPreprocessor__evaluate_literal_and__LiteralTerm(context,SlagPreprocessor__evaluate_literal_not(context));
}

static SlagObject* SlagPreprocessor__evaluate_literal_and__LiteralTerm( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;
  SXCRef local_2_rhs;

  local_1_t = SlagScanner__peek(((ClassSlagPreprocessor*)context)->property_scanner);
  if (SlagScanner__consume__Int32(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logical_and))
  {
    local_2_rhs = SlagPreprocessor__evaluate_literal_and(context);
    CallFn__(40,local_0_lhs);
    CallFn__(40,local_2_rhs);
    return SlagPreprocessor__evaluate_literal_and__LiteralTerm(context,LiteralLogical__init__Token_Logical(type_ClassLiteralLogical.create(),local_1_t,(CallFn____Logical(39,local_0_lhs) && CallFn____Logical(39,local_2_rhs))));
  }
  else
  {
    return local_0_lhs;
  }
}

static SlagObject* SlagPreprocessor__evaluate_literal_not( SXCRef context )
{
  SlagLogical local_0_invert;
  SXCRef local_1_operand;

  local_0_invert = SlagScanner__consume__Int32(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logical_not);
  local_1_operand = SlagPreprocessor__evaluate_literal_term(context);
  CallFn__(40,local_1_operand);
  if (local_0_invert)
  {
    ((ClassLiteralLogical*)local_1_operand)->property_value = !CallFn____Logical(39,local_1_operand);
  }
  return local_1_operand;
}

static SlagObject* SlagPreprocessor__evaluate_literal_term( SXCRef context )
{
  SXCRef local_0_result;
  SXCRef local_1_t;

  if (SlagScanner__consume__Int32(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
  {
    local_0_result = SlagPreprocessor__evaluate_literal_or(context);
    SlagScanner__must_consume__Int32_String(((ClassSlagPreprocessor*)context)->property_scanner,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
    return local_0_result;
  }
  local_1_t = SlagScanner__read(((ClassSlagPreprocessor*)context)->property_scanner);
  if ((((ClassToken*)local_1_t)->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_literal_logical))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,str597.value)) );
  }
  if (String__opEQ__String(((ClassToken*)local_1_t)->property_content,str237.value))
  {
    return LiteralLogical__init__Token_Logical(type_ClassLiteralLogical.create(),local_1_t,true);
  }
  else
  {
    return LiteralLogical__init__Token_Logical(type_ClassLiteralLogical.create(),local_1_t,false);
  }
}

void SlagPreprocessor__init_object( SXCRef context )
{
  TokenReader__init_object(context);
  sxc_write_ref( &(((ClassSlagPreprocessor*)context)->property_ifdef_stack), ArrayList_of_Int32__init(type_ClassArrayList_of_Int32.create()) );
}

SlagObject* SlagPreprocessor__type_name( SXCRef context )
{
  return str605.value;
}

static SlagObject* CmdBreakpoint__init__Token_Int32( SXCRef context, SXCRef local_0_t_7672, SlagInt32 local_1_id_7671 )
{
  sxc_write_ref( &(((ClassCmdBreakpoint*)context)->property_t), local_0_t_7672 );
  ((ClassCmdBreakpoint*)context)->property_id = local_1_id_7671;
  return context;
}

static SlagObject* CmdBreakpoint__create_duplicate( SXCRef context )
{
  return CmdBreakpoint__init__Token_Int32(type_ClassCmdBreakpoint.create(),((ClassCmdBreakpoint*)context)->property_t,((ClassCmdBreakpoint*)context)->property_id);
}

SlagObject* CmdBreakpoint__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str792.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdBreakpoint*)context)->property_id,10))),str62.value));
}

static SlagObject* CmdBreakpoint__resolve( SXCRef context )
{
  return context;
}

static void CmdBreakpoint__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_breakpoint)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCmdBreakpoint*)context)->property_id);
}

static SlagObject* CmdBreakpoint__to_cpp( SXCRef context )
{
  CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1659.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdBreakpoint*)context)->property_id,10))),str1660.value)));
  return NULL;
}

static SlagObject* CmdBreakpoint__to_cs( SXCRef context )
{
  CSWriter__println__String(sxc_singletons[28],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1920.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdBreakpoint*)context)->property_id,10))),str864.value)));
  return NULL;
}

static SlagObject* CmdBreakpoint__to_java( SXCRef context )
{
  JavaWriter__println__String(sxc_singletons[19],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2007.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdBreakpoint*)context)->property_id,10))),str864.value)));
  return NULL;
}

void CmdBreakpoint__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdBreakpoint__type_name( SXCRef context )
{
  return str793.value;
}

static SlagObject* CmdContingent__create_duplicate( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdContingent.create(),((ClassCmdContingent*)context)->property_t,((ClassCmdContingent*)context)->property_id,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdContingent*)context)->property_body));
  sxc_write_ref( &(((ClassCmdContingent*)local_0_result)->property_satisfied_body), ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdContingent*)context)->property_satisfied_body) );
  sxc_write_ref( &(((ClassCmdContingent*)local_0_result)->property_unsatisfied_body), ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdContingent*)context)->property_unsatisfied_body) );
  return local_0_result;
}

SlagObject* CmdContingent__to_String( SXCRef context )
{
  SXCRef local_0_buffer;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  TextWriter__println__String(local_0_buffer,String__opADD__String(str763.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingent*)context)->property_id,10))));
  TextWriter__println__Object(local_0_buffer,((ClassCmdContingent*)context)->property_body);
  if ((((ClassCmdContingent*)context)->property_satisfied_body != NULL))
  {
    TextWriter__println__String(local_0_buffer,str307.value);
    TextWriter__println__Object(local_0_buffer,((ClassCmdContingent*)context)->property_satisfied_body);
  }
  if ((((ClassCmdContingent*)context)->property_unsatisfied_body != NULL))
  {
    TextWriter__println__String(local_0_buffer,str308.value);
    TextWriter__println__Object(local_0_buffer,((ClassCmdContingent*)context)->property_unsatisfied_body);
  }
  TextWriter__println__String(local_0_buffer,String__opADD__String(str764.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingent*)context)->property_id,10))));
  return StringBuilder__to_String(local_0_buffer);
}

static SlagObject* CmdContingent__resolve( SXCRef context )
{
  CmdStructure__remap_id(context);
  CmdStatementList__resolve(((ClassCmdContingent*)context)->property_body);
  if ((((ClassCmdContingent*)context)->property_satisfied_body != NULL))
  {
    CmdStatementList__resolve(((ClassCmdContingent*)context)->property_satisfied_body);
  }
  if ((((ClassCmdContingent*)context)->property_unsatisfied_body != NULL))
  {
    CmdStatementList__resolve(((ClassCmdContingent*)context)->property_unsatisfied_body);
  }
  return context;
}

static SlagObject* CmdContingent__finalize_calls( SXCRef context )
{
  CmdStatementList__finalize_calls(((ClassCmdContingent*)context)->property_body);
  if ((((ClassCmdContingent*)context)->property_satisfied_body != NULL))
  {
    CmdStatementList__finalize_calls(((ClassCmdContingent*)context)->property_satisfied_body);
  }
  if ((((ClassCmdContingent*)context)->property_unsatisfied_body != NULL))
  {
    CmdStatementList__finalize_calls(((ClassCmdContingent*)context)->property_unsatisfied_body);
  }
  return context;
}

static void CmdContingent__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
  CmdStatementList__finalize_structure_info(((ClassCmdContingent*)context)->property_body);
  if ((((ClassCmdContingent*)context)->property_satisfied_body != NULL))
  {
    CmdStatementList__finalize_structure_info(((ClassCmdContingent*)context)->property_satisfied_body);
  }
  if ((((ClassCmdContingent*)context)->property_unsatisfied_body != NULL))
  {
    CmdStatementList__finalize_structure_info(((ClassCmdContingent*)context)->property_unsatisfied_body);
  }
  if (GenericHashTable_of_Int32_and_Int32__contains__Int32(((ClassHashSet_of_Int32*)((ClassContext*)sxc_singletons[10])->property_referenced_structures)->property_data,((ClassCmdContingent*)context)->property_id))
  {
    ((ClassCmdContingent*)context)->property_referenced = true;
  }
}

static void CmdContingent__group_dynamic_methods( SXCRef context )
{
  CmdStatementList__group_dynamic_methods(((ClassCmdContingent*)context)->property_body);
  if ((((ClassCmdContingent*)context)->property_satisfied_body != NULL))
  {
    CmdStatementList__group_dynamic_methods(((ClassCmdContingent*)context)->property_satisfied_body);
  }
  if ((((ClassCmdContingent*)context)->property_unsatisfied_body != NULL))
  {
    CmdStatementList__group_dynamic_methods(((ClassCmdContingent*)context)->property_unsatisfied_body);
  }
}

static SlagObject* CmdContingent__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdContingent*)context)->property_body)->property_statements))->property_data)->data))[0]))),local_0_arg_list);
  if ((((ClassCmdContingent*)context)->property_satisfied_body != NULL))
  {
    CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdContingent*)context)->property_satisfied_body)->property_statements))->property_data)->data))[0]))),local_0_arg_list);
  }
  if ((((ClassCmdContingent*)context)->property_unsatisfied_body != NULL))
  {
    CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdContingent*)context)->property_unsatisfied_body)->property_statements))->property_data)->data))[0]))),local_0_arg_list);
  }
  return context;
}

static void CmdContingent__write_etc( SXCRef context )
{
  ETCWriter__write_structure_id__CmdStructure(sxc_singletons[13],context);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_contingent)->property_ordinal);
  CmdStatementList__write_etc(((ClassCmdContingent*)context)->property_body);
  if ((((ClassCmdContingent*)context)->property_satisfied_body != NULL))
  {
    CmdStatementList__write_etc(((ClassCmdContingent*)context)->property_satisfied_body);
  }
  else
  {
    ETCWriter__writeX__Int32(sxc_singletons[13],0);
  }
  if ((((ClassCmdContingent*)context)->property_unsatisfied_body != NULL))
  {
    CmdStatementList__write_etc(((ClassCmdContingent*)context)->property_unsatisfied_body);
  }
  else
  {
    ETCWriter__writeX__Int32(sxc_singletons[13],0);
  }
}

static SlagObject* CmdContingent__to_cpp( SXCRef context )
{
  CPPWriter__println__String(sxc_singletons[11],str247.value);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
  CmdStatementList__to_cpp(((ClassCmdContingent*)context)->property_body);
  CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1638.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingent*)context)->property_id,10))),str1635.value)));
  if ((((ClassCmdContingent*)context)->property_satisfied_body != NULL))
  {
    CPPWriter__println__String(sxc_singletons[11],str247.value);
    ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
    CmdStatementList__to_cpp(((ClassCmdContingent*)context)->property_satisfied_body);
    ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
    CPPWriter__println__String(sxc_singletons[11],str397.value);
  }
  CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1639.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingent*)context)->property_id,10))),str396.value)));
  CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1640.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingent*)context)->property_id,10))),str1635.value)));
  if ((((ClassCmdContingent*)context)->property_unsatisfied_body != NULL))
  {
    CPPWriter__println__String(sxc_singletons[11],str247.value);
    ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
    CmdStatementList__to_cpp(((ClassCmdContingent*)context)->property_unsatisfied_body);
    ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
    CPPWriter__println__String(sxc_singletons[11],str397.value);
  }
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
  CPPWriter__println__String(sxc_singletons[11],str397.value);
  CPPWriter__write_end_id__CmdStructure(sxc_singletons[11],context);
  return NULL;
}

static SlagObject* CmdContingent__to_cs( SXCRef context )
{
  CSWriter__println__String(sxc_singletons[28],str247.value);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent+2);
  CmdStatementList__to_cs(((ClassCmdContingent*)context)->property_body);
  CSWriter__println__String(sxc_singletons[28],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1638.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingent*)context)->property_id,10))),str1635.value)));
  if ((((ClassCmdContingent*)context)->property_satisfied_body != NULL))
  {
    CSWriter__println__String(sxc_singletons[28],str247.value);
    ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent+2);
    CmdStatementList__to_cs(((ClassCmdContingent*)context)->property_satisfied_body);
    ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent-2);
    CSWriter__println__String(sxc_singletons[28],str397.value);
  }
  CSWriter__println__String(sxc_singletons[28],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1639.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingent*)context)->property_id,10))),str396.value)));
  CSWriter__println__String(sxc_singletons[28],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1640.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingent*)context)->property_id,10))),str1635.value)));
  if ((((ClassCmdContingent*)context)->property_unsatisfied_body != NULL))
  {
    CSWriter__println__String(sxc_singletons[28],str247.value);
    ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent+2);
    CmdStatementList__to_cs(((ClassCmdContingent*)context)->property_unsatisfied_body);
    ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent-2);
    CSWriter__println__String(sxc_singletons[28],str397.value);
  }
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent-2);
  CSWriter__println__String(sxc_singletons[28],str397.value);
  CSWriter__write_end_id__CmdStructure(sxc_singletons[28],context);
  return NULL;
}

static SlagObject* CmdContingent__to_java( SXCRef context )
{
  JavaWriter__write_end_id__CmdStructure(sxc_singletons[19],context);
  JavaWriter__println__String(sxc_singletons[19],str247.value);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
  JavaWriter__println__String(sxc_singletons[19],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1640.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingent*)context)->property_id,10))),str41.value)));
  JavaWriter__println__String(sxc_singletons[19],str247.value);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
  JavaWriter__println__String(sxc_singletons[19],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1638.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingent*)context)->property_id,10))),str41.value)));
  JavaWriter__println__String(sxc_singletons[19],str247.value);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
  CmdStatementList__to_java(((ClassCmdContingent*)context)->property_body);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
  JavaWriter__println__String(sxc_singletons[19],str397.value);
  if ((((ClassCmdContingent*)context)->property_satisfied_body != NULL))
  {
    JavaWriter__println__String(sxc_singletons[19],str247.value);
    ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
    CmdStatementList__to_java(((ClassCmdContingent*)context)->property_satisfied_body);
    ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
    JavaWriter__println__String(sxc_singletons[19],str397.value);
  }
  JavaWriter__println__String(sxc_singletons[19],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2006.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingent*)context)->property_id,10))),str396.value)));
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
  JavaWriter__println__String(sxc_singletons[19],str397.value);
  if ((((ClassCmdContingent*)context)->property_unsatisfied_body != NULL))
  {
    JavaWriter__println__String(sxc_singletons[19],str247.value);
    ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
    CmdStatementList__to_java(((ClassCmdContingent*)context)->property_unsatisfied_body);
    ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
    JavaWriter__println__String(sxc_singletons[19],str397.value);
  }
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
  JavaWriter__println__String(sxc_singletons[19],str397.value);
  return NULL;
}

void CmdContingent__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdContingent__type_name( SXCRef context )
{
  return str765.value;
}

static SlagObject* CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdRightShifted.create(),((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_rhs));
}

static SlagObject* CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs), CallFn____Object(16,((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs) );
  sxc_write_ref( &(((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_rhs), CallFn____Object(16,((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_rhs) );
  SlagAnalyzer__require_standard_integer__Cmd(sxc_singletons[8],((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs);
  SlagAnalyzer__require_int32__Cmd(sxc_singletons[8],((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_rhs);
  return CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__optimize(context);
}

static SlagObject* CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__optimize( SXCRef context )
{
  SXCRef local_0_right;
  SXCRef local_1_left;
  SXCRef local_2_left;

  if ((sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    local_0_right = ((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_rhs;
    if (sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_1_left = ((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs;
      ((ClassCmdLiteralInt64*)local_1_left)->property_value = sxc_shr(((ClassCmdLiteralInt64*)local_1_left)->property_value,((ClassCmdLiteralInt32*)local_0_right)->property_value);
      return ((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = sxc_shr(((ClassCmdLiteralInt32*)local_2_left)->property_value,((ClassCmdLiteralInt32*)local_0_right)->property_value);
      return ((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_right_shifted)->property_ordinal);
  CallFn__(7,((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_lhs);
  CallFn__(7,((ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted*)context)->property_rhs);
}

void CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__type_name( SXCRef context )
{
  return str1099.value;
}

static SlagObject* CmdLoop__create_duplicate( SXCRef context )
{
  return CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdLoop.create(),((ClassCmdLoop*)context)->property_t,((ClassCmdLoop*)context)->property_id,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdLoop*)context)->property_body));
}

static SlagObject* CmdLoop__resolve( SXCRef context )
{
  CmdStructure__remap_id(context);
  CmdStatementList__resolve(((ClassCmdLoop*)context)->property_body);
  return context;
}

static void CmdLoop__write_etc( SXCRef context )
{
  ETCWriter__write_structure_id__CmdStructure(sxc_singletons[13],context);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_loop)->property_ordinal);
  CmdStatementList__write_etc(((ClassCmdLoop*)context)->property_body);
}

static SlagObject* CmdLoop__to_cpp( SXCRef context )
{
  CPPWriter__println__String(sxc_singletons[11],str1656.value);
  CPPWriter__println__String(sxc_singletons[11],str247.value);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
  CPPWriter__write_continue_id__CmdStructure(sxc_singletons[11],context);
  CmdStatementList__to_cpp(((ClassCmdLoop*)context)->property_body);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
  CPPWriter__println__String(sxc_singletons[11],str397.value);
  CPPWriter__write_end_id__CmdStructure(sxc_singletons[11],context);
  return NULL;
}

static SlagObject* CmdLoop__to_cs( SXCRef context )
{
  CSWriter__println__String(sxc_singletons[28],str1656.value);
  CSWriter__println__String(sxc_singletons[28],str247.value);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent+2);
  CSWriter__write_continue_id__CmdStructure(sxc_singletons[28],context);
  CmdStatementList__to_cs(((ClassCmdLoop*)context)->property_body);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent-2);
  CSWriter__println__String(sxc_singletons[28],str397.value);
  CSWriter__write_end_id__CmdStructure(sxc_singletons[28],context);
  return NULL;
}

static SlagObject* CmdLoop__to_java( SXCRef context )
{
  JavaWriter__write_end_id__CmdStructure(sxc_singletons[19],context);
  JavaWriter__println__String(sxc_singletons[19],str1656.value);
  JavaWriter__println__String(sxc_singletons[19],str247.value);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
  CmdStatementList__to_java(((ClassCmdLoop*)context)->property_body);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
  JavaWriter__println__String(sxc_singletons[19],str397.value);
  return NULL;
}

void CmdLoop__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLoop__type_name( SXCRef context )
{
  return str776.value;
}

SlagObject* Date__init( SXCRef context )
{
  Date__init__Int64(context,slag_get_time_ms());
  return context;
}

static SlagObject* Date__init__Int64( SXCRef context, SlagInt64 local_0_ms )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_INT64( local_0_ms );
  Date__init__Int64();
  return context;
}

SlagObject* Date__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassDate*)context)->property_year,10))),str38.value),Global__format_string__Int32_Int32_Int32_Char(sxc_singletons[21],((ClassDate*)context)->property_month,2,4,((SlagChar)48))),str38.value),Global__format_string__Int32_Int32_Int32_Char(sxc_singletons[21],((ClassDate*)context)->property_day,2,4,((SlagChar)48))),str607.value),Global__format_string__Int32_Int32_Int32_Char(sxc_singletons[21],((ClassDate*)context)->property_hour,2,4,((SlagChar)48))),str41.value),Global__format_string__Int32_Int32_Int32_Char(sxc_singletons[21],((ClassDate*)context)->property_minute,2,4,((SlagChar)48))),str41.value),Global__format_string__Int32_Int32_Int32_Char(sxc_singletons[21],((ClassDate*)context)->property_second,2,4,((SlagChar)48))));
}

void Date__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Date__type_name( SXCRef context )
{
  return str608.value;
}

static SlagObject* StringManager__create_from__Array_of_Char_Int32( SXCRef context, SXCRef local_0_data, SlagInt32 local_1_len )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_data );
  SLAG_PUSH_INT32( local_1_len );
  StringManager__create_from__Array_of_Char_Int32();
  return SLAG_POP_REF();
}

static SlagObject* StringManager__create_from__ArrayList_of_Char( SXCRef context, SXCRef local_0_data )
{
  return StringManager__create_from__Array_of_Char_Int32(context,((ClassArrayList_of_Char*)local_0_data)->property_data,((ClassArrayList_of_Char*)local_0_data)->property_count);
}

static SlagObject* StringManager__create_from__Char( SXCRef context, SlagChar local_0_ch )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_CHAR( local_0_ch );
  StringManager__create_from__Char();
  return SLAG_POP_REF();
}

static SlagObject* StringManager__create_from__Int64( SXCRef context, SlagInt64 local_0_n )
{
  return ((ClassString*)Global__to_String__Int64_Int32(sxc_singletons[21],local_0_n,10));
}

void StringManager__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassStringManager*)context)->property_consolidation_table), HashTableBase_of_String_and_String_and_Object_and_Object__init(type_ClassHashSet_of_String.create()) );
  sxc_write_ref( &(((ClassStringManager*)context)->property_url_encoding_map), str59.value );
}

SlagObject* StringManager__type_name( SXCRef context )
{
  return str18.value;
}

static SlagObject* Mapping_of_Int32_and_Object__init__Int32_Object( SXCRef context, SlagInt32 local_0_key_5133, SXCRef local_1_value_5132 )
{
  ((ClassMapping_of_Int32_and_Object*)context)->property_key = local_0_key_5133;
  sxc_write_ref( &(((ClassMapping_of_Int32_and_Object*)context)->property_value), local_1_value_5132 );
  return context;
}

SlagObject* Mapping_of_Int32_and_Object__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMapping_of_Int32_and_Object*)context)->property_key,10))),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Int32_and_Object*)context)->property_value)));
}

void Mapping_of_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_Int32_and_Object__type_name( SXCRef context )
{
  return str199.value;
}

static SlagObject* CmdLiteralReal32__init__Token_Real32( SXCRef context, SXCRef local_0_t_9061, SlagReal32 local_1_value_9060 )
{
  sxc_write_ref( &(((ClassCmdLiteralReal32*)context)->property_t), local_0_t_9061 );
  ((ClassCmdLiteralReal32*)context)->property_value = local_1_value_9060;
  return context;
}

static SlagObject* CmdLiteralReal32__create_duplicate( SXCRef context )
{
  return CmdLiteralReal32__init__Token_Real32(type_ClassCmdLiteralReal32.create(),((ClassCmdLiteralReal32*)context)->property_t,((ClassCmdLiteralReal32*)context)->property_value);
}

static SlagObject* CmdLiteralReal32__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_real32;
}

SlagObject* CmdLiteralReal32__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)String__after_first__String(CmdLiteralReal32__type_name(context),str758.value))),str61.value),Global__to_String__Real64(sxc_singletons[21],((SlagReal64)((ClassCmdLiteralReal32*)context)->property_value))),str62.value));
}

static void CmdLiteralReal32__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_literal_real32)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],sxc_real32_as_int32(((ClassCmdLiteralReal32*)context)->property_value));
}

static SlagObject* CmdLiteralReal32__to_cpp( SXCRef context )
{
  if ((((ClassCmdLiteralReal32*)context)->property_value == ((SlagReal32)((SlagInt32)((ClassCmdLiteralReal32*)context)->property_value))))
  {
    return Global__format_string__Real64_Int32_Int32_Char(sxc_singletons[21],((SlagReal64)((ClassCmdLiteralReal32*)context)->property_value),1,1,((SlagChar)32));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1699.value),Global__to_String__Int32_Int32(sxc_singletons[21],sxc_real32_as_int32(((ClassCmdLiteralReal32*)context)->property_value),16)),str62.value));
  }
}

static SlagObject* CmdLiteralReal32__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1945.value),Global__to_String__Int32_Int32(sxc_singletons[21],sxc_real32_as_int32(((ClassCmdLiteralReal32*)context)->property_value),16)),str62.value));
}

static SlagObject* CmdLiteralReal32__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2023.value),Global__to_String__Int32_Int32(sxc_singletons[21],sxc_real32_as_int32(((ClassCmdLiteralReal32*)context)->property_value),16)),str62.value));
}

void CmdLiteralReal32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLiteralReal32__type_name( SXCRef context )
{
  return str1077.value;
}

static SlagObject* CmdCastToReal32__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdCastToReal32.create(),((ClassCmdCastToReal32*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCastToReal32*)context)->property_operand));
}

static SlagObject* CmdCastToReal32__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_real32;
}

static SlagObject* CmdCastToReal32__optimize( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdCastToReal32*)context)->property_operand,&type_ClassCmdLiteralPrimitive))
  {
    if (sxc_instance_of(((ClassCmdCastToReal32*)context)->property_operand,&type_ClassCmdLiteralInt64))
    {
      return CmdLiteralReal32__init__Token_Real32(type_ClassCmdLiteralReal32.create(),((ClassCmdCastToReal32*)context)->property_t,((SlagReal32)((ClassCmdLiteralInt64*)((ClassCmdCastToReal32*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToReal32*)context)->property_operand,&type_ClassCmdLiteralInt32))
    {
      return CmdLiteralReal32__init__Token_Real32(type_ClassCmdLiteralReal32.create(),((ClassCmdCastToReal32*)context)->property_t,((SlagReal32)((ClassCmdLiteralInt32*)((ClassCmdCastToReal32*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToReal32*)context)->property_operand,&type_ClassCmdLiteralReal64))
    {
      return CmdLiteralReal32__init__Token_Real32(type_ClassCmdLiteralReal32.create(),((ClassCmdCastToReal32*)context)->property_t,((SlagReal32)((ClassCmdLiteralReal64*)((ClassCmdCastToReal32*)context)->property_operand)->property_value));
    }
    if (sxc_instance_of(((ClassCmdCastToReal32*)context)->property_operand,&type_ClassCmdLiteralReal32))
    {
      return ((ClassCmdCastToReal32*)context)->property_operand;
    }
    if (sxc_instance_of(((ClassCmdCastToReal32*)context)->property_operand,&type_ClassCmdLiteralChar))
    {
      return CmdLiteralReal32__init__Token_Real32(type_ClassCmdLiteralReal32.create(),((ClassCmdCastToReal32*)context)->property_t,((SlagReal32)((SlagInt32)((ClassCmdLiteralChar*)((ClassCmdCastToReal32*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToReal32*)context)->property_operand,&type_ClassCmdLiteralByte))
    {
      return CmdLiteralReal32__init__Token_Real32(type_ClassCmdLiteralReal32.create(),((ClassCmdCastToReal32*)context)->property_t,((SlagReal32)((SlagInt32)((ClassCmdLiteralByte*)((ClassCmdCastToReal32*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToReal32*)context)->property_operand,&type_ClassCmdLiteralLogical))
    {
      return CmdLiteralReal32__init__Token_Real32(type_ClassCmdLiteralReal32.create(),((ClassCmdCastToReal32*)context)->property_t,((SlagReal32)((SlagInt32)((ClassCmdLiteralLogical*)((ClassCmdCastToReal32*)context)->property_operand)->property_value)));
    }
  }
  return context;
}

static void CmdCastToReal32__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cast_to_real32)->property_ordinal);
  CallFn__(7,((ClassCmdCastToReal32*)context)->property_operand);
}

static SlagObject* CmdCastToReal32__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(12,((ClassCmdCastToReal32*)context)->property_operand);
}

static SlagObject* CmdCastToReal32__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1704.value),CallFn____Object(15,((ClassCmdCastToReal32*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCastToReal32__statement_to_cs( SXCRef context )
{
  return CallFn____Object(33,((ClassCmdCastToReal32*)context)->property_operand);
}

static SlagObject* CmdCastToReal32__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1951.value),CallFn____Object(35,((ClassCmdCastToReal32*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCastToReal32__statement_to_java( SXCRef context )
{
  return CallFn____Object(6,((ClassCmdCastToReal32*)context)->property_operand);
}

static SlagObject* CmdCastToReal32__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1951.value),CallFn____Object(41,((ClassCmdCastToReal32*)context)->property_operand)),str62.value));
}

void CmdCastToReal32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCastToReal32__type_name( SXCRef context )
{
  return str1094.value;
}

static void JavaWriter__write__String( SXCRef context, SXCRef local_0_output_filename_10729 )
{
  sxc_write_ref( &(((ClassJavaWriter*)context)->property_output_filename), local_0_output_filename_10729 );
  sxc_write_ref( &(((ClassJavaWriter*)context)->property_output_filename), String__before_first__String(((ClassJavaWriter*)context)->property_output_filename,str1961.value) );
  sxc_write_ref( &(((ClassJavaWriter*)context)->property_base_path), File__path(File__init__String(type_ClassFile.create(),((ClassJavaWriter*)context)->property_output_filename)) );
  sxc_write_ref( &(((ClassJavaWriter*)context)->property_base_name), String__after_last__Char(String__after_last__Char(((ClassJavaWriter*)context)->property_output_filename,((SlagChar)47)),((SlagChar)92)) );
  JavaWriter__assign_cross_compile_names(context);
  if (!((ClassSlagCompiler*)sxc_singletons[14])->property_quiet)
  {
    Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1366.value),((ClassJavaWriter*)context)->property_base_path),str1963.value)));
  }
  JavaWriter__open_file__String(context,str1964.value);
  JavaWriter__println__String(context,str1966.value);
  JavaWriter__println__String(context,str247.value);
  ((ClassJavaWriter*)context)->property_indent += 2;
  JavaWriter__print_globals(context);
  ((ClassJavaWriter*)context)->property_indent -= 2;
  JavaWriter__println__String(context,str397.value);
  JavaWriter__println(context);
  JavaWriter__print_types(context);
  if ((((ClassJavaWriter*)context)->property_out != NULL))
  {
    CallFn__(20,((ClassJavaWriter*)context)->property_out);
    sxc_write_ref( &(((ClassJavaWriter*)context)->property_out), NULL );
  }
}

static void JavaWriter__do_indent( SXCRef context )
{
  while ((((ClassJavaWriter*)context)->property_col <= ((ClassJavaWriter*)context)->property_indent))
  {
    CallFn__Char(46,((ClassJavaWriter*)context)->property_out,((SlagChar)32));
    ++(((ClassJavaWriter*)context)->property_col);
  }
}

static void JavaWriter__print__Char( SXCRef context, SlagChar local_0_ch )
{
  JavaWriter__do_indent(context);
  CallFn__Char(46,((ClassJavaWriter*)context)->property_out,local_0_ch);
  ++(((ClassJavaWriter*)context)->property_col);
}

static void JavaWriter__print__String( SXCRef context, SXCRef local_0_st )
{
  SXCRef local_1__reader1336;
  SlagChar local_2_ch;

  JavaWriter__do_indent(context);
  local_1__reader1336 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_st,0,-1));
  while (CallFn____Logical(14,local_1__reader1336))
  {
    local_2_ch = CallFn____Char(29,local_1__reader1336);
    JavaWriter__print__Char(context,local_2_ch);
  }
}

static void JavaWriter__println__String( SXCRef context, SXCRef local_0_st )
{
  JavaWriter__print__String(context,local_0_st);
  JavaWriter__println(context);
}

static void JavaWriter__println__Char( SXCRef context, SlagChar local_0_ch )
{
  JavaWriter__print__Char(context,local_0_ch);
  JavaWriter__println(context);
}

static void JavaWriter__println( SXCRef context )
{
  CallFn__Char(46,((ClassJavaWriter*)context)->property_out,((SlagChar)10));
  ((ClassJavaWriter*)context)->property_col = 1;
  ++(((ClassJavaWriter*)context)->property_lines);
}

static void JavaWriter__open_file__String( SXCRef context, SXCRef local_0_filename )
{
  SlagInt32 local_1__local_1339;
  SlagInt32 local_2__last1340;
  SlagInt32 local_3__local_1341;
  SlagInt32 local_4__last1342;

  if ((((ClassJavaWriter*)context)->property_out != NULL))
  {
    CallFn__(20,((ClassJavaWriter*)context)->property_out);
  }
  sxc_write_ref( &(((ClassJavaWriter*)context)->property_out), ((ClassTextWriter*)FileWriter__init__String_Logical(type_ClassFileWriter.create(),((ClassFile*)File__init__String(type_ClassFile.create(),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassJavaWriter*)context)->property_base_path),str390.value),local_0_filename),str1961.value))))->property_filepath,false)) );
  JavaWriter__print__String(context,str1507.value);
  local_1__local_1339 = 1;
  local_2__last1340 = 77;
  while ((local_1__local_1339 <= local_2__last1340))
  {
    JavaWriter__print__Char(context,((SlagChar)61));
    ++local_1__local_1339;
  }
  JavaWriter__println(context);
  JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1508.value),local_0_filename),str1961.value)));
  JavaWriter__println__String(context,String__opADD__String(str1509.value,Global__to_String__Object(sxc_singletons[21],Date__init(type_ClassDate.create()))));
  JavaWriter__print__String(context,str1507.value);
  local_3__local_1341 = 1;
  local_4__last1342 = 77;
  while ((local_3__local_1341 <= local_4__last1342))
  {
    JavaWriter__print__Char(context,((SlagChar)61));
    ++local_3__local_1341;
  }
  JavaWriter__println(context);
  if (((((SlagString*)((ClassSlagCompiler*)sxc_singletons[14])->property_java_package)->count) != 0))
  {
    JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1965.value),((ClassSlagCompiler*)sxc_singletons[14])->property_java_package),str396.value)));
  }
  JavaWriter__println(context);
}

static void JavaWriter__assign_cross_compile_names( SXCRef context )
{
  SXCRef local_0__reader1344;
  SXCRef local_1_type;
  SXCRef local_2__reader1346;
  SXCRef local_3_m;
  SXCRef local_4__reader1347;
  SXCRef local_5_type;

  local_0__reader1344 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader1344))
  {
    local_1_type = ArrayReader_of_TypeInfo__read(local_0__reader1344);
    TypeInfo__x_name(local_1_type);
    if (String__opEQ__String(((ClassTypeInfo*)local_1_type)->property_name,str7.value))
    {
      sxc_write_ref( &(((ClassTypeInfo*)local_1_type)->property_x_name), str1146.value );
    }
  }
  local_2__reader1346 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_2__reader1346))
  {
    local_3_m = ArrayReader_of_MethodInfo__read(local_2__reader1346);
    sxc_write_ref( &(((ClassMethodInfo*)local_3_m)->property_x_name), String__x_compatible(((ClassMethodInfo*)local_3_m)->property_name) );
  }
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str580.value,NULL))->property_x_name), str1815.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str581.value,NULL))->property_x_name), str1816.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str564.value,NULL))->property_x_name), str1817.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str577.value,NULL))->property_x_name), str1818.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str578.value,NULL))->property_x_name), str1819.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str579.value,NULL))->property_x_name), str1820.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str582.value,NULL))->property_x_name), str1962.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str33.value,NULL))->property_x_name), str33.value );
  local_4__reader1347 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_4__reader1347))
  {
    local_5_type = ArrayReader_of_TypeInfo__read(local_4__reader1347);
    JavaWriter__fix_array_type__TypeInfo(context,local_5_type);
  }
}

static void JavaWriter__fix_array_type__TypeInfo( SXCRef context, SXCRef local_0_type )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_array)->property_flags) != 0))
  {
    JavaWriter__fix_array_type__TypeInfo(context,((ClassTypeInfo*)local_0_type)->property_element_type);
    sxc_write_ref( &(((ClassTypeInfo*)local_0_type)->property_x_name), String__opADD__String(TypeInfo__x_name(((ClassTypeInfo*)local_0_type)->property_element_type),str64.value) );
  }
}

static void JavaWriter__print_globals( SXCRef context )
{
  SXCRef local_0__reader1349;
  SXCRef local_1_type;
  SXCRef local_2_main_class;
  SXCRef local_3__reader1351;
  SXCRef local_4_type;
  SXCRef local_5__reader1353;
  SXCRef local_6_type;
  SXCRef local_7__reader1355;
  SXCRef local_8_type;

  local_0__reader1349 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader1349))
  {
    local_1_type = ArrayReader_of_TypeInfo__read(local_0__reader1349);
    if ((!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0) && !!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0)))
    {
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1826.value),TypeInfo__x_name(local_1_type)),str1827.value),TypeInfo__x_name(local_1_type)),str396.value)));
    }
  }
  local_2_main_class = ((ClassTypeManager*)sxc_singletons[7])->property_main_class;
  JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1826.value),TypeInfo__x_name(local_2_main_class)),str1828.value)));
  JavaWriter__println(context);
  JavaWriter__println__String(context,str1829.value);
  JavaWriter__println__String(context,str247.value);
  ((ClassJavaWriter*)context)->property_indent += 2;
  local_3__reader1351 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_3__reader1351))
  {
    local_4_type = ArrayReader_of_TypeInfo__read(local_3__reader1351);
    if (((!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_4_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0) && !!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_4_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0)) && (local_4_type != local_2_main_class)))
    {
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1830.value),TypeInfo__x_name(local_4_type)),str1831.value),TypeInfo__x_name(local_4_type)),str1832.value)));
    }
  }
  JavaWriter__println(context);
  JavaWriter__println__String(context,str1833.value);
  JavaWriter__println(context);
  local_5__reader1353 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_5__reader1353))
  {
    local_6_type = ArrayReader_of_TypeInfo__read(local_5__reader1353);
    if (((!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_6_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0) && !!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_6_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0)) && (local_6_type != local_2_main_class)))
    {
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1830.value),TypeInfo__x_name(local_6_type)),str1834.value)));
    }
  }
  JavaWriter__println(context);
  local_7__reader1355 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_7__reader1355))
  {
    local_8_type = ArrayReader_of_TypeInfo__read(local_7__reader1355);
    if (((!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_8_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0) && !!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_8_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0)) && (local_8_type != local_2_main_class)))
    {
      if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_8_type)->property_methods_by_signature)->property_data,str988.value))
      {
        JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1830.value),TypeInfo__x_name(local_8_type)),str1967.value)));
      }
    }
  }
  ((ClassJavaWriter*)context)->property_indent -= 2;
  JavaWriter__println__String(context,str397.value);
  JavaWriter__println(context);
  JavaWriter__println__String(context,str1968.value);
  JavaWriter__println__String(context,str247.value);
  ((ClassJavaWriter*)context)->property_indent += 2;
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_2_main_class)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
  {
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_2_main_class)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0))
    {
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1830.value),TypeInfo__x_name(TypeInfo__manager_class(local_2_main_class))),str1837.value),TypeInfo__x_name(local_2_main_class)),str1832.value)));
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1838.value),TypeInfo__x_name(TypeInfo__manager_class(local_2_main_class))),str1839.value)));
    }
    else
    {
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1830.value),TypeInfo__x_name(local_2_main_class)),str1831.value),TypeInfo__x_name(local_2_main_class)),str1832.value)));
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1838.value),TypeInfo__x_name(local_2_main_class)),str396.value)));
    }
  }
  else
  {
    JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1840.value),TypeInfo__x_name(((ClassTypeManager*)sxc_singletons[7])->property_main_class)),str1832.value)));
  }
  JavaWriter__println__String(context,str1841.value);
  ((ClassJavaWriter*)context)->property_indent -= 2;
  JavaWriter__println__String(context,str397.value);
  JavaWriter__println(context);
}

static void JavaWriter__print_types( SXCRef context )
{
  SXCRef local_0_type_string;
  SXCRef local_1__reader1360;
  SXCRef local_2_type;
  SXCRef local_3__reader1367;
  SXCRef local_4_m;
  SlagLogical local_5_first;
  SXCRef local_6__reader1371;
  SXCRef local_7_a;
  SlagLogical local_8_new_property;
  SXCRef local_9__reader1377;
  SXCRef local_10_p;
  SXCRef local_11__reader1382;
  SXCRef local_12_p;
  SlagLogical local_13_first;
  SXCRef local_14__reader1384;
  SXCRef local_15_p;
  SXCRef local_16__reader1386;
  SXCRef local_17_p;
  SXCRef local_18__reader1387;
  SXCRef local_19_p;
  SXCRef local_20__reader1390;
  SXCRef local_21_m;
  SXCRef local_22__reader1393;
  SXCRef local_23_base_aspect;
  SlagLogical local_24_found_overrides;
  SlagLogical local_25_found_inherited;
  SlagLogical local_26_found_default;
  SXCRef local_27__reader1394;
  SXCRef local_28_m;
  SXCRef local_29__reader1400;
  SXCRef local_30_m;
  SXCRef local_31__reader1404;
  SXCRef local_32_m;

  local_0_type_string = TypeManager__get__String_Token(sxc_singletons[7],str19.value,NULL);
  local_1__reader1360 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_1__reader1360))
  {
    local_2_type = ArrayReader_of_TypeInfo__read(local_1__reader1360);
    if ((local_2_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_null))
    {
      goto next_10753;
    }
    if ((((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_array)->property_flags) != 0) || ((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0)))
    {
      goto next_10753;
    }
    if (String__opEQ__String(((ClassTypeInfo*)local_2_type)->property_name,str7.value))
    {
      goto next_10753;
    }
    if (String__opEQ__String(((ClassTypeInfo*)local_2_type)->property_name,str21.value))
    {
      goto next_10753;
    }
    if (String__opEQ__String(((ClassTypeInfo*)local_2_type)->property_name,str33.value))
    {
      goto next_10753;
    }
    JavaWriter__open_file__String(context,TypeInfo__x_name(local_2_type));
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      local_3__reader1367 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_methods);
      while (ArrayReader_of_MethodInfo__has_another(local_3__reader1367))
      {
        local_4_m = ArrayReader_of_MethodInfo__read(local_3__reader1367);
        if (((((ClassQualifiers*)((ClassMethodInfo*)local_4_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0))
        {
          JavaWriter__print__String(context,str1842.value);
          goto end_10760;
        }
        next_10760:;
      }
      end_10760:;
      JavaWriter__print__String(context,String__opADD__String(str1843.value,TypeInfo__x_name(local_2_type)));
      if (((local_2_type != ((ClassTypeManager*)sxc_singletons[7])->property_type_object) && !((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0)))
      {
        JavaWriter__print__String(context,String__opADD__String(str1969.value,TypeInfo__x_name(((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_2_type)->property_base_types))->property_data)->data))[0])))));
      }
    }
    else if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
    {
      JavaWriter__print__String(context,String__opADD__String(str1843.value,TypeInfo__x_name(local_2_type)));
    }
    else if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      JavaWriter__print__String(context,String__opADD__String(str1845.value,TypeInfo__x_name(local_2_type)));
    }
    else
    {
      SLAG_THROW( Error__init__String(type_ClassError.create(),str1970.value) );
    }
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_2_type)->property_base_types))->property_count != 0))
    {
      local_5_first = true;
      local_6__reader1371 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_base_types);
      while (ArrayReader_of_TypeInfo__has_another(local_6__reader1371))
      {
        local_7_a = ArrayReader_of_TypeInfo__read(local_6__reader1371);
        if (((((ClassQualifiers*)((ClassTypeInfo*)local_7_a)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
        {
          if (local_5_first)
          {
            local_5_first = false;
            if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
            {
              JavaWriter__print__String(context,str1969.value);
            }
            else
            {
              JavaWriter__print__String(context,str1971.value);
            }
          }
          else
          {
            JavaWriter__print__String(context,str634.value);
          }
          JavaWriter__print__String(context,TypeInfo__x_name(local_7_a));
        }
      }
    }
    JavaWriter__println(context);
    JavaWriter__println__String(context,str247.value);
    ((ClassJavaWriter*)context)->property_indent += 2;
    if ((local_2_type == local_0_type_string))
    {
      JavaWriter__println__String(context,str1846.value);
      JavaWriter__println__String(context,str1972.value);
      JavaWriter__println(context);
      JavaWriter__println__String(context,str1973.value);
      JavaWriter__println__String(context,str247.value);
      JavaWriter__println__String(context,str1974.value);
      JavaWriter__println__String(context,str1849.value);
      JavaWriter__println__String(context,str1850.value);
      JavaWriter__println__String(context,str1975.value);
      JavaWriter__println__String(context,str1852.value);
      JavaWriter__println__String(context,str1853.value);
      JavaWriter__println__String(context,str1976.value);
      JavaWriter__println__String(context,str1855.value);
      JavaWriter__println__String(context,str1977.value);
      JavaWriter__println__String(context,str397.value);
      JavaWriter__println(context);
    }
    if (!((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      local_8_new_property = false;
      local_9__reader1377 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_properties);
      while (CallFn____Logical(14,local_9__reader1377))
      {
        local_10_p = CallFn____Object(45,local_9__reader1377);
        if (((TypeInfo__base_class(local_2_type) == NULL) || !GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_PropertyInfo*)((ClassTypeInfo*)TypeInfo__base_class(local_2_type))->property_properties_by_name)->property_data,((ClassPropertyInfo*)local_10_p)->property_name)))
        {
          JavaWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1860.value),TypeInfo__x_name(((ClassPropertyInfo*)local_10_p)->property_type)),str607.value),PropertyInfo__x_name(local_10_p))));
          if ((((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_10_p)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0) && !((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0)))
          {
            JavaWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1831.value),TypeInfo__x_name(((ClassPropertyInfo*)local_10_p)->property_type)),str1009.value)));
          }
          JavaWriter__println__Char(context,((SlagChar)59));
          local_8_new_property = true;
        }
      }
      if (local_8_new_property)
      {
        JavaWriter__println(context);
      }
    }
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
    {
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1826.value),TypeInfo__x_name(local_2_type)),str1978.value)));
      JavaWriter__println__String(context,str247.value);
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str69.value),TypeInfo__x_name(local_2_type)),str1979.value),TypeInfo__x_name(local_2_type)),str1980.value)));
      JavaWriter__println__String(context,str1981.value);
      JavaWriter__println__String(context,str1852.value);
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1982.value),TypeInfo__x_name(local_2_type)),str1530.value)));
      JavaWriter__println__String(context,str1855.value);
      JavaWriter__println__String(context,str1983.value);
      JavaWriter__println__String(context,str397.value);
      JavaWriter__println(context);
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1860.value),TypeInfo__x_name(local_2_type)),str1009.value)));
      JavaWriter__println__Char(context,((SlagChar)123));
      local_11__reader1382 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_properties);
      while (CallFn____Logical(14,local_11__reader1382))
      {
        local_12_p = CallFn____Object(45,local_11__reader1382);
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_12_p)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
        {
          JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1861.value),PropertyInfo__x_name(local_12_p)),str1831.value),TypeInfo__x_name(((ClassPropertyInfo*)local_12_p)->property_type)),str1530.value)));
        }
      }
      JavaWriter__println__Char(context,((SlagChar)125));
      JavaWriter__println(context);
      JavaWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1860.value),TypeInfo__x_name(local_2_type)),str61.value)));
      local_13_first = true;
      local_14__reader1384 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_properties);
      while (CallFn____Logical(14,local_14__reader1384))
      {
        local_15_p = CallFn____Object(45,local_14__reader1384);
        if (local_13_first)
        {
          local_13_first = false;
        }
        else
        {
          JavaWriter__print__Char(context,((SlagChar)44));
        }
        JavaWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str607.value),TypeInfo__x_name(((ClassPropertyInfo*)local_15_p)->property_type)),str607.value),PropertyInfo__x_name(local_15_p))));
      }
      JavaWriter__println__String(context,str635.value);
      JavaWriter__println__Char(context,((SlagChar)123));
      local_16__reader1386 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_properties);
      while (CallFn____Logical(14,local_16__reader1386))
      {
        local_17_p = CallFn____Object(45,local_16__reader1386);
        JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1861.value),PropertyInfo__x_name(local_17_p)),str1653.value),PropertyInfo__x_name(local_17_p)),str396.value)));
      }
      JavaWriter__println__Char(context,((SlagChar)125));
      JavaWriter__println(context);
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1984.value),TypeInfo__x_name(local_2_type)),str1520.value)));
      JavaWriter__println__Char(context,((SlagChar)123));
      local_18__reader1387 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_properties);
      while (CallFn____Logical(14,local_18__reader1387))
      {
        local_19_p = CallFn____Object(45,local_18__reader1387);
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_19_p)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
        {
          JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1985.value),PropertyInfo__x_name(local_19_p)),str1864.value),PropertyInfo__x_name(local_19_p)),str1986.value)));
        }
        else
        {
          JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1866.value),PropertyInfo__x_name(local_19_p)),str1867.value),PropertyInfo__x_name(local_19_p)),str1868.value)));
        }
      }
      JavaWriter__println__String(context,str1869.value);
      JavaWriter__println__Char(context,((SlagChar)125));
      JavaWriter__println(context);
    }
    else
    {
      if (((((ClassQualifiers*)((ClassTypeInfo*)local_2_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
      {
        local_20__reader1390 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_methods);
        while (ArrayReader_of_MethodInfo__has_another(local_20__reader1390))
        {
          local_21_m = ArrayReader_of_MethodInfo__read(local_20__reader1390);
          if ((((ClassMethodInfo*)local_21_m)->property_type_context == local_2_type))
          {
            {
              local_22__reader1393 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_base_types);
              while (ArrayReader_of_TypeInfo__has_another(local_22__reader1393))
              {
                local_23_base_aspect = ArrayReader_of_TypeInfo__read(local_22__reader1393);
                if (!!GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_23_base_aspect)->property_methods_by_signature)->property_data,((ClassMethodInfo*)local_21_m)->property_signature)) goto unsatisfied_10785;
              }
              satisfied_10785:;
              {
                JavaWriter__print_prototype__MethodInfo_Logical(context,local_21_m,true);
              }
              goto end_10785;
              unsatisfied_10785:;
            }
            end_10785:;
          }
        }
      }
      else
      {
        local_24_found_overrides = false;
        local_25_found_inherited = false;
        local_26_found_default = false;
        local_27__reader1394 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_methods);
        while (ArrayReader_of_MethodInfo__has_another(local_27__reader1394))
        {
          local_28_m = ArrayReader_of_MethodInfo__read(local_27__reader1394);
          if (String__opEQ__String(((ClassMethodInfo*)local_28_m)->property_name,str667.value))
          {
            if ((((ClassMethodInfo*)local_28_m)->property_type_context == local_2_type))
            {
              if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_28_m)->property_parameters))->property_count == 0))
              {
                local_26_found_default = true;
              }
              local_24_found_overrides = true;
              JavaWriter__print_constructor__TypeInfo_MethodInfo(context,local_2_type,local_28_m);
            }
            else
            {
              local_25_found_inherited = true;
            }
          }
        }
        if (!local_24_found_overrides)
        {
          if (local_25_found_inherited)
          {
            local_29__reader1400 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_methods);
            while (ArrayReader_of_MethodInfo__has_another(local_29__reader1400))
            {
              local_30_m = ArrayReader_of_MethodInfo__read(local_29__reader1400);
              if (String__opEQ__String(((ClassMethodInfo*)local_30_m)->property_name,str667.value))
              {
                if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_30_m)->property_parameters))->property_count == 0))
                {
                  local_26_found_default = true;
                }
                JavaWriter__print_constructor__TypeInfo_MethodInfo(context,local_2_type,local_30_m);
              }
            }
          }
        }
        if (((local_2_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_object) || (local_2_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_exception)))
        {
          JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1860.value),TypeInfo__x_name(local_2_type)),str1880.value)));
          JavaWriter__println__String(context,str247.value);
          JavaWriter__println__String(context,str1881.value);
          JavaWriter__println__String(context,str397.value);
        }
        else
        {
          JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1860.value),TypeInfo__x_name(local_2_type)),str1880.value)));
          JavaWriter__println__String(context,str247.value);
          JavaWriter__println__String(context,str1974.value);
          JavaWriter__println__String(context,str1881.value);
          JavaWriter__println__String(context,str397.value);
        }
        JavaWriter__println(context);
        local_31__reader1404 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_2_type)->property_methods);
        while (ArrayReader_of_MethodInfo__has_another(local_31__reader1404))
        {
          local_32_m = ArrayReader_of_MethodInfo__read(local_31__reader1404);
          if ((((ClassMethodInfo*)local_32_m)->property_type_context == local_2_type))
          {
            JavaWriter__print_method__MethodInfo(context,local_32_m);
          }
        }
      }
    }
    JavaWriter__println(context);
    ((ClassJavaWriter*)context)->property_indent -= 2;
    JavaWriter__println__String(context,str397.value);
    next_10753:;
  }
  end_10753:;
}

static void JavaWriter__print_constructor__TypeInfo_MethodInfo( SXCRef context, SXCRef local_0_type, SXCRef local_1_m )
{
  SlagLogical local_2_first;
  SXCRef local_3__reader1406;
  SXCRef local_4_p;
  SXCRef local_5__reader1409;
  SXCRef local_6_p;

  JavaWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1860.value),TypeInfo__x_name(local_0_type)),str61.value)));
  local_2_first = true;
  local_3__reader1406 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_1_m)->property_parameters);
  while (CallFn____Logical(14,local_3__reader1406))
  {
    local_4_p = CallFn____Object(45,local_3__reader1406);
    if (local_2_first)
    {
      local_2_first = false;
    }
    else
    {
      JavaWriter__print__Char(context,((SlagChar)44));
    }
    JavaWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassParameterInfo*)local_4_p)->property_type)),str607.value),ParameterInfo__x_name(local_4_p))));
  }
  JavaWriter__print__String(context,str62.value);
  JavaWriter__println(context);
  JavaWriter__println__Char(context,((SlagChar)123));
  if (((local_0_type != ((ClassTypeManager*)sxc_singletons[7])->property_type_object) && (local_0_type != ((ClassTypeManager*)sxc_singletons[7])->property_type_exception)))
  {
    JavaWriter__print__String(context,str1974.value);
  }
  JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str69.value),MethodInfo__x_name(local_1_m)),str1879.value)));
  JavaWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str69.value),MethodInfo__x_name(local_1_m)),str61.value)));
  local_2_first = true;
  local_5__reader1409 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_1_m)->property_parameters);
  while (CallFn____Logical(14,local_5__reader1409))
  {
    local_6_p = CallFn____Object(45,local_5__reader1409);
    if (local_2_first)
    {
      local_2_first = false;
    }
    else
    {
      JavaWriter__print__Char(context,((SlagChar)44));
    }
    JavaWriter__print__String(context,ParameterInfo__x_name(local_6_p));
  }
  JavaWriter__println__String(context,str1554.value);
  JavaWriter__println__Char(context,((SlagChar)125));
  JavaWriter__println(context);
}

static void JavaWriter__print_prototype__MethodInfo_Logical( SXCRef context, SXCRef local_0_m, SlagLogical local_1_semicolon )
{
  SlagLogical local_2_first;
  SXCRef local_3__reader1413;
  SXCRef local_4_p;
  SXCRef local_5_which_1416;

  sxc_write_ref( &(((ClassJavaWriter*)context)->property_this_method), local_0_m );
  if (!local_1_semicolon)
  {
    JavaWriter__print__String(context,str1860.value);
  }
  if ((((ClassMethodInfo*)local_0_m)->property_return_type != NULL))
  {
    JavaWriter__print__String(context,String__opADD__String(TypeInfo__x_name(((ClassMethodInfo*)local_0_m)->property_return_type),str607.value));
  }
  else
  {
    JavaWriter__print__String(context,str1529.value);
  }
  JavaWriter__print__String(context,String__opADD__String(MethodInfo__x_name(local_0_m),str61.value));
  local_2_first = true;
  local_3__reader1413 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_0_m)->property_parameters);
  while (CallFn____Logical(14,local_3__reader1413))
  {
    local_4_p = CallFn____Object(45,local_3__reader1413);
    if (local_2_first)
    {
      local_2_first = false;
    }
    else
    {
      JavaWriter__print__Char(context,((SlagChar)44));
    }
    JavaWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassParameterInfo*)local_4_p)->property_type)),str607.value),ParameterInfo__x_name(local_4_p))));
  }
  if (local_1_semicolon)
  {
    JavaWriter__println__String(context,str1554.value);
  }
  else
  {
    JavaWriter__print__String(context,str1870.value);
    local_5_which_1416 = ((ClassMethodInfo*)local_0_m)->property_return_type;
    if ((local_5_which_1416 == NULL))
    {
      JavaWriter__println__String(context,str397.value);
    }
    else if ((local_5_which_1416 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      JavaWriter__println__String(context,str1871.value);
    }
    else if ((local_5_which_1416 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      JavaWriter__println__String(context,str1872.value);
    }
    else if ((local_5_which_1416 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      JavaWriter__println__String(context,str1873.value);
    }
    else if ((local_5_which_1416 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      JavaWriter__println__String(context,str1874.value);
    }
    else if ((local_5_which_1416 == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
    {
      JavaWriter__println__String(context,str1875.value);
    }
    else if ((local_5_which_1416 == ((ClassTypeManager*)sxc_singletons[7])->property_type_byte))
    {
      JavaWriter__println__String(context,str1876.value);
    }
    else if ((local_5_which_1416 == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
    {
      JavaWriter__println__String(context,str1874.value);
    }
    else
    {
      JavaWriter__println__String(context,str1877.value);
    }
  }
}

static void JavaWriter__print_method__MethodInfo( SXCRef context, SXCRef local_0_m )
{
  SlagLogical local_1_first;
  SXCRef local_2__reader1421;
  SXCRef local_3_p;
  SXCRef local_4_args;
  SXCRef local_5__reader1426;
  SXCRef local_6_p;
  SlagLogical local_7_any_locals;
  SXCRef local_8__reader1427;
  SXCRef local_9_v;

  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_0_m)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
  {
    return;
  }
  if (String__opEQ__String(((ClassTypeInfo*)((ClassMethodInfo*)local_0_m)->property_type_context)->property_name,str7.value))
  {
    return;
  }
  sxc_write_ref( &(((ClassJavaWriter*)context)->property_this_method), local_0_m );
  if (((((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0))
  {
    JavaWriter__print__String(context,str1883.value);
  }
  else
  {
    JavaWriter__print__String(context,str1860.value);
  }
  if ((((ClassMethodInfo*)local_0_m)->property_return_type != NULL))
  {
    JavaWriter__print__String(context,String__opADD__String(TypeInfo__x_name(((ClassMethodInfo*)local_0_m)->property_return_type),str607.value));
  }
  else
  {
    JavaWriter__print__String(context,str1529.value);
  }
  JavaWriter__print__String(context,String__opADD__String(MethodInfo__x_name(local_0_m),str61.value));
  local_1_first = true;
  local_2__reader1421 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_0_m)->property_parameters);
  while (CallFn____Logical(14,local_2__reader1421))
  {
    local_3_p = CallFn____Object(45,local_2__reader1421);
    if (local_1_first)
    {
      local_1_first = false;
    }
    else
    {
      JavaWriter__print__Char(context,((SlagChar)44));
    }
    JavaWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassParameterInfo*)local_3_p)->property_type)),str607.value),ParameterInfo__x_name(local_3_p))));
  }
  JavaWriter__print__String(context,str62.value);
  if (((((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0))
  {
    JavaWriter__println__String(context,str396.value);
    JavaWriter__println(context);
    return;
  }
  else
  {
    JavaWriter__println(context);
  }
  JavaWriter__println__String(context,str247.value);
  ((ClassJavaWriter*)context)->property_indent += 2;
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
  {
    if ((((ClassMethodInfo*)local_0_m)->property_return_type != NULL))
    {
      JavaWriter__print__String(context,str810.value);
    }
    local_4_args = ArrayList_of_String__init(type_ClassArrayList_of_String.create());
    local_5__reader1426 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_0_m)->property_parameters);
    while (CallFn____Logical(14,local_5__reader1426))
    {
      local_6_p = CallFn____Object(45,local_5__reader1426);
      ArrayList_of_Object__add__Object(local_4_args,ParameterInfo__x_name(local_6_p));
    }
    JavaWriter__print__String(context,JavaWriter__native_call__String_String_String_ArrayList_of_String(context,((ClassMethodInfo*)local_0_m)->property_full_signature,MethodInfo__x_name(local_0_m),str999.value,local_4_args));
    JavaWriter__println__String(context,str396.value);
    ((ClassJavaWriter*)context)->property_indent -= 2;
    JavaWriter__println__String(context,str397.value);
    JavaWriter__println(context);
    return;
  }
  local_7_any_locals = false;
  local_8__reader1427 = ArrayList_of_LocalVarInfo__from__Int32(((ClassMethodInfo*)local_0_m)->property_local_vars,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_count);
  while (ArrayReader_of_LocalVarInfo__has_another(local_8__reader1427))
  {
    local_9_v = ArrayReader_of_LocalVarInfo__read(local_8__reader1427);
    if (!((ClassLocalVarInfo*)local_9_v)->property_is_catch_var)
    {
      local_7_any_locals = true;
      JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassLocalVarInfo*)local_9_v)->property_type)),str607.value),LocalVarInfo__x_name(local_9_v)),str396.value)));
    }
  }
  if (local_7_any_locals)
  {
    JavaWriter__println(context);
  }
  CmdStatementList__to_java(((ClassMethodInfo*)local_0_m)->property_body);
  ((ClassJavaWriter*)context)->property_indent -= 2;
  JavaWriter__println__String(context,str397.value);
  JavaWriter__println(context);
}

static void JavaWriter__write_end_id__CmdStructure( SXCRef context, SXCRef local_0_cmd )
{
  if (((ClassCmdStructure*)local_0_cmd)->property_referenced)
  {
    JavaWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1634.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdStructure*)local_0_cmd)->property_id,10))),str41.value)));
  }
}

static SlagObject* JavaWriter__native_call__String_String_String_CmdList( SXCRef context, SXCRef local_0_full_sig, SXCRef local_1_method_name, SXCRef local_2_context, SXCRef local_3_args )
{
  SXCRef local_4_string_args;
  SXCRef local_5__reader1431;
  SXCRef local_6_arg;

  local_4_string_args = ArrayList_of_String__init(type_ClassArrayList_of_String.create());
  local_5__reader1431 = ArrayList_of_Cmd__create_reader(local_3_args);
  while (CallFn____Logical(14,local_5__reader1431))
  {
    local_6_arg = CallFn____Object(45,local_5__reader1431);
    ArrayList_of_Object__add__Object(local_4_string_args,CallFn____Object(41,local_6_arg));
  }
  return JavaWriter__native_call__String_String_String_ArrayList_of_String(context,local_0_full_sig,local_1_method_name,local_2_context,local_4_string_args);
}

static SlagObject* JavaWriter__native_call__String_String_String_ArrayList_of_String( SXCRef context, SXCRef local_0_full_sig, SXCRef local_1_method_name, SXCRef local_2_context, SXCRef local_3_args )
{
  SlagChar local_4_which_1432;
  SXCRef local_5_which_1433;
  SXCRef local_6_which_1434;
  SXCRef local_7_which_1435;
  SXCRef local_8_which_1436;
  SXCRef local_9_buffer;
  SXCRef local_10__reader1438;
  SXCRef local_11_arg;

  local_4_which_1432 = String__get__Int32(local_0_full_sig,0);
  if ((((SlagInt32)local_4_which_1432) == 71))
  {
    local_5_which_1433 = local_0_full_sig;
    if (String__opEQ__String(local_5_which_1433,str1575.value))
    {
      return str1987.value;
    }
    else if (String__opEQ__String(local_5_which_1433,str1887.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1988.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1989.value));
    }
  }
  else if ((((SlagInt32)local_4_which_1432) == 77))
  {
    local_6_which_1434 = local_0_full_sig;
    if (String__opEQ__String(local_6_which_1434,str1577.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1990.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_6_which_1434,str1579.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1990.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_6_which_1434,str1580.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1990.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_6_which_1434,str1582.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1991.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_6_which_1434,str1584.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1992.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_6_which_1434,str1586.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1993.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1588.value));
    }
    else if (String__opEQ__String(local_6_which_1434,str1589.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1994.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1588.value));
    }
    else if (String__opEQ__String(local_6_which_1434,str1591.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1995.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1588.value));
    }
    else if (String__opEQ__String(local_6_which_1434,str1593.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1996.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1595.value));
    }
    else if (String__opEQ__String(local_6_which_1434,str1596.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1997.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1595.value));
    }
    else if (String__opEQ__String(local_6_which_1434,str1598.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1998.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1595.value));
    }
    else if (String__opEQ__String(local_6_which_1434,str1600.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1999.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str395.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[1]))),str1595.value));
    }
  }
  else if ((((SlagInt32)local_4_which_1432) == 83))
  {
    local_7_which_1435 = local_0_full_sig;
    if (String__opEQ__String(local_7_which_1435,str1602.value))
    {
      return String__opADD__String(local_2_context,str2000.value);
    }
    else if (String__opEQ__String(local_7_which_1435,str1605.value))
    {
      return String__opADD__String(local_2_context,str2001.value);
    }
    else if (String__opEQ__String(local_7_which_1435,str1901.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_2_context),str2002.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_7_which_1435,str1903.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1904.value),local_2_context),str1905.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1906.value));
    }
    else if (String__opEQ__String(local_7_which_1435,str1907.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1904.value),local_2_context),str1905.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1595.value));
    }
    else if (String__opEQ__String(local_7_which_1435,str1908.value))
    {
      return str2003.value;
    }
  }
  else
  {
    local_8_which_1436 = local_0_full_sig;
  }
  local_9_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  if ((String__index_of__String_Int32(local_0_full_sig,str2004.value,0) == 0))
  {
    StringBuilder__print__String(local_9_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_2_context),str38.value),local_1_method_name),str1009.value)));
  }
  else
  {
    StringBuilder__print__String(local_9_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1910.value),String__after_first__String(String__before_first__String(local_0_full_sig,str294.value),str1493.value)),str38.value),local_1_method_name)));
    StringBuilder__print__String(local_9_buffer,String__opADD__String(str61.value,local_2_context));
    local_10__reader1438 = ArrayList_of_String__create_reader(local_3_args);
    while (ArrayReader_of_String__has_another(local_10__reader1438))
    {
      local_11_arg = ArrayReader_of_String__read(local_10__reader1438);
      StringBuilder__print__String(local_9_buffer,String__opADD__String(str395.value,local_11_arg));
    }
    StringBuilder__print__String(local_9_buffer,str62.value);
  }
  return StringBuilder__to_String(local_9_buffer);
}

void JavaWriter__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassJavaWriter*)context)->property_col = 1;
}

SlagObject* JavaWriter__type_name( SXCRef context )
{
  return str1960.value;
}

static SlagObject* CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init__Token_MethodVarInfo( SXCRef context, SXCRef local_0_t_9453, SXCRef local_1_var_info_9452 )
{
  sxc_write_ref( &(((ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement*)context)->property_t), local_0_t_9453 );
  sxc_write_ref( &(((ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement*)context)->property_var_info), local_1_var_info_9452 );
  return context;
}

static SlagObject* CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__create_duplicate( SXCRef context )
{
  return CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init__Token_MethodVarInfo(type_ClassCmdLocalVarDecrement.create(),((ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement*)context)->property_t,((ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement*)context)->property_var_info);
}

SlagObject* CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassMethodVarInfo*)((ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodVarInfo*)((ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement*)context)->property_var_info)->property_index,10))),str62.value));
}

static SlagObject* CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__resolve( SXCRef context )
{
  return context;
}

static void CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_local_var_decrement)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassMethodVarInfo*)((ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement*)context)->property_var_info)->property_index);
}

void CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__type_name( SXCRef context )
{
  return str1185.value;
}

SlagObject* MissingReturnError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassMissingReturnError*)context)->property_message), str2041.value );
  return context;
}

SlagObject* MissingReturnError__init__String( SXCRef context, SXCRef local_0_message_3710 )
{
  sxc_write_ref( &(((ClassMissingReturnError*)context)->property_message), local_0_message_3710 );
  return context;
}

void MissingReturnError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* MissingReturnError__type_name( SXCRef context )
{
  return str2042.value;
}

static void SlagScannerManager__add_define__String_String( SXCRef context, SXCRef local_0_id, SXCRef local_1_value )
{
  SlagScannerManager__set_up_keywords(context);
  GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_String*)((ClassSlagScannerManager*)context)->property_defines)->property_data,local_0_id,local_1_value);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,local_0_id,((ClassTokenManager*)sxc_singletons[2])->property_defined_value);
  if (String__opEQ__String(local_0_id,str398.value))
  {
    SlagScannerManager__add_define__String_String(context,str399.value,str400.value);
  }
}

static void SlagScannerManager__set_up_keywords( SXCRef context )
{
  SXCRef local_0__reader2382;
  SXCRef local_1_key;

  if ((((ClassSlagScannerManager*)context)->property_keywords != NULL))
  {
    return;
  }
  sxc_write_ref( &(((ClassSlagScannerManager*)context)->property_keywords), HashTableBase_of_String_and_Int32_and_Object_and_Int32__init__Int32_Real64(type_ClassHashTable_of_String_and_Int32.create(),256,sxc_int64_as_real64(0x4008000000000000LL)) );
  sxc_write_ref( &(((ClassSlagScannerManager*)context)->property_defines), HashTableBase_of_String_and_String_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_String.create(),128,sxc_int64_as_real64(0x4008000000000000LL)) );
  sxc_write_ref( &(((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup), HashTableBase_of_Int32_and_String_and_Int32_and_Object__init(type_ClassHashTable_of_Int32_and_String.create()) );
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str260.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_defined);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str261.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_deferred);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str262.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_singleton);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str263.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_runtime);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str264.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_class);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str265.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_aspect);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str266.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_enum);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str267.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_augment);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str268.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_compound);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str269.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endclass);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str270.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endaspect);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str271.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endenum);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str272.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endaugment);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str273.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_methods);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str274.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_properties);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str275.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_properties);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str276.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_class_methods);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str277.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_class_properties);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str278.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_class_properties);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str279.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_categories);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str280.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_enumerate);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str281.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_singletons);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str282.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_underlying);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str283.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_overlaying);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str284.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_public);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str285.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_private);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str286.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_readonly);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str287.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_requisite);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str288.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_propagated);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str289.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_abstract);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str290.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_generic);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str291.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_native);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str292.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_method);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str293.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_local);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str237.value,((ClassTokenManager*)sxc_singletons[2])->property_literal_logical);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str238.value,((ClassTokenManager*)sxc_singletons[2])->property_literal_logical);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str217.value,((ClassTokenManager*)sxc_singletons[2])->property_literal_logical);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str228.value,((ClassTokenManager*)sxc_singletons[2])->property_literal_int);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str230.value,((ClassTokenManager*)sxc_singletons[2])->property_literal_int);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str231.value,((ClassTokenManager*)sxc_singletons[2])->property_literal_int);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str232.value,((ClassTokenManager*)sxc_singletons[2])->property_literal_real);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str233.value,((ClassTokenManager*)sxc_singletons[2])->property_literal_real);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str234.value,((ClassTokenManager*)sxc_singletons[2])->property_literal_real);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str36.value,((ClassTokenManager*)sxc_singletons[2])->property_literal_null);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str294.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_scope);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str295.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_if);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str296.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_elseif);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str297.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_else);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str298.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endif);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str299.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_which);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str300.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_whichis);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str301.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_case);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str302.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_casenext);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str303.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_others);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str304.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhich);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str305.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhichis);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str306.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_contingent);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str307.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_satisfied);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str308.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_unsatisfied);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str309.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endcontingent);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str310.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_necessary);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str311.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_sufficient);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str312.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_block);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str313.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endblock);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str314.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_try);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str315.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_catch);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str316.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endtry);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str317.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_throw);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str318.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_loop);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str319.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endloop);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str320.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_while);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str321.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhile);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str322.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_foreach);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str323.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_in);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str324.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_of);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str325.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endforeach);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str326.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapeif);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str327.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapewhich);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str328.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapewhichis);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str329.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapecontingent);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str330.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapeblock);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str331.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapetry);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str332.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapeloop);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str333.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapewhile);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str334.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapeforeach);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str335.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_nextiteration);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str336.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_removecurrent);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str337.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_insert_underlying);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str338.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_duplicate);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str339.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_breakpoint);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str340.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_noaction);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str341.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_return);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str342.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_upto);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str343.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_uptolessthan);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str344.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_downto);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str345.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_downtogreaterthan);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str346.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_step);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str347.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logical_xor);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str348.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logical_or);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str349.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logical_and);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str350.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_instanceof);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str351.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_notinstanceof);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str352.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_as);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str353.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_coerce_as);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str354.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_is);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str355.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_isnot);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str356.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logical_not);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str357.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_with);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str358.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwith);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str359.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_framework);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str360.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endframework);
  GenericHashTable_of_Object_and_Int32__set__Object_Int32(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,str361.value,((ClassTokenManager*)sxc_singletons[2])->property_symbol_useframework);
  local_0__reader2382 = ((AspectReader_of_String*)CoerceReader_of_String__init__Reader_of_Object(type_ClassCoerceReader_of_String.create(),((AspectReader_of_Object*)HashTableKeyReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32(type_ClassHashTableKeyReader_of_Object_and_Int32.create(),ArrayList_of_HashTableBin_of_Object_and_Int32__create_reader(((ClassGenericHashTable_of_Object_and_Int32*)((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data)->property_bins)))));
  while (CallFn____Logical(14,local_0__reader2382))
  {
    local_1_key = CallFn____Object(45,local_0__reader2382);
    GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,GenericHashTable_of_Object_and_Int32__get__Object(((ClassHashTable_of_String_and_Int32*)((ClassSlagScannerManager*)context)->property_keywords)->property_data,local_1_key),local_1_key);
  }
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_template,str364.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_template,str365.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_dimension,str64.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_bracket,str52.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,str54.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_scope,str294.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_increment,str366.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_decrement,str367.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_assign,str53.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_xor_with_assign,str368.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_or_with_assign,str369.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_and_with_assign,str370.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_add_with_assign,str371.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_subtract_with_assign,str372.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_multiply_with_assign,str373.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_divide_with_assign,str374.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_mod_with_assign,str375.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_power_with_assign,str376.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_member_with_assign,str377.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_compare,str378.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_eq,str379.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_ne,str380.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_le,str381.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_ge,str382.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_lt,str383.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_gt,str384.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_xor,str385.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_or,str386.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_ampersand,str387.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_plus,str388.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_minus,str168.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_times,str389.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_divide,str390.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_mod,str391.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_power,str392.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_not,str393.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logicalize,str394.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma,str395.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_colon,str41.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_semicolon,str396.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_member_access,str38.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_brace,str247.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_brace,str397.value);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_String*)((ClassSlagScannerManager*)context)->property_reverse_keyword_lookup)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_comment,str249.value);
}

void SlagScannerManager__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* SlagScannerManager__type_name( SXCRef context )
{
  return str149.value;
}

SlagObject* ArrayList_of_Qualifiers__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count5604;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count5604 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count5604))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassQualifiers*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Qualifiers__init( SXCRef context )
{
  ArrayList_of_Qualifiers__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Qualifiers__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Qualifiers*)context)->property_data), type_ClassArray_of_Qualifiers.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Qualifiers__create_reader( SXCRef context )
{
  return ArrayReader_of_Qualifiers__init__Collection_of_Qualifiers_Array_of_Qualifiers_Int32_Int32(type_ClassArrayReader_of_Qualifiers.create(),context,((ClassArrayList_of_Qualifiers*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_Qualifiers__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_Qualifiers__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_Qualifiers__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_Qualifiers__add__Qualifiers( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_Qualifiers*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_Qualifiers__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Qualifiers__init__Int32(type_ClassArrayList_of_Qualifiers.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Qualifiers*)local_0_dup)->property_data,((ClassArrayList_of_Qualifiers*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_Qualifiers*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_Qualifiers__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_Qualifiers__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Qualifiers__type_name( SXCRef context )
{
  return str493.value;
}

static SlagLogical ArrayReader_of_Char__consume__Char( SXCRef context, SlagChar local_0_look_for )
{
  if (!CallFn____Logical(14,context))
  {
    return false;
  }
  if ((((SlagInt32)CallFn____Char(3,context)) == ((SlagInt32)local_0_look_for)))
  {
    CallFn____Char(29,context);
    return true;
  }
  return false;
}

static SlagObject* ArrayReader_of_Char__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),CallFn____Int32(31,context));
  while (CallFn____Logical(14,context))
  {
    ArrayList_of_Char__add__Char(local_0_result_list,CallFn____Char(29,context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_Char__to_String( SXCRef context )
{
  return ArrayList_of_Char__to_String(ArrayReader_of_Char__to_List(context));
}

static SlagObject* ArrayReader_of_Char__init__Collection_of_Char_Array_of_Char_Int32_Int32( SXCRef context, SXCRef local_0_collection_4786, SXCRef local_1_data_4785, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_Char*)context)->property_collection), local_0_collection_4786 );
  sxc_write_ref( &(((ClassArrayReader_of_Char*)context)->property_data), local_1_data_4785 );
  ((ClassArrayReader_of_Char*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_Char*)context)->property_collection);
  }
  ((ClassArrayReader_of_Char*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_Char*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_Char*)context)->property_collection)))
  {
    ((ClassArrayReader_of_Char*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_Char*)context)->property_collection);
  }
  ((ClassArrayReader_of_Char*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_Char*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_Char__create_duplicate( SXCRef context )
{
  return ArrayReader_of_Char__init__Collection_of_Char_Array_of_Char_Int32_Int32(type_ClassArrayReader_of_Char.create(),((ClassArrayReader_of_Char*)context)->property_collection,((ClassArrayReader_of_Char*)context)->property_data,((ClassArrayReader_of_Char*)context)->property_counter,(((ClassArrayReader_of_Char*)context)->property_last_exclusive-((ClassArrayReader_of_Char*)context)->property_counter));
}

static SlagLogical ArrayReader_of_Char__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_Char*)context)->property_counter < ((ClassArrayReader_of_Char*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_Char*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_Char*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_Char__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_Char*)context)->property_last_exclusive-((ClassArrayReader_of_Char*)context)->property_counter);
}

static SlagChar ArrayReader_of_Char__peek( SXCRef context )
{
  return ((SlagChar*)(((SlagArray*)((ClassArrayReader_of_Char*)context)->property_data)->data))[((ClassArrayReader_of_Char*)context)->property_counter];
}

static SlagChar ArrayReader_of_Char__read( SXCRef context )
{
  SlagChar local_0_result;

  local_0_result = ((SlagChar*)(((SlagArray*)((ClassArrayReader_of_Char*)context)->property_data)->data))[((ClassArrayReader_of_Char*)context)->property_counter];
  ++(((ClassArrayReader_of_Char*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_Char__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_Char__type_name( SXCRef context )
{
  return str156.value;
}

static SlagObject* CmdDynamicCall__create_duplicate( SXCRef context )
{
  return CmdContextCall__init__Token_Cmd_MethodInfo_CmdList(type_ClassCmdDynamicCall.create(),((ClassCmdDynamicCall*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdDynamicCall*)context)->property_context),((ClassCmdDynamicCall*)context)->property_method_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdDynamicCall*)context)->property_args));
}

SlagObject* CmdDynamicCall__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1105.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodGroup*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_group)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdDynamicCall*)context)->property_context)),str395.value),((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_full_signature),str395.value),((ClassString*)ArrayList_of_Cmd__format__String_String(((ClassCmdDynamicCall*)context)->property_args,str1049.value,str64.value))),str62.value));
}

static SlagObject* CmdDynamicCall__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdDynamicCall*)context)->property_context), CallFn____Object(16,((ClassCmdDynamicCall*)context)->property_context) );
  CmdList__resolve(((ClassCmdDynamicCall*)context)->property_args);
  MethodInfo__resolve(((ClassCmdDynamicCall*)context)->property_method_info);
  return context;
}

static SlagObject* CmdDynamicCall__finalize_calls( SXCRef context )
{
  SXCRef local_0_context_type;
  SXCRef local_1_new_m;

  sxc_write_ref( &(((ClassCmdDynamicCall*)context)->property_context), CallFn____Object(42,((ClassCmdDynamicCall*)context)->property_context) );
  CmdList__finalize_calls(((ClassCmdDynamicCall*)context)->property_args);
  local_0_context_type = CallFn____Object(0,((ClassCmdDynamicCall*)context)->property_context);
  {
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodGroup*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_group)->property_methods))->property_count == 0)) goto satisfied_9778;
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodGroup*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_group)->property_methods))->property_count == 1))
    {
      sxc_write_ref( &(((ClassCmdDynamicCall*)context)->property_method_info), ((ClassMethodInfo*)((ClassMethodInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodGroup*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_group)->property_methods))->property_data)->data))[0]))) );
      if (true) goto satisfied_9778;
    }
    if (!((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0)) goto unsatisfied_9778;
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_overrides))->property_count == 0)) goto satisfied_9778;
    if (!((ClassTypeInfo*)local_0_context_type)->property_is_extended)
    {
      if ((((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_type_context != local_0_context_type))
      {
        local_1_new_m = TypeInfo__find_method__String(local_0_context_type,((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_signature);
        if ((local_1_new_m != NULL))
        {
          sxc_write_ref( &(((ClassCmdDynamicCall*)context)->property_method_info), local_1_new_m );
        }
      }
      if (true) goto satisfied_9778;
    }
    if (!false) goto unsatisfied_9778;
    satisfied_9778:;
    {
      return CmdStaticCall__inline_check(CmdContextCall__init__Token_Cmd_MethodInfo_CmdList(type_ClassCmdStaticCall.create(),((ClassCmdDynamicCall*)context)->property_t,((ClassCmdDynamicCall*)context)->property_context,((ClassCmdDynamicCall*)context)->property_method_info,((ClassCmdDynamicCall*)context)->property_args));
    }
    goto end_9778;
    unsatisfied_9778:;
    {
      ((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_called = true;
      return context;
    }
  }
  end_9778:;
}

static void CmdDynamicCall__group_dynamic_methods( SXCRef context )
{
  SXCRef local_0_vsig;
  SXCRef local_1_entry;

  CallFn__(38,((ClassCmdDynamicCall*)context)->property_context);
  CmdList__group_dynamic_methods(((ClassCmdDynamicCall*)context)->property_args);
  if ((((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_group == NULL))
  {
    local_0_vsig = NULL;
    if ((((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_return_type != NULL))
    {
      if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_return_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
      {
        local_0_vsig = String__opADD__String(((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_signature,str981.value);
      }
      else
      {
        local_0_vsig = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_signature),str38.value),((ClassTypeInfo*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_return_type)->property_name));
      }
    }
    else
    {
      local_0_vsig = ((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_signature;
    }
    local_1_entry = ((ClassMapping_of_String_and_MethodGroup*)GenericHashTable_of_Object_and_Object__find__Object(((ClassHashTable_of_String_and_MethodGroup*)((ClassTypeManager*)sxc_singletons[7])->property_method_groups)->property_data,local_0_vsig));
    if ((local_1_entry != NULL))
    {
      MethodGroup__add__MethodInfo(((ClassMapping_of_String_and_MethodGroup*)local_1_entry)->property_value,((ClassCmdDynamicCall*)context)->property_method_info);
    }
    else
    {
      GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_MethodGroup*)((ClassTypeManager*)sxc_singletons[7])->property_method_groups)->property_data,local_0_vsig,MethodGroup__init__String_MethodInfo(type_ClassMethodGroup.create(),local_0_vsig,((ClassCmdDynamicCall*)context)->property_method_info));
    }
    CmdDynamicCall__add_overrides_to_group__MethodInfo_MethodGroup(context,((ClassCmdDynamicCall*)context)->property_method_info,((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_group);
  }
}

static void CmdDynamicCall__add_overrides_to_group__MethodInfo_MethodGroup( SXCRef context, SXCRef local_0_m, SXCRef local_1_group )
{
  SXCRef local_2__reader2599;
  SXCRef local_3_m2;

  local_2__reader2599 = ArrayList_of_MethodInfo__create_reader(((ClassMethodInfo*)local_0_m)->property_overrides);
  while (ArrayReader_of_MethodInfo__has_another(local_2__reader2599))
  {
    local_3_m2 = ArrayReader_of_MethodInfo__read(local_2__reader2599);
    CmdDynamicCall__add_overrides_to_group__MethodInfo_MethodGroup(context,local_3_m2,local_1_group);
  }
  MethodGroup__add__MethodInfo(local_1_group,local_0_m);
}

static void CmdDynamicCall__write_etc( SXCRef context )
{
  SlagInt32 local_0_index;

  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_dynamic_call)->property_ordinal);
  local_0_index = ((ClassMethodGroup*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_group)->property_index;
  if ((local_0_index == -1))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_t,String__opADD__String(str1489.value,((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_full_signature))) );
  }
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_index);
  ETCWriter__writeX__Int32(sxc_singletons[13],local_0_index);
  CallFn__(7,((ClassCmdDynamicCall*)context)->property_context);
  CmdList__write_etc(((ClassCmdDynamicCall*)context)->property_args);
}

static SlagObject* CmdDynamicCall__statement_to_cpp( SXCRef context )
{
  return CmdDynamicCall__to_cpp__Logical(context,false);
}

static SlagObject* CmdDynamicCall__to_cpp( SXCRef context )
{
  return CmdDynamicCall__to_cpp__Logical(context,true);
}

static SlagObject* CmdDynamicCall__to_cpp__Logical( SXCRef context, SlagLogical local_0_cast_return_value )
{
  if ((((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_type_context == ((ClassTypeManager*)sxc_singletons[7])->property_type_generic_array))
  {
    return str1706.value;
  }
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdDynamicCall*)context)->property_args))->property_count != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1707.value),((ClassMethodGroup*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_group)->property_x_name),str61.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodGroup*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_group)->property_index,10))),str395.value),CallFn____Object(15,((ClassCmdDynamicCall*)context)->property_context)),str395.value),CmdList__to_cpp(((ClassCmdDynamicCall*)context)->property_args)),str62.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1707.value),((ClassMethodGroup*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_group)->property_x_name),str61.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodGroup*)((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_group)->property_index,10))),str395.value),CallFn____Object(15,((ClassCmdDynamicCall*)context)->property_context)),str62.value));
  }
}

static SlagObject* CmdDynamicCall__statement_to_cs( SXCRef context )
{
  return CmdDynamicCall__to_cs__Logical(context,false);
}

static SlagObject* CmdDynamicCall__to_cs( SXCRef context )
{
  return CmdDynamicCall__to_cs__Logical(context,true);
}

static SlagObject* CmdDynamicCall__to_cs__Logical( SXCRef context, SlagLogical local_0_cast_return_value )
{
  SXCRef local_1_cast;

  if ((((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_type_context == ((ClassTypeManager*)sxc_singletons[7])->property_type_generic_array))
  {
    return str1953.value;
  }
  local_1_cast = str39.value;
  if ((local_0_cast_return_value && (((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_return_type != MethodInfo__base_return_type(((ClassCmdDynamicCall*)context)->property_method_info))))
  {
    local_1_cast = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),TypeInfo__x_name(((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_return_type)),str62.value));
  }
  if (sxc_instance_of(((ClassCmdDynamicCall*)context)->property_context,&type_ClassCmdThisReference))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_1_cast),MethodInfo__x_name(((ClassCmdDynamicCall*)context)->property_method_info)),str61.value),CmdList__to_cs(((ClassCmdDynamicCall*)context)->property_args)),str62.value));
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_1_cast),CallFn____Object(35,((ClassCmdDynamicCall*)context)->property_context)),str38.value),MethodInfo__x_name(((ClassCmdDynamicCall*)context)->property_method_info)),str61.value),CmdList__to_cs(((ClassCmdDynamicCall*)context)->property_args)),str62.value));
}

static SlagObject* CmdDynamicCall__statement_to_java( SXCRef context )
{
  return CmdDynamicCall__to_java__Logical(context,false);
}

static SlagObject* CmdDynamicCall__to_java( SXCRef context )
{
  return CmdDynamicCall__to_java__Logical(context,true);
}

static SlagObject* CmdDynamicCall__to_java__Logical( SXCRef context, SlagLogical local_0_cast_return_value )
{
  SXCRef local_1_cast;

  if ((((ClassMethodInfo*)((ClassCmdDynamicCall*)context)->property_method_info)->property_type_context == ((ClassTypeManager*)sxc_singletons[7])->property_type_generic_array))
  {
    return str1953.value;
  }
  local_1_cast = str39.value;
  if (sxc_instance_of(((ClassCmdDynamicCall*)context)->property_context,&type_ClassCmdThisReference))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_1_cast),MethodInfo__x_name(((ClassCmdDynamicCall*)context)->property_method_info)),str61.value),CmdList__to_java(((ClassCmdDynamicCall*)context)->property_args)),str62.value));
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_1_cast),CallFn____Object(41,((ClassCmdDynamicCall*)context)->property_context)),str38.value),MethodInfo__x_name(((ClassCmdDynamicCall*)context)->property_method_info)),str61.value),CmdList__to_java(((ClassCmdDynamicCall*)context)->property_args)),str62.value));
}

void CmdDynamicCall__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdDynamicCall__type_name( SXCRef context )
{
  return str1106.value;
}

static SlagObject* CmdReturnValue__init__Token_Cmd_Logical( SXCRef context, SXCRef local_0_t_7717, SXCRef local_1_operand_7716, SlagLogical local_2_handled_foreach_fixup_7715 )
{
  sxc_write_ref( &(((ClassCmdReturnValue*)context)->property_t), local_0_t_7717 );
  sxc_write_ref( &(((ClassCmdReturnValue*)context)->property_operand), local_1_operand_7716 );
  ((ClassCmdReturnValue*)context)->property_handled_foreach_fixup = local_2_handled_foreach_fixup_7715;
  return context;
}

static SlagObject* CmdReturnValue__create_duplicate( SXCRef context )
{
  return CmdReturnValue__init__Token_Cmd_Logical(type_ClassCmdReturnValue.create(),((ClassCmdReturnValue*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdReturnValue*)context)->property_operand),((ClassCmdReturnValue*)context)->property_handled_foreach_fixup);
}

SlagObject* CmdReturnValue__to_String( SXCRef context )
{
  return String__opADD__String(str810.value,Global__to_String__Object(sxc_singletons[21],((ClassCmdReturnValue*)context)->property_operand));
}

static SlagObject* CmdReturnValue__resolve( SXCRef context )
{
  SXCRef local_0_statements;
  SXCRef local_1__reader2506;
  SlagInt32 local_2_id;
  SXCRef local_3_operand_type;
  SlagLogical local_4_fixed;
  SXCRef local_5_return_type;
  SXCRef local_6_common_type;

  if ((((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_return_type == NULL))
  {
    SLAG_THROW( Cmd__error__String(((ClassCmdReturnValue*)context)->property_operand,str1247.value) );
  }
  if (((((ClassArrayList_of_Int32*)((ClassContext*)sxc_singletons[10])->property_foreach_fixups)->property_count != 0) && !((ClassCmdReturnValue*)context)->property_handled_foreach_fixup))
  {
    ((ClassCmdReturnValue*)context)->property_handled_foreach_fixup = true;
    local_0_statements = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassCmdReturnValue*)context)->property_t,(((ClassArrayList_of_Int32*)((ClassContext*)sxc_singletons[10])->property_foreach_fixups)->property_count+1));
    local_1__reader2506 = ArrayList_of_Int32__create_reader(((ClassContext*)sxc_singletons[10])->property_foreach_fixups);
    while (ArrayReader_of_Int32__has_another(local_1__reader2506))
    {
      local_2_id = ArrayReader_of_Int32__read(local_1__reader2506);
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_statements)->property_statements,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdReturnValue*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdReturnValue*)context)->property_t,String__opADD__String(str1231.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_2_id,10))),NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdReturnValue*)context)->property_t,str1237.value,CmdList__init__Cmd_Cmd(type_ClassCmdList.create(),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdReturnValue*)context)->property_t,String__opADD__String(str1234.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_2_id,10))),NULL),CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdSub.create(),((ClassCmdReturnValue*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdReturnValue*)context)->property_t,String__opADD__String(str1235.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_2_id,10))),NULL),CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdReturnValue*)context)->property_t,1))))));
    }
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_statements)->property_statements,context);
    return CmdStatementList__resolve(local_0_statements);
  }
  sxc_write_ref( &(((ClassCmdReturnValue*)context)->property_operand), CallFn____Object(16,((ClassCmdReturnValue*)context)->property_operand) );
  local_3_operand_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdReturnValue*)context)->property_operand);
  if (!TypeInfo__instance_of__TypeInfo(local_3_operand_type,((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_return_type))
  {
    local_4_fixed = false;
    local_5_return_type = ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_return_type;
    {
      if ((((((ClassQualifiers*)((ClassTypeInfo*)local_3_operand_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0) && ((((ClassQualifiers*)((ClassTypeInfo*)local_5_return_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_primitive)->property_flags) != 0)))
      {
        if ((TypeInfo__is_logical(local_3_operand_type) || TypeInfo__is_logical(local_5_return_type)))
        {
          goto end_9590;
        }
        local_6_common_type = SlagAnalyzer__determine_common_data_type__TypeInfo_TypeInfo(sxc_singletons[8],local_3_operand_type,local_5_return_type);
        if ((local_6_common_type != local_5_return_type))
        {
          goto end_9590;
        }
        sxc_write_ref( &(((ClassCmdReturnValue*)context)->property_operand), CallFn____Object(16,SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdReturnValue*)context)->property_operand,local_5_return_type,false)) );
        local_4_fixed = true;
      }
    }
    end_9590:;
    if (!local_4_fixed)
    {
      SLAG_THROW( Cmd__error__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1248.value),Global__to_String__Object(sxc_singletons[21],((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_return_type)),str1080.value),Global__to_String__Object(sxc_singletons[21],local_3_operand_type)),str962.value))) );
    }
  }
  return context;
}

static SlagObject* CmdReturnValue__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  return CallFn__CmdList__Object(1,((ClassCmdReturnValue*)context)->property_operand,local_0_arg_list);
}

static void CmdReturnValue__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_return_value)->property_ordinal);
  CallFn__(7,((ClassCmdReturnValue*)context)->property_operand);
}

static SlagObject* CmdReturnValue__to_cpp( SXCRef context )
{
  return String__opADD__String(str810.value,CallFn____Object(15,((ClassCmdReturnValue*)context)->property_operand));
}

static SlagObject* CmdReturnValue__to_cs( SXCRef context )
{
  return String__opADD__String(str810.value,CallFn____Object(35,((ClassCmdReturnValue*)context)->property_operand));
}

static SlagObject* CmdReturnValue__to_java( SXCRef context )
{
  return String__opADD__String(str810.value,CallFn____Object(41,((ClassCmdReturnValue*)context)->property_operand));
}

void CmdReturnValue__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdReturnValue__type_name( SXCRef context )
{
  return str811.value;
}

void CmdAdd__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdAdd__type_name( SXCRef context )
{
  return str818.value;
}

static void LiteralTerm__require_logical( SXCRef context )
{
  SLAG_THROW( Cmd__error__String(context,str599.value) );
}

static SlagLogical LiteralTerm__as_Logical( SXCRef context )
{
  CallFn__(40,context);
  return false;
}

void LiteralTerm__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* LiteralTerm__type_name( SXCRef context )
{
  return str595.value;
}

static SlagObject* ArrayList_of_SlagError__remove_last( SXCRef context )
{
  return ((ClassSlagError*)ArrayList_of_Object__remove__Int32(context,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-1)));
}

static void ArrayList_of_SlagError__discard_from__Int32( SXCRef context, SlagInt32 local_0_first_index )
{
  ArrayList_of_Object__discard__Int32_Int32(context,local_0_first_index,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-1));
}

SlagObject* ArrayList_of_SlagError__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count8083;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count8083 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count8083))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Exception(sxc_singletons[21],((ClassSlagError*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_SlagError__init( SXCRef context )
{
  ArrayList_of_SlagError__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_SlagError__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_SlagError*)context)->property_data), type_ClassArray_of_SlagError.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_SlagError__create_reader( SXCRef context )
{
  return ArrayReader_of_SlagError__init__Collection_of_SlagError_Array_of_SlagError_Int32_Int32(type_ClassArrayReader_of_SlagError.create(),context,((ClassArrayList_of_SlagError*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_SlagError__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_SlagError__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_SlagError__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_SlagError__add__SlagError( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_SlagError*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_SlagError__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_SlagError__init__Int32(type_ClassArrayList_of_SlagError.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_SlagError*)local_0_dup)->property_data,((ClassArrayList_of_SlagError*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_SlagError*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_SlagError__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_SlagError__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_SlagError__type_name( SXCRef context )
{
  return str913.value;
}

void CmdExp__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdExp__type_name( SXCRef context )
{
  return str828.value;
}

static void Global__init_singleton( SXCRef context )
{
  Global__set_up_stdio(context);
}

static void Global__set_up_stdio( SXCRef context )
{
  if ((((ClassGlobal*)context)->property_stdin == NULL))
  {
    sxc_write_ref( &(((ClassGlobal*)context)->property_stdin), StdInReader__init(type_ClassStdInReader.create()) );
  }
  if ((((ClassGlobal*)context)->property_stdout == NULL))
  {
    sxc_write_ref( &(((ClassGlobal*)context)->property_stdout), StdOutWriter__init(type_ClassStdOutWriter.create()) );
  }
}

static void Global__print__Object( SXCRef context, SXCRef local_0_obj )
{
  if ((local_0_obj == NULL))
  {
    CallFn__String(8,((ClassGlobal*)context)->property_stdout,str36.value);
  }
  else
  {
    CallFn__String(8,((ClassGlobal*)context)->property_stdout,CallFn____Object(47,local_0_obj));
  }
}

static void Global__print__String( SXCRef context, SXCRef local_0_st )
{
  if ((local_0_st == NULL))
  {
    CallFn__String(8,((ClassGlobal*)context)->property_stdout,str36.value);
  }
  else
  {
    CallFn__String(8,((ClassGlobal*)context)->property_stdout,local_0_st);
  }
}

static void Global__println__Object( SXCRef context, SXCRef local_0_obj )
{
  Global__print__Object(context,local_0_obj);
  Global__print__String(context,str46.value);
}

static void Global__println__String( SXCRef context, SXCRef local_0_st )
{
  Global__print__String(context,local_0_st);
  Global__print__String(context,str46.value);
}

static SlagInt64 Global__time_ms( SXCRef context )
{
  return slag_get_time_ms();
}

static SlagObject* Global__to_String__Object( SXCRef context, SXCRef local_0_obj )
{
  if ((local_0_obj == NULL))
  {
    return str36.value;
  }
  return CallFn____Object(47,local_0_obj);
}

static SlagObject* Global__to_String__Exception( SXCRef context, SXCRef local_0_err )
{
  if ((local_0_err == NULL))
  {
    return str36.value;
  }
  return CallFn____Object(47,local_0_err);
}

static SlagObject* Global__to_String__Char( SXCRef context, SlagChar local_0_ch )
{
  return StringManager__create_from__Char(sxc_singletons[18],local_0_ch);
}

static SlagObject* Global__to_String__Real64( SXCRef context, SlagReal64 local_0_n )
{
  return NumberConversions__Real64_to_String__Real64_Int32_Int32_Int32_Char(sxc_singletons[12],local_0_n,10,1,4,((SlagChar)32));
}

static SlagObject* Global__to_String__Logical( SXCRef context, SlagLogical local_0_n )
{
  if (local_0_n)
  {
    return str237.value;
  }
  else
  {
    return str238.value;
  }
}

static SlagObject* Global__to_String__Int64_Int32( SXCRef context, SlagInt64 local_0_n, SlagInt32 local_1_base )
{
  SlagInt32 local_2_which_101;

  local_2_which_101 = local_1_base;
  if ((local_2_which_101 == 2))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],local_0_n,2,64);
  }
  else if ((local_2_which_101 == 4))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],local_0_n,4,32);
  }
  else if ((local_2_which_101 == 8))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],local_0_n,8,22);
  }
  else if ((local_2_which_101 == 16))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],local_0_n,16,16);
  }
  else
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],local_0_n,local_1_base,1);
  }
}

static SlagObject* Global__to_String__Int32_Int32( SXCRef context, SlagInt32 local_0_n, SlagInt32 local_1_base )
{
  SlagInt32 local_2_which_102;

  local_2_which_102 = local_1_base;
  if ((local_2_which_102 == 2))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_n)),2,32);
  }
  else if ((local_2_which_102 == 4))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_n)),4,16);
  }
  else if ((local_2_which_102 == 8))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_n)),8,11);
  }
  else if ((local_2_which_102 == 16))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_n)),16,8);
  }
  else
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_n)),local_1_base,1);
  }
}

static SlagObject* Global__to_String__Char_Int32( SXCRef context, SlagChar local_0_ch, SlagInt32 local_1_base )
{
  SlagInt32 local_2_which_103;

  local_2_which_103 = local_1_base;
  if ((local_2_which_103 == 2))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_ch)),2,16);
  }
  else if ((local_2_which_103 == 4))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_ch)),4,8);
  }
  else if ((local_2_which_103 == 8))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_ch)),8,6);
  }
  else if ((local_2_which_103 == 16))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_ch)),16,4);
  }
  else
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_ch)),local_1_base,1);
  }
}

static SlagObject* Global__to_String__Byte_Int32( SXCRef context, SlagByte local_0_n, SlagInt32 local_1_base )
{
  SlagInt32 local_2_which_104;

  local_2_which_104 = local_1_base;
  if ((local_2_which_104 == 2))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_n)),2,8);
  }
  else if ((local_2_which_104 == 4))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_n)),4,4);
  }
  else if ((local_2_which_104 == 8))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_n)),8,3);
  }
  else if ((local_2_which_104 == 16))
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_n)),16,2);
  }
  else
  {
    return NumberConversions__Int64_to_String__Int64_Int32_Int32(sxc_singletons[12],((SlagInt64)((SlagInt32)local_0_n)),local_1_base,1);
  }
}

static SlagObject* Global__format_string__String_Int32_Int32_Char( SXCRef context, SXCRef local_0_st, SlagInt32 local_1_whole_digits, SlagInt32 local_2_decimal_digits, SlagChar local_3_fill_char )
{
  SXCRef local_4_formatted;
  SlagInt32 local_5__local_107;
  SlagInt32 local_6__last108;

  if ((local_0_st == NULL))
  {
    local_0_st = str36.value;
  }
  if (((((SlagString*)local_0_st)->count) >= local_1_whole_digits))
  {
    return local_0_st;
  }
  local_4_formatted = StringBuilder__init(type_ClassStringBuilder.create());
  local_5__local_107 = 1;
  local_6__last108 = (local_1_whole_digits-(((SlagString*)local_0_st)->count));
  while ((local_5__local_107 <= local_6__last108))
  {
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_4_formatted)->property_data,local_3_fill_char);
    ++local_5__local_107;
  }
  StringBuilder__print__String(local_4_formatted,local_0_st);
  return StringBuilder__to_String(local_4_formatted);
}

static SlagObject* Global__format_string__Real64_Int32_Int32_Char( SXCRef context, SlagReal64 local_0_num, SlagInt32 local_1_whole_digits, SlagInt32 local_2_decimal_digits, SlagChar local_3_fill_char )
{
  return Global__format_string__String_Int32_Int32_Char(context,NumberConversions__Real64_to_String__Real64_Int32_Int32_Int32_Char(sxc_singletons[12],local_0_num,10,local_1_whole_digits,local_2_decimal_digits,local_3_fill_char),local_1_whole_digits,local_2_decimal_digits,local_3_fill_char);
}

static SlagObject* Global__format_string__Int32_Int32_Int32_Char( SXCRef context, SlagInt32 local_0_num, SlagInt32 local_1_whole_digits, SlagInt32 local_2_decimal_digits, SlagChar local_3_fill_char )
{
  return Global__format_string__String_Int32_Int32_Char(context,((ClassString*)Global__to_String__Int32_Int32(context,local_0_num,10)),local_1_whole_digits,local_2_decimal_digits,local_3_fill_char);
}

static SlagObject* Global__format_string__Object_Int32_Int32_Char( SXCRef context, SXCRef local_0_obj, SlagInt32 local_1_whole_digits, SlagInt32 local_2_decimal_digits, SlagChar local_3_fill_char )
{
  if ((local_0_obj == NULL))
  {
    return Global__format_string__String_Int32_Int32_Char(context,str36.value,local_1_whole_digits,local_2_decimal_digits,local_3_fill_char);
  }
  return Global__format_string__String_Int32_Int32_Char(context,CallFn____Object(47,local_0_obj),local_1_whole_digits,local_2_decimal_digits,local_3_fill_char);
}

static SlagLogical Global__is_digit__Char_Int32( SXCRef context, SlagChar local_0_ch, SlagInt32 local_1_base )
{
  SlagInt32 local_2_value;

  local_2_value = Global__to_value__Char(context,local_0_ch);
  return ((local_2_value >= 0) && (local_2_value < local_1_base));
}

static SlagInt32 Global__to_value__Char( SXCRef context, SlagChar local_0_ch )
{
  if (((((SlagInt32)local_0_ch) >= 48) && (((SlagInt32)local_0_ch) <= 57)))
  {
    return (((SlagInt32)local_0_ch)-48);
  }
  else if (((((SlagInt32)local_0_ch) >= 65) && (((SlagInt32)local_0_ch) <= 90)))
  {
    return ((((SlagInt32)local_0_ch)-65)+10);
  }
  else if (((((SlagInt32)local_0_ch) >= 97) && (((SlagInt32)local_0_ch) <= 122)))
  {
    return ((((SlagInt32)local_0_ch)-97)+10);
  }
  return -1;
}

static SlagInt32 Global__hash_code__Int32( SXCRef context, SlagInt32 local_0_n )
{
  return local_0_n;
}

void Global__requisite_kludges( SXCRef context )
{
  SXCRef local_0_list;

  local_0_list = ArrayList_of_Byte__init__Array_of_Byte_Logical(type_ClassArrayList_of_Byte.create(),NULL,false);
}

static SlagObject* Global__abs__BigInt( SXCRef context, SXCRef local_0_n )
{
  if ((((ClassBigInt*)local_0_n)->property_sign_flag == -1))
  {
    return BigInt__opSUB(local_0_n);
  }
  return local_0_n;
}

static SlagLogical Global__is_odd__BigInt( SXCRef context, SXCRef local_0_n )
{
  return ((((SlagInt32)((SlagChar*)(((SlagArray*)((ClassArrayList_of_Char*)((ClassBigInt*)local_0_n)->property_data)->property_data)->data))[0])&1) != 0);
}

void Global__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassGlobal*)context)->property_command_line_args), ArrayList_of_String__init(type_ClassArrayList_of_String.create()) );
}

SlagObject* Global__type_name( SXCRef context )
{
  return str12.value;
}

static SlagObject* ArrayReader_of_Mapping_of_Object_and_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Mapping_of_Object_and_Int32__init__Int32(type_ClassArrayList_of_Mapping_of_Object_and_Int32.create(),ArrayReader_of_Mapping_of_Object_and_Int32__remaining(context));
  while (ArrayReader_of_Mapping_of_Object_and_Int32__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_Mapping_of_Object_and_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_Mapping_of_Object_and_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Mapping_of_Object_and_Int32__to_String(ArrayReader_of_Mapping_of_Object_and_Int32__to_List(context));
}

static SlagObject* ArrayReader_of_Mapping_of_Object_and_Int32__init__Collection_of_Mapping_of_Object_and_Int32_Array_of_Mapping_of_Object_and_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_5015, SXCRef local_1_data_5014, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_collection), local_0_collection_5015 );
  sxc_write_ref( &(((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_data), local_1_data_5014 );
  ((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_collection);
  }
  ((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_collection)))
  {
    ((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_collection);
  }
  ((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_Mapping_of_Object_and_Int32__create_duplicate( SXCRef context )
{
  return ArrayReader_of_Mapping_of_Object_and_Int32__init__Collection_of_Mapping_of_Object_and_Int32_Array_of_Mapping_of_Object_and_Int32_Int32_Int32(type_ClassArrayReader_of_Mapping_of_Object_and_Int32.create(),((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_collection,((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_data,((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_counter,(((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_last_exclusive-((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_counter));
}

static SlagLogical ArrayReader_of_Mapping_of_Object_and_Int32__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_counter < ((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_Mapping_of_Object_and_Int32__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_last_exclusive-((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_counter);
}

static SlagObject* ArrayReader_of_Mapping_of_Object_and_Int32__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassMapping_of_Object_and_Int32**)(((SlagArray*)((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_data)->data))[((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_counter];
  ++(((ClassArrayReader_of_Mapping_of_Object_and_Int32*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_Mapping_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_Mapping_of_Object_and_Int32__type_name( SXCRef context )
{
  return str181.value;
}

static SlagObject* ArrayReverseReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo( SXCRef context, SXCRef local_0_collection_8338, SXCRef local_1_data_8337 )
{
  sxc_write_ref( &(((ClassArrayReverseReader_of_ParameterInfo*)context)->property_collection), local_0_collection_8338 );
  sxc_write_ref( &(((ClassArrayReverseReader_of_ParameterInfo*)context)->property_data), local_1_data_8337 );
  ((ClassArrayReverseReader_of_ParameterInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReverseReader_of_ParameterInfo*)context)->property_collection);
  ((ClassArrayReverseReader_of_ParameterInfo*)context)->property_counter = (CallFn____Int32(19,((ClassArrayReverseReader_of_ParameterInfo*)context)->property_collection)-1);
  return context;
}

static SlagObject* ArrayReverseReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_8343, SXCRef local_1_data_8342, SlagInt32 local_2_counter_8341, SlagInt32 local_3_last_exclusive_8340, SlagInt32 local_4_original_modification_count_8339 )
{
  sxc_write_ref( &(((ClassArrayReverseReader_of_ParameterInfo*)context)->property_collection), local_0_collection_8343 );
  sxc_write_ref( &(((ClassArrayReverseReader_of_ParameterInfo*)context)->property_data), local_1_data_8342 );
  ((ClassArrayReverseReader_of_ParameterInfo*)context)->property_counter = local_2_counter_8341;
  ((ClassArrayReverseReader_of_ParameterInfo*)context)->property_last_exclusive = local_3_last_exclusive_8340;
  ((ClassArrayReverseReader_of_ParameterInfo*)context)->property_original_modification_count = local_4_original_modification_count_8339;
  return context;
}

static SlagObject* ArrayReverseReader_of_ParameterInfo__create_duplicate( SXCRef context )
{
  return ArrayReverseReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo_Int32_Int32_Int32(type_ClassArrayReverseReader_of_ParameterInfo.create(),((ClassArrayReverseReader_of_ParameterInfo*)context)->property_collection,((ClassArrayReverseReader_of_ParameterInfo*)context)->property_data,((ClassArrayReverseReader_of_ParameterInfo*)context)->property_counter,((ClassArrayReverseReader_of_ParameterInfo*)context)->property_last_exclusive,((ClassArrayReverseReader_of_ParameterInfo*)context)->property_original_modification_count);
}

static SlagLogical ArrayReverseReader_of_ParameterInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReverseReader_of_ParameterInfo*)context)->property_counter >= 0))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReverseReader_of_ParameterInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReverseReader_of_ParameterInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReverseReader_of_ParameterInfo__remaining( SXCRef context )
{
  return (((ClassArrayReverseReader_of_ParameterInfo*)context)->property_counter+1);
}

static SlagObject* ArrayReverseReader_of_ParameterInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  if ((((ClassArrayReverseReader_of_ParameterInfo*)context)->property_counter < 0))
  {
    SLAG_THROW( NoNextValueError__init(type_ClassNoNextValueError.create()) );
  }
  local_0_result = ((ClassParameterInfo**)(((SlagArray*)((ClassArrayReverseReader_of_ParameterInfo*)context)->property_data)->data))[((ClassArrayReverseReader_of_ParameterInfo*)context)->property_counter];
  --(((ClassArrayReverseReader_of_ParameterInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReverseReader_of_ParameterInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReverseReader_of_ParameterInfo__type_name( SXCRef context )
{
  return str976.value;
}

static SlagObject* ArrayReader_of_CmdElseIf__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_CmdElseIf__init__Int32(type_ClassArrayList_of_CmdElseIf.create(),ArrayReader_of_CmdElseIf__remaining(context));
  while (ArrayReader_of_CmdElseIf__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_CmdElseIf__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_CmdElseIf__to_String( SXCRef context )
{
  return ArrayList_of_CmdElseIf__to_String(ArrayReader_of_CmdElseIf__to_List(context));
}

static SlagObject* ArrayReader_of_CmdElseIf__init__Collection_of_CmdElseIf_Array_of_CmdElseIf_Int32_Int32( SXCRef context, SXCRef local_0_collection_7407, SXCRef local_1_data_7406, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_CmdElseIf*)context)->property_collection), local_0_collection_7407 );
  sxc_write_ref( &(((ClassArrayReader_of_CmdElseIf*)context)->property_data), local_1_data_7406 );
  ((ClassArrayReader_of_CmdElseIf*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_CmdElseIf*)context)->property_collection);
  }
  ((ClassArrayReader_of_CmdElseIf*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_CmdElseIf*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_CmdElseIf*)context)->property_collection)))
  {
    ((ClassArrayReader_of_CmdElseIf*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_CmdElseIf*)context)->property_collection);
  }
  ((ClassArrayReader_of_CmdElseIf*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_CmdElseIf*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_CmdElseIf__create_duplicate( SXCRef context )
{
  return ArrayReader_of_CmdElseIf__init__Collection_of_CmdElseIf_Array_of_CmdElseIf_Int32_Int32(type_ClassArrayReader_of_CmdElseIf.create(),((ClassArrayReader_of_CmdElseIf*)context)->property_collection,((ClassArrayReader_of_CmdElseIf*)context)->property_data,((ClassArrayReader_of_CmdElseIf*)context)->property_counter,(((ClassArrayReader_of_CmdElseIf*)context)->property_last_exclusive-((ClassArrayReader_of_CmdElseIf*)context)->property_counter));
}

static SlagLogical ArrayReader_of_CmdElseIf__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_CmdElseIf*)context)->property_counter < ((ClassArrayReader_of_CmdElseIf*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_CmdElseIf*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_CmdElseIf*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_CmdElseIf__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_CmdElseIf*)context)->property_last_exclusive-((ClassArrayReader_of_CmdElseIf*)context)->property_counter);
}

static SlagObject* ArrayReader_of_CmdElseIf__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassCmdElseIf**)(((SlagArray*)((ClassArrayReader_of_CmdElseIf*)context)->property_data)->data))[((ClassArrayReader_of_CmdElseIf*)context)->property_counter];
  ++(((ClassArrayReader_of_CmdElseIf*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_CmdElseIf__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_CmdElseIf__type_name( SXCRef context )
{
  return str745.value;
}

static SlagObject* CmdLocalVarDecrement__to_cpp( SXCRef context )
{
  return String__opADD__String(str367.value,CallFn____Object(2,((ClassCmdLocalVarDecrement*)context)->property_var_info));
}

static SlagObject* CmdLocalVarDecrement__to_cs( SXCRef context )
{
  return String__opADD__String(str367.value,CallFn____Object(2,((ClassCmdLocalVarDecrement*)context)->property_var_info));
}

static SlagObject* CmdLocalVarDecrement__to_java( SXCRef context )
{
  return String__opADD__String(str367.value,CallFn____Object(2,((ClassCmdLocalVarDecrement*)context)->property_var_info));
}

void CmdLocalVarDecrement__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLocalVarDecrement__type_name( SXCRef context )
{
  return str1186.value;
}

static SlagObject* CmdWhile__init__Token_Int32_Cmd( SXCRef context, SXCRef local_0_t_7637, SlagInt32 local_1_id_7636, SXCRef local_2_condition_7635 )
{
  sxc_write_ref( &(((ClassCmdWhile*)context)->property_t), local_0_t_7637 );
  ((ClassCmdWhile*)context)->property_id = local_1_id_7636;
  sxc_write_ref( &(((ClassCmdWhile*)context)->property_condition), local_2_condition_7635 );
  return context;
}

static SlagObject* CmdWhile__init__Token_Int32_Cmd_CmdStatementList( SXCRef context, SXCRef local_0_t_7641, SlagInt32 local_1_id_7640, SXCRef local_2_condition_7639, SXCRef local_3_body_7638 )
{
  sxc_write_ref( &(((ClassCmdWhile*)context)->property_t), local_0_t_7641 );
  ((ClassCmdWhile*)context)->property_id = local_1_id_7640;
  sxc_write_ref( &(((ClassCmdWhile*)context)->property_condition), local_2_condition_7639 );
  sxc_write_ref( &(((ClassCmdWhile*)context)->property_body), local_3_body_7638 );
  return context;
}

static SlagObject* CmdWhile__create_duplicate( SXCRef context )
{
  return CmdWhile__init__Token_Int32_Cmd_CmdStatementList(type_ClassCmdWhile.create(),((ClassCmdWhile*)context)->property_t,((ClassCmdWhile*)context)->property_id,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdWhile*)context)->property_condition),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdWhile*)context)->property_body));
}

SlagObject* CmdWhile__to_String( SXCRef context )
{
  SXCRef local_0_buffer;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str777.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdWhile*)context)->property_id,10))),str747.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdWhile*)context)->property_condition)),str62.value)));
  TextWriter__print__Object(local_0_buffer,((ClassCmdWhile*)context)->property_body);
  TextWriter__println__String(local_0_buffer,String__opADD__String(str778.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdWhile*)context)->property_id,10))));
  return StringBuilder__to_String(local_0_buffer);
}

static SlagObject* CmdWhile__resolve( SXCRef context )
{
  CmdStructure__remap_id(context);
  sxc_write_ref( &(((ClassCmdWhile*)context)->property_condition), CallFn____Object(16,((ClassCmdWhile*)context)->property_condition) );
  SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdWhile*)context)->property_condition,NULL);
  CmdStatementList__resolve(((ClassCmdWhile*)context)->property_body);
  return CmdWhile__optimize(context);
}

static SlagObject* CmdWhile__optimize( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdWhile*)context)->property_condition,&type_ClassCmdLiteralLogical))
  {
    if (((ClassCmdLiteralLogical*)((ClassCmdWhile*)context)->property_condition)->property_value)
    {
      return CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdLoop.create(),((ClassCmdWhile*)context)->property_t,((ClassCmdWhile*)context)->property_id,((ClassCmdWhile*)context)->property_body);
    }
    else
    {
      return NULL;
    }
  }
  return context;
}

static SlagObject* CmdWhile__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdWhile*)context)->property_condition), CallFn____Object(42,((ClassCmdWhile*)context)->property_condition) );
  CmdStatementList__finalize_calls(((ClassCmdWhile*)context)->property_body);
  return context;
}

static void CmdWhile__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
  CallFn__(21,((ClassCmdWhile*)context)->property_condition);
  CmdStatementList__finalize_structure_info(((ClassCmdWhile*)context)->property_body);
  if (GenericHashTable_of_Int32_and_Int32__contains__Int32(((ClassHashSet_of_Int32*)((ClassContext*)sxc_singletons[10])->property_referenced_structures)->property_data,((ClassCmdWhile*)context)->property_id))
  {
    ((ClassCmdWhile*)context)->property_referenced = true;
  }
}

static void CmdWhile__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdWhile*)context)->property_condition);
  CmdStatementList__group_dynamic_methods(((ClassCmdWhile*)context)->property_body);
}

static SlagObject* CmdWhile__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdWhile*)context)->property_condition), CallFn__CmdList__Object(1,((ClassCmdWhile*)context)->property_condition,local_0_arg_list) );
  CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdWhile*)context)->property_body)->property_statements))->property_data)->data))[0]))),local_0_arg_list);
  return context;
}

static SlagObject* CmdWhile__to_java( SXCRef context )
{
  JavaWriter__write_end_id__CmdStructure(sxc_singletons[19],context);
  JavaWriter__println__String(sxc_singletons[19],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1658.value),CallFn____Object(41,((ClassCmdWhile*)context)->property_condition)),str62.value)));
  JavaWriter__println__String(sxc_singletons[19],str247.value);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
  CmdStatementList__to_java(((ClassCmdWhile*)context)->property_body);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
  JavaWriter__println__String(sxc_singletons[19],str397.value);
  return NULL;
}

static void CmdWhile__write_etc( SXCRef context )
{
  ETCWriter__write_structure_id__CmdStructure(sxc_singletons[13],context);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_while)->property_ordinal);
  CmdStatementList__write_etc(((ClassCmdWhile*)context)->property_body);
  CallFn__(7,((ClassCmdWhile*)context)->property_condition);
}

static SlagObject* CmdWhile__to_cpp( SXCRef context )
{
  CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1658.value),CallFn____Object(15,((ClassCmdWhile*)context)->property_condition)),str62.value)));
  CPPWriter__println__String(sxc_singletons[11],str247.value);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
  CmdStatementList__to_cpp(((ClassCmdWhile*)context)->property_body);
  CPPWriter__write_continue_id__CmdStructure(sxc_singletons[11],context);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
  CPPWriter__println__String(sxc_singletons[11],str397.value);
  CPPWriter__write_end_id__CmdStructure(sxc_singletons[11],context);
  return NULL;
}

static SlagObject* CmdWhile__to_cs( SXCRef context )
{
  CSWriter__println__String(sxc_singletons[28],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1658.value),CallFn____Object(35,((ClassCmdWhile*)context)->property_condition)),str62.value)));
  CSWriter__println__String(sxc_singletons[28],str247.value);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent+2);
  CmdStatementList__to_cs(((ClassCmdWhile*)context)->property_body);
  CSWriter__write_continue_id__CmdStructure(sxc_singletons[28],context);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent-2);
  CSWriter__println__String(sxc_singletons[28],str397.value);
  CSWriter__write_end_id__CmdStructure(sxc_singletons[28],context);
  return NULL;
}

void CmdWhile__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdWhile__type_name( SXCRef context )
{
  return str779.value;
}

static SlagObject* CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpGE.create(),((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_rhs));
}

static SlagObject* CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,str691.value);
  if ((sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_lhs,&type_ClassCmdLiteralString) && sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_rhs,&type_ClassCmdLiteralString)))
  {
    return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_t,(String__opCMP__String(((ClassCmdLiteralString*)((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_lhs)->property_value,((ClassCmdLiteralString*)((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_rhs)->property_value) != -1));
  }
  if ((local_0_call != NULL))
  {
    SlagAnalyzer__require_int32__Cmd(sxc_singletons[8],local_0_call);
    return CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__optimize(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpNE.create(),((ClassCmd*)local_0_call)->property_t,local_0_call,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_t,-1)));
  }
  SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary(sxc_singletons[8],context);
  return CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__optimize(context);
}

static SlagObject* CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__optimize( SXCRef context )
{
  SXCRef local_0_type;

  if ((sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    local_0_type = CallFn____Object(0,((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_lhs);
    if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_t,(((ClassCmdLiteralInt64*)((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_lhs)->property_value >= ((ClassCmdLiteralInt64*)((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_t,(((ClassCmdLiteralInt32*)((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_lhs)->property_value >= ((ClassCmdLiteralInt32*)((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_t,(((ClassCmdLiteralReal64*)((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_lhs)->property_value >= ((ClassCmdLiteralReal64*)((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_t,(((ClassCmdLiteralReal32*)((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_lhs)->property_value >= ((ClassCmdLiteralReal32*)((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_rhs)->property_value));
    }
  }
  return context;
}

static void CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cmp_ge)->property_ordinal);
  CallFn__(7,((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_lhs);
  CallFn__(7,((ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge*)context)->property_rhs);
}

void CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__type_name( SXCRef context )
{
  return str881.value;
}

static SlagObject* CmdCmpGE__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdCmpGE*)context)->property_lhs)),str1679.value),CallFn____Object(15,((ClassCmdCmpGE*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpGE__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCmpGE*)context)->property_lhs)),str1679.value),CallFn____Object(35,((ClassCmdCmpGE*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpGE__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCmpGE*)context)->property_lhs)),str1679.value),CallFn____Object(41,((ClassCmdCmpGE*)context)->property_rhs)),str62.value));
}

void CmdCmpGE__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpGE__type_name( SXCRef context )
{
  return str882.value;
}

SlagObject* SignalObjectArg__init__Object( SXCRef context, SXCRef local_0_object_3711 )
{
  sxc_write_ref( &(((ClassSignalObjectArg*)context)->property_object), local_0_object_3711 );
  return context;
}

SlagObject* SignalObjectArg__init__Object_Real64_Real64( SXCRef context, SXCRef local_0_object_3714, SlagReal64 local_1_x_3713, SlagReal64 local_2_y_3712 )
{
  sxc_write_ref( &(((ClassSignalObjectArg*)context)->property_object), local_0_object_3714 );
  ((ClassSignalObjectArg*)context)->property_x = local_1_x_3713;
  ((ClassSignalObjectArg*)context)->property_y = local_2_y_3712;
  return context;
}

void SignalObjectArg__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* SignalObjectArg__type_name( SXCRef context )
{
  return str2043.value;
}

static void Runtime__init_singleton( SXCRef context )
{
  if ((((ClassRuntime*)context)->property_types == NULL))
  {
    sxc_write_ref( &(((ClassRuntime*)context)->property_types), HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init(type_ClassHashTable_of_String_and_RuntimeType.create()) );
  }
}

void Runtime__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Runtime__type_name( SXCRef context )
{
  return str593.value;
}

static SlagObject* CmdCast__init__Token_Cmd_TypeInfo( SXCRef context, SXCRef local_0_t_7802, SXCRef local_1_operand_7801, SXCRef local_2_to_type_7800 )
{
  sxc_write_ref( &(((ClassCmdCast*)context)->property_t), local_0_t_7802 );
  sxc_write_ref( &(((ClassCmdCast*)context)->property_operand), local_1_operand_7801 );
  sxc_write_ref( &(((ClassCmdCast*)context)->property_to_type), local_2_to_type_7800 );
  return context;
}

static SlagObject* CmdCast__create_duplicate( SXCRef context )
{
  return CmdCast__init__Token_Cmd_TypeInfo(type_ClassCmdCast.create(),((ClassCmdCast*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCast*)context)->property_operand),((ClassCmdCast*)context)->property_to_type);
}

static SlagObject* CmdCast__type( SXCRef context )
{
  return ((ClassCmdCast*)context)->property_to_type;
}

SlagObject* CmdCast__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str838.value),((ClassTypeInfo*)((ClassCmdCast*)context)->property_to_type)->property_name),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdCast*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCast__resolve( SXCRef context )
{
  SXCRef local_0_operand_type;

  sxc_write_ref( &(((ClassCmdCast*)context)->property_operand), CallFn____Object(16,((ClassCmdCast*)context)->property_operand) );
  local_0_operand_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdCast*)context)->property_operand);
  TypeInfo__resolve(((ClassCmdCast*)context)->property_to_type);
  return SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdCast*)context)->property_operand,((ClassCmdCast*)context)->property_to_type,false);
}

void CmdCast__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCast__type_name( SXCRef context )
{
  return str837.value;
}

static SlagObject* CmdNarrowingCast__create_duplicate( SXCRef context )
{
  return CmdCast__init__Token_Cmd_TypeInfo(type_ClassCmdNarrowingCast.create(),((ClassCmdNarrowingCast*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdNarrowingCast*)context)->property_operand),((ClassCmdNarrowingCast*)context)->property_to_type);
}

static SlagObject* CmdNarrowingCast__resolve( SXCRef context )
{
  return context;
}

static void CmdNarrowingCast__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_narrowing_cast)->property_ordinal);
  CallFn__(7,((ClassCmdNarrowingCast*)context)->property_operand);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassTypeInfo*)((ClassCmdNarrowingCast*)context)->property_to_type)->property_index);
}

static SlagObject* CmdNarrowingCast__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(12,((ClassCmdNarrowingCast*)context)->property_operand);
}

static SlagObject* CmdNarrowingCast__to_cpp( SXCRef context )
{
  return CallFn____Object(15,((ClassCmdNarrowingCast*)context)->property_operand);
}

static SlagObject* CmdNarrowingCast__statement_to_cs( SXCRef context )
{
  return CallFn____Object(33,((ClassCmdNarrowingCast*)context)->property_operand);
}

static SlagObject* CmdNarrowingCast__to_cs( SXCRef context )
{
  if ((((ClassCmdNarrowingCast*)context)->property_to_type == CallFn____Object(0,((ClassCmdNarrowingCast*)context)->property_operand)))
  {
    return CallFn____Object(35,((ClassCmdNarrowingCast*)context)->property_operand);
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassCmdNarrowingCast*)context)->property_to_type)),str62.value),CallFn____Object(35,((ClassCmdNarrowingCast*)context)->property_operand)),str62.value));
}

static SlagObject* CmdNarrowingCast__statement_to_java( SXCRef context )
{
  return CallFn____Object(6,((ClassCmdNarrowingCast*)context)->property_operand);
}

static SlagObject* CmdNarrowingCast__to_java( SXCRef context )
{
  if ((((ClassCmdNarrowingCast*)context)->property_to_type == CallFn____Object(0,((ClassCmdNarrowingCast*)context)->property_operand)))
  {
    return CallFn____Object(41,((ClassCmdNarrowingCast*)context)->property_operand);
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassCmdNarrowingCast*)context)->property_to_type)),str62.value),CallFn____Object(41,((ClassCmdNarrowingCast*)context)->property_operand)),str62.value));
}

void CmdNarrowingCast__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdNarrowingCast__type_name( SXCRef context )
{
  return str1072.value;
}

static SlagObject* CmdPropertyWrite__init__Token_Cmd_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9514, SXCRef local_1_context_9513, SXCRef local_2_var_info_9512, SXCRef local_3_new_value_9511 )
{
  sxc_write_ref( &(((ClassCmdPropertyWrite*)context)->property_t), local_0_t_9514 );
  sxc_write_ref( &(((ClassCmdPropertyWrite*)context)->property_context), local_1_context_9513 );
  sxc_write_ref( &(((ClassCmdPropertyWrite*)context)->property_var_info), local_2_var_info_9512 );
  sxc_write_ref( &(((ClassCmdPropertyWrite*)context)->property_new_value), local_3_new_value_9511 );
  return context;
}

static SlagObject* CmdPropertyWrite__create_duplicate( SXCRef context )
{
  return CmdPropertyWrite__init__Token_Cmd_PropertyInfo_Cmd(type_ClassCmdPropertyWrite.create(),((ClassCmdPropertyWrite*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdPropertyWrite*)context)->property_context),((ClassCmdPropertyWrite*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdPropertyWrite*)context)->property_new_value));
}

SlagObject* CmdPropertyWrite__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1206.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdPropertyWrite*)context)->property_context)),str395.value),((ClassPropertyInfo*)((ClassCmdPropertyWrite*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassPropertyInfo*)((ClassCmdPropertyWrite*)context)->property_var_info)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdPropertyWrite*)context)->property_new_value)),str62.value));
}

static SlagObject* CmdPropertyWrite__resolve( SXCRef context )
{
  SlagAnalyzer__require_type__Cmd_TypeInfo(sxc_singletons[8],((ClassCmdPropertyWrite*)context)->property_new_value,((ClassPropertyInfo*)((ClassCmdPropertyWrite*)context)->property_var_info)->property_type);
  return CmdPropertyWrite__optimize(context);
}

static SlagObject* CmdPropertyWrite__optimize( SXCRef context )
{
  SXCRef local_0_value;
  SXCRef local_1_lhs;
  SXCRef local_2_read_cmd;
  SXCRef local_3_type;
  SXCRef local_4_right;

  if (sxc_instance_of(((ClassCmdPropertyWrite*)context)->property_new_value,&type_ClassCmdBinary))
  {
    local_0_value = ((ClassCmdPropertyWrite*)context)->property_new_value;
    local_1_lhs = ((ClassCmdBinary*)local_0_value)->property_lhs;
    if (sxc_instance_of(local_1_lhs,&type_ClassCmdPropertyRead))
    {
      local_2_read_cmd = local_1_lhs;
      if ((sxc_instance_of(((ClassCmdPropertyRead*)local_2_read_cmd)->property_context,&type_ClassCmdThisReference) && (((ClassCmdPropertyRead*)local_2_read_cmd)->property_var_info == ((ClassCmdPropertyWrite*)context)->property_var_info)))
      {
        local_3_type = CallFn____Object(0,local_0_value);
        if (((local_3_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32) || (local_3_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64)))
        {
          local_4_right = ((ClassCmdBinary*)local_0_value)->property_rhs;
          if (sxc_instance_of(local_0_value,&type_ClassCmdAdd))
          {
            if ((sxc_instance_of(local_4_right,&type_ClassCmdLiteralInt32) && (((ClassCmdLiteralInt32*)local_4_right)->property_value == 1)))
            {
              return CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init__Token_PropertyInfo(type_ClassCmdThisPropertyIncrement.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info);
            }
            else if ((sxc_instance_of(local_4_right,&type_ClassCmdLiteralReal64) && (((ClassCmdLiteralReal64*)local_4_right)->property_value == sxc_int64_as_real64(0x3ff0000000000000LL))))
            {
              return CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init__Token_PropertyInfo(type_ClassCmdThisPropertyIncrement.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info);
            }
            else if ((sxc_instance_of(local_4_right,&type_ClassCmdLiteralInt32) && (((ClassCmdLiteralInt32*)local_4_right)->property_value == -1)))
            {
              return CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init__Token_PropertyInfo(type_ClassCmdThisPropertyDecrement.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info);
            }
            else if ((sxc_instance_of(local_4_right,&type_ClassCmdLiteralReal64) && (((ClassCmdLiteralReal64*)local_4_right)->property_value == ((SlagReal64)-1))))
            {
              return CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init__Token_PropertyInfo(type_ClassCmdThisPropertyDecrement.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info);
            }
            else
            {
              return CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__init__Token_PropertyInfo_Cmd(type_ClassCmdThisPropertyAddAndAssign.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info,local_4_right);
            }
          }
          else if (sxc_instance_of(local_0_value,&type_ClassCmdSub))
          {
            if ((sxc_instance_of(local_4_right,&type_ClassCmdLiteralInt32) && (((ClassCmdLiteralInt32*)local_4_right)->property_value == 1)))
            {
              return CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init__Token_PropertyInfo(type_ClassCmdThisPropertyDecrement.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info);
            }
            else if ((sxc_instance_of(local_4_right,&type_ClassCmdLiteralReal64) && (((ClassCmdLiteralReal64*)local_4_right)->property_value == sxc_int64_as_real64(0x3ff0000000000000LL))))
            {
              return CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init__Token_PropertyInfo(type_ClassCmdThisPropertyDecrement.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info);
            }
            else if ((sxc_instance_of(local_4_right,&type_ClassCmdLiteralInt32) && (((ClassCmdLiteralInt32*)local_4_right)->property_value == -1)))
            {
              return CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init__Token_PropertyInfo(type_ClassCmdThisPropertyIncrement.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info);
            }
            else if ((sxc_instance_of(local_4_right,&type_ClassCmdLiteralReal64) && (((ClassCmdLiteralReal64*)local_4_right)->property_value == ((SlagReal64)-1))))
            {
              return CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init__Token_PropertyInfo(type_ClassCmdThisPropertyIncrement.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info);
            }
            else
            {
              return CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__init__Token_PropertyInfo_Cmd(type_ClassCmdThisPropertySubAndAssign.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info,local_4_right);
            }
          }
          else
          {
            if (sxc_instance_of(local_0_value,&type_ClassCmdMul))
            {
              return CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__init__Token_PropertyInfo_Cmd(type_ClassCmdThisPropertyMulAndAssign.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info,local_4_right);
            }
            if (sxc_instance_of(local_0_value,&type_ClassCmdDiv))
            {
              return CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__init__Token_PropertyInfo_Cmd(type_ClassCmdThisPropertyDivAndAssign.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info,local_4_right);
            }
            if ((sxc_instance_of(local_0_value,&type_ClassCmdMod) && (local_3_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32)))
            {
              return CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__init__Token_PropertyInfo_Cmd(type_ClassCmdThisPropertyModAndAssign.create(),((ClassCmdPropertyWrite*)context)->property_t,((ClassCmdPropertyWrite*)context)->property_var_info,local_4_right);
            }
          }
        }
      }
    }
  }
  return context;
}

static SlagObject* CmdPropertyWrite__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdPropertyWrite*)context)->property_context), CallFn____Object(42,((ClassCmdPropertyWrite*)context)->property_context) );
  sxc_write_ref( &(((ClassCmdPropertyWrite*)context)->property_new_value), CallFn____Object(42,((ClassCmdPropertyWrite*)context)->property_new_value) );
  return context;
}

static void CmdPropertyWrite__finalize_structure_info( SXCRef context )
{
  CallFn__(21,((ClassCmdPropertyWrite*)context)->property_context);
  CallFn__(21,((ClassCmdPropertyWrite*)context)->property_new_value);
}

static void CmdPropertyWrite__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdPropertyWrite*)context)->property_context);
  CallFn__(38,((ClassCmdPropertyWrite*)context)->property_new_value);
}

static SlagObject* CmdPropertyWrite__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdPropertyWrite*)context)->property_context), CallFn__CmdList__Object(1,((ClassCmdPropertyWrite*)context)->property_context,local_0_arg_list) );
  sxc_write_ref( &(((ClassCmdPropertyWrite*)context)->property_new_value), CallFn__CmdList__Object(1,((ClassCmdPropertyWrite*)context)->property_new_value,local_0_arg_list) );
  return context;
}

static void CmdPropertyWrite__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_property_write)->property_ordinal);
  CallFn__(7,((ClassCmdPropertyWrite*)context)->property_context);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassPropertyInfo*)((ClassCmdPropertyWrite*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdPropertyWrite*)context)->property_new_value);
}

static SlagObject* CmdPropertyWrite__to_cpp( SXCRef context )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)((ClassCmdPropertyWrite*)context)->property_var_info)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1727.value),TypeInfo__x_name(CallFn____Object(0,((ClassCmdPropertyWrite*)context)->property_context))),str1691.value),CallFn____Object(15,((ClassCmdPropertyWrite*)context)->property_context)),str1715.value),PropertyInfo__x_name(((ClassCmdPropertyWrite*)context)->property_var_info)),str1728.value),CallFn____Object(15,((ClassCmdPropertyWrite*)context)->property_new_value)),str635.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(CallFn____Object(0,((ClassCmdPropertyWrite*)context)->property_context))),str1691.value),CallFn____Object(15,((ClassCmdPropertyWrite*)context)->property_context)),str1715.value),PropertyInfo__x_name(((ClassCmdPropertyWrite*)context)->property_var_info)),str1653.value),CallFn____Object(15,((ClassCmdPropertyWrite*)context)->property_new_value)));
  }
}

static SlagObject* CmdPropertyWrite__to_cs( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdPropertyWrite*)context)->property_context,&type_ClassCmdThisReference))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdPropertyWrite*)context)->property_var_info)),str1653.value),CallFn____Object(35,((ClassCmdPropertyWrite*)context)->property_new_value)));
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(35,((ClassCmdPropertyWrite*)context)->property_context)),str38.value),PropertyInfo__x_name(((ClassCmdPropertyWrite*)context)->property_var_info)),str1653.value),CallFn____Object(35,((ClassCmdPropertyWrite*)context)->property_new_value)));
}

static SlagObject* CmdPropertyWrite__to_java( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdPropertyWrite*)context)->property_context,&type_ClassCmdThisReference))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdPropertyWrite*)context)->property_var_info)),str1653.value),CallFn____Object(41,((ClassCmdPropertyWrite*)context)->property_new_value)));
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(41,((ClassCmdPropertyWrite*)context)->property_context)),str38.value),PropertyInfo__x_name(((ClassCmdPropertyWrite*)context)->property_var_info)),str1653.value),CallFn____Object(41,((ClassCmdPropertyWrite*)context)->property_new_value)));
}

void CmdPropertyWrite__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdPropertyWrite__type_name( SXCRef context )
{
  return str1221.value;
}

static SlagObject* CmdContingentControl__init__Token_Cmd_Int32( SXCRef context, SXCRef local_0_t_7705, SXCRef local_1_operand_7704, SlagInt32 local_2_id_7703 )
{
  sxc_write_ref( &(((ClassCmdContingentControl*)context)->property_t), local_0_t_7705 );
  sxc_write_ref( &(((ClassCmdContingentControl*)context)->property_operand), local_1_operand_7704 );
  ((ClassCmdContingentControl*)context)->property_id = local_2_id_7703;
  return context;
}

SlagObject* CmdContingentControl__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str294.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdContingentControl*)context)->property_id,10))),str747.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdContingentControl*)context)->property_operand)),str62.value));
}

static SlagObject* CmdContingentControl__resolve( SXCRef context )
{
  ((ClassCmdContingentControl*)context)->property_id = GenericHashTable_of_Int32_and_Int32__get__Int32(((ClassHashTable_of_Int32_and_Int32*)((ClassContext*)sxc_singletons[10])->property_id_remap_table)->property_data,((ClassCmdContingentControl*)context)->property_id);
  sxc_write_ref( &(((ClassCmdContingentControl*)context)->property_operand), CallFn____Object(16,((ClassCmdContingentControl*)context)->property_operand) );
  SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdContingentControl*)context)->property_operand,NULL);
  return context;
}

static SlagObject* CmdContingentControl__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdContingentControl*)context)->property_operand), CallFn____Object(42,((ClassCmdContingentControl*)context)->property_operand) );
  return context;
}

static void CmdContingentControl__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
  CallFn__(21,((ClassCmdContingentControl*)context)->property_operand);
  HashSet_of_Int32__add__Int32(((ClassContext*)sxc_singletons[10])->property_referenced_structures,((ClassCmdContingentControl*)context)->property_id);
}

static SlagObject* CmdContingentControl__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdContingentControl*)context)->property_operand), CallFn__CmdList__Object(1,((ClassCmdContingentControl*)context)->property_operand,local_0_arg_list) );
  return context;
}

void CmdContingentControl__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdContingentControl__type_name( SXCRef context )
{
  return str805.value;
}

static SlagObject* CmdSufficient__create_duplicate( SXCRef context )
{
  return CmdContingentControl__init__Token_Cmd_Int32(type_ClassCmdSufficient.create(),((ClassCmdSufficient*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdSufficient*)context)->property_operand),((ClassCmdSufficient*)context)->property_id);
}

static void CmdSufficient__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_sufficient)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCmdSufficient*)context)->property_id);
  CallFn__(7,((ClassCmdSufficient*)context)->property_operand);
}

static SlagObject* CmdSufficient__to_cpp( SXCRef context )
{
  CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1636.value),CallFn____Object(15,((ClassCmdSufficient*)context)->property_operand)),str1664.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdSufficient*)context)->property_id,10))),str396.value)));
  return NULL;
}

static SlagObject* CmdSufficient__to_cs( SXCRef context )
{
  CSWriter__println__String(sxc_singletons[28],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1636.value),CallFn____Object(35,((ClassCmdSufficient*)context)->property_operand)),str1664.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdSufficient*)context)->property_id,10))),str396.value)));
  return NULL;
}

static SlagObject* CmdSufficient__to_java( SXCRef context )
{
  JavaWriter__println__String(sxc_singletons[19],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1636.value),CallFn____Object(41,((ClassCmdSufficient*)context)->property_operand)),str2010.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdSufficient*)context)->property_id,10))),str396.value)));
  return NULL;
}

void CmdSufficient__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdSufficient__type_name( SXCRef context )
{
  return str812.value;
}

static SlagObject* CmdBlock__create_duplicate( SXCRef context )
{
  return CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdBlock.create(),((ClassCmdBlock*)context)->property_t,((ClassCmdBlock*)context)->property_id,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBlock*)context)->property_body));
}

static SlagObject* CmdBlock__resolve( SXCRef context )
{
  CmdStructure__remap_id(context);
  CmdStatementList__resolve(((ClassCmdBlock*)context)->property_body);
  return context;
}

static void CmdBlock__write_etc( SXCRef context )
{
  ETCWriter__write_structure_id__CmdStructure(sxc_singletons[13],context);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_block)->property_ordinal);
  CmdStatementList__write_etc(((ClassCmdBlock*)context)->property_body);
}

static SlagObject* CmdBlock__to_cpp( SXCRef context )
{
  CPPWriter__println__String(sxc_singletons[11],str247.value);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
  CmdStatementList__to_cpp(((ClassCmdBlock*)context)->property_body);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
  CPPWriter__println__String(sxc_singletons[11],str397.value);
  CPPWriter__write_end_id__CmdStructure(sxc_singletons[11],context);
  return NULL;
}

static SlagObject* CmdBlock__to_cs( SXCRef context )
{
  CSWriter__println__String(sxc_singletons[28],str247.value);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent+2);
  CmdStatementList__to_cs(((ClassCmdBlock*)context)->property_body);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent-2);
  CSWriter__println__String(sxc_singletons[28],str397.value);
  CSWriter__write_end_id__CmdStructure(sxc_singletons[28],context);
  return NULL;
}

static SlagObject* CmdBlock__to_java( SXCRef context )
{
  JavaWriter__write_end_id__CmdStructure(sxc_singletons[19],context);
  JavaWriter__println__String(sxc_singletons[19],str247.value);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
  CmdStatementList__to_java(((ClassCmdBlock*)context)->property_body);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
  JavaWriter__println__String(sxc_singletons[19],str397.value);
  return NULL;
}

void CmdBlock__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdBlock__type_name( SXCRef context )
{
  return str718.value;
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__init__Token_PropertyInfo_Cmd( SXCRef context, SXCRef local_0_t_9539, SXCRef local_1_var_info_9538, SXCRef local_2_operand_9537 )
{
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign*)context)->property_t), local_0_t_9539 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign*)context)->property_var_info), local_1_var_info_9538 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign*)context)->property_operand), local_2_operand_9537 );
  return context;
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__create_duplicate( SXCRef context )
{
  return CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__init__Token_PropertyInfo_Cmd(type_ClassCmdThisPropertyDivAndAssign.create(),((ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign*)context)->property_t,((ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign*)context)->property_operand));
}

SlagObject* CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign*)context)->property_var_info)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__resolve( SXCRef context )
{
  return context;
}

static void CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_this_property_div_and_assign)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassPropertyInfo*)((ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign*)context)->property_operand);
}

void CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__type_name( SXCRef context )
{
  return str1217.value;
}

static SlagObject* CmdThisPropertyDivAndAssign__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassPropertyInfo*)((ClassCmdThisPropertyDivAndAssign*)context)->property_var_info)->property_type_context)),str1730.value),PropertyInfo__x_name(((ClassCmdThisPropertyDivAndAssign*)context)->property_var_info)),str1732.value),CallFn____Object(15,((ClassCmdThisPropertyDivAndAssign*)context)->property_operand)));
}

static SlagObject* CmdThisPropertyDivAndAssign__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdThisPropertyDivAndAssign*)context)->property_var_info)),str1653.value),PropertyInfo__x_name(((ClassCmdThisPropertyDivAndAssign*)context)->property_var_info)),str390.value),CallFn____Object(35,((ClassCmdThisPropertyDivAndAssign*)context)->property_operand)));
}

static SlagObject* CmdThisPropertyDivAndAssign__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdThisPropertyDivAndAssign*)context)->property_var_info)),str1653.value),PropertyInfo__x_name(((ClassCmdThisPropertyDivAndAssign*)context)->property_var_info)),str390.value),CallFn____Object(41,((ClassCmdThisPropertyDivAndAssign*)context)->property_operand)));
}

void CmdThisPropertyDivAndAssign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdThisPropertyDivAndAssign__type_name( SXCRef context )
{
  return str1218.value;
}

static SlagObject* ArrayReader_of_String__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_String__init__Int32(type_ClassArrayList_of_String.create(),ArrayReader_of_String__remaining(context));
  while (ArrayReader_of_String__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_String__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_String__to_String( SXCRef context )
{
  return ((ClassString*)ArrayList_of_String__format__String_String(ArrayReader_of_String__to_List(context),str63.value,str64.value));
}

static SlagObject* ArrayReader_of_String__init__Collection_of_String_Array_of_String_Int32_Int32( SXCRef context, SXCRef local_0_collection_4101, SXCRef local_1_data_4100, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_String*)context)->property_collection), local_0_collection_4101 );
  sxc_write_ref( &(((ClassArrayReader_of_String*)context)->property_data), local_1_data_4100 );
  ((ClassArrayReader_of_String*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_String*)context)->property_collection);
  }
  ((ClassArrayReader_of_String*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_String*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_String*)context)->property_collection)))
  {
    ((ClassArrayReader_of_String*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_String*)context)->property_collection);
  }
  ((ClassArrayReader_of_String*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_String*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_String__create_duplicate( SXCRef context )
{
  return ArrayReader_of_String__init__Collection_of_String_Array_of_String_Int32_Int32(type_ClassArrayReader_of_String.create(),((ClassArrayReader_of_String*)context)->property_collection,((ClassArrayReader_of_String*)context)->property_data,((ClassArrayReader_of_String*)context)->property_counter,(((ClassArrayReader_of_String*)context)->property_last_exclusive-((ClassArrayReader_of_String*)context)->property_counter));
}

static SlagLogical ArrayReader_of_String__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_String*)context)->property_counter < ((ClassArrayReader_of_String*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_String*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_String*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_String__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_String*)context)->property_last_exclusive-((ClassArrayReader_of_String*)context)->property_counter);
}

static SlagObject* ArrayReader_of_String__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassString**)(((SlagArray*)((ClassArrayReader_of_String*)context)->property_data)->data))[((ClassArrayReader_of_String*)context)->property_counter];
  ++(((ClassArrayReader_of_String*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_String__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_String__type_name( SXCRef context )
{
  return str67.value;
}

void DegreesManager__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* DegreesManager__type_name( SXCRef context )
{
  return str2.value;
}

void BigIntManager__init_object( SXCRef context )
{
  SlagInt32 local_0_n;
  SlagInt32 local_1__last538;

  Object__init_object(context);
  sxc_write_ref( &(((ClassBigIntManager*)context)->property_values), ArrayList_of_BigInt__init__Int32(type_ClassArrayList_of_BigInt.create(),16) );
  sxc_write_ref( &(((ClassBigIntManager*)context)->property_zero), BigInt__init__Int32(type_ClassBigInt.create(),0) );
  sxc_write_ref( &(((ClassBigIntManager*)context)->property_one), BigInt__init__Int32(type_ClassBigInt.create(),1) );
  sxc_write_ref( &(((ClassBigIntManager*)context)->property_ten), BigInt__init__Int32(type_ClassBigInt.create(),10) );
  sxc_write_ref( &(((ClassBigIntManager*)context)->property_ten_e144), BigInt__init__BigInt(type_ClassBigInt.create(),((ClassBigInt*)BigInt__opEXP__BigInt(BigInt__init__Int32(type_ClassBigInt.create(),10),BigIntManager__create_from__Int64(sxc_singletons[24],144LL)))) );
  sxc_write_ref( &(((ClassBigIntManager*)context)->property_ten_e72), BigInt__init__BigInt(type_ClassBigInt.create(),((ClassBigInt*)BigInt__opEXP__BigInt(BigInt__init__Int32(type_ClassBigInt.create(),10),BigIntManager__create_from__Int64(sxc_singletons[24],72LL)))) );
  sxc_write_ref( &(((ClassBigIntManager*)context)->property_ten_e36), BigInt__init__BigInt(type_ClassBigInt.create(),((ClassBigInt*)BigInt__opEXP__BigInt(BigInt__init__Int32(type_ClassBigInt.create(),10),BigIntManager__create_from__Int64(sxc_singletons[24],36LL)))) );
  sxc_write_ref( &(((ClassBigIntManager*)context)->property_ten_e18), BigInt__init__Int64(type_ClassBigInt.create(),1000000000000000000LL) );
  local_0_n = 0;
  local_1__last538 = 15;
  while ((local_0_n <= local_1__last538))
  {
    ArrayList_of_Object__add__Object(((ClassBigIntManager*)context)->property_values,BigInt__init__Int32(type_ClassBigInt.create(),local_0_n));
    ++local_0_n;
  }
  sxc_write_ref( &(((ClassBigIntManager*)context)->property_i64_limit), BigInt__init__String_Int32(type_ClassBigInt.create(),str164.value,10) );
}

static SlagObject* BigIntManager__create_from__Int64( SXCRef context, SlagInt64 local_0_n )
{
  if (((local_0_n >= 0LL) && (local_0_n < 16LL)))
  {
    return ((ClassBigInt*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassBigIntManager*)context)->property_values))->property_data)->data))[((SlagInt32)local_0_n)]));
  }
  return BigInt__init__Int64(type_ClassBigInt.create(),local_0_n);
}

SlagObject* BigIntManager__type_name( SXCRef context )
{
  return str167.value;
}

static SlagObject* CmdArrayGet__init__Token_Cmd_Cmd( SXCRef context, SXCRef local_0_t_9214, SXCRef local_1_context_9213, SXCRef local_2_index_expr_9212 )
{
  sxc_write_ref( &(((ClassCmdArrayGet*)context)->property_t), local_0_t_9214 );
  sxc_write_ref( &(((ClassCmdArrayGet*)context)->property_context), local_1_context_9213 );
  sxc_write_ref( &(((ClassCmdArrayGet*)context)->property_index_expr), local_2_index_expr_9212 );
  return context;
}

static SlagObject* CmdArrayGet__create_duplicate( SXCRef context )
{
  return CmdArrayGet__init__Token_Cmd_Cmd(type_ClassCmdArrayGet.create(),((ClassCmdArrayGet*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdArrayGet*)context)->property_context),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdArrayGet*)context)->property_index_expr));
}

static SlagObject* CmdArrayGet__type( SXCRef context )
{
  return ((ClassTypeInfo*)CallFn____Object(0,((ClassCmdArrayGet*)context)->property_context))->property_element_type;
}

SlagObject* CmdArrayGet__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1108.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdArrayGet*)context)->property_context)),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdArrayGet*)context)->property_index_expr)),str62.value));
}

static SlagObject* CmdArrayGet__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdArrayGet*)context)->property_context), CallFn____Object(16,((ClassCmdArrayGet*)context)->property_context) );
  TypeInfo__resolve(SlagAnalyzer__require_type__Cmd_TypeInfo(sxc_singletons[8],((ClassCmdArrayGet*)context)->property_context,((ClassTypeManager*)sxc_singletons[7])->property_type_generic_array));
  sxc_write_ref( &(((ClassCmdArrayGet*)context)->property_index_expr), CallFn____Object(16,((ClassCmdArrayGet*)context)->property_index_expr) );
  SlagAnalyzer__require_int32__Cmd(sxc_singletons[8],((ClassCmdArrayGet*)context)->property_index_expr);
  return context;
}

static SlagObject* CmdArrayGet__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdArrayGet*)context)->property_context), CallFn____Object(42,((ClassCmdArrayGet*)context)->property_context) );
  sxc_write_ref( &(((ClassCmdArrayGet*)context)->property_index_expr), CallFn____Object(42,((ClassCmdArrayGet*)context)->property_index_expr) );
  return context;
}

static void CmdArrayGet__finalize_structure_info( SXCRef context )
{
  CallFn__(21,((ClassCmdArrayGet*)context)->property_context);
  CallFn__(21,((ClassCmdArrayGet*)context)->property_index_expr);
}

static void CmdArrayGet__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdArrayGet*)context)->property_context);
  CallFn__(38,((ClassCmdArrayGet*)context)->property_index_expr);
}

static SlagObject* CmdArrayGet__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdArrayGet*)context)->property_context), CallFn__CmdList__Object(1,((ClassCmdArrayGet*)context)->property_context,local_0_arg_list) );
  sxc_write_ref( &(((ClassCmdArrayGet*)context)->property_index_expr), CallFn__CmdList__Object(1,((ClassCmdArrayGet*)context)->property_index_expr,local_0_arg_list) );
  return context;
}

static void CmdArrayGet__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_array_get)->property_ordinal);
  CallFn__(7,((ClassCmdArrayGet*)context)->property_context);
  CallFn__(7,((ClassCmdArrayGet*)context)->property_index_expr);
}

static SlagObject* CmdArrayGet__to_cpp( SXCRef context )
{
  SXCRef local_0_element_type;

  local_0_element_type = ((ClassTypeInfo*)CallFn____Object(0,((ClassCmdArrayGet*)context)->property_context))->property_element_type;
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_element_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(local_0_element_type)),str1708.value),CallFn____Object(15,((ClassCmdArrayGet*)context)->property_context)),str1709.value),CallFn____Object(15,((ClassCmdArrayGet*)context)->property_index_expr)),str54.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(local_0_element_type)),str1710.value),CallFn____Object(15,((ClassCmdArrayGet*)context)->property_context)),str1709.value),CallFn____Object(15,((ClassCmdArrayGet*)context)->property_index_expr)),str54.value));
  }
}

static SlagObject* CmdArrayGet__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(35,((ClassCmdArrayGet*)context)->property_context)),str52.value),CallFn____Object(35,((ClassCmdArrayGet*)context)->property_index_expr)),str54.value));
}

static SlagObject* CmdArrayGet__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(41,((ClassCmdArrayGet*)context)->property_context)),str52.value),CallFn____Object(41,((ClassCmdArrayGet*)context)->property_index_expr)),str54.value));
}

void CmdArrayGet__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdArrayGet__type_name( SXCRef context )
{
  return str1110.value;
}

SlagObject* TypeCastError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassTypeCastError*)context)->property_message), str2046.value );
  return context;
}

SlagObject* TypeCastError__init__String( SXCRef context, SXCRef local_0_message_3788 )
{
  sxc_write_ref( &(((ClassTypeCastError*)context)->property_message), local_0_message_3788 );
  return context;
}

void TypeCastError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* TypeCastError__type_name( SXCRef context )
{
  return str2047.value;
}

static SlagInt32 RangeIteratorGE_of_Int32__available( SXCRef context )
{
  if (RangeIteratorGE_of_Int32__has_another(context))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* RangeIteratorGE_of_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),RangeIteratorGE_of_Int32__available(context));
  while (RangeIteratorGE_of_Int32__has_another(context))
  {
    ArrayList_of_Int32__add__Int32(local_0_result_list,RangeIteratorGE_of_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* RangeIteratorGE_of_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Int32__to_String(RangeIteratorGE_of_Int32__to_List(context));
}

static SlagObject* RangeIteratorGE_of_Int32__init__Int32_Int32_Int32( SXCRef context, SlagInt32 local_0_first_value, SlagInt32 local_1_last_value_4852, SlagInt32 local_2_step_size_4851 )
{
  ((ClassRangeIteratorGE_of_Int32*)context)->property_last_value = local_1_last_value_4852;
  ((ClassRangeIteratorGE_of_Int32*)context)->property_step_size = local_2_step_size_4851;
  ((ClassRangeIteratorGE_of_Int32*)context)->property_next_value = local_0_first_value;
  return context;
}

static SlagObject* RangeIteratorGE_of_Int32__create_duplicate( SXCRef context )
{
  return RangeIteratorGE_of_Int32__init__Int32_Int32_Int32(type_ClassRangeIteratorGE_of_Int32.create(),((ClassRangeIteratorGE_of_Int32*)context)->property_next_value,((ClassRangeIteratorGE_of_Int32*)context)->property_last_value,((ClassRangeIteratorGE_of_Int32*)context)->property_step_size);
}

static SlagLogical RangeIteratorGE_of_Int32__has_another( SXCRef context )
{
  return (((ClassRangeIteratorGE_of_Int32*)context)->property_next_value >= ((ClassRangeIteratorGE_of_Int32*)context)->property_last_value);
}

static SlagInt32 RangeIteratorGE_of_Int32__read( SXCRef context )
{
  SlagInt32 local_0_result;

  if ((((ClassRangeIteratorGE_of_Int32*)context)->property_next_value < ((ClassRangeIteratorGE_of_Int32*)context)->property_last_value))
  {
    SLAG_THROW( NoNextValueError__init(type_ClassNoNextValueError.create()) );
  }
  local_0_result = ((ClassRangeIteratorGE_of_Int32*)context)->property_next_value;
  ((ClassRangeIteratorGE_of_Int32*)context)->property_next_value += ((ClassRangeIteratorGE_of_Int32*)context)->property_step_size;
  return local_0_result;
}

void RangeIteratorGE_of_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* RangeIteratorGE_of_Int32__type_name( SXCRef context )
{
  return str162.value;
}

static SlagObject* CmdArraySet__init__Token_Cmd_Cmd_Cmd( SXCRef context, SXCRef local_0_t_9220, SXCRef local_1_context_9219, SXCRef local_2_index_expr_9218, SXCRef local_3_value_expr_9217 )
{
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_t), local_0_t_9220 );
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_context), local_1_context_9219 );
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_index_expr), local_2_index_expr_9218 );
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_value_expr), local_3_value_expr_9217 );
  return context;
}

static SlagObject* CmdArraySet__create_duplicate( SXCRef context )
{
  return CmdArraySet__init__Token_Cmd_Cmd_Cmd(type_ClassCmdArraySet.create(),((ClassCmdArraySet*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdArraySet*)context)->property_context),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdArraySet*)context)->property_index_expr),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdArraySet*)context)->property_value_expr));
}

SlagObject* CmdArraySet__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1111.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdArraySet*)context)->property_context)),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdArraySet*)context)->property_index_expr)),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdArraySet*)context)->property_value_expr)),str62.value));
}

static SlagObject* CmdArraySet__resolve( SXCRef context )
{
  SXCRef local_0_array_type;

  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_context), CallFn____Object(16,((ClassCmdArraySet*)context)->property_context) );
  local_0_array_type = SlagAnalyzer__require_type__Cmd_TypeInfo(sxc_singletons[8],((ClassCmdArraySet*)context)->property_context,((ClassTypeManager*)sxc_singletons[7])->property_type_generic_array);
  TypeInfo__resolve(local_0_array_type);
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_index_expr), CallFn____Object(16,((ClassCmdArraySet*)context)->property_index_expr) );
  SlagAnalyzer__require_int32__Cmd(sxc_singletons[8],((ClassCmdArraySet*)context)->property_index_expr);
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_value_expr), CallFn____Object(16,((ClassCmdArraySet*)context)->property_value_expr) );
  SlagAnalyzer__require_type__Cmd_TypeInfo(sxc_singletons[8],((ClassCmdArraySet*)context)->property_value_expr,TypeInfo__readable_type(local_0_array_type));
  return context;
}

static SlagObject* CmdArraySet__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_context), CallFn____Object(42,((ClassCmdArraySet*)context)->property_context) );
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_index_expr), CallFn____Object(42,((ClassCmdArraySet*)context)->property_index_expr) );
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_value_expr), CallFn____Object(42,((ClassCmdArraySet*)context)->property_value_expr) );
  return context;
}

static void CmdArraySet__finalize_structure_info( SXCRef context )
{
  CallFn__(21,((ClassCmdArraySet*)context)->property_context);
  CallFn__(21,((ClassCmdArraySet*)context)->property_index_expr);
  CallFn__(21,((ClassCmdArraySet*)context)->property_value_expr);
}

static void CmdArraySet__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdArraySet*)context)->property_context);
  CallFn__(38,((ClassCmdArraySet*)context)->property_index_expr);
  CallFn__(38,((ClassCmdArraySet*)context)->property_value_expr);
}

static SlagObject* CmdArraySet__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_context), CallFn__CmdList__Object(1,((ClassCmdArraySet*)context)->property_context,local_0_arg_list) );
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_index_expr), CallFn__CmdList__Object(1,((ClassCmdArraySet*)context)->property_index_expr,local_0_arg_list) );
  sxc_write_ref( &(((ClassCmdArraySet*)context)->property_value_expr), CallFn__CmdList__Object(1,((ClassCmdArraySet*)context)->property_value_expr,local_0_arg_list) );
  return context;
}

static void CmdArraySet__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_array_set)->property_ordinal);
  CallFn__(7,((ClassCmdArraySet*)context)->property_context);
  CallFn__(7,((ClassCmdArraySet*)context)->property_index_expr);
  CallFn__(7,((ClassCmdArraySet*)context)->property_value_expr);
}

static SlagObject* CmdArraySet__to_cpp( SXCRef context )
{
  SXCRef local_0_element_type;

  local_0_element_type = ((ClassTypeInfo*)CallFn____Object(0,((ClassCmdArraySet*)context)->property_context))->property_element_type;
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_element_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1711.value),CallFn____Object(15,((ClassCmdArraySet*)context)->property_context)),str1712.value),CallFn____Object(15,((ClassCmdArraySet*)context)->property_index_expr)),str634.value),CallFn____Object(15,((ClassCmdArraySet*)context)->property_value_expr)),str635.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(local_0_element_type)),str1710.value),CallFn____Object(15,((ClassCmdArraySet*)context)->property_context)),str1709.value),CallFn____Object(15,((ClassCmdArraySet*)context)->property_index_expr)),str1713.value),CallFn____Object(15,((ClassCmdArraySet*)context)->property_value_expr)));
  }
}

static SlagObject* CmdArraySet__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(35,((ClassCmdArraySet*)context)->property_context)),str52.value),CallFn____Object(35,((ClassCmdArraySet*)context)->property_index_expr)),str1954.value),CallFn____Object(35,((ClassCmdArraySet*)context)->property_value_expr)));
}

static SlagObject* CmdArraySet__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(41,((ClassCmdArraySet*)context)->property_context)),str52.value),CallFn____Object(41,((ClassCmdArraySet*)context)->property_index_expr)),str1713.value),CallFn____Object(41,((ClassCmdArraySet*)context)->property_value_expr)));
}

void CmdArraySet__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdArraySet__type_name( SXCRef context )
{
  return str1112.value;
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9461, SXCRef local_1_var_info_9460, SXCRef local_2_operand_9459 )
{
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign*)context)->property_t), local_0_t_9461 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign*)context)->property_var_info), local_1_var_info_9460 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign*)context)->property_operand), local_2_operand_9459 );
  return context;
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__create_duplicate( SXCRef context )
{
  return CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarSubAndAssign.create(),((ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign*)context)->property_t,((ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign*)context)->property_operand));
}

SlagObject* CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign*)context)->property_var_info)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__resolve( SXCRef context )
{
  return context;
}

static void CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_local_var_sub_and_assign)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign*)context)->property_operand);
}

void CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__type_name( SXCRef context )
{
  return str1189.value;
}

static SlagObject* CmdLocalVarSubAndAssign__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarSubAndAssign*)context)->property_var_info)),str1722.value),CallFn____Object(15,((ClassCmdLocalVarSubAndAssign*)context)->property_operand)));
}

static SlagObject* CmdLocalVarSubAndAssign__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarSubAndAssign*)context)->property_var_info)),str1722.value),CallFn____Object(35,((ClassCmdLocalVarSubAndAssign*)context)->property_operand)));
}

static SlagObject* CmdLocalVarSubAndAssign__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarSubAndAssign*)context)->property_var_info)),str1722.value),CallFn____Object(41,((ClassCmdLocalVarSubAndAssign*)context)->property_operand)));
}

void CmdLocalVarSubAndAssign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLocalVarSubAndAssign__type_name( SXCRef context )
{
  return str1190.value;
}

static SlagObject* CmdCmpGT__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdCmpGT*)context)->property_lhs)),str1681.value),CallFn____Object(15,((ClassCmdCmpGT*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpGT__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCmpGT*)context)->property_lhs)),str1681.value),CallFn____Object(35,((ClassCmdCmpGT*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpGT__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCmpGT*)context)->property_lhs)),str1681.value),CallFn____Object(41,((ClassCmdCmpGT*)context)->property_rhs)),str62.value));
}

void CmdCmpGT__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpGT__type_name( SXCRef context )
{
  return str886.value;
}

static SlagObject* ArrayReader_of_Signal__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Signal__init__Int32(type_ClassArrayList_of_Signal.create(),ArrayReader_of_Signal__remaining(context));
  while (ArrayReader_of_Signal__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_Signal__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_Signal__to_String( SXCRef context )
{
  return ArrayList_of_Signal__to_String(ArrayReader_of_Signal__to_List(context));
}

static SlagObject* ArrayReader_of_Signal__init__Collection_of_Signal_Array_of_Signal_Int32_Int32( SXCRef context, SXCRef local_0_collection_4312, SXCRef local_1_data_4311, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_Signal*)context)->property_collection), local_0_collection_4312 );
  sxc_write_ref( &(((ClassArrayReader_of_Signal*)context)->property_data), local_1_data_4311 );
  ((ClassArrayReader_of_Signal*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_Signal*)context)->property_collection);
  }
  ((ClassArrayReader_of_Signal*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_Signal*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_Signal*)context)->property_collection)))
  {
    ((ClassArrayReader_of_Signal*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_Signal*)context)->property_collection);
  }
  ((ClassArrayReader_of_Signal*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_Signal*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_Signal__create_duplicate( SXCRef context )
{
  return ArrayReader_of_Signal__init__Collection_of_Signal_Array_of_Signal_Int32_Int32(type_ClassArrayReader_of_Signal.create(),((ClassArrayReader_of_Signal*)context)->property_collection,((ClassArrayReader_of_Signal*)context)->property_data,((ClassArrayReader_of_Signal*)context)->property_counter,(((ClassArrayReader_of_Signal*)context)->property_last_exclusive-((ClassArrayReader_of_Signal*)context)->property_counter));
}

static SlagLogical ArrayReader_of_Signal__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_Signal*)context)->property_counter < ((ClassArrayReader_of_Signal*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_Signal*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_Signal*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_Signal__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_Signal*)context)->property_last_exclusive-((ClassArrayReader_of_Signal*)context)->property_counter);
}

static SlagObject* ArrayReader_of_Signal__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassSignal**)(((SlagArray*)((ClassArrayReader_of_Signal*)context)->property_data)->data))[((ClassArrayReader_of_Signal*)context)->property_counter];
  ++(((ClassArrayReader_of_Signal*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_Signal__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_Signal__type_name( SXCRef context )
{
  return str110.value;
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9465, SXCRef local_1_var_info_9464, SXCRef local_2_operand_9463 )
{
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign*)context)->property_t), local_0_t_9465 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign*)context)->property_var_info), local_1_var_info_9464 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign*)context)->property_operand), local_2_operand_9463 );
  return context;
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__create_duplicate( SXCRef context )
{
  return CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarMulAndAssign.create(),((ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign*)context)->property_t,((ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign*)context)->property_operand));
}

SlagObject* CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign*)context)->property_var_info)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__resolve( SXCRef context )
{
  return context;
}

static void CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_local_var_mul_and_assign)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign*)context)->property_operand);
}

void CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__type_name( SXCRef context )
{
  return str1191.value;
}

static SlagObject* CmdLocalVarMulAndAssign__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarMulAndAssign*)context)->property_var_info)),str1723.value),CallFn____Object(15,((ClassCmdLocalVarMulAndAssign*)context)->property_operand)));
}

static SlagObject* CmdLocalVarMulAndAssign__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarMulAndAssign*)context)->property_var_info)),str1723.value),CallFn____Object(35,((ClassCmdLocalVarMulAndAssign*)context)->property_operand)));
}

static SlagObject* CmdLocalVarMulAndAssign__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarMulAndAssign*)context)->property_var_info)),str1723.value),CallFn____Object(41,((ClassCmdLocalVarMulAndAssign*)context)->property_operand)));
}

void CmdLocalVarMulAndAssign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLocalVarMulAndAssign__type_name( SXCRef context )
{
  return str1192.value;
}

static void SignalManager__init_singleton( SXCRef context )
{
  SignalManager__install_default_signal_handlers(context);
}

SlagObject* SignalManager__find_signal_id__String( SXCRef context, SXCRef local_0_id )
{
  return ReferenceTable_of_String_and_SignalHandler__find_key__String(((ClassSignalManager*)context)->property_signal_handlers,local_0_id);
}

void SignalManager__queue__Signal( SXCRef context, SXCRef local_0_s )
{
  ArrayList_of_Object__add__Object(((ClassSignalManager*)context)->property_pending_signals,local_0_s);
}

void SignalManager__queue_native__Signal( SXCRef context, SXCRef local_0_s )
{
  ArrayList_of_Object__add__Object(((ClassSignalManager*)context)->property_native_signals,local_0_s);
}

void SignalManager__queue_native__String_Object( SXCRef context, SXCRef local_0_signal_id, SXCRef local_1_argument )
{
  ArrayList_of_Object__add__Object(((ClassSignalManager*)context)->property_native_signals,Signal__init__String_Object(type_ClassSignal.create(),local_0_signal_id,local_1_argument));
}

static void SignalManager__raise__Signal( SXCRef context, SXCRef local_0_signal )
{
  SXCRef local_1_signal_id;
  SXCRef local_2_handler;
  SXCRef local_3_new_handler;

  local_1_signal_id = ((ClassSignal*)local_0_signal)->property_id;
  local_2_handler = ReferenceTable_of_String_and_SignalHandler__get__String(((ClassSignalManager*)context)->property_signal_handlers,local_1_signal_id);
  if ((local_2_handler != NULL))
  {
    local_3_new_handler = SignalHandler__handle__Signal(local_2_handler,local_0_signal);
    if ((local_3_new_handler != local_2_handler))
    {
      if ((local_3_new_handler != NULL))
      {
        ReferenceTable_of_String_and_SignalHandler__set__String_SignalHandler(((ClassSignalManager*)context)->property_signal_handlers,local_1_signal_id,local_3_new_handler);
      }
      else
      {
        ReferenceTable_of_String_and_SignalHandler__remove__String(((ClassSignalManager*)context)->property_signal_handlers,local_1_signal_id);
      }
    }
  }
}

SlagLogical SignalManager__raise_pending( SXCRef context )
{
  SXCRef local_0__reader459;
  SXCRef local_1_signal;

  ArrayList_of_Signal__add__Readable_of_Signal(((ClassSignalManager*)context)->property_pending_signals,((ClassSignalManager*)context)->property_native_signals);
  ArrayList_of_Object__clear(((ClassSignalManager*)context)->property_native_signals);
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassSignalManager*)context)->property_pending_signals))->property_count != 0))
  {
    local_0__reader459 = ArrayList_of_Signal__create_reader(ArrayList_of_Signal__transfer_from__List_of_Signal(((ClassSignalManager*)context)->property_active_signals,((ClassSignalManager*)context)->property_pending_signals));
    while (ArrayReader_of_Signal__has_another(local_0__reader459))
    {
      local_1_signal = ArrayReader_of_Signal__read(local_0__reader459);
      SignalManager__raise__Signal(context,local_1_signal);
    }
    return true;
  }
  else
  {
    return false;
  }
}

static void SignalManager__install_default_signal_handlers( SXCRef context )
{
  SignalHandler__init__String_Int32(type_ClassSpecializedSignalHandler_460.create(),str109.value,((ClassSignalHandlerManager*)sxc_singletons[29])->property_insert);
}

void SignalManager__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassSignalManager*)context)->property_signal_handlers), ReferenceTable_of_String_and_SignalHandler__init__Int32(type_ClassReferenceTable_of_String_and_SignalHandler.create(),64) );
  sxc_write_ref( &(((ClassSignalManager*)context)->property_pending_signals), ArrayList_of_Signal__init__Int32(type_ClassArrayList_of_Signal.create(),20) );
  sxc_write_ref( &(((ClassSignalManager*)context)->property_native_signals), ArrayList_of_Signal__init__Int32(type_ClassArrayList_of_Signal.create(),20) );
  sxc_write_ref( &(((ClassSignalManager*)context)->property_active_signals), ArrayList_of_Signal__init__Int32(type_ClassArrayList_of_Signal.create(),20) );
}

SlagObject* SignalManager__type_name( SXCRef context )
{
  return str116.value;
}

static SlagLogical StdInReader__consume__Char( SXCRef context, SlagChar local_0_look_for )
{
  if (!StdInReader__has_another(context))
  {
    return false;
  }
  if ((((SlagInt32)StdInReader__peek(context)) == ((SlagInt32)local_0_look_for)))
  {
    StdInReader__read(context);
    return true;
  }
  return false;
}

static SlagObject* StdInReader__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Char__init__Int32(type_ClassArrayList_of_Char.create(),StdInReader__available(context));
  while (StdInReader__has_another(context))
  {
    ArrayList_of_Char__add__Char(local_0_result_list,StdInReader__read(context));
  }
  return local_0_result_list;
}

SlagObject* StdInReader__to_String( SXCRef context )
{
  return ArrayList_of_Char__to_String(StdInReader__to_List(context));
}

SlagObject* StdInReader__init( SXCRef context )
{
  return context;
}

static SlagLogical StdInReader__has_another( SXCRef context )
{
  return true;
}

static SlagChar StdInReader__peek( SXCRef context )
{
  if (!((ClassStdInReader*)context)->property_has_next)
  {
    ((ClassStdInReader*)context)->property_has_next = StdInReader__prep_next(context);
  }
  return ((ClassStdInReader*)context)->property_next;
}

static SlagChar StdInReader__read( SXCRef context )
{
  if (((ClassStdInReader*)context)->property_has_next)
  {
    ((ClassStdInReader*)context)->property_has_next = false;
    return ((ClassStdInReader*)context)->property_next;
  }
  StdInReader__prep_next(context);
  return ((ClassStdInReader*)context)->property_next;
}

static SlagChar StdInReader__native_read_char( SXCRef context )
{
  SLAG_PUSH_REF( context );
  StdInReader__native_read_char();
  return SLAG_POP_CHAR();
}

static SlagLogical StdInReader__prep_next( SXCRef context )
{
  ((ClassStdInReader*)context)->property_next = StdInReader__native_read_char(context);
  return true;
}

static SlagInt32 StdInReader__available( SXCRef context )
{
  if (((ClassStdInReader*)context)->property_has_next)
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

void StdInReader__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassStdInReader*)context)->property_has_next = false;
}

SlagObject* StdInReader__type_name( SXCRef context )
{
  return str32.value;
}

static SlagObject* Array_of_Mapping_of_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_Mapping_of_Object_and_Object.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_Mapping_of_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_Mapping_of_Object_and_Object__type_name( SXCRef context )
{
  return str43.value;
}

static SlagObject* CmdLogicalize__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdLogicalize.create(),((ClassCmdLogicalize*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdLogicalize*)context)->property_operand));
}

static SlagObject* CmdLogicalize__resolve( SXCRef context )
{
  SXCRef local_0_this_type;

  sxc_write_ref( &(((ClassCmdLogicalize*)context)->property_operand), CallFn____Object(16,((ClassCmdLogicalize*)context)->property_operand) );
  local_0_this_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],context);
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_this_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return ((ClassCmd*)CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpIsNot.create(),((ClassCmdLogicalize*)context)->property_t,((ClassCmdLogicalize*)context)->property_operand,CmdLiteralNull__init__Token(type_ClassCmdLiteralNull.create(),((ClassCmdLogicalize*)context)->property_t)));
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_this_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return CallFn____Object(28,CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__resolve(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpNE.create(),((ClassCmdLogicalize*)context)->property_t,((ClassCmdLogicalize*)context)->property_operand,SlagAnalyzer__make_zero_value__Token_TypeInfo(sxc_singletons[8],((ClassCmdLogicalize*)context)->property_t,local_0_this_type))));
  }
  else if (TypeInfo__is_logical(local_0_this_type))
  {
    return CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__optimize(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpEQ.create(),((ClassCmdLogicalize*)context)->property_t,((ClassCmdLogicalize*)context)->property_operand,CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdLogicalize*)context)->property_t,true)));
  }
  else
  {
    return CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__resolve(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpNE.create(),((ClassCmdLogicalize*)context)->property_t,((ClassCmdLogicalize*)context)->property_operand,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdLogicalize*)context)->property_t,0)));
  }
}

void CmdLogicalize__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLogicalize__type_name( SXCRef context )
{
  return str875.value;
}

void HashTable_of_String_and_StructureType__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTable_of_String_and_StructureType__type_name( SXCRef context )
{
  return str727.value;
}

SlagObject* OutOfBoundsError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassOutOfBoundsError*)context)->property_message), str170.value );
  return context;
}

SlagObject* OutOfBoundsError__init__String( SXCRef context, SXCRef local_0_message_3876 )
{
  sxc_write_ref( &(((ClassOutOfBoundsError*)context)->property_message), local_0_message_3876 );
  return context;
}

void OutOfBoundsError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* OutOfBoundsError__type_name( SXCRef context )
{
  return str171.value;
}

static SlagObject* ArrayReverseReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo( SXCRef context, SXCRef local_0_collection_7682, SXCRef local_1_data_7681 )
{
  sxc_write_ref( &(((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_collection), local_0_collection_7682 );
  sxc_write_ref( &(((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_data), local_1_data_7681 );
  ((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_collection);
  ((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_counter = (CallFn____Int32(19,((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_collection)-1);
  return context;
}

static SlagObject* ArrayReverseReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_7687, SXCRef local_1_data_7686, SlagInt32 local_2_counter_7685, SlagInt32 local_3_last_exclusive_7684, SlagInt32 local_4_original_modification_count_7683 )
{
  sxc_write_ref( &(((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_collection), local_0_collection_7687 );
  sxc_write_ref( &(((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_data), local_1_data_7686 );
  ((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_counter = local_2_counter_7685;
  ((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_last_exclusive = local_3_last_exclusive_7684;
  ((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_original_modification_count = local_4_original_modification_count_7683;
  return context;
}

static SlagObject* ArrayReverseReader_of_ControlStructureInfo__create_duplicate( SXCRef context )
{
  return ArrayReverseReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo_Int32_Int32_Int32(type_ClassArrayReverseReader_of_ControlStructureInfo.create(),((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_collection,((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_data,((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_counter,((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_last_exclusive,((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_original_modification_count);
}

static SlagLogical ArrayReverseReader_of_ControlStructureInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_counter >= 0))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReverseReader_of_ControlStructureInfo__remaining( SXCRef context )
{
  return (((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_counter+1);
}

static SlagObject* ArrayReverseReader_of_ControlStructureInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  if ((((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_counter < 0))
  {
    SLAG_THROW( NoNextValueError__init(type_ClassNoNextValueError.create()) );
  }
  local_0_result = ((ClassControlStructureInfo**)(((SlagArray*)((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_data)->data))[((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_counter];
  --(((ClassArrayReverseReader_of_ControlStructureInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReverseReader_of_ControlStructureInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReverseReader_of_ControlStructureInfo__type_name( SXCRef context )
{
  return str796.value;
}

void WeakReferenceManager__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* WeakReferenceManager__type_name( SXCRef context )
{
  return str111.value;
}

static SlagObject* CmdArrayCreate__init__Token_TypeInfo_Cmd( SXCRef context, SXCRef local_0_t_9314, SXCRef local_1_of_type_9313, SXCRef local_2_size_expr_9312 )
{
  sxc_write_ref( &(((ClassCmdArrayCreate*)context)->property_t), local_0_t_9314 );
  sxc_write_ref( &(((ClassCmdArrayCreate*)context)->property_of_type), local_1_of_type_9313 );
  sxc_write_ref( &(((ClassCmdArrayCreate*)context)->property_size_expr), local_2_size_expr_9312 );
  return context;
}

static SlagObject* CmdArrayCreate__create_duplicate( SXCRef context )
{
  return CmdArrayCreate__init__Token_TypeInfo_Cmd(type_ClassCmdArrayCreate.create(),((ClassCmdArrayCreate*)context)->property_t,((ClassCmdArrayCreate*)context)->property_of_type,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdArrayCreate*)context)->property_size_expr));
}

static SlagObject* CmdArrayCreate__type( SXCRef context )
{
  return ((ClassCmdArrayCreate*)context)->property_of_type;
}

SlagObject* CmdArrayCreate__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1150.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdArrayCreate*)context)->property_of_type)),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdArrayCreate*)context)->property_size_expr)),str62.value));
}

static SlagObject* CmdArrayCreate__resolve( SXCRef context )
{
  TypeInfo__resolve(((ClassCmdArrayCreate*)context)->property_of_type);
  sxc_write_ref( &(((ClassCmdArrayCreate*)context)->property_size_expr), CallFn____Object(16,((ClassCmdArrayCreate*)context)->property_size_expr) );
  SlagAnalyzer__require_int32__Cmd(sxc_singletons[8],((ClassCmdArrayCreate*)context)->property_size_expr);
  return context;
}

static SlagObject* CmdArrayCreate__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdArrayCreate*)context)->property_size_expr), CallFn____Object(42,((ClassCmdArrayCreate*)context)->property_size_expr) );
  return context;
}

static void CmdArrayCreate__finalize_structure_info( SXCRef context )
{
  CallFn__(21,((ClassCmdArrayCreate*)context)->property_size_expr);
}

static void CmdArrayCreate__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdArrayCreate*)context)->property_size_expr);
}

static SlagObject* CmdArrayCreate__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdArrayCreate*)context)->property_size_expr), CallFn__CmdList__Object(1,((ClassCmdArrayCreate*)context)->property_size_expr,local_0_arg_list) );
  return context;
}

static void CmdArrayCreate__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_array_create)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassTypeInfo*)((ClassCmdArrayCreate*)context)->property_of_type)->property_index);
  CallFn__(7,((ClassCmdArrayCreate*)context)->property_size_expr);
}

static SlagObject* CmdArrayCreate__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1716.value),TypeInfo__x_name(((ClassCmdArrayCreate*)context)->property_of_type)),str1717.value),CallFn____Object(15,((ClassCmdArrayCreate*)context)->property_size_expr)),str62.value));
}

static SlagObject* CmdArrayCreate__to_cs( SXCRef context )
{
  SXCRef local_0_name;

  local_0_name = TypeInfo__x_name(((ClassCmdArrayCreate*)context)->property_of_type);
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1955.value),String__before_first__String(local_0_name,str64.value)),str52.value),CallFn____Object(35,((ClassCmdArrayCreate*)context)->property_size_expr)),str54.value),String__after_first__String(local_0_name,str64.value)));
}

static SlagObject* CmdArrayCreate__to_java( SXCRef context )
{
  SXCRef local_0_name;

  local_0_name = TypeInfo__x_name(((ClassCmdArrayCreate*)context)->property_of_type);
  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassTypeInfo*)((ClassCmdArrayCreate*)context)->property_of_type)->property_element_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassTypeInfo*)((ClassCmdArrayCreate*)context)->property_of_type)->property_element_type)),str2026.value),CallFn____Object(41,((ClassCmdArrayCreate*)context)->property_size_expr)),str1554.value));
  }
  else
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1955.value),String__before_first__String(local_0_name,str64.value)),str52.value),CallFn____Object(41,((ClassCmdArrayCreate*)context)->property_size_expr)),str54.value),String__after_first__String(local_0_name,str64.value)));
  }
}

void CmdArrayCreate__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdArrayCreate__type_name( SXCRef context )
{
  return str1151.value;
}

static SlagObject* CmdLiteralChar__init__Token_Char( SXCRef context, SXCRef local_0_t_7902, SlagChar local_1_value_7901 )
{
  sxc_write_ref( &(((ClassCmdLiteralChar*)context)->property_t), local_0_t_7902 );
  ((ClassCmdLiteralChar*)context)->property_value = local_1_value_7901;
  return context;
}

static SlagObject* CmdLiteralChar__create_duplicate( SXCRef context )
{
  return CmdLiteralChar__init__Token_Char(type_ClassCmdLiteralChar.create(),((ClassCmdLiteralChar*)context)->property_t,((ClassCmdLiteralChar*)context)->property_value);
}

static SlagObject* CmdLiteralChar__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_char;
}

SlagObject* CmdLiteralChar__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)String__after_first__String(CmdLiteralChar__type_name(context),str758.value))),str863.value),Global__to_String__Char(sxc_singletons[21],((ClassCmdLiteralChar*)context)->property_value)),str864.value));
}

static void CmdLiteralChar__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_literal_char)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((SlagInt32)((ClassCmdLiteralChar*)context)->property_value));
}

static SlagObject* CmdLiteralChar__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1673.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32)((ClassCmdLiteralChar*)context)->property_value),10))),str62.value));
}

static SlagObject* CmdLiteralChar__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1926.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32)((ClassCmdLiteralChar*)context)->property_value),10))),str62.value));
}

static SlagObject* CmdLiteralChar__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1926.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32)((ClassCmdLiteralChar*)context)->property_value),10))),str62.value));
}

void CmdLiteralChar__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLiteralChar__type_name( SXCRef context )
{
  return str865.value;
}

static SlagObject* CmdCastToChar__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdCastToChar.create(),((ClassCmdCastToChar*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCastToChar*)context)->property_operand));
}

static SlagObject* CmdCastToChar__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_char;
}

static SlagObject* CmdCastToChar__optimize( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdCastToChar*)context)->property_operand,&type_ClassCmdLiteralPrimitive))
  {
    if (sxc_instance_of(((ClassCmdCastToChar*)context)->property_operand,&type_ClassCmdLiteralInt64))
    {
      return CmdLiteralChar__init__Token_Char(type_ClassCmdLiteralChar.create(),((ClassCmdCastToChar*)context)->property_t,((SlagChar)((SlagInt32)((ClassCmdLiteralInt64*)((ClassCmdCastToChar*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToChar*)context)->property_operand,&type_ClassCmdLiteralInt32))
    {
      return CmdLiteralChar__init__Token_Char(type_ClassCmdLiteralChar.create(),((ClassCmdCastToChar*)context)->property_t,((SlagChar)((SlagInt32)((ClassCmdLiteralInt32*)((ClassCmdCastToChar*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToChar*)context)->property_operand,&type_ClassCmdLiteralReal64))
    {
      return CmdLiteralChar__init__Token_Char(type_ClassCmdLiteralChar.create(),((ClassCmdCastToChar*)context)->property_t,((SlagChar)((SlagInt32)((ClassCmdLiteralReal64*)((ClassCmdCastToChar*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToChar*)context)->property_operand,&type_ClassCmdLiteralReal32))
    {
      return CmdLiteralChar__init__Token_Char(type_ClassCmdLiteralChar.create(),((ClassCmdCastToChar*)context)->property_t,((SlagChar)((SlagInt32)((ClassCmdLiteralReal32*)((ClassCmdCastToChar*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToChar*)context)->property_operand,&type_ClassCmdLiteralChar))
    {
      return ((ClassCmdCastToChar*)context)->property_operand;
    }
    if (sxc_instance_of(((ClassCmdCastToChar*)context)->property_operand,&type_ClassCmdLiteralByte))
    {
      return CmdLiteralChar__init__Token_Char(type_ClassCmdLiteralChar.create(),((ClassCmdCastToChar*)context)->property_t,((SlagChar)((SlagInt32)((ClassCmdLiteralByte*)((ClassCmdCastToChar*)context)->property_operand)->property_value)));
    }
    if (sxc_instance_of(((ClassCmdCastToChar*)context)->property_operand,&type_ClassCmdLiteralLogical))
    {
      return CmdLiteralChar__init__Token_Char(type_ClassCmdLiteralChar.create(),((ClassCmdCastToChar*)context)->property_t,((SlagChar)((SlagInt32)((ClassCmdLiteralLogical*)((ClassCmdCastToChar*)context)->property_operand)->property_value)));
    }
  }
  return context;
}

static void CmdCastToChar__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cast_to_char)->property_ordinal);
  CallFn__(7,((ClassCmdCastToChar*)context)->property_operand);
}

static SlagObject* CmdCastToChar__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(12,((ClassCmdCastToChar*)context)->property_operand);
}

static SlagObject* CmdCastToChar__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1673.value),CallFn____Object(15,((ClassCmdCastToChar*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCastToChar__statement_to_cs( SXCRef context )
{
  return CallFn____Object(33,((ClassCmdCastToChar*)context)->property_operand);
}

static SlagObject* CmdCastToChar__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1947.value),CallFn____Object(35,((ClassCmdCastToChar*)context)->property_operand)),str62.value));
}

static SlagObject* CmdCastToChar__statement_to_java( SXCRef context )
{
  return CallFn____Object(6,((ClassCmdCastToChar*)context)->property_operand);
}

static SlagObject* CmdCastToChar__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1926.value),CallFn____Object(41,((ClassCmdCastToChar*)context)->property_operand)),str62.value));
}

void CmdCastToChar__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCastToChar__type_name( SXCRef context )
{
  return str1090.value;
}

static SlagObject* SlagFile__init__Token_String_String( SXCRef context, SXCRef local_0_t_6802, SXCRef local_1_filename_6801, SXCRef local_2_data_6800 )
{
  sxc_write_ref( &(((ClassSlagFile*)context)->property_t), local_0_t_6802 );
  sxc_write_ref( &(((ClassSlagFile*)context)->property_filename), local_1_filename_6801 );
  sxc_write_ref( &(((ClassSlagFile*)context)->property_data), local_2_data_6800 );
  return context;
}

SlagObject* SlagFile__to_String( SXCRef context )
{
  return ((ClassSlagFile*)context)->property_filename;
}

void SlagFile__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* SlagFile__type_name( SXCRef context )
{
  return str467.value;
}

static SlagInt32 HashTableMappingReader_of_Object_and_Object__available( SXCRef context )
{
  if ((((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_entries != NULL))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* HashTableMappingReader_of_Object_and_Object__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Mapping_of_Object_and_Object__init__Int32(type_ClassArrayList_of_Mapping_of_Object_and_Object.create(),HashTableMappingReader_of_Object_and_Object__available(context));
  while ((((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_entries != NULL))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,HashTableMappingReader_of_Object_and_Object__read(context));
  }
  return local_0_result_list;
}

SlagObject* HashTableMappingReader_of_Object_and_Object__to_String( SXCRef context )
{
  return ArrayList_of_Mapping_of_Object_and_Object__to_String(HashTableMappingReader_of_Object_and_Object__to_List(context));
}

static SlagObject* HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object( SXCRef context, SXCRef local_0_bins_4077 )
{
  sxc_write_ref( &(((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_bins), local_0_bins_4077 );
  if (CallFn____Logical(14,((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_bins))
  {
    sxc_write_ref( &(((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Object__create_reader(((ClassHashTableBin_of_Object_and_Object*)CallFn____Object(45,((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_bins))->property_entries) );
  }
  HashTableMappingReader_of_Object_and_Object__prep_next(context);
  return context;
}

static void HashTableMappingReader_of_Object_and_Object__prep_next( SXCRef context )
{
  if ((((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_entries == NULL))
  {
    return;
  }
  while (!CallFn____Logical(14,((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_entries))
  {
    if (CallFn____Logical(14,((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_bins))
    {
      sxc_write_ref( &(((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Object__create_reader(((ClassHashTableBin_of_Object_and_Object*)CallFn____Object(45,((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_bins))->property_entries) );
    }
    else
    {
      sxc_write_ref( &(((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_entries), NULL );
      return;
    }
  }
}

static SlagLogical HashTableMappingReader_of_Object_and_Object__has_another( SXCRef context )
{
  return (((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_entries != NULL);
}

static SlagObject* HashTableMappingReader_of_Object_and_Object__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = CallFn____Object(45,((ClassHashTableMappingReader_of_Object_and_Object*)context)->property_entries);
  HashTableMappingReader_of_Object_and_Object__prep_next(context);
  return local_0_result;
}

void HashTableMappingReader_of_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableMappingReader_of_Object_and_Object__type_name( SXCRef context )
{
  return str57.value;
}

static SlagObject* PriorSlagError__init__Token_String_Token( SXCRef context, SXCRef local_0_t, SXCRef local_1_message_6932, SXCRef local_2_prior_t )
{
  sxc_write_ref( &(((ClassPriorSlagError*)context)->property_message), local_1_message_6932 );
  SlagError__init__Token_String(context,local_0_t,((ClassPriorSlagError*)context)->property_message);
  if ((local_2_prior_t != NULL))
  {
    sxc_write_ref( &(((ClassPriorSlagError*)context)->property_prior_filename), ((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_2_prior_t)->property_file_index]))) );
    ((ClassPriorSlagError*)context)->property_prior_pos = ((ClassToken*)local_2_prior_t)->property_pos;
  }
  else
  {
    sxc_write_ref( &(((ClassPriorSlagError*)context)->property_prior_filename), str477.value );
  }
  return context;
}

SlagObject* PriorSlagError__to_String( SXCRef context )
{
  SXCRef local_0_line_str;
  SXCRef local_1_prior_line_str;
  SlagInt32 local_2_count;
  SXCRef local_3_buffer;
  SlagInt32 local_4__local_2371;
  SlagInt32 local_5__last2372;
  SlagLogical local_6_first;
  SXCRef local_7__reader2373;
  SXCRef local_8_line;
  SlagInt32 local_9__local_2375;
  SlagInt32 local_10__last2376;

  local_0_line_str = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str221.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32)(((ClassPriorSlagError*)context)->property_pos.property_line)),10))),str222.value));
  local_1_prior_line_str = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str221.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((SlagInt32)(((ClassPriorSlagError*)context)->property_prior_pos.property_line)),10))),str222.value));
  local_2_count = Math__max__Int32_Int32(sxc_singletons[4],(((SlagString*)local_0_line_str)->count),(((SlagString*)local_1_prior_line_str)->count));
  if (String__opEQ__String(((ClassPriorSlagError*)context)->property_prior_filename,str477.value))
  {
    return SlagError__to_String(context);
  }
  local_3_buffer = StringBuilder__init__String(type_ClassStringBuilder.create(),SlagError__to_String(context));
  if (!String__opEQ__String(((ClassPriorSlagError*)context)->property_prior_filename,((ClassPriorSlagError*)context)->property_filename))
  {
    TextWriter__println__String(local_3_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str570.value),((ClassPriorSlagError*)context)->property_prior_filename),str196.value)));
  }
  StringBuilder__print__String(local_3_buffer,local_1_prior_line_str);
  local_4__local_2371 = ((((SlagString*)local_1_prior_line_str)->count)+1);
  local_5__last2372 = local_2_count;
  while ((local_4__local_2371 <= local_5__last2372))
  {
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_3_buffer)->property_data,((SlagChar)32));
    ++local_4__local_2371;
  }
  local_6_first = true;
  local_7__reader2373 = LineReader__init__Reader_of_Char(type_ClassLineReader.create(),((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),SlagError__get_context__String_ParsePos(context,((ClassPriorSlagError*)context)->property_prior_filename,((ClassPriorSlagError*)context)->property_prior_pos),0,-1)));
  while ((((ClassLineReader*)local_7__reader2373)->property_next != NULL))
  {
    local_8_line = LineReader__read(local_7__reader2373);
    if (local_6_first)
    {
      local_6_first = false;
    }
    else
    {
      local_9__local_2375 = 1;
      local_10__last2376 = local_2_count;
      while ((local_9__local_2375 <= local_10__last2376))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_3_buffer)->property_data,((SlagChar)32));
        ++local_9__local_2375;
      }
    }
    TextWriter__println__String(local_3_buffer,local_8_line);
  }
  return StringBuilder__to_String(local_3_buffer);
}

void PriorSlagError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* PriorSlagError__type_name( SXCRef context )
{
  return str571.value;
}

static SlagObject* ParameterInfo__init__Token_MethodInfo_TypeInfo_String_Cmd_Int32( SXCRef context, SXCRef local_0_t_6878, SXCRef local_1_method_context_6877, SXCRef local_2_type_6876, SXCRef local_3_name_6875, SXCRef local_4_default_value_6874, SlagInt32 local_5_index_6873 )
{
  sxc_write_ref( &(((ClassParameterInfo*)context)->property_t), local_0_t_6878 );
  sxc_write_ref( &(((ClassParameterInfo*)context)->property_method_context), local_1_method_context_6877 );
  sxc_write_ref( &(((ClassParameterInfo*)context)->property_type), local_2_type_6876 );
  sxc_write_ref( &(((ClassParameterInfo*)context)->property_name), local_3_name_6875 );
  sxc_write_ref( &(((ClassParameterInfo*)context)->property_default_value), local_4_default_value_6874 );
  ((ClassParameterInfo*)context)->property_index = local_5_index_6873;
  return context;
}

static SlagObject* ParameterInfo__create_duplicate( SXCRef context )
{
  return ParameterInfo__init__Token_MethodInfo_TypeInfo_String_Cmd_Int32(type_ClassParameterInfo.create(),((ClassParameterInfo*)context)->property_t,((ClassParameterInfo*)context)->property_method_context,((ClassParameterInfo*)context)->property_type,((ClassParameterInfo*)context)->property_name,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassParameterInfo*)context)->property_default_value),((ClassParameterInfo*)context)->property_index);
}

SlagObject* ParameterInfo__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassParameterInfo*)context)->property_name),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassParameterInfo*)context)->property_type)));
}

static SlagObject* ParameterInfo__x_name( SXCRef context )
{
  if ((((ClassParameterInfo*)context)->property_x_name == NULL))
  {
    sxc_write_ref( &(((ClassParameterInfo*)context)->property_x_name), StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1534.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassParameterInfo*)context)->property_index,10))),str629.value),String__x_compatible(((ClassParameterInfo*)context)->property_name))) );
  }
  return ((ClassParameterInfo*)context)->property_x_name;
}

void ParameterInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ParameterInfo__type_name( SXCRef context )
{
  return str532.value;
}

static SlagObject* CmdCompoundPropertyRead__create_duplicate( SXCRef context )
{
  return CmdMemberVarRead__init__Token_Cmd_PropertyInfo(type_ClassCmdCompoundPropertyRead.create(),((ClassCmdCompoundPropertyRead*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCompoundPropertyRead*)context)->property_context),((ClassCmdCompoundPropertyRead*)context)->property_var_info);
}

SlagObject* CmdCompoundPropertyRead__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1132.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdCompoundPropertyRead*)context)->property_context)),str395.value),((ClassPropertyInfo*)((ClassCmdCompoundPropertyRead*)context)->property_var_info)->property_name),str62.value));
}

static SlagObject* CmdCompoundPropertyRead__resolve( SXCRef context )
{
  return context;
}

static void CmdCompoundPropertyRead__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_compound_property_read)->property_ordinal);
  CallFn__(7,((ClassCmdCompoundPropertyRead*)context)->property_context);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassPropertyInfo*)((ClassCmdCompoundPropertyRead*)context)->property_var_info)->property_index);
}

static SlagObject* CmdCompoundPropertyRead__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassPropertyInfo*)((ClassCmdCompoundPropertyRead*)context)->property_var_info)->property_type)),str1714.value),CallFn____Object(15,((ClassCmdCompoundPropertyRead*)context)->property_context)),str38.value),PropertyInfo__x_name(((ClassCmdCompoundPropertyRead*)context)->property_var_info)),str1595.value));
}

static SlagObject* CmdCompoundPropertyRead__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(35,((ClassCmdCompoundPropertyRead*)context)->property_context)),str38.value),PropertyInfo__x_name(((ClassCmdCompoundPropertyRead*)context)->property_var_info)));
}

static SlagObject* CmdCompoundPropertyRead__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(41,((ClassCmdCompoundPropertyRead*)context)->property_context)),str38.value),PropertyInfo__x_name(((ClassCmdCompoundPropertyRead*)context)->property_var_info)));
}

void CmdCompoundPropertyRead__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCompoundPropertyRead__type_name( SXCRef context )
{
  return str1131.value;
}

static SlagObject* CmdNecessary__create_duplicate( SXCRef context )
{
  return CmdContingentControl__init__Token_Cmd_Int32(type_ClassCmdNecessary.create(),((ClassCmdNecessary*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdNecessary*)context)->property_operand),((ClassCmdNecessary*)context)->property_id);
}

static void CmdNecessary__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_necessary)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCmdNecessary*)context)->property_id);
  CallFn__(7,((ClassCmdNecessary*)context)->property_operand);
}

static SlagObject* CmdNecessary__to_cpp( SXCRef context )
{
  CPPWriter__println__String(sxc_singletons[11],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1662.value),CallFn____Object(15,((ClassCmdNecessary*)context)->property_operand)),str1663.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdNecessary*)context)->property_id,10))),str396.value)));
  return NULL;
}

static SlagObject* CmdNecessary__to_cs( SXCRef context )
{
  CSWriter__println__String(sxc_singletons[28],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1921.value),CallFn____Object(35,((ClassCmdNecessary*)context)->property_operand)),str1922.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdNecessary*)context)->property_id,10))),str396.value)));
  return NULL;
}

static SlagObject* CmdNecessary__to_java( SXCRef context )
{
  JavaWriter__println__String(sxc_singletons[19],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1662.value),CallFn____Object(41,((ClassCmdNecessary*)context)->property_operand)),str2009.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdNecessary*)context)->property_id,10))),str396.value)));
  return NULL;
}

void CmdNecessary__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdNecessary__type_name( SXCRef context )
{
  return str806.value;
}

static SlagObject* StringTriplet__init__String_String_String( SXCRef context, SXCRef local_0_first_9408, SXCRef local_1_middle_9407, SXCRef local_2_last_9406 )
{
  sxc_write_ref( &(((ClassStringTriplet*)context)->property_first), local_0_first_9408 );
  sxc_write_ref( &(((ClassStringTriplet*)context)->property_middle), local_1_middle_9407 );
  sxc_write_ref( &(((ClassStringTriplet*)context)->property_last), local_2_last_9406 );
  return context;
}

SlagObject* StringTriplet__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1168.value),((ClassStringTriplet*)context)->property_first),str395.value),((ClassStringTriplet*)context)->property_middle),str395.value),((ClassStringTriplet*)context)->property_last),str62.value));
}

void StringTriplet__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* StringTriplet__type_name( SXCRef context )
{
  return str1169.value;
}

static SlagObject* TypeTemplate__init__Token_Qualifiers_String_ArrayList_of_String_Int32_String( SXCRef context, SXCRef local_0_t_7139, SXCRef local_1_qualifiers_7138, SXCRef local_2_name_7137, SXCRef local_3_placeholder_types_7136, SlagInt32 local_4_end_type_7135, SXCRef local_5_end_symbol_7134 )
{
  sxc_write_ref( &(((ClassTypeTemplate*)context)->property_t), local_0_t_7139 );
  sxc_write_ref( &(((ClassTypeTemplate*)context)->property_qualifiers), local_1_qualifiers_7138 );
  sxc_write_ref( &(((ClassTypeTemplate*)context)->property_name), local_2_name_7137 );
  sxc_write_ref( &(((ClassTypeTemplate*)context)->property_placeholder_types), local_3_placeholder_types_7136 );
  ((ClassTypeTemplate*)context)->property_end_type = local_4_end_type_7135;
  sxc_write_ref( &(((ClassTypeTemplate*)context)->property_end_symbol), local_5_end_symbol_7134 );
  return context;
}

void TypeTemplate__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassTypeTemplate*)context)->property_definition), ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),50) );
}

SlagObject* TypeTemplate__type_name( SXCRef context )
{
  return str655.value;
}

SlagObject* Mapping_of_String_and_TypeTemplate__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_TypeTemplate*)context)->property_key),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_String_and_TypeTemplate*)context)->property_value)));
}

void Mapping_of_String_and_TypeTemplate__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_TypeTemplate__type_name( SXCRef context )
{
  return str908.value;
}

SlagObject* FileNotFoundError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassFileNotFoundError*)context)->property_message), str90.value );
  return context;
}

SlagObject* FileNotFoundError__init__String( SXCRef context, SXCRef local_0_filename )
{
  sxc_write_ref( &(((ClassFileNotFoundError*)context)->property_message), StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str91.value),local_0_filename),str92.value)) );
  return context;
}

void FileNotFoundError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* FileNotFoundError__type_name( SXCRef context )
{
  return str2048.value;
}

static SlagObject* CmdLiteralLogical__init__Token_Logical( SXCRef context, SXCRef local_0_t_7924, SlagLogical local_1_value_7923 )
{
  sxc_write_ref( &(((ClassCmdLiteralLogical*)context)->property_t), local_0_t_7924 );
  ((ClassCmdLiteralLogical*)context)->property_value = local_1_value_7923;
  return context;
}

static SlagObject* CmdLiteralLogical__create_duplicate( SXCRef context )
{
  return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdLiteralLogical*)context)->property_t,((ClassCmdLiteralLogical*)context)->property_value);
}

static SlagObject* CmdLiteralLogical__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_logical;
}

SlagObject* CmdLiteralLogical__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)String__after_first__String(CmdLiteralLogical__type_name(context),str758.value))),str61.value),Global__to_String__Logical(sxc_singletons[21],((ClassCmdLiteralLogical*)context)->property_value)),str62.value));
}

static void CmdLiteralLogical__write_etc( SXCRef context )
{
  SlagLogical local_0_which_2971;

  local_0_which_2971 = ((ClassCmdLiteralLogical*)context)->property_value;
  if (local_0_which_2971)
  {
    ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_literal_logical_true)->property_ordinal);
  }
  else if ((local_0_which_2971 == false))
  {
    ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_literal_logical_false)->property_ordinal);
  }
  else
  {
    ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_literal_logical_void)->property_ordinal);
  }
}

static SlagObject* CmdLiteralLogical__to_cpp( SXCRef context )
{
  SlagLogical local_0_which_2972;

  local_0_which_2972 = ((ClassCmdLiteralLogical*)context)->property_value;
  if (local_0_which_2972)
  {
    return str237.value;
  }
  else
  {
    return str238.value;
  }
}

static SlagObject* CmdLiteralLogical__to_cs( SXCRef context )
{
  if (((ClassCmdLiteralLogical*)context)->property_value)
  {
    return str237.value;
  }
  else
  {
    return str238.value;
  }
}

static SlagObject* CmdLiteralLogical__to_java( SXCRef context )
{
  return ((ClassString*)String__opADD__String(str39.value,Global__to_String__Logical(sxc_singletons[21],((ClassCmdLiteralLogical*)context)->property_value)));
}

void CmdLiteralLogical__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLiteralLogical__type_name( SXCRef context )
{
  return str871.value;
}

static SlagObject* CmdElseIf__init__Token_Cmd_CmdStatementList( SXCRef context, SXCRef local_0_t_7404, SXCRef local_1_condition_7403, SXCRef local_2_body_7402 )
{
  sxc_write_ref( &(((ClassCmdElseIf*)context)->property_t), local_0_t_7404 );
  sxc_write_ref( &(((ClassCmdElseIf*)context)->property_condition), local_1_condition_7403 );
  sxc_write_ref( &(((ClassCmdElseIf*)context)->property_body), local_2_body_7402 );
  return context;
}

static SlagObject* CmdElseIf__create_duplicate( SXCRef context )
{
  return CmdElseIf__init__Token_Cmd_CmdStatementList(type_ClassCmdElseIf.create(),((ClassCmdElseIf*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdElseIf*)context)->property_condition),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdElseIf*)context)->property_body));
}

SlagObject* CmdElseIf__to_String( SXCRef context )
{
  SXCRef local_0_buffer;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  TextWriter__println__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str741.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdElseIf*)context)->property_condition)),str62.value)));
  TextWriter__print__Object(local_0_buffer,((ClassCmdElseIf*)context)->property_body);
  return StringBuilder__to_String(local_0_buffer);
}

static SlagObject* CmdElseIf__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdElseIf*)context)->property_condition), CallFn____Object(16,((ClassCmdElseIf*)context)->property_condition) );
  SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdElseIf*)context)->property_condition,NULL);
  CmdStatementList__resolve(((ClassCmdElseIf*)context)->property_body);
  return context;
}

static SlagObject* CmdElseIf__finalize_calls( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdElseIf*)context)->property_condition), CallFn____Object(42,((ClassCmdElseIf*)context)->property_condition) );
  CmdStatementList__finalize_calls(((ClassCmdElseIf*)context)->property_body);
  return context;
}

static void CmdElseIf__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
  CallFn__(21,((ClassCmdElseIf*)context)->property_condition);
  CmdStatementList__finalize_structure_info(((ClassCmdElseIf*)context)->property_body);
}

static void CmdElseIf__group_dynamic_methods( SXCRef context )
{
  CallFn__(38,((ClassCmdElseIf*)context)->property_condition);
  CmdStatementList__group_dynamic_methods(((ClassCmdElseIf*)context)->property_body);
}

static SlagObject* CmdElseIf__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  sxc_write_ref( &(((ClassCmdElseIf*)context)->property_condition), CallFn__CmdList__Object(1,((ClassCmdElseIf*)context)->property_condition,local_0_arg_list) );
  CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdElseIf*)context)->property_body)->property_statements))->property_data)->data))[0]))),local_0_arg_list);
  return context;
}

static void CmdElseIf__write_etc( SXCRef context )
{
  CallFn__(7,((ClassCmdElseIf*)context)->property_condition);
  CmdStatementList__write_etc(((ClassCmdElseIf*)context)->property_body);
}

static SlagObject* CmdElseIf__to_cpp( SXCRef context )
{
  CPPWriter__println__String(sxc_singletons[11],String__opADD__String(String__opADD__String(str1637.value,CallFn____Object(15,((ClassCmdElseIf*)context)->property_condition)),str62.value));
  CPPWriter__println__String(sxc_singletons[11],str247.value);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent+2);
  CmdStatementList__to_cpp(((ClassCmdElseIf*)context)->property_body);
  ((ClassCPPWriter*)sxc_singletons[11])->property_indent = (((ClassCPPWriter*)sxc_singletons[11])->property_indent-2);
  CPPWriter__println__String(sxc_singletons[11],str397.value);
  return NULL;
}

static SlagObject* CmdElseIf__to_cs( SXCRef context )
{
  CSWriter__println__String(sxc_singletons[28],String__opADD__String(String__opADD__String(str1637.value,CallFn____Object(35,((ClassCmdElseIf*)context)->property_condition)),str62.value));
  CSWriter__println__String(sxc_singletons[28],str247.value);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent+2);
  CmdStatementList__to_cs(((ClassCmdElseIf*)context)->property_body);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent-2);
  CSWriter__println__String(sxc_singletons[28],str397.value);
  return NULL;
}

static SlagObject* CmdElseIf__to_java( SXCRef context )
{
  JavaWriter__println__String(sxc_singletons[19],String__opADD__String(String__opADD__String(str1637.value,CallFn____Object(41,((ClassCmdElseIf*)context)->property_condition)),str62.value));
  JavaWriter__println__String(sxc_singletons[19],str247.value);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
  CmdStatementList__to_java(((ClassCmdElseIf*)context)->property_body);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
  JavaWriter__println__String(sxc_singletons[19],str397.value);
  return NULL;
}

void CmdElseIf__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdElseIf__type_name( SXCRef context )
{
  return str742.value;
}

void CompilerError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* CompilerError__type_name( SXCRef context )
{
  return str146.value;
}

static SlagObject* CmdCmpIsNot__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpIsNot.create(),((ClassCmdCmpIsNot*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpIsNot*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpIsNot*)context)->property_rhs));
}

static SlagObject* CmdCmpIsNot__resolve( SXCRef context )
{
  SXCRef local_0_lhs_type;
  SXCRef local_1_rhs_type;

  sxc_write_ref( &(((ClassCmdCmpIsNot*)context)->property_lhs), CallFn____Object(16,((ClassCmdCmpIsNot*)context)->property_lhs) );
  sxc_write_ref( &(((ClassCmdCmpIsNot*)context)->property_rhs), CallFn____Object(16,((ClassCmdCmpIsNot*)context)->property_rhs) );
  local_0_lhs_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdCmpIsNot*)context)->property_lhs);
  local_1_rhs_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdCmpIsNot*)context)->property_rhs);
  if ((!((((ClassQualifiers*)((ClassTypeInfo*)local_0_lhs_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0) || !((((ClassQualifiers*)((ClassTypeInfo*)local_1_rhs_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0)))
  {
    return CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__resolve(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpNE.create(),((ClassCmdCmpIsNot*)context)->property_t,((ClassCmdCmpIsNot*)context)->property_lhs,((ClassCmdCmpIsNot*)context)->property_rhs));
  }
  if (sxc_instance_of(((ClassCmdCmpIsNot*)context)->property_lhs,&type_ClassCmdLiteralNull))
  {
    if (sxc_instance_of(((ClassCmdCmpIsNot*)context)->property_rhs,&type_ClassCmdLiteralNull))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpIsNot*)context)->property_t,false);
    }
    return CmdUnary__init__Token_Cmd(type_ClassCmdCmpIsNotNull.create(),((ClassCmdCmpIsNot*)context)->property_t,((ClassCmdCmpIsNot*)context)->property_rhs);
  }
  else if (sxc_instance_of(((ClassCmdCmpIsNot*)context)->property_rhs,&type_ClassCmdLiteralNull))
  {
    return CmdUnary__init__Token_Cmd(type_ClassCmdCmpIsNotNull.create(),((ClassCmdCmpIsNot*)context)->property_t,((ClassCmdCmpIsNot*)context)->property_lhs);
  }
  return context;
}

static void CmdCmpIsNot__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cmp_is_not)->property_ordinal);
  CallFn__(7,((ClassCmdCmpIsNot*)context)->property_lhs);
  CallFn__(7,((ClassCmdCmpIsNot*)context)->property_rhs);
}

static SlagObject* CmdCmpIsNot__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdCmpIsNot*)context)->property_lhs)),str1683.value),CallFn____Object(15,((ClassCmdCmpIsNot*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpIsNot__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCmpIsNot*)context)->property_lhs)),str1683.value),CallFn____Object(35,((ClassCmdCmpIsNot*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpIsNot__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCmpIsNot*)context)->property_lhs)),str1683.value),CallFn____Object(41,((ClassCmdCmpIsNot*)context)->property_rhs)),str62.value));
}

void CmdCmpIsNot__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpIsNot__type_name( SXCRef context )
{
  return str890.value;
}

static SlagObject* ArrayReader_of_TypeInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_TypeInfo__init__Int32(type_ClassArrayList_of_TypeInfo.create(),ArrayReader_of_TypeInfo__remaining(context));
  while (ArrayReader_of_TypeInfo__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_TypeInfo__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_TypeInfo__to_String( SXCRef context )
{
  return ArrayList_of_TypeInfo__to_String(ArrayReader_of_TypeInfo__to_List(context));
}

static SlagObject* ArrayReader_of_TypeInfo__init__Collection_of_TypeInfo_Array_of_TypeInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_8186, SXCRef local_1_data_8185, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_TypeInfo*)context)->property_collection), local_0_collection_8186 );
  sxc_write_ref( &(((ClassArrayReader_of_TypeInfo*)context)->property_data), local_1_data_8185 );
  ((ClassArrayReader_of_TypeInfo*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_TypeInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_TypeInfo*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_TypeInfo*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_TypeInfo*)context)->property_collection)))
  {
    ((ClassArrayReader_of_TypeInfo*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_TypeInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_TypeInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_TypeInfo*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_TypeInfo__create_duplicate( SXCRef context )
{
  return ArrayReader_of_TypeInfo__init__Collection_of_TypeInfo_Array_of_TypeInfo_Int32_Int32(type_ClassArrayReader_of_TypeInfo.create(),((ClassArrayReader_of_TypeInfo*)context)->property_collection,((ClassArrayReader_of_TypeInfo*)context)->property_data,((ClassArrayReader_of_TypeInfo*)context)->property_counter,(((ClassArrayReader_of_TypeInfo*)context)->property_last_exclusive-((ClassArrayReader_of_TypeInfo*)context)->property_counter));
}

static SlagLogical ArrayReader_of_TypeInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_TypeInfo*)context)->property_counter < ((ClassArrayReader_of_TypeInfo*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_TypeInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_TypeInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_TypeInfo__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_TypeInfo*)context)->property_last_exclusive-((ClassArrayReader_of_TypeInfo*)context)->property_counter);
}

static SlagObject* ArrayReader_of_TypeInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassTypeInfo**)(((SlagArray*)((ClassArrayReader_of_TypeInfo*)context)->property_data)->data))[((ClassArrayReader_of_TypeInfo*)context)->property_counter];
  ++(((ClassArrayReader_of_TypeInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_TypeInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_TypeInfo__type_name( SXCRef context )
{
  return str930.value;
}

static void RandomNumberGenerator__init_singleton( SXCRef context )
{
  RandomNumberGenerator__init__Int64(context,((slag_get_time_ms()<<32)^slag_get_time_ms()));
}

static SlagObject* RandomNumberGenerator__init__Int64( SXCRef context, SlagInt64 local_0_initial_seed_2996 )
{
  ((ClassRandomNumberGenerator*)context)->property_initial_seed = local_0_initial_seed_2996;
  RandomNumberGenerator__rewind(context);
  return context;
}

static SlagObject* RandomNumberGenerator__init__RandomNumberGenerator( SXCRef context, SXCRef local_0_existing )
{
  ((ClassRandomNumberGenerator*)context)->property_initial_seed = ((ClassRandomNumberGenerator*)local_0_existing)->property_initial_seed;
  ((ClassRandomNumberGenerator*)context)->property_next_random = ((ClassRandomNumberGenerator*)local_0_existing)->property_next_random;
  return context;
}

static SlagObject* RandomNumberGenerator__create_duplicate( SXCRef context )
{
  return RandomNumberGenerator__init__RandomNumberGenerator(type_ClassRandomNumberGenerator.create(),context);
}

static void RandomNumberGenerator__rewind( SXCRef context )
{
  ((ClassRandomNumberGenerator*)context)->property_next_random = ((ClassRandomNumberGenerator*)context)->property_initial_seed;
  RandomNumberGenerator__advance_random(context);
}

static SlagInt64 RandomNumberGenerator__advance_random( SXCRef context )
{
  ((ClassRandomNumberGenerator*)context)->property_next_random = ((25214903917LL*((ClassRandomNumberGenerator*)context)->property_next_random)+11LL);
  return ((ClassRandomNumberGenerator*)context)->property_next_random;
}

void RandomNumberGenerator__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* RandomNumberGenerator__type_name( SXCRef context )
{
  return str4.value;
}

static SlagObject* CmdCastToLogical__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdCastToLogical.create(),((ClassCmdCastToLogical*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCastToLogical*)context)->property_operand));
}

static SlagObject* CmdCastToLogical__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_logical;
}

static SlagObject* CmdCastToLogical__optimize( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdCastToLogical*)context)->property_operand,&type_ClassCmdLiteralPrimitive))
  {
    if (sxc_instance_of(((ClassCmdCastToLogical*)context)->property_operand,&type_ClassCmdLiteralInt64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCastToLogical*)context)->property_t,(((SlagInt32)((ClassCmdLiteralInt64*)((ClassCmdCastToLogical*)context)->property_operand)->property_value) != 0));
    }
    if (sxc_instance_of(((ClassCmdCastToLogical*)context)->property_operand,&type_ClassCmdLiteralInt32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCastToLogical*)context)->property_t,(((SlagInt32)((ClassCmdLiteralInt32*)((ClassCmdCastToLogical*)context)->property_operand)->property_value) != 0));
    }
    if (sxc_instance_of(((ClassCmdCastToLogical*)context)->property_operand,&type_ClassCmdLiteralReal64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCastToLogical*)context)->property_t,(((SlagReal64)((ClassCmdLiteralReal64*)((ClassCmdCastToLogical*)context)->property_operand)->property_value) != 0));
    }
    if (sxc_instance_of(((ClassCmdCastToLogical*)context)->property_operand,&type_ClassCmdLiteralReal32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCastToLogical*)context)->property_t,(((SlagReal64)((ClassCmdLiteralReal32*)((ClassCmdCastToLogical*)context)->property_operand)->property_value) != 0));
    }
    if (sxc_instance_of(((ClassCmdCastToLogical*)context)->property_operand,&type_ClassCmdLiteralChar))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCastToLogical*)context)->property_t,(((SlagInt32)((ClassCmdLiteralChar*)((ClassCmdCastToLogical*)context)->property_operand)->property_value) != 0));
    }
    if (sxc_instance_of(((ClassCmdCastToLogical*)context)->property_operand,&type_ClassCmdLiteralByte))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCastToLogical*)context)->property_t,(((SlagInt32)((ClassCmdLiteralByte*)((ClassCmdCastToLogical*)context)->property_operand)->property_value) != 0));
    }
    if (sxc_instance_of(((ClassCmdCastToLogical*)context)->property_operand,&type_ClassCmdLiteralLogical))
    {
      return ((ClassCmdCastToLogical*)context)->property_operand;
    }
  }
  return context;
}

static void CmdCastToLogical__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cast_to_logical)->property_ordinal);
  CallFn__(7,((ClassCmdCastToLogical*)context)->property_operand);
}

static SlagObject* CmdCastToLogical__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(12,((ClassCmdCastToLogical*)context)->property_operand);
}

static SlagObject* CmdCastToLogical__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdCastToLogical*)context)->property_operand)),str1702.value));
}

static SlagObject* CmdCastToLogical__statement_to_cs( SXCRef context )
{
  return CallFn____Object(33,((ClassCmdCastToLogical*)context)->property_operand);
}

static SlagObject* CmdCastToLogical__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCastToLogical*)context)->property_operand)),str1949.value));
}

static SlagObject* CmdCastToLogical__statement_to_java( SXCRef context )
{
  return CallFn____Object(6,((ClassCmdCastToLogical*)context)->property_operand);
}

static SlagObject* CmdCastToLogical__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCastToLogical*)context)->property_operand)),str1702.value));
}

void CmdCastToLogical__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCastToLogical__type_name( SXCRef context )
{
  return str1092.value;
}

static SlagObject* CmdLocalVarRead__init__Token_MethodVarInfo( SXCRef context, SXCRef local_0_t_8858, SXCRef local_1_var_info_8857 )
{
  sxc_write_ref( &(((ClassCmdLocalVarRead*)context)->property_t), local_0_t_8858 );
  sxc_write_ref( &(((ClassCmdLocalVarRead*)context)->property_var_info), local_1_var_info_8857 );
  return context;
}

static SlagObject* CmdLocalVarRead__create_duplicate( SXCRef context )
{
  return CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),((ClassCmdLocalVarRead*)context)->property_t,((ClassCmdLocalVarRead*)context)->property_var_info);
}

static SlagObject* CmdLocalVarRead__type( SXCRef context )
{
  return ((ClassMethodVarInfo*)((ClassCmdLocalVarRead*)context)->property_var_info)->property_type;
}

SlagObject* CmdLocalVarRead__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1045.value),((ClassMethodVarInfo*)((ClassCmdLocalVarRead*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodVarInfo*)((ClassCmdLocalVarRead*)context)->property_var_info)->property_index,10))),str62.value));
}

static void CmdLocalVarRead__finalize_structure_info( SXCRef context )
{
  ((ClassMethodVarInfo*)((ClassCmdLocalVarRead*)context)->property_var_info)->property_read_count = (((ClassMethodVarInfo*)((ClassCmdLocalVarRead*)context)->property_var_info)->property_read_count+1);
  if ((((ClassMethodVarInfo*)((ClassCmdLocalVarRead*)context)->property_var_info)->property_index >= ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_parameters))->property_count))
  {
    ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
  }
}

static SlagObject* CmdLocalVarRead__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  return ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_arg_list))->property_data)->data))[(((ClassMethodVarInfo*)((ClassCmdLocalVarRead*)context)->property_var_info)->property_index+1)]));
}

static void CmdLocalVarRead__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_local_var_read)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassMethodVarInfo*)((ClassCmdLocalVarRead*)context)->property_var_info)->property_index);
}

static SlagObject* CmdLocalVarRead__to_cpp( SXCRef context )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodVarInfo*)((ClassCmdLocalVarRead*)context)->property_var_info)->property_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return CallFn____Object(2,((ClassCmdLocalVarRead*)context)->property_var_info);
  }
  else
  {
    return CallFn____Object(2,((ClassCmdLocalVarRead*)context)->property_var_info);
  }
}

static SlagObject* CmdLocalVarRead__to_cs( SXCRef context )
{
  return CallFn____Object(2,((ClassCmdLocalVarRead*)context)->property_var_info);
}

static SlagObject* CmdLocalVarRead__to_java( SXCRef context )
{
  return CallFn____Object(2,((ClassCmdLocalVarRead*)context)->property_var_info);
}

void CmdLocalVarRead__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLocalVarRead__type_name( SXCRef context )
{
  return str1044.value;
}

static void CSWriter__write__String( SXCRef context, SXCRef local_0_output_filename_10580 )
{
  sxc_write_ref( &(((ClassCSWriter*)context)->property_output_filename), local_0_output_filename_10580 );
  sxc_write_ref( &(((ClassCSWriter*)context)->property_output_filename), String__before_first__String(((ClassCSWriter*)context)->property_output_filename,str1812.value) );
  if (!((ClassSlagCompiler*)sxc_singletons[14])->property_quiet)
  {
    Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1366.value),((ClassCSWriter*)context)->property_output_filename),str1812.value)));
  }
  sxc_write_ref( &(((ClassCSWriter*)context)->property_out), ((ClassTextWriter*)FileWriter__init__String_Logical(type_ClassFileWriter.create(),((ClassFile*)File__init__String(type_ClassFile.create(),String__opADD__String(((ClassCSWriter*)context)->property_output_filename,str1812.value)))->property_filepath,false)) );
  sxc_write_ref( &(((ClassCSWriter*)context)->property_base_name), String__after_last__Char(String__after_last__Char(((ClassCSWriter*)context)->property_output_filename,((SlagChar)47)),((SlagChar)92)) );
  CSWriter__assign_cross_compile_names(context);
  CSWriter__print_header(context);
  CSWriter__println(context);
  CSWriter__print_helper_functions(context);
  CSWriter__println(context);
  CSWriter__println__String(context,str1822.value);
  CSWriter__println__String(context,str1823.value);
  CSWriter__println__String(context,str1824.value);
  CSWriter__println(context);
  CSWriter__println__String(context,str1825.value);
  CSWriter__println__String(context,str247.value);
  ((ClassCSWriter*)context)->property_indent += 2;
  CSWriter__print_runtime_helpers(context);
  ((ClassCSWriter*)context)->property_indent -= 2;
  CSWriter__println__String(context,str397.value);
  CSWriter__println(context);
  CSWriter__println(context);
  CSWriter__print_types(context);
  CallFn__(20,((ClassCSWriter*)context)->property_out);
}

static void CSWriter__do_indent( SXCRef context )
{
  while ((((ClassCSWriter*)context)->property_col <= ((ClassCSWriter*)context)->property_indent))
  {
    CallFn__Char(46,((ClassCSWriter*)context)->property_out,((SlagChar)32));
    ++(((ClassCSWriter*)context)->property_col);
  }
}

static void CSWriter__print__Char( SXCRef context, SlagChar local_0_ch )
{
  CSWriter__do_indent(context);
  CallFn__Char(46,((ClassCSWriter*)context)->property_out,local_0_ch);
  ++(((ClassCSWriter*)context)->property_col);
}

static void CSWriter__print__String( SXCRef context, SXCRef local_0_st )
{
  SXCRef local_1__reader1234;
  SlagChar local_2_ch;

  CSWriter__do_indent(context);
  local_1__reader1234 = ((AspectReader_of_Char*)StringReader__init__String_Int32_Int32(type_ClassStringReader.create(),local_0_st,0,-1));
  while (CallFn____Logical(14,local_1__reader1234))
  {
    local_2_ch = CallFn____Char(29,local_1__reader1234);
    CSWriter__print__Char(context,local_2_ch);
  }
}

static void CSWriter__println__String( SXCRef context, SXCRef local_0_st )
{
  CSWriter__print__String(context,local_0_st);
  CSWriter__println(context);
}

static void CSWriter__println__Char( SXCRef context, SlagChar local_0_ch )
{
  CSWriter__print__Char(context,local_0_ch);
  CSWriter__println(context);
}

static void CSWriter__println( SXCRef context )
{
  CallFn__Char(46,((ClassCSWriter*)context)->property_out,((SlagChar)10));
  ((ClassCSWriter*)context)->property_col = 1;
  ++(((ClassCSWriter*)context)->property_lines);
}

static void CSWriter__print_header( SXCRef context )
{
  SlagInt32 local_0__local_1236;
  SlagInt32 local_1__last1237;
  SlagInt32 local_2__local_1238;
  SlagInt32 local_3__last1239;

  CSWriter__print__String(context,str1507.value);
  local_0__local_1236 = 1;
  local_1__last1237 = 77;
  while ((local_0__local_1236 <= local_1__last1237))
  {
    CSWriter__print__Char(context,((SlagChar)61));
    ++local_0__local_1236;
  }
  CSWriter__println(context);
  CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1508.value),((ClassCSWriter*)context)->property_output_filename),str1812.value)));
  CSWriter__println__String(context,String__opADD__String(str1509.value,Global__to_String__Object(sxc_singletons[21],Date__init(type_ClassDate.create()))));
  CSWriter__print__String(context,str1507.value);
  local_2__local_1238 = 1;
  local_3__last1239 = 77;
  while ((local_2__local_1238 <= local_3__last1239))
  {
    CSWriter__print__Char(context,((SlagChar)61));
    ++local_2__local_1238;
  }
  CSWriter__println(context);
}

static void CSWriter__print_helper_functions( SXCRef context )
{
}

static void CSWriter__assign_cross_compile_names( SXCRef context )
{
  SXCRef local_0__reader1240;
  SXCRef local_1_type;
  SXCRef local_2__reader1242;
  SXCRef local_3_m;
  SXCRef local_4__reader1244;
  SXCRef local_5_type;

  local_0__reader1240 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader1240))
  {
    local_1_type = ArrayReader_of_TypeInfo__read(local_0__reader1240);
    TypeInfo__x_name(local_1_type);
    if (String__opEQ__String(((ClassTypeInfo*)local_1_type)->property_name,str7.value))
    {
      sxc_write_ref( &(((ClassTypeInfo*)local_1_type)->property_x_name), str1146.value );
    }
  }
  local_2__reader1242 = ArrayList_of_MethodInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_method_list);
  while (ArrayReader_of_MethodInfo__has_another(local_2__reader1242))
  {
    local_3_m = ArrayReader_of_MethodInfo__read(local_2__reader1242);
    sxc_write_ref( &(((ClassMethodInfo*)local_3_m)->property_x_name), String__x_compatible(((ClassMethodInfo*)local_3_m)->property_name) );
    if (String__opEQ__String(MethodInfo__x_name(local_3_m),str1813.value))
    {
      sxc_write_ref( &(((ClassMethodInfo*)local_3_m)->property_x_name), str1814.value );
    }
  }
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str580.value,NULL))->property_x_name), str1815.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str581.value,NULL))->property_x_name), str1816.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str564.value,NULL))->property_x_name), str1817.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str577.value,NULL))->property_x_name), str1818.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str578.value,NULL))->property_x_name), str1819.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str579.value,NULL))->property_x_name), str1820.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str582.value,NULL))->property_x_name), str1821.value );
  sxc_write_ref( &(((ClassTypeInfo*)TypeManager__get__String_Token(sxc_singletons[7],str33.value,NULL))->property_x_name), str33.value );
  local_4__reader1244 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_4__reader1244))
  {
    local_5_type = ArrayReader_of_TypeInfo__read(local_4__reader1244);
    CSWriter__fix_array_type__TypeInfo(context,local_5_type);
  }
}

static void CSWriter__fix_array_type__TypeInfo( SXCRef context, SXCRef local_0_type )
{
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_array)->property_flags) != 0))
  {
    CSWriter__fix_array_type__TypeInfo(context,((ClassTypeInfo*)local_0_type)->property_element_type);
    sxc_write_ref( &(((ClassTypeInfo*)local_0_type)->property_x_name), String__opADD__String(TypeInfo__x_name(((ClassTypeInfo*)local_0_type)->property_element_type),str64.value) );
  }
}

static void CSWriter__print_runtime_helpers( SXCRef context )
{
  SXCRef local_0__reader1246;
  SXCRef local_1_type;
  SXCRef local_2_main_class;
  SXCRef local_3__reader1248;
  SXCRef local_4_type;
  SXCRef local_5__reader1250;
  SXCRef local_6_type;
  SXCRef local_7__reader1252;
  SXCRef local_8_type;

  local_0__reader1246 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_0__reader1246))
  {
    local_1_type = ArrayReader_of_TypeInfo__read(local_0__reader1246);
    if ((!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0) && !!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_1_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0)))
    {
      CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1826.value),TypeInfo__x_name(local_1_type)),str1827.value),TypeInfo__x_name(local_1_type)),str396.value)));
    }
  }
  local_2_main_class = ((ClassTypeManager*)sxc_singletons[7])->property_main_class;
  CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1826.value),TypeInfo__x_name(local_2_main_class)),str1828.value)));
  CSWriter__println(context);
  CSWriter__println__String(context,str1829.value);
  CSWriter__println__String(context,str247.value);
  ((ClassCSWriter*)context)->property_indent += 2;
  local_3__reader1248 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_3__reader1248))
  {
    local_4_type = ArrayReader_of_TypeInfo__read(local_3__reader1248);
    if (((!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_4_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0) && !!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_4_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0)) && (local_4_type != local_2_main_class)))
    {
      CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1830.value),TypeInfo__x_name(local_4_type)),str1831.value),TypeInfo__x_name(local_4_type)),str1832.value)));
    }
  }
  CSWriter__println(context);
  CSWriter__println__String(context,str1833.value);
  CSWriter__println(context);
  local_5__reader1250 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_5__reader1250))
  {
    local_6_type = ArrayReader_of_TypeInfo__read(local_5__reader1250);
    if (((!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_6_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0) && !!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_6_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0)) && (local_6_type != local_2_main_class)))
    {
      CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1830.value),TypeInfo__x_name(local_6_type)),str1834.value)));
    }
  }
  CSWriter__println(context);
  local_7__reader1252 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_7__reader1252))
  {
    local_8_type = ArrayReader_of_TypeInfo__read(local_7__reader1252);
    if (((!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_8_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0) && !!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_8_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0)) && (local_8_type != local_2_main_class)))
    {
      if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_8_type)->property_methods_by_signature)->property_data,str1261.value))
      {
        CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1830.value),TypeInfo__x_name(local_8_type)),str1835.value)));
      }
    }
  }
  ((ClassCSWriter*)context)->property_indent -= 2;
  CSWriter__println__String(context,str397.value);
  CSWriter__println(context);
  CSWriter__println__String(context,str1836.value);
  CSWriter__println__String(context,str247.value);
  ((ClassCSWriter*)context)->property_indent += 2;
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_2_main_class)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0))
  {
    if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_2_main_class)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0))
    {
      CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1830.value),TypeInfo__x_name(TypeInfo__manager_class(local_2_main_class))),str1837.value),TypeInfo__x_name(local_2_main_class)),str1832.value)));
      CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1838.value),TypeInfo__x_name(TypeInfo__manager_class(local_2_main_class))),str1839.value)));
    }
    else
    {
      CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1830.value),TypeInfo__x_name(local_2_main_class)),str1831.value),TypeInfo__x_name(local_2_main_class)),str1832.value)));
      CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1838.value),TypeInfo__x_name(local_2_main_class)),str396.value)));
    }
  }
  else
  {
    CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1840.value),TypeInfo__x_name(((ClassTypeManager*)sxc_singletons[7])->property_main_class)),str1832.value)));
  }
  CSWriter__println__String(context,str1841.value);
  ((ClassCSWriter*)context)->property_indent -= 2;
  CSWriter__println__String(context,str397.value);
  CSWriter__println(context);
}

static void CSWriter__print_types( SXCRef context )
{
  SXCRef local_0_type_string;
  SXCRef local_1_type_weak_reference;
  SXCRef local_2__reader1257;
  SXCRef local_3_type;
  SlagLogical local_4_wrote_base;
  SXCRef local_5__reader1264;
  SXCRef local_6_m;
  SlagLogical local_7_first;
  SXCRef local_8__reader1268;
  SXCRef local_9_a;
  SlagLogical local_10_new_property;
  SXCRef local_11__reader1273;
  SXCRef local_12_p;
  SlagLogical local_13_first;
  SXCRef local_14__reader1277;
  SXCRef local_15_p;
  SXCRef local_16__reader1279;
  SXCRef local_17_p;
  SXCRef local_18__reader1280;
  SXCRef local_19_p;
  SXCRef local_20__reader1283;
  SXCRef local_21_m;
  SXCRef local_22__reader1286;
  SXCRef local_23_base_aspect;
  SlagLogical local_24_found_overrides;
  SlagLogical local_25_found_inherited;
  SlagLogical local_26_found_default;
  SXCRef local_27__reader1287;
  SXCRef local_28_m;
  SXCRef local_29__reader1293;
  SXCRef local_30_m;
  SXCRef local_31__reader1297;
  SXCRef local_32_m;

  local_0_type_string = TypeManager__get__String_Token(sxc_singletons[7],str19.value,NULL);
  local_1_type_weak_reference = TypeManager__get__String_Token(sxc_singletons[7],str112.value,NULL);
  local_2__reader1257 = ArrayList_of_TypeInfo__create_reader(((ClassTypeManager*)sxc_singletons[7])->property_type_list);
  while (ArrayReader_of_TypeInfo__has_another(local_2__reader1257))
  {
    local_3_type = ArrayReader_of_TypeInfo__read(local_2__reader1257);
    if ((local_3_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_null))
    {
      goto next_10603;
    }
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_3_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_array)->property_flags) != 0))
    {
      goto next_10603;
    }
    if (String__opEQ__String(((ClassTypeInfo*)local_3_type)->property_name,str7.value))
    {
      goto next_10603;
    }
    if (String__opEQ__String(((ClassTypeInfo*)local_3_type)->property_name,str21.value))
    {
      goto next_10603;
    }
    if (String__opEQ__String(((ClassTypeInfo*)local_3_type)->property_name,str33.value))
    {
      goto next_10603;
    }
    local_4_wrote_base = false;
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_3_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0))
    {
      local_5__reader1264 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_methods);
      while (ArrayReader_of_MethodInfo__has_another(local_5__reader1264))
      {
        local_6_m = ArrayReader_of_MethodInfo__read(local_5__reader1264);
        if (((((ClassQualifiers*)((ClassMethodInfo*)local_6_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0))
        {
          CSWriter__print__String(context,str1842.value);
          goto end_10610;
        }
        next_10610:;
      }
      end_10610:;
      CSWriter__print__String(context,String__opADD__String(str1843.value,TypeInfo__x_name(local_3_type)));
      if (((local_3_type != ((ClassTypeManager*)sxc_singletons[7])->property_type_object) && !((((ClassQualifiers*)((ClassTypeInfo*)local_3_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0)))
      {
        CSWriter__print__String(context,String__opADD__String(str1309.value,TypeInfo__x_name(((ClassTypeInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_3_type)->property_base_types))->property_data)->data))[0])))));
        local_4_wrote_base = true;
      }
    }
    else if (((((ClassQualifiers*)((ClassTypeInfo*)local_3_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
    {
      CSWriter__print__String(context,String__opADD__String(str1844.value,TypeInfo__x_name(local_3_type)));
    }
    else if (((((ClassQualifiers*)((ClassTypeInfo*)local_3_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      CSWriter__print__String(context,String__opADD__String(str1845.value,TypeInfo__x_name(local_3_type)));
    }
    else
    {
      goto next_10603;
    }
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_3_type)->property_base_types))->property_count != 0))
    {
      local_7_first = true;
      local_8__reader1268 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_base_types);
      while (ArrayReader_of_TypeInfo__has_another(local_8__reader1268))
      {
        local_9_a = ArrayReader_of_TypeInfo__read(local_8__reader1268);
        if (((((ClassQualifiers*)((ClassTypeInfo*)local_9_a)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
        {
          if (local_4_wrote_base)
          {
            CSWriter__print__String(context,str634.value);
          }
          else
          {
            CSWriter__print__String(context,str1309.value);
            local_4_wrote_base = true;
          }
          CSWriter__print__String(context,TypeInfo__x_name(local_9_a));
        }
      }
    }
    CSWriter__println(context);
    CSWriter__println__String(context,str247.value);
    ((ClassCSWriter*)context)->property_indent += 2;
    if ((local_3_type == local_0_type_string))
    {
      CSWriter__println__String(context,str1846.value);
      CSWriter__println__String(context,str1847.value);
      CSWriter__println(context);
      CSWriter__println__String(context,str1848.value);
      CSWriter__println__String(context,str247.value);
      CSWriter__println__String(context,str1849.value);
      CSWriter__println__String(context,str1850.value);
      CSWriter__println__String(context,str1851.value);
      CSWriter__println__String(context,str1852.value);
      CSWriter__println__String(context,str1853.value);
      CSWriter__println__String(context,str1854.value);
      CSWriter__println__String(context,str1855.value);
      CSWriter__println__String(context,str1856.value);
      CSWriter__println__String(context,str397.value);
      CSWriter__println(context);
    }
    else if ((local_3_type == local_1_type_weak_reference))
    {
      CSWriter__println__String(context,str1857.value);
      CSWriter__println(context);
      CSWriter__println__String(context,str1858.value);
      CSWriter__println__String(context,str247.value);
      CSWriter__println__String(context,str1859.value);
      CSWriter__println__String(context,str397.value);
      CSWriter__println(context);
    }
    if (!((((ClassQualifiers*)((ClassTypeInfo*)local_3_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
    {
      local_10_new_property = false;
      local_11__reader1273 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_properties);
      while (CallFn____Logical(14,local_11__reader1273))
      {
        local_12_p = CallFn____Object(45,local_11__reader1273);
        if (((TypeInfo__base_class(local_3_type) == NULL) || !GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_PropertyInfo*)((ClassTypeInfo*)TypeInfo__base_class(local_3_type))->property_properties_by_name)->property_data,((ClassPropertyInfo*)local_12_p)->property_name)))
        {
          CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1860.value),TypeInfo__x_name(((ClassPropertyInfo*)local_12_p)->property_type)),str607.value),PropertyInfo__x_name(local_12_p)),str396.value)));
          local_10_new_property = true;
        }
      }
      if (local_10_new_property)
      {
        CSWriter__println(context);
      }
    }
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_3_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
    {
      CSWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1860.value),TypeInfo__x_name(local_3_type)),str61.value)));
      local_13_first = true;
      local_14__reader1277 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_properties);
      while (CallFn____Logical(14,local_14__reader1277))
      {
        local_15_p = CallFn____Object(45,local_14__reader1277);
        if (local_13_first)
        {
          local_13_first = false;
        }
        else
        {
          CSWriter__print__Char(context,((SlagChar)44));
        }
        CSWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str607.value),TypeInfo__x_name(((ClassPropertyInfo*)local_15_p)->property_type)),str607.value),PropertyInfo__x_name(local_15_p))));
      }
      CSWriter__println__String(context,str635.value);
      CSWriter__println__Char(context,((SlagChar)123));
      local_16__reader1279 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_properties);
      while (CallFn____Logical(14,local_16__reader1279))
      {
        local_17_p = CallFn____Object(45,local_16__reader1279);
        CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1861.value),PropertyInfo__x_name(local_17_p)),str1653.value),PropertyInfo__x_name(local_17_p)),str396.value)));
      }
      CSWriter__println__Char(context,((SlagChar)125));
      CSWriter__println(context);
      CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1862.value),TypeInfo__x_name(local_3_type)),str1520.value)));
      CSWriter__println__Char(context,((SlagChar)123));
      local_18__reader1280 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_properties);
      while (CallFn____Logical(14,local_18__reader1280))
      {
        local_19_p = CallFn____Object(45,local_18__reader1280);
        if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassPropertyInfo*)local_19_p)->property_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
        {
          CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1863.value),PropertyInfo__x_name(local_19_p)),str1864.value),PropertyInfo__x_name(local_19_p)),str1865.value)));
        }
        else
        {
          CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1866.value),PropertyInfo__x_name(local_19_p)),str1867.value),PropertyInfo__x_name(local_19_p)),str1868.value)));
        }
      }
      CSWriter__println__String(context,str1869.value);
      CSWriter__println__Char(context,((SlagChar)125));
      CSWriter__println(context);
    }
    else
    {
      if (((((ClassQualifiers*)((ClassTypeInfo*)local_3_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
      {
        local_20__reader1283 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_methods);
        while (ArrayReader_of_MethodInfo__has_another(local_20__reader1283))
        {
          local_21_m = ArrayReader_of_MethodInfo__read(local_20__reader1283);
          if ((((ClassMethodInfo*)local_21_m)->property_type_context == local_3_type))
          {
            {
              local_22__reader1286 = ArrayList_of_TypeInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_base_types);
              while (ArrayReader_of_TypeInfo__has_another(local_22__reader1286))
              {
                local_23_base_aspect = ArrayReader_of_TypeInfo__read(local_22__reader1286);
                if (!!GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)local_23_base_aspect)->property_methods_by_signature)->property_data,((ClassMethodInfo*)local_21_m)->property_signature)) goto unsatisfied_10631;
              }
              satisfied_10631:;
              {
                CSWriter__print_prototype__MethodInfo_Logical(context,local_21_m,true);
              }
              goto end_10631;
              unsatisfied_10631:;
            }
            end_10631:;
          }
        }
      }
      else
      {
        local_24_found_overrides = false;
        local_25_found_inherited = false;
        local_26_found_default = false;
        local_27__reader1287 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_methods);
        while (ArrayReader_of_MethodInfo__has_another(local_27__reader1287))
        {
          local_28_m = ArrayReader_of_MethodInfo__read(local_27__reader1287);
          if (String__opEQ__String(((ClassMethodInfo*)local_28_m)->property_name,str667.value))
          {
            if ((((ClassMethodInfo*)local_28_m)->property_type_context == local_3_type))
            {
              if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_28_m)->property_parameters))->property_count == 0))
              {
                local_26_found_default = true;
              }
              local_24_found_overrides = true;
              CSWriter__print_constructor__TypeInfo_MethodInfo(context,local_3_type,local_28_m);
            }
            else
            {
              local_25_found_inherited = true;
            }
          }
        }
        if (!local_24_found_overrides)
        {
          if (local_25_found_inherited)
          {
            local_29__reader1293 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_methods);
            while (ArrayReader_of_MethodInfo__has_another(local_29__reader1293))
            {
              local_30_m = ArrayReader_of_MethodInfo__read(local_29__reader1293);
              if (String__opEQ__String(((ClassMethodInfo*)local_30_m)->property_name,str667.value))
              {
                if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_30_m)->property_parameters))->property_count == 0))
                {
                  local_26_found_default = true;
                }
                CSWriter__print_constructor__TypeInfo_MethodInfo(context,local_3_type,local_30_m);
              }
            }
          }
        }
        if (((local_3_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_object) || (local_3_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_exception)))
        {
          CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1860.value),TypeInfo__x_name(local_3_type)),str1880.value)));
          CSWriter__println__String(context,str247.value);
          CSWriter__println__String(context,str1881.value);
          CSWriter__println__String(context,str397.value);
        }
        else
        {
          CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1860.value),TypeInfo__x_name(local_3_type)),str1882.value)));
          CSWriter__println__String(context,str247.value);
          CSWriter__println__String(context,str1881.value);
          CSWriter__println__String(context,str397.value);
        }
        CSWriter__println(context);
        local_31__reader1297 = ArrayList_of_MethodInfo__create_reader(((ClassTypeInfo*)local_3_type)->property_methods);
        while (ArrayReader_of_MethodInfo__has_another(local_31__reader1297))
        {
          local_32_m = ArrayReader_of_MethodInfo__read(local_31__reader1297);
          if ((((ClassMethodInfo*)local_32_m)->property_type_context == local_3_type))
          {
            CSWriter__print_method__MethodInfo(context,local_32_m);
          }
        }
      }
    }
    CSWriter__println(context);
    ((ClassCSWriter*)context)->property_indent -= 2;
    CSWriter__println__String(context,str397.value);
    CSWriter__println(context);
    CSWriter__println(context);
    next_10603:;
  }
  end_10603:;
  CSWriter__println(context);
}

static void CSWriter__print_constructor__TypeInfo_MethodInfo( SXCRef context, SXCRef local_0_type, SXCRef local_1_m )
{
  SlagLogical local_2_first;
  SXCRef local_3__reader1299;
  SXCRef local_4_p;
  SXCRef local_5__reader1302;
  SXCRef local_6_p;

  CSWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1860.value),TypeInfo__x_name(local_0_type)),str61.value)));
  local_2_first = true;
  local_3__reader1299 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_1_m)->property_parameters);
  while (CallFn____Logical(14,local_3__reader1299))
  {
    local_4_p = CallFn____Object(45,local_3__reader1299);
    if (local_2_first)
    {
      local_2_first = false;
    }
    else
    {
      CSWriter__print__Char(context,((SlagChar)44));
    }
    CSWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassParameterInfo*)local_4_p)->property_type)),str607.value),ParameterInfo__x_name(local_4_p))));
  }
  CSWriter__print__String(context,str62.value);
  if (((local_0_type != ((ClassTypeManager*)sxc_singletons[7])->property_type_object) && (local_0_type != ((ClassTypeManager*)sxc_singletons[7])->property_type_exception)))
  {
    CSWriter__print__String(context,str1878.value);
  }
  CSWriter__println(context);
  CSWriter__println__Char(context,((SlagChar)123));
  CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str69.value),MethodInfo__x_name(local_1_m)),str1879.value)));
  CSWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str69.value),MethodInfo__x_name(local_1_m)),str61.value)));
  local_2_first = true;
  local_5__reader1302 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_1_m)->property_parameters);
  while (CallFn____Logical(14,local_5__reader1302))
  {
    local_6_p = CallFn____Object(45,local_5__reader1302);
    if (local_2_first)
    {
      local_2_first = false;
    }
    else
    {
      CSWriter__print__Char(context,((SlagChar)44));
    }
    CSWriter__print__String(context,ParameterInfo__x_name(local_6_p));
  }
  CSWriter__println__String(context,str1554.value);
  CSWriter__println__Char(context,((SlagChar)125));
  CSWriter__println(context);
}

static void CSWriter__print_prototype__MethodInfo_Logical( SXCRef context, SXCRef local_0_m, SlagLogical local_1_semicolon )
{
  SlagLogical local_2_first;
  SXCRef local_3__reader1306;
  SXCRef local_4_p;
  SXCRef local_5_which_1309;

  sxc_write_ref( &(((ClassCSWriter*)context)->property_this_method), local_0_m );
  if (!local_1_semicolon)
  {
    CSWriter__print__String(context,str1860.value);
  }
  if ((((ClassMethodInfo*)local_0_m)->property_return_type != NULL))
  {
    CSWriter__print__String(context,String__opADD__String(TypeInfo__x_name(MethodInfo__base_return_type(local_0_m)),str607.value));
  }
  else
  {
    CSWriter__print__String(context,str1529.value);
  }
  CSWriter__print__String(context,String__opADD__String(MethodInfo__x_name(local_0_m),str61.value));
  local_2_first = true;
  local_3__reader1306 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_0_m)->property_parameters);
  while (CallFn____Logical(14,local_3__reader1306))
  {
    local_4_p = CallFn____Object(45,local_3__reader1306);
    if (local_2_first)
    {
      local_2_first = false;
    }
    else
    {
      CSWriter__print__Char(context,((SlagChar)44));
    }
    CSWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassParameterInfo*)local_4_p)->property_type)),str607.value),ParameterInfo__x_name(local_4_p))));
  }
  if (local_1_semicolon)
  {
    CSWriter__println__String(context,str1554.value);
  }
  else
  {
    CSWriter__print__String(context,str1870.value);
    local_5_which_1309 = ((ClassMethodInfo*)local_0_m)->property_return_type;
    if ((local_5_which_1309 == NULL))
    {
      CSWriter__println__String(context,str397.value);
    }
    else if ((local_5_which_1309 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      CSWriter__println__String(context,str1871.value);
    }
    else if ((local_5_which_1309 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      CSWriter__println__String(context,str1872.value);
    }
    else if ((local_5_which_1309 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      CSWriter__println__String(context,str1873.value);
    }
    else if ((local_5_which_1309 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      CSWriter__println__String(context,str1874.value);
    }
    else if ((local_5_which_1309 == ((ClassTypeManager*)sxc_singletons[7])->property_type_char))
    {
      CSWriter__println__String(context,str1875.value);
    }
    else if ((local_5_which_1309 == ((ClassTypeManager*)sxc_singletons[7])->property_type_byte))
    {
      CSWriter__println__String(context,str1876.value);
    }
    else if ((local_5_which_1309 == ((ClassTypeManager*)sxc_singletons[7])->property_type_logical))
    {
      CSWriter__println__String(context,str1874.value);
    }
    else
    {
      CSWriter__println__String(context,str1877.value);
    }
  }
}

static void CSWriter__print_method__MethodInfo( SXCRef context, SXCRef local_0_m )
{
  SXCRef local_1_base_m;
  SlagLogical local_2_first;
  SXCRef local_3__reader1315;
  SXCRef local_4_p;
  SXCRef local_5_args;
  SXCRef local_6__reader1320;
  SXCRef local_7_p;
  SlagLogical local_8_any_locals;
  SXCRef local_9__reader1321;
  SXCRef local_10_v;

  if (((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_0_m)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
  {
    return;
  }
  if (String__opEQ__String(((ClassTypeInfo*)((ClassMethodInfo*)local_0_m)->property_type_context)->property_name,str7.value))
  {
    return;
  }
  sxc_write_ref( &(((ClassCSWriter*)context)->property_this_method), local_0_m );
  if (((((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0))
  {
    CSWriter__print__String(context,str1883.value);
  }
  else if (((((((ClassQualifiers*)((ClassTypeInfo*)((ClassMethodInfo*)local_0_m)->property_type_context)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0) && (TypeInfo__base_class(((ClassMethodInfo*)local_0_m)->property_type_context) != NULL)) && GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)TypeInfo__base_class(((ClassMethodInfo*)local_0_m)->property_type_context))->property_methods_by_signature)->property_data,((ClassMethodInfo*)local_0_m)->property_signature)))
  {
    local_1_base_m = ((ClassMethodInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_MethodInfo*)((ClassTypeInfo*)TypeInfo__base_class(((ClassMethodInfo*)local_0_m)->property_type_context))->property_methods_by_signature)->property_data,((ClassMethodInfo*)local_0_m)->property_signature));
    if ((((ClassMethodInfo*)local_1_base_m)->property_called || (((ClassMethodInfo*)local_1_base_m)->property_index != -1)))
    {
      CSWriter__print__String(context,str1884.value);
    }
    else
    {
      CSWriter__print__String(context,str1885.value);
    }
  }
  else
  {
    CSWriter__print__String(context,str1885.value);
  }
  if ((((ClassMethodInfo*)local_0_m)->property_return_type != NULL))
  {
    CSWriter__print__String(context,String__opADD__String(TypeInfo__x_name(MethodInfo__base_return_type(local_0_m)),str607.value));
  }
  else
  {
    CSWriter__print__String(context,str1529.value);
  }
  CSWriter__print__String(context,String__opADD__String(MethodInfo__x_name(local_0_m),str61.value));
  local_2_first = true;
  local_3__reader1315 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_0_m)->property_parameters);
  while (CallFn____Logical(14,local_3__reader1315))
  {
    local_4_p = CallFn____Object(45,local_3__reader1315);
    if (local_2_first)
    {
      local_2_first = false;
    }
    else
    {
      CSWriter__print__Char(context,((SlagChar)44));
    }
    CSWriter__print__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassParameterInfo*)local_4_p)->property_type)),str607.value),ParameterInfo__x_name(local_4_p))));
  }
  CSWriter__print__String(context,str62.value);
  if (((((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0))
  {
    CSWriter__println__String(context,str396.value);
    CSWriter__println(context);
    return;
  }
  else
  {
    CSWriter__println(context);
  }
  CSWriter__println__String(context,str247.value);
  ((ClassCSWriter*)context)->property_indent += 2;
  if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_0_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))))->property_flags == 0))
  {
    if ((((ClassMethodInfo*)local_0_m)->property_return_type != NULL))
    {
      CSWriter__print__String(context,str810.value);
    }
    local_5_args = ArrayList_of_String__init(type_ClassArrayList_of_String.create());
    local_6__reader1320 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_0_m)->property_parameters);
    while (CallFn____Logical(14,local_6__reader1320))
    {
      local_7_p = CallFn____Object(45,local_6__reader1320);
      ArrayList_of_Object__add__Object(local_5_args,ParameterInfo__x_name(local_7_p));
    }
    CSWriter__print__String(context,CSWriter__native_call__String_String_String_ArrayList_of_String(context,((ClassMethodInfo*)local_0_m)->property_full_signature,MethodInfo__x_name(local_0_m),str999.value,local_5_args));
    CSWriter__println__String(context,str396.value);
    ((ClassCSWriter*)context)->property_indent -= 2;
    CSWriter__println__String(context,str397.value);
    CSWriter__println(context);
    return;
  }
  local_8_any_locals = false;
  local_9__reader1321 = ArrayList_of_LocalVarInfo__from__Int32(((ClassMethodInfo*)local_0_m)->property_local_vars,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_count);
  while (ArrayReader_of_LocalVarInfo__has_another(local_9__reader1321))
  {
    local_10_v = ArrayReader_of_LocalVarInfo__read(local_9__reader1321);
    if (!((ClassLocalVarInfo*)local_10_v)->property_is_catch_var)
    {
      local_8_any_locals = true;
      CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),TypeInfo__x_name(((ClassLocalVarInfo*)local_10_v)->property_type)),str607.value),LocalVarInfo__x_name(local_10_v)),str396.value)));
    }
  }
  if (local_8_any_locals)
  {
    CSWriter__println(context);
  }
  CmdStatementList__to_cs(((ClassMethodInfo*)local_0_m)->property_body);
  ((ClassCSWriter*)context)->property_indent -= 2;
  CSWriter__println__String(context,str397.value);
  CSWriter__println(context);
}

static void CSWriter__write_continue_id__CmdStructure( SXCRef context, SXCRef local_0_cmd )
{
  if (((ClassCmdStructure*)local_0_cmd)->property_referenced)
  {
    CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1657.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdStructure*)local_0_cmd)->property_id,10))),str1635.value)));
  }
}

static void CSWriter__write_end_id__CmdStructure( SXCRef context, SXCRef local_0_cmd )
{
  if (((ClassCmdStructure*)local_0_cmd)->property_referenced)
  {
    CSWriter__println__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1634.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdStructure*)local_0_cmd)->property_id,10))),str1635.value)));
  }
}

static SlagObject* CSWriter__native_call__String_String_String_CmdList( SXCRef context, SXCRef local_0_full_sig, SXCRef local_1_method_name, SXCRef local_2_context, SXCRef local_3_args )
{
  SXCRef local_4_string_args;
  SXCRef local_5__reader1326;
  SXCRef local_6_arg;

  local_4_string_args = ArrayList_of_String__init(type_ClassArrayList_of_String.create());
  local_5__reader1326 = ArrayList_of_Cmd__create_reader(local_3_args);
  while (CallFn____Logical(14,local_5__reader1326))
  {
    local_6_arg = CallFn____Object(45,local_5__reader1326);
    ArrayList_of_Object__add__Object(local_4_string_args,CallFn____Object(35,local_6_arg));
  }
  return CSWriter__native_call__String_String_String_ArrayList_of_String(context,local_0_full_sig,local_1_method_name,local_2_context,local_4_string_args);
}

static SlagObject* CSWriter__native_call__String_String_String_ArrayList_of_String( SXCRef context, SXCRef local_0_full_sig, SXCRef local_1_method_name, SXCRef local_2_context, SXCRef local_3_args )
{
  SlagChar local_4_which_1327;
  SXCRef local_5_which_1328;
  SXCRef local_6_which_1329;
  SXCRef local_7_which_1330;
  SXCRef local_8_which_1331;
  SXCRef local_9_buffer;
  SXCRef local_10__reader1332;
  SXCRef local_11_arg;

  local_4_which_1327 = String__get__Int32(local_0_full_sig,0);
  if ((((SlagInt32)local_4_which_1327) == 71))
  {
    local_5_which_1328 = local_0_full_sig;
    if (String__opEQ__String(local_5_which_1328,str1575.value))
    {
      return str1886.value;
    }
    else if (String__opEQ__String(local_5_which_1328,str1887.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1888.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1554.value));
    }
  }
  else if ((((SlagInt32)local_4_which_1327) == 77))
  {
    local_6_which_1329 = local_0_full_sig;
    if (String__opEQ__String(local_6_which_1329,str1577.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1889.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_6_which_1329,str1579.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1889.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_6_which_1329,str1580.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1889.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_6_which_1329,str1582.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1890.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_6_which_1329,str1584.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1891.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str62.value));
    }
    else if (String__opEQ__String(local_6_which_1329,str1586.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1892.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1588.value));
    }
    else if (String__opEQ__String(local_6_which_1329,str1589.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1893.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1588.value));
    }
    else if (String__opEQ__String(local_6_which_1329,str1591.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1894.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1588.value));
    }
    else if (String__opEQ__String(local_6_which_1329,str1593.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1895.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1595.value));
    }
    else if (String__opEQ__String(local_6_which_1329,str1596.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1896.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1595.value));
    }
    else if (String__opEQ__String(local_6_which_1329,str1598.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1897.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1595.value));
    }
    else if (String__opEQ__String(local_6_which_1329,str1600.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1898.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str395.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[1]))),str1595.value));
    }
  }
  else if ((((SlagInt32)local_4_which_1327) == 83))
  {
    local_7_which_1330 = local_0_full_sig;
    if (String__opEQ__String(local_7_which_1330,str1602.value))
    {
      return String__opADD__String(local_2_context,str1899.value);
    }
    else if (String__opEQ__String(local_7_which_1330,str1605.value))
    {
      return String__opADD__String(local_2_context,str1900.value);
    }
    else if (String__opEQ__String(local_7_which_1330,str1901.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_2_context),str1902.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str54.value));
    }
    else if (String__opEQ__String(local_7_which_1330,str1903.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1904.value),local_2_context),str1905.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1906.value));
    }
    else if (String__opEQ__String(local_7_which_1330,str1907.value))
    {
      return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1904.value),local_2_context),str1905.value),((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_args))->property_data)->data))[0]))),str1595.value));
    }
    else if (String__opEQ__String(local_7_which_1330,str1908.value))
    {
      return str1909.value;
    }
  }
  else
  {
    local_8_which_1331 = local_0_full_sig;
  }
  local_9_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  StringBuilder__print__String(local_9_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1910.value),String__after_first__String(String__before_first__String(local_0_full_sig,str294.value),str1493.value)),str38.value),local_1_method_name)));
  StringBuilder__print__String(local_9_buffer,String__opADD__String(str61.value,local_2_context));
  local_10__reader1332 = ArrayList_of_String__create_reader(local_3_args);
  while (ArrayReader_of_String__has_another(local_10__reader1332))
  {
    local_11_arg = ArrayReader_of_String__read(local_10__reader1332);
    StringBuilder__print__String(local_9_buffer,String__opADD__String(str395.value,local_11_arg));
  }
  StringBuilder__print__String(local_9_buffer,str62.value);
  return StringBuilder__to_String(local_9_buffer);
}

void CSWriter__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassCSWriter*)context)->property_col = 1;
}

SlagObject* CSWriter__type_name( SXCRef context )
{
  return str1811.value;
}

static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdOr.create(),((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs));
}

static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,String__opADD__String(str689.value,str386.value));
  if ((local_0_call != NULL))
  {
    return local_0_call;
  }
  SlagAnalyzer__cast_operands_to_standard_integer_or_logical__CmdBinary(sxc_singletons[8],context);
  return CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__optimize(context);
}

static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__optimize( SXCRef context )
{
  SXCRef local_0_left;
  SXCRef local_1_right;
  SXCRef local_2_left;
  SXCRef local_3_right;
  SXCRef local_4_left;
  SXCRef local_5_right;

  if ((sxc_instance_of(((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    if (sxc_instance_of(((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_0_left = ((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs;
      local_1_right = ((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs;
      ((ClassCmdLiteralInt64*)local_0_left)->property_value = (((ClassCmdLiteralInt64*)local_0_left)->property_value|((ClassCmdLiteralInt64*)local_1_right)->property_value);
      return ((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs;
      local_3_right = ((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = (((ClassCmdLiteralInt32*)local_2_left)->property_value|((ClassCmdLiteralInt32*)local_3_right)->property_value);
      return ((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs,&type_ClassCmdLiteralLogical))
    {
      local_4_left = ((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs;
      local_5_right = ((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs;
      ((ClassCmdLiteralLogical*)local_4_left)->property_value = (((ClassCmdLiteralLogical*)local_4_left)->property_value|((ClassCmdLiteralLogical*)local_5_right)->property_value);
      return ((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_or)->property_ordinal);
  CallFn__(7,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs);
  CallFn__(7,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs);
}

static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_cpp( SXCRef context )
{
  SXCRef local_0_which_7784;

  local_0_which_7784 = str386.value;
  if (String__opEQ__String(local_0_which_7784,str385.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs)),str392.value),CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs)),str386.value),CallFn____Object(15,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_cs( SXCRef context )
{
  SXCRef local_0_which_7785;

  local_0_which_7785 = str386.value;
  if (String__opEQ__String(local_0_which_7785,str385.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs)),str392.value),CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs)),str386.value),CallFn____Object(35,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_java( SXCRef context )
{
  SXCRef local_0_which_7786;

  local_0_which_7786 = str386.value;
  if (String__opEQ__String(local_0_which_7786,str385.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs)),str392.value),CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_lhs)),str386.value),CallFn____Object(41,((ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or*)context)->property_rhs)),str62.value);
  }
}

void CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__type_name( SXCRef context )
{
  return str831.value;
}

static SlagObject* KeywordPairing__init__String_String( SXCRef context, SXCRef local_0_open_6808, SXCRef local_1_close_6807 )
{
  sxc_write_ref( &(((ClassKeywordPairing*)context)->property_open), local_0_open_6808 );
  sxc_write_ref( &(((ClassKeywordPairing*)context)->property_close), local_1_close_6807 );
  return context;
}

void KeywordPairing__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* KeywordPairing__type_name( SXCRef context )
{
  return str472.value;
}

SlagObject* Mapping_of_Int32_and_KeywordPairing__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMapping_of_Int32_and_KeywordPairing*)context)->property_key,10))),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Int32_and_KeywordPairing*)context)->property_value)));
}

void Mapping_of_Int32_and_KeywordPairing__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_Int32_and_KeywordPairing__type_name( SXCRef context )
{
  return str714.value;
}

SlagObject* UnsupportedMethodError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassUnsupportedMethodError*)context)->property_message), str153.value );
  return context;
}

SlagObject* UnsupportedMethodError__init__String( SXCRef context, SXCRef local_0_message_3877 )
{
  sxc_write_ref( &(((ClassUnsupportedMethodError*)context)->property_message), local_0_message_3877 );
  return context;
}

void UnsupportedMethodError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* UnsupportedMethodError__type_name( SXCRef context )
{
  return str154.value;
}

static SlagObject* CmdExplicitListLiteral__init__Token_TypeInfo_ArrayList_of_Cmd( SXCRef context, SXCRef local_0_t_7897, SXCRef local_1_of_type_7896, SXCRef local_2_args_7895 )
{
  sxc_write_ref( &(((ClassCmdExplicitListLiteral*)context)->property_t), local_0_t_7897 );
  sxc_write_ref( &(((ClassCmdExplicitListLiteral*)context)->property_of_type), local_1_of_type_7896 );
  sxc_write_ref( &(((ClassCmdExplicitListLiteral*)context)->property_args), local_2_args_7895 );
  return context;
}

static SlagObject* CmdExplicitListLiteral__create_duplicate( SXCRef context )
{
  SXCRef local_0_args2;
  SXCRef local_1__reader2774;
  SXCRef local_2_arg;

  local_0_args2 = ArrayList_of_Cmd__init__Int32(type_ClassArrayList_of_Cmd.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_count);
  local_1__reader2774 = ArrayList_of_Cmd__create_reader(((ClassCmdExplicitListLiteral*)context)->property_args);
  while (CallFn____Logical(14,local_1__reader2774))
  {
    local_2_arg = CallFn____Object(45,local_1__reader2774);
    ArrayList_of_Object__add__Object(local_0_args2,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_2_arg));
  }
  return CmdExplicitListLiteral__init__Token_TypeInfo_ArrayList_of_Cmd(type_ClassCmdExplicitListLiteral.create(),((ClassCmdExplicitListLiteral*)context)->property_t,((ClassCmdExplicitListLiteral*)context)->property_of_type,local_0_args2);
}

static SlagObject* CmdExplicitListLiteral__resolve( SXCRef context )
{
  SlagLogical local_0_contains_generator;
  SlagInt32 local_1_index;
  SlagInt32 local_2__count2775;
  SlagInt32 local_3_i;
  SlagInt32 local_4__count2777;
  SXCRef local_5_arg;
  SXCRef local_6_arg_type;
  SXCRef local_7_readable_type;
  SlagInt32 local_8_i;
  SlagInt32 local_9__count2781;
  SXCRef local_10_arg;
  SXCRef local_11_arg_type;
  SXCRef local_12_list_type;
  SXCRef local_13_new_obj;
  SXCRef local_14_list_type;
  SXCRef local_15_list;
  SXCRef local_16_data_type;
  SXCRef local_17_new_obj;
  SXCRef local_18_list_type;
  SXCRef local_19_list;

  local_0_contains_generator = false;
  {
    local_1_index = 0;
    local_2__count2775 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_count;
    while ((local_1_index < local_2__count2775))
    {
      sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_data)->data))+local_1_index, CallFn____Object(16,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_data)->data))[local_1_index]))) );
      ++local_1_index;
    }
  }
  TypeInfo__resolve(((ClassCmdExplicitListLiteral*)context)->property_of_type);
  if ((String__index_of__String_Int32(((ClassTypeInfo*)((ClassCmdExplicitListLiteral*)context)->property_of_type)->property_name,str1164.value,0) == 0))
  {
    sxc_write_ref( &(((ClassCmdExplicitListLiteral*)context)->property_of_type), TypeInfo__readable_type(((ClassCmdExplicitListLiteral*)context)->property_of_type) );
  }
  {
    local_3_i = 0;
    local_4__count2777 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_count;
    while ((local_3_i < local_4__count2777))
    {
      local_5_arg = ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_data)->data))[local_3_i]));
      local_6_arg_type = CallFn____Object(0,local_5_arg);
      if (TypeInfo__is_compatible_with__TypeInfo(local_6_arg_type,((ClassCmdExplicitListLiteral*)context)->property_of_type))
      {
        sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_data)->data))+local_3_i, SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],local_5_arg,((ClassCmdExplicitListLiteral*)context)->property_of_type,false) );
      }
      else
      {
        local_7_readable_type = TypeInfo__readable_type(local_6_arg_type);
        if (TypeInfo__is_compatible_with__TypeInfo(local_7_readable_type,((ClassCmdExplicitListLiteral*)context)->property_of_type))
        {
          local_0_contains_generator = true;
        }
        else
        {
          SLAG_THROW( Cmd__error__String(local_5_arg,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1165.value),Global__to_String__Object(sxc_singletons[21],local_7_readable_type)),str1166.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdExplicitListLiteral*)context)->property_of_type)),str38.value))) );
        }
      }
      ++local_3_i;
    }
  }
  if (local_0_contains_generator)
  {
    {
      local_8_i = 0;
      local_9__count2781 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_count;
      while ((local_8_i < local_9__count2781))
      {
        local_10_arg = ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_data)->data))[local_8_i]));
        local_11_arg_type = CallFn____Object(0,local_10_arg);
        if (TypeInfo__is_compatible_with__TypeInfo(local_11_arg_type,((ClassCmdExplicitListLiteral*)context)->property_of_type))
        {
          local_12_list_type = TypeManager__get_type_reference__Token_String_TypeInfo(sxc_singletons[7],((ClassCmd*)local_10_arg)->property_t,str650.value,local_11_arg_type);
          TypeInfo__resolve(local_12_list_type);
          local_13_new_obj = CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList(type_ClassCmdUnresolvedNewObject.create(),((ClassCmd*)local_10_arg)->property_t,local_12_list_type,CmdList__init__Cmd(type_ClassCmdList.create(),CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmd*)local_10_arg)->property_t,1)));
          local_13_new_obj = CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmd*)local_10_arg)->property_t,local_13_new_obj,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmd*)local_10_arg)->property_t,str968.value,CmdList__init__Cmd(type_ClassCmdList.create(),local_10_arg)));
          sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_data)->data))+local_8_i, CallFn____Object(16,local_13_new_obj) );
        }
        ++local_8_i;
      }
    }
    TypeInfo__resolve(((ClassCmdExplicitListLiteral*)context)->property_of_type);
  }
  if (local_0_contains_generator)
  {
    local_14_list_type = TypeManager__get_type_reference__Token_String_TypeInfo(sxc_singletons[7],((ClassCmdExplicitListLiteral*)context)->property_t,str1067.value,((ClassCmdExplicitListLiteral*)context)->property_of_type);
    TypeInfo__resolve(local_14_list_type);
    local_14_list_type = TypeManager__get_type_reference__Token_String_TypeInfo(sxc_singletons[7],((ClassCmdExplicitListLiteral*)context)->property_t,str650.value,local_14_list_type);
    TypeInfo__resolve(local_14_list_type);
    local_15_list = SlagAnalyzer__assemble_list__Token_TypeInfo_ArrayList_of_Cmd_Int32(sxc_singletons[8],((ClassCmdExplicitListLiteral*)context)->property_t,local_14_list_type,((ClassCmdExplicitListLiteral*)context)->property_args,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_count);
    local_15_list = CmdCoerceAs__init__Token_Cmd_TypeInfo(type_ClassCmdCoerceAs.create(),((ClassCmd*)local_15_list)->property_t,local_15_list,local_14_list_type);
    local_16_data_type = TypeManager__get_type_reference__Token_String_TypeInfo(sxc_singletons[7],((ClassCmd*)local_15_list)->property_t,str1167.value,((ClassCmdExplicitListLiteral*)context)->property_of_type);
    TypeInfo__resolve(local_16_data_type);
    local_17_new_obj = CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList(type_ClassCmdUnresolvedNewObject.create(),((ClassCmd*)local_15_list)->property_t,local_16_data_type,CmdList__init__Cmd(type_ClassCmdList.create(),local_15_list));
    return CmdUnresolvedNewObject__resolve(local_17_new_obj);
  }
  else
  {
    local_18_list_type = TypeManager__get_type_reference__Token_String_TypeInfo(sxc_singletons[7],((ClassCmdExplicitListLiteral*)context)->property_t,str650.value,((ClassCmdExplicitListLiteral*)context)->property_of_type);
    TypeInfo__resolve(local_18_list_type);
    local_19_list = SlagAnalyzer__assemble_list__Token_TypeInfo_ArrayList_of_Cmd_Int32(sxc_singletons[8],((ClassCmdExplicitListLiteral*)context)->property_t,local_18_list_type,((ClassCmdExplicitListLiteral*)context)->property_args,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdExplicitListLiteral*)context)->property_args))->property_count);
    local_19_list = CmdCoerceAs__init__Token_Cmd_TypeInfo(type_ClassCmdCoerceAs.create(),((ClassCmd*)local_19_list)->property_t,local_19_list,local_18_list_type);
    return CallFn____Object(16,local_19_list);
  }
}

void CmdExplicitListLiteral__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdExplicitListLiteral__type_name( SXCRef context )
{
  return str861.value;
}

static SlagObject* CmdForEachInWithRemoveCurrent__create_duplicate( SXCRef context )
{
  return CmdForEach__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList(type_ClassCmdForEachInWithRemoveCurrent.create(),((ClassCmdForEachInWithRemoveCurrent*)context)->property_t,((ClassCmdForEachInWithRemoveCurrent*)context)->property_id,((ClassCmdForEachInWithRemoveCurrent*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdForEachInWithRemoveCurrent*)context)->property_control),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdForEachInWithRemoveCurrent*)context)->property_body));
}

static SlagObject* CmdForEachInWithRemoveCurrent__resolve( SXCRef context )
{
  SXCRef local_0_control_type;
  SXCRef local_1_ctrl_t;
  SXCRef local_2_result;
  SXCRef local_3_list_name;
  SXCRef local_4_list_info;
  SXCRef local_5_count_name;
  SXCRef local_6_count_info;
  SXCRef local_7_write_pos_name;
  SXCRef local_8_write_pos_info;
  SXCRef local_9_read_pos_name;
  SXCRef local_10_read_pos_info;
  SXCRef local_11_kept_name;
  SXCRef local_12_kept_info;
  SXCRef local_13_cmd_body;
  SXCRef local_14_cmd_if;
  SXCRef local_15_cmd_foreach;
  SXCRef local_16_cmd_try;
  SXCRef local_17_err_name;
  SXCRef local_18_err_info;
  SXCRef local_19_cmd_catch;
  SXCRef local_20_resolved_result;

  sxc_write_ref( &(((ClassCmdForEachInWithRemoveCurrent*)context)->property_control), CallFn____Object(16,((ClassCmdForEachInWithRemoveCurrent*)context)->property_control) );
  local_0_control_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdForEachInWithRemoveCurrent*)context)->property_control);
  if (!TypeInfo__instance_of__TypeInfo(local_0_control_type,((ClassTypeManager*)sxc_singletons[7])->property_type_list_type))
  {
    SLAG_THROW( Cmd__error__String(context,str1230.value) );
  }
  local_1_ctrl_t = ((ClassCmd*)((ClassCmdForEachInWithRemoveCurrent*)context)->property_control)->property_t;
  local_2_result = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),local_1_ctrl_t,6);
  local_3_list_name = String__opADD__String(str1231.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdForEachInWithRemoveCurrent*)context)->property_id,10)));
  local_4_list_info = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),local_1_ctrl_t,((ClassContext*)sxc_singletons[10])->property_this_method,((ClassTypeManager*)sxc_singletons[7])->property_type_var,local_3_list_name,-1);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_2_result)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),local_1_ctrl_t,local_4_list_info,((ClassCmdForEachInWithRemoveCurrent*)context)->property_control));
  local_5_count_name = String__opADD__String(str1232.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdForEachInWithRemoveCurrent*)context)->property_id,10)));
  local_6_count_info = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),local_1_ctrl_t,((ClassContext*)sxc_singletons[10])->property_this_method,((ClassTypeManager*)sxc_singletons[7])->property_type_var,local_5_count_name,-1);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_2_result)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),local_1_ctrl_t,local_6_count_info,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_1_ctrl_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_1_ctrl_t,local_3_list_name,NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_1_ctrl_t,str1233.value,NULL))));
  local_7_write_pos_name = String__opADD__String(str1234.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdForEachInWithRemoveCurrent*)context)->property_id,10)));
  local_8_write_pos_info = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),local_1_ctrl_t,((ClassContext*)sxc_singletons[10])->property_this_method,((ClassTypeManager*)sxc_singletons[7])->property_type_var,local_7_write_pos_name,-1);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_2_result)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),local_1_ctrl_t,local_8_write_pos_info,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_1_ctrl_t,0)));
  local_9_read_pos_name = String__opADD__String(str1235.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdForEachInWithRemoveCurrent*)context)->property_id,10)));
  local_10_read_pos_info = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),local_1_ctrl_t,((ClassContext*)sxc_singletons[10])->property_this_method,((ClassTypeManager*)sxc_singletons[7])->property_type_var,local_9_read_pos_name,-1);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_2_result)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),local_1_ctrl_t,local_10_read_pos_info,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_1_ctrl_t,0)));
  local_11_kept_name = String__opADD__String(str1236.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdForEachInWithRemoveCurrent*)context)->property_id,10)));
  local_12_kept_info = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),local_1_ctrl_t,((ClassContext*)sxc_singletons[10])->property_this_method,((ClassTypeManager*)sxc_singletons[7])->property_type_var,local_11_kept_name,-1);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_2_result)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),local_1_ctrl_t,local_12_kept_info,CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),local_1_ctrl_t,false)));
  local_13_cmd_body = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),local_1_ctrl_t,3);
  local_14_cmd_if = CmdIf__init__Token_Int32_Cmd_CmdStatementList(type_ClassCmdIf.create(),local_1_ctrl_t,SlagParserManager__unique_id(sxc_singletons[35]),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_1_ctrl_t,local_11_kept_name,NULL),CmdStatementList__init__Cmd(type_ClassCmdStatementList.create(),CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo(type_ClassCmdLocalVarIncrement.create(),local_1_ctrl_t,local_8_write_pos_info)));
  sxc_write_ref( &(((ClassCmdIf*)local_14_cmd_if)->property_else_cmd), CmdStatementList__init__Cmd(type_ClassCmdStatementList.create(),CmdLocalVarWrite__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarWrite.create(),local_1_ctrl_t,local_12_kept_info,CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),local_1_ctrl_t,true))) );
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,local_14_cmd_if);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_1_ctrl_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_1_ctrl_t,local_3_list_name,NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_1_ctrl_t,str998.value,CmdList__init__Cmd_Cmd(type_ClassCmdList.create(),CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),local_1_ctrl_t,local_8_write_pos_info),CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),local_1_ctrl_t,((ClassCmdForEachInWithRemoveCurrent*)context)->property_var_info)))));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo(type_ClassCmdLocalVarIncrement.create(),local_1_ctrl_t,local_10_read_pos_info));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,((ClassCmdForEachInWithRemoveCurrent*)context)->property_body);
  local_15_cmd_foreach = CmdForEachIn__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList_Logical(type_ClassCmdForEachIn.create(),local_1_ctrl_t,((ClassCmdForEachInWithRemoveCurrent*)context)->property_id,((ClassCmdForEachInWithRemoveCurrent*)context)->property_var_info,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_1_ctrl_t,local_3_list_name,NULL),local_13_cmd_body,false);
  local_13_cmd_body = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),local_1_ctrl_t,3);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,local_15_cmd_foreach);
  local_14_cmd_if = CmdIf__init__Token_Int32_Cmd_CmdStatementList(type_ClassCmdIf.create(),local_1_ctrl_t,SlagParserManager__unique_id(sxc_singletons[35]),CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),local_1_ctrl_t,local_12_kept_info),CmdStatementList__init__Cmd(type_ClassCmdStatementList.create(),CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo(type_ClassCmdLocalVarIncrement.create(),local_1_ctrl_t,local_8_write_pos_info)));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,local_14_cmd_if);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_1_ctrl_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_1_ctrl_t,local_3_list_name,NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_1_ctrl_t,str1237.value,CmdList__init__Cmd_Cmd(type_ClassCmdList.create(),CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),local_1_ctrl_t,local_8_write_pos_info),CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdSub.create(),local_1_ctrl_t,CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),local_1_ctrl_t,local_10_read_pos_info),CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_1_ctrl_t,1))))));
  local_16_cmd_try = CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdTry.create(),local_1_ctrl_t,SlagParserManager__unique_id(sxc_singletons[35]),local_13_cmd_body);
  local_17_err_name = String__opADD__String(str1238.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],SlagParserManager__unique_id(sxc_singletons[35]),10)));
  local_18_err_info = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),local_1_ctrl_t,((ClassContext*)sxc_singletons[10])->property_this_method,((ClassTypeManager*)sxc_singletons[7])->property_type_exception,local_17_err_name,-1);
  ((ClassLocalVarInfo*)local_18_err_info)->property_is_catch_var = true;
  local_13_cmd_body = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),local_1_ctrl_t,6);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,CmdOpenScope__init__Token(type_ClassCmdOpenScope.create(),local_1_ctrl_t));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),local_1_ctrl_t,local_18_err_info,NULL));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,CmdIf__init__Token_Int32_Cmd_CmdStatementList(type_ClassCmdIf.create(),local_1_ctrl_t,SlagParserManager__unique_id(sxc_singletons[35]),CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),local_1_ctrl_t,local_12_kept_info),CmdStatementList__init__Cmd(type_ClassCmdStatementList.create(),CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo(type_ClassCmdLocalVarIncrement.create(),local_1_ctrl_t,local_8_write_pos_info))));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_1_ctrl_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_1_ctrl_t,local_3_list_name,NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_1_ctrl_t,str1237.value,CmdList__init__Cmd_Cmd(type_ClassCmdList.create(),CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),local_1_ctrl_t,local_8_write_pos_info),CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdSub.create(),local_1_ctrl_t,CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),local_1_ctrl_t,local_10_read_pos_info),CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_1_ctrl_t,1))))));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,CmdThrow__init__Token_Cmd(type_ClassCmdThrow.create(),local_1_ctrl_t,CmdLocalVarRead__init__Token_MethodVarInfo(type_ClassCmdLocalVarRead.create(),local_1_ctrl_t,local_18_err_info)));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_13_cmd_body)->property_statements,CmdCloseScope__init__Token(type_ClassCmdCloseScope.create(),local_1_ctrl_t));
  local_19_cmd_catch = CmdCatch__init__Token_LocalVarInfo_CmdStatementList(type_ClassCmdCatch.create(),local_1_ctrl_t,local_18_err_info,local_13_cmd_body);
  ArrayList_of_Object__add__Object(((ClassCmdTry*)local_16_cmd_try)->property_catches,local_19_cmd_catch);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_2_result)->property_statements,local_16_cmd_try);
  ArrayList_of_Int32__add__Int32(((ClassContext*)sxc_singletons[10])->property_foreach_fixups,((ClassCmdForEachInWithRemoveCurrent*)context)->property_id);
  local_20_resolved_result = CmdStatementList__resolve(local_2_result);
  ArrayList_of_Int32__discard_last(((ClassContext*)sxc_singletons[10])->property_foreach_fixups);
  return local_20_resolved_result;
}

void CmdForEachInWithRemoveCurrent__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdForEachInWithRemoveCurrent__type_name( SXCRef context )
{
  return str1239.value;
}

static SlagObject* CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init__Token_PropertyInfo( SXCRef context, SXCRef local_0_t_9524, SXCRef local_1_var_info_9523 )
{
  sxc_write_ref( &(((ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement*)context)->property_t), local_0_t_9524 );
  sxc_write_ref( &(((ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement*)context)->property_var_info), local_1_var_info_9523 );
  return context;
}

static SlagObject* CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__create_duplicate( SXCRef context )
{
  return CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init__Token_PropertyInfo(type_ClassCmdThisPropertyDecrement.create(),((ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement*)context)->property_t,((ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement*)context)->property_var_info);
}

SlagObject* CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassPropertyInfo*)((ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassPropertyInfo*)((ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement*)context)->property_var_info)->property_index,10))),str62.value));
}

static SlagObject* CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__resolve( SXCRef context )
{
  return context;
}

static void CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_this_property_decrement)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassPropertyInfo*)((ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement*)context)->property_var_info)->property_index);
}

void CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__type_name( SXCRef context )
{
  return str1209.value;
}

static SlagObject* CmdThisPropertyDecrement__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1731.value),TypeInfo__x_name(((ClassPropertyInfo*)((ClassCmdThisPropertyDecrement*)context)->property_var_info)->property_type_context)),str1730.value),PropertyInfo__x_name(((ClassCmdThisPropertyDecrement*)context)->property_var_info)),str62.value));
}

static SlagObject* CmdThisPropertyDecrement__to_cs( SXCRef context )
{
  return String__opADD__String(str367.value,PropertyInfo__x_name(((ClassCmdThisPropertyDecrement*)context)->property_var_info));
}

static SlagObject* CmdThisPropertyDecrement__to_java( SXCRef context )
{
  return String__opADD__String(str367.value,PropertyInfo__x_name(((ClassCmdThisPropertyDecrement*)context)->property_var_info));
}

void CmdThisPropertyDecrement__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdThisPropertyDecrement__type_name( SXCRef context )
{
  return str1210.value;
}

static SlagObject* Range_of_Int32__init__Int32_Int32_Int32( SXCRef context, SlagInt32 local_0_first_4811, SlagInt32 local_1_last_4810, SlagInt32 local_2_step_size_4809 )
{
  ((ClassRange_of_Int32*)context)->property_first = local_0_first_4811;
  ((ClassRange_of_Int32*)context)->property_last = local_1_last_4810;
  ((ClassRange_of_Int32*)context)->property_step_size = local_2_step_size_4809;
  return context;
}

static SlagObject* Range_of_Int32__create_reader( SXCRef context )
{
  if ((((ClassRange_of_Int32*)context)->property_step_size > 0))
  {
    return RangeIteratorAscending_of_Int32__init__Int32_Int32_Int32(type_ClassRangeIteratorAscending_of_Int32.create(),((ClassRange_of_Int32*)context)->property_first,((ClassRange_of_Int32*)context)->property_last,((ClassRange_of_Int32*)context)->property_step_size);
  }
  else
  {
    return RangeIteratorDescending_of_Int32__init__Int32_Int32_Int32(type_ClassRangeIteratorDescending_of_Int32.create(),((ClassRange_of_Int32*)context)->property_first,((ClassRange_of_Int32*)context)->property_last,((ClassRange_of_Int32*)context)->property_step_size);
  }
}

SlagObject* Range_of_Int32__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SXCRef local_1_reader;

  local_0_builder = StringBuilder__init(type_ClassStringBuilder.create());
  local_1_reader = CallFn____Object(44,context);
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  while (CallFn____Logical(14,local_1_reader))
  {
    StringBuilder__print__String(local_0_builder,((ClassString*)Global__to_String__Int64_Int32(sxc_singletons[21],((SlagInt64)((SlagInt32)CallFn____Int32(30,local_1_reader))),10)));
    if (CallFn____Logical(14,local_1_reader))
    {
      ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

void Range_of_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Range_of_Int32__type_name( SXCRef context )
{
  return str161.value;
}

static SlagObject* RangeGE_of_Int32__init__Int32_Int32_Int32( SXCRef context, SlagInt32 local_0_first_4848, SlagInt32 local_1_last_4847, SlagInt32 local_2_step_size_4846 )
{
  ((ClassRangeGE_of_Int32*)context)->property_first = local_0_first_4848;
  ((ClassRangeGE_of_Int32*)context)->property_last = local_1_last_4847;
  ((ClassRangeGE_of_Int32*)context)->property_step_size = local_2_step_size_4846;
  return context;
}

static SlagObject* RangeGE_of_Int32__create_reader( SXCRef context )
{
  return RangeIteratorGE_of_Int32__init__Int32_Int32_Int32(type_ClassRangeIteratorGE_of_Int32.create(),((ClassRangeGE_of_Int32*)context)->property_first,((ClassRangeGE_of_Int32*)context)->property_last,((ClassRangeGE_of_Int32*)context)->property_step_size);
}

void RangeGE_of_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* RangeGE_of_Int32__type_name( SXCRef context )
{
  return str163.value;
}

static SlagObject* CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpLE.create(),((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_rhs));
}

static SlagObject* CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,str691.value);
  if ((sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_lhs,&type_ClassCmdLiteralString) && sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_rhs,&type_ClassCmdLiteralString)))
  {
    return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_t,(String__opCMP__String(((ClassCmdLiteralString*)((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_lhs)->property_value,((ClassCmdLiteralString*)((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_rhs)->property_value) != 1));
  }
  if ((local_0_call != NULL))
  {
    SlagAnalyzer__require_int32__Cmd(sxc_singletons[8],local_0_call);
    return CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__optimize(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpNE.create(),((ClassCmd*)local_0_call)->property_t,local_0_call,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_t,1)));
  }
  SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary(sxc_singletons[8],context);
  return CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__optimize(context);
}

static SlagObject* CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__optimize( SXCRef context )
{
  SXCRef local_0_type;

  if ((sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    local_0_type = CallFn____Object(0,((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_lhs);
    if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_t,(((ClassCmdLiteralInt64*)((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_lhs)->property_value <= ((ClassCmdLiteralInt64*)((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_t,(((ClassCmdLiteralInt32*)((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_lhs)->property_value <= ((ClassCmdLiteralInt32*)((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_t,(((ClassCmdLiteralReal64*)((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_lhs)->property_value <= ((ClassCmdLiteralReal64*)((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_rhs)->property_value));
    }
    else if ((local_0_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_t,(((ClassCmdLiteralReal32*)((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_lhs)->property_value <= ((ClassCmdLiteralReal32*)((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_rhs)->property_value));
    }
  }
  return context;
}

static void CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cmp_le)->property_ordinal);
  CallFn__(7,((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_lhs);
  CallFn__(7,((ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le*)context)->property_rhs);
}

void CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__type_name( SXCRef context )
{
  return str879.value;
}

static SlagInt32 CoerceReader_of_MethodGroup__available( SXCRef context )
{
  if (CallFn____Logical(14,((ClassCoerceReader_of_MethodGroup*)context)->property_src))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* CoerceReader_of_MethodGroup__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_MethodGroup__init__Int32(type_ClassArrayList_of_MethodGroup.create(),CoerceReader_of_MethodGroup__available(context));
  while (CallFn____Logical(14,((ClassCoerceReader_of_MethodGroup*)context)->property_src))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,((ClassMethodGroup*)CallFn____Object(45,((ClassCoerceReader_of_MethodGroup*)context)->property_src)));
  }
  return local_0_result_list;
}

SlagObject* CoerceReader_of_MethodGroup__to_String( SXCRef context )
{
  return ArrayList_of_MethodGroup__to_String(CoerceReader_of_MethodGroup__to_List(context));
}

static SlagObject* CoerceReader_of_MethodGroup__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_9697 )
{
  sxc_write_ref( &(((ClassCoerceReader_of_MethodGroup*)context)->property_src), local_0_src_9697 );
  return context;
}

static SlagLogical CoerceReader_of_MethodGroup__has_another( SXCRef context )
{
  return CallFn____Logical(14,((ClassCoerceReader_of_MethodGroup*)context)->property_src);
}

static SlagObject* CoerceReader_of_MethodGroup__read( SXCRef context )
{
  return ((ClassMethodGroup*)CallFn____Object(45,((ClassCoerceReader_of_MethodGroup*)context)->property_src));
}

void CoerceReader_of_MethodGroup__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CoerceReader_of_MethodGroup__type_name( SXCRef context )
{
  return str1264.value;
}

static SlagObject* CmdAccessIndex__init__Token_Cmd_CmdList( SXCRef context, SXCRef local_0_t_7807, SXCRef local_1_operand_7806, SXCRef local_2_args_7805 )
{
  sxc_write_ref( &(((ClassCmdAccessIndex*)context)->property_t), local_0_t_7807 );
  sxc_write_ref( &(((ClassCmdAccessIndex*)context)->property_operand), local_1_operand_7806 );
  sxc_write_ref( &(((ClassCmdAccessIndex*)context)->property_args), local_2_args_7805 );
  return context;
}

static SlagObject* CmdAccessIndex__create_duplicate( SXCRef context )
{
  return CmdAccessIndex__init__Token_Cmd_CmdList(type_ClassCmdAccessIndex.create(),((ClassCmdAccessIndex*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdAccessIndex*)context)->property_operand),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdAccessIndex*)context)->property_args));
}

static SlagObject* CmdAccessIndex__resolve( SXCRef context )
{
  SXCRef local_0_construct;
  SXCRef local_1_result;

  {
    local_0_construct = sxc_as(((ClassCmdAccessIndex*)context)->property_operand,&type_ClassCmdConstruct);
    if (!(local_0_construct != NULL)) goto unsatisfied_9603;
    if (!((((ClassCmdConstruct*)local_0_construct)->property_type_or_id == ((ClassTypeManager*)sxc_singletons[7])->property_type_runtime) && (((ClassCmdConstruct*)local_0_construct)->property_args == NULL))) goto unsatisfied_9603;
    if (!(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdAccessIndex*)context)->property_args))->property_count == 1)) goto unsatisfied_9603;
    local_0_construct = sxc_as(((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdAccessIndex*)context)->property_args))->property_data)->data))[0]))),&type_ClassCmdConstruct);
    if (!(local_0_construct != NULL)) goto unsatisfied_9603;
    if (!TypeInfo__is_valid_type(((ClassCmdConstruct*)local_0_construct)->property_type_or_id)) goto unsatisfied_9603;
    TypeInfo__resolve(((ClassCmdConstruct*)local_0_construct)->property_type_or_id);
    return CmdConstruct__resolve(CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdConstruct*)local_0_construct)->property_t,String__opADD__String(str966.value,((ClassTypeInfo*)((ClassCmdConstruct*)local_0_construct)->property_type_or_id)->property_name),NULL));
    satisfied_9603:;
    goto end_9603;
    unsatisfied_9603:;
  }
  end_9603:;
  local_1_result = CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdAccessIndex*)context)->property_t,((ClassCmdAccessIndex*)context)->property_operand,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdAccessIndex*)context)->property_t,str1076.value,((ClassCmdAccessIndex*)context)->property_args));
  return CmdMemberAccess__resolve(local_1_result);
}

void CmdAccessIndex__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdAccessIndex__type_name( SXCRef context )
{
  return str839.value;
}

static SlagObject* CmdUnderlyingCall__init__Token( SXCRef context, SXCRef local_0_t_7209 )
{
  sxc_write_ref( &(((ClassCmdUnderlyingCall*)context)->property_t), local_0_t_7209 );
  return context;
}

static SlagObject* CmdUnderlyingCall__create_duplicate( SXCRef context )
{
  return context;
}

static SlagObject* CmdUnderlyingCall__resolve( SXCRef context )
{
  SXCRef local_0_m;
  SXCRef local_1_underlying_m;
  SXCRef local_2_old_context;
  SXCRef local_3_result;
  SXCRef local_4_args;
  SXCRef local_5__reader2785;
  SXCRef local_6_p;

  local_0_m = ((ClassContext*)sxc_singletons[10])->property_this_method;
  local_1_underlying_m = ((ClassContext*)sxc_singletons[10])->property_underlying_m;
  if ((local_1_underlying_m != NULL))
  {
    local_2_old_context = sxc_singletons[10];
    sxc_write_ref( &sxc_singletons[10], ObjectManager__create_duplicate__Object(sxc_singletons[34],sxc_singletons[10]) );
    sxc_write_ref( &(((ClassContext*)sxc_singletons[10])->property_underlying_m), ((ClassMethodInfo*)local_1_underlying_m)->property_underlying_m );
    local_3_result = CmdStatementList__resolve(ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassMethodInfo*)local_1_underlying_m)->property_body));
    sxc_write_ref( &sxc_singletons[10], local_2_old_context );
    return local_3_result;
  }
  else if (((((ClassMethodInfo*)local_0_m)->property_prior_m != NULL) && !((((ClassQualifiers*)((ClassMethodInfo*)((ClassMethodInfo*)local_0_m)->property_prior_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0)))
  {
    local_4_args = CmdList__init__Int32(type_ClassCmdList.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_0_m)->property_parameters))->property_count);
    local_5__reader2785 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_0_m)->property_parameters);
    while (CallFn____Logical(14,local_5__reader2785))
    {
      local_6_p = CallFn____Object(45,local_5__reader2785);
      ArrayList_of_Object__add__Object(local_4_args,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdUnderlyingCall*)context)->property_t,((ClassParameterInfo*)local_6_p)->property_name,NULL));
    }
    return CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdUnderlyingCall*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdUnderlyingCall*)context)->property_t,str1000.value,NULL),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdUnderlyingCall*)context)->property_t,((ClassMethodInfo*)local_0_m)->property_name,local_4_args)));
  }
  else
  {
    return NULL;
  }
}

void CmdUnderlyingCall__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdUnderlyingCall__type_name( SXCRef context )
{
  return str683.value;
}

static SlagObject* CmdWideningCast__create_duplicate( SXCRef context )
{
  return CmdCast__init__Token_Cmd_TypeInfo(type_ClassCmdWideningCast.create(),((ClassCmdWideningCast*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdWideningCast*)context)->property_operand),((ClassCmdWideningCast*)context)->property_to_type);
}

static SlagObject* CmdWideningCast__resolve( SXCRef context )
{
  return context;
}

static void CmdWideningCast__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_widening_cast)->property_ordinal);
  CallFn__(7,((ClassCmdWideningCast*)context)->property_operand);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassTypeInfo*)((ClassCmdWideningCast*)context)->property_to_type)->property_index);
}

static SlagObject* CmdWideningCast__statement_to_cpp( SXCRef context )
{
  return CallFn____Object(12,((ClassCmdWideningCast*)context)->property_operand);
}

static SlagObject* CmdWideningCast__to_cpp( SXCRef context )
{
  return CallFn____Object(15,((ClassCmdWideningCast*)context)->property_operand);
}

static SlagObject* CmdWideningCast__statement_to_cs( SXCRef context )
{
  return CallFn____Object(33,((ClassCmdWideningCast*)context)->property_operand);
}

static SlagObject* CmdWideningCast__to_cs( SXCRef context )
{
  if ((((ClassCmdWideningCast*)context)->property_to_type == CallFn____Object(0,((ClassCmdWideningCast*)context)->property_operand)))
  {
    return CallFn____Object(35,((ClassCmdWideningCast*)context)->property_operand);
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassCmdWideningCast*)context)->property_to_type)),str62.value),CallFn____Object(35,((ClassCmdWideningCast*)context)->property_operand)),str62.value));
}

static SlagObject* CmdWideningCast__statement_to_java( SXCRef context )
{
  return CallFn____Object(6,((ClassCmdWideningCast*)context)->property_operand);
}

static SlagObject* CmdWideningCast__to_java( SXCRef context )
{
  if ((((ClassCmdWideningCast*)context)->property_to_type == CallFn____Object(0,((ClassCmdWideningCast*)context)->property_operand)))
  {
    return CallFn____Object(41,((ClassCmdWideningCast*)context)->property_operand);
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassCmdWideningCast*)context)->property_to_type)),str62.value),CallFn____Object(41,((ClassCmdWideningCast*)context)->property_operand)),str62.value));
}

void CmdWideningCast__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdWideningCast__type_name( SXCRef context )
{
  return str1073.value;
}

static SlagObject* Array_of_StackTraceInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dupe;

  local_0_dupe = type_ClassArray_of_StackTraceInfo.create(((SlagArray*)context)->array_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(local_0_dupe,context,0,0,((SlagArray*)context)->array_count);
  return local_0_dupe;
}

void Array_of_StackTraceInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Array_of_StackTraceInfo__type_name( SXCRef context )
{
  return str73.value;
}

void SignalHandlerManager__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassSignalHandlerManager*)context)->property_insert = 0;
  ((ClassSignalHandlerManager*)context)->property_append = 1;
  ((ClassSignalHandlerManager*)context)->property_exclusive = 2;
  ((ClassSignalHandlerManager*)context)->property_pending_deactivate = 3;
}

SlagObject* SignalHandlerManager__type_name( SXCRef context )
{
  return str103.value;
}

static SlagObject* CmdLazyAnd__init__Token_Cmd_Cmd( SXCRef context, SXCRef local_0_t_7984, SXCRef local_1_lhs_7983, SXCRef local_2_rhs_7982 )
{
  sxc_write_ref( &(((ClassCmdLazyAnd*)context)->property_t), local_0_t_7984 );
  sxc_write_ref( &(((ClassCmdLazyAnd*)context)->property_lhs), local_1_lhs_7983 );
  sxc_write_ref( &(((ClassCmdLazyAnd*)context)->property_rhs), local_2_rhs_7982 );
  return context;
}

static SlagObject* CmdLazyAnd__init__Token_Cmd_Cmd_Int32( SXCRef context, SXCRef local_0_t_7988, SXCRef local_1_lhs_7987, SXCRef local_2_rhs_7986, SlagInt32 local_3_short_circuit_id_7985 )
{
  sxc_write_ref( &(((ClassCmdLazyAnd*)context)->property_t), local_0_t_7988 );
  sxc_write_ref( &(((ClassCmdLazyAnd*)context)->property_lhs), local_1_lhs_7987 );
  sxc_write_ref( &(((ClassCmdLazyAnd*)context)->property_rhs), local_2_rhs_7986 );
  ((ClassCmdLazyAnd*)context)->property_short_circuit_id = local_3_short_circuit_id_7985;
  return context;
}

static SlagObject* CmdLazyAnd__create_duplicate( SXCRef context )
{
  return CmdLazyAnd__init__Token_Cmd_Cmd_Int32(type_ClassCmdLazyAnd.create(),((ClassCmdLazyAnd*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdLazyAnd*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdLazyAnd*)context)->property_rhs),((ClassCmdLazyAnd*)context)->property_short_circuit_id);
}

static SlagObject* CmdLazyAnd__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdLazyAnd*)context)->property_lhs), CallFn____Object(16,((ClassCmdLazyAnd*)context)->property_lhs) );
  sxc_write_ref( &(((ClassCmdLazyAnd*)context)->property_rhs), CallFn____Object(16,((ClassCmdLazyAnd*)context)->property_rhs) );
  SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdLazyAnd*)context)->property_lhs,NULL);
  SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdLazyAnd*)context)->property_rhs,NULL);
  return CmdLazyAnd__optimize(context);
}

static SlagObject* CmdLazyAnd__optimize( SXCRef context )
{
  SXCRef local_0_left;
  SXCRef local_1_right;

  if (sxc_instance_of(((ClassCmdLazyAnd*)context)->property_lhs,&type_ClassCmdLiteralLogical))
  {
    local_0_left = ((ClassCmdLazyAnd*)context)->property_lhs;
    if (((ClassCmdLiteralLogical*)local_0_left)->property_value)
    {
      return ((ClassCmdLazyAnd*)context)->property_rhs;
    }
    else
    {
      return ((ClassCmdLazyAnd*)context)->property_lhs;
    }
  }
  else if (sxc_instance_of(((ClassCmdLazyAnd*)context)->property_rhs,&type_ClassCmdLiteralLogical))
  {
    local_1_right = ((ClassCmdLazyAnd*)context)->property_rhs;
    if (((ClassCmdLiteralLogical*)local_1_right)->property_value)
    {
      return ((ClassCmdLazyAnd*)context)->property_lhs;
    }
    else
    {
      return ((ClassCmdLazyAnd*)context)->property_rhs;
    }
  }
  return context;
}

static void CmdLazyAnd__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_lazy_and)->property_ordinal);
  CallFn__(7,((ClassCmdLazyAnd*)context)->property_lhs);
  CallFn__(7,((ClassCmdLazyAnd*)context)->property_rhs);
}

static SlagObject* CmdLazyAnd__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdLazyAnd*)context)->property_lhs)),str1693.value),CallFn____Object(15,((ClassCmdLazyAnd*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdLazyAnd__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdLazyAnd*)context)->property_lhs)),str1693.value),CallFn____Object(35,((ClassCmdLazyAnd*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdLazyAnd__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdLazyAnd*)context)->property_lhs)),str1693.value),CallFn____Object(41,((ClassCmdLazyAnd*)context)->property_rhs)),str62.value));
}

void CmdLazyAnd__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLazyAnd__type_name( SXCRef context )
{
  return str894.value;
}

static SlagObject* CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd( SXCRef context, SXCRef local_0_t_7632, SXCRef local_1_var_info_7631, SXCRef local_2_initial_value_7630 )
{
  sxc_write_ref( &(((ClassCmdLocalVarDeclaration*)context)->property_t), local_0_t_7632 );
  sxc_write_ref( &(((ClassCmdLocalVarDeclaration*)context)->property_var_info), local_1_var_info_7631 );
  sxc_write_ref( &(((ClassCmdLocalVarDeclaration*)context)->property_initial_value), local_2_initial_value_7630 );
  return context;
}

static SlagObject* CmdLocalVarDeclaration__create_duplicate( SXCRef context )
{
  return CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),((ClassCmdLocalVarDeclaration*)context)->property_t,((ClassCmdLocalVarDeclaration*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdLocalVarDeclaration*)context)->property_initial_value));
}

static SlagObject* CmdLocalVarDeclaration__resolve( SXCRef context )
{
  SXCRef local_0_expr;

  if (GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_PropertyInfo*)((ClassTypeInfo*)((ClassContext*)sxc_singletons[10])->property_this_type)->property_properties_by_name)->property_data,((ClassLocalVarInfo*)((ClassCmdLocalVarDeclaration*)context)->property_var_info)->property_name))
  {
    SLAG_THROW( Cmd__error__String(context,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str971.value),((ClassLocalVarInfo*)((ClassCmdLocalVarDeclaration*)context)->property_var_info)->property_name),str1039.value))) );
  }
  if ((((ClassLocalVarInfo*)((ClassCmdLocalVarDeclaration*)context)->property_var_info)->property_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_var))
  {
    if ((((ClassCmdLocalVarDeclaration*)context)->property_initial_value != NULL))
    {
      local_0_expr = CallFn____Object(16,((ClassCmdLocalVarDeclaration*)context)->property_initial_value);
      sxc_write_ref( &(((ClassLocalVarInfo*)((ClassCmdLocalVarDeclaration*)context)->property_var_info)->property_type), SlagAnalyzer__require_value__Cmd(sxc_singletons[8],local_0_expr) );
      LocalVarTable__define__LocalVarInfo(((ClassContext*)sxc_singletons[10])->property_local_var_table,((ClassCmdLocalVarDeclaration*)context)->property_var_info);
      return CmdAssign__resolve(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),((ClassCmdLocalVarDeclaration*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdLocalVarDeclaration*)context)->property_t,((ClassLocalVarInfo*)((ClassCmdLocalVarDeclaration*)context)->property_var_info)->property_name,NULL),local_0_expr));
    }
    else
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmdLocalVarDeclaration*)context)->property_t,str1226.value)) );
    }
  }
  TypeInfo__resolve(((ClassLocalVarInfo*)((ClassCmdLocalVarDeclaration*)context)->property_var_info)->property_type);
  LocalVarTable__define__LocalVarInfo(((ClassContext*)sxc_singletons[10])->property_local_var_table,((ClassCmdLocalVarDeclaration*)context)->property_var_info);
  if ((((ClassCmdLocalVarDeclaration*)context)->property_initial_value != NULL))
  {
    return CmdAssign__resolve(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),((ClassCmdLocalVarDeclaration*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdLocalVarDeclaration*)context)->property_t,((ClassLocalVarInfo*)((ClassCmdLocalVarDeclaration*)context)->property_var_info)->property_name,NULL),((ClassCmdLocalVarDeclaration*)context)->property_initial_value));
  }
  else
  {
    return NULL;
  }
}

void CmdLocalVarDeclaration__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLocalVarDeclaration__type_name( SXCRef context )
{
  return str774.value;
}

static SlagObject* CmdLazyOr__init__Token_Cmd_Cmd( SXCRef context, SXCRef local_0_t_7992, SXCRef local_1_lhs_7991, SXCRef local_2_rhs_7990 )
{
  sxc_write_ref( &(((ClassCmdLazyOr*)context)->property_t), local_0_t_7992 );
  sxc_write_ref( &(((ClassCmdLazyOr*)context)->property_lhs), local_1_lhs_7991 );
  sxc_write_ref( &(((ClassCmdLazyOr*)context)->property_rhs), local_2_rhs_7990 );
  return context;
}

static SlagObject* CmdLazyOr__init__Token_Cmd_Cmd_Int32( SXCRef context, SXCRef local_0_t_7996, SXCRef local_1_lhs_7995, SXCRef local_2_rhs_7994, SlagInt32 local_3_short_circuit_id_7993 )
{
  sxc_write_ref( &(((ClassCmdLazyOr*)context)->property_t), local_0_t_7996 );
  sxc_write_ref( &(((ClassCmdLazyOr*)context)->property_lhs), local_1_lhs_7995 );
  sxc_write_ref( &(((ClassCmdLazyOr*)context)->property_rhs), local_2_rhs_7994 );
  ((ClassCmdLazyOr*)context)->property_short_circuit_id = local_3_short_circuit_id_7993;
  return context;
}

static SlagObject* CmdLazyOr__create_duplicate( SXCRef context )
{
  return CmdLazyOr__init__Token_Cmd_Cmd_Int32(type_ClassCmdLazyOr.create(),((ClassCmdLazyOr*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdLazyOr*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdLazyOr*)context)->property_rhs),((ClassCmdLazyOr*)context)->property_short_circuit_id);
}

static SlagObject* CmdLazyOr__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdLazyOr*)context)->property_lhs), CallFn____Object(16,((ClassCmdLazyOr*)context)->property_lhs) );
  sxc_write_ref( &(((ClassCmdLazyOr*)context)->property_rhs), CallFn____Object(16,((ClassCmdLazyOr*)context)->property_rhs) );
  SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdLazyOr*)context)->property_lhs,NULL);
  SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdLazyOr*)context)->property_rhs,NULL);
  return CmdLazyOr__optimize(context);
}

static SlagObject* CmdLazyOr__optimize( SXCRef context )
{
  SXCRef local_0_left;
  SXCRef local_1_right;

  if (sxc_instance_of(((ClassCmdLazyOr*)context)->property_lhs,&type_ClassCmdLiteralLogical))
  {
    local_0_left = ((ClassCmdLazyOr*)context)->property_lhs;
    if (((ClassCmdLiteralLogical*)local_0_left)->property_value)
    {
      return ((ClassCmdLazyOr*)context)->property_lhs;
    }
    else
    {
      return ((ClassCmdLazyOr*)context)->property_rhs;
    }
  }
  else if (sxc_instance_of(((ClassCmdLazyOr*)context)->property_rhs,&type_ClassCmdLiteralLogical))
  {
    local_1_right = ((ClassCmdLazyOr*)context)->property_rhs;
    if (((ClassCmdLiteralLogical*)local_1_right)->property_value)
    {
      return ((ClassCmdLazyOr*)context)->property_rhs;
    }
    else
    {
      return ((ClassCmdLazyOr*)context)->property_lhs;
    }
  }
  return context;
}

static SlagObject* CmdLazyOr__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdLazyOr*)context)->property_lhs)),str1694.value),CallFn____Object(35,((ClassCmdLazyOr*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdLazyOr__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdLazyOr*)context)->property_lhs)),str1694.value),CallFn____Object(41,((ClassCmdLazyOr*)context)->property_rhs)),str62.value));
}

static void CmdLazyOr__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_lazy_or)->property_ordinal);
  CallFn__(7,((ClassCmdLazyOr*)context)->property_lhs);
  CallFn__(7,((ClassCmdLazyOr*)context)->property_rhs);
}

static SlagObject* CmdLazyOr__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdLazyOr*)context)->property_lhs)),str1694.value),CallFn____Object(15,((ClassCmdLazyOr*)context)->property_rhs)),str62.value));
}

void CmdLazyOr__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLazyOr__type_name( SXCRef context )
{
  return str895.value;
}

static SlagObject* CmdAssignZeroValue__init__Token_LocalVarInfo( SXCRef context, SXCRef local_0_t_7667, SXCRef local_1_var_info_7666 )
{
  sxc_write_ref( &(((ClassCmdAssignZeroValue*)context)->property_t), local_0_t_7667 );
  sxc_write_ref( &(((ClassCmdAssignZeroValue*)context)->property_var_info), local_1_var_info_7666 );
  return context;
}

static SlagObject* CmdAssignZeroValue__create_duplicate( SXCRef context )
{
  return CmdAssignZeroValue__init__Token_LocalVarInfo(type_ClassCmdAssignZeroValue.create(),((ClassCmdAssignZeroValue*)context)->property_t,((ClassCmdAssignZeroValue*)context)->property_var_info);
}

static SlagObject* CmdAssignZeroValue__resolve( SXCRef context )
{
  return CmdAssign__resolve(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),((ClassCmdAssignZeroValue*)context)->property_t,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdAssignZeroValue*)context)->property_t,((ClassLocalVarInfo*)((ClassCmdAssignZeroValue*)context)->property_var_info)->property_name,NULL),SlagAnalyzer__make_zero_value__Token_TypeInfo(sxc_singletons[8],((ClassCmdAssignZeroValue*)context)->property_t,((ClassLocalVarInfo*)((ClassCmdAssignZeroValue*)context)->property_var_info)->property_type)));
}

void CmdAssignZeroValue__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdAssignZeroValue__type_name( SXCRef context )
{
  return str790.value;
}

static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdSub.create(),((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs));
}

static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__resolve( SXCRef context )
{
  SXCRef local_0_call;

  local_0_call = SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,String__opADD__String(str689.value,str168.value));
  if ((local_0_call != NULL))
  {
    return local_0_call;
  }
  SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary(sxc_singletons[8],context);
  return CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__optimize(context);
}

static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__optimize( SXCRef context )
{
  SXCRef local_0_left;
  SXCRef local_1_right;
  SXCRef local_2_left;
  SXCRef local_3_right;
  SXCRef local_4_left;
  SXCRef local_5_right;
  SXCRef local_6_left;
  SXCRef local_7_right;

  if ((sxc_instance_of(((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    if (sxc_instance_of(((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_0_left = ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs;
      local_1_right = ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs;
      ((ClassCmdLiteralInt64*)local_0_left)->property_value = (((ClassCmdLiteralInt64*)local_0_left)->property_value-((ClassCmdLiteralInt64*)local_1_right)->property_value);
      return ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_2_left = ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs;
      local_3_right = ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs;
      ((ClassCmdLiteralInt32*)local_2_left)->property_value = (((ClassCmdLiteralInt32*)local_2_left)->property_value-((ClassCmdLiteralInt32*)local_3_right)->property_value);
      return ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs,&type_ClassCmdLiteralReal64))
    {
      local_4_left = ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs;
      local_5_right = ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs;
      ((ClassCmdLiteralReal64*)local_4_left)->property_value = (((ClassCmdLiteralReal64*)local_4_left)->property_value-((ClassCmdLiteralReal64*)local_5_right)->property_value);
      return ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs;
    }
    else if (sxc_instance_of(((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs,&type_ClassCmdLiteralReal32))
    {
      local_6_left = ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs;
      local_7_right = ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs;
      ((ClassCmdLiteralReal32*)local_6_left)->property_value = (((ClassCmdLiteralReal32*)local_6_left)->property_value-((ClassCmdLiteralReal32*)local_7_right)->property_value);
      return ((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs;
    }
  }
  return context;
}

static void CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_sub)->property_ordinal);
  CallFn__(7,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs);
  CallFn__(7,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs);
}

static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_cpp( SXCRef context )
{
  SXCRef local_0_which_7733;
  SXCRef local_1_result;
  SXCRef local_2_which_7734;

  local_0_which_7733 = str168.value;
  if (String__opEQ__String(local_0_which_7733,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1666.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs)),str395.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7733,str392.value))
  {
    local_1_result = str39.value;
    local_2_which_7734 = CallFn____Object(0,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs);
    if ((local_2_which_7734 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real64))
    {
      local_1_result = str1667.value;
    }
    else if ((local_2_which_7734 == ((ClassTypeManager*)sxc_singletons[7])->property_type_real32))
    {
      local_1_result = str1668.value;
    }
    else if ((local_2_which_7734 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      local_1_result = str1669.value;
    }
    else if ((local_2_which_7734 == ((ClassTypeManager*)sxc_singletons[7])->property_type_int32))
    {
      local_1_result = str1670.value;
    }
    return String__opADD__String(local_1_result,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1671.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs)),str1672.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs)),str62.value)));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(15,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs)),str168.value),CallFn____Object(15,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_cs( SXCRef context )
{
  SXCRef local_0_which_7735;

  local_0_which_7735 = str168.value;
  if (String__opEQ__String(local_0_which_7735,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7735,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),TypeInfo__x_name(CallFn____Object(0,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs))),str1925.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(35,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs)),str168.value),CallFn____Object(35,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs)),str62.value);
  }
}

static SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_java( SXCRef context )
{
  SXCRef local_0_which_7736;

  local_0_which_7736 = str168.value;
  if (String__opEQ__String(local_0_which_7736,str391.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1924.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs)),str62.value));
  }
  else if (String__opEQ__String(local_0_which_7736,str392.value))
  {
    return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2011.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs)),str62.value));
  }
  else
  {
    return String__opADD__String(String__opADD__String(String__opADD__String(String__opADD__String(str61.value,CallFn____Object(41,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_lhs)),str168.value),CallFn____Object(41,((ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub*)context)->property_rhs)),str62.value);
  }
}

void CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__type_name( SXCRef context )
{
  return str819.value;
}

void CmdSub__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdSub__type_name( SXCRef context )
{
  return str820.value;
}

static SlagObject* Stopwatch__init__Logical( SXCRef context, SlagLogical local_0_running )
{
  if (!local_0_running)
  {
    ((ClassStopwatch*)context)->property_stop_ms = ((ClassStopwatch*)context)->property_start_ms;
  }
  return context;
}

static SlagInt64 Stopwatch__elapsed_ms( SXCRef context )
{
  if ((((ClassStopwatch*)context)->property_stop_ms != 0LL))
  {
    return (((ClassStopwatch*)context)->property_stop_ms-((ClassStopwatch*)context)->property_start_ms);
  }
  return (slag_get_time_ms()-((ClassStopwatch*)context)->property_start_ms);
}

SlagObject* Stopwatch__to_String( SXCRef context )
{
  return String__opADD__String(Global__format_string__Real64_Int32_Int32_Char(sxc_singletons[21],(((SlagReal64)Stopwatch__elapsed_ms(context))/sxc_int64_as_real64(0x408f400000000000LL)),1,2,((SlagChar)32)),str454.value);
}

void Stopwatch__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassStopwatch*)context)->property_start_ms = slag_get_time_ms();
}

SlagObject* Stopwatch__type_name( SXCRef context )
{
  return str455.value;
}

static SlagObject* LiteralLogical__init__Token_Logical( SXCRef context, SXCRef local_0_t_7011, SlagLogical local_1_value_7010 )
{
  sxc_write_ref( &(((ClassLiteralLogical*)context)->property_t), local_0_t_7011 );
  ((ClassLiteralLogical*)context)->property_value = local_1_value_7010;
  return context;
}

static void LiteralLogical__require_logical( SXCRef context )
{
}

static SlagLogical LiteralLogical__as_Logical( SXCRef context )
{
  return ((ClassLiteralLogical*)context)->property_value;
}

void LiteralLogical__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* LiteralLogical__type_name( SXCRef context )
{
  return str598.value;
}

static SlagInt32 HashTableMappingReader_of_Object_and_Int32__available( SXCRef context )
{
  if ((((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_entries != NULL))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* HashTableMappingReader_of_Object_and_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Mapping_of_Object_and_Int32__init__Int32(type_ClassArrayList_of_Mapping_of_Object_and_Int32.create(),HashTableMappingReader_of_Object_and_Int32__available(context));
  while ((((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_entries != NULL))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,HashTableMappingReader_of_Object_and_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* HashTableMappingReader_of_Object_and_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Mapping_of_Object_and_Int32__to_String(HashTableMappingReader_of_Object_and_Int32__to_List(context));
}

static SlagObject* HashTableMappingReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32( SXCRef context, SXCRef local_0_bins_5028 )
{
  sxc_write_ref( &(((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_bins), local_0_bins_5028 );
  if (CallFn____Logical(14,((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_bins))
  {
    sxc_write_ref( &(((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Int32__create_reader(((ClassHashTableBin_of_Object_and_Int32*)CallFn____Object(45,((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_bins))->property_entries) );
  }
  HashTableMappingReader_of_Object_and_Int32__prep_next(context);
  return context;
}

static void HashTableMappingReader_of_Object_and_Int32__prep_next( SXCRef context )
{
  if ((((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_entries == NULL))
  {
    return;
  }
  while (!CallFn____Logical(14,((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_entries))
  {
    if (CallFn____Logical(14,((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_bins))
    {
      sxc_write_ref( &(((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Int32__create_reader(((ClassHashTableBin_of_Object_and_Int32*)CallFn____Object(45,((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_bins))->property_entries) );
    }
    else
    {
      sxc_write_ref( &(((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_entries), NULL );
      return;
    }
  }
}

static SlagLogical HashTableMappingReader_of_Object_and_Int32__has_another( SXCRef context )
{
  return (((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_entries != NULL);
}

static SlagObject* HashTableMappingReader_of_Object_and_Int32__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = CallFn____Object(45,((ClassHashTableMappingReader_of_Object_and_Int32*)context)->property_entries);
  HashTableMappingReader_of_Object_and_Int32__prep_next(context);
  return local_0_result;
}

void HashTableMappingReader_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableMappingReader_of_Object_and_Int32__type_name( SXCRef context )
{
  return str185.value;
}

static SlagInt32 RangeIteratorAscending_of_Int32__available( SXCRef context )
{
  if (RangeIteratorAscending_of_Int32__has_another(context))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* RangeIteratorAscending_of_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),RangeIteratorAscending_of_Int32__available(context));
  while (RangeIteratorAscending_of_Int32__has_another(context))
  {
    ArrayList_of_Int32__add__Int32(local_0_result_list,RangeIteratorAscending_of_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* RangeIteratorAscending_of_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Int32__to_String(RangeIteratorAscending_of_Int32__to_List(context));
}

static SlagObject* RangeIteratorAscending_of_Int32__init__Int32_Int32_Int32( SXCRef context, SlagInt32 local_0_first_value, SlagInt32 local_1_last_value_4816, SlagInt32 local_2_step_size_4815 )
{
  ((ClassRangeIteratorAscending_of_Int32*)context)->property_last_value = local_1_last_value_4816;
  ((ClassRangeIteratorAscending_of_Int32*)context)->property_step_size = local_2_step_size_4815;
  ((ClassRangeIteratorAscending_of_Int32*)context)->property_next_value = local_0_first_value;
  return context;
}

static SlagObject* RangeIteratorAscending_of_Int32__create_duplicate( SXCRef context )
{
  return RangeIteratorAscending_of_Int32__init__Int32_Int32_Int32(type_ClassRangeIteratorAscending_of_Int32.create(),((ClassRangeIteratorAscending_of_Int32*)context)->property_next_value,((ClassRangeIteratorAscending_of_Int32*)context)->property_last_value,((ClassRangeIteratorAscending_of_Int32*)context)->property_step_size);
}

static SlagLogical RangeIteratorAscending_of_Int32__has_another( SXCRef context )
{
  return (((ClassRangeIteratorAscending_of_Int32*)context)->property_next_value <= ((ClassRangeIteratorAscending_of_Int32*)context)->property_last_value);
}

static SlagInt32 RangeIteratorAscending_of_Int32__read( SXCRef context )
{
  SlagInt32 local_0_result;

  if ((((ClassRangeIteratorAscending_of_Int32*)context)->property_next_value > ((ClassRangeIteratorAscending_of_Int32*)context)->property_last_value))
  {
    SLAG_THROW( NoNextValueError__init(type_ClassNoNextValueError.create()) );
  }
  local_0_result = ((ClassRangeIteratorAscending_of_Int32*)context)->property_next_value;
  ((ClassRangeIteratorAscending_of_Int32*)context)->property_next_value += ((ClassRangeIteratorAscending_of_Int32*)context)->property_step_size;
  return local_0_result;
}

void RangeIteratorAscending_of_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* RangeIteratorAscending_of_Int32__type_name( SXCRef context )
{
  return str159.value;
}

static SlagObject* Enum_of_Qualifiers__prep__Qualifiers_String( SXCRef context, SXCRef local_0_category, SXCRef local_1_name )
{
  if ((((ClassEnum_of_Qualifiers*)context)->property_by_ordinal == NULL))
  {
    sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_by_ordinal), ((ClassArrayList_of_Qualifiers*)ArrayList_of_Qualifiers__init__Int32(type_ClassArrayList_of_Qualifiers.create(),0)) );
    sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_by_name), HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init(type_ClassHashTable_of_String_and_Qualifiers.create()) );
  }
  ((ClassQualifiers*)local_0_category)->property_ordinal = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassEnum_of_Qualifiers*)context)->property_by_ordinal))->property_count;
  sxc_write_ref( &(((ClassQualifiers*)local_0_category)->property_name), local_1_name );
  GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_Qualifiers*)((ClassEnum_of_Qualifiers*)context)->property_by_name)->property_data,local_1_name,local_0_category);
  ArrayList_of_Object__add__Object(((ClassEnum_of_Qualifiers*)context)->property_by_ordinal,local_0_category);
  return local_0_category;
}

void Enum_of_Qualifiers__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_class), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str491.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_aspect), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str496.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_primitive), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str497.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_compound), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str498.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_singleton), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str499.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_managed), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str500.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_deferred), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str501.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_underlying), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str502.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_overlaying), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str503.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_requisite), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str504.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_limited), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str505.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_native), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str506.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_abstract), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str507.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_automatic), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str508.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_propagated), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str509.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_public), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str510.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_private), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str511.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_readonly), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str512.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_class_scope), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str513.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_contains_throw), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str514.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_empty_body), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str515.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_augment), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str516.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_enum), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str517.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_generic), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str518.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_constant), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str519.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_requires_cleanup), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str520.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_array), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str521.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_reference_array), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str522.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_runtime), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init(type_ClassQualifiers.create()),str523.value) );
  sxc_write_ref( &(((ClassEnum_of_Qualifiers*)context)->property_qual_access_mask), Enum_of_Qualifiers__prep__Qualifiers_String(context,Qualifiers__init__Qualifiers(type_ClassQualifiers.create(),((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)context)->property_qual_public)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)context)->property_qual_private)->property_flags))))->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)context)->property_qual_readonly)->property_flags)))),str524.value) );
}

SlagObject* Enum_of_Qualifiers__type_name( SXCRef context )
{
  return str525.value;
}

static SlagObject* DelegateMaker__filter__String( SXCRef context, SXCRef local_0_name )
{
  SlagInt32 local_1_i1;
  SlagInt32 local_2_i2;

  local_1_i1 = String__index_of__String_Int32(local_0_name,str364.value,0);
  while ((local_1_i1 >= 0))
  {
    local_2_i2 = String__last_index_of__String_Int32(local_0_name,str365.value,-1);
    local_0_name = String__opADD__String(String__opADD__String(String__opADD__String(String__substring__Int32_Int32(local_0_name,0,(local_1_i1-1)),str628.value),String__substring__Int32_Int32(local_0_name,(local_1_i1+2),(local_2_i2-1))),String__substring__Int32(local_0_name,(local_2_i2+2)));
    local_1_i1 = String__index_of__String_Int32(local_0_name,str364.value,0);
  }
  return local_0_name;
}

void DelegateMaker__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* DelegateMaker__type_name( SXCRef context )
{
  return str627.value;
}

static SlagObject* Mapping_of_Int32_and_Int32__init__Int32_Int32( SXCRef context, SlagInt32 local_0_key_8764, SlagInt32 local_1_value_8763 )
{
  ((ClassMapping_of_Int32_and_Int32*)context)->property_key = local_0_key_8764;
  ((ClassMapping_of_Int32_and_Int32*)context)->property_value = local_1_value_8763;
  return context;
}

SlagObject* Mapping_of_Int32_and_Int32__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMapping_of_Int32_and_Int32*)context)->property_key,10))),str41.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMapping_of_Int32_and_Int32*)context)->property_value,10))));
}

void Mapping_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1019.value;
}

static SlagObject* CmdMul__optimize( SXCRef context )
{
  SlagInt64 local_0_value;
  SlagInt32 local_1_value;
  SlagInt64 local_2_value;
  SlagInt32 local_3_value;

  if (sxc_instance_of(((ClassCmdMul*)context)->property_rhs,&type_ClassCmdLiteralPrimitive))
  {
    if (sxc_instance_of(((ClassCmdMul*)context)->property_lhs,&type_ClassCmdLiteralPrimitive))
    {
      return CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__optimize(context);
    }
    else
    {
      if (sxc_instance_of(((ClassCmdMul*)context)->property_rhs,&type_ClassCmdLiteralInt64))
      {
        local_0_value = ((ClassCmdLiteralInt64*)((ClassCmdMul*)context)->property_rhs)->property_value;
        if ((local_0_value == 0LL))
        {
          return CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),((ClassCmdMul*)context)->property_t,0LL);
        }
        else if (((local_0_value > 0LL) && BitwiseOperations__is_power_of_two__Int64(sxc_singletons[15],local_0_value)))
        {
          return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdLeftShifted.create(),((ClassCmdMul*)context)->property_t,((ClassCmdMul*)context)->property_lhs,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdMul*)context)->property_t,(BitwiseOperations__min_bits__Int64(sxc_singletons[15],local_0_value)-1)));
        }
      }
      else if (sxc_instance_of(((ClassCmdMul*)context)->property_rhs,&type_ClassCmdLiteralInt32))
      {
        local_1_value = ((ClassCmdLiteralInt32*)((ClassCmdMul*)context)->property_rhs)->property_value;
        if ((local_1_value == 0))
        {
          return CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdMul*)context)->property_t,0);
        }
        else if (((local_1_value > 0) && BitwiseOperations__is_power_of_two__Int32(sxc_singletons[15],local_1_value)))
        {
          return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdLeftShifted.create(),((ClassCmdMul*)context)->property_t,((ClassCmdMul*)context)->property_lhs,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdMul*)context)->property_t,(BitwiseOperations__min_bits__Int32(sxc_singletons[15],local_1_value)-1)));
        }
      }
    }
  }
  else if (sxc_instance_of(((ClassCmdMul*)context)->property_lhs,&type_ClassCmdLiteralPrimitive))
  {
    if (sxc_instance_of(((ClassCmdMul*)context)->property_lhs,&type_ClassCmdLiteralInt64))
    {
      local_2_value = ((ClassCmdLiteralInt64*)((ClassCmdMul*)context)->property_lhs)->property_value;
      if ((local_2_value == 0LL))
      {
        return CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),((ClassCmdMul*)context)->property_t,0LL);
      }
      else if (((local_2_value > 0LL) && BitwiseOperations__is_power_of_two__Int64(sxc_singletons[15],local_2_value)))
      {
        return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdLeftShifted.create(),((ClassCmdMul*)context)->property_t,((ClassCmdMul*)context)->property_rhs,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdMul*)context)->property_t,(BitwiseOperations__min_bits__Int64(sxc_singletons[15],local_2_value)-1)));
      }
    }
    else if (sxc_instance_of(((ClassCmdMul*)context)->property_lhs,&type_ClassCmdLiteralInt32))
    {
      local_3_value = ((ClassCmdLiteralInt32*)((ClassCmdMul*)context)->property_lhs)->property_value;
      if ((local_3_value == 0))
      {
        return CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdMul*)context)->property_t,0);
      }
      else if (((local_3_value > 0) && BitwiseOperations__is_power_of_two__Int32(sxc_singletons[15],local_3_value)))
      {
        return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdLeftShifted.create(),((ClassCmdMul*)context)->property_t,((ClassCmdMul*)context)->property_rhs,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdMul*)context)->property_t,(BitwiseOperations__min_bits__Int32(sxc_singletons[15],local_3_value)-1)));
      }
    }
  }
  return context;
}

void CmdMul__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdMul__type_name( SXCRef context )
{
  return str822.value;
}

static SlagObject* ArrayReader_of_Mapping_of_Object_and_Object__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Mapping_of_Object_and_Object__init__Int32(type_ClassArrayList_of_Mapping_of_Object_and_Object.create(),ArrayReader_of_Mapping_of_Object_and_Object__remaining(context));
  while (ArrayReader_of_Mapping_of_Object_and_Object__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_Mapping_of_Object_and_Object__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_Mapping_of_Object_and_Object__to_String( SXCRef context )
{
  return ArrayList_of_Mapping_of_Object_and_Object__to_String(ArrayReader_of_Mapping_of_Object_and_Object__to_List(context));
}

static SlagObject* ArrayReader_of_Mapping_of_Object_and_Object__init__Collection_of_Mapping_of_Object_and_Object_Array_of_Mapping_of_Object_and_Object_Int32_Int32( SXCRef context, SXCRef local_0_collection_4063, SXCRef local_1_data_4062, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_collection), local_0_collection_4063 );
  sxc_write_ref( &(((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_data), local_1_data_4062 );
  ((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_collection);
  }
  ((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_collection)))
  {
    ((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_collection);
  }
  ((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_Mapping_of_Object_and_Object__create_duplicate( SXCRef context )
{
  return ArrayReader_of_Mapping_of_Object_and_Object__init__Collection_of_Mapping_of_Object_and_Object_Array_of_Mapping_of_Object_and_Object_Int32_Int32(type_ClassArrayReader_of_Mapping_of_Object_and_Object.create(),((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_collection,((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_data,((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_counter,(((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_last_exclusive-((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_counter));
}

static SlagLogical ArrayReader_of_Mapping_of_Object_and_Object__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_counter < ((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_Mapping_of_Object_and_Object__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_last_exclusive-((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_counter);
}

static SlagObject* ArrayReader_of_Mapping_of_Object_and_Object__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassMapping_of_Object_and_Object**)(((SlagArray*)((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_data)->data))[((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_counter];
  ++(((ClassArrayReader_of_Mapping_of_Object_and_Object*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_Mapping_of_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_Mapping_of_Object_and_Object__type_name( SXCRef context )
{
  return str51.value;
}

static SlagObject* ArrayReader_of_HashTable_of_String_and_LocalVarInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_HashTable_of_String_and_LocalVarInfo__init__Int32(type_ClassArrayList_of_HashTable_of_String_and_LocalVarInfo.create(),ArrayReader_of_HashTable_of_String_and_LocalVarInfo__remaining(context));
  while (ArrayReader_of_HashTable_of_String_and_LocalVarInfo__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_HashTable_of_String_and_LocalVarInfo__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_HashTable_of_String_and_LocalVarInfo__to_String( SXCRef context )
{
  return ArrayList_of_HashTable_of_String_and_LocalVarInfo__to_String(ArrayReader_of_HashTable_of_String_and_LocalVarInfo__to_List(context));
}

static SlagObject* ArrayReader_of_HashTable_of_String_and_LocalVarInfo__init__Collection_of_HashTable_of_String_and_LocalVarInfo_Array_of_HashTable_of_String_and_LocalVarInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_8825, SXCRef local_1_data_8824, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_collection), local_0_collection_8825 );
  sxc_write_ref( &(((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_data), local_1_data_8824 );
  ((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_collection)))
  {
    ((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_HashTable_of_String_and_LocalVarInfo__create_duplicate( SXCRef context )
{
  return ArrayReader_of_HashTable_of_String_and_LocalVarInfo__init__Collection_of_HashTable_of_String_and_LocalVarInfo_Array_of_HashTable_of_String_and_LocalVarInfo_Int32_Int32(type_ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo.create(),((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_collection,((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_data,((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_counter,(((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_last_exclusive-((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_counter));
}

static SlagLogical ArrayReader_of_HashTable_of_String_and_LocalVarInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_counter < ((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_HashTable_of_String_and_LocalVarInfo__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_last_exclusive-((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_counter);
}

static SlagObject* ArrayReader_of_HashTable_of_String_and_LocalVarInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassHashTable_of_String_and_LocalVarInfo**)(((SlagArray*)((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_data)->data))[((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_counter];
  ++(((ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_HashTable_of_String_and_LocalVarInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_HashTable_of_String_and_LocalVarInfo__type_name( SXCRef context )
{
  return str1036.value;
}

static SlagObject* CmdDiv__optimize( SXCRef context )
{
  if ((sxc_instance_of(((ClassCmdDiv*)context)->property_lhs,&type_ClassCmdLiteralPrimitive) && sxc_instance_of(((ClassCmdDiv*)context)->property_rhs,&type_ClassCmdLiteralPrimitive)))
  {
    if ((sxc_instance_of(((ClassCmdDiv*)context)->property_lhs,&type_ClassCmdLiteralInt64) && (((ClassCmdLiteralInt64*)((ClassCmdDiv*)context)->property_rhs)->property_value == 0LL)))
    {
      SLAG_THROW( Cmd__error__String(((ClassCmdDiv*)context)->property_rhs,str1085.value) );
    }
    else if ((sxc_instance_of(((ClassCmdDiv*)context)->property_lhs,&type_ClassCmdLiteralInt32) && (((ClassCmdLiteralInt32*)((ClassCmdDiv*)context)->property_rhs)->property_value == 0)))
    {
      SLAG_THROW( Cmd__error__String(((ClassCmdDiv*)context)->property_rhs,str1085.value) );
    }
    return CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__optimize(context);
  }
  return context;
}

void CmdDiv__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdDiv__type_name( SXCRef context )
{
  return str824.value;
}

static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_HashTableBin_of_Int32_and_Int32__init__Int32(type_ClassArrayList_of_HashTableBin_of_Int32_and_Int32.create(),ArrayReader_of_HashTableBin_of_Int32_and_Int32__remaining(context));
  while (ArrayReader_of_HashTableBin_of_Int32_and_Int32__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_HashTableBin_of_Int32_and_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Int32__to_String( SXCRef context )
{
  return ArrayList_of_HashTableBin_of_Int32_and_Int32__to_String(ArrayReader_of_HashTableBin_of_Int32_and_Int32__to_List(context));
}

static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Int32__init__Collection_of_HashTableBin_of_Int32_and_Int32_Array_of_HashTableBin_of_Int32_and_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_8787, SXCRef local_1_data_8786, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_collection), local_0_collection_8787 );
  sxc_write_ref( &(((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_data), local_1_data_8786 );
  ((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_collection);
  }
  ((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_collection)))
  {
    ((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_collection);
  }
  ((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Int32__create_duplicate( SXCRef context )
{
  return ArrayReader_of_HashTableBin_of_Int32_and_Int32__init__Collection_of_HashTableBin_of_Int32_and_Int32_Array_of_HashTableBin_of_Int32_and_Int32_Int32_Int32(type_ClassArrayReader_of_HashTableBin_of_Int32_and_Int32.create(),((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_collection,((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_data,((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_counter,(((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_last_exclusive-((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_counter));
}

static SlagLogical ArrayReader_of_HashTableBin_of_Int32_and_Int32__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_counter < ((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_HashTableBin_of_Int32_and_Int32__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_last_exclusive-((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_counter);
}

static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Int32__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassHashTableBin_of_Int32_and_Int32**)(((SlagArray*)((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_data)->data))[((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_counter];
  ++(((ClassArrayReader_of_HashTableBin_of_Int32_and_Int32*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_HashTableBin_of_Int32_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Int32__type_name( SXCRef context )
{
  return str1027.value;
}

static SlagObject* ArrayReader_of_CmdCatch__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_CmdCatch__init__Int32(type_ClassArrayList_of_CmdCatch.create(),ArrayReader_of_CmdCatch__remaining(context));
  while (ArrayReader_of_CmdCatch__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_CmdCatch__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_CmdCatch__to_String( SXCRef context )
{
  return ArrayList_of_CmdCatch__to_String(ArrayReader_of_CmdCatch__to_List(context));
}

static SlagObject* ArrayReader_of_CmdCatch__init__Collection_of_CmdCatch_Array_of_CmdCatch_Int32_Int32( SXCRef context, SXCRef local_0_collection_7620, SXCRef local_1_data_7619, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_CmdCatch*)context)->property_collection), local_0_collection_7620 );
  sxc_write_ref( &(((ClassArrayReader_of_CmdCatch*)context)->property_data), local_1_data_7619 );
  ((ClassArrayReader_of_CmdCatch*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_CmdCatch*)context)->property_collection);
  }
  ((ClassArrayReader_of_CmdCatch*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_CmdCatch*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_CmdCatch*)context)->property_collection)))
  {
    ((ClassArrayReader_of_CmdCatch*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_CmdCatch*)context)->property_collection);
  }
  ((ClassArrayReader_of_CmdCatch*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_CmdCatch*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_CmdCatch__create_duplicate( SXCRef context )
{
  return ArrayReader_of_CmdCatch__init__Collection_of_CmdCatch_Array_of_CmdCatch_Int32_Int32(type_ClassArrayReader_of_CmdCatch.create(),((ClassArrayReader_of_CmdCatch*)context)->property_collection,((ClassArrayReader_of_CmdCatch*)context)->property_data,((ClassArrayReader_of_CmdCatch*)context)->property_counter,(((ClassArrayReader_of_CmdCatch*)context)->property_last_exclusive-((ClassArrayReader_of_CmdCatch*)context)->property_counter));
}

static SlagLogical ArrayReader_of_CmdCatch__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_CmdCatch*)context)->property_counter < ((ClassArrayReader_of_CmdCatch*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_CmdCatch*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_CmdCatch*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_CmdCatch__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_CmdCatch*)context)->property_last_exclusive-((ClassArrayReader_of_CmdCatch*)context)->property_counter);
}

static SlagObject* ArrayReader_of_CmdCatch__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassCmdCatch**)(((SlagArray*)((ClassArrayReader_of_CmdCatch*)context)->property_data)->data))[((ClassArrayReader_of_CmdCatch*)context)->property_counter];
  ++(((ClassArrayReader_of_CmdCatch*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_CmdCatch__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_CmdCatch__type_name( SXCRef context )
{
  return str769.value;
}

static SlagObject* ArrayReverseReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo( SXCRef context, SXCRef local_0_collection_8431, SXCRef local_1_data_8430 )
{
  sxc_write_ref( &(((ClassArrayReverseReader_of_PropertyInfo*)context)->property_collection), local_0_collection_8431 );
  sxc_write_ref( &(((ClassArrayReverseReader_of_PropertyInfo*)context)->property_data), local_1_data_8430 );
  ((ClassArrayReverseReader_of_PropertyInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReverseReader_of_PropertyInfo*)context)->property_collection);
  ((ClassArrayReverseReader_of_PropertyInfo*)context)->property_counter = (CallFn____Int32(19,((ClassArrayReverseReader_of_PropertyInfo*)context)->property_collection)-1);
  return context;
}

static SlagObject* ArrayReverseReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_8436, SXCRef local_1_data_8435, SlagInt32 local_2_counter_8434, SlagInt32 local_3_last_exclusive_8433, SlagInt32 local_4_original_modification_count_8432 )
{
  sxc_write_ref( &(((ClassArrayReverseReader_of_PropertyInfo*)context)->property_collection), local_0_collection_8436 );
  sxc_write_ref( &(((ClassArrayReverseReader_of_PropertyInfo*)context)->property_data), local_1_data_8435 );
  ((ClassArrayReverseReader_of_PropertyInfo*)context)->property_counter = local_2_counter_8434;
  ((ClassArrayReverseReader_of_PropertyInfo*)context)->property_last_exclusive = local_3_last_exclusive_8433;
  ((ClassArrayReverseReader_of_PropertyInfo*)context)->property_original_modification_count = local_4_original_modification_count_8432;
  return context;
}

static SlagObject* ArrayReverseReader_of_PropertyInfo__create_duplicate( SXCRef context )
{
  return ArrayReverseReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo_Int32_Int32_Int32(type_ClassArrayReverseReader_of_PropertyInfo.create(),((ClassArrayReverseReader_of_PropertyInfo*)context)->property_collection,((ClassArrayReverseReader_of_PropertyInfo*)context)->property_data,((ClassArrayReverseReader_of_PropertyInfo*)context)->property_counter,((ClassArrayReverseReader_of_PropertyInfo*)context)->property_last_exclusive,((ClassArrayReverseReader_of_PropertyInfo*)context)->property_original_modification_count);
}

static SlagLogical ArrayReverseReader_of_PropertyInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReverseReader_of_PropertyInfo*)context)->property_counter >= 0))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReverseReader_of_PropertyInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReverseReader_of_PropertyInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReverseReader_of_PropertyInfo__remaining( SXCRef context )
{
  return (((ClassArrayReverseReader_of_PropertyInfo*)context)->property_counter+1);
}

static SlagObject* ArrayReverseReader_of_PropertyInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  if ((((ClassArrayReverseReader_of_PropertyInfo*)context)->property_counter < 0))
  {
    SLAG_THROW( NoNextValueError__init(type_ClassNoNextValueError.create()) );
  }
  local_0_result = ((ClassPropertyInfo**)(((SlagArray*)((ClassArrayReverseReader_of_PropertyInfo*)context)->property_data)->data))[((ClassArrayReverseReader_of_PropertyInfo*)context)->property_counter];
  --(((ClassArrayReverseReader_of_PropertyInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReverseReader_of_PropertyInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReverseReader_of_PropertyInfo__type_name( SXCRef context )
{
  return str995.value;
}

SlagObject* ArrayList_of_StructureType__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count6759;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count6759 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count6759))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassStructureType*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_StructureType__init( SXCRef context )
{
  ArrayList_of_StructureType__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_StructureType__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_StructureType*)context)->property_data), type_ClassArray_of_StructureType.create(local_0_initial_capacity) );
  return context;
}

void ArrayList_of_StructureType__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_StructureType__add__StructureType( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_StructureType*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_StructureType__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_StructureType__init__Int32(type_ClassArrayList_of_StructureType.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_StructureType*)local_0_dup)->property_data,((ClassArrayList_of_StructureType*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_StructureType*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_StructureType__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_StructureType__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_StructureType__type_name( SXCRef context )
{
  return str725.value;
}

static SlagObject* CmdCmpLE__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdCmpLE*)context)->property_lhs)),str1678.value),CallFn____Object(15,((ClassCmdCmpLE*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpLE__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCmpLE*)context)->property_lhs)),str1678.value),CallFn____Object(35,((ClassCmdCmpLE*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpLE__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCmpLE*)context)->property_lhs)),str1678.value),CallFn____Object(41,((ClassCmdCmpLE*)context)->property_rhs)),str62.value));
}

void CmdCmpLE__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpLE__type_name( SXCRef context )
{
  return str880.value;
}

static SlagObject* CmdNegate__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdNegate.create(),((ClassCmdNegate*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdNegate*)context)->property_operand));
}

static SlagObject* CmdNegate__resolve( SXCRef context )
{
  SXCRef local_0_operand_type;

  sxc_write_ref( &(((ClassCmdNegate*)context)->property_operand), CallFn____Object(16,((ClassCmdNegate*)context)->property_operand) );
  local_0_operand_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdNegate*)context)->property_operand);
  local_0_operand_type = SlagAnalyzer__determine_compatible_op_type__Token_TypeInfo_TypeInfo(sxc_singletons[8],((ClassCmdNegate*)context)->property_t,local_0_operand_type,local_0_operand_type);
  if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_operand_type)->property_qualifiers)->property_flags&(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags)) != 0))
  {
    return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(sxc_singletons[8],((ClassCmdNegate*)context)->property_t,local_0_operand_type,((ClassCmdNegate*)context)->property_operand,str693.value,NULL);
  }
  else if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_operand_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags) != 0))
  {
    return SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList(sxc_singletons[8],((ClassCmdNegate*)context)->property_t,local_0_operand_type,NULL,str693.value,CmdList__init__Cmd(type_ClassCmdList.create(),((ClassCmdNegate*)context)->property_operand));
  }
  else
  {
    sxc_write_ref( &(((ClassCmdNegate*)context)->property_operand), SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical(sxc_singletons[8],((ClassCmdNegate*)context)->property_operand,local_0_operand_type,false) );
    return context;
  }
}

static void CmdNegate__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_negate)->property_ordinal);
  CallFn__(7,((ClassCmdNegate*)context)->property_operand);
}

static SlagObject* CmdNegate__to_cpp( SXCRef context )
{
  return String__opADD__String(str168.value,CallFn____Object(15,((ClassCmdNegate*)context)->property_operand));
}

static SlagObject* CmdNegate__to_cs( SXCRef context )
{
  return String__opADD__String(str168.value,CallFn____Object(35,((ClassCmdNegate*)context)->property_operand));
}

static SlagObject* CmdNegate__to_java( SXCRef context )
{
  return String__opADD__String(str168.value,CallFn____Object(41,((ClassCmdNegate*)context)->property_operand));
}

void CmdNegate__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdNegate__type_name( SXCRef context )
{
  return str670.value;
}

void CmdOr__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdOr__type_name( SXCRef context )
{
  return str832.value;
}

SlagObject* SpecializedComparator_2189__init( SXCRef context )
{
  return context;
}

static SlagLogical SpecializedComparator_2189__a_before_b__MethodInfo_MethodInfo( SXCRef context, SXCRef local_0_a, SXCRef local_1_b )
{
  if (String__opEQ__String(((ClassMethodInfo*)local_0_a)->property_name,str667.value))
  {
    if (String__opEQ__String(((ClassMethodInfo*)local_1_b)->property_name,str667.value))
    {
      return (String__opCMP__String(((ClassMethodInfo*)local_0_a)->property_signature,((ClassMethodInfo*)local_1_b)->property_signature) == -1);
    }
    else
    {
      return true;
    }
  }
  else
  {
    if (String__opEQ__String(((ClassMethodInfo*)local_1_b)->property_name,str667.value))
    {
      return false;
    }
    else
    {
      return (String__opCMP__String(((ClassMethodInfo*)local_0_a)->property_signature,((ClassMethodInfo*)local_1_b)->property_signature) == -1);
    }
  }
}

void SpecializedComparator_2189__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* SpecializedComparator_2189__type_name( SXCRef context )
{
  return str1348.value;
}

static SlagObject* Mapping_of_Object_and_Object__init__Object_Object( SXCRef context, SXCRef local_0_key_4057, SXCRef local_1_value_4056 )
{
  sxc_write_ref( &(((ClassMapping_of_Object_and_Object*)context)->property_key), local_0_key_4057 );
  sxc_write_ref( &(((ClassMapping_of_Object_and_Object*)context)->property_value), local_1_value_4056 );
  return context;
}

SlagObject* Mapping_of_Object_and_Object__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Object_and_Object*)context)->property_key)),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Object_and_Object*)context)->property_value)));
}

void Mapping_of_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_Object_and_Object__type_name( SXCRef context )
{
  return str42.value;
}

void RadiansManager__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* RadiansManager__type_name( SXCRef context )
{
  return str3.value;
}

static SlagObject* CmdOpenScope__init__Token( SXCRef context, SXCRef local_0_t_7299 )
{
  sxc_write_ref( &(((ClassCmdOpenScope*)context)->property_t), local_0_t_7299 );
  return context;
}

static SlagObject* CmdOpenScope__create_duplicate( SXCRef context )
{
  return context;
}

static SlagObject* CmdOpenScope__resolve( SXCRef context )
{
  ArrayList_of_Object__add__Object(((ClassLocalVarTable*)((ClassContext*)sxc_singletons[10])->property_local_var_table)->property_scopes,HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init__Int32_Real64(type_ClassHashTable_of_String_and_LocalVarInfo.create(),4,sxc_int64_as_real64(0x4008000000000000LL)));
  return NULL;
}

void CmdOpenScope__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdOpenScope__type_name( SXCRef context )
{
  return str716.value;
}

SlagObject* SignalDataArg__init__Int32_Int32_Logical_Real64_Real64( SXCRef context, SlagInt32 local_0_id_3882, SlagInt32 local_1_index_3881, SlagLogical local_2_flag_3880, SlagReal64 local_3_x_3879, SlagReal64 local_4_y_3878 )
{
  ((ClassSignalDataArg*)context)->property_id = local_0_id_3882;
  ((ClassSignalDataArg*)context)->property_index = local_1_index_3881;
  ((ClassSignalDataArg*)context)->property_flag = local_2_flag_3880;
  ((ClassSignalDataArg*)context)->property_x = local_3_x_3879;
  ((ClassSignalDataArg*)context)->property_y = local_4_y_3878;
  return context;
}

void SignalDataArg__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* SignalDataArg__type_name( SXCRef context )
{
  return str2049.value;
}

static SlagObject* ListOf_of_MethodInfo__create__Int32( SXCRef context, SlagInt32 local_0_dim1 )
{
  SXCRef local_1_zero_value;

  local_1_zero_value = NULL;
  return ArrayList_of_MethodInfo__init__Int32_MethodInfo(type_ClassArrayList_of_MethodInfo.create(),local_0_dim1,local_1_zero_value);
}

void ListOf_of_MethodInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ListOf_of_MethodInfo__type_name( SXCRef context )
{
  return str1275.value;
}

static SlagObject* CmdRangeGE__create_duplicate( SXCRef context )
{
  return CmdRange__init__Token_Cmd_Cmd_Cmd(type_ClassCmdRangeGE.create(),((ClassCmdRangeGE*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeGE*)context)->property_first),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeGE*)context)->property_last),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeGE*)context)->property_increment));
}

static SlagObject* CmdRangeGE__resolve( SXCRef context )
{
  return CmdRange__resolve_range__String_Int32(context,str1259.value,-1);
}

void CmdRangeGE__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdRangeGE__type_name( SXCRef context )
{
  return str901.value;
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__init__Token_MethodVarInfo_Cmd( SXCRef context, SXCRef local_0_t_9473, SXCRef local_1_var_info_9472, SXCRef local_2_operand_9471 )
{
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign*)context)->property_t), local_0_t_9473 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign*)context)->property_var_info), local_1_var_info_9472 );
  sxc_write_ref( &(((ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign*)context)->property_operand), local_2_operand_9471 );
  return context;
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__create_duplicate( SXCRef context )
{
  return CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__init__Token_MethodVarInfo_Cmd(type_ClassCmdLocalVarModAndAssign.create(),((ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign*)context)->property_t,((ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign*)context)->property_operand));
}

SlagObject* CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(25,context)),str61.value),((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign*)context)->property_var_info)->property_index,10))),str395.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__resolve( SXCRef context )
{
  return context;
}

static void CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
}

static void CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_local_var_mod_and_assign)->property_ordinal);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassMethodVarInfo*)((ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign*)context)->property_var_info)->property_index);
  CallFn__(7,((ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign*)context)->property_operand);
}

void CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__type_name( SXCRef context )
{
  return str1195.value;
}

static SlagObject* CmdLocalVarModAndAssign__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarModAndAssign*)context)->property_var_info)),str1724.value),CallFn____Object(2,((ClassCmdLocalVarModAndAssign*)context)->property_var_info)),str395.value),CallFn____Object(15,((ClassCmdLocalVarModAndAssign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdLocalVarModAndAssign__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarModAndAssign*)context)->property_var_info)),str1956.value),CallFn____Object(2,((ClassCmdLocalVarModAndAssign*)context)->property_var_info)),str395.value),CallFn____Object(35,((ClassCmdLocalVarModAndAssign*)context)->property_operand)),str62.value));
}

static SlagObject* CmdLocalVarModAndAssign__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(2,((ClassCmdLocalVarModAndAssign*)context)->property_var_info)),str1956.value),CallFn____Object(2,((ClassCmdLocalVarModAndAssign*)context)->property_var_info)),str395.value),CallFn____Object(41,((ClassCmdLocalVarModAndAssign*)context)->property_operand)),str62.value));
}

void CmdLocalVarModAndAssign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLocalVarModAndAssign__type_name( SXCRef context )
{
  return str1196.value;
}

static SlagObject* CmdCmpLT__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdCmpLT*)context)->property_lhs)),str1680.value),CallFn____Object(15,((ClassCmdCmpLT*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpLT__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCmpLT*)context)->property_lhs)),str1680.value),CallFn____Object(35,((ClassCmdCmpLT*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdCmpLT__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCmpLT*)context)->property_lhs)),str1680.value),CallFn____Object(41,((ClassCmdCmpLT*)context)->property_rhs)),str62.value));
}

void CmdCmpLT__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpLT__type_name( SXCRef context )
{
  return str884.value;
}

static SlagObject* ArrayReverseReader_of_Char__init__Collection_of_Char_Array_of_Char( SXCRef context, SXCRef local_0_collection_4907, SXCRef local_1_data_4906 )
{
  sxc_write_ref( &(((ClassArrayReverseReader_of_Char*)context)->property_collection), local_0_collection_4907 );
  sxc_write_ref( &(((ClassArrayReverseReader_of_Char*)context)->property_data), local_1_data_4906 );
  ((ClassArrayReverseReader_of_Char*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReverseReader_of_Char*)context)->property_collection);
  ((ClassArrayReverseReader_of_Char*)context)->property_counter = (CallFn____Int32(19,((ClassArrayReverseReader_of_Char*)context)->property_collection)-1);
  return context;
}

static SlagObject* ArrayReverseReader_of_Char__init__Collection_of_Char_Array_of_Char_Int32_Int32_Int32( SXCRef context, SXCRef local_0_collection_4912, SXCRef local_1_data_4911, SlagInt32 local_2_counter_4910, SlagInt32 local_3_last_exclusive_4909, SlagInt32 local_4_original_modification_count_4908 )
{
  sxc_write_ref( &(((ClassArrayReverseReader_of_Char*)context)->property_collection), local_0_collection_4912 );
  sxc_write_ref( &(((ClassArrayReverseReader_of_Char*)context)->property_data), local_1_data_4911 );
  ((ClassArrayReverseReader_of_Char*)context)->property_counter = local_2_counter_4910;
  ((ClassArrayReverseReader_of_Char*)context)->property_last_exclusive = local_3_last_exclusive_4909;
  ((ClassArrayReverseReader_of_Char*)context)->property_original_modification_count = local_4_original_modification_count_4908;
  return context;
}

static SlagObject* ArrayReverseReader_of_Char__create_duplicate( SXCRef context )
{
  return ArrayReverseReader_of_Char__init__Collection_of_Char_Array_of_Char_Int32_Int32_Int32(type_ClassArrayReverseReader_of_Char.create(),((ClassArrayReverseReader_of_Char*)context)->property_collection,((ClassArrayReverseReader_of_Char*)context)->property_data,((ClassArrayReverseReader_of_Char*)context)->property_counter,((ClassArrayReverseReader_of_Char*)context)->property_last_exclusive,((ClassArrayReverseReader_of_Char*)context)->property_original_modification_count);
}

static SlagLogical ArrayReverseReader_of_Char__has_another( SXCRef context )
{
  if ((((ClassArrayReverseReader_of_Char*)context)->property_counter >= 0))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReverseReader_of_Char*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReverseReader_of_Char*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReverseReader_of_Char__remaining( SXCRef context )
{
  return (((ClassArrayReverseReader_of_Char*)context)->property_counter+1);
}

static SlagChar ArrayReverseReader_of_Char__peek( SXCRef context )
{
  if ((((ClassArrayReverseReader_of_Char*)context)->property_counter < 0))
  {
    SLAG_THROW( NoNextValueError__init(type_ClassNoNextValueError.create()) );
  }
  return ((SlagChar*)(((SlagArray*)((ClassArrayReverseReader_of_Char*)context)->property_data)->data))[((ClassArrayReverseReader_of_Char*)context)->property_counter];
}

static SlagChar ArrayReverseReader_of_Char__read( SXCRef context )
{
  SlagChar local_0_result;

  if ((((ClassArrayReverseReader_of_Char*)context)->property_counter < 0))
  {
    SLAG_THROW( NoNextValueError__init(type_ClassNoNextValueError.create()) );
  }
  local_0_result = ((SlagChar*)(((SlagArray*)((ClassArrayReverseReader_of_Char*)context)->property_data)->data))[((ClassArrayReverseReader_of_Char*)context)->property_counter];
  --(((ClassArrayReverseReader_of_Char*)context)->property_counter);
  return local_0_result;
}

void ArrayReverseReader_of_Char__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReverseReader_of_Char__type_name( SXCRef context )
{
  return str169.value;
}

static SlagLogical FileReader__consume__Char( SXCRef context, SlagChar local_0_look_for )
{
  if (!FileReader__has_another(context))
  {
    return false;
  }
  if ((((SlagInt32)FileReader__peek(context)) == ((SlagInt32)local_0_look_for)))
  {
    FileReader__read(context);
    return true;
  }
  return false;
}

static SlagObject* FileReader__init__String( SXCRef context, SXCRef local_0_filename )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_filename );
  FileReader__init__String();
  return context;
}

static void FileReader__close( SXCRef context )
{
  SLAG_PUSH_REF( context );
  FileReader__close();
}

static SlagLogical FileReader__has_another( SXCRef context )
{
  SLAG_PUSH_REF( context );
  FileReader__has_another();
  return SLAG_POP_LOGICAL();
}

static SlagChar FileReader__peek( SXCRef context )
{
  SLAG_PUSH_REF( context );
  FileReader__peek();
  return SLAG_POP_CHAR();
}

static SlagChar FileReader__read( SXCRef context )
{
  SLAG_PUSH_REF( context );
  FileReader__read();
  return SLAG_POP_CHAR();
}

static SlagInt32 FileReader__read__Array_of_Char_Int32_Int32( SXCRef context, SXCRef local_0_buffer, SlagInt32 local_1_i, SlagInt32 local_2_num )
{
  SLAG_PUSH_REF( context );
  SLAG_PUSH_REF( local_0_buffer );
  SLAG_PUSH_INT32( local_1_i );
  SLAG_PUSH_INT32( local_2_num );
  FileReader__read__Array_of_Char_Int32_Int32();
  return SLAG_POP_INT32();
}

static SlagInt32 FileReader__remaining( SXCRef context )
{
  SLAG_PUSH_REF( context );
  FileReader__remaining();
  return SLAG_POP_INT32();
}

static SlagObject* FileReader__to_List( SXCRef context )
{
  SXCRef local_0_chars;

  local_0_chars = type_ClassArray_of_Char.create(FileReader__remaining(context));
  FileReader__read__Array_of_Char_Int32_Int32(context,local_0_chars,0,FileReader__remaining(context));
  return ArrayList_of_Char__init__Array_of_Char_Logical(type_ClassArrayList_of_Char.create(),local_0_chars,false);
}

SlagObject* FileReader__to_String( SXCRef context )
{
  return StringManager__create_from__ArrayList_of_Char(sxc_singletons[18],FileReader__to_List(context));
}

void FileReader__clean_up( SXCRef context )
{
  FileReader__close(context);
}

void FileReader__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* FileReader__type_name( SXCRef context )
{
  return str35.value;
}

static SlagObject* CmdRightShifted__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1705.value),CallFn____Object(15,((ClassCmdRightShifted*)context)->property_lhs)),str395.value),CallFn____Object(15,((ClassCmdRightShifted*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdRightShifted__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1952.value),CallFn____Object(35,((ClassCmdRightShifted*)context)->property_lhs)),str395.value),CallFn____Object(35,((ClassCmdRightShifted*)context)->property_rhs)),str62.value));
}

static SlagObject* CmdRightShifted__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1952.value),CallFn____Object(41,((ClassCmdRightShifted*)context)->property_lhs)),str395.value),CallFn____Object(41,((ClassCmdRightShifted*)context)->property_rhs)),str62.value));
}

void CmdRightShifted__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdRightShifted__type_name( SXCRef context )
{
  return str1100.value;
}

SlagObject* CallStackLimitReached__init__Array_of_Int64( SXCRef context, SXCRef local_0_history )
{
  sxc_write_ref( &(((ClassCallStackLimitReached*)context)->property_stack_trace), StackTrace__init__Array_of_Int64(type_ClassStackTrace.create(),local_0_history) );
  sxc_write_ref( &(((ClassCallStackLimitReached*)context)->property_message), str2050.value );
  return context;
}

void CallStackLimitReached__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* CallStackLimitReached__type_name( SXCRef context )
{
  return str2051.value;
}

SlagObject* DivideByZeroError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassDivideByZeroError*)context)->property_message), str173.value );
  return context;
}

SlagObject* DivideByZeroError__init__String( SXCRef context, SXCRef local_0_message_3883 )
{
  sxc_write_ref( &(((ClassDivideByZeroError*)context)->property_message), local_0_message_3883 );
  return context;
}

void DivideByZeroError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* DivideByZeroError__type_name( SXCRef context )
{
  return str174.value;
}

static SlagInt32 HashTableValueReader_of_Object_and_Int32__available( SXCRef context )
{
  if ((((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_entries != NULL))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* HashTableValueReader_of_Object_and_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),HashTableValueReader_of_Object_and_Int32__available(context));
  while ((((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_entries != NULL))
  {
    ArrayList_of_Int32__add__Int32(local_0_result_list,HashTableValueReader_of_Object_and_Int32__read(context));
  }
  return local_0_result_list;
}

SlagObject* HashTableValueReader_of_Object_and_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Int32__to_String(HashTableValueReader_of_Object_and_Int32__to_List(context));
}

static SlagObject* HashTableValueReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32( SXCRef context, SXCRef local_0_bins_6691 )
{
  sxc_write_ref( &(((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_bins), local_0_bins_6691 );
  if (CallFn____Logical(14,((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_bins))
  {
    sxc_write_ref( &(((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Int32__create_reader(((ClassHashTableBin_of_Object_and_Int32*)CallFn____Object(45,((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_bins))->property_entries) );
  }
  HashTableValueReader_of_Object_and_Int32__prep_next(context);
  return context;
}

static void HashTableValueReader_of_Object_and_Int32__prep_next( SXCRef context )
{
  if ((((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_entries == NULL))
  {
    return;
  }
  while (!CallFn____Logical(14,((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_entries))
  {
    if (CallFn____Logical(14,((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_bins))
    {
      sxc_write_ref( &(((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Int32__create_reader(((ClassHashTableBin_of_Object_and_Int32*)CallFn____Object(45,((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_bins))->property_entries) );
    }
    else
    {
      sxc_write_ref( &(((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_entries), NULL );
      return;
    }
  }
}

static SlagLogical HashTableValueReader_of_Object_and_Int32__has_another( SXCRef context )
{
  return (((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_entries != NULL);
}

static SlagInt32 HashTableValueReader_of_Object_and_Int32__read( SXCRef context )
{
  SlagInt32 local_0_result;

  local_0_result = ((ClassMapping_of_Object_and_Int32*)CallFn____Object(45,((ClassHashTableValueReader_of_Object_and_Int32*)context)->property_entries))->property_value;
  HashTableValueReader_of_Object_and_Int32__prep_next(context);
  return local_0_result;
}

void HashTableValueReader_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableValueReader_of_Object_and_Int32__type_name( SXCRef context )
{
  return str462.value;
}

static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Object__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_HashTableBin_of_Int32_and_Object__init__Int32(type_ClassArrayList_of_HashTableBin_of_Int32_and_Object.create(),ArrayReader_of_HashTableBin_of_Int32_and_Object__remaining(context));
  while (ArrayReader_of_HashTableBin_of_Int32_and_Object__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_HashTableBin_of_Int32_and_Object__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Object__to_String( SXCRef context )
{
  return ArrayList_of_HashTableBin_of_Int32_and_Object__to_String(ArrayReader_of_HashTableBin_of_Int32_and_Object__to_List(context));
}

static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Object__init__Collection_of_HashTableBin_of_Int32_and_Object_Array_of_HashTableBin_of_Int32_and_Object_Int32_Int32( SXCRef context, SXCRef local_0_collection_5156, SXCRef local_1_data_5155, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_collection), local_0_collection_5156 );
  sxc_write_ref( &(((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_data), local_1_data_5155 );
  ((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_collection);
  }
  ((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_collection)))
  {
    ((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_collection);
  }
  ((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Object__create_duplicate( SXCRef context )
{
  return ArrayReader_of_HashTableBin_of_Int32_and_Object__init__Collection_of_HashTableBin_of_Int32_and_Object_Array_of_HashTableBin_of_Int32_and_Object_Int32_Int32(type_ClassArrayReader_of_HashTableBin_of_Int32_and_Object.create(),((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_collection,((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_data,((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_counter,(((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_last_exclusive-((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_counter));
}

static SlagLogical ArrayReader_of_HashTableBin_of_Int32_and_Object__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_counter < ((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_HashTableBin_of_Int32_and_Object__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_last_exclusive-((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_counter);
}

static SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Object__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassHashTableBin_of_Int32_and_Object**)(((SlagArray*)((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_data)->data))[((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_counter];
  ++(((ClassArrayReader_of_HashTableBin_of_Int32_and_Object*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_HashTableBin_of_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_HashTableBin_of_Int32_and_Object__type_name( SXCRef context )
{
  return str207.value;
}

static SlagObject* CmdPropertyRead__create_duplicate( SXCRef context )
{
  return CmdMemberVarRead__init__Token_Cmd_PropertyInfo(type_ClassCmdPropertyRead.create(),((ClassCmdPropertyRead*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdPropertyRead*)context)->property_context),((ClassCmdPropertyRead*)context)->property_var_info);
}

SlagObject* CmdPropertyRead__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1133.value),Global__to_String__Object(sxc_singletons[21],((ClassCmdPropertyRead*)context)->property_context)),str395.value),((ClassPropertyInfo*)((ClassCmdPropertyRead*)context)->property_var_info)->property_name),str195.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassPropertyInfo*)((ClassCmdPropertyRead*)context)->property_var_info)->property_index,10))),str62.value));
}

static SlagObject* CmdPropertyRead__resolve( SXCRef context )
{
  return context;
}

static void CmdPropertyRead__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_property_read)->property_ordinal);
  CallFn__(7,((ClassCmdPropertyRead*)context)->property_context);
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassPropertyInfo*)((ClassCmdPropertyRead*)context)->property_var_info)->property_index);
}

static SlagObject* CmdPropertyRead__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(CallFn____Object(0,((ClassCmdPropertyRead*)context)->property_context))),str1691.value),CallFn____Object(15,((ClassCmdPropertyRead*)context)->property_context)),str1715.value),PropertyInfo__x_name(((ClassCmdPropertyRead*)context)->property_var_info)));
}

static SlagObject* CmdPropertyRead__to_cs( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdPropertyRead*)context)->property_context,&type_ClassCmdThisReference))
  {
    return PropertyInfo__x_name(((ClassCmdPropertyRead*)context)->property_var_info);
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(35,((ClassCmdPropertyRead*)context)->property_context)),str38.value),PropertyInfo__x_name(((ClassCmdPropertyRead*)context)->property_var_info)));
}

static SlagObject* CmdPropertyRead__to_java( SXCRef context )
{
  if (sxc_instance_of(((ClassCmdPropertyRead*)context)->property_context,&type_ClassCmdThisReference))
  {
    return PropertyInfo__x_name(((ClassCmdPropertyRead*)context)->property_var_info);
  }
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),CallFn____Object(41,((ClassCmdPropertyRead*)context)->property_context)),str38.value),PropertyInfo__x_name(((ClassCmdPropertyRead*)context)->property_var_info)));
}

void CmdPropertyRead__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdPropertyRead__type_name( SXCRef context )
{
  return str1134.value;
}

static SlagInt32 LineReader__available( SXCRef context )
{
  if ((((ClassLineReader*)context)->property_next != NULL))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* LineReader__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_String__init__Int32(type_ClassArrayList_of_String.create(),LineReader__available(context));
  while ((((ClassLineReader*)context)->property_next != NULL))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,LineReader__read(context));
  }
  return local_0_result_list;
}

SlagObject* LineReader__to_String( SXCRef context )
{
  return ((ClassString*)ArrayList_of_String__format__String_String(LineReader__to_List(context),str63.value,str64.value));
}

static SlagObject* LineReader__init__Reader_of_Char( SXCRef context, SXCRef local_0_src_5242 )
{
  sxc_write_ref( &(((ClassLineReader*)context)->property_src), local_0_src_5242 );
  LineReader__prep_next(context);
  return context;
}

static SlagLogical LineReader__has_another( SXCRef context )
{
  return (((ClassLineReader*)context)->property_next != NULL);
}

static SlagObject* LineReader__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassLineReader*)context)->property_next;
  LineReader__prep_next(context);
  return local_0_result;
}

static void LineReader__prep_next( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader328;
  SlagChar local_2_ch;
  SlagChar local_3_which_329;

  if (!CallFn____Logical(14,((ClassLineReader*)context)->property_src))
  {
    sxc_write_ref( &(((ClassLineReader*)context)->property_next), NULL );
    return;
  }
  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_1__reader328 = ((ClassLineReader*)context)->property_src;
  while (CallFn____Logical(14,local_1__reader328))
  {
    local_2_ch = CallFn____Char(29,local_1__reader328);
    local_3_which_329 = local_2_ch;
    if ((((SlagInt32)local_3_which_329) == 10))
    {
      goto end_5246;
    }
    else if ((((SlagInt32)local_3_which_329) == 13))
    {
      CallFn__Char__Logical(9,((ClassLineReader*)context)->property_src,((SlagChar)10));
      goto end_5246;
    }
    ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_buffer)->property_data,local_2_ch);
    next_5246:;
  }
  end_5246:;
  sxc_write_ref( &(((ClassLineReader*)context)->property_next), StringBuilder__to_String(local_0_buffer) );
}

void LineReader__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* LineReader__type_name( SXCRef context )
{
  return str223.value;
}

SlagObject* Mapping_of_String_and_Int32__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_Int32*)context)->property_key),str41.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMapping_of_String_and_Int32*)context)->property_value,10))));
}

void Mapping_of_String_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_Int32__type_name( SXCRef context )
{
  return str192.value;
}

static SlagInt32 CoerceReader_of_TypeInfo__available( SXCRef context )
{
  if (CallFn____Logical(14,((ClassCoerceReader_of_TypeInfo*)context)->property_src))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* CoerceReader_of_TypeInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_TypeInfo__init__Int32(type_ClassArrayList_of_TypeInfo.create(),CoerceReader_of_TypeInfo__available(context));
  while (CallFn____Logical(14,((ClassCoerceReader_of_TypeInfo*)context)->property_src))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,((ClassTypeInfo*)CallFn____Object(45,((ClassCoerceReader_of_TypeInfo*)context)->property_src)));
  }
  return local_0_result_list;
}

SlagObject* CoerceReader_of_TypeInfo__to_String( SXCRef context )
{
  return ArrayList_of_TypeInfo__to_String(CoerceReader_of_TypeInfo__to_List(context));
}

static SlagObject* CoerceReader_of_TypeInfo__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_8197 )
{
  sxc_write_ref( &(((ClassCoerceReader_of_TypeInfo*)context)->property_src), local_0_src_8197 );
  return context;
}

static SlagLogical CoerceReader_of_TypeInfo__has_another( SXCRef context )
{
  return CallFn____Logical(14,((ClassCoerceReader_of_TypeInfo*)context)->property_src);
}

static SlagObject* CoerceReader_of_TypeInfo__read( SXCRef context )
{
  return ((ClassTypeInfo*)CallFn____Object(45,((ClassCoerceReader_of_TypeInfo*)context)->property_src));
}

void CoerceReader_of_TypeInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CoerceReader_of_TypeInfo__type_name( SXCRef context )
{
  return str932.value;
}

SlagObject* Mapping_of_String_and_MethodGroup__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_MethodGroup*)context)->property_key),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_String_and_MethodGroup*)context)->property_value)));
}

void Mapping_of_String_and_MethodGroup__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_MethodGroup__type_name( SXCRef context )
{
  return str982.value;
}

static SlagObject* CmdRangeGT__create_duplicate( SXCRef context )
{
  return CmdRange__init__Token_Cmd_Cmd_Cmd(type_ClassCmdRangeGT.create(),((ClassCmdRangeGT*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeGT*)context)->property_first),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeGT*)context)->property_last),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdRangeGT*)context)->property_increment));
}

static SlagObject* CmdRangeGT__resolve( SXCRef context )
{
  return CmdRange__resolve_range__String_Int32(context,str1258.value,-1);
}

void CmdRangeGT__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdRangeGT__type_name( SXCRef context )
{
  return str900.value;
}

static SlagObject* ArrayList_of_ControlStructureInfo__remove_last( SXCRef context )
{
  return ((ClassControlStructureInfo*)ArrayList_of_Object__remove__Int32(context,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-1)));
}

SlagObject* ArrayList_of_ControlStructureInfo__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count6517;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count6517 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count6517))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassControlStructureInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_ControlStructureInfo__init( SXCRef context )
{
  ArrayList_of_ControlStructureInfo__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_ControlStructureInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_ControlStructureInfo*)context)->property_data), type_ClassArray_of_ControlStructureInfo.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_ControlStructureInfo__create_reader( SXCRef context )
{
  return ArrayReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo_Int32_Int32(type_ClassArrayReader_of_ControlStructureInfo.create(),context,((ClassArrayList_of_ControlStructureInfo*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagObject* ArrayList_of_ControlStructureInfo__reverse_order( SXCRef context )
{
  return ArrayReverseReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo(type_ClassArrayReverseReader_of_ControlStructureInfo.create(),context,((ClassArrayList_of_ControlStructureInfo*)context)->property_data);
}

static SlagInt32 ArrayList_of_ControlStructureInfo__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_ControlStructureInfo__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_ControlStructureInfo__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_ControlStructureInfo__add__ControlStructureInfo( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_ControlStructureInfo*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_ControlStructureInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_ControlStructureInfo__init__Int32(type_ClassArrayList_of_ControlStructureInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_ControlStructureInfo*)local_0_dup)->property_data,((ClassArrayList_of_ControlStructureInfo*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_ControlStructureInfo*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_ControlStructureInfo__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_ControlStructureInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_ControlStructureInfo__type_name( SXCRef context )
{
  return str466.value;
}

static SlagObject* CmdCatch__init__Token_LocalVarInfo_CmdStatementList( SXCRef context, SXCRef local_0_t_7617, SXCRef local_1_var_info_7616, SXCRef local_2_body_7615 )
{
  sxc_write_ref( &(((ClassCmdCatch*)context)->property_t), local_0_t_7617 );
  sxc_write_ref( &(((ClassCmdCatch*)context)->property_var_info), local_1_var_info_7616 );
  sxc_write_ref( &(((ClassCmdCatch*)context)->property_body), local_2_body_7615 );
  return context;
}

static SlagObject* CmdCatch__create_duplicate( SXCRef context )
{
  return CmdCatch__init__Token_LocalVarInfo_CmdStatementList(type_ClassCmdCatch.create(),((ClassCmdCatch*)context)->property_t,((ClassCmdCatch*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCatch*)context)->property_body));
}

static SlagObject* CmdCatch__resolve( SXCRef context )
{
  SXCRef local_0_ctype;

  local_0_ctype = ((ClassLocalVarInfo*)((ClassCmdCatch*)context)->property_var_info)->property_type;
  TypeInfo__resolve(local_0_ctype);
  if (!TypeInfo__instance_of__TypeInfo(local_0_ctype,((ClassTypeManager*)sxc_singletons[7])->property_type_exception))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassCmdCatch*)context)->property_t,str1200.value)) );
  }
  CmdStatementList__resolve(((ClassCmdCatch*)context)->property_body);
  return context;
}

static SlagObject* CmdCatch__finalize_calls( SXCRef context )
{
  CmdStatementList__finalize_calls(((ClassCmdCatch*)context)->property_body);
  return context;
}

static void CmdCatch__finalize_structure_info( SXCRef context )
{
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_supports_inlining = false;
  ((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_num_catches = (((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_num_catches+1);
  sxc_write_ref( &(((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)((ClassContext*)sxc_singletons[10])->property_this_method)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_contains_throw)->property_flags))) );
  CmdStatementList__finalize_structure_info(((ClassCmdCatch*)context)->property_body);
}

static void CmdCatch__group_dynamic_methods( SXCRef context )
{
  CmdStatementList__group_dynamic_methods(((ClassCmdCatch*)context)->property_body);
}

static SlagObject* CmdCatch__to_inline__CmdList( SXCRef context, SXCRef local_0_arg_list )
{
  CallFn__CmdList__Object(1,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdCatch*)context)->property_body)->property_statements))->property_data)->data))[0]))),local_0_arg_list);
  return context;
}

static void CmdCatch__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassLocalVarInfo*)((ClassCmdCatch*)context)->property_var_info)->property_index);
  CmdStatementList__write_etc(((ClassCmdCatch*)context)->property_body);
}

static SlagObject* CmdCatch__to_cpp( SXCRef context )
{
  CmdStatementList__to_cpp(((ClassCmdCatch*)context)->property_body);
  return NULL;
}

static SlagObject* CmdCatch__to_cs( SXCRef context )
{
  CSWriter__println__String(sxc_singletons[28],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str771.value),TypeInfo__x_name(((ClassLocalVarInfo*)((ClassCmdCatch*)context)->property_var_info)->property_type)),str607.value),LocalVarInfo__x_name(((ClassCmdCatch*)context)->property_var_info)),str62.value)));
  CSWriter__println__String(sxc_singletons[28],str247.value);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent+2);
  CmdStatementList__to_cs(((ClassCmdCatch*)context)->property_body);
  ((ClassCSWriter*)sxc_singletons[28])->property_indent = (((ClassCSWriter*)sxc_singletons[28])->property_indent-2);
  CSWriter__println__String(sxc_singletons[28],str397.value);
  return NULL;
}

static SlagObject* CmdCatch__to_java( SXCRef context )
{
  JavaWriter__println__String(sxc_singletons[19],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str771.value),TypeInfo__x_name(((ClassLocalVarInfo*)((ClassCmdCatch*)context)->property_var_info)->property_type)),str607.value),LocalVarInfo__x_name(((ClassCmdCatch*)context)->property_var_info)),str62.value)));
  JavaWriter__println__String(sxc_singletons[19],str247.value);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent+2);
  CmdStatementList__to_java(((ClassCmdCatch*)context)->property_body);
  ((ClassJavaWriter*)sxc_singletons[19])->property_indent = (((ClassJavaWriter*)sxc_singletons[19])->property_indent-2);
  JavaWriter__println__String(sxc_singletons[19],str397.value);
  return NULL;
}

void CmdCatch__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCatch__type_name( SXCRef context )
{
  return str766.value;
}

static SlagObject* ArrayReader_of_CategoryInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_CategoryInfo__init__Int32(type_ClassArrayList_of_CategoryInfo.create(),ArrayReader_of_CategoryInfo__remaining(context));
  while (ArrayReader_of_CategoryInfo__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_CategoryInfo__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_CategoryInfo__to_String( SXCRef context )
{
  return ArrayList_of_CategoryInfo__to_String(ArrayReader_of_CategoryInfo__to_List(context));
}

static SlagObject* ArrayReader_of_CategoryInfo__init__Collection_of_CategoryInfo_Array_of_CategoryInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_7831, SXCRef local_1_data_7830, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_CategoryInfo*)context)->property_collection), local_0_collection_7831 );
  sxc_write_ref( &(((ClassArrayReader_of_CategoryInfo*)context)->property_data), local_1_data_7830 );
  ((ClassArrayReader_of_CategoryInfo*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_CategoryInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_CategoryInfo*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_CategoryInfo*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_CategoryInfo*)context)->property_collection)))
  {
    ((ClassArrayReader_of_CategoryInfo*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_CategoryInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_CategoryInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_CategoryInfo*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_CategoryInfo__create_duplicate( SXCRef context )
{
  return ArrayReader_of_CategoryInfo__init__Collection_of_CategoryInfo_Array_of_CategoryInfo_Int32_Int32(type_ClassArrayReader_of_CategoryInfo.create(),((ClassArrayReader_of_CategoryInfo*)context)->property_collection,((ClassArrayReader_of_CategoryInfo*)context)->property_data,((ClassArrayReader_of_CategoryInfo*)context)->property_counter,(((ClassArrayReader_of_CategoryInfo*)context)->property_last_exclusive-((ClassArrayReader_of_CategoryInfo*)context)->property_counter));
}

static SlagLogical ArrayReader_of_CategoryInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_CategoryInfo*)context)->property_counter < ((ClassArrayReader_of_CategoryInfo*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_CategoryInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_CategoryInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_CategoryInfo__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_CategoryInfo*)context)->property_last_exclusive-((ClassArrayReader_of_CategoryInfo*)context)->property_counter);
}

static SlagObject* ArrayReader_of_CategoryInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassCategoryInfo**)(((SlagArray*)((ClassArrayReader_of_CategoryInfo*)context)->property_data)->data))[((ClassArrayReader_of_CategoryInfo*)context)->property_counter];
  ++(((ClassArrayReader_of_CategoryInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_CategoryInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_CategoryInfo__type_name( SXCRef context )
{
  return str844.value;
}

static SlagObject* ObjectManager__create_duplicate__Object( SXCRef context, SXCRef local_0_existing )
{
  if ((local_0_existing == NULL))
  {
    return NULL;
  }
  return CallFn____Object(10,local_0_existing);
}

void ObjectManager__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ObjectManager__type_name( SXCRef context )
{
  return str1.value;
}

static SlagObject* ControlStructureInfo__init__StructureType_CmdStructure_String( SXCRef context, SXCRef local_0_type_6794, SXCRef local_1_node_6793, SXCRef local_2_label_6792 )
{
  sxc_write_ref( &(((ClassControlStructureInfo*)context)->property_type), local_0_type_6794 );
  sxc_write_ref( &(((ClassControlStructureInfo*)context)->property_node), local_1_node_6793 );
  sxc_write_ref( &(((ClassControlStructureInfo*)context)->property_label), local_2_label_6792 );
  return context;
}

void ControlStructureInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ControlStructureInfo__type_name( SXCRef context )
{
  return str464.value;
}

static SlagObject* ArrayList_of_StackTraceInfo__last( SXCRef context )
{
  return ((ClassStackTraceInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-1)]));
}

static SlagObject* ArrayList_of_StackTraceInfo__remove_last( SXCRef context )
{
  return ((ClassStackTraceInfo*)ArrayList_of_Object__remove__Int32(context,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count-1)));
}

SlagObject* ArrayList_of_StackTraceInfo__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count4158;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count4158 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count4158))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassStackTraceInfo*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_StackTraceInfo__init( SXCRef context )
{
  ArrayList_of_StackTraceInfo__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_StackTraceInfo__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_StackTraceInfo*)context)->property_data), type_ClassArray_of_StackTraceInfo.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_StackTraceInfo__create_reader( SXCRef context )
{
  return ArrayReader_of_StackTraceInfo__init__Collection_of_StackTraceInfo_Array_of_StackTraceInfo_Int32_Int32(type_ClassArrayReader_of_StackTraceInfo.create(),context,((ClassArrayList_of_StackTraceInfo*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_StackTraceInfo__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_StackTraceInfo__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_StackTraceInfo__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_StackTraceInfo__add__StackTraceInfo( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_StackTraceInfo*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_StackTraceInfo__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_StackTraceInfo__init__Int32(type_ClassArrayList_of_StackTraceInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_StackTraceInfo*)local_0_dup)->property_data,((ClassArrayList_of_StackTraceInfo*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_StackTraceInfo*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_StackTraceInfo__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_StackTraceInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_StackTraceInfo__type_name( SXCRef context )
{
  return str74.value;
}

SlagObject* ArrayList_of_Mapping_of_Object_and_Object__to_String( SXCRef context )
{
  SXCRef local_0_builder;
  SlagInt32 local_1_i;
  SlagInt32 local_2__count4040;

  local_0_builder = StringBuilder__init__Int32(type_ClassStringBuilder.create(),(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count<<2));
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)123));
  {
    local_1_i = 0;
    local_2__count4040 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
    while ((local_1_i < local_2__count4040))
    {
      if ((local_1_i > 0))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)44));
      }
      StringBuilder__print__String(local_0_builder,Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Object_and_Object*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_data)->data))[local_1_i]))));
      ++local_1_i;
    }
  }
  ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_0_builder)->property_data,((SlagChar)125));
  return StringBuilder__to_String(local_0_builder);
}

SlagObject* ArrayList_of_Mapping_of_Object_and_Object__init( SXCRef context )
{
  ArrayList_of_Mapping_of_Object_and_Object__init__Int32(context,10);
  return context;
}

static SlagObject* ArrayList_of_Mapping_of_Object_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  if ((local_0_initial_capacity < 0))
  {
    SLAG_THROW( InvalidOperandError__init__String_String(type_ClassInvalidOperandError.create(),str27.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],local_0_initial_capacity,10))) );
  }
  sxc_write_ref( &(((ClassArrayList_of_Mapping_of_Object_and_Object*)context)->property_data), type_ClassArray_of_Mapping_of_Object_and_Object.create(local_0_initial_capacity) );
  return context;
}

static SlagObject* ArrayList_of_Mapping_of_Object_and_Object__create_reader( SXCRef context )
{
  return ArrayReader_of_Mapping_of_Object_and_Object__init__Collection_of_Mapping_of_Object_and_Object_Array_of_Mapping_of_Object_and_Object_Int32_Int32(type_ClassArrayReader_of_Mapping_of_Object_and_Object.create(),context,((ClassArrayList_of_Mapping_of_Object_and_Object*)context)->property_data,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
}

static SlagInt32 ArrayList_of_Mapping_of_Object_and_Object__count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
}

static SlagInt32 ArrayList_of_Mapping_of_Object_and_Object__modification_count( SXCRef context )
{
  return ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_modification_count;
}

void ArrayList_of_Mapping_of_Object_and_Object__ensure_count__Int32( SXCRef context, SlagInt32 local_0_num_items )
{
  ArrayList_of_Object__ensure_count__Int32(context,local_0_num_items);
}

SlagObject* ArrayList_of_Mapping_of_Object_and_Object__add__Mapping_of_Object_and_Object( SXCRef context, SXCRef local_0_value )
{
  return ((ClassArrayList_of_Mapping_of_Object_and_Object*)ArrayList_of_Object__add__Object(context,local_0_value));
}

static SlagObject* ArrayList_of_Mapping_of_Object_and_Object__create_duplicate( SXCRef context )
{
  SXCRef local_0_dup;

  local_0_dup = ArrayList_of_Mapping_of_Object_and_Object__init__Int32(type_ClassArrayList_of_Mapping_of_Object_and_Object.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  GenericArray__copy_from__GenericArray_Int32_Int32_Int32(((ClassArrayList_of_Mapping_of_Object_and_Object*)local_0_dup)->property_data,((ClassArrayList_of_Mapping_of_Object_and_Object*)context)->property_data,0,0,((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count);
  ((ClassArrayList_of_Mapping_of_Object_and_Object*)local_0_dup)->property_count = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)context))->property_count;
  return local_0_dup;
}

void ArrayList_of_Mapping_of_Object_and_Object__clear( SXCRef context )
{
  ArrayList_of_Object__clear(context);
}

void ArrayList_of_Mapping_of_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayList_of_Mapping_of_Object_and_Object__type_name( SXCRef context )
{
  return str44.value;
}

static SlagObject* HashTableBin_of_Object_and_Object__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  sxc_write_ref( &(((ClassHashTableBin_of_Object_and_Object*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Object__init__Int32(type_ClassArrayList_of_Mapping_of_Object_and_Object.create(),local_0_initial_capacity) );
  return context;
}

static SlagInt32 HashTableBin_of_Object_and_Object__index_of_entry__Object( SXCRef context, SXCRef local_0_key )
{
  SlagInt32 local_1_index;
  SlagInt32 local_2__count3573;

  {
    local_1_index = 0;
    local_2__count3573 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Object_and_Object*)context)->property_entries))->property_count;
    while ((local_1_index < local_2__count3573))
    {
      if (CallFn__Object__Logical(4,((ClassMapping_of_Object_and_Object*)((ClassMapping_of_Object_and_Object*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Object_and_Object*)context)->property_entries))->property_data)->data))[local_1_index])))->property_key,local_0_key))
      {
        return local_1_index;
      }
      ++local_1_index;
    }
  }
  return -1;
}

static SlagObject* HashTableBin_of_Object_and_Object__find_entry__Object( SXCRef context, SXCRef local_0_key )
{
  SlagInt32 local_1_index;

  local_1_index = HashTableBin_of_Object_and_Object__index_of_entry__Object(context,local_0_key);
  if ((local_1_index == -1))
  {
    return NULL;
  }
  return ((ClassMapping_of_Object_and_Object*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Object_and_Object*)context)->property_entries))->property_data)->data))[local_1_index]));
}

static SlagLogical HashTableBin_of_Object_and_Object__add_entry__Object_Object( SXCRef context, SXCRef local_0_key, SXCRef local_1_value )
{
  SXCRef local_2_existing;

  local_2_existing = HashTableBin_of_Object_and_Object__find_entry__Object(context,local_0_key);
  if ((local_2_existing == NULL))
  {
    ArrayList_of_Object__add__Object(((ClassHashTableBin_of_Object_and_Object*)context)->property_entries,Mapping_of_Object_and_Object__init__Object_Object(type_ClassMapping_of_Object_and_Object.create(),local_0_key,local_1_value));
    return true;
  }
  else
  {
    sxc_write_ref( &(((ClassMapping_of_Object_and_Object*)local_2_existing)->property_value), local_1_value );
    return false;
  }
}

static SlagLogical HashTableBin_of_Object_and_Object__add_entry__Mapping_of_Object_and_Object( SXCRef context, SXCRef local_0_entry )
{
  SXCRef local_1_existing;

  local_1_existing = HashTableBin_of_Object_and_Object__find_entry__Object(context,((ClassMapping_of_Object_and_Object*)local_0_entry)->property_key);
  if ((local_1_existing == NULL))
  {
    ArrayList_of_Object__add__Object(((ClassHashTableBin_of_Object_and_Object*)context)->property_entries,local_0_entry);
    return true;
  }
  else
  {
    sxc_write_ref( &(((ClassMapping_of_Object_and_Object*)local_1_existing)->property_value), ((ClassMapping_of_Object_and_Object*)local_0_entry)->property_value );
    return false;
  }
}

SlagObject* HashTableBin_of_Object_and_Object__to_String( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader3578;
  SXCRef local_2_entry;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_1__reader3578 = ArrayList_of_Mapping_of_Object_and_Object__create_reader(((ClassHashTableBin_of_Object_and_Object*)context)->property_entries);
  while (ArrayReader_of_Mapping_of_Object_and_Object__has_another(local_1__reader3578))
  {
    local_2_entry = ArrayReader_of_Mapping_of_Object_and_Object__read(local_1__reader3578);
    StringBuilder__print__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str52.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Object_and_Object*)local_2_entry)->property_key)),str53.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Object_and_Object*)local_2_entry)->property_value)),str54.value)));
  }
  return StringBuilder__to_String(local_0_buffer);
}

void HashTableBin_of_Object_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBin_of_Object_and_Object__type_name( SXCRef context )
{
  return str55.value;
}

static SlagObject* CmdLogicalNot__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdLogicalNot.create(),((ClassCmdLogicalNot*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdLogicalNot*)context)->property_operand));
}

static SlagObject* CmdLogicalNot__resolve( SXCRef context )
{
  sxc_write_ref( &(((ClassCmdLogicalNot*)context)->property_operand), CallFn____Object(16,((ClassCmdLogicalNot*)context)->property_operand) );
  SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdLogicalNot*)context)->property_operand,NULL);
  return CallFn____Object(28,CmdUnary__init__Token_Cmd(type_ClassCmdNot.create(),((ClassCmdLogicalNot*)context)->property_t,((ClassCmdLogicalNot*)context)->property_operand));
}

static SlagObject* CmdLogicalNot__to_cpp( SXCRef context )
{
  return String__opADD__String(str385.value,CallFn____Object(15,((ClassCmdLogicalNot*)context)->property_operand));
}

void CmdLogicalNot__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLogicalNot__type_name( SXCRef context )
{
  return str672.value;
}

static SlagObject* CmdLogicalXor__create_duplicate( SXCRef context )
{
  return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdLogicalXor.create(),((ClassCmdLogicalXor*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdLogicalXor*)context)->property_lhs),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdLogicalXor*)context)->property_rhs));
}

static SlagObject* CmdLogicalXor__resolve( SXCRef context )
{
  SlagAnalyzer__prep_binary_operator__CmdBinary_String(sxc_singletons[8],context,NULL);
  SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdLogicalXor*)context)->property_lhs,NULL);
  SlagAnalyzer__require_logical__Cmd_Token(sxc_singletons[8],((ClassCmdLogicalXor*)context)->property_rhs,NULL);
  return CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__optimize(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdXor.create(),((ClassCmdLogicalXor*)context)->property_t,((ClassCmdLogicalXor*)context)->property_lhs,((ClassCmdLogicalXor*)context)->property_rhs));
}

void CmdLogicalXor__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdLogicalXor__type_name( SXCRef context )
{
  return str896.value;
}

static SlagObject* ArrayReader_of_SlagError__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_SlagError__init__Int32(type_ClassArrayList_of_SlagError.create(),ArrayReader_of_SlagError__remaining(context));
  while (ArrayReader_of_SlagError__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_SlagError__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_SlagError__to_String( SXCRef context )
{
  return ArrayList_of_SlagError__to_String(ArrayReader_of_SlagError__to_List(context));
}

static SlagObject* ArrayReader_of_SlagError__init__Collection_of_SlagError_Array_of_SlagError_Int32_Int32( SXCRef context, SXCRef local_0_collection_10883, SXCRef local_1_data_10882, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_SlagError*)context)->property_collection), local_0_collection_10883 );
  sxc_write_ref( &(((ClassArrayReader_of_SlagError*)context)->property_data), local_1_data_10882 );
  ((ClassArrayReader_of_SlagError*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_SlagError*)context)->property_collection);
  }
  ((ClassArrayReader_of_SlagError*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_SlagError*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_SlagError*)context)->property_collection)))
  {
    ((ClassArrayReader_of_SlagError*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_SlagError*)context)->property_collection);
  }
  ((ClassArrayReader_of_SlagError*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_SlagError*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_SlagError__create_duplicate( SXCRef context )
{
  return ArrayReader_of_SlagError__init__Collection_of_SlagError_Array_of_SlagError_Int32_Int32(type_ClassArrayReader_of_SlagError.create(),((ClassArrayReader_of_SlagError*)context)->property_collection,((ClassArrayReader_of_SlagError*)context)->property_data,((ClassArrayReader_of_SlagError*)context)->property_counter,(((ClassArrayReader_of_SlagError*)context)->property_last_exclusive-((ClassArrayReader_of_SlagError*)context)->property_counter));
}

static SlagLogical ArrayReader_of_SlagError__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_SlagError*)context)->property_counter < ((ClassArrayReader_of_SlagError*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_SlagError*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_SlagError*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_SlagError__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_SlagError*)context)->property_last_exclusive-((ClassArrayReader_of_SlagError*)context)->property_counter);
}

static SlagObject* ArrayReader_of_SlagError__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassSlagError**)(((SlagArray*)((ClassArrayReader_of_SlagError*)context)->property_data)->data))[((ClassArrayReader_of_SlagError*)context)->property_counter];
  ++(((ClassArrayReader_of_SlagError*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_SlagError__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_SlagError__type_name( SXCRef context )
{
  return str2028.value;
}

static SlagObject* SlagParser__init__TokenReader( SXCRef context, SXCRef local_0_scanner_6678 )
{
  sxc_write_ref( &(((ClassSlagParser*)context)->property_scanner), local_0_scanner_6678 );
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_catch,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str314.value,str315.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endtry,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str314.value,str316.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_elseif,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str295.value,str296.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_else,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str295.value,str297.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endif,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str295.value,str298.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_case,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str473.value,str301.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_casenext,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str473.value,str302.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_others,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str473.value,str303.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhich,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str299.value,str304.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhichis,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str300.value,str305.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endloop,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str318.value,str319.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhile,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str320.value,str321.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endforeach,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str322.value,str325.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_satisfied,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str306.value,str307.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_unsatisfied,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str306.value,str308.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endcontingent,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str306.value,str309.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str52.value,str54.value));
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_comment,KeywordPairing__init__String_String(type_ClassKeywordPairing.create(),str248.value,str249.value));
  return context;
}

static SlagLogical SlagParser__parse_pending( SXCRef context )
{
  SXCRef local_0__reader1439;
  SXCRef local_1_inc;
  SXCRef local_2__reader1442;
  SXCRef local_3_inc;
  SXCRef local_4_file;

  local_0__reader1439 = ArrayList_of_SlagFile__create_reader(((ClassSlagParser*)context)->property_includes);
  while (ArrayReader_of_SlagFile__has_another(local_0__reader1439))
  {
    local_1_inc = ArrayReader_of_SlagFile__read(local_0__reader1439);
    SlagParser__include__SlagFile(context,local_1_inc);
  }
  ArrayList_of_Object__clear(((ClassSlagParser*)context)->property_includes);
  while ((((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassSlagParser*)context)->property_pending_files))->property_count != 0) || (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassSlagParser*)context)->property_includes))->property_count != 0)) || (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeManager*)sxc_singletons[7])->property_used_frameworks))->property_count != 0)))
  {
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassSlagParser*)context)->property_includes))->property_count != 0))
    {
      local_2__reader1442 = ArrayList_of_SlagFile__create_reader(((ClassSlagParser*)context)->property_includes);
      while (ArrayReader_of_SlagFile__has_another(local_2__reader1442))
      {
        local_3_inc = ArrayReader_of_SlagFile__read(local_2__reader1442);
        SlagParser__include__SlagFile(context,local_3_inc);
      }
      ArrayList_of_Object__clear(((ClassSlagParser*)context)->property_includes);
      goto next_6829;
    }
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassSlagParser*)context)->property_pending_files))->property_count != 0))
    {
      local_4_file = ((ClassSlagFile*)((ClassSlagFile*)ArrayList_of_Object__remove__Int32(((ClassSlagParser*)context)->property_pending_files,0)));
      ArrayList_of_Object__add__Object(((ClassSlagParser*)context)->property_processed_files,local_4_file);
      sxc_write_ref( &(((ClassSlagParser*)context)->property_scanner), SlagPreprocessor__init__String_String(type_ClassSlagPreprocessor.create(),((ClassSlagFile*)local_4_file)->property_filename,((ClassSlagFile*)local_4_file)->property_data) );
      ((ClassSlagParser*)context)->property_requisite_all = false;
      SLAG_TRY
      {
        while (SlagParser__parse_next(context))
        {
        }
      }
      SLAG_CATCH(_err22)
      {
        SlagTypeInfo* _err22_type = _err22->type;
        if (_err22_type->instance_of(&type_ClassSlagError))
        {
          SXCRef local_5_err = _err22;
          Errors__add__SlagError(sxc_singletons[38],local_5_err);
        }
        else
        {
          SLAG_THROW(_err22);
        }
      }
      goto next_6829;
    }
    SlagParser__parse_framework__TypeInfo(context,((ClassTypeInfo*)((ClassTypeInfo*)ArrayList_of_Object__remove__Int32(((ClassTypeManager*)sxc_singletons[7])->property_used_frameworks,0))));
    next_6829:;
  }
  end_6829:;
  return !(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassErrors*)sxc_singletons[38])->property_errors))->property_count != 0);
}

static void SlagParser__parse_framework__TypeInfo( SXCRef context, SXCRef local_0_type )
{
  SXCRef local_1_name;
  SXCRef local_2_f;
  SXCRef local_3_mappings;
  SlagInt32 local_4_i;
  SXCRef local_5__reader1447;
  SXCRef local_6_st;
  SXCRef local_7_list;
  SlagInt32 local_8_index;
  SlagInt32 local_9__count1448;
  SXCRef local_10_t;

  local_1_name = String__before_first__Char(((ClassTypeInfo*)local_0_type)->property_name,((SlagChar)60));
  if (!GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashTable_of_String_and_TypeTemplate*)((ClassTypeManager*)sxc_singletons[7])->property_frameworks)->property_data,local_1_name))
  {
    SLAG_THROW( TypeInfo__error__String(local_0_type,String__opADD__String(str915.value,local_1_name)) );
  }
  local_2_f = ((ClassTypeTemplate*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeTemplate*)((ClassTypeManager*)sxc_singletons[7])->property_frameworks)->property_data,local_1_name));
  local_3_mappings = HashTableBase_of_String_and_Token___and_Object_and_Object__init(type_ClassHashTable_of_String_and_Token__.create());
  local_4_i = 0;
  local_5__reader1447 = ArrayList_of_String__create_reader(((ClassTypeTemplate*)local_2_f)->property_placeholder_types);
  while (ArrayReader_of_String__has_another(local_5__reader1447))
  {
    local_6_st = ArrayReader_of_String__read(local_5__reader1447);
    local_7_list = ((ClassArrayList_of_Token*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_0_type)->property_substitution_tokens))->property_data)->data))[local_4_i]));
    {
      local_8_index = 0;
      local_9__count1448 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_7_list))->property_count;
      while ((local_8_index < local_9__count1448))
      {
        local_10_t = ((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_7_list))->property_data)->data))[local_8_index]));
        sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_7_list))->property_data)->data))+local_8_index, Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_placeholder_id,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_10_t)->property_file_index]))),((ClassToken*)local_10_t)->property_pos,String__opADD__String(str251.value,((ClassToken*)local_10_t)->property_content)) );
        ++local_8_index;
      }
    }
    GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_Token__*)local_3_mappings)->property_data,local_6_st,local_7_list);
    ++local_4_i;
  }
  sxc_write_ref( &(((ClassSlagParser*)context)->property_scanner), TemplateReader__init__ArrayList_of_Token_HashTable_of_String_and_Token__(type_ClassTemplateReader.create(),((ClassTypeTemplate*)local_2_f)->property_definition,local_3_mappings) );
  while (SlagParser__parse_next(context))
  {
  }
  SlagParser__parse_pending(context);
}

static void SlagParser__include__SlagFile( SXCRef context, SXCRef local_0_file )
{
  if ((((ClassSlagFile*)local_0_file)->property_data != NULL))
  {
    ArrayList_of_Object__add__Object(((ClassSlagParser*)context)->property_pending_files,local_0_file);
  }
  else
  {
    sxc_write_ref( &(((ClassSlagFile*)local_0_file)->property_filename), SlagParser__find_file__String_Token(context,((ClassSlagFile*)local_0_file)->property_filename,((ClassSlagFile*)local_0_file)->property_t) );
    if (SlagParser__already_included__String(context,((ClassSlagFile*)local_0_file)->property_filename))
    {
      return;
    }
    sxc_write_ref( &(((ClassSlagFile*)local_0_file)->property_data), StringManager__create_from__ArrayList_of_Char(sxc_singletons[18],((ClassArrayList_of_Char*)CallFn____Object(13,((AspectReader_of_Char*)FileReader__init__String(type_ClassFileReader.create(),((ClassFile*)File__init__String(type_ClassFile.create(),((ClassSlagFile*)local_0_file)->property_filename))->property_filepath))))) );
    ArrayList_of_Object__add__Object(((ClassSlagParser*)context)->property_pending_files,local_0_file);
  }
}

static void SlagParser__include_dir__String_Token( SXCRef context, SXCRef local_0_filename, SXCRef local_1_t )
{
  SXCRef local_2_listing;
  SXCRef local_3__reader1453;
  SXCRef local_4_f;
  SXCRef local_5__reader1455;
  SXCRef local_6_f;

  local_0_filename = SlagParser__find_file__String_Token(context,local_0_filename,local_1_t);
  if (File__is_directory(File__init__String(type_ClassFile.create(),local_0_filename)))
  {
    ArrayList_of_Object__add__Object(((ClassSlagParser*)context)->property_src_paths,local_0_filename);
    local_2_listing = File__directory_listing__Int32(File__init__String(type_ClassFile.create(),local_0_filename),((((ClassFileManager*)sxc_singletons[16])->property_absolute|((ClassFileManager*)sxc_singletons[16])->property_recursive)|((ClassFileManager*)sxc_singletons[16])->property_ignore_hidden));
    local_3__reader1453 = ArrayList_of_String__create_reader(local_2_listing);
    while (ArrayReader_of_String__has_another(local_3__reader1453))
    {
      local_4_f = ArrayReader_of_String__read(local_3__reader1453);
      if (File__is_directory(File__init__String(type_ClassFile.create(),local_4_f)))
      {
        ArrayList_of_Object__add__Object(((ClassSlagParser*)context)->property_src_paths,local_4_f);
      }
    }
    local_5__reader1455 = ArrayList_of_String__create_reader(local_2_listing);
    while (ArrayReader_of_String__has_another(local_5__reader1455))
    {
      local_6_f = ArrayReader_of_String__read(local_5__reader1455);
      if (!File__is_directory(File__init__String(type_ClassFile.create(),local_6_f)))
      {
        ArrayList_of_Object__add__Object(((ClassSlagParser*)context)->property_includes,SlagFile__init__Token_String_String(type_ClassSlagFile.create(),local_1_t,local_6_f,NULL));
      }
    }
  }
  else
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str196.value),local_0_filename),str619.value)))) );
  }
}

static SlagLogical SlagParser__already_included__String( SXCRef context, SXCRef local_0_filename )
{
  SXCRef local_1__reader1457;
  SXCRef local_2_file;
  SXCRef local_3__reader1459;
  SXCRef local_4_file;

  local_1__reader1457 = ArrayList_of_SlagFile__create_reader(((ClassSlagParser*)context)->property_pending_files);
  while (ArrayReader_of_SlagFile__has_another(local_1__reader1457))
  {
    local_2_file = ArrayReader_of_SlagFile__read(local_1__reader1457);
    if (String__opEQ__String(((ClassSlagFile*)local_2_file)->property_filename,local_0_filename))
    {
      return true;
    }
  }
  local_3__reader1459 = ArrayList_of_SlagFile__create_reader(((ClassSlagParser*)context)->property_processed_files);
  while (ArrayReader_of_SlagFile__has_another(local_3__reader1459))
  {
    local_4_file = ArrayReader_of_SlagFile__read(local_3__reader1459);
    if (String__opEQ__String(((ClassSlagFile*)local_4_file)->property_filename,local_0_filename))
    {
      return true;
    }
  }
  return false;
}

static SlagObject* SlagParser__find_file__String_Token( SXCRef context, SXCRef local_0_filename, SXCRef local_1_t )
{
  SXCRef local_2__reader1462;
  SXCRef local_3_path;
  SXCRef local_4_f;
  SXCRef local_5_mesg;

  if (File__exists(File__init__String(type_ClassFile.create(),local_0_filename)))
  {
    return File__absolute_filepath(File__init__String(type_ClassFile.create(),local_0_filename));
  }
  local_2__reader1462 = ArrayList_of_String__create_reader(((ClassSlagParser*)context)->property_src_paths);
  while (ArrayReader_of_String__has_another(local_2__reader1462))
  {
    local_3_path = ArrayReader_of_String__read(local_2__reader1462);
    local_4_f = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),local_3_path),str390.value),local_0_filename));
    if (File__exists(File__init__String(type_ClassFile.create(),local_4_f)))
    {
      return File__absolute_filepath(File__init__String(type_ClassFile.create(),local_4_f));
    }
  }
  local_5_mesg = StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str476.value),local_0_filename),str92.value));
  if ((local_1_t != NULL))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,local_5_mesg)) );
  }
  else
  {
    SLAG_THROW( SlagError__init__String_String(type_ClassSlagError.create(),str477.value,local_5_mesg) );
  }
}

static SlagLogical SlagParser__next_is_end_cmd( SXCRef context )
{
  SlagInt32 local_0_t;

  local_0_t = ((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type;
  return ((local_0_t == ((ClassTokenManager*)sxc_singletons[2])->property_eol) || (local_0_t == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_semicolon));
}

static SlagLogical SlagParser__next_elseif_is_not_at_eol( SXCRef context )
{
  SlagInt32 local_0_pos;
  SlagInt32 local_1_count;
  SXCRef local_2_t;

  if ((((ClassToken*)TokenReader__peek__Int32(((ClassSlagParser*)context)->property_scanner,3))->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),TokenReader__peek__Int32(((ClassSlagParser*)context)->property_scanner,3),str748.value)) );
  }
  local_0_pos = 4;
  local_1_count = 1;
  while ((local_1_count > 0))
  {
    local_2_t = TokenReader__peek__Int32(((ClassSlagParser*)context)->property_scanner,local_0_pos);
    if ((((ClassToken*)local_2_t)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
    {
      return false;
    }
    if ((((ClassToken*)local_2_t)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
    {
      ++local_1_count;
    }
    if ((((ClassToken*)local_2_t)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren))
    {
      --local_1_count;
    }
    ++local_0_pos;
  }
  return (((ClassToken*)TokenReader__peek__Int32(((ClassSlagParser*)context)->property_scanner,local_0_pos))->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_eol);
}

static SlagLogical SlagParser__consume__Int32( SXCRef context, SlagInt32 local_0_token_type )
{
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type != local_0_token_type))
  {
    return false;
  }
  TokenReader__read(((ClassSlagParser*)context)->property_scanner);
  return true;
}

static SlagLogical SlagParser__consume_id__String( SXCRef context, SXCRef local_0_st )
{
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_identifier))
  {
    return false;
  }
  if (!String__opEQ__String(((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_content,local_0_st))
  {
    return false;
  }
  TokenReader__read(((ClassSlagParser*)context)->property_scanner);
  return true;
}

static void SlagParser__must_consume_id__String( SXCRef context, SXCRef local_0_st )
{
  if (!SlagParser__consume_id__String(context,local_0_st))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str197.value),local_0_st),str596.value)))) );
  }
}

static void SlagParser__discard_eols( SXCRef context )
{
  while ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
  {
    TokenReader__read(((ClassSlagParser*)context)->property_scanner);
  }
}

static void SlagParser__must_consume__Int32_String( SXCRef context, SlagInt32 local_0_type, SXCRef local_1_mesg )
{
  SlagParser__discard_eols(context);
  if (!SlagParser__consume__Int32(context,local_0_type))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str197.value),local_1_mesg),str596.value)))) );
  }
}

static SlagLogical SlagParser__consume_eol( SXCRef context )
{
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
  {
    TokenReader__read(((ClassSlagParser*)context)->property_scanner);
    return true;
  }
  return false;
}

static SlagLogical SlagParser__consume_end_cmd( SXCRef context )
{
  return (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_semicolon) || SlagParser__consume_eol(context));
}

static void SlagParser__must_consume_eol( SXCRef context )
{
  if (!SlagParser__consume_eol(context))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str722.value)) );
  }
}

static void SlagParser__must_consume_end_cmd( SXCRef context )
{
  if (!SlagParser__consume_end_cmd(context))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str841.value)) );
  }
}

static SlagObject* SlagParser__must_read_identifier__String( SXCRef context, SXCRef local_0_mesg )
{
  while ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
  {
    TokenReader__read(((ClassSlagParser*)context)->property_scanner);
  }
  if (!(((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_identifier))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),local_0_mesg)) );
  }
  return ((ClassToken*)TokenReader__read(((ClassSlagParser*)context)->property_scanner))->property_content;
}

static SlagObject* SlagParser__must_read_string__String( SXCRef context, SXCRef local_0_mesg )
{
  if (!(((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_string))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),local_0_mesg)) );
  }
  return ((ClassToken*)TokenReader__read(((ClassSlagParser*)context)->property_scanner))->property_content;
}

static SlagLogical SlagParser__parse_next( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_quals;
  SXCRef local_2_used_framework;

  SlagParser__discard_eols(context);
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eof))
  {
    return false;
  }
  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  while ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_bracket))
  {
    SlagParser__parse_directive(context);
    return true;
  }
  local_1_quals = SlagParser__parse_type_qualifiers(context);
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_class))
  {
    SlagParser__parse_type_def__Token_Qualifiers_Int32_String(context,local_0_t,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags))),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endclass,str269.value);
    return true;
  }
  if (((((ClassQualifiers*)local_1_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags) != 0))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str902.value)) );
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_aspect))
  {
    SlagParser__parse_type_def__Token_Qualifiers_Int32_String(context,local_0_t,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags))),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endaspect,str270.value);
    return true;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_augment))
  {
    SlagParser__parse_type_def__Token_Qualifiers_Int32_String(context,local_0_t,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_augment)->property_flags))),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endaugment,str272.value);
    return true;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_compound))
  {
    SlagParser__parse_compound_def__Token_Qualifiers(context,local_0_t,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_compound)->property_flags))));
    return true;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_enum))
  {
    SlagParser__parse_type_def__Token_Qualifiers_Int32_String(context,local_0_t,((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_enum)->property_flags))),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endenum,str271.value);
    return true;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_framework))
  {
    SlagParser__parse_framework(context);
    return true;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_useframework))
  {
    local_2_used_framework = SlagParser__parse_data_type(context);
    SlagParser__must_consume_eol(context);
    ArrayList_of_Object__add__Object(((ClassTypeManager*)sxc_singletons[7])->property_used_frameworks,local_2_used_framework);
    return true;
  }
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str911.value)) );
}

static void SlagParser__parse_directive( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_include_file;
  SXCRef local_2__reader1494;
  SXCRef local_3__local_1493;

  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_bracket,str52.value);
  if (SlagParser__consume_id__String(context,str613.value))
  {
    local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    ArrayList_of_Object__add__Object(((ClassSlagParser*)context)->property_includes,SlagFile__init__Token_String_String(type_ClassSlagFile.create(),local_0_t,SlagParser__must_read_string__String(context,str614.value),NULL));
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,str54.value);
  }
  else if (SlagParser__consume_id__String(context,str615.value))
  {
    local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    SlagParser__include_dir__String_Token(context,SlagParser__must_read_string__String(context,str616.value),local_0_t);
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,str54.value);
  }
  else if (SlagParser__consume_id__String(context,str620.value))
  {
    local_1_include_file = SlagParser__must_read_string__String(context,str616.value);
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,str54.value);
    local_2__reader1494 = SlagPreprocessor__init__String(type_ClassSlagPreprocessor.create(),SlagParser__find_file__String_Token(context,local_1_include_file,local_0_t));
    while (TokenReader__has_another(local_2__reader1494))
    {
      local_3__local_1493 = TokenReader__read(local_2__reader1494);
    }
  }
  else if (SlagParser__consume_id__String(context,str621.value))
  {
    sxc_write_ref( &(((ClassTypeManager*)sxc_singletons[7])->property_main_class), SlagParser__parse_data_type(context) );
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,str54.value);
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_requisite))
  {
    SlagParser__must_consume_id__String(context,str651.value);
    ((ClassSlagParser*)context)->property_requisite_all = true;
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,str54.value);
  }
  else
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str652.value)) );
  }
}

static void SlagParser__parse_framework( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_name;
  SXCRef local_2_template;
  SXCRef local_3_def_t;
  SlagInt32 local_4_def_type;

  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  local_1_name = SlagParser__must_read_identifier__String(context,str906.value);
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_template))
  {
    local_2_template = TypeTemplate__init__Token_Qualifiers_String_ArrayList_of_String_Int32_String(type_ClassTypeTemplate.create(),local_0_t,NULL,local_1_name,SlagParser__parse_placeholder_types__Logical(context,false),0,NULL);
    for (;;)
    {
      local_3_def_t = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
      local_4_def_type = ((ClassToken*)local_3_def_t)->property_type;
      if ((local_4_def_type == ((ClassTokenManager*)sxc_singletons[2])->property_eof))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str907.value)) );
      }
      if ((local_4_def_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_endframework))
      {
        TypeManager__store_framework__TypeTemplate(sxc_singletons[7],local_2_template);
        return;
      }
      ArrayList_of_Object__add__Object(((ClassTypeTemplate*)local_2_template)->property_definition,local_3_def_t);
    }
  }
  else
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str910.value)) );
  }
}

static SlagObject* SlagParser__parse_data_type( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_name;
  SXCRef local_2_buffer;
  SXCRef local_3_arg_types;
  SXCRef local_4_return_type;
  SlagChar local_5_letter;
  SXCRef local_6__reader1507;
  SXCRef local_7_arg_type;
  SXCRef local_8_sig;
  SlagChar local_9_letter;
  SXCRef local_10__reader1511;
  SXCRef local_11_arg;
  SXCRef local_12_parser;
  SXCRef local_13_subst_tokens;
  SlagInt32 local_14_list_dims;
  SXCRef local_15_flat_list;
  SlagLogical local_16_first;
  SXCRef local_17__reader1515;
  SXCRef local_18_subst_group;
  SXCRef local_19__reader1517;
  SXCRef local_20_token;
  SXCRef local_21_flat_list;

  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  local_1_name = NULL;
  local_1_name = SlagParser__must_read_identifier__String(context,str622.value);
  if (String__opEQ__String(local_1_name,str623.value))
  {
    if ((((ClassSlagParser*)context)->property_this_type == NULL))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str624.value)) );
    }
    return ((ClassSlagParser*)context)->property_this_type;
  }
  else if (String__opEQ__String(local_1_name,str625.value))
  {
    local_2_buffer = StringBuilder__init(type_ClassStringBuilder.create());
    local_3_arg_types = ArrayList_of_String__init(type_ClassArrayList_of_String.create());
    local_4_return_type = NULL;
    StringBuilder__print__String(local_2_buffer,str626.value);
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
    {
      if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren))
      {
        ArrayList_of_Object__add__Object(local_3_arg_types,((ClassString*)((ClassTypeInfo*)SlagParser__parse_data_type(context))->property_name));
        StringBuilder__print__String(local_2_buffer,DelegateMaker__filter__String(sxc_singletons[31],ArrayList_of_String__last(local_3_arg_types)));
        while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
        {
          StringBuilder__print__String(local_2_buffer,str629.value);
          ArrayList_of_Object__add__Object(local_3_arg_types,((ClassString*)((ClassTypeInfo*)SlagParser__parse_data_type(context))->property_name));
          StringBuilder__print__String(local_2_buffer,DelegateMaker__filter__String(sxc_singletons[31],ArrayList_of_String__last(local_3_arg_types)));
        }
        SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str630.value);
      }
    }
    StringBuilder__print__String(local_2_buffer,str631.value);
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_member_access))
    {
      local_4_return_type = ((ClassString*)((ClassTypeInfo*)SlagParser__parse_data_type(context))->property_name);
      StringBuilder__print__String(local_2_buffer,DelegateMaker__filter__String(sxc_singletons[31],local_4_return_type));
    }
    local_1_name = StringBuilder__to_String(local_2_buffer);
    if (!GenericHashTable_of_Object_and_Object__contains__Object(((ClassHashSet_of_String*)((ClassSlagParserManager*)sxc_singletons[35])->property_delegate_types)->property_data,local_1_name))
    {
      HashSet_of_String__add__String(((ClassSlagParserManager*)sxc_singletons[35])->property_delegate_types,local_1_name);
      ArrayList_of_Char__clear(((ClassStringBuilder*)local_2_buffer)->property_data);
      StringBuilder__print__String(local_2_buffer,str632.value);
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_arg_types))->property_count != 0))
      {
        StringBuilder__print__String(local_2_buffer,String__opADD__String(((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_arg_types))->property_data)->data))[0]))),str633.value));
        local_5_letter = ((SlagChar)98);
        local_6__reader1507 = ArrayList_of_String__from__Int32(local_3_arg_types,1);
        while (ArrayReader_of_String__has_another(local_6__reader1507))
        {
          local_7_arg_type = ArrayReader_of_String__read(local_6__reader1507);
          StringBuilder__print__String(local_2_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str634.value),local_7_arg_type),str607.value),Global__to_String__Char(sxc_singletons[21],local_5_letter))));
          local_5_letter = ((SlagChar)((SlagInt32)(((SlagInt32)local_5_letter)+1)));
        }
      }
      StringBuilder__print__String(local_2_buffer,str635.value);
      if ((local_4_return_type != NULL))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_2_buffer)->property_data,((SlagChar)46));
        StringBuilder__print__String(local_2_buffer,local_4_return_type);
      }
      local_8_sig = StringBuilder__to_String(local_2_buffer);
      ArrayList_of_Char__clear(((ClassStringBuilder*)local_2_buffer)->property_data);
      TextWriter__println__String(local_2_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str636.value),local_1_name),str637.value)));
      TextWriter__println__String(local_2_buffer,str638.value);
      TextWriter__println__String(local_2_buffer,String__opADD__String(str639.value,local_8_sig));
      TextWriter__println__String(local_2_buffer,str269.value);
      CallFn__Char(18,local_2_buffer,((SlagChar)10));
      StringBuilder__print__String(local_2_buffer,String__opADD__String(String__opADD__String(str640.value,local_1_name),str641.value));
      TextWriter__println__String(local_2_buffer,local_1_name);
      TextWriter__println__String(local_2_buffer,str642.value);
      TextWriter__println__String(local_2_buffer,str643.value);
      TextWriter__println__String(local_2_buffer,String__opADD__String(str644.value,local_8_sig));
      if ((local_4_return_type != NULL))
      {
        StringBuilder__print__String(local_2_buffer,str645.value);
      }
      StringBuilder__print__String(local_2_buffer,str646.value);
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_arg_types))->property_count != 0))
      {
        StringBuilder__print__String(local_2_buffer,str633.value);
        local_9_letter = ((SlagChar)98);
        local_10__reader1511 = ArrayList_of_String__from__Int32(local_3_arg_types,1);
        while (ArrayReader_of_String__has_another(local_10__reader1511))
        {
          local_11_arg = ArrayReader_of_String__read(local_10__reader1511);
          StringBuilder__print__String(local_2_buffer,String__opADD__Char(str634.value,local_9_letter));
          local_9_letter = ((SlagChar)((SlagInt32)(((SlagInt32)local_9_letter)+1)));
        }
      }
      TextWriter__println__String(local_2_buffer,str635.value);
      TextWriter__println__String(local_2_buffer,str269.value);
      local_12_parser = SlagParser__init__TokenReader(type_ClassSlagParser.create(),SlagPreprocessor__init__String_String(type_ClassSlagPreprocessor.create(),str647.value,StringBuilder__to_String(local_2_buffer)));
      while (SlagParser__parse_next(local_12_parser))
      {
      }
    }
  }
  local_13_subst_tokens = SlagParser__parse_substitution_tokens(context);
  local_14_list_dims = SlagParser__parse_list_dimensions(context);
  while ((local_14_list_dims != 0))
  {
    if ((local_13_subst_tokens != NULL))
    {
      local_15_flat_list = ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),4);
      ArrayList_of_Object__add__Object(local_15_flat_list,Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_identifier,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_0_t)->property_file_index]))),((ClassToken*)local_0_t)->property_pos,local_1_name));
      ArrayList_of_Object__add__Object(local_15_flat_list,Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_template,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_0_t)->property_file_index]))),((ClassToken*)local_0_t)->property_pos,NULL));
      local_16_first = true;
      local_17__reader1515 = ArrayList_of_ArrayList_of_Token__create_reader(local_13_subst_tokens);
      while (ArrayReader_of_ArrayList_of_Token__has_another(local_17__reader1515))
      {
        local_18_subst_group = ArrayReader_of_ArrayList_of_Token__read(local_17__reader1515);
        if (local_16_first)
        {
          local_16_first = false;
        }
        else
        {
          ArrayList_of_Object__add__Object(local_15_flat_list,Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_0_t)->property_file_index]))),((ClassToken*)local_0_t)->property_pos,NULL));
        }
        local_19__reader1517 = ArrayList_of_Token__create_reader(local_18_subst_group);
        while (ArrayReader_of_Token__has_another(local_19__reader1517))
        {
          local_20_token = ArrayReader_of_Token__read(local_19__reader1517);
          ArrayList_of_Object__add__Object(local_15_flat_list,local_20_token);
        }
      }
      ArrayList_of_Object__add__Object(local_15_flat_list,Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_template,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_0_t)->property_file_index]))),((ClassToken*)local_0_t)->property_pos,NULL));
      ArrayList_of_Object__clear(local_13_subst_tokens);
      ArrayList_of_Object__add__Object(local_13_subst_tokens,local_15_flat_list);
    }
    else
    {
      local_21_flat_list = ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),1);
      ArrayList_of_Object__add__Object(local_21_flat_list,Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_identifier,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_0_t)->property_file_index]))),((ClassToken*)local_0_t)->property_pos,local_1_name));
      local_13_subst_tokens = ArrayList_of_ArrayList_of_Token__init__Int32(type_ClassArrayList_of_ArrayList_of_Token.create(),1);
      ArrayList_of_Object__add__Object(local_13_subst_tokens,local_21_flat_list);
    }
    local_1_name = str650.value;
    --local_14_list_dims;
  }
  return TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],local_0_t,local_1_name,local_13_subst_tokens);
}

static SlagObject* SlagParser__parse_substitution_tokens( SXCRef context )
{
  SXCRef local_0_t1;
  SXCRef local_1_list;
  SXCRef local_2_buffer;
  SXCRef local_3_bracket_stack;
  SXCRef local_4_t;
  SlagInt32 local_5_which_1520;
  SXCRef local_6_open_t;
  SXCRef local_7_open_t;
  SXCRef local_8_open_t;
  SXCRef local_9_open_t;

  local_0_t1 = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_template))
  {
    return NULL;
  }
  local_1_list = ArrayList_of_ArrayList_of_Token__init__Int32(type_ClassArrayList_of_ArrayList_of_Token.create(),2);
  local_2_buffer = ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),2);
  local_3_bracket_stack = ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),4);
  ArrayList_of_Object__add__Object(local_3_bracket_stack,local_0_t1);
  while ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_bracket_stack))->property_count != 0))
  {
    local_4_t = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
    local_5_which_1520 = ((ClassToken*)local_4_t)->property_type;
    if (((local_5_which_1520 == ((ClassTokenManager*)sxc_singletons[2])->property_eof) || (local_5_which_1520 == ((ClassTokenManager*)sxc_singletons[2])->property_eol)))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t1,str648.value)) );
    }
    else if (((((local_5_which_1520 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_template) || (local_5_which_1520 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren)) || (local_5_which_1520 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_brace)) || (local_5_which_1520 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_bracket)))
    {
      ArrayList_of_Object__add__Object(local_3_bracket_stack,local_4_t);
      ArrayList_of_Object__add__Object(local_2_buffer,local_4_t);
    }
    else if ((local_5_which_1520 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_template))
    {
      local_6_open_t = ArrayList_of_Token__remove_last(local_3_bracket_stack);
      if ((((ClassToken*)local_6_open_t)->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_template))
      {
        ((ClassToken*)local_6_open_t)->property_type = (((ClassToken*)local_6_open_t)->property_type+1);
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str649.value),Global__to_String__Object(sxc_singletons[21],local_6_open_t)),str596.value)))) );
      }
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_bracket_stack))->property_count != 0))
      {
        ArrayList_of_Object__add__Object(local_2_buffer,local_4_t);
      }
    }
    else if ((local_5_which_1520 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren))
    {
      local_7_open_t = ArrayList_of_Token__remove_last(local_3_bracket_stack);
      if ((((ClassToken*)local_7_open_t)->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
      {
        ((ClassToken*)local_7_open_t)->property_type = (((ClassToken*)local_7_open_t)->property_type+1);
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str649.value),Global__to_String__Object(sxc_singletons[21],local_7_open_t)),str596.value)))) );
      }
      ArrayList_of_Object__add__Object(local_2_buffer,local_4_t);
    }
    else if ((local_5_which_1520 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket))
    {
      local_8_open_t = ArrayList_of_Token__remove_last(local_3_bracket_stack);
      if ((((ClassToken*)local_8_open_t)->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_bracket))
      {
        ((ClassToken*)local_8_open_t)->property_type = (((ClassToken*)local_8_open_t)->property_type+1);
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str649.value),Global__to_String__Object(sxc_singletons[21],local_8_open_t)),str596.value)))) );
      }
      ArrayList_of_Object__add__Object(local_2_buffer,local_4_t);
    }
    else if ((local_5_which_1520 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_brace))
    {
      local_9_open_t = ArrayList_of_Token__remove_last(local_3_bracket_stack);
      if ((((ClassToken*)local_9_open_t)->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_brace))
      {
        ((ClassToken*)local_9_open_t)->property_type = (((ClassToken*)local_9_open_t)->property_type+1);
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str649.value),Global__to_String__Object(sxc_singletons[21],local_9_open_t)),str596.value)))) );
      }
      ArrayList_of_Object__add__Object(local_2_buffer,local_4_t);
    }
    else if ((local_5_which_1520 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
    {
      if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_3_bracket_stack))->property_count == 1))
      {
        ArrayList_of_Object__add__Object(local_1_list,local_2_buffer);
        local_2_buffer = ArrayList_of_Token__init__Int32(type_ClassArrayList_of_Token.create(),2);
      }
      else
      {
        ArrayList_of_Object__add__Object(local_2_buffer,local_4_t);
      }
    }
    else
    {
      ArrayList_of_Object__add__Object(local_2_buffer,local_4_t);
    }
  }
  ArrayList_of_Object__add__Object(local_1_list,local_2_buffer);
  return local_1_list;
}

static SlagInt32 SlagParser__parse_list_dimensions( SXCRef context )
{
  SlagInt32 local_0_count;

  local_0_count = 0;
  while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_dimension))
  {
    ++local_0_count;
  }
  return local_0_count;
}

static SlagObject* SlagParser__parse_type_qualifiers( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_quals;

  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  local_1_quals = Qualifiers__init__Int32(type_ClassQualifiers.create(),0);
  if (((ClassSlagParser*)context)->property_requisite_all)
  {
    local_1_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags)));
  }
  for (;;)
  {
    next_7123:;
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_abstract))
    {
      local_1_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags)));
      goto next_7123;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_underlying))
    {
      local_1_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_underlying)->property_flags)));
      goto next_7123;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_overlaying))
    {
      local_1_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_overlaying)->property_flags)));
      goto next_7123;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_requisite))
    {
      local_1_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags)));
      goto next_7123;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_singleton))
    {
      local_1_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags)));
      goto next_7123;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_runtime))
    {
      local_1_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_runtime)->property_flags)));
      goto next_7123;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_deferred))
    {
      local_1_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_deferred)->property_flags)));
      local_1_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_1_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags)));
      goto next_7123;
    }
    if ((((((ClassQualifiers*)local_1_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_underlying)->property_flags) != 0) && ((((ClassQualifiers*)local_1_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_overlaying)->property_flags) != 0)))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str653.value)) );
    }
    return local_1_quals;
  }
  end_7123:;
}

static SlagObject* SlagParser__parse_property_qualifiers( SXCRef context )
{
  SXCRef local_0_quals;

  local_0_quals = Qualifiers__init__Int32(type_ClassQualifiers.create(),0);
  for (;;)
  {
    next_7862:;
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_abstract))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags)));
      goto next_7862;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_public))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public)->property_flags)));
      goto next_7862;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_private))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_private)->property_flags)));
      goto next_7862;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_readonly))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_readonly)->property_flags)));
      goto next_7862;
    }
    return local_0_quals;
  }
  end_7862:;
}

static SlagObject* SlagParser__parse_method_qualifiers( SXCRef context )
{
  SXCRef local_0_quals;
  SXCRef local_1_t;

  local_0_quals = Qualifiers__init__Int32(type_ClassQualifiers.create(),0);
  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  for (;;)
  {
    next_7256:;
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_abstract))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags)));
      goto next_7256;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_public))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public)->property_flags)));
      goto next_7256;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_private))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_private)->property_flags)));
      goto next_7256;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_native))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags)));
      goto next_7256;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_requisite))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags)));
      goto next_7256;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_propagated))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_propagated)->property_flags)));
      goto next_7256;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_overlaying))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_overlaying)->property_flags)));
      goto next_7256;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_underlying))
    {
      local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_underlying)->property_flags)));
      goto next_7256;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_generic))
    {
      if (((ClassSlagCompiler*)sxc_singletons[14])->property_allow_generic)
      {
        local_0_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_0_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_generic)->property_flags)));
      }
      goto next_7256;
    }
    goto end_7256;
  }
  end_7256:;
  if ((((((ClassQualifiers*)local_0_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_underlying)->property_flags) != 0) && ((((ClassQualifiers*)local_0_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_overlaying)->property_flags) != 0)))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,str708.value)) );
  }
  if ((((((ClassQualifiers*)local_0_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_generic)->property_flags) != 0) && ((((ClassQualifiers*)local_0_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags) != 0)))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,str709.value)) );
  }
  return local_0_quals;
}

static void SlagParser__parse_type_def__Token_Qualifiers_Int32_String( SXCRef context, SXCRef local_0_t, SXCRef local_1_quals, SlagInt32 local_2_end_type, SXCRef local_3_end_symbol )
{
  SXCRef local_4_name;
  SXCRef local_5_template;
  SlagLogical local_6_found_eol;
  SXCRef local_7_def_t;
  SlagInt32 local_8_def_type;
  SlagInt32 local_9_which_1559;

  local_4_name = SlagParser__must_read_identifier__String(context,str654.value);
  if (((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_template) || ((((ClassQualifiers*)local_1_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_augment)->property_flags) != 0)))
  {
    local_5_template = TypeTemplate__init__Token_Qualifiers_String_ArrayList_of_String_Int32_String(type_ClassTypeTemplate.create(),local_0_t,local_1_quals,local_4_name,SlagParser__parse_placeholder_types__Logical(context,((((ClassQualifiers*)local_1_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_augment)->property_flags) != 0)),local_2_end_type,local_3_end_symbol);
    local_6_found_eol = false;
    for (;;)
    {
      local_7_def_t = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
      local_8_def_type = ((ClassToken*)local_7_def_t)->property_type;
      if (((local_8_def_type == ((ClassTokenManager*)sxc_singletons[2])->property_eof) || ((local_8_def_type >= ((ClassTokenManager*)sxc_singletons[2])->property_first_type_def) && (local_8_def_type <= ((ClassTokenManager*)sxc_singletons[2])->property_last_type_def))))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str661.value),local_3_end_symbol),str662.value)))) );
      }
      ArrayList_of_Object__add__Object(((ClassTypeTemplate*)local_5_template)->property_definition,local_7_def_t);
      local_9_which_1559 = local_8_def_type;
      if ((local_9_which_1559 == local_2_end_type))
      {
        ArrayList_of_Object__add__Object(((ClassTypeTemplate*)local_5_template)->property_definition,Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_eol,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_7_def_t)->property_file_index]))),((ClassToken*)local_7_def_t)->property_pos,NULL));
        TypeManager__store__TypeTemplate(sxc_singletons[7],local_5_template);
        return;
      }
      else if ((local_9_which_1559 == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
      {
        local_6_found_eol = true;
      }
      else if ((local_9_which_1559 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_semicolon))
      {
        if (!local_6_found_eol)
        {
          if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
          {
            local_2_end_type = ((ClassTokenManager*)sxc_singletons[2])->property_eol;
          }
        }
      }
    }
  }
  else
  {
    SlagParser__parse_type_def__TokenReader_TypeInfo_Qualifiers_Int32_String(context,((ClassSlagParser*)context)->property_scanner,TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),local_0_t,local_4_name,local_1_quals,NULL),local_1_quals,local_2_end_type,local_3_end_symbol);
  }
}

static void SlagParser__parse_type_def__TokenReader_TypeInfo_Qualifiers_Int32_String( SXCRef context, SXCRef local_0_scanner_6679, SXCRef local_1_def, SXCRef local_2_quals, SlagInt32 local_3_end_type, SXCRef local_4_end_symbol )
{
  SXCRef local_5_augment_name;
  SXCRef local_6_augment_def;
  SXCRef local_7_t;
  SXCRef local_8_m_def;
  SXCRef local_9__reader1567;
  SXCRef local_10_param;

  sxc_write_ref( &(((ClassSlagParser*)context)->property_scanner), local_0_scanner_6679 );
  if (((((ClassQualifiers*)local_2_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_augment)->property_flags) != 0))
  {
    if ((((((ClassQualifiers*)local_2_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_underlying)->property_flags) != 0) || ((((ClassQualifiers*)local_2_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_overlaying)->property_flags) != 0)))
    {
      local_5_augment_name = ((ClassTypeInfo*)local_1_def)->property_name;
      sxc_write_ref( &(((ClassTypeInfo*)local_1_def)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_2_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags))) );
      sxc_write_ref( &(((ClassTypeInfo*)local_1_def)->property_name), StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassTypeInfo*)local_1_def)->property_name),str666.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],SlagParserManager__unique_id(sxc_singletons[35]),10)))) );
      TypeManager__define_type__TypeInfo(sxc_singletons[7],local_1_def);
      local_6_augment_def = TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),((ClassTypeInfo*)local_1_def)->property_t,local_5_augment_name,((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_augment,NULL);
      ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_6_augment_def)->property_base_types,local_1_def);
      ArrayList_of_Object__add__Object(((ClassTypeManager*)sxc_singletons[7])->property_augments,local_6_augment_def);
    }
    else
    {
      ArrayList_of_Object__add__Object(((ClassTypeManager*)sxc_singletons[7])->property_augments,local_1_def);
      sxc_write_ref( &(((ClassTypeInfo*)local_1_def)->property_qualifiers), local_2_quals );
    }
  }
  else
  {
    local_1_def = TypeManager__define_type__TypeInfo(sxc_singletons[7],local_1_def);
    sxc_write_ref( &(((ClassTypeInfo*)local_1_def)->property_qualifiers), local_2_quals );
  }
  sxc_write_ref( &(((ClassSlagParser*)context)->property_this_type), local_1_def );
  if ((((((ClassQualifiers*)local_2_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0) && !(((ClassTypeManager*)sxc_singletons[7])->property_main_class != NULL)))
  {
    sxc_write_ref( &(((ClassTypeManager*)sxc_singletons[7])->property_main_class), local_1_def );
  }
  if (((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren) && ((((ClassQualifiers*)((ClassTypeInfo*)local_1_def)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags) != 0)))
  {
    local_7_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    local_8_m_def = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),local_7_t,((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public,local_1_def,str667.value);
    if (((((ClassQualifiers*)((ClassTypeInfo*)local_1_def)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0))
    {
      sxc_write_ref( &(((ClassMethodInfo*)local_8_m_def)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_8_m_def)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))) );
    }
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_1_def)->property_methods,local_8_m_def);
    SlagParser__parse_param_list__MethodInfo(context,local_8_m_def);
    sxc_write_ref( &(((ClassMethodInfo*)local_8_m_def)->property_body), CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),local_7_t,0) );
    local_9__reader1567 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_8_m_def)->property_parameters);
    while (CallFn____Logical(14,local_9__reader1567))
    {
      local_10_param = CallFn____Object(45,local_9__reader1567);
      if ((((ClassParameterInfo*)local_10_param)->property_type != NULL))
      {
        ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_1_def)->property_properties,PropertyInfo__init__Token_TypeInfo_Qualifiers_TypeInfo_String_Cmd_Int32(type_ClassPropertyInfo.create(),((ClassParameterInfo*)local_10_param)->property_t,local_1_def,((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public,((ClassParameterInfo*)local_10_param)->property_type,((ClassParameterInfo*)local_10_param)->property_name,NULL,-1));
        sxc_write_ref( &(((ClassParameterInfo*)local_10_param)->property_type), NULL );
      }
    }
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_colon))
  {
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_1_def)->property_base_types,SlagParser__parse_data_type(context));
    while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
    {
      ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_1_def)->property_base_types,SlagParser__parse_data_type(context));
    }
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_semicolon))
  {
    SlagParser__must_consume_eol(context);
    sxc_write_ref( &(((ClassTypeInfo*)local_1_def)->property_doc_comment), SlagParser__parse_doc_comment(context) );
  }
  else
  {
    SlagParser__must_consume_eol(context);
    sxc_write_ref( &(((ClassTypeInfo*)local_1_def)->property_doc_comment), SlagParser__parse_doc_comment(context) );
    SlagParser__parse_member_defs__TypeInfo_Int32_String(context,local_1_def,local_3_end_type,local_4_end_symbol);
    SlagParser__must_consume__Int32_String(context,local_3_end_type,local_4_end_symbol);
    SlagParser__must_consume_eol(context);
  }
  sxc_write_ref( &(((ClassSlagParser*)context)->property_this_type), NULL );
}

static void SlagParser__parse_compound_def__Token_Qualifiers( SXCRef context, SXCRef local_0_t, SXCRef local_1_quals )
{
  SXCRef local_2_name;
  SXCRef local_3_template;
  SXCRef local_4_def_t;
  SlagInt32 local_5_def_type;

  local_2_name = SlagParser__must_read_identifier__String(context,str903.value);
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_template))
  {
    local_3_template = TypeTemplate__init__Token_Qualifiers_String_ArrayList_of_String_Int32_String(type_ClassTypeTemplate.create(),local_0_t,local_1_quals,local_2_name,SlagParser__parse_placeholder_types__Logical(context,false),0,NULL);
    for (;;)
    {
      local_4_def_t = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
      local_5_def_type = ((ClassToken*)local_4_def_t)->property_type;
      if ((local_5_def_type == ((ClassTokenManager*)sxc_singletons[2])->property_eof))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str722.value)) );
      }
      ArrayList_of_Object__add__Object(((ClassTypeTemplate*)local_3_template)->property_definition,local_4_def_t);
      if ((local_5_def_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
      {
        ArrayList_of_Object__add__Object(((ClassTypeTemplate*)local_3_template)->property_definition,Token__init__Int32_String_ParsePos_String(type_ClassToken.create(),((ClassTokenManager*)sxc_singletons[2])->property_eol,((ClassString*)((ClassString*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenManager*)sxc_singletons[2])->property_filename_list))->property_data)->data))[((ClassToken*)local_4_def_t)->property_file_index]))),((ClassToken*)local_4_def_t)->property_pos,NULL));
        TypeManager__store__TypeTemplate(sxc_singletons[7],local_3_template);
        return;
      }
    }
  }
  SlagParser__parse_compound_def__TokenReader_TypeInfo(context,((ClassSlagParser*)context)->property_scanner,TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),local_0_t,local_2_name,local_1_quals,NULL));
}

static void SlagParser__parse_compound_def__TokenReader_TypeInfo( SXCRef context, SXCRef local_0_scanner_6680, SXCRef local_1_def )
{
  SXCRef local_2_t;
  SlagLogical local_3_first;
  SXCRef local_4_type;
  SXCRef local_5_name;
  SXCRef local_6_m_init;
  SXCRef local_7__reader1580;
  SXCRef local_8_p;

  sxc_write_ref( &(((ClassSlagParser*)context)->property_scanner), local_0_scanner_6680 );
  local_1_def = TypeManager__define_type__TypeInfo(sxc_singletons[7],local_1_def);
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
  local_2_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  local_3_first = true;
  while ((local_3_first || SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma)))
  {
    local_3_first = false;
    local_4_type = SlagParser__parse_data_type(context);
    if ((local_4_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_var))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_2_t,str668.value)) );
    }
    local_5_name = SlagParser__must_read_identifier__String(context,str656.value);
    if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_assign))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str904.value)) );
    }
    ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_1_def)->property_properties,PropertyInfo__init__Token_TypeInfo_Qualifiers_TypeInfo_String_Cmd_Int32(type_ClassPropertyInfo.create(),local_2_t,local_1_def,((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public,local_4_type,local_5_name,NULL,-1));
    local_2_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  }
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_colon))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeInfo*)local_1_def)->property_t,str905.value)) );
  }
  SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_semicolon);
  SlagParser__must_consume_eol(context);
  sxc_write_ref( &(((ClassTypeInfo*)local_1_def)->property_doc_comment), SlagParser__parse_doc_comment(context) );
  local_6_m_init = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),((ClassTypeInfo*)local_1_def)->property_t,((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public,local_1_def,str667.value);
  sxc_write_ref( &(((ClassMethodInfo*)local_6_m_init)->property_parameters), ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_1_def)->property_properties))->property_count) );
  local_7__reader1580 = ArrayList_of_PropertyInfo__create_reader(((ClassTypeInfo*)local_1_def)->property_properties);
  while (CallFn____Logical(14,local_7__reader1580))
  {
    local_8_p = CallFn____Object(45,local_7__reader1580);
    ArrayList_of_Object__add__Object(((ClassMethodInfo*)local_6_m_init)->property_parameters,ParameterInfo__init__Token_MethodInfo_TypeInfo_String_Cmd_Int32(type_ClassParameterInfo.create(),((ClassPropertyInfo*)local_8_p)->property_t,local_6_m_init,((ClassPropertyInfo*)local_8_p)->property_type,((ClassPropertyInfo*)local_8_p)->property_name,NULL,-1));
  }
  sxc_write_ref( &(((ClassMethodInfo*)local_6_m_init)->property_body), CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassMethodInfo*)local_6_m_init)->property_t,0) );
  ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_1_def)->property_methods,local_6_m_init);
}

static SlagObject* SlagParser__parse_placeholder_types__Logical( SXCRef context, SlagLogical local_0_is_augment )
{
  SXCRef local_1_t;
  SXCRef local_2_placeholder_types;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (local_0_is_augment)
  {
    if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_template))
    {
      return NULL;
    }
  }
  else
  {
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_template,str364.value);
  }
  local_2_placeholder_types = ArrayList_of_String__init__Int32(type_ClassArrayList_of_String.create(),1);
  ArrayList_of_Object__add__Object(local_2_placeholder_types,SlagParser__parse_placeholder_type__Logical(context,local_0_is_augment));
  while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
  {
    ArrayList_of_Object__add__Object(local_2_placeholder_types,SlagParser__parse_placeholder_type__Logical(context,local_0_is_augment));
  }
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_template,str365.value);
  return local_2_placeholder_types;
}

static SlagObject* SlagParser__parse_placeholder_type__Logical( SXCRef context, SlagLogical local_0_is_augment )
{
  SXCRef local_1_id;

  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_compound))
  {
    return str268.value;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_times))
  {
    return str389.value;
  }
  else if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_placeholder_id))
  {
    return ((ClassToken*)TokenReader__read(((ClassSlagParser*)context)->property_scanner))->property_content;
  }
  else
  {
    if (local_0_is_augment)
    {
      local_1_id = SlagParser__must_read_identifier__String(context,str656.value);
      if (!String__opEQ__String(local_1_id,str657.value))
      {
        return local_1_id;
      }
      SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_minus);
      return String__opADD__String(str658.value,SlagParser__must_read_identifier__String(context,str659.value));
    }
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str660.value)) );
  }
}

static SlagObject* SlagParser__parse_doc_comment( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_buffer;

  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (((((ClassToken*)local_0_t)->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_eol) || (((ClassToken*)local_0_t)->property_content == NULL)))
  {
    return NULL;
  }
  local_1_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  TextWriter__println__String(local_1_buffer,((ClassToken*)TokenReader__read(((ClassSlagParser*)context)->property_scanner))->property_content);
  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  while (((((ClassToken*)local_0_t)->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol) && (((ClassToken*)local_0_t)->property_content != NULL)))
  {
    TextWriter__println__String(local_1_buffer,((ClassToken*)TokenReader__read(((ClassSlagParser*)context)->property_scanner))->property_content);
    local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  }
  return StringBuilder__to_String(local_1_buffer);
}

static void SlagParser__parse_param_list__MethodInfo( SXCRef context, SXCRef local_0_m )
{
  SXCRef local_1_t;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  sxc_write_ref( &(((ClassMethodInfo*)local_0_m)->property_parameters), ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),1) );
  if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
  {
    return;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren))
  {
    return;
  }
  SlagParser__parse_param__MethodInfo(context,local_0_m);
  while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
  {
    SlagParser__parse_param__MethodInfo(context,local_0_m);
  }
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
}

static void SlagParser__parse_param__MethodInfo( SXCRef context, SXCRef local_0_m )
{
  SXCRef local_1_t;
  SXCRef local_2_type_or_id;
  SXCRef local_3_data_type;
  SXCRef local_4_name;
  SXCRef local_5_expr;
  SXCRef local_6_name;
  SXCRef local_7_expr;

  SlagParser__discard_eols(context);
  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  local_2_type_or_id = SlagParser__parse_data_type(context);
  if (((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_identifier) || (((ClassTypeInfo*)local_2_type_or_id)->property_substitution_tokens != NULL)))
  {
    local_3_data_type = local_2_type_or_id;
    if ((local_3_data_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_var))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,str668.value)) );
    }
    local_4_name = SlagParser__must_read_identifier__String(context,str656.value);
    local_5_expr = NULL;
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_assign))
    {
      local_5_expr = ((ClassCmd*)SlagParser__parse_op_range(context));
    }
    ArrayList_of_Object__add__Object(((ClassMethodInfo*)local_0_m)->property_parameters,ParameterInfo__init__Token_MethodInfo_TypeInfo_String_Cmd_Int32(type_ClassParameterInfo.create(),local_1_t,local_0_m,local_3_data_type,local_4_name,local_5_expr,-1));
  }
  else
  {
    local_6_name = ((ClassTypeInfo*)local_2_type_or_id)->property_name;
    local_7_expr = NULL;
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_assign))
    {
      local_7_expr = ((ClassCmd*)SlagParser__parse_op_range(context));
    }
    ArrayList_of_Object__add__Object(((ClassMethodInfo*)local_0_m)->property_parameters,ParameterInfo__init__Token_MethodInfo_TypeInfo_String_Cmd_Int32(type_ClassParameterInfo.create(),local_1_t,local_0_m,NULL,local_6_name,local_7_expr,-1));
  }
}

static void SlagParser__parse_member_defs__TypeInfo_Int32_String( SXCRef context, SXCRef local_0_def, SlagInt32 local_1_end_type, SXCRef local_2_end_symbol )
{
  SXCRef local_3_cur_category;
  SXCRef local_4_t;
  SXCRef local_5_singleton_type;
  SXCRef local_6_singleton_type;
  SXCRef local_7_singleton_type;
  SXCRef local_8_which_1622;

  local_3_cur_category = str273.value;
  SlagParser__discard_eols(context);
  while (SlagParser__parse_method__TypeInfo_Logical(context,local_0_def,false))
  {
  }
  for (;;)
  {
    next_7813:;
    SlagParser__discard_eols(context);
    local_4_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_singletons))
    {
      local_3_cur_category = str281.value;
      SlagParser__must_consume_eol(context);
      SlagParser__parse_singletons__TypeInfo(context,local_0_def);
      goto next_7813;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_categories))
    {
      if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_0_def)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeInfo*)local_0_def)->property_t,str843.value)) );
      }
      local_3_cur_category = str279.value;
      SlagParser__must_consume_eol(context);
      SlagParser__parse_category_defs__TypeInfo(context,local_0_def);
      goto next_7813;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_enumerate))
    {
      if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_0_def)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeInfo*)local_0_def)->property_t,str843.value)) );
      }
      local_3_cur_category = str280.value;
      SlagParser__must_consume_eol(context);
      local_5_singleton_type = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],local_4_t,TypeInfo__manager_name(local_0_def),NULL);
      if (!(ArrayList_of_TypeInfo__index_of__TypeInfo_Int32(((ClassTypeInfo*)local_0_def)->property_singletons,local_5_singleton_type,0) >= 0))
      {
        ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_def)->property_singletons,local_5_singleton_type);
      }
      if ((((ClassTypeInfo*)local_5_singleton_type)->property_qualifiers == NULL))
      {
        sxc_write_ref( &(((ClassTypeInfo*)local_5_singleton_type)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))) );
      }
      SlagParser__parse_enumerate_defs__TypeInfo(context,local_5_singleton_type);
      goto next_7813;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_class_properties))
    {
      if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_0_def)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeInfo*)local_0_def)->property_t,str843.value)) );
      }
      local_3_cur_category = str274.value;
      SlagParser__must_consume_eol(context);
      if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_def)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
      {
        SlagParser__parse_properties__TypeInfo_Logical(context,local_0_def,true);
      }
      else
      {
        local_6_singleton_type = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],local_4_t,TypeInfo__manager_name(local_0_def),NULL);
        if (!(ArrayList_of_TypeInfo__index_of__TypeInfo_Int32(((ClassTypeInfo*)local_0_def)->property_singletons,local_6_singleton_type,0) >= 0))
        {
          ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_def)->property_singletons,local_6_singleton_type);
        }
        if ((((ClassTypeInfo*)local_6_singleton_type)->property_qualifiers == NULL))
        {
          sxc_write_ref( &(((ClassTypeInfo*)local_6_singleton_type)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))) );
        }
        SlagParser__parse_properties__TypeInfo_Logical(context,local_6_singleton_type,false);
      }
      goto next_7813;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_class_methods))
    {
      if (!(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_0_def)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_managed)->property_flags))))->property_flags == 0))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassTypeInfo*)local_0_def)->property_t,str843.value)) );
      }
      local_3_cur_category = str273.value;
      SlagParser__must_consume_eol(context);
      if (((((ClassQualifiers*)((ClassTypeInfo*)local_0_def)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_aspect)->property_flags) != 0))
      {
        while (SlagParser__parse_method__TypeInfo_Logical(context,local_0_def,true))
        {
        }
      }
      else
      {
        local_7_singleton_type = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],local_4_t,TypeInfo__manager_name(local_0_def),NULL);
        if (!(ArrayList_of_TypeInfo__index_of__TypeInfo_Int32(((ClassTypeInfo*)local_0_def)->property_singletons,local_7_singleton_type,0) >= 0))
        {
          ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_def)->property_singletons,local_7_singleton_type);
        }
        if ((((ClassTypeInfo*)local_7_singleton_type)->property_qualifiers == NULL))
        {
          sxc_write_ref( &(((ClassTypeInfo*)local_7_singleton_type)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))) );
        }
        while (SlagParser__parse_method__TypeInfo_Logical(context,local_7_singleton_type,false))
        {
        }
        goto next_7813;
      }
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_properties))
    {
      local_3_cur_category = str274.value;
      SlagParser__must_consume_eol(context);
      SlagParser__parse_properties__TypeInfo_Logical(context,local_0_def,false);
      goto next_7813;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_methods))
    {
      local_3_cur_category = str273.value;
      SlagParser__must_consume_eol(context);
      while (SlagParser__parse_method__TypeInfo_Logical(context,local_0_def,false))
      {
      }
      goto next_7813;
    }
    if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == local_1_end_type))
    {
      return;
    }
    if (SlagParser__next_is_method(context))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str850.value)) );
    }
    else
    {
      local_8_which_1622 = local_3_cur_category;
      if (String__opEQ__String(local_8_which_1622,str851.value))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str852.value),local_2_end_symbol),str853.value)))) );
      }
      else if (String__opEQ__String(local_8_which_1622,str281.value))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str854.value),local_2_end_symbol),str853.value)))) );
      }
      else if (String__opEQ__String(local_8_which_1622,str279.value))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str855.value),local_2_end_symbol),str853.value)))) );
      }
      else if (String__opEQ__String(local_8_which_1622,str280.value))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str856.value),local_2_end_symbol),str853.value)))) );
      }
      else if (String__opEQ__String(local_8_which_1622,str274.value))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str857.value),local_2_end_symbol),str853.value)))) );
      }
      else if ((String__opEQ__String(local_8_which_1622,str273.value) || String__opEQ__String(local_8_which_1622,str276.value)))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str858.value),local_2_end_symbol),str853.value)))) );
      }
      else
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,str859.value)) );
      }
    }
  }
  end_7813:;
}

static SlagLogical SlagParser__parse_method__TypeInfo_Logical( SXCRef context, SXCRef local_0_def, SlagLogical local_1_class_scope )
{
  SXCRef local_2_t;
  SXCRef local_3_quals;
  SXCRef local_4_name;
  SXCRef local_5_m;
  SXCRef local_6_doc_comment;

  SlagParser__discard_eols(context);
  local_2_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  local_3_quals = SlagParser__parse_method_qualifiers(context);
  if (((((ClassQualifiers*)local_3_quals)->property_flags == 0) && !(((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_method)))
  {
    return false;
  }
  if (((ClassSlagParser*)context)->property_requisite_all)
  {
    local_3_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_3_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags)));
  }
  if ((((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_3_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_access_mask)->property_flags))))->property_flags == 0))
  {
    local_3_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_3_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public)->property_flags)));
  }
  if (local_1_class_scope)
  {
    local_3_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_3_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class_scope)->property_flags)));
  }
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_method,str292.value);
  local_4_name = SlagParser__parse_opX(context);
  if (!(local_4_name != NULL))
  {
    local_4_name = SlagParser__must_read_identifier__String(context,str710.value);
  }
  local_5_m = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),local_2_t,local_3_quals,local_0_def,local_4_name);
  ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_def)->property_methods,local_5_m);
  SlagParser__parse_param_list__MethodInfo(context,local_5_m);
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_member_access))
  {
    sxc_write_ref( &(((ClassMethodInfo*)local_5_m)->property_return_type), SlagParser__parse_data_type(context) );
  }
  if (((String__opEQ__String(((ClassMethodInfo*)local_5_m)->property_name,str711.value) && (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassMethodInfo*)local_5_m)->property_parameters))->property_count == 0)) && !(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassTypeInfo*)local_0_def)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_singleton)->property_flags))))->property_flags == 0)))
  {
    sxc_write_ref( &(((ClassMethodInfo*)local_5_m)->property_name), str712.value );
  }
  local_6_doc_comment = NULL;
  SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_colon);
  sxc_write_ref( &(((ClassSlagParser*)context)->property_this_method), local_5_m );
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_eol))
  {
    local_6_doc_comment = SlagParser__parse_doc_comment(context);
    SlagParser__discard_eols(context);
    sxc_write_ref( &(((ClassMethodInfo*)local_5_m)->property_body), SlagParser__parse_multi_line_statements(context) );
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_abstract))
  {
    sxc_write_ref( &(((ClassMethodInfo*)local_5_m)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_5_m)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags))) );
    SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_eol);
    local_6_doc_comment = SlagParser__parse_doc_comment(context);
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_native))
  {
    sxc_write_ref( &(((ClassMethodInfo*)local_5_m)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_5_m)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_native)->property_flags))) );
    SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_eol);
    local_6_doc_comment = SlagParser__parse_doc_comment(context);
  }
  else
  {
    sxc_write_ref( &(((ClassMethodInfo*)local_5_m)->property_body), SlagParser__parse_multi_line_statements(context) );
  }
  if (((((((ClassQualifiers*)((ClassMethodInfo*)local_5_m)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_abstract)->property_flags) != 0) && (((ClassMethodInfo*)local_5_m)->property_body != NULL)) && (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassMethodInfo*)local_5_m)->property_body)->property_statements))->property_count > 0)))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassMethodInfo*)local_5_m)->property_t,str842.value)) );
  }
  sxc_write_ref( &(((ClassMethodInfo*)local_5_m)->property_doc_comment), local_6_doc_comment );
  if ((((ClassMethodInfo*)local_5_m)->property_body == NULL))
  {
    sxc_write_ref( &(((ClassMethodInfo*)local_5_m)->property_body), CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),local_2_t,0) );
  }
  return true;
}

static SlagLogical SlagParser__next_is_method( SXCRef context )
{
  SlagInt32 local_0_type;

  local_0_type = ((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type;
  if ((local_0_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_method))
  {
    return true;
  }
  if ((local_0_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_abstract))
  {
    return true;
  }
  if ((local_0_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_public))
  {
    return true;
  }
  if ((local_0_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_private))
  {
    return true;
  }
  if ((local_0_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_native))
  {
    return true;
  }
  if ((local_0_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_requisite))
  {
    return true;
  }
  if ((local_0_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_propagated))
  {
    return true;
  }
  if ((local_0_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_overlaying))
  {
    return true;
  }
  if ((local_0_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_underlying))
  {
    return true;
  }
  if ((local_0_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_generic))
  {
    return true;
  }
  return false;
}

static SlagObject* SlagParser__parse_construct__Logical( SXCRef context, SlagLogical local_0_allow_arg_types )
{
  SXCRef local_1_t;
  SXCRef local_2_type_or_id;
  SlagLogical local_3_direct;
  SXCRef local_4_name;
  SXCRef local_5_args;
  SXCRef local_6_buffer;
  SXCRef local_7_literal;
  SXCRef local_8_value;
  SXCRef local_9_literal;
  SXCRef local_10_value;

  local_1_t = NULL;
  local_2_type_or_id = NULL;
  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  local_3_direct = false;
  local_4_name = SlagParser__parse_opX(context);
  if ((local_4_name != NULL))
  {
    local_2_type_or_id = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],local_1_t,local_4_name,NULL);
  }
  else
  {
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_ampersand))
    {
      local_3_direct = true;
    }
    if (SlagParser__consume_id__String(context,str623.value))
    {
      local_2_type_or_id = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],local_1_t,str623.value,NULL);
    }
    else
    {
      local_2_type_or_id = SlagParser__parse_data_type(context);
    }
    if (local_3_direct)
    {
      if ((((ClassTypeInfo*)local_2_type_or_id)->property_substitution_tokens != NULL))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,str702.value)) );
      }
      else
      {
        local_2_type_or_id = TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],((ClassTypeInfo*)local_2_type_or_id)->property_t,String__opADD__String(str387.value,((ClassTypeInfo*)local_2_type_or_id)->property_name),NULL);
      }
    }
  }
  local_5_args = NULL;
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
  {
    if (String__opEQ__String(((ClassTypeInfo*)local_2_type_or_id)->property_name,str703.value))
    {
      SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren);
      local_6_buffer = StringBuilder__init(type_ClassStringBuilder.create());
      TextWriter__print__Object(local_6_buffer,SlagParser__parse_data_type(context));
      if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
      {
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_6_buffer)->property_data,((SlagChar)40));
        if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren))
        {
          TextWriter__print__Object(local_6_buffer,SlagParser__parse_data_type(context));
          while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
          {
            StringBuilder__print__String(local_6_buffer,((ClassString*)String__opADD__String(str395.value,Global__to_String__Object(sxc_singletons[21],SlagParser__parse_data_type(context)))));
          }
          SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str630.value);
        }
        ArrayList_of_Char__add__Char(((ClassStringBuilder*)local_6_buffer)->property_data,((SlagChar)41));
      }
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str630.value);
      local_5_args = CmdList__init__Cmd(type_ClassCmdList.create(),CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),local_1_t,StringBuilder__to_String(local_6_buffer),-1));
    }
    else if ((local_2_type_or_id == ((ClassTypeManager*)sxc_singletons[7])->property_type_int64))
    {
      SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren);
      if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_int))
      {
        local_7_literal = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
        local_8_value = BigInt__init__String_Int32(type_ClassBigInt.create(),((ClassToken*)local_7_literal)->property_content,10);
        local_5_args = CmdList__init__Cmd(type_ClassCmdList.create(),CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),local_7_literal,BigInt__to_Int64(local_8_value)));
      }
      else if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_hex_int))
      {
        local_9_literal = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
        local_10_value = BigInt__init__String_Int32(type_ClassBigInt.create(),((ClassToken*)local_9_literal)->property_content,16);
        local_5_args = CmdList__init__Cmd(type_ClassCmdList.create(),CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),local_9_literal,BigInt__to_Int64(local_10_value)));
      }
      else
      {
        local_5_args = CmdList__init__Cmd(type_ClassCmdList.create(),((ClassCmd*)SlagParser__parse_op_range(context)));
      }
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
    }
    else
    {
      local_5_args = SlagParser__parse_arg_list__Int32_Int32_String_String_Logical(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str61.value,str62.value,local_0_allow_arg_types);
    }
  }
  return CmdConstruct__init__Token_TypeInfo_CmdList(type_ClassCmdConstruct.create(),local_1_t,local_2_type_or_id,local_5_args);
}

static void SlagParser__parse_singletons__TypeInfo( SXCRef context, SXCRef local_0_def )
{
  SXCRef local_1_type;

  for (;;)
  {
    SlagParser__discard_eols(context);
    if (!(((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_identifier))
    {
      return;
    }
    for (;;)
    {
      next_7817:;
      local_1_type = SlagParser__parse_data_type(context);
      if (!(ArrayList_of_TypeInfo__index_of__TypeInfo_Int32(((ClassTypeInfo*)local_0_def)->property_singletons,local_1_type,0) >= 0))
      {
        ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_def)->property_singletons,local_1_type);
      }
      if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
      {
        goto end_7817;
      }
    }
    end_7817:;
    SlagParser__must_consume_eol(context);
  }
}

static void SlagParser__parse_category_defs__TypeInfo( SXCRef context, SXCRef local_0_def )
{
  SlagInt32 local_1_first_category;
  SXCRef local_2_construct;
  SXCRef local_3_doc_comment;
  SXCRef local_4__reader1665;
  SXCRef local_5_category;

  for (;;)
  {
    SlagParser__discard_eols(context);
    if (!(((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_identifier))
    {
      return;
    }
    local_1_first_category = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_0_def)->property_categories))->property_count;
    for (;;)
    {
      next_7826:;
      local_2_construct = SlagParser__parse_construct__Logical(context,false);
      if ((((ClassCmdConstruct*)local_2_construct)->property_args == NULL))
      {
        sxc_write_ref( &(((ClassCmdConstruct*)local_2_construct)->property_args), CmdList__init__Int32(type_ClassCmdList.create(),0) );
      }
      ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_def)->property_categories,CategoryInfo__init__CmdConstruct(type_ClassCategoryInfo.create(),local_2_construct));
      if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
      {
        goto end_7826;
      }
    }
    end_7826:;
    SlagParser__must_consume_eol(context);
    local_3_doc_comment = SlagParser__parse_doc_comment(context);
    if ((local_3_doc_comment != NULL))
    {
      local_4__reader1665 = ArrayList_of_CategoryInfo__from__Int32(((ClassTypeInfo*)local_0_def)->property_categories,local_1_first_category);
      while (ArrayReader_of_CategoryInfo__has_another(local_4__reader1665))
      {
        local_5_category = ArrayReader_of_CategoryInfo__read(local_4__reader1665);
        sxc_write_ref( &(((ClassCategoryInfo*)local_5_category)->property_doc_comment), local_3_doc_comment );
      }
    }
  }
}

static void SlagParser__parse_enumerate_defs__TypeInfo( SXCRef context, SXCRef local_0_def )
{
  SlagInt32 local_1_first_category;
  SXCRef local_2_property;
  SXCRef local_3_assign;
  SXCRef local_4_negate;
  SXCRef local_5_literal;
  SXCRef local_6_expr;

  for (;;)
  {
    SlagParser__discard_eols(context);
    if (!(((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_identifier))
    {
      return;
    }
    local_1_first_category = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTypeInfo*)local_0_def)->property_categories))->property_count;
    for (;;)
    {
      next_7846:;
      local_2_property = SlagParser__parse_property_decl(context);
      if ((((ClassPropertyInfo*)local_2_property)->property_initial_value != NULL))
      {
        local_3_assign = sxc_as(((ClassPropertyInfo*)local_2_property)->property_initial_value,&type_ClassCmdInitialAssignment);
        if ((local_3_assign == NULL))
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassPropertyInfo*)local_2_property)->property_t,str848.value)) );
        }
        local_4_negate = sxc_as(((ClassCmdInitialAssignment*)local_3_assign)->property_expression,&type_ClassCmdNegate);
        if ((local_4_negate != NULL))
        {
          local_5_literal = sxc_as(((ClassCmdNegate*)local_4_negate)->property_operand,&type_ClassCmdLiteralInt32);
          if ((local_5_literal != NULL))
          {
            sxc_write_ref( &(((ClassCmdInitialAssignment*)local_3_assign)->property_expression), local_5_literal );
            ((ClassCmdLiteralInt32*)local_5_literal)->property_value = -((ClassCmdLiteralInt32*)local_5_literal)->property_value;
          }
        }
        local_6_expr = sxc_as(((ClassCmdInitialAssignment*)local_3_assign)->property_expression,&type_ClassCmdLiteralInt32);
        if ((local_6_expr == NULL))
        {
          SLAG_THROW( Cmd__error__String(((ClassCmdInitialAssignment*)local_3_assign)->property_expression,str849.value) );
        }
        ((ClassTypeInfo*)local_0_def)->property_next_enumerate_value = ((ClassCmdLiteralInt32*)local_6_expr)->property_value;
      }
      sxc_write_ref( &(((ClassPropertyInfo*)local_2_property)->property_initial_value), CmdInitialAssignment__init__Token_Cmd(type_ClassCmdInitialAssignment.create(),((ClassPropertyInfo*)local_2_property)->property_t,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassPropertyInfo*)local_2_property)->property_t,((ClassTypeInfo*)local_0_def)->property_next_enumerate_value)) );
      ((ClassTypeInfo*)local_0_def)->property_next_enumerate_value = (((ClassTypeInfo*)local_0_def)->property_next_enumerate_value+1);
      sxc_write_ref( &(((ClassPropertyInfo*)local_2_property)->property_type_context), local_0_def );
      sxc_write_ref( &(((ClassPropertyInfo*)local_2_property)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class_scope)->property_flags))))->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_readonly)->property_flags))))->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_constant)->property_flags))) );
      sxc_write_ref( &(((ClassPropertyInfo*)local_2_property)->property_type), ((ClassTypeManager*)sxc_singletons[7])->property_type_int32 );
      sxc_write_ref( &(((ClassPropertyInfo*)local_2_property)->property_doc_comment), SlagParser__parse_doc_comment(context) );
      ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_def)->property_properties,local_2_property);
      if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
      {
        goto end_7846;
      }
    }
    end_7846:;
    SlagParser__must_consume_eol(context);
  }
}

static void SlagParser__parse_properties__TypeInfo_Logical( SXCRef context, SXCRef local_0_def, SlagLogical local_1_class_scope )
{
  SXCRef local_2_quals;
  SXCRef local_3_decl_list;
  SXCRef local_4_t;
  SXCRef local_5_data_type;
  SXCRef local_6_doc_comment;
  SXCRef local_7__reader1680;
  SXCRef local_8_decl;

  for (;;)
  {
    SlagParser__discard_eols(context);
    local_2_quals = SlagParser__parse_property_qualifiers(context);
    if (((((ClassQualifiers*)local_2_quals)->property_flags == 0) && !(((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_identifier)))
    {
      return;
    }
    local_3_decl_list = SlagParser__parse_property_decl_list(context);
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_colon,str41.value);
    local_2_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_2_quals)->property_flags|((ClassQualifiers*)SlagParser__parse_property_qualifiers(context))->property_flags)));
    if ((((ClassQualifiers*)((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_2_quals)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_access_mask)->property_flags))))->property_flags == 0))
    {
      local_2_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_2_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public)->property_flags)));
    }
    if (local_1_class_scope)
    {
      local_2_quals = ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)local_2_quals)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class_scope)->property_flags)));
    }
    local_4_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    local_5_data_type = SlagParser__parse_data_type(context);
    if ((local_5_data_type == ((ClassTypeManager*)sxc_singletons[7])->property_type_var))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_4_t,str668.value)) );
    }
    SlagParser__must_consume_eol(context);
    local_6_doc_comment = SlagParser__parse_doc_comment(context);
    local_7__reader1680 = ArrayList_of_PropertyInfo__create_reader(local_3_decl_list);
    while (CallFn____Logical(14,local_7__reader1680))
    {
      local_8_decl = CallFn____Object(45,local_7__reader1680);
      sxc_write_ref( &(((ClassPropertyInfo*)local_8_decl)->property_type_context), local_0_def );
      sxc_write_ref( &(((ClassPropertyInfo*)local_8_decl)->property_qualifiers), local_2_quals );
      sxc_write_ref( &(((ClassPropertyInfo*)local_8_decl)->property_type), local_5_data_type );
      sxc_write_ref( &(((ClassPropertyInfo*)local_8_decl)->property_doc_comment), local_6_doc_comment );
      ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_0_def)->property_properties,local_8_decl);
    }
  }
}

static SlagObject* SlagParser__parse_property_decl_list( SXCRef context )
{
  SXCRef local_0_list;

  local_0_list = ArrayList_of_PropertyInfo__init__Int32(type_ClassArrayList_of_PropertyInfo.create(),1);
  ArrayList_of_Object__add__Object(local_0_list,SlagParser__parse_property_decl(context));
  while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
  {
    ArrayList_of_Object__add__Object(local_0_list,SlagParser__parse_property_decl(context));
  }
  return local_0_list;
}

static SlagObject* SlagParser__parse_property_decl( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_name;
  SXCRef local_2_decl;
  SXCRef local_3_args;

  SlagParser__discard_eols(context);
  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  local_1_name = SlagParser__must_read_identifier__String(context,str656.value);
  local_2_decl = PropertyInfo__init__Token_TypeInfo_Qualifiers_TypeInfo_String_Cmd_Int32(type_ClassPropertyInfo.create(),local_0_t,NULL,NULL,NULL,local_1_name,NULL,-1);
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
  {
    local_3_args = SlagParser__parse_arg_list__Int32_Int32_String_String_Logical(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str61.value,str62.value,false);
    sxc_write_ref( &(((ClassPropertyInfo*)local_2_decl)->property_initial_value), CmdInitialConstructor__init__Token_CmdList(type_ClassCmdInitialConstructor.create(),local_0_t,local_3_args) );
    if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_with))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str846.value)) );
    }
    return local_2_decl;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_assign))
  {
    sxc_write_ref( &(((ClassPropertyInfo*)local_2_decl)->property_initial_value), CmdInitialAssignment__init__Token_Cmd(type_ClassCmdInitialAssignment.create(),local_0_t,((ClassCmd*)SlagParser__parse_op_range(context))) );
  }
  return local_2_decl;
}

static SlagObject* SlagParser__parse_opX( SXCRef context )
{
  if (SlagParser__consume_id__String(context,str689.value))
  {
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_eq))
    {
      return str690.value;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_compare))
    {
      return str691.value;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_plus))
    {
      return str692.value;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_minus))
    {
      return str693.value;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_times))
    {
      return str694.value;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_divide))
    {
      return str695.value;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_mod))
    {
      return str696.value;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_power))
    {
      return str697.value;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_ampersand))
    {
      return str698.value;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_or))
    {
      return str699.value;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_xor))
    {
      return str700.value;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_not))
    {
      return str701.value;
    }
    return str689.value;
  }
  return NULL;
}

static SlagObject* SlagParser__parse_multi_line_statements( SXCRef context )
{
  return SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_no_terminators);
}

static SlagObject* SlagParser__parse_multi_line_statements__ArrayList_of_Int32( SXCRef context, SXCRef local_0_terminators )
{
  SXCRef local_1_list;

  if (!SlagParser__next_is_statement__ArrayList_of_Int32(context,local_0_terminators))
  {
    return CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),0);
  }
  local_1_list = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),10);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_1_list)->property_statements,CmdOpenScope__init__Token(type_ClassCmdOpenScope.create(),((ClassCmdStatementList*)local_1_list)->property_t));
  for (;;)
  {
    next_7300:;
    SlagParser__parse_statement__CmdStatementList_Logical(context,local_1_list,true);
    SlagParser__must_consume_end_cmd(context);
    if (!SlagParser__next_is_statement__ArrayList_of_Int32(context,local_0_terminators))
    {
      goto end_7300;
    }
  }
  end_7300:;
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_1_list)->property_statements,CmdCloseScope__init__Token(type_ClassCmdCloseScope.create(),((ClassCmdStatementList*)local_1_list)->property_t));
  return CmdStatementList__trim_to_count(local_1_list);
}

static SlagLogical SlagParser__next_is_statement__ArrayList_of_Int32( SXCRef context, SXCRef local_0_terminators )
{
  SXCRef local_1__reader1701;
  SlagInt32 local_2_terminator;

  SlagParser__discard_eols(context);
  local_1__reader1701 = ArrayList_of_Int32__create_reader(local_0_terminators);
  while (ArrayReader_of_Int32__has_another(local_1__reader1701))
  {
    local_2_terminator = ArrayReader_of_Int32__read(local_1__reader1701);
    if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == local_2_terminator))
    {
      return false;
    }
  }
  if (SlagParser__next_is_method(context))
  {
    return false;
  }
  if (((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type >= ((ClassTokenManager*)sxc_singletons[2])->property_first_non_statement_start_symbol) && (((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type <= ((ClassTokenManager*)sxc_singletons[2])->property_last_non_statement_start_symbol)))
  {
    return false;
  }
  SlagParser__check_out_of_place_keywords(context);
  return true;
}

static void SlagParser__check_out_of_place_keywords( SXCRef context )
{
  SXCRef local_0_missing;
  SXCRef local_1_pair;

  local_0_missing = ((ClassMapping_of_Int32_and_KeywordPairing*)GenericHashTable_of_Int32_and_Object__find__Int32(((ClassHashTable_of_Int32_and_KeywordPairing*)((ClassSlagParser*)context)->property_out_of_place_keywords)->property_data,((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type));
  if ((local_0_missing != NULL))
  {
    local_1_pair = ((ClassMapping_of_Int32_and_KeywordPairing*)local_0_missing)->property_value;
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str197.value),((ClassKeywordPairing*)local_1_pair)->property_close),str715.value),((ClassKeywordPairing*)local_1_pair)->property_open),str242.value)))) );
  }
}

static SlagObject* SlagParser__parse_single_line_statements( SXCRef context )
{
  SXCRef local_0_list;

  if ((SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_semicolon) || !SlagParser__next_is_statement__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_no_terminators)))
  {
    return CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),0);
  }
  local_0_list = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),10);
  for (;;)
  {
    next_7420:;
    if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol))
    {
      goto end_7420;
    }
    SlagParser__parse_statement__CmdStatementList_Logical(context,local_0_list,false);
    if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_semicolon))
    {
      goto end_7420;
    }
  }
  end_7420:;
  return CmdStatementList__trim_to_count(local_0_list);
}

static void SlagParser__parse_statement__CmdStatementList_Logical( SXCRef context, SXCRef local_0_list, SlagLogical local_1_allow_control_structures )
{
  SXCRef local_2_t;
  SlagInt32 local_3_which_1711;
  SlagInt32 local_4_which_1712;
  SXCRef local_5_t2;
  SXCRef local_6_label;
  SXCRef local_7_cmd;
  SXCRef local_8_cmd;
  SXCRef local_9_expr;
  SXCRef local_10_expr;
  SXCRef local_11_expr;

  local_2_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (local_1_allow_control_structures)
  {
    local_3_which_1711 = ((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type;
    if ((local_3_which_1711 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_block))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__parse_block(context));
      return;
    }
    else if ((local_3_which_1711 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_if))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__parse_if_statement(context));
      return;
    }
    else if ((local_3_which_1711 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_which))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__parse_which_statement__Logical(context,false));
      return;
    }
    else if ((local_3_which_1711 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_whichis))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__parse_which_statement__Logical(context,true));
      return;
    }
    else if ((local_3_which_1711 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_contingent))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__parse_contingent(context));
      return;
    }
    else if ((local_3_which_1711 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_try))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__parse_try_statement(context));
      return;
    }
    else if ((local_3_which_1711 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_loop))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__parse_loop(context));
      return;
    }
    else if ((local_3_which_1711 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_while))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__parse_while_statement(context));
      return;
    }
    else if ((local_3_which_1711 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_foreach))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__parse_foreach_loop(context));
      return;
    }
    else if ((local_3_which_1711 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_local))
    {
      SlagParser__parse_local_vars__CmdStatementList(context,local_0_list);
      return;
    }
  }
  else
  {
    local_4_which_1712 = ((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type;
    if ((local_4_which_1712 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_block))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str791.value)) );
    }
    else if ((local_4_which_1712 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_if))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str791.value)) );
    }
    else if ((local_4_which_1712 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_which))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str791.value)) );
    }
    else if ((local_4_which_1712 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_contingent))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str791.value)) );
    }
    else if ((local_4_which_1712 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_try))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str791.value)) );
    }
    else if ((local_4_which_1712 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_loop))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str791.value)) );
    }
    else if ((local_4_which_1712 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_while))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str791.value)) );
    }
    else if ((local_4_which_1712 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_foreach))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str791.value)) );
    }
    else if ((local_4_which_1712 == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_local))
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str791.value)) );
    }
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_breakpoint))
  {
    if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_int))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBreakpoint__init__Token_Int32(type_ClassCmdBreakpoint.create(),local_2_t,NumberConversions__parse_Int32__String_Int32(sxc_singletons[12],((ClassToken*)TokenReader__read(((ClassSlagParser*)context)->property_scanner))->property_content,10)));
    }
    else
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBreakpoint__init__Token_Int32(type_ClassCmdBreakpoint.create(),local_2_t,0));
    }
    return;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapeif))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__create_escape_cmd__Token_StructureType(context,local_2_t,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_if_stmt));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapewhich))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__create_escape_cmd__Token_StructureType(context,local_2_t,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_which_stmt));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapewhichis))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__create_escape_cmd__Token_StructureType(context,local_2_t,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_whichis_stmt));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapecontingent))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__create_escape_cmd__Token_StructureType(context,local_2_t,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_contingent_stmt));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapeforeach))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__create_escape_cmd__Token_StructureType(context,local_2_t,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_forEach_stmt));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapewhile))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__create_escape_cmd__Token_StructureType(context,local_2_t,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_while_stmt));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapeloop))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__create_escape_cmd__Token_StructureType(context,local_2_t,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_loop_stmt));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapetry))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__create_escape_cmd__Token_StructureType(context,local_2_t,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_try_stmt));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_escapeblock))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,SlagParser__create_escape_cmd__Token_StructureType(context,local_2_t,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_block_stmt));
    return;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_nextiteration))
  {
    if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_identifier))
    {
      local_5_t2 = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
      local_6_label = ((ClassToken*)local_5_t2)->property_content;
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdStructureControl__init__Token_Int32(type_ClassCmdNextIteration.create(),local_2_t,SlagParser__must_find_iteration_id__String_Token(context,local_6_label,local_5_t2)));
    }
    else
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdStructureControl__init__Token_Int32(type_ClassCmdNextIteration.create(),local_2_t,SlagParser__must_find_iteration_id__Token(context,local_2_t)));
    }
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_necessary))
  {
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
    local_7_cmd = CmdContingentControl__init__Token_Cmd_Int32(type_ClassCmdNecessary.create(),local_2_t,((ClassCmd*)SlagParser__parse_op_range(context)),SlagParser__must_find_structure_id__StructureType_Token(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_contingent_stmt,local_2_t));
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,local_7_cmd);
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_noaction))
  {
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_removecurrent))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdRemoveCurrent__init__Token_Int32(type_ClassCmdRemoveCurrent.create(),local_2_t,SlagParser__must_find_foreach_in_with_named_var__Token_String(context,local_2_t,SlagParser__must_read_identifier__String(context,str656.value))));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_return))
  {
    if (SlagParser__next_is_end_cmd(context))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdReturnNil__init__Token_Logical(type_ClassCmdReturnNil.create(),local_2_t,false));
    }
    else
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdReturnValue__init__Token_Cmd_Logical(type_ClassCmdReturnValue.create(),local_2_t,((ClassCmd*)SlagParser__parse_op_range(context)),false));
    }
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_sufficient))
  {
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
    local_8_cmd = CmdContingentControl__init__Token_Cmd_Int32(type_ClassCmdSufficient.create(),local_2_t,((ClassCmd*)SlagParser__parse_op_range(context)),SlagParser__must_find_structure_id__StructureType_Token(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_contingent_stmt,local_2_t));
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,local_8_cmd);
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_throw))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdThrow__init__Token_Cmd(type_ClassCmdThrow.create(),local_2_t,((ClassCmd*)SlagParser__parse_op_range(context))));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_increment))
  {
    local_9_expr = ((ClassCmd*)SlagParser__parse_op_range(context));
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_9_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAdd.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_9_expr),CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_2_t,1))));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_decrement))
  {
    local_10_expr = ((ClassCmd*)SlagParser__parse_op_range(context));
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_10_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdSub.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_10_expr),CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_2_t,1))));
    return;
  }
  local_11_expr = ((ClassCmd*)SlagParser__parse_op_range(context));
  if (SlagParser__next_is_end_cmd(context))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,local_11_expr);
    return;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_assign))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,((ClassCmd*)SlagParser__parse_op_range(context))));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_increment))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAdd.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_2_t,1))));
    return;
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_decrement))
  {
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdSub.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_2_t,1))));
    return;
  }
  else
  {
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_add_with_assign))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAdd.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),((ClassCmd*)SlagParser__parse_op_range(context)))));
      return;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_subtract_with_assign))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdSub.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),((ClassCmd*)SlagParser__parse_op_range(context)))));
      return;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_multiply_with_assign))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdMul.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),((ClassCmd*)SlagParser__parse_op_range(context)))));
      return;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_divide_with_assign))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdDiv.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),((ClassCmd*)SlagParser__parse_op_range(context)))));
      return;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_mod_with_assign))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdMod.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),((ClassCmd*)SlagParser__parse_op_range(context)))));
      return;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_power_with_assign))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdExp.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),((ClassCmd*)SlagParser__parse_op_range(context)))));
      return;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_and_with_assign))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAnd.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),((ClassCmd*)SlagParser__parse_op_range(context)))));
      return;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_or_with_assign))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdOr.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),((ClassCmd*)SlagParser__parse_op_range(context)))));
      return;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_xor_with_assign))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdXor.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),((ClassCmd*)SlagParser__parse_op_range(context)))));
      return;
    }
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_member_with_assign))
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_list)->property_statements,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_2_t,local_11_expr,SlagParser__parse_op_member__Cmd(context,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_2_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_11_expr),SlagParser__parse_construct__Logical(context,false)))));
      return;
    }
    if (sxc_instance_of(local_11_expr,&type_ClassCmdConstruct))
    {
      SLAG_THROW( Cmd__error__String(local_11_expr,str840.value) );
    }
    SlagParser__must_consume_end_cmd(context);
  }
}

static SlagObject* SlagParser__parse_label_def( SXCRef context )
{
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_scope))
  {
    return SlagParser__must_read_identifier__String(context,str721.value);
  }
  return NULL;
}

static SlagObject* SlagParser__create_escape_cmd__Token_StructureType( SXCRef context, SXCRef local_0_t, SXCRef local_1_type )
{
  SXCRef local_2_t2;
  SXCRef local_3_label;

  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_identifier))
  {
    local_2_t2 = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
    local_3_label = ((ClassToken*)local_2_t2)->property_content;
    return CmdStructureControl__init__Token_Int32(type_ClassCmdEscape.create(),local_0_t,SlagParser__must_find_structure_id__StructureType_String_Token(context,local_1_type,local_3_label,local_0_t));
  }
  else
  {
    return CmdStructureControl__init__Token_Int32(type_ClassCmdEscape.create(),local_0_t,SlagParser__must_find_structure_id__StructureType_Token(context,local_1_type,local_0_t));
  }
}

static SlagInt32 SlagParser__must_find_structure_id__StructureType_String_Token( SXCRef context, SXCRef local_0_type, SXCRef local_1_label, SXCRef local_2_t )
{
  SXCRef local_3__reader1734;
  SXCRef local_4_entry;

  local_3__reader1734 = ArrayList_of_ControlStructureInfo__reverse_order(((ClassSlagParser*)context)->property_control_structure_stack);
  while (CallFn____Logical(14,local_3__reader1734))
  {
    local_4_entry = CallFn____Object(45,local_3__reader1734);
    if (((((ClassControlStructureInfo*)local_4_entry)->property_label != NULL) && String__opEQ__String(((ClassControlStructureInfo*)local_4_entry)->property_label,local_1_label)))
    {
      if ((((ClassControlStructureInfo*)local_4_entry)->property_type == local_0_type))
      {
        return ((ClassCmdStructure*)((ClassControlStructureInfo*)local_4_entry)->property_node)->property_id;
      }
      else
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_2_t,str797.value)) );
      }
    }
  }
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_2_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str798.value),local_1_label),str799.value)))) );
}

static SlagInt32 SlagParser__must_find_structure_id__StructureType_Token( SXCRef context, SXCRef local_0_type, SXCRef local_1_t )
{
  SXCRef local_2__reader1737;
  SXCRef local_3_entry;

  local_2__reader1737 = ArrayList_of_ControlStructureInfo__reverse_order(((ClassSlagParser*)context)->property_control_structure_stack);
  while (CallFn____Logical(14,local_2__reader1737))
  {
    local_3_entry = CallFn____Object(45,local_2__reader1737);
    if ((((ClassControlStructureInfo*)local_3_entry)->property_type == local_0_type))
    {
      return ((ClassCmdStructure*)((ClassControlStructureInfo*)local_3_entry)->property_node)->property_id;
    }
  }
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,str800.value)) );
}

static SlagInt32 SlagParser__must_find_iteration_id__String_Token( SXCRef context, SXCRef local_0_label, SXCRef local_1_t )
{
  SXCRef local_2__reader1739;
  SXCRef local_3_entry;

  local_2__reader1739 = ArrayList_of_ControlStructureInfo__reverse_order(((ClassSlagParser*)context)->property_control_structure_stack);
  while (CallFn____Logical(14,local_2__reader1739))
  {
    local_3_entry = CallFn____Object(45,local_2__reader1739);
    if (((((ClassControlStructureInfo*)local_3_entry)->property_label != NULL) && String__opEQ__String(((ClassControlStructureInfo*)local_3_entry)->property_label,local_0_label)))
    {
      if (((ClassStructureType*)((ClassControlStructureInfo*)local_3_entry)->property_type)->property_is_loop)
      {
        return ((ClassCmdStructure*)((ClassControlStructureInfo*)local_3_entry)->property_node)->property_id;
      }
      else
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,str802.value)) );
      }
    }
  }
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str798.value),local_0_label),str799.value)))) );
}

static SlagInt32 SlagParser__must_find_iteration_id__Token( SXCRef context, SXCRef local_0_t )
{
  SXCRef local_1__reader1742;
  SXCRef local_2_entry;

  local_1__reader1742 = ArrayList_of_ControlStructureInfo__reverse_order(((ClassSlagParser*)context)->property_control_structure_stack);
  while (CallFn____Logical(14,local_1__reader1742))
  {
    local_2_entry = CallFn____Object(45,local_1__reader1742);
    if (((ClassStructureType*)((ClassControlStructureInfo*)local_2_entry)->property_type)->property_is_loop)
    {
      return ((ClassCmdStructure*)((ClassControlStructureInfo*)local_2_entry)->property_node)->property_id;
    }
  }
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str803.value)) );
}

static SlagInt32 SlagParser__must_find_foreach_in_with_named_var__Token_String( SXCRef context, SXCRef local_0_t, SXCRef local_1_var_name )
{
  SXCRef local_2__reader1744;
  SXCRef local_3_entry;
  SXCRef local_4_cmd;

  local_2__reader1744 = ArrayList_of_ControlStructureInfo__reverse_order(((ClassSlagParser*)context)->property_control_structure_stack);
  while (CallFn____Logical(14,local_2__reader1744))
  {
    local_3_entry = CallFn____Object(45,local_2__reader1744);
    if ((((ClassControlStructureInfo*)local_3_entry)->property_type == ((ClassEnum_of_StructureType*)sxc_singletons[36])->property_forEach_stmt))
    {
      if (sxc_instance_of(((ClassControlStructureInfo*)local_3_entry)->property_node,&type_ClassCmdForEachIn))
      {
        local_4_cmd = ((ClassControlStructureInfo*)local_3_entry)->property_node;
        if (String__opEQ__String(((ClassLocalVarInfo*)((ClassCmdForEachIn*)local_4_cmd)->property_var_info)->property_name,local_1_var_name))
        {
          ((ClassCmdForEachIn*)local_4_cmd)->property_contains_remove_current = true;
          return ((ClassCmdForEachIn*)local_4_cmd)->property_id;
        }
      }
    }
  }
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str808.value),local_1_var_name),str92.value)))) );
}

static void SlagParser__push_structure_info__StructureType_CmdStructure_String( SXCRef context, SXCRef local_0_type, SXCRef local_1_node, SXCRef local_2_label )
{
  SXCRef local_3__reader1749;
  SXCRef local_4_entry;

  if ((local_2_label != NULL))
  {
    local_3__reader1749 = ArrayList_of_ControlStructureInfo__create_reader(((ClassSlagParser*)context)->property_control_structure_stack);
    while (CallFn____Logical(14,local_3__reader1749))
    {
      local_4_entry = CallFn____Object(45,local_3__reader1749);
      if (((((ClassControlStructureInfo*)local_4_entry)->property_label != NULL) && String__opEQ__String(((ClassControlStructureInfo*)local_4_entry)->property_label,local_2_label)))
      {
        SLAG_THROW( Cmd__error__String(local_1_node,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str739.value),local_2_label),str740.value))) );
      }
    }
  }
  ArrayList_of_Object__add__Object(((ClassSlagParser*)context)->property_control_structure_stack,ControlStructureInfo__init__StructureType_CmdStructure_String(type_ClassControlStructureInfo.create(),local_0_type,local_1_node,local_2_label));
}

static SlagObject* SlagParser__parse_block( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_label;
  SXCRef local_2_cmd;

  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_block,str312.value);
  local_1_label = SlagParser__parse_label_def(context);
  SlagParser__must_consume_eol(context);
  local_2_cmd = CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdBlock.create(),local_0_t,SlagParserManager__unique_id(sxc_singletons[35]),NULL);
  SlagParser__push_structure_info__StructureType_CmdStructure_String(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_block_stmt,local_2_cmd,local_1_label);
  sxc_write_ref( &(((ClassCmdBlock*)local_2_cmd)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_block_terminators) );
  ArrayList_of_ControlStructureInfo__remove_last(((ClassSlagParser*)context)->property_control_structure_stack);
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endblock,str313.value);
  return local_2_cmd;
}

static SlagObject* SlagParser__parse_if_statement( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_label;
  SXCRef local_2_cmd;
  SXCRef local_3_alt;
  SXCRef local_4_alt;

  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  TokenReader__read(((ClassSlagParser*)context)->property_scanner);
  local_1_label = SlagParser__parse_label_def(context);
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
  local_2_cmd = CmdIf__init__Token_Int32_Cmd(type_ClassCmdIf.create(),local_0_t,SlagParserManager__unique_id(sxc_singletons[35]),((ClassCmd*)SlagParser__parse_op_range(context)));
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
  SlagParser__push_structure_info__StructureType_CmdStructure_String(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_if_stmt,local_2_cmd,local_1_label);
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_eol))
  {
    sxc_write_ref( &(((ClassCmdIf*)local_2_cmd)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_if_terminators) );
    local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_elseif))
    {
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
      local_3_alt = CmdElseIf__init__Token_Cmd_CmdStatementList(type_ClassCmdElseIf.create(),local_0_t,((ClassCmd*)SlagParser__parse_op_range(context)),NULL);
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
      SlagParser__must_consume_eol(context);
      sxc_write_ref( &(((ClassCmdElseIf*)local_3_alt)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_if_terminators) );
      ArrayList_of_Object__add__Object(((ClassCmdIf*)local_2_cmd)->property_elseifs,local_3_alt);
      local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    }
    local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_else))
    {
      SlagParser__must_consume_eol(context);
      sxc_write_ref( &(((ClassCmdIf*)local_2_cmd)->property_else_cmd), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_else_terminators) );
    }
    ArrayList_of_ControlStructureInfo__remove_last(((ClassSlagParser*)context)->property_control_structure_stack);
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endif,str298.value);
    return local_2_cmd;
  }
  else
  {
    sxc_write_ref( &(((ClassCmdIf*)local_2_cmd)->property_body), SlagParser__parse_single_line_statements(context) );
    while (((SlagParser__next_is_end_cmd(context) && (((ClassToken*)TokenReader__peek__Int32(((ClassSlagParser*)context)->property_scanner,2))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_elseif)) && SlagParser__next_elseif_is_not_at_eol(context)))
    {
      SlagParser__must_consume_eol(context);
      local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_elseif,str296.value);
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
      local_4_alt = CmdElseIf__init__Token_Cmd_CmdStatementList(type_ClassCmdElseIf.create(),local_0_t,((ClassCmd*)SlagParser__parse_op_range(context)),NULL);
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
      sxc_write_ref( &(((ClassCmdElseIf*)local_4_alt)->property_body), SlagParser__parse_single_line_statements(context) );
      ArrayList_of_Object__add__Object(((ClassCmdIf*)local_2_cmd)->property_elseifs,local_4_alt);
    }
    if (((SlagParser__next_is_end_cmd(context) && (((ClassToken*)TokenReader__peek__Int32(((ClassSlagParser*)context)->property_scanner,2))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_else)) && (((ClassToken*)TokenReader__peek__Int32(((ClassSlagParser*)context)->property_scanner,3))->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_eol)))
    {
      SlagParser__must_consume_eol(context);
      local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
      TokenReader__read(((ClassSlagParser*)context)->property_scanner);
      sxc_write_ref( &(((ClassCmdIf*)local_2_cmd)->property_else_cmd), SlagParser__parse_single_line_statements(context) );
    }
    ArrayList_of_ControlStructureInfo__remove_last(((ClassSlagParser*)context)->property_control_structure_stack);
    return local_2_cmd;
  }
}

static SlagObject* SlagParser__parse_which_statement__Logical( SXCRef context, SlagLogical local_0_use_is_comparison )
{
  SXCRef local_1_t;
  SXCRef local_2_label;
  SXCRef local_3_cmd;
  SXCRef local_4_prior_case_value;
  SXCRef local_5_which_case;
  SXCRef local_6_t2;
  SXCRef local_7_which_case;

  local_1_t = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
  local_2_label = SlagParser__parse_label_def(context);
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
  local_3_cmd = CmdWhich__init__Token_Int32_Cmd_Logical(type_ClassCmdWhich.create(),local_1_t,SlagParserManager__unique_id(sxc_singletons[35]),((ClassCmd*)SlagParser__parse_op_range(context)),local_0_use_is_comparison);
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
  SlagParser__must_consume_eol(context);
  SlagParser__discard_eols(context);
  if (local_0_use_is_comparison)
  {
    SlagParser__push_structure_info__StructureType_CmdStructure_String(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_whichis_stmt,local_3_cmd,local_2_label);
  }
  else
  {
    SlagParser__push_structure_info__StructureType_CmdStructure_String(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_which_stmt,local_3_cmd,local_2_label);
  }
  local_4_prior_case_value = NULL;
  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  for (;;)
  {
    next_7521:;
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_case))
    {
      local_5_which_case = CmdWhichCase__init__Token(type_ClassCmdWhichCase.create(),local_1_t);
      ArrayList_of_Object__add__Object(((ClassCmdWhich*)local_3_cmd)->property_cases,local_5_which_case);
      SlagParser__discard_eols(context);
      for (;;)
      {
        next_7523:;
        local_6_t2 = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
        local_4_prior_case_value = ((ClassCmd*)SlagParser__parse_op_range(context));
        ArrayList_of_Object__add__Object(((ClassCmdWhichCase*)local_5_which_case)->property_values,local_4_prior_case_value);
        if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
        {
          goto end_7523;
        }
      }
      end_7523:;
      if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_eol))
      {
        SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_colon,str757.value);
      }
      if (local_0_use_is_comparison)
      {
        sxc_write_ref( &(((ClassCmdWhichCase*)local_5_which_case)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_whichis_terminators) );
      }
      else
      {
        sxc_write_ref( &(((ClassCmdWhichCase*)local_5_which_case)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_which_terminators) );
      }
    }
    else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_casenext))
    {
      if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_eol))
      {
        SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_colon,str757.value);
      }
      if ((local_4_prior_case_value == NULL))
      {
        local_4_prior_case_value = CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_1_t,1);
      }
      else if (sxc_instance_of(local_4_prior_case_value,&type_ClassCmdLiteralInt32))
      {
        local_4_prior_case_value = CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_1_t,(((ClassCmdLiteralInt32*)local_4_prior_case_value)->property_value+1));
      }
      else
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,str760.value)) );
      }
      local_7_which_case = CmdWhichCase__init__Token(type_ClassCmdWhichCase.create(),local_1_t);
      ArrayList_of_Object__add__Object(((ClassCmdWhich*)local_3_cmd)->property_cases,local_7_which_case);
      ArrayList_of_Object__add__Object(((ClassCmdWhichCase*)local_7_which_case)->property_values,local_4_prior_case_value);
      if (local_0_use_is_comparison)
      {
        sxc_write_ref( &(((ClassCmdWhichCase*)local_7_which_case)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_whichis_terminators) );
      }
      else
      {
        sxc_write_ref( &(((ClassCmdWhichCase*)local_7_which_case)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_which_terminators) );
      }
    }
    else
    {
      goto end_7521;
    }
    local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  }
  end_7521:;
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_others))
  {
    if (!SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_eol))
    {
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_colon,str757.value);
    }
    sxc_write_ref( &(((ClassCmdWhich*)local_3_cmd)->property_case_others), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_others_terminators) );
    local_4_prior_case_value = ((ClassCmdWhich*)local_3_cmd)->property_case_others;
  }
  if (local_0_use_is_comparison)
  {
    if ((local_4_prior_case_value != NULL))
    {
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhichis,str305.value);
    }
    else
    {
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhichis,str761.value);
    }
  }
  else
  {
    if ((local_4_prior_case_value != NULL))
    {
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhich,str304.value);
    }
    else
    {
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhich,str762.value);
    }
  }
  ArrayList_of_ControlStructureInfo__remove_last(((ClassSlagParser*)context)->property_control_structure_stack);
  return local_3_cmd;
}

static SlagObject* SlagParser__parse_contingent( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_label;
  SXCRef local_2_cmd;

  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_contingent,str306.value);
  local_1_label = SlagParser__parse_label_def(context);
  SlagParser__must_consume_eol(context);
  local_2_cmd = CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdContingent.create(),local_0_t,SlagParserManager__unique_id(sxc_singletons[35]),NULL);
  SlagParser__push_structure_info__StructureType_CmdStructure_String(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_contingent_stmt,local_2_cmd,local_1_label);
  sxc_write_ref( &(((ClassCmdContingent*)local_2_cmd)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_contingent_terminators) );
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_satisfied))
  {
    sxc_write_ref( &(((ClassCmdContingent*)local_2_cmd)->property_satisfied_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_satisfied_terminators) );
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_unsatisfied))
  {
    sxc_write_ref( &(((ClassCmdContingent*)local_2_cmd)->property_unsatisfied_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_unsatisfied_terminators) );
  }
  ArrayList_of_ControlStructureInfo__remove_last(((ClassSlagParser*)context)->property_control_structure_stack);
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endcontingent,str309.value);
  return local_2_cmd;
}

static SlagObject* SlagParser__parse_try_statement( SXCRef context )
{
  SXCRef local_0_cmd;
  SXCRef local_1_label;
  SXCRef local_2_t;
  SXCRef local_3_type;
  SXCRef local_4_name;
  SXCRef local_5_v;
  SXCRef local_6_cmd_catch;

  local_0_cmd = CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdTry.create(),TokenReader__read(((ClassSlagParser*)context)->property_scanner),SlagParserManager__unique_id(sxc_singletons[35]),NULL);
  local_1_label = SlagParser__parse_label_def(context);
  SlagParser__must_consume_eol(context);
  SlagParser__push_structure_info__StructureType_CmdStructure_String(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_try_stmt,local_0_cmd,local_1_label);
  sxc_write_ref( &(((ClassCmdTry*)local_0_cmd)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_try_terminators) );
  local_2_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_catch))
  {
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
    local_3_type = SlagParser__parse_data_type(context);
    local_4_name = SlagParser__must_read_identifier__String(context,str773.value);
    local_5_v = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),((ClassTypeInfo*)local_3_type)->property_t,((ClassSlagParser*)context)->property_this_method,local_3_type,local_4_name,-1);
    ((ClassLocalVarInfo*)local_5_v)->property_is_catch_var = true;
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
    SlagParser__must_consume_eol(context);
    local_6_cmd_catch = CmdCatch__init__Token_LocalVarInfo_CmdStatementList(type_ClassCmdCatch.create(),local_2_t,local_5_v,SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_try_terminators));
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdCatch*)local_6_cmd_catch)->property_body)->property_statements))->property_count != 0))
    {
      ArrayList_of_Object__insert__Object_Int32(((ClassCmdStatementList*)((ClassCmdCatch*)local_6_cmd_catch)->property_body)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),local_2_t,local_5_v,NULL),(0+1));
    }
    else
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)((ClassCmdCatch*)local_6_cmd_catch)->property_body)->property_statements,CmdOpenScope__init__Token(type_ClassCmdOpenScope.create(),local_2_t));
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)((ClassCmdCatch*)local_6_cmd_catch)->property_body)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),local_2_t,local_5_v,NULL));
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)((ClassCmdCatch*)local_6_cmd_catch)->property_body)->property_statements,CmdCloseScope__init__Token(type_ClassCmdCloseScope.create(),local_2_t));
    }
    ArrayList_of_Object__add__Object(((ClassCmdTry*)local_0_cmd)->property_catches,local_6_cmd_catch);
    local_2_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  }
  ArrayList_of_ControlStructureInfo__remove_last(((ClassSlagParser*)context)->property_control_structure_stack);
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endtry,str316.value);
  return local_0_cmd;
}

static SlagObject* SlagParser__parse_loop( SXCRef context )
{
  SXCRef local_0_cmd;
  SXCRef local_1_label;

  local_0_cmd = CmdStructure__init__Token_Int32_CmdStatementList(type_ClassCmdLoop.create(),TokenReader__read(((ClassSlagParser*)context)->property_scanner),SlagParserManager__unique_id(sxc_singletons[35]),NULL);
  local_1_label = SlagParser__parse_label_def(context);
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_eol))
  {
    SlagParser__push_structure_info__StructureType_CmdStructure_String(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_loop_stmt,local_0_cmd,local_1_label);
    sxc_write_ref( &(((ClassCmdLoop*)local_0_cmd)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_loop_terminators) );
    ArrayList_of_ControlStructureInfo__remove_last(((ClassSlagParser*)context)->property_control_structure_stack);
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endloop,str319.value);
    return local_0_cmd;
  }
  else
  {
    SlagParser__push_structure_info__StructureType_CmdStructure_String(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_loop_stmt,local_0_cmd,local_1_label);
    sxc_write_ref( &(((ClassCmdLoop*)local_0_cmd)->property_body), SlagParser__parse_single_line_statements(context) );
    ArrayList_of_ControlStructureInfo__remove_last(((ClassSlagParser*)context)->property_control_structure_stack);
    return local_0_cmd;
  }
}

static SlagObject* SlagParser__parse_while_statement( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_label;
  SXCRef local_2_cmd;

  local_0_t = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
  local_1_label = SlagParser__parse_label_def(context);
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
  local_2_cmd = CmdWhile__init__Token_Int32_Cmd(type_ClassCmdWhile.create(),local_0_t,SlagParserManager__unique_id(sxc_singletons[35]),((ClassCmd*)SlagParser__parse_op_range(context)));
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
  SlagParser__push_structure_info__StructureType_CmdStructure_String(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_while_stmt,local_2_cmd,local_1_label);
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_eol))
  {
    sxc_write_ref( &(((ClassCmdWhile*)local_2_cmd)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_while_terminators) );
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhile,str321.value);
  }
  else
  {
    sxc_write_ref( &(((ClassCmdWhile*)local_2_cmd)->property_body), SlagParser__parse_single_line_statements(context) );
  }
  ArrayList_of_ControlStructureInfo__remove_last(((ClassSlagParser*)context)->property_control_structure_stack);
  return local_2_cmd;
}

static SlagObject* SlagParser__parse_foreach_loop( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_label;
  SXCRef local_2_expression;
  SXCRef local_3_t2;
  SXCRef local_4_cmd;
  SXCRef local_5_v;
  SXCRef local_6_v;

  local_0_t = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
  local_1_label = SlagParser__parse_label_def(context);
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
  local_2_expression = ((ClassCmd*)SlagParser__parse_op_range(context));
  local_3_t2 = ((ClassCmd*)local_2_expression)->property_t;
  local_4_cmd = NULL;
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren))
  {
    local_5_v = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),local_3_t2,((ClassSlagParser*)context)->property_this_method,TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],local_0_t,str589.value,NULL),((ClassString*)String__opADD__String(str781.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],SlagParserManager__unique_id(sxc_singletons[35]),10)))),-1);
    local_4_cmd = CmdForEachIn__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList_Logical(type_ClassCmdForEachIn.create(),local_0_t,SlagParserManager__unique_id(sxc_singletons[35]),local_5_v,local_2_expression,NULL,false);
  }
  else
  {
    if (((!sxc_instance_of(local_2_expression,&type_ClassCmdConstruct) || (((ClassCmdConstruct*)local_2_expression)->property_args != NULL)) || (((ClassTypeInfo*)((ClassCmdConstruct*)local_2_expression)->property_type_or_id)->property_substitution_tokens != NULL)))
    {
      SLAG_THROW( Cmd__error__String(local_2_expression,str783.value) );
    }
    local_6_v = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),local_3_t2,((ClassSlagParser*)context)->property_this_method,TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token(sxc_singletons[7],local_0_t,str589.value,NULL),((ClassTypeInfo*)((ClassCmdConstruct*)local_2_expression)->property_type_or_id)->property_name,-1);
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_in))
    {
      local_4_cmd = CmdForEachIn__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList_Logical(type_ClassCmdForEachIn.create(),local_0_t,SlagParserManager__unique_id(sxc_singletons[35]),local_6_v,((ClassCmd*)SlagParser__parse_op_range(context)),NULL,false);
    }
    else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_of))
    {
      local_4_cmd = CmdForEach__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList(type_ClassCmdForEachOf.create(),local_0_t,SlagParserManager__unique_id(sxc_singletons[35]),local_6_v,((ClassCmd*)SlagParser__parse_op_range(context)),NULL);
    }
    else
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),str785.value)) );
    }
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
  }
  SlagParser__push_structure_info__StructureType_CmdStructure_String(context,((ClassEnum_of_StructureType*)sxc_singletons[36])->property_forEach_stmt,local_4_cmd,local_1_label);
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_eol))
  {
    sxc_write_ref( &(((ClassCmdForEach*)local_4_cmd)->property_body), SlagParser__parse_multi_line_statements__ArrayList_of_Int32(context,((ClassSlagParser*)context)->property_foreach_terminators) );
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endforeach,str325.value);
  }
  else
  {
    sxc_write_ref( &(((ClassCmdForEach*)local_4_cmd)->property_body), SlagParser__parse_single_line_statements(context) );
  }
  ArrayList_of_ControlStructureInfo__remove_last(((ClassSlagParser*)context)->property_control_structure_stack);
  return local_4_cmd;
}

static void SlagParser__parse_local_vars__CmdStatementList( SXCRef context, SXCRef local_0_cmd_list )
{
  SXCRef local_1_t;
  SXCRef local_2_type;
  SlagLogical local_3_first;
  SXCRef local_4_name;
  SXCRef local_5_v;
  SXCRef local_6_decl;
  SXCRef local_7_args;

  SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_local);
  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  local_2_type = SlagParser__parse_data_type(context);
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type != ((ClassTokenManager*)sxc_singletons[2])->property_identifier))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_1_t,str786.value)) );
  }
  local_3_first = true;
  while ((local_3_first || SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma)))
  {
    local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    local_4_name = SlagParser__must_read_identifier__String(context,str787.value);
    local_3_first = false;
    local_5_v = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),local_1_t,((ClassSlagParser*)context)->property_this_method,local_2_type,local_4_name,-1);
    local_6_decl = CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),local_1_t,local_5_v,NULL);
    ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_cmd_list)->property_statements,local_6_decl);
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_assign))
    {
      sxc_write_ref( &(((ClassCmdLocalVarDeclaration*)local_6_decl)->property_initial_value), ((ClassCmd*)SlagParser__parse_op_range(context)) );
    }
    else if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
    {
      local_7_args = SlagParser__parse_arg_list__Int32_Int32_String_String_Logical(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str61.value,str62.value,false);
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_cmd_list)->property_statements,CmdAssignNewObject__init__Token_LocalVarInfo_CmdInitialConstructor(type_ClassCmdAssignNewObject.create(),local_1_t,local_5_v,CmdInitialConstructor__init__Token_CmdList(type_ClassCmdInitialConstructor.create(),local_1_t,local_7_args)));
    }
    else
    {
      ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_0_cmd_list)->property_statements,CmdAssignZeroValue__init__Token_LocalVarInfo(type_ClassCmdAssignZeroValue.create(),local_1_t,local_5_v));
    }
  }
}

static SlagObject* SlagParser__parse_op_range( SXCRef context )
{
  SXCRef local_0_first;
  SXCRef local_1_t;
  SXCRef local_2_range;

  local_0_first = SlagParser__parse_op_logical_xor(context);
  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  local_2_range = NULL;
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_upto))
  {
    local_2_range = CmdRange__init__Token_Cmd_Cmd_Cmd(type_ClassCmdRangeLE.create(),local_1_t,local_0_first,SlagParser__parse_op_logical_xor(context),NULL);
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_uptolessthan))
  {
    local_2_range = CmdRange__init__Token_Cmd_Cmd_Cmd(type_ClassCmdRangeLT.create(),local_1_t,local_0_first,SlagParser__parse_op_logical_xor(context),NULL);
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_downtogreaterthan))
  {
    local_2_range = CmdRange__init__Token_Cmd_Cmd_Cmd(type_ClassCmdRangeGT.create(),local_1_t,local_0_first,SlagParser__parse_op_logical_xor(context),NULL);
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_downto))
  {
    local_2_range = CmdRange__init__Token_Cmd_Cmd_Cmd(type_ClassCmdRangeGE.create(),local_1_t,local_0_first,SlagParser__parse_op_logical_xor(context),NULL);
  }
  else
  {
    return local_0_first;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_step))
  {
    sxc_write_ref( &(((ClassCmdRange*)local_2_range)->property_increment), SlagParser__parse_op_logical_xor(context) );
  }
  return local_2_range;
}

static SlagObject* SlagParser__parse_op_logical_xor( SXCRef context )
{
  SXCRef local_0_lhs;

  local_0_lhs = SlagParser__parse_op_logical_or(context);
  return SlagParser__parse_op_logical_xor__Cmd(context,local_0_lhs);
}

static SlagObject* SlagParser__parse_op_logical_xor__Cmd( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logical_xor))
  {
    return SlagParser__parse_op_logical_xor__Cmd(context,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdLogicalXor.create(),local_1_t,local_0_lhs,SlagParser__parse_op_logical_or(context)));
  }
  else
  {
    return local_0_lhs;
  }
}

static SlagObject* SlagParser__parse_op_logical_or( SXCRef context )
{
  SXCRef local_0_lhs;

  local_0_lhs = SlagParser__parse_op_logical_and(context);
  return SlagParser__parse_op_logical_or__Cmd(context,local_0_lhs);
}

static SlagObject* SlagParser__parse_op_logical_or__Cmd( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logical_or))
  {
    return SlagParser__parse_op_logical_or__Cmd(context,CmdLazyOr__init__Token_Cmd_Cmd(type_ClassCmdLazyOr.create(),local_1_t,local_0_lhs,SlagParser__parse_op_logical_and(context)));
  }
  else
  {
    return local_0_lhs;
  }
}

static SlagObject* SlagParser__parse_op_logical_and( SXCRef context )
{
  SXCRef local_0_lhs;

  local_0_lhs = SlagParser__parse_op_relational(context);
  return SlagParser__parse_op_logical_and__Cmd(context,local_0_lhs);
}

static SlagObject* SlagParser__parse_op_logical_and__Cmd( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logical_and))
  {
    return SlagParser__parse_op_logical_and__Cmd(context,CmdLazyAnd__init__Token_Cmd_Cmd(type_ClassCmdLazyAnd.create(),local_1_t,local_0_lhs,SlagParser__parse_op_relational(context)));
  }
  else
  {
    return local_0_lhs;
  }
}

static SlagObject* SlagParser__parse_op_relational( SXCRef context )
{
  SXCRef local_0_lhs;

  local_0_lhs = SlagParser__parse_op_bitwise_xor(context);
  return SlagParser__parse_op_relational__Cmd(context,local_0_lhs);
}

static SlagObject* SlagParser__parse_op_relational__Cmd( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_eq))
  {
    return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpEQ.create(),local_1_t,local_0_lhs,SlagParser__parse_op_bitwise_xor(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_le))
  {
    return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpLE.create(),local_1_t,local_0_lhs,SlagParser__parse_op_bitwise_xor(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_ge))
  {
    return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpGE.create(),local_1_t,local_0_lhs,SlagParser__parse_op_bitwise_xor(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_lt))
  {
    return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpLT.create(),local_1_t,local_0_lhs,SlagParser__parse_op_bitwise_xor(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_gt))
  {
    return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpGT.create(),local_1_t,local_0_lhs,SlagParser__parse_op_bitwise_xor(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_ne))
  {
    return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpNE.create(),local_1_t,local_0_lhs,SlagParser__parse_op_bitwise_xor(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_is))
  {
    return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpIs.create(),local_1_t,local_0_lhs,SlagParser__parse_op_bitwise_xor(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_isnot))
  {
    return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpIsNot.create(),local_1_t,local_0_lhs,SlagParser__parse_op_bitwise_xor(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_as))
  {
    return CmdAs__init__Token_Cmd_TypeInfo(type_ClassCmdAs.create(),local_1_t,local_0_lhs,SlagParser__parse_data_type(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_coerce_as))
  {
    return CmdCoerceAs__init__Token_Cmd_TypeInfo(type_ClassCmdCoerceAs.create(),local_1_t,local_0_lhs,SlagParser__parse_data_type(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_instanceof))
  {
    return CmdCmpInstanceOf__init__Token_Cmd_TypeInfo(type_ClassCmdCmpInstanceOf.create(),local_1_t,local_0_lhs,SlagParser__parse_data_type(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_notinstanceof))
  {
    return CmdUnary__init__Token_Cmd(type_ClassCmdNot.create(),local_1_t,CmdCmpInstanceOf__init__Token_Cmd_TypeInfo(type_ClassCmdCmpInstanceOf.create(),local_1_t,local_0_lhs,SlagParser__parse_data_type(context)));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_compare))
  {
    return CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCompare.create(),local_1_t,local_0_lhs,SlagParser__parse_op_bitwise_xor(context));
  }
  else
  {
    return local_0_lhs;
  }
}

static SlagObject* SlagParser__parse_op_bitwise_xor( SXCRef context )
{
  SXCRef local_0_lhs;

  local_0_lhs = SlagParser__parse_op_bitwise_or(context);
  return SlagParser__parse_op_bitwise_xor__Cmd(context,local_0_lhs);
}

static SlagObject* SlagParser__parse_op_bitwise_xor__Cmd( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_xor))
  {
    return SlagParser__parse_op_bitwise_xor__Cmd(context,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdXor.create(),local_1_t,local_0_lhs,SlagParser__parse_op_bitwise_or(context)));
  }
  return local_0_lhs;
}

static SlagObject* SlagParser__parse_op_bitwise_or( SXCRef context )
{
  SXCRef local_0_lhs;

  local_0_lhs = SlagParser__parse_op_bitwise_and(context);
  return SlagParser__parse_op_bitwise_or__Cmd(context,local_0_lhs);
}

static SlagObject* SlagParser__parse_op_bitwise_or__Cmd( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_or))
  {
    return SlagParser__parse_op_bitwise_or__Cmd(context,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdOr.create(),local_1_t,local_0_lhs,SlagParser__parse_op_bitwise_and(context)));
  }
  return local_0_lhs;
}

static SlagObject* SlagParser__parse_op_bitwise_and( SXCRef context )
{
  SXCRef local_0_lhs;

  local_0_lhs = SlagParser__parse_op_summation(context);
  return SlagParser__parse_op_bitwise_and__Cmd(context,local_0_lhs);
}

static SlagObject* SlagParser__parse_op_bitwise_and__Cmd( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_ampersand))
  {
    return SlagParser__parse_op_bitwise_and__Cmd(context,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAnd.create(),local_1_t,local_0_lhs,SlagParser__parse_op_summation(context)));
  }
  return local_0_lhs;
}

static SlagObject* SlagParser__parse_op_summation( SXCRef context )
{
  SXCRef local_0_lhs;

  local_0_lhs = SlagParser__parse_op_product(context);
  return SlagParser__parse_op_summation__Cmd(context,local_0_lhs);
}

static SlagObject* SlagParser__parse_op_summation__Cmd( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_plus))
  {
    return SlagParser__parse_op_summation__Cmd(context,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAdd.create(),local_1_t,local_0_lhs,SlagParser__parse_op_product(context)));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_minus))
  {
    return SlagParser__parse_op_summation__Cmd(context,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdSub.create(),local_1_t,local_0_lhs,SlagParser__parse_op_product(context)));
  }
  else
  {
    return local_0_lhs;
  }
}

static SlagObject* SlagParser__parse_op_product( SXCRef context )
{
  SXCRef local_0_lhs;

  local_0_lhs = SlagParser__parse_op_exponent(context);
  return SlagParser__parse_op_product__Cmd(context,local_0_lhs);
}

static SlagObject* SlagParser__parse_op_product__Cmd( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_times))
  {
    return SlagParser__parse_op_product__Cmd(context,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdMul.create(),local_1_t,local_0_lhs,SlagParser__parse_op_exponent(context)));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_divide))
  {
    return SlagParser__parse_op_product__Cmd(context,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdDiv.create(),local_1_t,local_0_lhs,SlagParser__parse_op_exponent(context)));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_mod))
  {
    return SlagParser__parse_op_product__Cmd(context,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdMod.create(),local_1_t,local_0_lhs,SlagParser__parse_op_exponent(context)));
  }
  else
  {
    return local_0_lhs;
  }
}

static SlagObject* SlagParser__parse_op_exponent( SXCRef context )
{
  SXCRef local_0_lhs;

  local_0_lhs = SlagParser__parse_op_unary(context);
  return SlagParser__parse_op_exponent__Cmd(context,local_0_lhs);
}

static SlagObject* SlagParser__parse_op_exponent__Cmd( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_power))
  {
    return SlagParser__parse_op_exponent__Cmd(context,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdExp.create(),local_1_t,local_0_lhs,SlagParser__parse_op_unary(context)));
  }
  return local_0_lhs;
}

static SlagObject* SlagParser__parse_op_unary( SXCRef context )
{
  SXCRef local_0_t;

  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_plus))
  {
    return SlagParser__parse_op_unary(context);
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_minus))
  {
    return CmdUnary__init__Token_Cmd(type_ClassCmdNegate.create(),local_0_t,SlagParser__parse_op_unary(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_not))
  {
    return CmdUnary__init__Token_Cmd(type_ClassCmdNot.create(),local_0_t,SlagParser__parse_op_unary(context));
  }
  else if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logical_not))
  {
    return CmdUnary__init__Token_Cmd(type_ClassCmdLogicalNot.create(),local_0_t,SlagParser__parse_op_unary(context));
  }
  else
  {
    return SlagParser__parse_op_query_valid(context);
  }
}

static SlagObject* SlagParser__parse_op_query_valid( SXCRef context )
{
  SXCRef local_0_operand;
  SXCRef local_1_t;

  local_0_operand = SlagParser__parse_op_member(context);
  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logicalize))
  {
    local_0_operand = CmdUnary__init__Token_Cmd(type_ClassCmdLogicalize.create(),local_1_t,local_0_operand);
    while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_logicalize))
    {
    }
  }
  return local_0_operand;
}

static SlagObject* SlagParser__parse_op_member( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_lhs;

  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  local_1_lhs = SlagParser__parse_op_term(context);
  return SlagParser__parse_op_member__Cmd(context,local_1_lhs);
}

static SlagObject* SlagParser__parse_op_member__Cmd( SXCRef context, SXCRef local_0_lhs )
{
  SXCRef local_1_t;
  SXCRef local_2_cast_type;
  SXCRef local_3_t2;
  SXCRef local_4_args;

  local_1_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_member_access))
  {
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
    {
      local_2_cast_type = SlagParser__parse_data_type(context);
      SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
      return SlagParser__parse_op_member__Cmd(context,CmdCast__init__Token_Cmd_TypeInfo(type_ClassCmdCast.create(),local_1_t,local_0_lhs,local_2_cast_type));
    }
    else
    {
      return SlagParser__parse_op_member__Cmd(context,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_1_t,local_0_lhs,SlagParser__parse_construct__Logical(context,false)));
    }
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_bracket))
  {
    local_3_t2 = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    local_4_args = CmdList__init__Int32(type_ClassCmdList.create(),1);
    ArrayList_of_Object__add__Object(local_4_args,((ClassCmd*)SlagParser__parse_op_range(context)));
    while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
    {
      ArrayList_of_Object__add__Object(local_4_args,((ClassCmd*)SlagParser__parse_op_range(context)));
    }
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_bracket,str54.value);
    return SlagParser__parse_op_member__Cmd(context,CmdAccessIndex__init__Token_Cmd_CmdList(type_ClassCmdAccessIndex.create(),local_1_t,local_0_lhs,local_4_args));
  }
  return local_0_lhs;
}

static SlagObject* SlagParser__parse_op_term( SXCRef context )
{
  SXCRef local_0_t;
  SXCRef local_1_expr;
  SXCRef local_2_list;
  SXCRef local_3_text;
  SXCRef local_4_args;
  SXCRef local_5_construct;
  SXCRef local_6__reader1812;
  SXCRef local_7_arg;
  SXCRef local_8_params;
  SlagInt32 local_9_index;
  SlagInt32 local_10__count1813;
  SXCRef local_11_arg;
  SXCRef local_12_decl;
  SXCRef local_13_construct_arg;
  SXCRef local_14_ctor;
  SXCRef local_15_type;
  SXCRef local_16_m;
  SXCRef local_17__reader1817;
  SXCRef local_18_p;
  SXCRef local_19__reader1818;
  SXCRef local_20_param;
  SXCRef local_21_args;
  SXCRef local_22_list;
  SXCRef local_23_value;
  SXCRef local_24_value;
  SXCRef local_25_result;
  SlagReal64 local_26_value;
  SlagLogical local_27_value;
  SXCRef local_28_which_1832;
  SXCRef local_29_t2;
  SXCRef local_30_expr;

  SlagParser__discard_eols(context);
  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
  {
    local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    local_1_expr = ((ClassCmd*)SlagParser__parse_op_range(context));
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
    return local_1_expr;
  }
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_brace))
  {
    local_2_list = CmdImplicitListLiteral__init__Token_ArrayList_of_Cmd(type_ClassCmdImplicitListLiteral.create(),local_0_t,SlagParser__parse_arg_list__Int32_Int32_String_String_Logical(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_brace,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_brace,str247.value,str397.value,false));
    return local_2_list;
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_insert_underlying))
  {
    return CmdUnderlyingCall__init__Token(type_ClassCmdUnderlyingCall.create(),local_0_t);
  }
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_string))
  {
    local_3_text = ((ClassToken*)TokenReader__read(((ClassSlagParser*)context)->property_scanner))->property_content;
    if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren))
    {
      local_4_args = SlagParser__parse_arg_list__Int32_Int32_String_String_Logical(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str61.value,str62.value,false);
      return CmdFormattedString__init__Token_String_CmdList(type_ClassCmdFormattedString.create(),local_0_t,local_3_text,local_4_args);
    }
    return CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),local_0_t,local_3_text,-1);
  }
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_ampersand))
  {
    return SlagParser__parse_construct__Logical(context,false);
  }
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_identifier))
  {
    local_5_construct = SlagParser__parse_construct__Logical(context,true);
    if ((((ClassCmdConstruct*)local_5_construct)->property_args != NULL))
    {
      {
        local_6__reader1812 = ArrayList_of_Cmd__create_reader(((ClassCmdConstruct*)local_5_construct)->property_args);
        while (CallFn____Logical(14,local_6__reader1812))
        {
          local_7_arg = CallFn____Object(45,local_6__reader1812);
          if (sxc_instance_of(local_7_arg,&type_ClassInlineClassPropertyDeclaration)) goto satisfied_7247;
        }
        goto end_7247;
        satisfied_7247:;
        {
          local_8_params = ArrayList_of_ParameterInfo__init__Int32(type_ClassArrayList_of_ParameterInfo.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdConstruct*)local_5_construct)->property_args))->property_count);
          {
            local_9_index = 0;
            local_10__count1813 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdConstruct*)local_5_construct)->property_args))->property_count;
            while ((local_9_index < local_10__count1813))
            {
              local_11_arg = ((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdConstruct*)local_5_construct)->property_args))->property_data)->data))[local_9_index]));
              local_12_decl = sxc_as(local_11_arg,&type_ClassInlineClassPropertyDeclaration);
              if ((local_12_decl != NULL))
              {
                ArrayList_of_Object__add__Object(local_8_params,ParameterInfo__init__Token_MethodInfo_TypeInfo_String_Cmd_Int32(type_ClassParameterInfo.create(),local_0_t,NULL,((ClassInlineClassPropertyDeclaration*)local_12_decl)->property_of_type,((ClassInlineClassPropertyDeclaration*)local_12_decl)->property_id,NULL,-1));
                sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdConstruct*)local_5_construct)->property_args))->property_data)->data))+local_9_index, ((ClassInlineClassPropertyDeclaration*)local_12_decl)->property_expression );
              }
              else
              {
                local_13_construct_arg = sxc_as(local_11_arg,&type_ClassCmdConstruct);
                if (((local_13_construct_arg == NULL) || (((ClassCmdConstruct*)local_13_construct_arg)->property_args != NULL)))
                {
                  SLAG_THROW( Cmd__error__String(local_11_arg,str706.value) );
                }
                ArrayList_of_Object__add__Object(local_8_params,ParameterInfo__init__Token_MethodInfo_TypeInfo_String_Cmd_Int32(type_ClassParameterInfo.create(),local_0_t,NULL,NULL,((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)local_13_construct_arg)->property_type_or_id)->property_name),NULL,-1));
              }
              ++local_9_index;
            }
          }
          SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_with,str357.value);
          local_14_ctor = SlagParser__parse_anonymous_class__CmdConstruct(context,local_5_construct);
          local_15_type = ((ClassCmdConstruct*)local_14_ctor)->property_type_or_id;
          local_16_m = MethodInfo__init__Token_Qualifiers_TypeInfo_String(type_ClassMethodInfo.create(),local_0_t,((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public,local_15_type,str667.value);
          if (((((ClassQualifiers*)((ClassTypeInfo*)local_15_type)->property_qualifiers)->property_flags&((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags) != 0))
          {
            sxc_write_ref( &(((ClassMethodInfo*)local_16_m)->property_qualifiers), ((ClassQualifiers*)Qualifiers__init__Int32(type_ClassQualifiers.create(),(((ClassQualifiers*)((ClassMethodInfo*)local_16_m)->property_qualifiers)->property_flags|((ClassQualifiers*)((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_requisite)->property_flags))) );
          }
          ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_15_type)->property_methods,local_16_m);
          local_17__reader1817 = ArrayList_of_ParameterInfo__create_reader(local_8_params);
          while (CallFn____Logical(14,local_17__reader1817))
          {
            local_18_p = CallFn____Object(45,local_17__reader1817);
            sxc_write_ref( &(((ClassParameterInfo*)local_18_p)->property_method_context), local_16_m );
          }
          sxc_write_ref( &(((ClassMethodInfo*)local_16_m)->property_parameters), local_8_params );
          sxc_write_ref( &(((ClassMethodInfo*)local_16_m)->property_body), CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),local_0_t,0) );
          local_19__reader1818 = ArrayList_of_ParameterInfo__create_reader(((ClassMethodInfo*)local_16_m)->property_parameters);
          while (CallFn____Logical(14,local_19__reader1818))
          {
            local_20_param = CallFn____Object(45,local_19__reader1818);
            if ((((ClassParameterInfo*)local_20_param)->property_type != NULL))
            {
              ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_15_type)->property_properties,PropertyInfo__init__Token_TypeInfo_Qualifiers_TypeInfo_String_Cmd_Int32(type_ClassPropertyInfo.create(),((ClassParameterInfo*)local_20_param)->property_t,local_15_type,((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_public,((ClassParameterInfo*)local_20_param)->property_type,((ClassParameterInfo*)local_20_param)->property_name,NULL,-1));
              sxc_write_ref( &(((ClassParameterInfo*)local_20_param)->property_type), NULL );
            }
          }
          return local_14_ctor;
        }
        goto end_7247;
        unsatisfied_7247:;
      }
      end_7247:;
    }
    if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_with))
    {
      return SlagParser__parse_anonymous_class__CmdConstruct(context,local_5_construct);
    }
    if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_brace))
    {
      if ((((ClassCmdConstruct*)local_5_construct)->property_args != NULL))
      {
        SLAG_THROW( Cmd__error__String(local_5_construct,str860.value) );
      }
      local_21_args = SlagParser__parse_arg_list__Int32_Int32_String_String_Logical(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_brace,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_brace,str247.value,str397.value,false);
      local_22_list = CmdExplicitListLiteral__init__Token_TypeInfo_ArrayList_of_Cmd(type_ClassCmdExplicitListLiteral.create(),local_0_t,((ClassCmdConstruct*)local_5_construct)->property_type_or_id,local_21_args);
      return local_22_list;
    }
    return local_5_construct;
  }
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_bracket))
  {
    return SlagParser__parse_meta_expression(context);
  }
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_char))
  {
    return CmdLiteralChar__init__Token_Char(type_ClassCmdLiteralChar.create(),local_0_t,String__get__Int32(((ClassToken*)TokenReader__read(((ClassSlagParser*)context)->property_scanner))->property_content,0));
  }
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_int))
  {
    local_0_t = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
    local_23_value = BigInt__init__String_Int32(type_ClassBigInt.create(),((ClassToken*)local_0_t)->property_content,10);
    if (BigInt__is_valid_Int32(local_23_value))
    {
      return CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_0_t,BigInt__to_Int32(local_23_value));
    }
    else if (BigInt__is_valid_Int64(local_23_value))
    {
      return CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),local_0_t,BigInt__to_Int64(local_23_value));
    }
    else
    {
      Global__println__String(sxc_singletons[21],BigInt__to_String__Int32(local_23_value,16));
      BigInt__is_valid_Int64(local_23_value);
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str867.value)) );
    }
  }
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_hex_int))
  {
    local_0_t = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
    local_24_value = BigInt__init__String_Int32(type_ClassBigInt.create(),((ClassToken*)local_0_t)->property_content,16);
    local_25_result = NULL;
    if (((((SlagString*)((ClassToken*)local_0_t)->property_content)->count) <= 8))
    {
      local_25_result = CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),local_0_t,((SlagInt32)BigInt__to_Int64(local_24_value)));
    }
    else if (((((SlagString*)((ClassToken*)local_0_t)->property_content)->count) <= 16))
    {
      if ((BigInt__opCMP__BigInt(local_24_value,((ClassSlagParserManager*)sxc_singletons[35])->property_value_2e63) != -1))
      {
        local_25_result = CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),local_0_t,BigInt__to_Int64(BigInt__opSUB__BigInt(local_24_value,((ClassSlagParserManager*)sxc_singletons[35])->property_value_2e64)));
      }
      else
      {
        local_25_result = CmdLiteralInt64__init__Token_Int64(type_ClassCmdLiteralInt64.create(),local_0_t,BigInt__to_Int64(local_24_value));
      }
    }
    else
    {
      SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str868.value)) );
    }
    return local_25_result;
  }
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_real))
  {
    local_0_t = TokenReader__read(((ClassSlagParser*)context)->property_scanner);
    local_26_value = sxc_int64_as_real64(NumberConversions__parse_Int64__String_Int32(sxc_singletons[12],((ClassToken*)local_0_t)->property_content,16));
    return CmdLiteralReal64__init__Token_Real64(type_ClassCmdLiteralReal64.create(),local_0_t,local_26_value);
  }
  if ((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_literal_logical))
  {
    local_27_value = false;
    local_28_which_1832 = ((ClassToken*)TokenReader__read(((ClassSlagParser*)context)->property_scanner))->property_content;
    if (String__opEQ__String(local_28_which_1832,str237.value))
    {
      local_27_value = true;
    }
    else if (String__opEQ__String(local_28_which_1832,str238.value))
    {
      local_27_value = false;
    }
    else
    {
      SLAG_THROW( Error__init__String(type_ClassError.create(),str870.value) );
    }
    return CmdLiteralLogical__init__Token_Logical(type_ClassCmdLiteralLogical.create(),local_0_t,local_27_value);
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_literal_null))
  {
    return CmdLiteralNull__init__Token(type_ClassCmdLiteralNull.create(),local_0_t);
  }
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_duplicate))
  {
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_paren,str61.value);
    local_29_t2 = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
    local_30_expr = ((ClassCmd*)SlagParser__parse_op_range(context));
    SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_close_paren,str62.value);
    return CmdUnary__init__Token_Cmd(type_ClassCmdDuplicate.create(),local_0_t,local_30_expr);
  }
  SlagParser__check_out_of_place_keywords(context);
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str874.value),Global__to_String__Object(sxc_singletons[21],((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))),str62.value)))) );
}

static SlagObject* SlagParser__parse_meta_expression( SXCRef context )
{
  SXCRef local_0_t;

  SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_open_bracket);
  local_0_t = ((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0])));
  SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_t,str862.value)) );
}

static SlagObject* SlagParser__parse_anonymous_class__CmdConstruct( SXCRef context, SXCRef local_0_construct )
{
  SXCRef local_1_def;

  local_1_def = TypeManager__define_type__TypeInfo(sxc_singletons[7],TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token(type_ClassTypeInfo.create(),TokenReader__read(((ClassSlagParser*)context)->property_scanner),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str707.value),String__before_first__String(((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)local_0_construct)->property_type_or_id)->property_name),str364.value)),str629.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],SlagParserManager__unique_id(sxc_singletons[35]),10)))),((ClassEnum_of_Qualifiers*)sxc_singletons[30])->property_qual_class,NULL));
  ArrayList_of_Object__add__Object(((ClassTypeInfo*)local_1_def)->property_base_types,((ClassCmdConstruct*)local_0_construct)->property_type_or_id);
  SlagParser__parse_member_defs__TypeInfo_Int32_String(context,local_1_def,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwith,str358.value);
  SlagParser__must_consume__Int32_String(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwith,str358.value);
  sxc_write_ref( &(((ClassCmdConstruct*)local_0_construct)->property_type_or_id), local_1_def );
  return local_0_construct;
}

static SlagObject* SlagParser__parse_arg_list__Int32_Int32_String_String_Logical( SXCRef context, SlagInt32 local_0_open_bracket, SlagInt32 local_1_close_bracket, SXCRef local_2_open_bracket_symbol, SXCRef local_3_close_bracket_symbol, SlagLogical local_4_allow_arg_types )
{
  SXCRef local_5_args;

  SlagParser__discard_eols(context);
  local_5_args = CmdList__init__Int32(type_ClassCmdList.create(),2);
  SlagParser__must_consume__Int32_String(context,local_0_open_bracket,local_2_open_bracket_symbol);
  SlagParser__discard_eols(context);
  if (SlagParser__consume__Int32(context,local_1_close_bracket))
  {
    return local_5_args;
  }
  ArrayList_of_Object__add__Object(local_5_args,SlagParser__parse_arg__Logical_Int32(context,local_4_allow_arg_types,local_1_close_bracket));
  while (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma))
  {
    SlagParser__discard_eols(context);
    ArrayList_of_Object__add__Object(local_5_args,SlagParser__parse_arg__Logical_Int32(context,local_4_allow_arg_types,local_1_close_bracket));
  }
  SlagParser__discard_eols(context);
  if (!(((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == local_1_close_bracket))
  {
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))),StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str681.value),local_3_close_bracket_symbol),str242.value)))) );
  }
  SlagParser__must_consume__Int32_String(context,local_1_close_bracket,local_3_close_bracket_symbol);
  return local_5_args;
}

static SlagObject* SlagParser__parse_arg__Logical_Int32( SXCRef context, SlagLogical local_0_allow_arg_decl, SlagInt32 local_1_close_bracket )
{
  SXCRef local_2_expr;
  SXCRef local_3_of_type;
  SXCRef local_4_id;

  local_2_expr = ((ClassCmd*)SlagParser__parse_op_range(context));
  if (!local_0_allow_arg_decl)
  {
    return local_2_expr;
  }
  if ((((((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_symbol_comma) || (((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == local_1_close_bracket)) || (((ClassToken*)((ClassToken*)((ClassToken*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassTokenReader*)((ClassSlagParser*)context)->property_scanner)->property_buffer))->property_data)->data))[0]))))->property_type == ((ClassTokenManager*)sxc_singletons[2])->property_eol)))
  {
    return local_2_expr;
  }
  local_3_of_type = NULL;
  {
    if (!sxc_instance_of(local_2_expr,&type_ClassCmdConstruct)) goto unsatisfied_7198;
    local_3_of_type = ((ClassCmdConstruct*)local_2_expr)->property_type_or_id;
    if (!(((ClassCmdConstruct*)local_2_expr)->property_args == NULL)) goto unsatisfied_7198;
    satisfied_7198:;
    goto end_7198;
    unsatisfied_7198:;
    {
      SLAG_THROW( Cmd__error__String(local_2_expr,str679.value) );
    }
  }
  end_7198:;
  local_4_id = NULL;
  if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_assign))
  {
    local_4_id = ((ClassTypeInfo*)local_3_of_type)->property_name;
    local_3_of_type = NULL;
    local_2_expr = ((ClassCmd*)SlagParser__parse_op_range(context));
  }
  else
  {
    local_2_expr = ((ClassCmd*)SlagParser__parse_op_range(context));
    {
      if (!sxc_instance_of(local_2_expr,&type_ClassCmdConstruct)) goto unsatisfied_7201;
      local_4_id = ((ClassString*)((ClassTypeInfo*)((ClassCmdConstruct*)local_2_expr)->property_type_or_id)->property_name);
      if (!(((ClassCmdConstruct*)local_2_expr)->property_args == NULL)) goto unsatisfied_7201;
      satisfied_7201:;
      goto end_7201;
      unsatisfied_7201:;
      {
        SLAG_THROW( Cmd__error__String(local_2_expr,str679.value) );
      }
    }
    end_7201:;
    if (SlagParser__consume__Int32(context,((ClassTokenManager*)sxc_singletons[2])->property_symbol_assign))
    {
      local_2_expr = ((ClassCmd*)SlagParser__parse_op_range(context));
    }
  }
  return InlineClassPropertyDeclaration__init__TypeInfo_String_Cmd(type_ClassInlineClassPropertyDeclaration.create(),local_3_of_type,local_4_id,local_2_expr);
}

void SlagParser__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassSlagParser*)context)->property_no_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),0)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_block_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),1),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endblock)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_try_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),2),((ClassTokenManager*)sxc_singletons[2])->property_symbol_catch),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endtry)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_if_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),3),((ClassTokenManager*)sxc_singletons[2])->property_symbol_elseif),((ClassTokenManager*)sxc_singletons[2])->property_symbol_else),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endif)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_else_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),1),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endif)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_others_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),2),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhich),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhichis)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_loop_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),1),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endloop)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_loop_while_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),1),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endloop)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_while_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),1),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhile)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_foreach_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),1),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endforeach)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_which_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),4),((ClassTokenManager*)sxc_singletons[2])->property_symbol_case),((ClassTokenManager*)sxc_singletons[2])->property_symbol_casenext),((ClassTokenManager*)sxc_singletons[2])->property_symbol_others),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhich)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_whichis_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),4),((ClassTokenManager*)sxc_singletons[2])->property_symbol_case),((ClassTokenManager*)sxc_singletons[2])->property_symbol_casenext),((ClassTokenManager*)sxc_singletons[2])->property_symbol_others),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endwhichis)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_contingent_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),3),((ClassTokenManager*)sxc_singletons[2])->property_symbol_satisfied),((ClassTokenManager*)sxc_singletons[2])->property_symbol_unsatisfied),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endcontingent)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_satisfied_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),2),((ClassTokenManager*)sxc_singletons[2])->property_symbol_unsatisfied),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endcontingent)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_unsatisfied_terminators), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),1),((ClassTokenManager*)sxc_singletons[2])->property_symbol_endcontingent)) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_out_of_place_keywords), HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init(type_ClassHashTable_of_Int32_and_KeywordPairing.create()) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_shorthand_ops), ((ClassArrayList_of_Int32*)ArrayList_of_Int32__add__Readable_of_Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),10),((ClassTokenManager*)sxc_singletons[2])->property_symbol_add_with_assign),((ClassTokenManager*)sxc_singletons[2])->property_symbol_subtract_with_assign),((ClassTokenManager*)sxc_singletons[2])->property_symbol_multiply_with_assign),((ClassTokenManager*)sxc_singletons[2])->property_symbol_divide_with_assign),((ClassTokenManager*)sxc_singletons[2])->property_symbol_mod_with_assign),ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__add__Int32(ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),5),((ClassTokenManager*)sxc_singletons[2])->property_symbol_power_with_assign),((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_and_with_assign),((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_or_with_assign),((ClassTokenManager*)sxc_singletons[2])->property_symbol_bitwise_xor_with_assign),((ClassTokenManager*)sxc_singletons[2])->property_symbol_member_with_assign))) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_control_structure_stack), ArrayList_of_ControlStructureInfo__init(type_ClassArrayList_of_ControlStructureInfo.create()) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_src_paths), ArrayList_of_String__init(type_ClassArrayList_of_String.create()) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_includes), ArrayList_of_SlagFile__init(type_ClassArrayList_of_SlagFile.create()) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_pending_files), ArrayList_of_SlagFile__init(type_ClassArrayList_of_SlagFile.create()) );
  sxc_write_ref( &(((ClassSlagParser*)context)->property_processed_files), ArrayList_of_SlagFile__init(type_ClassArrayList_of_SlagFile.create()) );
}

SlagObject* SlagParser__type_name( SXCRef context )
{
  return str470.value;
}

static SlagObject* CmdFormattedString__init__Token_String_CmdList( SXCRef context, SXCRef local_0_t_7214, SXCRef local_1_text_7213, SXCRef local_2_args_7212 )
{
  sxc_write_ref( &(((ClassCmdFormattedString*)context)->property_t), local_0_t_7214 );
  sxc_write_ref( &(((ClassCmdFormattedString*)context)->property_text), local_1_text_7213 );
  sxc_write_ref( &(((ClassCmdFormattedString*)context)->property_args), local_2_args_7212 );
  return context;
}

static SlagObject* CmdFormattedString__create_duplicate( SXCRef context )
{
  return CmdFormattedString__init__Token_String_CmdList(type_ClassCmdFormattedString.create(),((ClassCmdFormattedString*)context)->property_t,((ClassCmdFormattedString*)context)->property_text,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdFormattedString*)context)->property_args));
}

static SlagObject* CmdFormattedString__resolve( SXCRef context )
{
  SXCRef local_0_pieces;
  SXCRef local_1_triplet;
  SXCRef local_2_arg;
  SXCRef local_3_marker;
  SlagLogical local_4_leading_zero;
  SlagInt32 local_5_dot;
  SlagInt32 local_6_whole_places;
  SlagInt32 local_7_decimal_places;
  SXCRef local_8_format_args;
  SlagInt32 local_9_which_2797;
  SXCRef local_10_builder;

  CmdList__resolve(((ClassCmdFormattedString*)context)->property_args);
  local_0_pieces = ArrayList_of_Cmd__init(type_ClassArrayList_of_Cmd.create());
  local_1_triplet = CmdFormattedString__split_around_next_marker__Token_String(context,((ClassCmdFormattedString*)context)->property_t,((ClassCmdFormattedString*)context)->property_text);
  while (((((SlagString*)((ClassStringTriplet*)local_1_triplet)->property_middle)->count) != 0))
  {
    if (((((SlagString*)((ClassStringTriplet*)local_1_triplet)->property_first)->count) != 0))
    {
      ArrayList_of_Object__add__Object(local_0_pieces,CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),((ClassCmdFormattedString*)context)->property_t,((ClassStringTriplet*)local_1_triplet)->property_first,-1));
    }
    if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdFormattedString*)context)->property_args))->property_count == 0))
    {
      SLAG_THROW( Cmd__error__String(context,str1173.value) );
    }
    local_2_arg = ((ClassCmd*)((ClassCmd*)ArrayList_of_Object__remove__Int32(((ClassCmdFormattedString*)context)->property_args,0)));
    local_3_marker = ((ClassStringTriplet*)local_1_triplet)->property_middle;
    if (((((SlagString*)local_3_marker)->count) <= 3))
    {
      if ((CallFn____Object(0,local_2_arg) != ((ClassTypeManager*)sxc_singletons[7])->property_type_string))
      {
        local_2_arg = CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdFormattedString*)context)->property_t,CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdFormattedString*)context)->property_t,((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,str12.value))),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdFormattedString*)context)->property_t,str993.value,CmdList__init__Cmd(type_ClassCmdList.create(),local_2_arg)));
      }
      ArrayList_of_Object__add__Object(local_0_pieces,local_2_arg);
    }
    else
    {
      local_4_leading_zero = (((SlagInt32)String__get__Int32(local_3_marker,2)) == 48);
      local_5_dot = String__index_of__Char_Int32(local_3_marker,((SlagChar)46),0);
      local_6_whole_places = 1;
      local_7_decimal_places = 4;
      if ((local_5_dot >= 0))
      {
        if ((local_5_dot == ((((SlagString*)local_3_marker)->count)-2)))
        {
          SLAG_THROW( Cmd__error__String(context,str1174.value) );
        }
        if ((local_5_dot > 2))
        {
          local_6_whole_places = NumberConversions__parse_Int32__String_Int32(sxc_singletons[12],String__substring__Int32_Int32(local_3_marker,2,(local_5_dot-1)),10);
        }
        local_7_decimal_places = NumberConversions__parse_Int32__String_Int32(sxc_singletons[12],String__substring__Int32_Int32(local_3_marker,(local_5_dot+1),((((SlagString*)local_3_marker)->count)-2)),10);
      }
      else
      {
        local_6_whole_places = NumberConversions__parse_Int32__String_Int32(sxc_singletons[12],String__substring__Int32_Int32(local_3_marker,2,((((SlagString*)local_3_marker)->count)-2)),10);
      }
      local_8_format_args = CmdList__init__Int32(type_ClassCmdList.create(),4);
      ArrayList_of_Object__add__Object(local_8_format_args,local_2_arg);
      ArrayList_of_Object__add__Object(local_8_format_args,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdFormattedString*)context)->property_t,local_6_whole_places));
      ArrayList_of_Object__add__Object(local_8_format_args,CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdFormattedString*)context)->property_t,local_7_decimal_places));
      if (local_4_leading_zero)
      {
        ArrayList_of_Object__add__Object(local_8_format_args,CmdLiteralChar__init__Token_Char(type_ClassCmdLiteralChar.create(),((ClassCmdFormattedString*)context)->property_t,((SlagChar)48)));
      }
      local_2_arg = CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdFormattedString*)context)->property_t,CmdSingletonReference__init__Token_TypeInfo(type_ClassCmdSingletonReference.create(),((ClassCmdFormattedString*)context)->property_t,((ClassTypeInfo*)GenericHashTable_of_Object_and_Object__get__Object(((ClassHashTable_of_String_and_TypeInfo*)((ClassTypeManager*)sxc_singletons[7])->property_types)->property_data,str12.value))),CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdFormattedString*)context)->property_t,str1175.value,local_8_format_args));
      ArrayList_of_Object__add__Object(local_0_pieces,local_2_arg);
    }
    local_1_triplet = CmdFormattedString__split_around_next_marker__Token_String(context,((ClassCmdFormattedString*)context)->property_t,((ClassStringTriplet*)local_1_triplet)->property_last);
  }
  if (((((SlagString*)((ClassStringTriplet*)local_1_triplet)->property_first)->count) != 0))
  {
    ArrayList_of_Object__add__Object(local_0_pieces,CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),((ClassCmdFormattedString*)context)->property_t,((ClassStringTriplet*)local_1_triplet)->property_first,-1));
  }
  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdFormattedString*)context)->property_args))->property_count > 0))
  {
    SLAG_THROW( Cmd__error__String(context,str1176.value) );
  }
  local_9_which_2797 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_pieces))->property_count;
  if ((local_9_which_2797 == 0))
  {
    return CmdLiteralString__init__Token_String_Int32(type_ClassCmdLiteralString.create(),((ClassCmdFormattedString*)context)->property_t,str39.value,-1);
  }
  else if ((local_9_which_2797 == 1))
  {
    return CallFn____Object(16,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_pieces))->property_data)->data))[0]))));
  }
  else if ((local_9_which_2797 == 2))
  {
    return CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__resolve(CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAdd.create(),((ClassCmdFormattedString*)context)->property_t,((ClassCmd*)((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_pieces))->property_data)->data))[0]))),ArrayList_of_Cmd__last(local_0_pieces)));
  }
  else
  {
    local_10_builder = CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList(type_ClassCmdUnresolvedNewObject.create(),((ClassCmdFormattedString*)context)->property_t,((ClassTypeManager*)sxc_singletons[7])->property_type_string_builder,CmdList__init__Cmd(type_ClassCmdList.create(),((ClassCmd*)((ClassCmd*)ArrayList_of_Object__remove__Int32(local_0_pieces,0)))));
    while ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_pieces))->property_count != 0))
    {
      local_10_builder = CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdFormattedString*)context)->property_t,local_10_builder,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdFormattedString*)context)->property_t,str968.value,CmdList__init__Cmd(type_ClassCmdList.create(),((ClassCmd*)((ClassCmd*)ArrayList_of_Object__remove__Int32(local_0_pieces,0))))));
    }
    local_10_builder = CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdFormattedString*)context)->property_t,local_10_builder,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdFormattedString*)context)->property_t,str993.value,NULL));
    return CallFn____Object(16,local_10_builder);
  }
}

static SlagObject* CmdFormattedString__split_around_next_marker__Token_String( SXCRef context, SXCRef local_0_split_t, SXCRef local_1_st )
{
  SlagInt32 local_2_i;
  SlagInt32 local_3_i2;
  SlagInt32 local_4_count;
  SlagInt32 local_5_decimals;
  SlagChar local_6_ch;

  local_2_i = String__index_of__Char_Int32(local_1_st,((SlagChar)36),0);
  while ((((local_2_i >= 0) && ((local_2_i+1) < (((SlagString*)local_1_st)->count))) && (((SlagInt32)String__get__Int32(local_1_st,(local_2_i+1))) == 36)))
  {
    local_1_st = String__opADD__String(((ClassString*)String__substring__Int32_Int32(local_1_st,0,(local_2_i-1))),String__substring__Int32(local_1_st,(local_2_i+1)));
    local_2_i = String__index_of__Char_Int32(local_1_st,((SlagChar)36),(local_2_i+1));
  }
  if ((local_2_i == -1))
  {
    return StringTriplet__init__String_String_String(type_ClassStringTriplet.create(),local_1_st,str39.value,str39.value);
  }
  if ((((local_2_i+1) >= (((SlagString*)local_1_st)->count)) || (((SlagInt32)String__get__Int32(local_1_st,(local_2_i+1))) != 40)))
  {
    return StringTriplet__init__String_String_String(type_ClassStringTriplet.create(),((ClassString*)String__substring__Int32_Int32(local_1_st,0,(local_2_i-1))),str251.value,String__substring__Int32(local_1_st,(local_2_i+1)));
  }
  else
  {
    local_3_i2 = (local_2_i+2);
    local_4_count = (((SlagString*)local_1_st)->count);
    local_5_decimals = 0;
    while ((local_3_i2 < local_4_count))
    {
      local_6_ch = String__get__Int32(local_1_st,local_3_i2);
      if ((((SlagInt32)local_6_ch) == 41))
      {
        return StringTriplet__init__String_String_String(type_ClassStringTriplet.create(),((ClassString*)String__substring__Int32_Int32(local_1_st,0,(local_2_i-1))),String__substring__Int32_Int32(local_1_st,local_2_i,local_3_i2),String__substring__Int32(local_1_st,(local_3_i2+1)));
      }
      if ((((SlagInt32)local_6_ch) == 46))
      {
        ++local_5_decimals;
        if ((local_5_decimals == 2))
        {
          SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_split_t,str1170.value)) );
        }
      }
      else if (!Global__is_digit__Char_Int32(sxc_singletons[21],local_6_ch,10))
      {
        SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_split_t,str1171.value)) );
      }
      ++local_3_i2;
    }
    SLAG_THROW( ((ClassSlagError*)SlagError__init__Token_String(type_ClassSlagError.create(),local_0_split_t,str1172.value)) );
  }
}

void CmdFormattedString__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdFormattedString__type_name( SXCRef context )
{
  return str684.value;
}

static SlagInt32 CoerceReader_of_Int32__available( SXCRef context )
{
  if (CallFn____Logical(14,((ClassCoerceReader_of_Int32*)context)->property_src))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* CoerceReader_of_Int32__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Int32__init__Int32(type_ClassArrayList_of_Int32.create(),CoerceReader_of_Int32__available(context));
  while (CallFn____Logical(14,((ClassCoerceReader_of_Int32*)context)->property_src))
  {
    ArrayList_of_Int32__add__Int32(local_0_result_list,CallFn____Int32(30,((ClassCoerceReader_of_Int32*)context)->property_src));
  }
  return local_0_result_list;
}

SlagObject* CoerceReader_of_Int32__to_String( SXCRef context )
{
  return ArrayList_of_Int32__to_String(CoerceReader_of_Int32__to_List(context));
}

static SlagObject* CoerceReader_of_Int32__init__Reader_of_Int32( SXCRef context, SXCRef local_0_src_6684 )
{
  sxc_write_ref( &(((ClassCoerceReader_of_Int32*)context)->property_src), local_0_src_6684 );
  return context;
}

static SlagLogical CoerceReader_of_Int32__has_another( SXCRef context )
{
  return CallFn____Logical(14,((ClassCoerceReader_of_Int32*)context)->property_src);
}

static SlagInt32 CoerceReader_of_Int32__read( SXCRef context )
{
  return CallFn____Int32(30,((ClassCoerceReader_of_Int32*)context)->property_src);
}

void CoerceReader_of_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CoerceReader_of_Int32__type_name( SXCRef context )
{
  return str461.value;
}

SlagObject* CompareFn_of_MethodInfo_and_a_of___init( SXCRef context )
{
  return context;
}

static SlagLogical CompareFn_of_MethodInfo_and_a_of___a_before_b__MethodInfo_MethodInfo( SXCRef context, SXCRef local_0_a, SXCRef local_1_b )
{
  return (Object__opCMP__Object(local_0_a,local_1_b) == -1);
}

void CompareFn_of_MethodInfo_and_a_of___init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CompareFn_of_MethodInfo_and_a_of___type_name( SXCRef context )
{
  return str1311.value;
}

SlagObject* Mapping_of_String_and_MethodInfo__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_MethodInfo*)context)->property_key),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_String_and_MethodInfo*)context)->property_value)));
}

void Mapping_of_String_and_MethodInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_MethodInfo__type_name( SXCRef context )
{
  return str983.value;
}

static SlagInt32 CoerceReader_of_Cmd__available( SXCRef context )
{
  if (CallFn____Logical(14,((ClassCoerceReader_of_Cmd*)context)->property_src))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* CoerceReader_of_Cmd__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Cmd__init__Int32(type_ClassArrayList_of_Cmd.create(),CoerceReader_of_Cmd__available(context));
  while (CallFn____Logical(14,((ClassCoerceReader_of_Cmd*)context)->property_src))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,((ClassCmd*)CallFn____Object(45,((ClassCoerceReader_of_Cmd*)context)->property_src)));
  }
  return local_0_result_list;
}

SlagObject* CoerceReader_of_Cmd__to_String( SXCRef context )
{
  return ArrayList_of_Cmd__to_String(CoerceReader_of_Cmd__to_List(context));
}

static SlagObject* CoerceReader_of_Cmd__init__Reader_of_Object( SXCRef context, SXCRef local_0_src_9650 )
{
  sxc_write_ref( &(((ClassCoerceReader_of_Cmd*)context)->property_src), local_0_src_9650 );
  return context;
}

static SlagLogical CoerceReader_of_Cmd__has_another( SXCRef context )
{
  return CallFn____Logical(14,((ClassCoerceReader_of_Cmd*)context)->property_src);
}

static SlagObject* CoerceReader_of_Cmd__read( SXCRef context )
{
  return ((ClassCmd*)CallFn____Object(45,((ClassCoerceReader_of_Cmd*)context)->property_src));
}

void CoerceReader_of_Cmd__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CoerceReader_of_Cmd__type_name( SXCRef context )
{
  return str1260.value;
}

SlagObject* Mapping_of_String_and_LocalVarInfo__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_LocalVarInfo*)context)->property_key),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_String_and_LocalVarInfo*)context)->property_value)));
}

void Mapping_of_String_and_LocalVarInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_LocalVarInfo__type_name( SXCRef context )
{
  return str1037.value;
}

SlagObject* ConcurrentModificationError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassConcurrentModificationError*)context)->property_message), str48.value );
  return context;
}

SlagObject* ConcurrentModificationError__init__String( SXCRef context, SXCRef local_0_message_4067 )
{
  sxc_write_ref( &(((ClassConcurrentModificationError*)context)->property_message), local_0_message_4067 );
  return context;
}

void ConcurrentModificationError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* ConcurrentModificationError__type_name( SXCRef context )
{
  return str50.value;
}

static SlagObject* CmdThisPropertyAddAndAssign__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1690.value),TypeInfo__x_name(((ClassPropertyInfo*)((ClassCmdThisPropertyAddAndAssign*)context)->property_var_info)->property_type_context)),str1730.value),PropertyInfo__x_name(((ClassCmdThisPropertyAddAndAssign*)context)->property_var_info)),str1721.value),CallFn____Object(15,((ClassCmdThisPropertyAddAndAssign*)context)->property_operand)));
}

static SlagObject* CmdThisPropertyAddAndAssign__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdThisPropertyAddAndAssign*)context)->property_var_info)),str1721.value),CallFn____Object(35,((ClassCmdThisPropertyAddAndAssign*)context)->property_operand)));
}

static SlagObject* CmdThisPropertyAddAndAssign__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),PropertyInfo__x_name(((ClassCmdThisPropertyAddAndAssign*)context)->property_var_info)),str1721.value),CallFn____Object(41,((ClassCmdThisPropertyAddAndAssign*)context)->property_operand)));
}

void CmdThisPropertyAddAndAssign__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdThisPropertyAddAndAssign__type_name( SXCRef context )
{
  return str1212.value;
}

static SlagObject* CmdCmpIsNull__create_duplicate( SXCRef context )
{
  return CmdUnary__init__Token_Cmd(type_ClassCmdCmpIsNull.create(),((ClassCmdCmpIsNull*)context)->property_t,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdCmpIsNull*)context)->property_operand));
}

static SlagObject* CmdCmpIsNull__type( SXCRef context )
{
  return ((ClassTypeManager*)sxc_singletons[7])->property_type_logical;
}

static SlagObject* CmdCmpIsNull__resolve( SXCRef context )
{
  return context;
}

static void CmdCmpIsNull__write_etc( SXCRef context )
{
  ETCWriter__writeX__Int32(sxc_singletons[13],((ClassCMD*)((ClassEnum_of_CMD*)sxc_singletons[5])->property_cmd_cmp_is_null)->property_ordinal);
  CallFn__(7,((ClassCmdCmpIsNull*)context)->property_operand);
}

static SlagObject* CmdCmpIsNull__to_cpp( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(15,((ClassCmdCmpIsNull*)context)->property_operand)),str1735.value));
}

static SlagObject* CmdCmpIsNull__to_cs( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(35,((ClassCmdCmpIsNull*)context)->property_operand)),str1958.value));
}

static SlagObject* CmdCmpIsNull__to_java( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str61.value),CallFn____Object(41,((ClassCmdCmpIsNull*)context)->property_operand)),str1958.value));
}

void CmdCmpIsNull__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdCmpIsNull__type_name( SXCRef context )
{
  return str1254.value;
}

static SlagObject* HashTableBin_of_Object_and_Int32__init__Int32( SXCRef context, SlagInt32 local_0_initial_capacity )
{
  sxc_write_ref( &(((ClassHashTableBin_of_Object_and_Int32*)context)->property_entries), ArrayList_of_Mapping_of_Object_and_Int32__init__Int32(type_ClassArrayList_of_Mapping_of_Object_and_Int32.create(),local_0_initial_capacity) );
  return context;
}

static SlagInt32 HashTableBin_of_Object_and_Int32__index_of_entry__Object( SXCRef context, SXCRef local_0_key )
{
  SlagInt32 local_1_index;
  SlagInt32 local_2__count4487;

  {
    local_1_index = 0;
    local_2__count4487 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Object_and_Int32*)context)->property_entries))->property_count;
    while ((local_1_index < local_2__count4487))
    {
      if (CallFn__Object__Logical(4,((ClassMapping_of_Object_and_Int32*)((ClassMapping_of_Object_and_Int32*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Object_and_Int32*)context)->property_entries))->property_data)->data))[local_1_index])))->property_key,local_0_key))
      {
        return local_1_index;
      }
      ++local_1_index;
    }
  }
  return -1;
}

static SlagObject* HashTableBin_of_Object_and_Int32__find_entry__Object( SXCRef context, SXCRef local_0_key )
{
  SlagInt32 local_1_index;

  local_1_index = HashTableBin_of_Object_and_Int32__index_of_entry__Object(context,local_0_key);
  if ((local_1_index == -1))
  {
    return NULL;
  }
  return ((ClassMapping_of_Object_and_Int32*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassHashTableBin_of_Object_and_Int32*)context)->property_entries))->property_data)->data))[local_1_index]));
}

static SlagLogical HashTableBin_of_Object_and_Int32__add_entry__Object_Int32( SXCRef context, SXCRef local_0_key, SlagInt32 local_1_value )
{
  SXCRef local_2_existing;

  local_2_existing = HashTableBin_of_Object_and_Int32__find_entry__Object(context,local_0_key);
  if ((local_2_existing == NULL))
  {
    ArrayList_of_Object__add__Object(((ClassHashTableBin_of_Object_and_Int32*)context)->property_entries,Mapping_of_Object_and_Int32__init__Object_Int32(type_ClassMapping_of_Object_and_Int32.create(),local_0_key,local_1_value));
    return true;
  }
  else
  {
    ((ClassMapping_of_Object_and_Int32*)local_2_existing)->property_value = local_1_value;
    return false;
  }
}

static SlagLogical HashTableBin_of_Object_and_Int32__add_entry__Mapping_of_Object_and_Int32( SXCRef context, SXCRef local_0_entry )
{
  SXCRef local_1_existing;

  local_1_existing = HashTableBin_of_Object_and_Int32__find_entry__Object(context,((ClassMapping_of_Object_and_Int32*)local_0_entry)->property_key);
  if ((local_1_existing == NULL))
  {
    ArrayList_of_Object__add__Object(((ClassHashTableBin_of_Object_and_Int32*)context)->property_entries,local_0_entry);
    return true;
  }
  else
  {
    ((ClassMapping_of_Object_and_Int32*)local_1_existing)->property_value = ((ClassMapping_of_Object_and_Int32*)local_0_entry)->property_value;
    return false;
  }
}

SlagObject* HashTableBin_of_Object_and_Int32__to_String( SXCRef context )
{
  SXCRef local_0_buffer;
  SXCRef local_1__reader4492;
  SXCRef local_2_entry;

  local_0_buffer = StringBuilder__init(type_ClassStringBuilder.create());
  local_1__reader4492 = ArrayList_of_Mapping_of_Object_and_Int32__create_reader(((ClassHashTableBin_of_Object_and_Int32*)context)->property_entries);
  while (ArrayReader_of_Mapping_of_Object_and_Int32__has_another(local_1__reader4492))
  {
    local_2_entry = ArrayReader_of_Mapping_of_Object_and_Int32__read(local_1__reader4492);
    StringBuilder__print__String(local_0_buffer,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str52.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_Object_and_Int32*)local_2_entry)->property_key)),str53.value),((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassMapping_of_Object_and_Int32*)local_2_entry)->property_value,10))),str54.value)));
  }
  return StringBuilder__to_String(local_0_buffer);
}

void HashTableBin_of_Object_and_Int32__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableBin_of_Object_and_Int32__type_name( SXCRef context )
{
  return str182.value;
}

SlagObject* InvalidOperandError__init( SXCRef context )
{
  sxc_write_ref( &(((ClassInvalidOperandError*)context)->property_message), str47.value );
  return context;
}

SlagObject* InvalidOperandError__init__String( SXCRef context, SXCRef local_0_var_name )
{
  sxc_write_ref( &(((ClassInvalidOperandError*)context)->property_message), StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str49.value),local_0_var_name),str38.value)) );
  return context;
}

static SlagObject* InvalidOperandError__init__String_String( SXCRef context, SXCRef local_0_var_name, SXCRef local_1_var_value )
{
  sxc_write_ref( &(((ClassInvalidOperandError*)context)->property_message), StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str29.value),local_1_var_value),str37.value),local_0_var_name),str38.value)) );
  return context;
}

void InvalidOperandError__init_object( SXCRef context )
{
  Exception__init_object(context);
}

SlagObject* InvalidOperandError__type_name( SXCRef context )
{
  return str23.value;
}

static SlagObject* CmdForEachIn__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList_Logical( SXCRef context, SXCRef local_0_t_7654, SlagInt32 local_1_id_7653, SXCRef local_2_var_info_7652, SXCRef local_3_control_7651, SXCRef local_4_body_7650, SlagLogical local_5_contains_remove_current_7649 )
{
  sxc_write_ref( &(((ClassCmdForEachIn*)context)->property_t), local_0_t_7654 );
  ((ClassCmdForEachIn*)context)->property_id = local_1_id_7653;
  sxc_write_ref( &(((ClassCmdForEachIn*)context)->property_var_info), local_2_var_info_7652 );
  sxc_write_ref( &(((ClassCmdForEachIn*)context)->property_control), local_3_control_7651 );
  sxc_write_ref( &(((ClassCmdForEachIn*)context)->property_body), local_4_body_7650 );
  ((ClassCmdForEachIn*)context)->property_contains_remove_current = local_5_contains_remove_current_7649;
  return context;
}

static SlagObject* CmdForEachIn__create_duplicate( SXCRef context )
{
  return CmdForEachIn__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList_Logical(type_ClassCmdForEachIn.create(),((ClassCmdForEachIn*)context)->property_t,((ClassCmdForEachIn*)context)->property_id,((ClassCmdForEachIn*)context)->property_var_info,ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdForEachIn*)context)->property_control),ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassCmdForEachIn*)context)->property_body),((ClassCmdForEachIn*)context)->property_contains_remove_current);
}

static SlagObject* CmdForEachIn__resolve( SXCRef context )
{
  SXCRef local_0_converted;
  SXCRef local_1_control_type;
  SXCRef local_2_read_type;
  SXCRef local_3_control_t;
  SXCRef local_4_code;
  SXCRef local_5_reader_name;
  SXCRef local_6_reader_construct;

  local_0_converted = CmdForEachIn__convert_to_while(context);
  if ((local_0_converted != NULL))
  {
    return local_0_converted;
  }
  if (((ClassCmdForEachIn*)context)->property_contains_remove_current)
  {
    return CmdForEachInWithRemoveCurrent__resolve(CmdForEach__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList(type_ClassCmdForEachInWithRemoveCurrent.create(),((ClassCmdForEachIn*)context)->property_t,((ClassCmdForEachIn*)context)->property_id,((ClassCmdForEachIn*)context)->property_var_info,((ClassCmdForEachIn*)context)->property_control,((ClassCmdForEachIn*)context)->property_body));
  }
  sxc_write_ref( &(((ClassCmdForEachIn*)context)->property_control), CallFn____Object(16,((ClassCmdForEachIn*)context)->property_control) );
  local_1_control_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdForEachIn*)context)->property_control);
  local_2_read_type = TypeInfo__reader_type(local_1_control_type);
  local_3_control_t = ((ClassCmd*)((ClassCmdForEachIn*)context)->property_control)->property_t;
  if (!(local_2_read_type != NULL))
  {
    sxc_write_ref( &(((ClassCmdForEachIn*)context)->property_control), CmdMemberAccess__resolve(CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),local_3_control_t,((ClassCmdForEachIn*)context)->property_control,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_3_control_t,str1065.value,NULL))) );
    local_1_control_type = SlagAnalyzer__require_value__Cmd(sxc_singletons[8],((ClassCmdForEachIn*)context)->property_control);
    TypeInfo__resolve(local_1_control_type);
    local_2_read_type = TypeInfo__reader_type(local_1_control_type);
    if (!(local_2_read_type != NULL))
    {
      SLAG_THROW( Cmd__error__String(((ClassCmdForEachIn*)context)->property_control,str1240.value) );
    }
  }
  local_4_code = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),local_3_control_t,4);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_4_code)->property_statements,CmdOpenScope__init__Token(type_ClassCmdOpenScope.create(),local_3_control_t));
  local_5_reader_name = String__opADD__String(str1241.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdForEachIn*)context)->property_id,10)));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_4_code)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),local_3_control_t,MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),local_3_control_t,((ClassContext*)sxc_singletons[10])->property_this_method,((ClassTypeManager*)sxc_singletons[7])->property_type_var,local_5_reader_name,-1),((ClassCmdForEachIn*)context)->property_control));
  sxc_write_ref( &(((ClassLocalVarInfo*)((ClassCmdForEachIn*)context)->property_var_info)->property_type), ((ClassTypeManager*)sxc_singletons[7])->property_type_var );
  local_6_reader_construct = CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdForEachIn*)context)->property_t,local_5_reader_name,NULL);
  ArrayList_of_Object__insert__Object_Int32(((ClassCmdStatementList*)((ClassCmdForEachIn*)context)->property_body)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),((ClassCmdForEachIn*)context)->property_t,((ClassCmdForEachIn*)context)->property_var_info,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdForEachIn*)context)->property_t,local_6_reader_construct,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_3_control_t,str1242.value,CmdList__init__Int32(type_ClassCmdList.create(),0)))),0);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_4_code)->property_statements,CmdWhile__init__Token_Int32_Cmd_CmdStatementList(type_ClassCmdWhile.create(),((ClassCmdForEachIn*)context)->property_t,((ClassCmdForEachIn*)context)->property_id,CmdMemberAccess__init__Token_Cmd_CmdConstruct(type_ClassCmdMemberAccess.create(),((ClassCmdForEachIn*)context)->property_t,local_6_reader_construct,CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),((ClassCmdForEachIn*)context)->property_t,str1243.value,CmdList__init__Int32(type_ClassCmdList.create(),0))),((ClassCmdForEachIn*)context)->property_body));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_4_code)->property_statements,CmdCloseScope__init__Token(type_ClassCmdCloseScope.create(),local_3_control_t));
  return CmdStatementList__resolve(local_4_code);
}

static SlagObject* CmdForEachIn__convert_to_while( SXCRef context )
{
  SXCRef local_0_range;
  SXCRef local_1_increment_type;
  SXCRef local_2_first_info;
  SXCRef local_3_last_var_name;
  SXCRef local_4_last_info;
  SXCRef local_5_result;
  SXCRef local_6_last_t;
  SXCRef local_7_lhs;
  SXCRef local_8_rhs;
  SXCRef local_9_condition;
  SXCRef local_10_incr_t;
  SXCRef local_11_modifier;

  if (!sxc_instance_of(((ClassCmdForEachIn*)context)->property_control,&type_ClassCmdRange))
  {
    return NULL;
  }
  if (((ClassCmdForEachIn*)context)->property_contains_remove_current)
  {
    SLAG_THROW( Cmd__error__String(context,str1227.value) );
  }
  local_0_range = ((ClassCmdForEachIn*)context)->property_control;
  local_1_increment_type = NULL;
  if ((((ClassCmdRange*)local_0_range)->property_increment != NULL))
  {
    sxc_write_ref( &(((ClassCmdRange*)local_0_range)->property_increment), CallFn____Object(16,((ClassCmdRange*)local_0_range)->property_increment) );
    if (!sxc_instance_of(((ClassCmdRange*)local_0_range)->property_increment,&type_ClassCmdLiteralInt32))
    {
      return NULL;
    }
    if (((((ClassCmdLiteralInt32*)((ClassCmdRange*)local_0_range)->property_increment)->property_value < 0) && sxc_instance_of(local_0_range,&type_ClassCmdRangeLE)))
    {
      local_0_range = CmdRange__init__Token_Cmd_Cmd_Cmd(type_ClassCmdRangeGE.create(),((ClassCmdRange*)local_0_range)->property_t,((ClassCmdRange*)local_0_range)->property_first,((ClassCmdRange*)local_0_range)->property_last,((ClassCmdRange*)local_0_range)->property_increment);
    }
  }
  else
  {
    if ((sxc_instance_of(local_0_range,&type_ClassCmdRangeLE) || sxc_instance_of(local_0_range,&type_ClassCmdRangeLT)))
    {
      sxc_write_ref( &(((ClassCmdRange*)local_0_range)->property_increment), CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdRange*)local_0_range)->property_t,1) );
    }
    else
    {
      sxc_write_ref( &(((ClassCmdRange*)local_0_range)->property_increment), CmdLiteralInt32__init__Token_Int32(type_ClassCmdLiteralInt32.create(),((ClassCmdRange*)local_0_range)->property_t,-1) );
    }
  }
  local_2_first_info = ((ClassCmdForEachIn*)context)->property_var_info;
  sxc_write_ref( &(((ClassLocalVarInfo*)local_2_first_info)->property_type), ((ClassTypeManager*)sxc_singletons[7])->property_type_var );
  local_3_last_var_name = String__opADD__String(str1228.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassCmdForEachIn*)context)->property_id,10)));
  local_4_last_info = MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32(type_ClassLocalVarInfo.create(),((ClassCmdForEachIn*)context)->property_t,((ClassContext*)sxc_singletons[10])->property_this_method,((ClassTypeManager*)sxc_singletons[7])->property_type_var,local_3_last_var_name,-1);
  local_5_result = CmdStatementList__init__Token_Int32(type_ClassCmdStatementList.create(),((ClassCmdForEachIn*)context)->property_t,(((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdStatementList*)((ClassCmdForEachIn*)context)->property_body)->property_statements))->property_count+5));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_5_result)->property_statements,CmdOpenScope__init__Token(type_ClassCmdOpenScope.create(),((ClassCmdForEachIn*)context)->property_t));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_5_result)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),((ClassCmdForEachIn*)context)->property_t,local_2_first_info,((ClassCmdRange*)local_0_range)->property_first));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_5_result)->property_statements,CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd(type_ClassCmdLocalVarDeclaration.create(),((ClassCmdForEachIn*)context)->property_t,local_4_last_info,((ClassCmdRange*)local_0_range)->property_last));
  local_6_last_t = ((ClassCmd*)((ClassCmdRange*)local_0_range)->property_last)->property_t;
  local_7_lhs = CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_6_last_t,((ClassLocalVarInfo*)((ClassCmdForEachIn*)context)->property_var_info)->property_name,NULL);
  local_8_rhs = CmdConstruct__init__Token_String_CmdList(type_ClassCmdConstruct.create(),local_6_last_t,local_3_last_var_name,NULL);
  local_9_condition = NULL;
  if (sxc_instance_of(local_0_range,&type_ClassCmdRangeLE))
  {
    local_9_condition = CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpLE.create(),local_6_last_t,local_7_lhs,local_8_rhs);
  }
  else if (sxc_instance_of(local_0_range,&type_ClassCmdRangeLT))
  {
    local_9_condition = CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpLT.create(),local_6_last_t,local_7_lhs,local_8_rhs);
  }
  else if (sxc_instance_of(local_0_range,&type_ClassCmdRangeGE))
  {
    local_9_condition = CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpGE.create(),local_6_last_t,local_7_lhs,local_8_rhs);
  }
  else if (sxc_instance_of(local_0_range,&type_ClassCmdRangeGT))
  {
    local_9_condition = CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdCmpGT.create(),local_6_last_t,local_7_lhs,local_8_rhs);
  }
  else
  {
    SLAG_THROW( Cmd__error__String(local_0_range,StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str1229.value),CallFn____Object(25,local_0_range)),str38.value))) );
  }
  local_10_incr_t = ((ClassCmd*)((ClassCmdRange*)local_0_range)->property_increment)->property_t;
  local_11_modifier = CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAssign.create(),local_10_incr_t,local_7_lhs,CmdBinary__init__Token_Cmd_Cmd(type_ClassCmdAdd.create(),local_10_incr_t,local_7_lhs,((ClassCmdRange*)local_0_range)->property_increment));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)((ClassCmdForEachIn*)context)->property_body)->property_statements,local_11_modifier);
  GenericHashTable_of_Int32_and_Object__set__Int32_Object(((ClassHashTable_of_Int32_and_Cmd*)((ClassContext*)sxc_singletons[10])->property_next_iteration_injections)->property_data,((ClassCmdForEachIn*)context)->property_id,local_11_modifier);
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_5_result)->property_statements,CmdWhile__init__Token_Int32_Cmd_CmdStatementList(type_ClassCmdWhile.create(),((ClassCmdForEachIn*)context)->property_t,((ClassCmdForEachIn*)context)->property_id,local_9_condition,((ClassCmdForEachIn*)context)->property_body));
  ArrayList_of_Object__add__Object(((ClassCmdStatementList*)local_5_result)->property_statements,CmdCloseScope__init__Token(type_ClassCmdCloseScope.create(),((ClassCmdForEachIn*)context)->property_t));
  return CmdStatementList__resolve(local_5_result);
}

void CmdForEachIn__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdForEachIn__type_name( SXCRef context )
{
  return str782.value;
}

static SlagInt32 SlagParserManager__unique_id( SXCRef context )
{
  SlagInt32 local_0_result;

  local_0_result = ((ClassSlagParserManager*)context)->property_next_unique_id;
  ++(((ClassSlagParserManager*)context)->property_next_unique_id);
  return local_0_result;
}

void SlagParserManager__init_object( SXCRef context )
{
  Object__init_object(context);
  ((ClassSlagParserManager*)context)->property_next_unique_id = 1;
  sxc_write_ref( &(((ClassSlagParserManager*)context)->property_value_2e63), BigInt__init__String_Int32(type_ClassBigInt.create(),str456.value,16) );
  sxc_write_ref( &(((ClassSlagParserManager*)context)->property_value_2e64), BigInt__init__String_Int32(type_ClassBigInt.create(),str457.value,16) );
  sxc_write_ref( &(((ClassSlagParserManager*)context)->property_delegate_types), HashTableBase_of_String_and_String_and_Object_and_Object__init(type_ClassHashSet_of_String.create()) );
}

SlagObject* SlagParserManager__type_name( SXCRef context )
{
  return str458.value;
}

static SlagObject* InlineClassPropertyDeclaration__init__TypeInfo_String_Cmd( SXCRef context, SXCRef local_0_of_type_7205, SXCRef local_1_id_7204, SXCRef local_2_expression_7203 )
{
  sxc_write_ref( &(((ClassInlineClassPropertyDeclaration*)context)->property_of_type), local_0_of_type_7205 );
  sxc_write_ref( &(((ClassInlineClassPropertyDeclaration*)context)->property_id), local_1_id_7204 );
  sxc_write_ref( &(((ClassInlineClassPropertyDeclaration*)context)->property_expression), local_2_expression_7203 );
  return context;
}

void InlineClassPropertyDeclaration__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* InlineClassPropertyDeclaration__type_name( SXCRef context )
{
  return str680.value;
}

static SlagInt32 HashTableMappingReader_of_Int32_and_Object__available( SXCRef context )
{
  if ((((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_entries != NULL))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

static SlagObject* HashTableMappingReader_of_Int32_and_Object__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_Mapping_of_Int32_and_Object__init__Int32(type_ClassArrayList_of_Mapping_of_Int32_and_Object.create(),HashTableMappingReader_of_Int32_and_Object__available(context));
  while ((((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_entries != NULL))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,HashTableMappingReader_of_Int32_and_Object__read(context));
  }
  return local_0_result_list;
}

SlagObject* HashTableMappingReader_of_Int32_and_Object__to_String( SXCRef context )
{
  return ArrayList_of_Mapping_of_Int32_and_Object__to_String(HashTableMappingReader_of_Int32_and_Object__to_List(context));
}

static SlagObject* HashTableMappingReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object( SXCRef context, SXCRef local_0_bins_5149 )
{
  sxc_write_ref( &(((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_bins), local_0_bins_5149 );
  if (CallFn____Logical(14,((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_bins))
  {
    sxc_write_ref( &(((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_entries), ArrayList_of_Mapping_of_Int32_and_Object__create_reader(((ClassHashTableBin_of_Int32_and_Object*)CallFn____Object(45,((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_bins))->property_entries) );
  }
  HashTableMappingReader_of_Int32_and_Object__prep_next(context);
  return context;
}

static void HashTableMappingReader_of_Int32_and_Object__prep_next( SXCRef context )
{
  if ((((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_entries == NULL))
  {
    return;
  }
  while (!CallFn____Logical(14,((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_entries))
  {
    if (CallFn____Logical(14,((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_bins))
    {
      sxc_write_ref( &(((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_entries), ArrayList_of_Mapping_of_Int32_and_Object__create_reader(((ClassHashTableBin_of_Int32_and_Object*)CallFn____Object(45,((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_bins))->property_entries) );
    }
    else
    {
      sxc_write_ref( &(((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_entries), NULL );
      return;
    }
  }
}

static SlagLogical HashTableMappingReader_of_Int32_and_Object__has_another( SXCRef context )
{
  return (((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_entries != NULL);
}

static SlagObject* HashTableMappingReader_of_Int32_and_Object__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = CallFn____Object(45,((ClassHashTableMappingReader_of_Int32_and_Object*)context)->property_entries);
  HashTableMappingReader_of_Int32_and_Object__prep_next(context);
  return local_0_result;
}

void HashTableMappingReader_of_Int32_and_Object__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* HashTableMappingReader_of_Int32_and_Object__type_name( SXCRef context )
{
  return str206.value;
}

static SlagObject* ArrayReader_of_StackTraceInfo__to_List( SXCRef context )
{
  SXCRef local_0_result_list;

  local_0_result_list = ArrayList_of_StackTraceInfo__init__Int32(type_ClassArrayList_of_StackTraceInfo.create(),ArrayReader_of_StackTraceInfo__remaining(context));
  while (ArrayReader_of_StackTraceInfo__has_another(context))
  {
    ArrayList_of_Object__add__Object(local_0_result_list,ArrayReader_of_StackTraceInfo__read(context));
  }
  return local_0_result_list;
}

SlagObject* ArrayReader_of_StackTraceInfo__to_String( SXCRef context )
{
  return ArrayList_of_StackTraceInfo__to_String(ArrayReader_of_StackTraceInfo__to_List(context));
}

static SlagObject* ArrayReader_of_StackTraceInfo__init__Collection_of_StackTraceInfo_Array_of_StackTraceInfo_Int32_Int32( SXCRef context, SXCRef local_0_collection_4230, SXCRef local_1_data_4229, SlagInt32 local_2_first_index, SlagInt32 local_3_count )
{
  sxc_write_ref( &(((ClassArrayReader_of_StackTraceInfo*)context)->property_collection), local_0_collection_4230 );
  sxc_write_ref( &(((ClassArrayReader_of_StackTraceInfo*)context)->property_data), local_1_data_4229 );
  ((ClassArrayReader_of_StackTraceInfo*)context)->property_counter = local_2_first_index;
  if ((local_3_count == -1))
  {
    local_3_count = CallFn____Int32(19,((ClassArrayReader_of_StackTraceInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_StackTraceInfo*)context)->property_last_exclusive = (local_2_first_index+local_3_count);
  if ((((ClassArrayReader_of_StackTraceInfo*)context)->property_last_exclusive > CallFn____Int32(19,((ClassArrayReader_of_StackTraceInfo*)context)->property_collection)))
  {
    ((ClassArrayReader_of_StackTraceInfo*)context)->property_last_exclusive = CallFn____Int32(19,((ClassArrayReader_of_StackTraceInfo*)context)->property_collection);
  }
  ((ClassArrayReader_of_StackTraceInfo*)context)->property_original_modification_count = CallFn____Int32(48,((ClassArrayReader_of_StackTraceInfo*)context)->property_collection);
  return context;
}

static SlagObject* ArrayReader_of_StackTraceInfo__create_duplicate( SXCRef context )
{
  return ArrayReader_of_StackTraceInfo__init__Collection_of_StackTraceInfo_Array_of_StackTraceInfo_Int32_Int32(type_ClassArrayReader_of_StackTraceInfo.create(),((ClassArrayReader_of_StackTraceInfo*)context)->property_collection,((ClassArrayReader_of_StackTraceInfo*)context)->property_data,((ClassArrayReader_of_StackTraceInfo*)context)->property_counter,(((ClassArrayReader_of_StackTraceInfo*)context)->property_last_exclusive-((ClassArrayReader_of_StackTraceInfo*)context)->property_counter));
}

static SlagLogical ArrayReader_of_StackTraceInfo__has_another( SXCRef context )
{
  if ((((ClassArrayReader_of_StackTraceInfo*)context)->property_counter < ((ClassArrayReader_of_StackTraceInfo*)context)->property_last_exclusive))
  {
    return true;
  }
  else
  {
    if ((((ClassArrayReader_of_StackTraceInfo*)context)->property_original_modification_count != CallFn____Int32(48,((ClassArrayReader_of_StackTraceInfo*)context)->property_collection)))
    {
      SLAG_THROW( ConcurrentModificationError__init(type_ClassConcurrentModificationError.create()) );
    }
    return false;
  }
}

static SlagInt32 ArrayReader_of_StackTraceInfo__remaining( SXCRef context )
{
  return (((ClassArrayReader_of_StackTraceInfo*)context)->property_last_exclusive-((ClassArrayReader_of_StackTraceInfo*)context)->property_counter);
}

static SlagObject* ArrayReader_of_StackTraceInfo__read( SXCRef context )
{
  SXCRef local_0_result;

  local_0_result = ((ClassStackTraceInfo**)(((SlagArray*)((ClassArrayReader_of_StackTraceInfo*)context)->property_data)->data))[((ClassArrayReader_of_StackTraceInfo*)context)->property_counter];
  ++(((ClassArrayReader_of_StackTraceInfo*)context)->property_counter);
  return local_0_result;
}

void ArrayReader_of_StackTraceInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ArrayReader_of_StackTraceInfo__type_name( SXCRef context )
{
  return str83.value;
}

SlagObject* Mapping_of_String_and_PropertyInfo__to_String( SXCRef context )
{
  return StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),((ClassMapping_of_String_and_PropertyInfo*)context)->property_key),str41.value),Global__to_String__Object(sxc_singletons[21],((ClassMapping_of_String_and_PropertyInfo*)context)->property_value)));
}

void Mapping_of_String_and_PropertyInfo__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* Mapping_of_String_and_PropertyInfo__type_name( SXCRef context )
{
  return str970.value;
}

static SlagObject* Enum_of_StructureType__prep__StructureType_String( SXCRef context, SXCRef local_0_category, SXCRef local_1_name )
{
  if ((((ClassEnum_of_StructureType*)context)->property_by_ordinal == NULL))
  {
    sxc_write_ref( &(((ClassEnum_of_StructureType*)context)->property_by_ordinal), ((ClassArrayList_of_StructureType*)ArrayList_of_StructureType__init__Int32(type_ClassArrayList_of_StructureType.create(),0)) );
    sxc_write_ref( &(((ClassEnum_of_StructureType*)context)->property_by_name), HashTableBase_of_String_and_StructureType_and_Object_and_Object__init(type_ClassHashTable_of_String_and_StructureType.create()) );
  }
  ((ClassStructureType*)local_0_category)->property_ordinal = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassEnum_of_StructureType*)context)->property_by_ordinal))->property_count;
  sxc_write_ref( &(((ClassStructureType*)local_0_category)->property_name), local_1_name );
  GenericHashTable_of_Object_and_Object__set__Object_Object(((ClassHashTable_of_String_and_StructureType*)((ClassEnum_of_StructureType*)context)->property_by_name)->property_data,local_1_name,local_0_category);
  ArrayList_of_Object__add__Object(((ClassEnum_of_StructureType*)context)->property_by_ordinal,local_0_category);
  return local_0_category;
}

void Enum_of_StructureType__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassEnum_of_StructureType*)context)->property_block_stmt), Enum_of_StructureType__prep__StructureType_String(context,StructureType__init(type_ClassStructureType.create()),str723.value) );
  sxc_write_ref( &(((ClassEnum_of_StructureType*)context)->property_if_stmt), Enum_of_StructureType__prep__StructureType_String(context,StructureType__init(type_ClassStructureType.create()),str728.value) );
  sxc_write_ref( &(((ClassEnum_of_StructureType*)context)->property_which_stmt), Enum_of_StructureType__prep__StructureType_String(context,StructureType__init(type_ClassStructureType.create()),str729.value) );
  sxc_write_ref( &(((ClassEnum_of_StructureType*)context)->property_whichis_stmt), Enum_of_StructureType__prep__StructureType_String(context,StructureType__init(type_ClassStructureType.create()),str730.value) );
  sxc_write_ref( &(((ClassEnum_of_StructureType*)context)->property_contingent_stmt), Enum_of_StructureType__prep__StructureType_String(context,StructureType__init(type_ClassStructureType.create()),str731.value) );
  sxc_write_ref( &(((ClassEnum_of_StructureType*)context)->property_try_stmt), Enum_of_StructureType__prep__StructureType_String(context,StructureType__init(type_ClassStructureType.create()),str732.value) );
  sxc_write_ref( &(((ClassEnum_of_StructureType*)context)->property_forEach_stmt), Enum_of_StructureType__prep__StructureType_String(context,StructureType__init__Logical(type_ClassStructureType.create(),true),str733.value) );
  sxc_write_ref( &(((ClassEnum_of_StructureType*)context)->property_while_stmt), Enum_of_StructureType__prep__StructureType_String(context,StructureType__init__Logical(type_ClassStructureType.create(),true),str734.value) );
  sxc_write_ref( &(((ClassEnum_of_StructureType*)context)->property_loop_stmt), Enum_of_StructureType__prep__StructureType_String(context,StructureType__init__Logical(type_ClassStructureType.create(),true),str735.value) );
}

SlagObject* Enum_of_StructureType__type_name( SXCRef context )
{
  return str736.value;
}

void ParsePosManager__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* ParsePosManager__type_name( SXCRef context )
{
  return str191.value;
}

static SlagLogical Errors__add__SlagError( SXCRef context, SXCRef local_0_err )
{
  ArrayList_of_Object__add__Object(((ClassErrors*)context)->property_errors,local_0_err);
  return (((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassErrors*)context)->property_errors))->property_count >= 10);
}

static void Errors__print( SXCRef context )
{
  SXCRef local_0_work_list;
  SXCRef local_1_filename;
  SlagInt32 local_2_survivors;
  SlagLogical local_3_first;
  SXCRef local_4__reader2334;
  SXCRef local_5_err;
  SXCRef local_6_err_filename;
  SlagInt32 local_7__local_2338;
  SlagInt32 local_8__last2339;
  SXCRef local_9_fname;
  SlagInt32 local_10__local_2341;
  SlagInt32 local_11__last2342;
  SlagInt32 local_12__local_2343;
  SlagInt32 local_13__last2344;
  SlagInt32 local_14__local_2345;
  SlagInt32 local_15__last2346;

  if ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassErrors*)context)->property_errors))->property_count == 0))
  {
    return;
  }
  Global__print__String(sxc_singletons[21],str46.value);
  local_0_work_list = ObjectManager__create_duplicate__Object(sxc_singletons[34],((ClassErrors*)context)->property_errors);
  while ((((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_work_list))->property_count != 0))
  {
    local_1_filename = ((ClassSlagError*)((ClassSlagError*)((ClassSlagError*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_work_list))->property_data)->data))[0]))))->property_filename;
    if ((local_1_filename == NULL))
    {
      local_1_filename = str477.value;
    }
    local_2_survivors = 0;
    local_3_first = true;
    local_4__reader2334 = ArrayList_of_SlagError__create_reader(local_0_work_list);
    while (ArrayReader_of_SlagError__has_another(local_4__reader2334))
    {
      local_5_err = ArrayReader_of_SlagError__read(local_4__reader2334);
      local_6_err_filename = ((ClassSlagError*)local_5_err)->property_filename;
      if ((local_6_err_filename == NULL))
      {
        local_6_err_filename = str477.value;
      }
      if (String__opEQ__String(local_6_err_filename,local_1_filename))
      {
        if (local_3_first)
        {
          local_3_first = false;
          local_7__local_2338 = 1;
          local_8__last2339 = 13;
          while ((local_7__local_2338 <= local_8__last2339))
          {
            Global__print__String(sxc_singletons[21],str2029.value);
            ++local_7__local_2338;
          }
          local_9_fname = local_1_filename;
          if ((((SlagInt32)String__get__Int32(local_9_fname,0)) == 91))
          {
            Global__println__String(sxc_singletons[21],String__opADD__String(str46.value,local_9_fname));
          }
          else
          {
            Global__println__String(sxc_singletons[21],StringBuilder__to_String(StringBuilder__add__String(StringBuilder__add__String(StringBuilder__init__String(type_ClassStringBuilder.create(),str2030.value),local_9_fname),str196.value)));
          }
          local_10__local_2341 = 1;
          local_11__last2342 = 13;
          while ((local_10__local_2341 <= local_11__last2342))
          {
            Global__print__String(sxc_singletons[21],str2029.value);
            ++local_10__local_2341;
          }
          Global__print__String(sxc_singletons[21],str46.value);
        }
        else
        {
          local_12__local_2343 = 1;
          local_13__last2344 = 13;
          while ((local_12__local_2343 <= local_13__last2344))
          {
            Global__print__String(sxc_singletons[21],str2031.value);
            ++local_12__local_2343;
          }
          Global__println__String(sxc_singletons[21],str46.value);
        }
        Global__print__Object(sxc_singletons[21],local_5_err);
      }
      else
      {
        sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)local_0_work_list))->property_data)->data))+local_2_survivors, local_5_err );
        ++local_2_survivors;
      }
    }
    ArrayList_of_SlagError__discard_from__Int32(local_0_work_list,local_2_survivors);
  }
  local_14__local_2345 = 1;
  local_15__last2346 = 13;
  while ((local_14__local_2345 <= local_15__last2346))
  {
    Global__print__String(sxc_singletons[21],str2032.value);
    ++local_14__local_2345;
  }
  Global__println__String(sxc_singletons[21],String__opADD__String(str2033.value,((ClassString*)Global__to_String__Int32_Int32(sxc_singletons[21],((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassErrors*)context)->property_errors))->property_count,10))));
}

void Errors__init_object( SXCRef context )
{
  Object__init_object(context);
  sxc_write_ref( &(((ClassErrors*)context)->property_errors), ArrayList_of_SlagError__init(type_ClassArrayList_of_SlagError.create()) );
}

SlagObject* Errors__type_name( SXCRef context )
{
  return str914.value;
}

static SlagObject* CmdImplicitListLiteral__init__Token_ArrayList_of_Cmd( SXCRef context, SXCRef local_0_t_7180, SXCRef local_1_args_7179 )
{
  sxc_write_ref( &(((ClassCmdImplicitListLiteral*)context)->property_t), local_0_t_7180 );
  sxc_write_ref( &(((ClassCmdImplicitListLiteral*)context)->property_args), local_1_args_7179 );
  return context;
}

static SlagObject* CmdImplicitListLiteral__create_duplicate( SXCRef context )
{
  SXCRef local_0_args2;
  SXCRef local_1__reader2771;
  SXCRef local_2_arg;

  local_0_args2 = ArrayList_of_Cmd__init__Int32(type_ClassArrayList_of_Cmd.create(),((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdImplicitListLiteral*)context)->property_args))->property_count);
  local_1__reader2771 = ArrayList_of_Cmd__create_reader(((ClassCmdImplicitListLiteral*)context)->property_args);
  while (CallFn____Logical(14,local_1__reader2771))
  {
    local_2_arg = CallFn____Object(45,local_1__reader2771);
    ArrayList_of_Object__add__Object(local_0_args2,ObjectManager__create_duplicate__Object(sxc_singletons[34],local_2_arg));
  }
  return CmdImplicitListLiteral__init__Token_ArrayList_of_Cmd(type_ClassCmdImplicitListLiteral.create(),((ClassCmdImplicitListLiteral*)context)->property_t,local_0_args2);
}

static SlagObject* CmdImplicitListLiteral__resolve( SXCRef context )
{
  SlagInt32 local_0_index;
  SlagInt32 local_1__count2772;
  SXCRef local_2_common_type;

  {
    local_0_index = 0;
    local_1__count2772 = ((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdImplicitListLiteral*)context)->property_args))->property_count;
    while ((local_0_index < local_1__count2772))
    {
      sxc_write_ref( ((SlagObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdImplicitListLiteral*)context)->property_args))->property_data)->data))+local_0_index, CallFn____Object(16,((ClassCmd*)((ClassObject*)((ClassObject**)(((SlagArray*)((ClassArrayList_of_Object*)((ClassArrayList_of_Object*)((ClassCmdImplicitListLiteral*)context)->property_args))->property_data)->data))[local_0_index]))) );
      ++local_0_index;
    }
  }
  local_2_common_type = SlagAnalyzer__find_common_element_type__Token_ArrayList_of_Cmd(sxc_singletons[8],((ClassCmdImplicitListLiteral*)context)->property_t,((ClassCmdImplicitListLiteral*)context)->property_args);
  if ((local_2_common_type == NULL))
  {
    SLAG_THROW( Cmd__error__String(context,str1163.value) );
  }
  return CmdExplicitListLiteral__resolve(CmdExplicitListLiteral__init__Token_TypeInfo_ArrayList_of_Cmd(type_ClassCmdExplicitListLiteral.create(),((ClassCmdImplicitListLiteral*)context)->property_t,local_2_common_type,((ClassCmdImplicitListLiteral*)context)->property_args));
}

void CmdImplicitListLiteral__init_object( SXCRef context )
{
  Object__init_object(context);
}

SlagObject* CmdImplicitListLiteral__type_name( SXCRef context )
{
  return str676.value;
}


int sxc_base_type_index_table[] =
{
  0,2,3,2,7,7,2,11,7,12,3,2,2,2,15,2,
  15,16,2,15,16,17,2,2,19,7,21,22,7,23,21,22,
  7,23,24,2,21,22,7,23,24,25,2,19,7,21,30,7,
  31,21,30,7,31,32,2,21,30,7,31,32,33,2,7,2,
  7,36,2,7,36,37,2,7,36,37,38,2,19,2,2,19,
  7,21,44,7,45,21,44,7,45,46,2,21,44,7,45,46,
  47,2,15,2,50,51,2,19,7,21,54,7,55,21,54,7,
  55,56,2,21,54,7,55,56,57,2,19,7,21,60,7,61,
  21,60,7,61,62,2,21,60,7,61,62,63,2,19,7,21,
  66,7,67,21,66,7,67,68,2,21,66,7,67,68,69,2,
  19,7,21,72,7,73,21,72,7,73,74,2,21,72,7,73,
  74,75,2,19,7,21,78,7,79,21,78,7,79,80,2,21,
  78,7,79,80,81,2,7,73,2,7,73,83,2,7,67,2,
  7,67,85,2,19,7,21,88,7,89,21,88,7,89,90,2,
  21,88,7,89,90,91,2,2,19,7,21,95,7,96,21,95,
  7,96,97,2,21,95,7,96,97,98,7,2,7,100,2,7,
  100,101,7,100,2,7,100,101,102,103,2,2,19,7,21,107,
  7,108,21,107,7,108,109,2,21,107,7,108,109,110,2,2,
  2,113,2,113,114,2,15,2,15,116,2,15,16,2,7,7,
  21,122,7,123,21,122,7,123,124,2,19,0,2,0,128,7,
  21,130,7,131,2,7,108,2,7,108,133,2,21,44,7,45,
  46,47,48,2,15,2,15,136,0,2,0,138,2,15,16,2,
  15,16,140,7,21,142,7,143,21,142,7,143,144,2,19,0,
  2,0,147,2,19,7,21,151,7,152,21,151,7,152,153,2,
  21,151,7,152,153,154,2,156,2,156,157,2,15,2,15,2,
  15,160,2,19,7,21,163,7,164,21,163,7,164,165,2,21,
  163,7,164,165,166,2,7,2,7,169,2,19,7,21,172,7,
  173,21,172,7,173,174,2,21,172,7,173,174,175,2,2,7,
  169,2,7,169,178,2,19,21,118,7,100,181,21,118,7,100,
  181,182,2,21,118,7,100,181,182,183,2,0,2,0,186,2,
  15,2,15,188,2,15,160,2,19,0,2,0,193,2,19,0,
  2,0,0,0,2,0,200,2,7,21,204,7,205,21,204,7,
  205,206,2,19,7,21,209,7,210,21,209,7,210,211,2,21,
  209,7,210,211,212,2,7,210,2,7,210,214,2,216,2,218,
  2,0,2,2,222,2,2,224,2,19,7,21,227,7,228,21,
  227,7,228,229,2,21,227,7,228,229,230,2,113,2,15,2,
  15,233,2,15,233,234,0,2,0,236,7,2,7,238,2,19,
  2,21,122,7,123,124,125,2,15,116,2,15,188,2,15,188,
  245,2,15,233,2,15,233,247,7,21,28,7,249,7,21,251,
  7,252,2,15,16,2,19,21,11,7,12,256,21,11,7,12,
  256,257,2,21,11,7,12,256,257,258,7,2,19,7,21,262,
  7,263,21,262,7,263,264,2,21,262,7,263,264,265,2,15,
  2,15,16,2,15,16,268,7,7,21,271,7,272,6,21,271,
  7,272,6,273,2,21,271,7,272,6,273,274,2,2,2,277,
  2,277,278,2,19,2,15,188,2,15,2,15,283,2,15,283,
  284,7,21,286,7,287,21,286,7,287,288,2,15,188,2,15,
  2,15,291,2,15,2,19,7,21,295,7,296,21,295,7,296,
  297,2,21,295,7,296,297,298,2,2,15,16,268,2,15,16,
  268,301,0,0,2,0,193,2,15,293,2,15,293,307,0,7,
  7,2,21,142,7,143,144,145,2,0,7,2,7,315,2,7,
  315,316,2,0,314,2,0,314,318,2,15,233,2,15,233,320,
  2,7,61,2,7,61,322,7,2,7,324,2,7,324,325,2,
  7,143,2,7,143,327,2,7,238,239,2,19,21,331,7,238,
  21,331,7,238,332,2,21,331,7,238,332,333,2,7,100,2,
  2,19,2,7,21,127,7,339,21,127,7,339,340,2,15,160,
  2,15,160,342,2,15,291,2,15,16,2,0,305,2,7,0,
  2,0,350,7,2,7,352,2,15,293,2,19,21,130,7,131,
  132,2,21,130,7,131,132,356,2,2,277,278,2,15,16,268,
  0,2,0,361,2,15,16,2,277,278,2,7,169,170,2,19,
  2,21,286,7,287,288,289,0,0,2,0,200,2,277,278,2,
  15,16,268,2,21,127,7,339,340,341,2,15,136,2,15,136,
  374,2,0,2,19,0,2,0,380,2,19,2,19,21,243,7,
  260,21,243,7,260,384,2,21,243,7,260,384,385,2,19,2,
  2,0,368,2,2,15,160,2,19,21,303,7,310,21,303,7,
  310,394,2,21,303,7,310,394,395,2,0,314,21,251,7,252,
  253,2,15,283,2,15,283,399,0,2,0,401,2,2,2,405,
  2,15,2,15,16,2,15,233,2,15,160,2,15,188,245,2,
  15,160,342,2,19,2,0,305,2,15,2,0,193,21,28,7,
  249,250,2,19,7,21,149,7,420,21,149,7,420,421,2,21,
  149,7,420,421,422,2,21,425,7,8,426,21,425,7,8,426,
  427,2,21,425,7,8,426,427,428,2,15,0,2,0,431,21,
  192,7,169,433,21,192,7,169,433,434,2,7,169,2,7,169,
  170,365,437,2,21,204,7,205,206,207,2,2,7,45,2,7,
  45,441,2,21,192,7,169,433,434,435,2,2,19,2,2,0,
  2,0,448,2,15,16,408,2,2,15,293,2,15,293,452,0,
  7,2,7,455,2,7,455,456,2,15,16,2,15,16,458,2,
  156,2,2,7,100,2,7,100,462,2,0,2,0,465,7,21,
  467,7,468,21,203,7,349,7,21,379,7,471,21,379,7,471,
  472,2,277,278,2,2,15,16,2,0,431,2,0,2,15,116,
  2,15,293,2,7,12,482,2,2,0,236,2,19,0,2,0,
  487,2,15,160,2,2,15,16,476,21,467,7,468,469,2,15,
  160,2,15,233,2,15,233,494,2,15,188,245,2,15,16,268,
  269,2,498,2,21,379,7,471,472,473,2,15,116,2,15,160,
  2,15,2,15,188,245,2,15,160,342,2,15,293,2,2,0,
  199,2,2,511,2,15,233,2,277,278,2,15,2,277,278,2,
  15,160,342,2,2,15,2,15,16,268,2,222,223,2,15,2,
  0,196,2,2,15,16,2,7,121,2,7,121,527,21,387,7,
  270,21,387,7,270,529,2,21,387,7,270,529,530,0,2,0,
  533,2,0,377,21,518,7,352,2,15,188,2,0,533,2,0,
  377,535,2,2,15,267,2,15,267,2,15,116,117,2,15,2,
  156,157,511,0,2,0,546,2,0,200,21,549,7,311,21,549,
  7,311,550,2,2,0,1,2,15,233,2,15,233,554,2,7,
  311,2,7,311,556,21,11,7,12,256,257,2,156,157,21,11,
  7,12,256,257,558,2,0,314,2,0,314,318,2,15,293,2,
  15,116,2,15,16,2,15,116,2,2,2,2,15,188,245,2,
  15,160,342,2,2,15,293,2,277,278,2,2,21,549,7,311,
  550,551,2,0,533,2,15,136,374,2,15,233,2,15,16,254,
  2,15,2,21,251,7,252,253,398,2,15,16,119,21,518,7,
  352,536,2,2,0,309,2,0,196,524,0,2,0,588,2,15,
  293,572,2,15,116,2,15,16,268,2,15,16,268,592,2,424,
  2,2,15,160,2,15,160,596,2,15,283,284,2,15,233,2,
  15,233,599,2,15,116,2,15,233,2,15,233,602,2,0,465,
  2,2,2,15,2,277,278,2,0,193,2,15,2,15,233,2,
  15,233,611,2,15,16,268,521,0,2,0,614,2,15,233,2,
  15,233,616,2,2,0,533,2,19,2,15,160,2,7,352,353,
  2,277,278,2,0,487,488,2,2,15,2,15,188,245,2,15,
  160,342,2,2,0,369,2,277,278,279,2,113,114,2,15,283,
  284,285,2,15,233,599,2,2,2,2,277,278,359,2,15,188,
  245,2,15,2,277,278,2,15,16,268,0,2,0,644,2,0,
  2,15,160,342,2,15,283,399,2,2,15,16,2,2,2,277,
  278,2,15,2,15,116,117,2,15,293,2,15,293,657,2,7,
  169,573,2,7,169,573,659,2,15,16,268,2,0,361,2,15,
  160,2,15,293,2,15,160,596,2,19,2,2,15,16,21,203,
  7,349,470,2,15,2,15,16,2,15,2,15,16,2,15,16,
  673,2,2,15,581,2,0,309,2,0,193,2,218,2,2,2,
  15,16,526,2,0,369,2,0,647,2,15,16,345,2,0,304,
  0,2,0,687,2,0,236,485,2,21,518,7,352,536,584,2,
  15,16,268,661,2,15,160,2,15,16,651,2,498,2,2,2,
  15,293,2,2,2,15,291,2,15,233,2,15,233,702,2,15,
  16,268,360,2,0,533,577,2,0,533,511,2,15,16,564,2,
  277,278,2,277,278,2,0,193,2,0,198,2,15,283,284,285,
  2,0,465,2,2,0,644,2,2,15,291,2,21,28,7,249,
  250,418,2,15,2,0,454,2,2,2,21,203,7,349,470,669,
  2,21,467,7,468,469,492,2,2,15,160,489,2,15,16,476,
  491,2,0,479,2,2,15,2,0,193,2,498,2,2,0,377,
  2,2,277,278,2,15,233,409,2,15,160,2,2,277,278,2,
  15,116,117,2,2,15,2,0,199,2,0,221,2,2,218,2,
  2,2,15
};

void* sxc_method_pointers[] =
{
  (void*) Object__init,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) Object__create_duplicate,
  (void*) Object__to_String,
  (void*) Object__opEQ__Object,
  (void*) Object__opCMP__Object,
  (void*) Object__type_name,
  (void*) Object__init_object,
  (void*)(SlagObject*(*)(SXCRef)) WeakReference__object,
  (void*) WeakReference__to_String,
  (void*) WeakReference__init_object,
  (void*) WeakReference__type_name,
  (void*) Weak_of_SignalListener__to_String,
  (void*) Weak_of_SignalListener__init_object,
  (void*) Weak_of_SignalListener__type_name,
  NULL,
  NULL,
  (void*) String__last,
  (void*) String__index_of__Char_Int32,
  (void*) String__last_index_of__Char_Int32,
  (void*) String__init,
  (void*)(SlagInt32(*)(SXCRef)) String__count,
  (void*)(SlagInt32(*)(SXCRef)) String__hash_code,
  (void*)(SlagChar(*)(SXCRef,SlagInt32)) String__get__Int32,
  (void*) String__consolidate,
  (void*) String__to_String,
  (void*) String__modification_count,
  (void*) String__create_duplicate,
  (void*) String__opEQ__Object,
  (void*)(SlagLogical(*)(SXCRef,SXCRef)) String__opEQ__String,
  (void*)(SlagInt32(*)(SXCRef,SXCRef)) String__opCMP__String,
  (void*)(SlagObject*(*)(SXCRef,SXCRef)) String__opADD__String,
  (void*)(SlagObject*(*)(SXCRef,SlagChar)) String__opADD__Char,
  (void*)(SlagObject*(*)(SXCRef,SlagInt32,SlagInt32)) String__substring__Int32_Int32,
  (void*) String__substring__Int32,
  (void*) String__reversed,
  (void*) String__index_of__String_Int32,
  (void*) String__last_index_of__String_Int32,
  (void*) String__begins_with__Char,
  (void*) String__ends_with__String,
  (void*) String__ends_with__Char,
  (void*) String__replace__String_String,
  (void*) String__rightmost__Int32,
  (void*) String__excluding_rightmost__Int32,
  (void*) String__before_first__Char,
  (void*) String__after_last__Char,
  (void*) String__after_first__Char,
  (void*) String__from_first__Char,
  (void*) String__before_first__String,
  (void*) String__before_last__String,
  (void*) String__after_first__String,
  (void*) String__to_uppercase,
  (void*) String__to_lowercase,
  (void*) String__split__Char,
  (void*) String__trim,
  (void*) String__word_wrap__Int32,
  (void*) String__to_utf8,
  (void*)(SlagObject*(*)(SXCRef)) String__to_Array,
  (void*) String__x_compatible,
  (void*) String__init_object,
  (void*) String__type_name,
  (void*) Token__init__Int32_String_ParsePos_String,
  (void*) Token__create_duplicate,
  (void*) Token__to_String,
  (void*) Token__init_object,
  (void*) Token__type_name,
  (void*) Cmd__init__Token,
  (void*) Cmd__type,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__error__String,
  (void*) Cmd__to_String,
  (void*) Cmd__finalize_calls,
  (void*) Cmd__finalize_structure_info,
  (void*) Cmd__group_dynamic_methods,
  (void*) Cmd__resolve,
  (void*) Cmd__optimize,
  (void*) Cmd__to_inline__CmdList,
  (void*) Cmd__no_side_effects,
  (void*) Cmd__write_etc,
  (void*) Cmd__to_cpp,
  (void*) Cmd__statement_to_cpp,
  (void*) Cmd__to_cs,
  (void*) Cmd__statement_to_cs,
  (void*) Cmd__to_java,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__init_object,
  (void*) Cmd__type_name,
  (void*) CmdBinary__init__Token_Cmd_Cmd,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_String,
  (void*) CmdBinary__finalize_calls,
  (void*) CmdBinary__finalize_structure_info,
  (void*) CmdBinary__group_dynamic_methods,
  (void*) CmdBinary__to_inline__CmdList,
  (void*) CmdBinary__init_object,
  (void*) CmdBinary__type_name,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__create_duplicate,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__resolve,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__optimize,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__write_etc,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__init_object,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__type_name,
  (void*) CmdLeftShifted__to_cpp,
  (void*) CmdLeftShifted__to_cs,
  (void*) CmdLeftShifted__to_java,
  (void*) CmdLeftShifted__init_object,
  (void*) CmdLeftShifted__type_name,
  (void*)(SlagInt32(*)(SXCRef)) GenericArray__count,
  (void*)(void(*)(SXCRef,SXCRef,SlagInt32,SlagInt32,SlagInt32)) GenericArray__copy_from__GenericArray_Int32_Int32_Int32,
  (void*)(void(*)(SXCRef,SlagInt32,SlagInt32)) GenericArray__clear__Int32_Int32,
  (void*) GenericArray__init_object,
  (void*) GenericArray__type_name,
  (void*) Array_of_BigInt__create_duplicate,
  (void*) Array_of_BigInt__init_object,
  (void*) Array_of_BigInt__type_name,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_BigInt__to_String,
  (void*) ArrayList_of_BigInt__init,
  (void*) ArrayList_of_BigInt__init__Int32,
  (void*) ArrayList_of_BigInt__ensure_count__Int32,
  (void*) ArrayList_of_BigInt__add__BigInt,
  (void*) ArrayList_of_BigInt__create_duplicate,
  (void*) ArrayList_of_BigInt__clear,
  (void*) ArrayList_of_BigInt__init_object,
  (void*) ArrayList_of_BigInt__type_name,
  NULL,
  NULL,
  (void*) Array_of_HashTableBin_of_Object_and_Object__create_duplicate,
  (void*) Array_of_HashTableBin_of_Object_and_Object__init_object,
  (void*) Array_of_HashTableBin_of_Object_and_Object__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__to_String,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__init,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__init__Int32,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__create_reader,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__count,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__modification_count,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__ensure_count__Int32,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__add__HashTableBin_of_Object_and_Object,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__create_duplicate,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__clear,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__init_object,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__type_name,
  (void*) GenericHashTable_of_Object_and_Object__init,
  (void*) GenericHashTable_of_Object_and_Object__init__Int32_Real64,
  (void*) GenericHashTable_of_Object_and_Object__set__Object_Object,
  (void*) GenericHashTable_of_Object_and_Object__set__Mapping_of_Object_and_Object,
  (void*) GenericHashTable_of_Object_and_Object__get__Object,
  (void*) GenericHashTable_of_Object_and_Object__find__Object,
  (void*) GenericHashTable_of_Object_and_Object__contains__Object,
  (void*) GenericHashTable_of_Object_and_Object__remove__Object,
  (void*) GenericHashTable_of_Object_and_Object__get_bin__Object,
  (void*) GenericHashTable_of_Object_and_Object__add__GenericHashTable_of_Object_and_Object,
  (void*) GenericHashTable_of_Object_and_Object__expand_table,
  (void*) GenericHashTable_of_Object_and_Object__to_String,
  (void*) GenericHashTable_of_Object_and_Object__values,
  (void*) GenericHashTable_of_Object_and_Object__init_object,
  (void*) GenericHashTable_of_Object_and_Object__type_name,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_MethodInfo____init_object,
  (void*) HashTable_of_String_and_MethodInfo____type_name,
  (void*) MethodTable__get__String,
  (void*) MethodTable__add__String_MethodInfo,
  (void*) MethodTable__init_object,
  (void*) MethodTable__type_name,
  (void*) Array_of_Int64__create_duplicate,
  (void*) Array_of_Int64__init_object,
  (void*) Array_of_Int64__type_name,
  (void*)(void(*)(SXCRef,SlagInt32,SXCRef)) System__exit_program__Int32_String,
  (void*) System__stack_trace,
  (void*)(SlagObject*(*)(SXCRef,SXCRef)) System__get__String,
  (void*)(SlagObject*(*)(SXCRef)) System__os,
  (void*)(SlagObject*(*)(SXCRef)) System__raw_exe_filepath,
  (void*) System__exe_filepath,
  (void*) System__init_object,
  (void*) System__type_name,
  (void*) Array_of_Cmd__create_duplicate,
  (void*) Array_of_Cmd__init_object,
  (void*) Array_of_Cmd__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_Cmd__last,
  (void*) ArrayList_of_Cmd__add__Readable_of_Cmd,
  (void*) ArrayList_of_Cmd__format__String_String_String,
  (void*) ArrayList_of_Cmd__format__String_String,
  (void*) ArrayList_of_Cmd__subset__Int32_Int32,
  (void*) ArrayList_of_Cmd__to_String,
  (void*) ArrayList_of_Cmd__init,
  (void*) ArrayList_of_Cmd__init__Int32,
  (void*) ArrayList_of_Cmd__create_reader,
  (void*) ArrayList_of_Cmd__from__Int32,
  (void*) ArrayList_of_Cmd__reverse_order,
  (void*) ArrayList_of_Cmd__count,
  (void*) ArrayList_of_Cmd__modification_count,
  (void*) ArrayList_of_Cmd__ensure_count__Int32,
  (void*) ArrayList_of_Cmd__add__Cmd,
  (void*) ArrayList_of_Cmd__create_duplicate,
  (void*) ArrayList_of_Cmd__clear,
  (void*) ArrayList_of_Cmd__init_object,
  (void*) ArrayList_of_Cmd__type_name,
  (void*) CmdStatementList__init__Token_Int32,
  (void*) CmdStatementList__init__Cmd,
  (void*) CmdStatementList__create_duplicate,
  (void*) CmdStatementList__is_statement_list,
  (void*) CmdStatementList__trim_to_count,
  (void*) CmdStatementList__to_String,
  (void*) CmdStatementList__resolve,
  (void*) CmdStatementList__finalize_calls,
  (void*) CmdStatementList__finalize_structure_info,
  (void*) CmdStatementList__group_dynamic_methods,
  (void*) CmdStatementList__to_inline__CmdList,
  (void*) CmdStatementList__write_etc,
  (void*) CmdStatementList__to_cpp,
  (void*) CmdStatementList__to_cs,
  (void*) CmdStatementList__to_java,
  (void*) CmdStatementList__init_object,
  (void*) CmdStatementList__type_name,
  (void*) Qualifiers__opCMP__Qualifiers,
  (void*) Qualifiers__hash_code,
  (void*) Qualifiers__init,
  (void*) Qualifiers__init__Int32,
  (void*) Qualifiers__init__Qualifiers,
  (void*) Qualifiers__opEQ__Object,
  (void*) Qualifiers__to_String,
  (void*) Qualifiers__init_object,
  (void*) Qualifiers__type_name,
  (void*) Array_of_ArrayList_of_Token__create_duplicate,
  (void*) Array_of_ArrayList_of_Token__init_object,
  (void*) Array_of_ArrayList_of_Token__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_ArrayList_of_Token__to_String,
  (void*) ArrayList_of_ArrayList_of_Token__init,
  (void*) ArrayList_of_ArrayList_of_Token__init__Int32,
  (void*) ArrayList_of_ArrayList_of_Token__create_reader,
  (void*) ArrayList_of_ArrayList_of_Token__count,
  (void*) ArrayList_of_ArrayList_of_Token__modification_count,
  (void*) ArrayList_of_ArrayList_of_Token__ensure_count__Int32,
  (void*) ArrayList_of_ArrayList_of_Token__add__ArrayList_of_Token,
  (void*) ArrayList_of_ArrayList_of_Token__create_duplicate,
  (void*) ArrayList_of_ArrayList_of_Token__clear,
  (void*) ArrayList_of_ArrayList_of_Token__init_object,
  (void*) ArrayList_of_ArrayList_of_Token__type_name,
  (void*) Array_of_TypeInfo__create_duplicate,
  (void*) Array_of_TypeInfo__init_object,
  (void*) Array_of_TypeInfo__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_TypeInfo__index_of__TypeInfo_Int32,
  (void*) ArrayList_of_TypeInfo__add__Readable_of_TypeInfo,
  (void*) ArrayList_of_TypeInfo__remove_last,
  (void*) ArrayList_of_TypeInfo__remove_value__TypeInfo,
  (void*) ArrayList_of_TypeInfo__to_String,
  (void*) ArrayList_of_TypeInfo__init,
  (void*) ArrayList_of_TypeInfo__init__Int32,
  (void*) ArrayList_of_TypeInfo__create_reader,
  (void*) ArrayList_of_TypeInfo__from__Int32,
  (void*) ArrayList_of_TypeInfo__count,
  (void*) ArrayList_of_TypeInfo__modification_count,
  (void*) ArrayList_of_TypeInfo__ensure_count__Int32,
  (void*) ArrayList_of_TypeInfo__add__TypeInfo,
  (void*) ArrayList_of_TypeInfo__create_duplicate,
  (void*) ArrayList_of_TypeInfo__clear,
  (void*) ArrayList_of_TypeInfo__init_object,
  (void*) ArrayList_of_TypeInfo__type_name,
  (void*) Array_of_MethodInfo__create_duplicate,
  (void*) Array_of_MethodInfo__init_object,
  (void*) Array_of_MethodInfo__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_MethodInfo__index_of__MethodInfo_Int32,
  (void*) ArrayList_of_MethodInfo__swap__Int32_Int32,
  (void*) ArrayList_of_MethodInfo__add__Readable_of_MethodInfo,
  (void*) ArrayList_of_MethodInfo__remove_value__MethodInfo,
  (void*) ArrayList_of_MethodInfo__to_String,
  (void*) ArrayList_of_MethodInfo__init,
  (void*) ArrayList_of_MethodInfo__init__Int32,
  (void*) ArrayList_of_MethodInfo__init__Int32_MethodInfo,
  (void*) ArrayList_of_MethodInfo__create_reader,
  (void*) ArrayList_of_MethodInfo__count,
  (void*) ArrayList_of_MethodInfo__modification_count,
  (void*) ArrayList_of_MethodInfo__ensure_count__Int32,
  (void*) ArrayList_of_MethodInfo__add__MethodInfo,
  (void*) ArrayList_of_MethodInfo__create_duplicate,
  (void*) ArrayList_of_MethodInfo__clear,
  (void*) ArrayList_of_MethodInfo__init_object,
  (void*) ArrayList_of_MethodInfo__type_name,
  (void*) Array_of_PropertyInfo__create_duplicate,
  (void*) Array_of_PropertyInfo__init_object,
  (void*) Array_of_PropertyInfo__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_PropertyInfo__add__Readable_of_PropertyInfo,
  (void*) ArrayList_of_PropertyInfo__to_String,
  (void*) ArrayList_of_PropertyInfo__init,
  (void*) ArrayList_of_PropertyInfo__init__Int32,
  (void*) ArrayList_of_PropertyInfo__create_reader,
  (void*) ArrayList_of_PropertyInfo__from__Int32,
  (void*) ArrayList_of_PropertyInfo__reverse_order,
  (void*) ArrayList_of_PropertyInfo__count,
  (void*) ArrayList_of_PropertyInfo__modification_count,
  (void*) ArrayList_of_PropertyInfo__ensure_count__Int32,
  (void*) ArrayList_of_PropertyInfo__add__PropertyInfo,
  (void*) ArrayList_of_PropertyInfo__create_duplicate,
  (void*) ArrayList_of_PropertyInfo__clear,
  (void*) ArrayList_of_PropertyInfo__init_object,
  (void*) ArrayList_of_PropertyInfo__type_name,
  (void*) Array_of_CategoryInfo__create_duplicate,
  (void*) Array_of_CategoryInfo__init_object,
  (void*) Array_of_CategoryInfo__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_CategoryInfo__add__Readable_of_CategoryInfo,
  (void*) ArrayList_of_CategoryInfo__to_String,
  (void*) ArrayList_of_CategoryInfo__init,
  (void*) ArrayList_of_CategoryInfo__init__Int32,
  (void*) ArrayList_of_CategoryInfo__create_reader,
  (void*) ArrayList_of_CategoryInfo__from__Int32,
  (void*) ArrayList_of_CategoryInfo__count,
  (void*) ArrayList_of_CategoryInfo__modification_count,
  (void*) ArrayList_of_CategoryInfo__ensure_count__Int32,
  (void*) ArrayList_of_CategoryInfo__add__CategoryInfo,
  (void*) ArrayList_of_CategoryInfo__create_duplicate,
  (void*) ArrayList_of_CategoryInfo__clear,
  (void*) ArrayList_of_CategoryInfo__init_object,
  (void*) ArrayList_of_CategoryInfo__type_name,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__create_reader,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_PropertyInfo__init_object,
  (void*) HashTable_of_String_and_PropertyInfo__type_name,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__create_reader,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_MethodInfo__init_object,
  (void*) HashTable_of_String_and_MethodInfo__type_name,
  (void*) Array_of_TypeMapping__create_duplicate,
  (void*) Array_of_TypeMapping__init_object,
  (void*) Array_of_TypeMapping__type_name,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_TypeMapping__to_String,
  (void*) ArrayList_of_TypeMapping__init,
  (void*) ArrayList_of_TypeMapping__init__Int32,
  (void*) ArrayList_of_TypeMapping__ensure_count__Int32,
  (void*) ArrayList_of_TypeMapping__add__TypeMapping,
  (void*) ArrayList_of_TypeMapping__create_duplicate,
  (void*) ArrayList_of_TypeMapping__clear,
  (void*) ArrayList_of_TypeMapping__init_object,
  (void*) ArrayList_of_TypeMapping__type_name,
  (void*) TypeInfo__init__Token_String_Qualifiers_ArrayList_of_ArrayList_of_Token,
  (void*) TypeInfo__init__TypeInfo,
  (void*) TypeInfo__base_name,
  (void*) TypeInfo__is_valid_type,
  (void*) TypeInfo__is_logical,
  (void*) TypeInfo__is_numerical,
  (void*) TypeInfo__is_real,
  (void*) TypeInfo__is_integer,
  (void*) TypeInfo__error__String,
  (void*) TypeInfo__to_String,
  (void*) TypeInfo__display,
  (void*) TypeInfo__generic_type,
  (void*) TypeInfo__base_class,
  (void*) TypeInfo__discover_runtime_types,
  (void*) TypeInfo__organize,
  (void*) TypeInfo__instantiate_templates__ArrayList_of_TypeTemplate,
  (void*) TypeInfo__incorporate_specialized_augment__TypeTemplate_HashTable_of_String_and_Token__,
  (void*) TypeInfo__collect_flat_base_types__TypeInfo,
  (void*) TypeInfo__check_compound_dependencies,
  (void*) TypeInfo__collect_singletons__TypeInfo,
  (void*) TypeInfo__resolve,
  (void*) TypeInfo__prep__Token,
  (void*) TypeInfo__collect_properties,
  (void*) TypeInfo__inherit_aspect_properties__TypeInfo,
  (void*) TypeInfo__collect_property__PropertyInfo,
  (void*) TypeInfo__store_property_init__PropertyInfo_MethodInfo,
  (void*) TypeInfo__collect_methods,
  (void*) TypeInfo__organize_method__MethodInfo,
  (void*) TypeInfo__collect_underlying_methods__TypeInfo,
  (void*) TypeInfo__collect_overlaying_methods__TypeInfo,
  (void*) TypeInfo__collect_method__MethodInfo_Logical,
  (void*) TypeInfo__find_method__String,
  (void*) TypeInfo__must_find_method__String,
  (void*) TypeInfo__instance_of__TypeInfo,
  (void*) TypeInfo__find_property__String,
  (void*) TypeInfo__manager_name,
  (void*) TypeInfo__manager_class,
  (void*) TypeInfo__reader_type,
  (void*) TypeInfo__readable_type,
  (void*) TypeInfo__find_reader_element_type,
  (void*) TypeInfo__find_readable_element_type,
  (void*) TypeInfo__is_lower_precision_than__TypeInfo,
  (void*) TypeInfo__is_compatible_with__TypeInfo,
  (void*) TypeInfo__x_name,
  (void*) TypeInfo__calculate_sizes_and_offsets,
  (void*) TypeInfo__wiki_name,
  (void*) TypeInfo__help_name,
  (void*) TypeInfo__rename_lists__String,
  (void*) TypeInfo__write_slagdoc,
  (void*) TypeInfo__write_help,
  (void*) TypeInfo__build_slagdoc,
  (void*) TypeInfo__build_help,
  (void*) TypeInfo__anchor_name__String,
  (void*) TypeInfo__wiki_anchor__MethodInfo_Logical,
  (void*) TypeInfo__wiki_signature__MethodInfo_Logical,
  (void*) TypeInfo__help_signature__MethodInfo,
  (void*) TypeInfo__format_doc_comment__String_Logical,
  (void*) TypeInfo__format_help_comment__String,
  (void*) TypeInfo__init_object,
  (void*) TypeInfo__type_name,
  (void*) Array_of_ParameterInfo__create_duplicate,
  (void*) Array_of_ParameterInfo__init_object,
  (void*) Array_of_ParameterInfo__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_ParameterInfo__to_String,
  (void*) ArrayList_of_ParameterInfo__init,
  (void*) ArrayList_of_ParameterInfo__init__Int32,
  (void*) ArrayList_of_ParameterInfo__create_reader,
  (void*) ArrayList_of_ParameterInfo__from__Int32,
  (void*) ArrayList_of_ParameterInfo__reverse_order,
  (void*) ArrayList_of_ParameterInfo__count,
  (void*) ArrayList_of_ParameterInfo__modification_count,
  (void*) ArrayList_of_ParameterInfo__ensure_count__Int32,
  (void*) ArrayList_of_ParameterInfo__get__Int32,
  (void*) ArrayList_of_ParameterInfo__add__ParameterInfo,
  (void*) ArrayList_of_ParameterInfo__create_duplicate,
  (void*) ArrayList_of_ParameterInfo__clear,
  (void*) ArrayList_of_ParameterInfo__init_object,
  (void*) ArrayList_of_ParameterInfo__type_name,
  NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__create_reader,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_String__init_object,
  (void*) HashTable_of_String_and_String__type_name,
  NULL,
  (void*) HashSet_of_String__add__String,
  (void*) HashSet_of_String__create_reader,
  (void*) HashSet_of_String__init_object,
  (void*) HashSet_of_String__type_name,
  (void*) MethodGroup__init__String_MethodInfo,
  (void*) MethodGroup__add__MethodInfo,
  (void*) MethodGroup__mark_called,
  (void*) MethodGroup__init_object,
  (void*) MethodGroup__type_name,
  (void*) Array_of_LocalVarInfo__create_duplicate,
  (void*) Array_of_LocalVarInfo__init_object,
  (void*) Array_of_LocalVarInfo__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_LocalVarInfo__to_String,
  (void*) ArrayList_of_LocalVarInfo__init,
  (void*) ArrayList_of_LocalVarInfo__init__Int32,
  (void*) ArrayList_of_LocalVarInfo__create_reader,
  (void*) ArrayList_of_LocalVarInfo__from__Int32,
  (void*) ArrayList_of_LocalVarInfo__count,
  (void*) ArrayList_of_LocalVarInfo__modification_count,
  (void*) ArrayList_of_LocalVarInfo__ensure_count__Int32,
  (void*) ArrayList_of_LocalVarInfo__add__LocalVarInfo,
  (void*) ArrayList_of_LocalVarInfo__create_duplicate,
  (void*) ArrayList_of_LocalVarInfo__clear,
  (void*) ArrayList_of_LocalVarInfo__init_object,
  (void*) ArrayList_of_LocalVarInfo__type_name,
  (void*) MethodInfo__init__Token_Qualifiers_TypeInfo_String,
  (void*) MethodInfo__create_duplicate,
  (void*) MethodInfo__is_aspect_method,
  (void*) MethodInfo__min_params,
  (void*) MethodInfo__base_return_type,
  (void*) MethodInfo__resolve,
  (void*) MethodInfo__resolve_overrides,
  (void*) MethodInfo__resolve_if_ancestor_resolved,
  (void*) MethodInfo__finalize_calls,
  (void*) MethodInfo__finalize_structure_info,
  (void*) MethodInfo__x_name,
  (void*) MethodInfo__calculate_local_var_offsets,
  (void*) MethodInfo__init_object,
  (void*) MethodInfo__type_name,
  (void*) GenericVarInfo__init_object,
  (void*) GenericVarInfo__type_name,
  (void*) MethodVarInfo__init__Token_MethodInfo_TypeInfo_String_Int32,
  NULL,
  (void*) MethodVarInfo__init_object,
  (void*) MethodVarInfo__type_name,
  (void*) LocalVarInfo__x_name,
  (void*) LocalVarInfo__init_object,
  (void*) LocalVarInfo__type_name,
  (void*) CmdStructure__init__Token_Int32_CmdStatementList,
  (void*) CmdStructure__to_String,
  (void*) CmdStructure__remap_id,
  (void*) CmdStructure__finalize_calls,
  (void*) CmdStructure__finalize_structure_info,
  (void*) CmdStructure__group_dynamic_methods,
  (void*) CmdStructure__to_inline__CmdList,
  (void*) CmdStructure__init_object,
  (void*) CmdStructure__type_name,
  (void*) CmdForEach__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList,
  (void*) CmdForEach__resolve,
  (void*) CmdForEach__init_object,
  (void*) CmdForEach__type_name,
  NULL,
  NULL,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__create_duplicate,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__resolve,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__optimize,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__write_etc,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_cpp,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_cs,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_java,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__init_object,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__type_name,
  (void*) QualifiersManager__init_object,
  (void*) QualifiersManager__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) Array_of_SlagFile__create_duplicate,
  (void*) Array_of_SlagFile__init_object,
  (void*) Array_of_SlagFile__type_name,
  NULL,
  NULL,
  (void*) ArrayReader_of_SlagFile__to_List,
  (void*) ArrayReader_of_SlagFile__to_String,
  (void*) ArrayReader_of_SlagFile__init__Collection_of_SlagFile_Array_of_SlagFile_Int32_Int32,
  (void*) ArrayReader_of_SlagFile__create_duplicate,
  (void*) ArrayReader_of_SlagFile__has_another,
  (void*) ArrayReader_of_SlagFile__remaining,
  (void*) ArrayReader_of_SlagFile__read,
  (void*) ArrayReader_of_SlagFile__init_object,
  (void*) ArrayReader_of_SlagFile__type_name,
  NULL,
  NULL,
  NULL,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_LocalVarInfo__init_object,
  (void*) HashTable_of_String_and_LocalVarInfo__type_name,
  (void*) CmdList__init__Int32,
  (void*) CmdList__init__Cmd,
  (void*) CmdList__init__Cmd_Cmd,
  (void*) CmdList__init__Cmd_Cmd_Cmd,
  (void*) CmdList__create_duplicate,
  (void*) CmdList__resolve,
  (void*) CmdList__finalize_calls,
  (void*) CmdList__finalize_structure_info,
  (void*) CmdList__group_dynamic_methods,
  (void*) CmdList__to_inline__CmdList,
  (void*) CmdList__write_etc,
  (void*) CmdList__to_cpp,
  (void*) CmdList__to_cs,
  (void*) CmdList__to_java,
  (void*) CmdList__init_object,
  (void*) CmdList__type_name,
  (void*) CmdCall__type,
  (void*) CmdCall__init_object,
  (void*) CmdCall__type_name,
  (void*) CmdNewObject__init__Token_TypeInfo_MethodInfo_CmdList,
  (void*) CmdNewObject__create_duplicate,
  (void*) CmdNewObject__type,
  (void*) CmdNewObject__to_String,
  (void*) CmdNewObject__resolve,
  (void*) CmdNewObject__finalize_calls,
  (void*) CmdNewObject__finalize_structure_info,
  (void*) CmdNewObject__group_dynamic_methods,
  (void*) CmdNewObject__to_inline__CmdList,
  (void*) CmdNewObject__write_etc,
  (void*) CmdNewObject__to_cpp,
  (void*) CmdNewObject__to_cs,
  (void*) CmdNewObject__to_java,
  (void*) CmdNewObject__init_object,
  (void*) CmdNewObject__type_name,
  (void*) ArrayReader_of_ArrayList_of_Token__to_List,
  (void*) ArrayReader_of_ArrayList_of_Token__to_String,
  (void*) ArrayReader_of_ArrayList_of_Token__init__Collection_of_ArrayList_of_Token_Array_of_ArrayList_of_Token_Int32_Int32,
  (void*) ArrayReader_of_ArrayList_of_Token__create_duplicate,
  (void*) ArrayReader_of_ArrayList_of_Token__has_another,
  (void*) ArrayReader_of_ArrayList_of_Token__remaining,
  (void*) ArrayReader_of_ArrayList_of_Token__read,
  (void*) ArrayReader_of_ArrayList_of_Token__init_object,
  (void*) ArrayReader_of_ArrayList_of_Token__type_name,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__create_duplicate,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__resolve,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__optimize,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__write_etc,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_cpp,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_cs,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_java,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__init_object,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__type_name,
  (void*) CmdAnd__init_object,
  (void*) CmdAnd__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) Array_of_TypeTemplate__create_duplicate,
  (void*) Array_of_TypeTemplate__init_object,
  (void*) Array_of_TypeTemplate__type_name,
  (void*) ArrayReader_of_TypeTemplate__to_List,
  (void*) ArrayReader_of_TypeTemplate__to_String,
  (void*) ArrayReader_of_TypeTemplate__init__Collection_of_TypeTemplate_Array_of_TypeTemplate_Int32_Int32,
  (void*) ArrayReader_of_TypeTemplate__create_duplicate,
  (void*) ArrayReader_of_TypeTemplate__has_another,
  (void*) ArrayReader_of_TypeTemplate__remaining,
  (void*) ArrayReader_of_TypeTemplate__read,
  (void*) ArrayReader_of_TypeTemplate__init_object,
  (void*) ArrayReader_of_TypeTemplate__type_name,
  NULL,
  NULL,
  (void*) Array_of_Mapping_of_Object_and_Int32__create_duplicate,
  (void*) Array_of_Mapping_of_Object_and_Int32__init_object,
  (void*) Array_of_Mapping_of_Object_and_Int32__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__to_String,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__init,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__init__Int32,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__create_reader,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__count,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__modification_count,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__ensure_count__Int32,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__add__Mapping_of_Object_and_Int32,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__create_duplicate,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__clear,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__init_object,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__type_name,
  NULL,
  (void*) TextWriter__flush,
  (void*) TextWriter__close,
  (void*) TextWriter__clean_up,
  (void*) TextWriter__write__Char,
  (void*) TextWriter__print__Char,
  (void*) TextWriter__print__String,
  (void*) TextWriter__print__Object,
  (void*) TextWriter__println__String,
  (void*) TextWriter__println__Object,
  (void*) TextWriter__init_object,
  (void*) TextWriter__type_name,
  (void*) StdOutWriter__init,
  (void*)(void(*)(SXCRef,SlagChar)) StdOutWriter__write__Char,
  (void*)(void(*)(SXCRef,SlagChar)) StdOutWriter__print__Char,
  (void*)(void(*)(SXCRef,SXCRef)) StdOutWriter__print__String,
  (void*)(void(*)(SXCRef)) StdOutWriter__flush,
  (void*) StdOutWriter__init_object,
  (void*) StdOutWriter__type_name,
  (void*) CmdConstruct__init__Token_TypeInfo_CmdList,
  (void*) CmdConstruct__init__Token_String_CmdList,
  (void*) CmdConstruct__create_duplicate,
  (void*) CmdConstruct__to_String,
  (void*) CmdConstruct__resolve,
  (void*) CmdConstruct__init_object,
  (void*) CmdConstruct__type_name,
  (void*) CmdUnary__init__Token_Cmd,
  (void*) CmdUnary__type,
  (void*) CmdUnary__to_String,
  (void*) CmdUnary__finalize_calls,
  (void*) CmdUnary__finalize_structure_info,
  (void*) CmdUnary__group_dynamic_methods,
  (void*) CmdUnary__to_inline__CmdList,
  (void*) CmdUnary__init_object,
  (void*) CmdUnary__type_name,
  (void*) CmdMemberAccess__init__Token_Cmd_CmdConstruct,
  (void*) CmdMemberAccess__create_duplicate,
  (void*) CmdMemberAccess__resolve,
  (void*) CmdMemberAccess__to_String,
  (void*) CmdMemberAccess__init_object,
  (void*) CmdMemberAccess__type_name,
  (void*) Array_of_HashTableBin_of_Int32_and_Int32__create_duplicate,
  (void*) Array_of_HashTableBin_of_Int32_and_Int32__init_object,
  (void*) Array_of_HashTableBin_of_Int32_and_Int32__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__to_String,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__init,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__init__Int32,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__create_reader,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__count,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__modification_count,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__ensure_count__Int32,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__add__HashTableBin_of_Int32_and_Int32,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__create_duplicate,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__clear,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__init_object,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__type_name,
  (void*) GenericHashTable_of_Int32_and_Int32__init,
  (void*) GenericHashTable_of_Int32_and_Int32__init__Int32_Real64,
  (void*) GenericHashTable_of_Int32_and_Int32__set__Int32_Int32,
  (void*) GenericHashTable_of_Int32_and_Int32__set__Mapping_of_Int32_and_Int32,
  (void*) GenericHashTable_of_Int32_and_Int32__get__Int32,
  (void*) GenericHashTable_of_Int32_and_Int32__contains__Int32,
  (void*) GenericHashTable_of_Int32_and_Int32__get_bin__Int32,
  (void*) GenericHashTable_of_Int32_and_Int32__add__GenericHashTable_of_Int32_and_Int32,
  (void*) GenericHashTable_of_Int32_and_Int32__expand_table,
  (void*) GenericHashTable_of_Int32_and_Int32__to_String,
  (void*) GenericHashTable_of_Int32_and_Int32__values,
  (void*) GenericHashTable_of_Int32_and_Int32__init_object,
  (void*) GenericHashTable_of_Int32_and_Int32__type_name,
  NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init__Int32_Real64,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__create_duplicate,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__to_String,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__create_reader,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init_object,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__type_name,
  (void*) Array_of_HashTableBin_of_Object_and_Int32__create_duplicate,
  (void*) Array_of_HashTableBin_of_Object_and_Int32__init_object,
  (void*) Array_of_HashTableBin_of_Object_and_Int32__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__to_String,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__init,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__init__Int32,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__create_reader,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__count,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__modification_count,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__ensure_count__Int32,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__add__HashTableBin_of_Object_and_Int32,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__create_duplicate,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__clear,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__init_object,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__type_name,
  (void*) GenericHashTable_of_Object_and_Int32__init,
  (void*) GenericHashTable_of_Object_and_Int32__init__Int32_Real64,
  (void*) GenericHashTable_of_Object_and_Int32__set__Object_Int32,
  (void*) GenericHashTable_of_Object_and_Int32__set__Mapping_of_Object_and_Int32,
  (void*) GenericHashTable_of_Object_and_Int32__get__Object,
  (void*) GenericHashTable_of_Object_and_Int32__find__Object,
  (void*) GenericHashTable_of_Object_and_Int32__contains__Object,
  (void*) GenericHashTable_of_Object_and_Int32__get_bin__Object,
  (void*) GenericHashTable_of_Object_and_Int32__add__GenericHashTable_of_Object_and_Int32,
  (void*) GenericHashTable_of_Object_and_Int32__expand_table,
  (void*) GenericHashTable_of_Object_and_Int32__to_String,
  (void*) GenericHashTable_of_Object_and_Int32__values,
  (void*) GenericHashTable_of_Object_and_Int32__init_object,
  (void*) GenericHashTable_of_Object_and_Int32__type_name,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__init,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__create_duplicate,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__to_String,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__create_reader,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__init_object,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__type_name,
  (void*) HashTable_of_String_and_Int32__init_object,
  (void*) HashTable_of_String_and_Int32__type_name,
  (void*) Array_of_String__create_duplicate,
  (void*) Array_of_String__init_object,
  (void*) Array_of_String__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_String__last,
  (void*) ArrayList_of_String__index_of__String_Int32,
  (void*) ArrayList_of_String__add__Readable_of_String,
  (void*) ArrayList_of_String__copy_from__Readable_of_String,
  (void*) ArrayList_of_String__format__String_String_String,
  (void*) ArrayList_of_String__format__String_String,
  (void*) ArrayList_of_String__init,
  (void*) ArrayList_of_String__init__Int32,
  (void*) ArrayList_of_String__create_reader,
  (void*) ArrayList_of_String__from__Int32,
  (void*) ArrayList_of_String__count,
  (void*) ArrayList_of_String__modification_count,
  (void*) ArrayList_of_String__ensure_count__Int32,
  (void*) ArrayList_of_String__get__Int32,
  (void*) ArrayList_of_String__add__String,
  (void*) ArrayList_of_String__create_duplicate,
  (void*) ArrayList_of_String__clear,
  (void*) ArrayList_of_String__join__String,
  (void*) ArrayList_of_String__to_String,
  (void*) ArrayList_of_String__init_object,
  (void*) ArrayList_of_String__type_name,
  (void*) TokenManager__init_object,
  (void*) TokenManager__type_name,
  NULL,
  NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__to_List,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__to_String,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__init__Collection_of_HashTableBin_of_Object_and_Int32_Array_of_HashTableBin_of_Object_and_Int32_Int32_Int32,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__create_duplicate,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__has_another,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__remaining,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__read,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__init_object,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__type_name,
  (void*) CmdTerm__resolve,
  (void*) CmdTerm__finalize_calls,
  (void*) CmdTerm__finalize_structure_info,
  (void*) CmdTerm__group_dynamic_methods,
  (void*) CmdTerm__to_inline__CmdList,
  (void*) CmdTerm__init_object,
  (void*) CmdTerm__type_name,
  (void*) CmdThisReference__init__Token_TypeInfo,
  (void*) CmdThisReference__create_duplicate,
  (void*) CmdThisReference__type,
  (void*) CmdThisReference__to_String,
  (void*) CmdThisReference__resolve,
  (void*) CmdThisReference__finalize_structure_info,
  (void*) CmdThisReference__to_inline__CmdList,
  (void*) CmdThisReference__write_etc,
  (void*) CmdThisReference__to_cpp,
  (void*) CmdThisReference__to_cs,
  (void*) CmdThisReference__to_java,
  (void*) CmdThisReference__init_object,
  (void*) CmdThisReference__type_name,
  (void*) CmdCoerceAs__init__Token_Cmd_TypeInfo,
  (void*) CmdCoerceAs__create_duplicate,
  (void*) CmdCoerceAs__type,
  (void*) CmdCoerceAs__to_String,
  (void*) CmdCoerceAs__resolve,
  (void*) CmdCoerceAs__finalize_calls,
  (void*) CmdCoerceAs__write_etc,
  (void*) CmdCoerceAs__statement_to_cpp,
  (void*) CmdCoerceAs__to_cpp,
  (void*) CmdCoerceAs__statement_to_cs,
  (void*) CmdCoerceAs__to_cs,
  (void*) CmdCoerceAs__statement_to_java,
  (void*) CmdCoerceAs__to_java,
  (void*) CmdCoerceAs__init_object,
  (void*) CmdCoerceAs__type_name,
  (void*) Array_of_Int32__create_duplicate,
  (void*) Array_of_Int32__init_object,
  (void*) Array_of_Int32__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayReader_of_Int32__to_List,
  (void*) ArrayReader_of_Int32__to_String,
  (void*) ArrayReader_of_Int32__init__Collection_of_Int32_Array_of_Int32_Int32_Int32,
  (void*) ArrayReader_of_Int32__create_duplicate,
  (void*) ArrayReader_of_Int32__has_another,
  (void*) ArrayReader_of_Int32__remaining,
  (void*) ArrayReader_of_Int32__read,
  (void*) ArrayReader_of_Int32__init_object,
  (void*) ArrayReader_of_Int32__type_name,
  (void*) Array_of_HashTableBin_of_Int32_and_Object__create_duplicate,
  (void*) Array_of_HashTableBin_of_Int32_and_Object__init_object,
  (void*) Array_of_HashTableBin_of_Int32_and_Object__type_name,
  (void*) ParseReaderMarkManager__init_object,
  (void*) ParseReaderMarkManager__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) HashTableValueReader_of_Int32_and_Object__available,
  (void*) HashTableValueReader_of_Int32_and_Object__to_List,
  (void*) HashTableValueReader_of_Int32_and_Object__to_String,
  (void*) HashTableValueReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object,
  (void*) HashTableValueReader_of_Int32_and_Object__prep_next,
  (void*) HashTableValueReader_of_Int32_and_Object__has_another,
  (void*) HashTableValueReader_of_Int32_and_Object__read,
  (void*) HashTableValueReader_of_Int32_and_Object__init_object,
  (void*) HashTableValueReader_of_Int32_and_Object__type_name,
  (void*)(SlagReal64(*)(SXCRef,SlagReal64)) Math__floor__Real64,
  (void*) Math__fractional_part__Real64,
  (void*) Math__max__Int32_Int32,
  (void*) Math__is_NaN__Real64,
  (void*) Math__unique_Int32,
  (void*) Math__init_object,
  (void*) Math__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) Array_of_CMD__create_duplicate,
  (void*) Array_of_CMD__init_object,
  (void*) Array_of_CMD__type_name,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_CMD__to_String,
  (void*) ArrayList_of_CMD__init,
  (void*) ArrayList_of_CMD__init__Int32,
  (void*) ArrayList_of_CMD__ensure_count__Int32,
  (void*) ArrayList_of_CMD__add__CMD,
  (void*) ArrayList_of_CMD__create_duplicate,
  (void*) ArrayList_of_CMD__clear,
  (void*) ArrayList_of_CMD__init_object,
  (void*) ArrayList_of_CMD__type_name,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_CMD__init_object,
  (void*) HashTable_of_String_and_CMD__type_name,
  (void*) CMD__to_String,
  (void*) CMD__opCMP__CMD,
  (void*) CMD__hash_code,
  (void*) CMD__init,
  (void*) CMD__init_object,
  (void*) CMD__type_name,
  (void*) Enum_of_CMD__prep__CMD_String,
  (void*) Enum_of_CMD__init_object,
  (void*) Enum_of_CMD__type_name,
  (void*) CmdManager__init_object,
  (void*) CmdManager__type_name,
  (void*) DelegateType__init_object,
  (void*) DelegateType__type_name,
  (void*) Delegate______init_object,
  (void*) Delegate______type_name,
  (void*) SignalHandler__init__String_Int32,
  (void*) SignalHandler__on__Signal,
  (void*) SignalHandler__handle__Signal,
  (void*) SignalHandler__delegate_dummy,
  (void*) SignalHandler__init_object,
  (void*) SignalHandler__type_name,
  (void*) SpecializedSignalHandler_460__on__Signal,
  (void*) SpecializedSignalHandler_460__init_object,
  (void*) SpecializedSignalHandler_460__type_name,
  (void*) Array_of_ParamInfo__create_duplicate,
  (void*) Array_of_ParamInfo__init_object,
  (void*) Array_of_ParamInfo__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_ParamInfo__to_String,
  (void*) ArrayList_of_ParamInfo__init,
  (void*) ArrayList_of_ParamInfo__init__Int32,
  (void*) ArrayList_of_ParamInfo__create_reader,
  (void*) ArrayList_of_ParamInfo__count,
  (void*) ArrayList_of_ParamInfo__modification_count,
  (void*) ArrayList_of_ParamInfo__ensure_count__Int32,
  (void*) ArrayList_of_ParamInfo__add__ParamInfo,
  (void*) ArrayList_of_ParamInfo__create_duplicate,
  (void*) ArrayList_of_ParamInfo__clear,
  (void*) ArrayList_of_ParamInfo__init_object,
  (void*) ArrayList_of_ParamInfo__type_name,
  (void*) PropertyInfo__init__Token_TypeInfo_Qualifiers_TypeInfo_String_Cmd_Int32,
  (void*) PropertyInfo__create_duplicate,
  (void*) PropertyInfo__x_name,
  (void*) PropertyInfo__init_object,
  (void*) PropertyInfo__type_name,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*) CmdStatementWithOperand__finalize_structure_info,
  (void*) CmdStatementWithOperand__group_dynamic_methods,
  (void*) CmdStatementWithOperand__to_inline__CmdList,
  (void*) CmdStatementWithOperand__init_object,
  (void*) CmdStatementWithOperand__type_name,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__init__Token_PropertyInfo_Cmd,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__create_duplicate,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__to_String,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__resolve,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__finalize_structure_info,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__write_etc,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__init_object,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__type_name,
  (void*) CmdThisPropertySubAndAssign__to_cpp,
  (void*) CmdThisPropertySubAndAssign__to_cs,
  (void*) CmdThisPropertySubAndAssign__to_java,
  (void*) CmdThisPropertySubAndAssign__init_object,
  (void*) CmdThisPropertySubAndAssign__type_name,
  NULL,
  NULL,
  (void*) CoerceReader_of_PropertyInfo__available,
  (void*) CoerceReader_of_PropertyInfo__to_List,
  (void*) CoerceReader_of_PropertyInfo__to_String,
  (void*) CoerceReader_of_PropertyInfo__init__Reader_of_Object,
  (void*) CoerceReader_of_PropertyInfo__has_another,
  (void*) CoerceReader_of_PropertyInfo__read,
  (void*) CoerceReader_of_PropertyInfo__init_object,
  (void*) CoerceReader_of_PropertyInfo__type_name,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__type_name,
  (void*) Array_of_CmdCatch__create_duplicate,
  (void*) Array_of_CmdCatch__init_object,
  (void*) Array_of_CmdCatch__type_name,
  (void*) ArrayList_of_CmdCatch__to_String,
  (void*) ArrayList_of_CmdCatch__init,
  (void*) ArrayList_of_CmdCatch__init__Int32,
  (void*) ArrayList_of_CmdCatch__create_reader,
  (void*) ArrayList_of_CmdCatch__from__Int32,
  (void*) ArrayList_of_CmdCatch__count,
  (void*) ArrayList_of_CmdCatch__modification_count,
  (void*) ArrayList_of_CmdCatch__ensure_count__Int32,
  (void*) ArrayList_of_CmdCatch__add__CmdCatch,
  (void*) ArrayList_of_CmdCatch__create_duplicate,
  (void*) ArrayList_of_CmdCatch__clear,
  (void*) ArrayList_of_CmdCatch__init_object,
  (void*) ArrayList_of_CmdCatch__type_name,
  (void*) CmdTry__create_duplicate,
  (void*) CmdTry__resolve,
  (void*) CmdTry__finalize_calls,
  (void*) CmdTry__finalize_structure_info,
  (void*) CmdTry__group_dynamic_methods,
  (void*) CmdTry__to_inline__CmdList,
  (void*) CmdTry__to_String,
  (void*) CmdTry__write_etc,
  (void*) CmdTry__to_cpp,
  (void*) CmdTry__to_cs,
  (void*) CmdTry__to_java,
  (void*) CmdTry__init_object,
  (void*) CmdTry__type_name,
  NULL,
  NULL,
  (void*) CmdLiteralPrimitive__init_object,
  (void*) CmdLiteralPrimitive__type_name,
  (void*) CmdLiteralInt64__init__Token_Int64,
  (void*) CmdLiteralInt64__create_duplicate,
  (void*) CmdLiteralInt64__type,
  (void*) CmdLiteralInt64__write_etc,
  (void*) CmdLiteralInt64__to_cpp,
  (void*) CmdLiteralInt64__to_cs,
  (void*) CmdLiteralInt64__to_java,
  (void*) CmdLiteralInt64__init_object,
  (void*) CmdLiteralInt64__type_name,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__init__Token_PropertyInfo_Cmd,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__create_duplicate,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__to_String,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__resolve,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__finalize_structure_info,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__write_etc,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__init_object,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__type_name,
  (void*) CmdThisPropertyMulAndAssign__to_cpp,
  (void*) CmdThisPropertyMulAndAssign__to_cs,
  (void*) CmdThisPropertyMulAndAssign__to_java,
  (void*) CmdThisPropertyMulAndAssign__init_object,
  (void*) CmdThisPropertyMulAndAssign__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__create_duplicate,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__resolve,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__optimize,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__write_etc,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_cpp,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_cs,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_java,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__init_object,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__type_name,
  (void*) Array_of_Char__create_duplicate,
  (void*) Array_of_Char__init_object,
  (void*) Array_of_Char__type_name,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_Char__last,
  (void*) ArrayList_of_Char__swap__Int32_Int32,
  (void*) ArrayList_of_Char__remove_last,
  (void*) ArrayList_of_Char__reverse,
  (void*) ArrayList_of_Char__to_String,
  (void*) ArrayList_of_Char__init,
  (void*) ArrayList_of_Char__init__Int32,
  (void*) ArrayList_of_Char__init__Array_of_Char_Logical,
  (void*) ArrayList_of_Char__create_reader,
  (void*) ArrayList_of_Char__reverse_order,
  (void*) ArrayList_of_Char__count,
  (void*) ArrayList_of_Char__modification_count,
  (void*) ArrayList_of_Char__ensure_capacity__Int32,
  (void*) ArrayList_of_Char__ensure_count__Int32,
  (void*) ArrayList_of_Char__add__Char,
  (void*) ArrayList_of_Char__insert__Char_Int32,
  (void*) ArrayList_of_Char__remove__Int32,
  (void*) ArrayList_of_Char__create_duplicate,
  (void*) ArrayList_of_Char__clear,
  (void*) ArrayList_of_Char__init_object,
  (void*) ArrayList_of_Char__type_name,
  (void*) Array_of_Token__create_duplicate,
  (void*) Array_of_Token__init_object,
  (void*) Array_of_Token__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_Token__add__Readable_of_Token,
  (void*) ArrayList_of_Token__remove_last,
  (void*) ArrayList_of_Token__to_String,
  (void*) ArrayList_of_Token__init,
  (void*) ArrayList_of_Token__init__Int32,
  (void*) ArrayList_of_Token__create_reader,
  (void*) ArrayList_of_Token__count,
  (void*) ArrayList_of_Token__modification_count,
  (void*) ArrayList_of_Token__ensure_count__Int32,
  (void*) ArrayList_of_Token__get__Int32,
  (void*) ArrayList_of_Token__add__Token,
  (void*) ArrayList_of_Token__create_duplicate,
  (void*) ArrayList_of_Token__clear,
  (void*) ArrayList_of_Token__init_object,
  (void*) ArrayList_of_Token__type_name,
  (void*) CmdStructureControl__init__Token_Int32,
  (void*) CmdStructureControl__to_String,
  (void*) CmdStructureControl__resolve,
  (void*) CmdStructureControl__finalize_calls,
  (void*) CmdStructureControl__finalize_structure_info,
  (void*) CmdStructureControl__group_dynamic_methods,
  (void*) CmdStructureControl__to_inline__CmdList,
  (void*) CmdStructureControl__init_object,
  (void*) CmdStructureControl__type_name,
  (void*) CmdCompare__create_duplicate,
  (void*) CmdCompare__type,
  (void*) CmdCompare__resolve,
  (void*) CmdCompare__init_object,
  (void*) CmdCompare__type_name,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__create_duplicate,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__resolve,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__optimize,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__write_etc,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__init_object,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_Int64__to_String,
  (void*) ArrayList_of_Int64__init,
  (void*) ArrayList_of_Int64__init__Int32,
  (void*) ArrayList_of_Int64__init__Array_of_Int64_Logical,
  (void*) ArrayList_of_Int64__create_reader,
  (void*) ArrayList_of_Int64__count,
  (void*) ArrayList_of_Int64__modification_count,
  (void*) ArrayList_of_Int64__ensure_capacity__Int32,
  (void*) ArrayList_of_Int64__ensure_count__Int32,
  (void*) ArrayList_of_Int64__add__Int64,
  (void*) ArrayList_of_Int64__create_duplicate,
  (void*) ArrayList_of_Int64__clear,
  (void*) ArrayList_of_Int64__init_object,
  (void*) ArrayList_of_Int64__type_name,
  (void*) StackTrace__init,
  (void*) StackTrace__init__Array_of_Int64,
  (void*) StackTrace__to_String,
  (void*) StackTrace__to_String__Logical,
  (void*)(SlagObject*(*)(SXCRef)) StackTrace__native_history,
  (void*)(SlagObject*(*)(SXCRef,SlagInt64)) StackTrace__describe__Int64,
  (void*) StackTrace__init_object,
  (void*) StackTrace__type_name,
  (void*) Exception__init_object,
  (void*) Exception__init,
  (void*) Exception__to_String,
  (void*) Exception__type_name,
  (void*) Error__init_object,
  (void*) Error__init,
  (void*) Error__init__String,
  (void*) Error__type_name,
  (void*) SlagError__init__Token_String,
  (void*) SlagError__init__String_String,
  (void*) SlagError__to_String,
  (void*) SlagError__get_context__String_ParsePos,
  (void*) SlagError__init_object,
  (void*) SlagError__type_name,
  (void*) Array_of_Byte__create_duplicate,
  (void*) Array_of_Byte__init_object,
  (void*) Array_of_Byte__type_name,
  NULL,
  (void*) CmdLiteralNull__init__Token,
  (void*) CmdLiteralNull__create_duplicate,
  (void*) CmdLiteralNull__type,
  (void*) CmdLiteralNull__to_String,
  (void*) CmdLiteralNull__write_etc,
  (void*) CmdLiteralNull__to_cpp,
  (void*) CmdLiteralNull__to_cs,
  (void*) CmdLiteralNull__to_java,
  (void*) CmdLiteralNull__init_object,
  (void*) CmdLiteralNull__type_name,
  (void*) CmdVarAccess__init_object,
  (void*) CmdVarAccess__type_name,
  (void*) CmdMemberVarAccess__finalize_calls,
  (void*) CmdMemberVarAccess__finalize_structure_info,
  (void*) CmdMemberVarAccess__group_dynamic_methods,
  (void*) CmdMemberVarAccess__to_inline__CmdList,
  (void*) CmdMemberVarAccess__init_object,
  (void*) CmdMemberVarAccess__type_name,
  (void*) CmdMemberVarRead__init__Token_Cmd_PropertyInfo,
  (void*) CmdMemberVarRead__type,
  (void*) CmdMemberVarRead__init_object,
  (void*) CmdMemberVarRead__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) CmdSingletonReference__init__Token_TypeInfo,
  (void*) CmdSingletonReference__create_duplicate,
  (void*) CmdSingletonReference__type,
  (void*) CmdSingletonReference__to_String,
  (void*) CmdSingletonReference__resolve,
  (void*) CmdSingletonReference__finalize_calls,
  (void*) CmdSingletonReference__to_inline__CmdList,
  (void*) CmdSingletonReference__write_etc,
  (void*) CmdSingletonReference__to_cpp,
  (void*) CmdSingletonReference__to_cs,
  (void*) CmdSingletonReference__to_java,
  (void*) CmdSingletonReference__init_object,
  (void*) CmdSingletonReference__type_name,
  (void*) CmdRange__init__Token_Cmd_Cmd_Cmd,
  (void*) CmdRange__type,
  (void*) CmdRange__resolve_range__String_Int32,
  (void*) CmdRange__init_object,
  (void*) CmdRange__type_name,
  (void*) CmdRangeLE__create_duplicate,
  (void*) CmdRangeLE__resolve,
  (void*) CmdRangeLE__init_object,
  (void*) CmdRangeLE__type_name,
  (void*) CmdStatement__finalize_calls,
  (void*) CmdStatement__finalize_structure_info,
  (void*) CmdStatement__group_dynamic_methods,
  (void*) CmdStatement__to_inline__CmdList,
  (void*) CmdStatement__init_object,
  (void*) CmdStatement__type_name,
  (void*) Array_of_Mapping_of_Int32_and_Int32__create_duplicate,
  (void*) Array_of_Mapping_of_Int32_and_Int32__init_object,
  (void*) Array_of_Mapping_of_Int32_and_Int32__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__to_String,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__init,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__init__Int32,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__create_reader,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__count,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__modification_count,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__ensure_count__Int32,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__add__Mapping_of_Int32_and_Int32,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__create_duplicate,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__clear,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__init_object,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__type_name,
  (void*) HashTableBin_of_Int32_and_Int32__init__Int32,
  (void*) HashTableBin_of_Int32_and_Int32__index_of_entry__Int32,
  (void*) HashTableBin_of_Int32_and_Int32__find_entry__Int32,
  (void*) HashTableBin_of_Int32_and_Int32__add_entry__Int32_Int32,
  (void*) HashTableBin_of_Int32_and_Int32__add_entry__Mapping_of_Int32_and_Int32,
  (void*) HashTableBin_of_Int32_and_Int32__to_String,
  (void*) HashTableBin_of_Int32_and_Int32__init_object,
  (void*) HashTableBin_of_Int32_and_Int32__type_name,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__create_duplicate,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__resolve,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__optimize,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__write_etc,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__init_object,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__type_name,
  (void*) CmdCmpEQ__to_cpp,
  (void*) CmdCmpEQ__to_cs,
  (void*) CmdCmpEQ__to_java,
  (void*) CmdCmpEQ__init_object,
  (void*) CmdCmpEQ__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) HashTableValueReader_of_Int32_and_Int32__available,
  (void*) HashTableValueReader_of_Int32_and_Int32__to_List,
  (void*) HashTableValueReader_of_Int32_and_Int32__to_String,
  (void*) HashTableValueReader_of_Int32_and_Int32__init__Reader_of_HashTableBin_of_Int32_and_Int32,
  (void*) HashTableValueReader_of_Int32_and_Int32__prep_next,
  (void*) HashTableValueReader_of_Int32_and_Int32__has_another,
  (void*) HashTableValueReader_of_Int32_and_Int32__read,
  (void*) HashTableValueReader_of_Int32_and_Int32__init_object,
  (void*) HashTableValueReader_of_Int32_and_Int32__type_name,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init__Token_MethodVarInfo,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__create_duplicate,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__to_String,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__resolve,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__finalize_structure_info,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__write_etc,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init_object,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__type_name,
  (void*) CmdLocalVarIncrement__to_cpp,
  (void*) CmdLocalVarIncrement__to_cs,
  (void*) CmdLocalVarIncrement__to_java,
  (void*) CmdLocalVarIncrement__init_object,
  (void*) CmdLocalVarIncrement__type_name,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_TypeTemplate__to_String,
  (void*) ArrayList_of_TypeTemplate__init,
  (void*) ArrayList_of_TypeTemplate__init__Int32,
  (void*) ArrayList_of_TypeTemplate__create_reader,
  (void*) ArrayList_of_TypeTemplate__count,
  (void*) ArrayList_of_TypeTemplate__modification_count,
  (void*) ArrayList_of_TypeTemplate__ensure_count__Int32,
  (void*) ArrayList_of_TypeTemplate__add__TypeTemplate,
  (void*) ArrayList_of_TypeTemplate__create_duplicate,
  (void*) ArrayList_of_TypeTemplate__clear,
  (void*) ArrayList_of_TypeTemplate__init_object,
  (void*) ArrayList_of_TypeTemplate__type_name,
  (void*) Mapping_of_String_and_TypeTemplate____to_String,
  (void*) Mapping_of_String_and_TypeTemplate____init_object,
  (void*) Mapping_of_String_and_TypeTemplate____type_name,
  NULL,
  NULL,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_Token____init_object,
  (void*) HashTable_of_String_and_Token____type_name,
  (void*) TokenReader__available,
  (void*) TokenReader__to_List,
  (void*) TokenReader__to_String,
  (void*) TokenReader__has_another,
  (void*) TokenReader__peek__Int32,
  (void*) TokenReader__read,
  NULL,
  (void*) TokenReader__init_object,
  (void*) TokenReader__type_name,
  (void*) TemplateReader__init__ArrayList_of_Token_HashTable_of_String_and_Token__,
  (void*) TemplateReader__prep_next,
  (void*) TemplateReader__init_object,
  (void*) TemplateReader__type_name,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__init__Token_MethodVarInfo_Cmd,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__create_duplicate,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__to_String,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__resolve,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__finalize_structure_info,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__write_etc,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__init_object,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__type_name,
  (void*) CmdLocalVarDivAndAssign__to_cpp,
  (void*) CmdLocalVarDivAndAssign__to_cs,
  (void*) CmdLocalVarDivAndAssign__to_java,
  (void*) CmdLocalVarDivAndAssign__init_object,
  (void*) CmdLocalVarDivAndAssign__type_name,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__create_reader,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__values,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_TypeInfo__init_object,
  (void*) HashTable_of_String_and_TypeInfo__type_name,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_TypeTemplate____init_object,
  (void*) HashTable_of_String_and_TypeTemplate____type_name,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_TypeTemplate__init_object,
  (void*) HashTable_of_String_and_TypeTemplate__type_name,
  (void*) HashTable_of_String_and_MethodGroup__init_object,
  (void*) HashTable_of_String_and_MethodGroup__type_name,
  (void*) Array_of_MethodGroup__create_duplicate,
  (void*) Array_of_MethodGroup__init_object,
  (void*) Array_of_MethodGroup__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_MethodGroup__to_String,
  (void*) ArrayList_of_MethodGroup__init,
  (void*) ArrayList_of_MethodGroup__init__Int32,
  (void*) ArrayList_of_MethodGroup__create_reader,
  (void*) ArrayList_of_MethodGroup__count,
  (void*) ArrayList_of_MethodGroup__modification_count,
  (void*) ArrayList_of_MethodGroup__ensure_count__Int32,
  (void*) ArrayList_of_MethodGroup__add__MethodGroup,
  (void*) ArrayList_of_MethodGroup__create_duplicate,
  (void*) ArrayList_of_MethodGroup__clear,
  (void*) ArrayList_of_MethodGroup__init_object,
  (void*) ArrayList_of_MethodGroup__type_name,
  (void*) StringTable__init,
  (void*) StringTable__create_reader,
  (void*) StringTable__get__String,
  (void*) StringTable__init_object,
  (void*) StringTable__type_name,
  (void*) TypeManager__init_singleton,
  (void*) TypeManager__store__TypeTemplate,
  (void*) TypeManager__store_framework__TypeTemplate,
  (void*) TypeManager__get__String_Token,
  (void*) TypeManager__get_type_reference__Token_String_TypeInfo,
  (void*) TypeManager__get_type_reference__Token_String_ArrayList_of_ArrayList_of_Token,
  (void*) TypeManager__define_type__TypeInfo,
  (void*) TypeManager__init_object,
  (void*) TypeManager__type_name,
  (void*) Array_of_Object__create_duplicate,
  (void*) Array_of_Object__init_object,
  (void*) Array_of_Object__type_name,
  (void*) SlagAnalyzer__init,
  (void*) SlagAnalyzer__analyze_parsed_types,
  (void*) SlagAnalyzer__collect_type__TypeInfo,
  (void*) SlagAnalyzer__store_general_augments,
  (void*) SlagAnalyzer__make_zero_value__Token_TypeInfo,
  (void*) SlagAnalyzer__visit_with_implicit_context__Cmd_TypeInfo,
  (void*) SlagAnalyzer__require_value__Cmd,
  (void*) SlagAnalyzer__require_value__Token_TypeInfo,
  (void*) SlagAnalyzer__require_reference__Token_TypeInfo,
  (void*) SlagAnalyzer__bad_value_mesg__Cmd_String_Token,
  (void*) SlagAnalyzer__bad_value_mesg__Token_TypeInfo_String,
  (void*) SlagAnalyzer__require_standard_numerical__Token_TypeInfo,
  (void*) SlagAnalyzer__require_standard_primitive__Token_TypeInfo,
  (void*) SlagAnalyzer__require_standard_integer__Cmd,
  (void*) SlagAnalyzer__require_standard_integer_or_logical__Token_TypeInfo,
  (void*) SlagAnalyzer__require_type__Cmd_TypeInfo,
  (void*) SlagAnalyzer__require_int32__Cmd,
  (void*) SlagAnalyzer__require_logical__Cmd_Token,
  (void*) SlagAnalyzer__type_is_standard_numerical__TypeInfo,
  (void*) SlagAnalyzer__cast_compatible__Cmd_TypeInfo,
  (void*) SlagAnalyzer__create_cast__Cmd_TypeInfo_Logical,
  (void*) SlagAnalyzer__cast_operands_to_standard_numerical__CmdBinary,
  (void*) SlagAnalyzer__cast_operands_to_standard_value_types__CmdBinary,
  (void*) SlagAnalyzer__cast_operands_to_standard_integer_or_logical__CmdBinary,
  (void*) SlagAnalyzer__determine_compatible_op_type__Token_Cmd_Cmd,
  (void*) SlagAnalyzer__determine_compatible_op_type__Token_TypeInfo_TypeInfo,
  (void*) SlagAnalyzer__prep_binary_operator__CmdBinary_String,
  (void*) SlagAnalyzer__operator_method_check__CmdBinary_String,
  (void*) SlagAnalyzer__create_property_get__Token_TypeInfo_Cmd_String,
  (void*) SlagAnalyzer__create_property_set__Token_TypeInfo_Cmd_String_Cmd,
  (void*) SlagAnalyzer__resolve_call__Token_TypeInfo_Cmd_String_CmdList,
  (void*) SlagAnalyzer__create_call_signature__CmdList,
  (void*) SlagAnalyzer__other_method_closer_precision__MethodInfo_CmdList_ArrayList_of_MethodInfo,
  (void*) SlagAnalyzer__other_method_improves_precision__MethodInfo_CmdList_ArrayList_of_MethodInfo,
  (void*) SlagAnalyzer__other_method_improves_references__MethodInfo_CmdList_ArrayList_of_MethodInfo,
  (void*) SlagAnalyzer__find_common_element_type__Token_TypeInfo_TypeInfo,
  (void*) SlagAnalyzer__determine_common_data_type__TypeInfo_TypeInfo,
  (void*) SlagAnalyzer__find_common_element_type__Token_ArrayList_of_Cmd,
  (void*) SlagAnalyzer__assemble_list__Token_TypeInfo_ArrayList_of_Cmd_Int32,
  (void*) SlagAnalyzer__init_object,
  (void*) SlagAnalyzer__type_name,
  NULL,
  NULL,
  NULL,
  (void*) CmdPrimitiveCast__resolve,
  (void*) CmdPrimitiveCast__init_object,
  (void*) CmdPrimitiveCast__type_name,
  (void*) CmdCastToInt64__create_duplicate,
  (void*) CmdCastToInt64__type,
  (void*) CmdCastToInt64__optimize,
  (void*) CmdCastToInt64__write_etc,
  (void*) CmdCastToInt64__statement_to_cpp,
  (void*) CmdCastToInt64__to_cpp,
  (void*) CmdCastToInt64__statement_to_cs,
  (void*) CmdCastToInt64__to_cs,
  (void*) CmdCastToInt64__statement_to_java,
  (void*) CmdCastToInt64__to_java,
  (void*) CmdCastToInt64__init_object,
  (void*) CmdCastToInt64__type_name,
  (void*) CmdRangeLT__create_duplicate,
  (void*) CmdRangeLT__resolve,
  (void*) CmdRangeLT__init_object,
  (void*) CmdRangeLT__type_name,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__create_duplicate,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__resolve,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__optimize,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__write_etc,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_cpp,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_cs,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_java,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__init_object,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__type_name,
  (void*) HashTableMappingReader_of_Int32_and_Int32__available,
  (void*) HashTableMappingReader_of_Int32_and_Int32__to_List,
  (void*) HashTableMappingReader_of_Int32_and_Int32__to_String,
  (void*) HashTableMappingReader_of_Int32_and_Int32__init__Reader_of_HashTableBin_of_Int32_and_Int32,
  (void*) HashTableMappingReader_of_Int32_and_Int32__prep_next,
  (void*) HashTableMappingReader_of_Int32_and_Int32__has_another,
  (void*) HashTableMappingReader_of_Int32_and_Int32__read,
  (void*) HashTableMappingReader_of_Int32_and_Int32__init_object,
  (void*) HashTableMappingReader_of_Int32_and_Int32__type_name,
  NULL,
  NULL,
  (void*) MethodTableManager__init_object,
  (void*) MethodTableManager__type_name,
  NULL,
  NULL,
  (void*) CoerceReader_of_TypeTemplate____available,
  (void*) CoerceReader_of_TypeTemplate____to_List,
  (void*) CoerceReader_of_TypeTemplate____to_String,
  (void*) CoerceReader_of_TypeTemplate____init__Reader_of_Object,
  (void*) CoerceReader_of_TypeTemplate____has_another,
  (void*) CoerceReader_of_TypeTemplate____read,
  (void*) CoerceReader_of_TypeTemplate____init_object,
  (void*) CoerceReader_of_TypeTemplate____type_name,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__type_name,
  (void*) CmdCloseScope__init__Token,
  (void*) CmdCloseScope__create_duplicate,
  (void*) CmdCloseScope__resolve,
  (void*) CmdCloseScope__init_object,
  (void*) CmdCloseScope__type_name,
  (void*) Array_of_Mapping_of_Int32_and_Object__create_duplicate,
  (void*) Array_of_Mapping_of_Int32_and_Object__init_object,
  (void*) Array_of_Mapping_of_Int32_and_Object__type_name,
  NULL,
  NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__to_String,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__init,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__init__Int32,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__create_reader,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__count,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__modification_count,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__ensure_count__Int32,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__add__Mapping_of_Int32_and_Object,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__create_duplicate,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__clear,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__init_object,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__type_name,
  (void*) HashTableBin_of_Int32_and_Object__init__Int32,
  (void*) HashTableBin_of_Int32_and_Object__index_of_entry__Int32,
  (void*) HashTableBin_of_Int32_and_Object__find_entry__Int32,
  (void*) HashTableBin_of_Int32_and_Object__add_entry__Int32_Object,
  (void*) HashTableBin_of_Int32_and_Object__add_entry__Mapping_of_Int32_and_Object,
  (void*) HashTableBin_of_Int32_and_Object__to_String,
  (void*) HashTableBin_of_Int32_and_Object__init_object,
  (void*) HashTableBin_of_Int32_and_Object__type_name,
  (void*) FileError__init,
  (void*) FileError__init__String,
  (void*) FileError__init_object,
  (void*) FileError__type_name,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__create_duplicate,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__resolve,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__optimize,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__write_etc,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__init_object,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__type_name,
  NULL,
  NULL,
  (void*) ArrayReader_of_MethodGroup__to_List,
  (void*) ArrayReader_of_MethodGroup__to_String,
  (void*) ArrayReader_of_MethodGroup__init__Collection_of_MethodGroup_Array_of_MethodGroup_Int32_Int32,
  (void*) ArrayReader_of_MethodGroup__create_duplicate,
  (void*) ArrayReader_of_MethodGroup__has_another,
  (void*) ArrayReader_of_MethodGroup__remaining,
  (void*) ArrayReader_of_MethodGroup__read,
  (void*) ArrayReader_of_MethodGroup__init_object,
  (void*) ArrayReader_of_MethodGroup__type_name,
  (void*) CmdAssign__create_duplicate,
  (void*) CmdAssign__resolve,
  (void*) CmdAssign__init_object,
  (void*) CmdAssign__type_name,
  (void*) NullReferenceError__init,
  (void*) NullReferenceError__init__String,
  (void*) NullReferenceError__init_object,
  (void*) NullReferenceError__type_name,
  (void*) HashTable_of_Int32_and_Int32__init_object,
  (void*) HashTable_of_Int32_and_Int32__type_name,
  (void*) Array_of_HashTable_of_String_and_LocalVarInfo__create_duplicate,
  (void*) Array_of_HashTable_of_String_and_LocalVarInfo__init_object,
  (void*) Array_of_HashTable_of_String_and_LocalVarInfo__type_name,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__last,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__to_String,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__init,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__init__Int32,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__create_reader,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__count,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__modification_count,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__ensure_count__Int32,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__add__HashTable_of_String_and_LocalVarInfo,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__create_duplicate,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__clear,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__init_object,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) HashTableValueReader_of_Object_and_Object__available,
  (void*) HashTableValueReader_of_Object_and_Object__to_List,
  (void*) HashTableValueReader_of_Object_and_Object__to_String,
  (void*) HashTableValueReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object,
  (void*) HashTableValueReader_of_Object_and_Object__prep_next,
  (void*) HashTableValueReader_of_Object_and_Object__has_another,
  (void*) HashTableValueReader_of_Object_and_Object__read,
  (void*) HashTableValueReader_of_Object_and_Object__init_object,
  (void*) HashTableValueReader_of_Object_and_Object__type_name,
  (void*) InvalidStateError__init,
  (void*) InvalidStateError__init__String,
  (void*) InvalidStateError__init_object,
  (void*) InvalidStateError__type_name,
  (void*) CmdCmpIs__create_duplicate,
  (void*) CmdCmpIs__resolve,
  (void*) CmdCmpIs__write_etc,
  (void*) CmdCmpIs__to_cpp,
  (void*) CmdCmpIs__to_cs,
  (void*) CmdCmpIs__to_java,
  (void*) CmdCmpIs__init_object,
  (void*) CmdCmpIs__type_name,
  (void*) ArrayList_of_SlagFile__to_String,
  (void*) ArrayList_of_SlagFile__init,
  (void*) ArrayList_of_SlagFile__init__Int32,
  (void*) ArrayList_of_SlagFile__create_reader,
  (void*) ArrayList_of_SlagFile__count,
  (void*) ArrayList_of_SlagFile__modification_count,
  (void*) ArrayList_of_SlagFile__ensure_count__Int32,
  (void*) ArrayList_of_SlagFile__add__SlagFile,
  (void*) ArrayList_of_SlagFile__create_duplicate,
  (void*) ArrayList_of_SlagFile__clear,
  (void*) ArrayList_of_SlagFile__init_object,
  (void*) ArrayList_of_SlagFile__type_name,
  (void*) CmdContextCall__init__Token_Cmd_MethodInfo_CmdList,
  (void*) CmdContextCall__resolve,
  (void*) CmdContextCall__finalize_structure_info,
  (void*) CmdContextCall__group_dynamic_methods,
  (void*) CmdContextCall__to_inline__CmdList,
  (void*) CmdContextCall__init_object,
  (void*) CmdContextCall__type_name,
  (void*) CmdStaticCall__create_duplicate,
  (void*) CmdStaticCall__to_String,
  (void*) CmdStaticCall__resolve,
  (void*) CmdStaticCall__finalize_calls,
  (void*) CmdStaticCall__inline_check,
  (void*) CmdStaticCall__write_etc,
  (void*) CmdStaticCall__statement_to_cpp,
  (void*) CmdStaticCall__to_cpp,
  (void*) CmdStaticCall__to_cpp__Logical,
  (void*) CmdStaticCall__statement_to_cs,
  (void*) CmdStaticCall__to_cs,
  (void*) CmdStaticCall__to_cs__Logical,
  (void*) CmdStaticCall__statement_to_java,
  (void*) CmdStaticCall__to_java,
  (void*) CmdStaticCall__to_java__Logical,
  (void*) CmdStaticCall__init_object,
  (void*) CmdStaticCall__type_name,
  (void*) Mapping_of_String_and_MethodInfo____to_String,
  (void*) Mapping_of_String_and_MethodInfo____init_object,
  (void*) Mapping_of_String_and_MethodInfo____type_name,
  NULL,
  NULL,
  (void*) Array_of_CmdWhichCase__create_duplicate,
  (void*) Array_of_CmdWhichCase__init_object,
  (void*) Array_of_CmdWhichCase__type_name,
  NULL,
  NULL,
  (void*) ArrayReader_of_CmdWhichCase__to_List,
  (void*) ArrayReader_of_CmdWhichCase__to_String,
  (void*) ArrayReader_of_CmdWhichCase__init__Collection_of_CmdWhichCase_Array_of_CmdWhichCase_Int32_Int32,
  (void*) ArrayReader_of_CmdWhichCase__create_duplicate,
  (void*) ArrayReader_of_CmdWhichCase__has_another,
  (void*) ArrayReader_of_CmdWhichCase__remaining,
  (void*) ArrayReader_of_CmdWhichCase__read,
  (void*) ArrayReader_of_CmdWhichCase__init_object,
  (void*) ArrayReader_of_CmdWhichCase__type_name,
  (void*) Array_of_Qualifiers__create_duplicate,
  (void*) Array_of_Qualifiers__init_object,
  (void*) Array_of_Qualifiers__type_name,
  (void*) Array_of_CmdElseIf__create_duplicate,
  (void*) Array_of_CmdElseIf__init_object,
  (void*) Array_of_CmdElseIf__type_name,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_CmdElseIf__discard_from__Int32,
  (void*) ArrayList_of_CmdElseIf__to_String,
  (void*) ArrayList_of_CmdElseIf__init,
  (void*) ArrayList_of_CmdElseIf__init__Int32,
  (void*) ArrayList_of_CmdElseIf__create_reader,
  (void*) ArrayList_of_CmdElseIf__count,
  (void*) ArrayList_of_CmdElseIf__modification_count,
  (void*) ArrayList_of_CmdElseIf__ensure_count__Int32,
  (void*) ArrayList_of_CmdElseIf__add__CmdElseIf,
  (void*) ArrayList_of_CmdElseIf__create_duplicate,
  (void*) ArrayList_of_CmdElseIf__clear,
  (void*) ArrayList_of_CmdElseIf__init_object,
  (void*) ArrayList_of_CmdElseIf__type_name,
  (void*) Array_of_Mapping_of_String_and_SignalHandler__create_duplicate,
  (void*) Array_of_Mapping_of_String_and_SignalHandler__init_object,
  (void*) Array_of_Mapping_of_String_and_SignalHandler__type_name,
  (void*) ReferenceTable_of_String_and_SignalHandler__init__Int32,
  (void*) ReferenceTable_of_String_and_SignalHandler__set__String_SignalHandler,
  (void*) ReferenceTable_of_String_and_SignalHandler__get__String,
  (void*) ReferenceTable_of_String_and_SignalHandler__find_key__String,
  (void*) ReferenceTable_of_String_and_SignalHandler__remove__String,
  (void*) ReferenceTable_of_String_and_SignalHandler__init_object,
  (void*) ReferenceTable_of_String_and_SignalHandler__type_name,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__to_List,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__to_String,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__init__Collection_of_HashTableBin_of_Object_and_Object_Array_of_HashTableBin_of_Object_and_Object_Int32_Int32,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__create_duplicate,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__has_another,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__remaining,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__read,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__init_object,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__type_name,
  (void*) Mapping_of_String_and_Token____to_String,
  (void*) Mapping_of_String_and_Token____init_object,
  (void*) Mapping_of_String_and_Token____type_name,
  (void*) CmdCmpInstanceOf__init__Token_Cmd_TypeInfo,
  (void*) CmdCmpInstanceOf__create_duplicate,
  (void*) CmdCmpInstanceOf__type,
  (void*) CmdCmpInstanceOf__to_String,
  (void*) CmdCmpInstanceOf__resolve,
  (void*) CmdCmpInstanceOf__write_etc,
  (void*) CmdCmpInstanceOf__to_cpp,
  (void*) CmdCmpInstanceOf__to_cs,
  (void*) CmdCmpInstanceOf__to_java,
  (void*) CmdCmpInstanceOf__init_object,
  (void*) CmdCmpInstanceOf__type_name,
  (void*) Array_of_ArrayList_of_TypeTemplate__create_duplicate,
  (void*) Array_of_ArrayList_of_TypeTemplate__init_object,
  (void*) Array_of_ArrayList_of_TypeTemplate__type_name,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__to_String,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__init,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__init__Int32,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__ensure_count__Int32,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__add__ArrayList_of_TypeTemplate,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__create_duplicate,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__clear,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__init_object,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__type_name,
  (void*) ArrayReader_of_Token__to_List,
  (void*) ArrayReader_of_Token__to_String,
  (void*) ArrayReader_of_Token__init__Collection_of_Token_Array_of_Token_Int32_Int32,
  (void*) ArrayReader_of_Token__create_duplicate,
  (void*) ArrayReader_of_Token__has_another,
  (void*) ArrayReader_of_Token__remaining,
  (void*) ArrayReader_of_Token__read,
  (void*) ArrayReader_of_Token__init_object,
  (void*) ArrayReader_of_Token__type_name,
  NULL,
  NULL,
  (void*) CmdLocalVarAccess__to_String,
  (void*) CmdLocalVarAccess__resolve,
  (void*) CmdLocalVarAccess__finalize_calls,
  (void*) CmdLocalVarAccess__finalize_structure_info,
  (void*) CmdLocalVarAccess__group_dynamic_methods,
  (void*) CmdLocalVarAccess__to_inline__CmdList,
  (void*) CmdLocalVarAccess__init_object,
  (void*) CmdLocalVarAccess__type_name,
  (void*) CmdLocalVarWrite__init__Token_MethodVarInfo_Cmd,
  (void*) CmdLocalVarWrite__create_duplicate,
  (void*) CmdLocalVarWrite__to_String,
  (void*) CmdLocalVarWrite__resolve,
  (void*) CmdLocalVarWrite__optimize,
  (void*) CmdLocalVarWrite__finalize_calls,
  (void*) CmdLocalVarWrite__finalize_structure_info,
  (void*) CmdLocalVarWrite__group_dynamic_methods,
  (void*) CmdLocalVarWrite__to_inline__CmdList,
  (void*) CmdLocalVarWrite__write_etc,
  (void*) CmdLocalVarWrite__to_cpp,
  (void*) CmdLocalVarWrite__to_cs,
  (void*) CmdLocalVarWrite__to_java,
  (void*) CmdLocalVarWrite__init_object,
  (void*) CmdLocalVarWrite__type_name,
  (void*) ArrayReader_of_Int64__to_List,
  (void*) ArrayReader_of_Int64__to_String,
  (void*) ArrayReader_of_Int64__init__Collection_of_Int64_Array_of_Int64_Int32_Int32,
  (void*) ArrayReader_of_Int64__create_duplicate,
  (void*) ArrayReader_of_Int64__has_another,
  (void*) ArrayReader_of_Int64__remaining,
  (void*) ArrayReader_of_Int64__read,
  (void*) ArrayReader_of_Int64__init_object,
  (void*) ArrayReader_of_Int64__type_name,
  (void*) BigInt__init__Int64,
  (void*) BigInt__init__Int32,
  (void*) BigInt__init__String_Int32,
  (void*) BigInt__init__BigInt,
  (void*) BigInt__init,
  (void*) BigInt__left_shifted__Int32,
  (void*) BigInt__right_shifted__Int32,
  (void*) BigInt__normalized,
  (void*) BigInt__to_String__Int32,
  (void*) BigInt__to_String,
  (void*) BigInt__internal_to_Int64,
  (void*) BigInt__is_valid_Int32,
  (void*) BigInt__is_valid_Int64,
  (void*) BigInt__to_Int32,
  (void*) BigInt__to_Int64,
  (void*) BigInt__is_zero,
  (void*) BigInt__opEQ__Object,
  (void*) BigInt__opEQ__BigInt,
  (void*) BigInt__opCMP__BigInt,
  (void*) BigInt__opSUB,
  (void*) BigInt__opADD__BigInt,
  (void*) BigInt__opSUB__BigInt,
  (void*) BigInt__opMUL__BigInt,
  (void*) BigInt__opDIV__BigInt,
  (void*) BigInt__opEXP__BigInt,
  (void*) BigInt__init_object,
  (void*) BigInt__type_name,
  (void*) ParamInfo__init__ArrayList_of_ParameterInfo,
  (void*) ParamInfo__init_object,
  (void*) ParamInfo__type_name,
  (void*) StructureType__init,
  (void*) StructureType__to_String,
  (void*) StructureType__opCMP__StructureType,
  (void*) StructureType__hash_code,
  (void*) StructureType__init__Logical,
  (void*) StructureType__init_object,
  (void*) StructureType__type_name,
  (void*) CmdInitialAssignment__init__Token_Cmd,
  (void*) CmdInitialAssignment__create_duplicate,
  (void*) CmdInitialAssignment__resolve,
  (void*) CmdInitialAssignment__init_object,
  (void*) CmdInitialAssignment__type_name,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__create_duplicate,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__resolve,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__optimize,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__write_etc,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__init_object,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__type_name,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__init__Token_PropertyInfo_Cmd,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__create_duplicate,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__to_String,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__resolve,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__finalize_structure_info,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__write_etc,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__init_object,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__type_name,
  (void*) CmdCmpIsNotNull__create_duplicate,
  (void*) CmdCmpIsNotNull__type,
  (void*) CmdCmpIsNotNull__resolve,
  (void*) CmdCmpIsNotNull__to_cpp,
  (void*) CmdCmpIsNotNull__to_java,
  (void*) CmdCmpIsNotNull__write_etc,
  (void*) CmdCmpIsNotNull__to_cs,
  (void*) CmdCmpIsNotNull__init_object,
  (void*) CmdCmpIsNotNull__type_name,
  (void*) CmdLiteralReal64__init__Token_Real64,
  (void*) CmdLiteralReal64__create_duplicate,
  (void*) CmdLiteralReal64__type,
  (void*) CmdLiteralReal64__to_String,
  (void*) CmdLiteralReal64__to_cpp,
  (void*) CmdLiteralReal64__to_cs,
  (void*) CmdLiteralReal64__to_java,
  (void*) CmdLiteralReal64__write_etc,
  (void*) CmdLiteralReal64__init_object,
  (void*) CmdLiteralReal64__type_name,
  (void*) CmdCastToReal64__create_duplicate,
  (void*) CmdCastToReal64__type,
  (void*) CmdCastToReal64__optimize,
  (void*) CmdCastToReal64__statement_to_java,
  (void*) CmdCastToReal64__to_java,
  (void*) CmdCastToReal64__write_etc,
  (void*) CmdCastToReal64__statement_to_cpp,
  (void*) CmdCastToReal64__to_cpp,
  (void*) CmdCastToReal64__statement_to_cs,
  (void*) CmdCastToReal64__to_cs,
  (void*) CmdCastToReal64__init_object,
  (void*) CmdCastToReal64__type_name,
  (void*) Array_of_StructureType__create_duplicate,
  (void*) Array_of_StructureType__init_object,
  (void*) Array_of_StructureType__type_name,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__to_List,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__to_String,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__init__Collection_of_Mapping_of_Int32_and_Int32_Array_of_Mapping_of_Int32_and_Int32_Int32_Int32,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__create_duplicate,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__has_another,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__remaining,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__read,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__init_object,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__type_name,
  (void*) CmdInitialConstructor__init__Token_CmdList,
  (void*) CmdInitialConstructor__create_duplicate,
  (void*) CmdInitialConstructor__resolve,
  (void*) CmdInitialConstructor__init_object,
  (void*) CmdInitialConstructor__type_name,
  (void*) RangeIteratorDescending_of_Int32__available,
  (void*) RangeIteratorDescending_of_Int32__to_List,
  (void*) RangeIteratorDescending_of_Int32__to_String,
  (void*) RangeIteratorDescending_of_Int32__init__Int32_Int32_Int32,
  (void*) RangeIteratorDescending_of_Int32__create_duplicate,
  (void*) RangeIteratorDescending_of_Int32__has_another,
  (void*) RangeIteratorDescending_of_Int32__read,
  (void*) RangeIteratorDescending_of_Int32__init_object,
  (void*) RangeIteratorDescending_of_Int32__type_name,
  NULL,
  NULL,
  (void*) Array_of_Signal__create_duplicate,
  (void*) Array_of_Signal__init_object,
  (void*) Array_of_Signal__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_Signal__add__Readable_of_Signal,
  (void*) ArrayList_of_Signal__transfer_from__List_of_Signal,
  (void*) ArrayList_of_Signal__to_String,
  (void*) ArrayList_of_Signal__init,
  (void*) ArrayList_of_Signal__init__Int32,
  (void*) ArrayList_of_Signal__create_reader,
  (void*) ArrayList_of_Signal__count,
  (void*) ArrayList_of_Signal__modification_count,
  (void*) ArrayList_of_Signal__ensure_count__Int32,
  (void*) ArrayList_of_Signal__add__Signal,
  (void*) ArrayList_of_Signal__create_duplicate,
  (void*) ArrayList_of_Signal__clear,
  (void*) ArrayList_of_Signal__init_object,
  (void*) ArrayList_of_Signal__type_name,
  (void*) Signal__init__String_Object,
  (void*) Signal__init_object,
  (void*) Signal__type_name,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_Byte__to_String,
  (void*) ArrayList_of_Byte__init,
  (void*) ArrayList_of_Byte__init__Int32,
  (void*) ArrayList_of_Byte__init__Array_of_Byte_Logical,
  (void*) ArrayList_of_Byte__ensure_capacity__Int32,
  (void*) ArrayList_of_Byte__ensure_count__Int32,
  (void*) ArrayList_of_Byte__add__Byte,
  (void*) ArrayList_of_Byte__create_duplicate,
  (void*) ArrayList_of_Byte__clear,
  (void*) ArrayList_of_Byte__init_object,
  (void*) ArrayList_of_Byte__type_name,
  (void*) CmdSingletonWrite__init__Token_TypeInfo_Cmd,
  (void*) CmdSingletonWrite__create_duplicate,
  (void*) CmdSingletonWrite__to_String,
  (void*) CmdSingletonWrite__resolve,
  (void*) CmdSingletonWrite__finalize_calls,
  (void*) CmdSingletonWrite__finalize_structure_info,
  (void*) CmdSingletonWrite__group_dynamic_methods,
  (void*) CmdSingletonWrite__to_inline__CmdList,
  (void*) CmdSingletonWrite__to_cs,
  (void*) CmdSingletonWrite__to_java,
  (void*) CmdSingletonWrite__write_etc,
  (void*) CmdSingletonWrite__to_cpp,
  (void*) CmdSingletonWrite__init_object,
  (void*) CmdSingletonWrite__type_name,
  NULL,
  NULL,
  (void*) ArrayReader_of_MethodInfo__to_List,
  (void*) ArrayReader_of_MethodInfo__to_String,
  (void*) ArrayReader_of_MethodInfo__init__Collection_of_MethodInfo_Array_of_MethodInfo_Int32_Int32,
  (void*) ArrayReader_of_MethodInfo__create_duplicate,
  (void*) ArrayReader_of_MethodInfo__has_another,
  (void*) ArrayReader_of_MethodInfo__remaining,
  (void*) ArrayReader_of_MethodInfo__read,
  (void*) ArrayReader_of_MethodInfo__init_object,
  (void*) ArrayReader_of_MethodInfo__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) LocalVarTable__init__MethodInfo,
  (void*) LocalVarTable__define__LocalVarInfo,
  (void*) LocalVarTable__get__String,
  (void*) LocalVarTable__init_object,
  (void*) LocalVarTable__type_name,
  NULL,
  (void*) HashSet_of_Int32__add__Int32,
  (void*) HashSet_of_Int32__create_reader,
  (void*) HashSet_of_Int32__init_object,
  (void*) HashSet_of_Int32__type_name,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__to_String,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__init,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__init__Int32,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__count,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__modification_count,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__ensure_count__Int32,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__add__HashTableBin_of_Int32_and_Object,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__create_duplicate,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__clear,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__init_object,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__type_name,
  (void*) GenericHashTable_of_Int32_and_Object__init,
  (void*) GenericHashTable_of_Int32_and_Object__init__Int32_Real64,
  (void*) GenericHashTable_of_Int32_and_Object__set__Int32_Object,
  (void*) GenericHashTable_of_Int32_and_Object__set__Mapping_of_Int32_and_Object,
  (void*) GenericHashTable_of_Int32_and_Object__get__Int32,
  (void*) GenericHashTable_of_Int32_and_Object__find__Int32,
  (void*) GenericHashTable_of_Int32_and_Object__get_bin__Int32,
  (void*) GenericHashTable_of_Int32_and_Object__add__GenericHashTable_of_Int32_and_Object,
  (void*) GenericHashTable_of_Int32_and_Object__expand_table,
  (void*) GenericHashTable_of_Int32_and_Object__to_String,
  (void*) GenericHashTable_of_Int32_and_Object__values,
  (void*) GenericHashTable_of_Int32_and_Object__init_object,
  (void*) GenericHashTable_of_Int32_and_Object__type_name,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__create_duplicate,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__to_String,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__create_reader,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init_object,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__type_name,
  (void*) HashTable_of_Int32_and_Cmd__init_object,
  (void*) HashTable_of_Int32_and_Cmd__type_name,
  (void*) ArrayList_of_Int32__last,
  (void*) ArrayList_of_Int32__add__Readable_of_Int32,
  (void*) ArrayList_of_Int32__remove_last,
  (void*) ArrayList_of_Int32__to_String,
  (void*) ArrayList_of_Int32__init,
  (void*) ArrayList_of_Int32__init__Int32,
  (void*) ArrayList_of_Int32__create_reader,
  (void*) ArrayList_of_Int32__count,
  (void*) ArrayList_of_Int32__modification_count,
  (void*) ArrayList_of_Int32__ensure_capacity__Int32,
  (void*) ArrayList_of_Int32__ensure_count__Int32,
  (void*) ArrayList_of_Int32__add__Int32,
  (void*) ArrayList_of_Int32__remove__Int32,
  (void*) ArrayList_of_Int32__discard_last,
  (void*) ArrayList_of_Int32__create_duplicate,
  (void*) ArrayList_of_Int32__clear,
  (void*) ArrayList_of_Int32__init_object,
  (void*) ArrayList_of_Int32__type_name,
  (void*) Context__init__TypeInfo_MethodInfo_Logical,
  (void*) Context__create_duplicate,
  (void*) Context__init_object,
  (void*) Context__type_name,
  (void*) Array_of_SlagError__create_duplicate,
  (void*) Array_of_SlagError__init_object,
  (void*) Array_of_SlagError__type_name,
  (void*) CPPWriter__write__String,
  (void*) CPPWriter__do_indent,
  (void*) CPPWriter__print__Char,
  (void*) CPPWriter__print__String,
  (void*) CPPWriter__print__Int32,
  (void*) CPPWriter__println__String,
  (void*) CPPWriter__println__Char,
  (void*) CPPWriter__println,
  (void*) CPPWriter__print_header__String,
  (void*) CPPWriter__assign_cross_compile_names,
  (void*) CPPWriter__print_compound_defs,
  (void*) CPPWriter__print_type_defs,
  (void*) CPPWriter__print_identifiers,
  (void*) CPPWriter__print_property_info,
  (void*) CPPWriter__print_type_info_defs,
  (void*) CPPWriter__print_base_type_index_table,
  (void*) CPPWriter__print_method_pointers,
  (void*) CPPWriter__print_method_info,
  (void*) CPPWriter__print_dispatch_table,
  (void*) CPPWriter__print_configuration_function,
  (void*) CPPWriter__print_miscellaneous,
  (void*) CPPWriter__print_literal_strings,
  (void*) CPPWriter__print_function_typedefs,
  (void*) CPPWriter__print_method_prototypes__Logical,
  (void*) CPPWriter__print_method_defs,
  (void*) CPPWriter__write_continue_id__CmdStructure,
  (void*) CPPWriter__write_end_id__CmdStructure,
  (void*) CPPWriter__native_call__MethodInfo_String_CmdList,
  (void*) CPPWriter__native_call__MethodInfo_String_ArrayList_of_String,
  (void*) CPPWriter__init_object,
  (void*) CPPWriter__type_name,
  (void*) NumberConversions__to_digit__Int32,
  (void*) NumberConversions__is_digit__Char_Int32,
  (void*) NumberConversions__to_value__Char,
  (void*) NumberConversions__Int64_to_String__Int64_Int32_Int32,
  (void*) NumberConversions__Real64_to_String__Real64_Int32_Int32_Int32_Char,
  (void*) NumberConversions__parse_Int64__String_Int32,
  (void*) NumberConversions__parse_Int32__String_Int32,
  (void*) NumberConversions__parse_Real64__String,
  (void*) NumberConversions__init_object,
  (void*) NumberConversions__type_name,
  (void*) ArrayReader_of_LocalVarInfo__to_List,
  (void*) ArrayReader_of_LocalVarInfo__to_String,
  (void*) ArrayReader_of_LocalVarInfo__init__Collection_of_LocalVarInfo_Array_of_LocalVarInfo_Int32_Int32,
  (void*) ArrayReader_of_LocalVarInfo__create_duplicate,
  (void*) ArrayReader_of_LocalVarInfo__has_another,
  (void*) ArrayReader_of_LocalVarInfo__remaining,
  (void*) ArrayReader_of_LocalVarInfo__read,
  (void*) ArrayReader_of_LocalVarInfo__init_object,
  (void*) ArrayReader_of_LocalVarInfo__type_name,
  (void*) CmdRightXShifted__to_cpp,
  (void*) CmdRightXShifted__to_cs,
  (void*) CmdRightXShifted__to_java,
  (void*) CmdRightXShifted__init_object,
  (void*) CmdRightXShifted__type_name,
  (void*) CategoryInfo__init__CmdConstruct,
  (void*) CategoryInfo__init_object,
  (void*) CategoryInfo__type_name,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init__Token_PropertyInfo,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__create_duplicate,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__to_String,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__resolve,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__finalize_structure_info,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__write_etc,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init_object,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__type_name,
  (void*) CmdThisPropertyIncrement__to_cpp,
  (void*) CmdThisPropertyIncrement__to_cs,
  (void*) CmdThisPropertyIncrement__to_java,
  (void*) CmdThisPropertyIncrement__init_object,
  (void*) CmdThisPropertyIncrement__type_name,
  NULL,
  NULL,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_RuntimeType__init_object,
  (void*) HashTable_of_String_and_RuntimeType__type_name,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__create_duplicate,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__resolve,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__optimize,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__write_etc,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_cpp,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_cs,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_java,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__init_object,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__type_name,
  (void*) CmdMod__optimize,
  (void*) CmdMod__init_object,
  (void*) CmdMod__type_name,
  (void*) BitWriter__init__Writer_of_Char,
  (void*) BitWriter__write__Char,
  (void*) BitWriter__write__Int32_Int32,
  (void*) BitWriter__write_Int64__Int64,
  (void*) BitWriter__init_object,
  (void*) BitWriter__type_name,
  (void*) ETCWriter__write__Writer_of_Char,
  (void*) ETCWriter__write_header__String,
  (void*) ETCWriter__write_type_meta__TypeInfo,
  (void*) ETCWriter__write_param_info__ParamInfo,
  (void*) ETCWriter__write_method_meta__MethodInfo,
  (void*) ETCWriter__write_type_def__TypeInfo,
  (void*) ETCWriter__write_method_body__MethodInfo,
  (void*) ETCWriter__writeX__Int32,
  (void*) ETCWriter__write_utf8__String,
  (void*) ETCWriter__string_to_utf8__String,
  (void*) ETCWriter__write_source_position__Token,
  (void*) ETCWriter__write_structure_id__CmdStructure,
  (void*) ETCWriter__init_object,
  (void*) ETCWriter__type_name,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__init,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__create_duplicate,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__to_String,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__create_reader,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__init_object,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__type_name,
  (void*) HashTable_of_Int32_and_String__init_object,
  (void*) HashTable_of_Int32_and_String__type_name,
  (void*) TypeMapping__to_String,
  (void*) TypeMapping__init_object,
  (void*) TypeMapping__type_name,
  NULL,
  NULL,
  (void*) CoerceReader_of_String__available,
  (void*) CoerceReader_of_String__to_List,
  (void*) CoerceReader_of_String__to_String,
  (void*) CoerceReader_of_String__init__Reader_of_Object,
  (void*) CoerceReader_of_String__has_another,
  (void*) CoerceReader_of_String__read,
  (void*) CoerceReader_of_String__init_object,
  (void*) CoerceReader_of_String__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) NoNextValueError__init,
  (void*) NoNextValueError__init__String,
  (void*) NoNextValueError__init_object,
  (void*) NoNextValueError__type_name,
  (void*) Mapping_of_Object_and_Int32__init__Object_Int32,
  (void*) Mapping_of_Object_and_Int32__to_String,
  (void*) Mapping_of_Object_and_Int32__init_object,
  (void*) Mapping_of_Object_and_Int32__type_name,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__create_duplicate,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__resolve,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__optimize,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__write_etc,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cpp,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cs,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_java,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__init_object,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__type_name,
  (void*) CoerceReader_of_MethodInfo__available,
  (void*) CoerceReader_of_MethodInfo__to_List,
  (void*) CoerceReader_of_MethodInfo__to_String,
  (void*) CoerceReader_of_MethodInfo__init__Reader_of_Object,
  (void*) CoerceReader_of_MethodInfo__has_another,
  (void*) CoerceReader_of_MethodInfo__read,
  (void*) CoerceReader_of_MethodInfo__init_object,
  (void*) CoerceReader_of_MethodInfo__type_name,
  (void*) Mapping_of_String_and_String__to_String,
  (void*) Mapping_of_String_and_String__init_object,
  (void*) Mapping_of_String_and_String__type_name,
  (void*) CmdIf__init__Token_Int32_Cmd,
  (void*) CmdIf__init__Token_Int32_Cmd_CmdStatementList,
  (void*) CmdIf__create_duplicate,
  (void*) CmdIf__to_String,
  (void*) CmdIf__resolve,
  (void*) CmdIf__optimize,
  (void*) CmdIf__finalize_calls,
  (void*) CmdIf__finalize_structure_info,
  (void*) CmdIf__group_dynamic_methods,
  (void*) CmdIf__to_inline__CmdList,
  (void*) CmdIf__write_etc,
  (void*) CmdIf__to_cpp,
  (void*) CmdIf__to_cs,
  (void*) CmdIf__to_java,
  (void*) CmdIf__init_object,
  (void*) CmdIf__type_name,
  (void*) CmdRemoveCurrent__init__Token_Int32,
  (void*) CmdRemoveCurrent__create_duplicate,
  (void*) CmdRemoveCurrent__resolve,
  (void*) CmdRemoveCurrent__init_object,
  (void*) CmdRemoveCurrent__type_name,
  (void*) File__init__String,
  (void*)(SlagLogical(*)(SXCRef)) File__exists,
  (void*)(SlagLogical(*)(SXCRef)) File__is_directory,
  (void*) File__path,
  (void*) File__filename,
  (void*) File__to_String,
  (void*)(SlagObject*(*)(SXCRef)) File__absolute_filepath,
  (void*) File__directory_listing,
  (void*)(void(*)(SXCRef,SXCRef)) File__directory_listing__ArrayList_of_String,
  (void*) File__directory_listing__Int32,
  (void*) File__init_object,
  (void*) File__type_name,
  (void*) SlagCompiler__print_usage,
  (void*) SlagCompiler__init,
  (void*) SlagCompiler__process_args,
  (void*) SlagCompiler__set_dest_path__String,
  (void*) SlagCompiler__compile__String,
  (void*) SlagCompiler__find_file__String,
  (void*) SlagCompiler__init_object,
  (void*) SlagCompiler__type_name,
  (void*) ArrayReader_of_PropertyInfo__to_List,
  (void*) ArrayReader_of_PropertyInfo__to_String,
  (void*) ArrayReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo_Int32_Int32,
  (void*) ArrayReader_of_PropertyInfo__create_duplicate,
  (void*) ArrayReader_of_PropertyInfo__has_another,
  (void*) ArrayReader_of_PropertyInfo__remaining,
  (void*) ArrayReader_of_PropertyInfo__read,
  (void*) ArrayReader_of_PropertyInfo__init_object,
  (void*) ArrayReader_of_PropertyInfo__type_name,
  (void*) Array_of_ControlStructureInfo__create_duplicate,
  (void*) Array_of_ControlStructureInfo__init_object,
  (void*) Array_of_ControlStructureInfo__type_name,
  (void*) ArrayReader_of_ControlStructureInfo__to_List,
  (void*) ArrayReader_of_ControlStructureInfo__to_String,
  (void*) ArrayReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo_Int32_Int32,
  (void*) ArrayReader_of_ControlStructureInfo__create_duplicate,
  (void*) ArrayReader_of_ControlStructureInfo__has_another,
  (void*) ArrayReader_of_ControlStructureInfo__remaining,
  (void*) ArrayReader_of_ControlStructureInfo__read,
  (void*) ArrayReader_of_ControlStructureInfo__init_object,
  (void*) ArrayReader_of_ControlStructureInfo__type_name,
  (void*) CmdNot__create_duplicate,
  (void*) CmdNot__resolve,
  (void*) CmdNot__write_etc,
  (void*) CmdNot__to_cpp,
  (void*) CmdNot__to_cs,
  (void*) CmdNot__to_java,
  (void*) CmdNot__init_object,
  (void*) CmdNot__type_name,
  (void*) BitwiseOperations__left_rotated__Int32_Int32,
  (void*) BitwiseOperations__right_rotated__Int32_Int32,
  (void*) BitwiseOperations__is_power_of_two__Int64,
  (void*) BitwiseOperations__is_power_of_two__Int32,
  (void*) BitwiseOperations__min_bits__Int64,
  (void*) BitwiseOperations__min_bits__Int32,
  (void*) BitwiseOperations__rounded_up_to_power_of_two__Int32,
  (void*) BitwiseOperations__init_object,
  (void*) BitwiseOperations__type_name,
  (void*) CmdXor__init_object,
  (void*) CmdXor__type_name,
  NULL,
  NULL,
  (void*) CmdDuplicate__create_duplicate,
  (void*) CmdDuplicate__resolve,
  (void*) CmdDuplicate__init_object,
  (void*) CmdDuplicate__type_name,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__init__Token_PropertyInfo_Cmd,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__create_duplicate,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__to_String,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__resolve,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__finalize_structure_info,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__write_etc,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__init_object,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__type_name,
  (void*) CmdThisPropertyModAndAssign__to_cpp,
  (void*) CmdThisPropertyModAndAssign__to_cs,
  (void*) CmdThisPropertyModAndAssign__to_java,
  (void*) CmdThisPropertyModAndAssign__init_object,
  (void*) CmdThisPropertyModAndAssign__type_name,
  (void*) CmdLiteralInt32__init__Token_Int32,
  (void*) CmdLiteralInt32__create_duplicate,
  (void*) CmdLiteralInt32__type,
  (void*) CmdLiteralInt32__to_String,
  (void*) CmdLiteralInt32__write_etc,
  (void*) CmdLiteralInt32__to_cpp,
  (void*) CmdLiteralInt32__to_cs,
  (void*) CmdLiteralInt32__to_java,
  (void*) CmdLiteralInt32__init_object,
  (void*) CmdLiteralInt32__type_name,
  (void*) CmdCmpNE__to_cpp,
  (void*) CmdCmpNE__to_cs,
  (void*) CmdCmpNE__to_java,
  (void*) CmdCmpNE__init_object,
  (void*) CmdCmpNE__type_name,
  NULL,
  (void*) SpecializedComparator_2167__init,
  (void*) SpecializedComparator_2167__a_before_b__MethodInfo_MethodInfo,
  (void*) SpecializedComparator_2167__init_object,
  (void*) SpecializedComparator_2167__type_name,
  (void*) ArrayList_of_CmdWhichCase__to_String,
  (void*) ArrayList_of_CmdWhichCase__init,
  (void*) ArrayList_of_CmdWhichCase__init__Int32,
  (void*) ArrayList_of_CmdWhichCase__create_reader,
  (void*) ArrayList_of_CmdWhichCase__count,
  (void*) ArrayList_of_CmdWhichCase__modification_count,
  (void*) ArrayList_of_CmdWhichCase__ensure_count__Int32,
  (void*) ArrayList_of_CmdWhichCase__add__CmdWhichCase,
  (void*) ArrayList_of_CmdWhichCase__create_duplicate,
  (void*) ArrayList_of_CmdWhichCase__clear,
  (void*) ArrayList_of_CmdWhichCase__init_object,
  (void*) ArrayList_of_CmdWhichCase__type_name,
  (void*) CmdWhich__init__Token_Int32_Cmd_Logical,
  (void*) CmdWhich__create_duplicate,
  (void*) CmdWhich__to_String,
  (void*) CmdWhich__resolve,
  (void*) CmdWhich__init_object,
  (void*) CmdWhich__type_name,
  (void*) CmdAs__init__Token_Cmd_TypeInfo,
  (void*) CmdAs__create_duplicate,
  (void*) CmdAs__type,
  (void*) CmdAs__to_String,
  (void*) CmdAs__resolve,
  (void*) CmdAs__write_etc,
  (void*) CmdAs__statement_to_cpp,
  (void*) CmdAs__to_cpp,
  (void*) CmdAs__statement_to_cs,
  (void*) CmdAs__to_cs,
  (void*) CmdAs__statement_to_java,
  (void*) CmdAs__to_java,
  (void*) CmdAs__init_object,
  (void*) CmdAs__type_name,
  (void*) CmdArrayDuplicate__init__Token_Cmd,
  (void*) CmdArrayDuplicate__create_duplicate,
  (void*) CmdArrayDuplicate__type,
  (void*) CmdArrayDuplicate__to_String,
  (void*) CmdArrayDuplicate__resolve,
  (void*) CmdArrayDuplicate__finalize_calls,
  (void*) CmdArrayDuplicate__finalize_structure_info,
  (void*) CmdArrayDuplicate__group_dynamic_methods,
  (void*) CmdArrayDuplicate__to_inline__CmdList,
  (void*) CmdArrayDuplicate__write_etc,
  (void*) CmdArrayDuplicate__to_cpp,
  (void*) CmdArrayDuplicate__to_cs,
  (void*) CmdArrayDuplicate__to_java,
  (void*) CmdArrayDuplicate__init_object,
  (void*) CmdArrayDuplicate__type_name,
  (void*) CmdLiteralByte__init__Token_Byte,
  (void*) CmdLiteralByte__create_duplicate,
  (void*) CmdLiteralByte__type,
  (void*) CmdLiteralByte__to_String,
  (void*) CmdLiteralByte__write_etc,
  (void*) CmdLiteralByte__to_cpp,
  (void*) CmdLiteralByte__to_cs,
  (void*) CmdLiteralByte__to_java,
  (void*) CmdLiteralByte__init_object,
  (void*) CmdLiteralByte__type_name,
  (void*) CmdCastToByte__create_duplicate,
  (void*) CmdCastToByte__type,
  (void*) CmdCastToByte__optimize,
  (void*) CmdCastToByte__write_etc,
  (void*) CmdCastToByte__statement_to_cpp,
  (void*) CmdCastToByte__to_cpp,
  (void*) CmdCastToByte__statement_to_cs,
  (void*) CmdCastToByte__to_cs,
  (void*) CmdCastToByte__statement_to_java,
  (void*) CmdCastToByte__to_java,
  (void*) CmdCastToByte__init_object,
  (void*) CmdCastToByte__type_name,
  (void*) CmdReturnNil__init__Token_Logical,
  (void*) CmdReturnNil__create_duplicate,
  (void*) CmdReturnNil__resolve,
  (void*) CmdReturnNil__write_etc,
  (void*) CmdReturnNil__to_cpp,
  (void*) CmdReturnNil__to_cs,
  (void*) CmdReturnNil__to_java,
  (void*) CmdReturnNil__init_object,
  (void*) CmdReturnNil__type_name,
  (void*) FileManager__path_separator,
  (void*) FileManager__directory_separator,
  (void*) FileManager__init_object,
  (void*) FileManager__type_name,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__to_List,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__to_String,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__init__Collection_of_Mapping_of_Int32_and_Object_Array_of_Mapping_of_Int32_and_Object_Int32_Int32,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__create_duplicate,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__has_another,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__remaining,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__read,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__init_object,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__type_name,
  (void*) Mapping_of_String_and_SignalHandler__init__String_SignalHandler,
  (void*) Mapping_of_String_and_SignalHandler__to_String,
  (void*) Mapping_of_String_and_SignalHandler__init_object,
  (void*) Mapping_of_String_and_SignalHandler__type_name,
  NULL,
  (void*)(void(*)(SXCRef)) NativeData__clean_up,
  (void*) NativeData__init_object,
  (void*) NativeData__type_name,
  (void*) CmdThrow__init__Token_Cmd,
  (void*) CmdThrow__create_duplicate,
  (void*) CmdThrow__to_String,
  (void*) CmdThrow__resolve,
  (void*) CmdThrow__finalize_calls,
  (void*) CmdThrow__finalize_structure_info,
  (void*) CmdThrow__to_inline__CmdList,
  (void*) CmdThrow__write_etc,
  (void*) CmdThrow__to_cpp,
  (void*) CmdThrow__to_cs,
  (void*) CmdThrow__to_java,
  (void*) CmdThrow__init_object,
  (void*) CmdThrow__type_name,
  (void*) NoSuchElementError__init,
  (void*) NoSuchElementError__init__String,
  (void*) NoSuchElementError__init_object,
  (void*) NoSuchElementError__type_name,
  (void*) CmdAssignNewObject__init__Token_LocalVarInfo_CmdInitialConstructor,
  (void*) CmdAssignNewObject__create_duplicate,
  (void*) CmdAssignNewObject__resolve,
  (void*) CmdAssignNewObject__init_object,
  (void*) CmdAssignNewObject__type_name,
  (void*) SocketError__init,
  (void*) SocketError__init__String,
  (void*) SocketError__init_object,
  (void*) SocketError__type_name,
  (void*) CmdCastToInt32__create_duplicate,
  (void*) CmdCastToInt32__type,
  (void*) CmdCastToInt32__optimize,
  (void*) CmdCastToInt32__write_etc,
  (void*) CmdCastToInt32__statement_to_cpp,
  (void*) CmdCastToInt32__to_cpp,
  (void*) CmdCastToInt32__statement_to_cs,
  (void*) CmdCastToInt32__to_cs,
  (void*) CmdCastToInt32__statement_to_java,
  (void*) CmdCastToInt32__to_java,
  (void*) CmdCastToInt32__init_object,
  (void*) CmdCastToInt32__type_name,
  (void*) Mapping_of_String_and_TypeInfo__to_String,
  (void*) Mapping_of_String_and_TypeInfo__init_object,
  (void*) Mapping_of_String_and_TypeInfo__type_name,
  (void*) CmdWhichCase__init__Token,
  (void*) CmdWhichCase__create_duplicate,
  (void*) CmdWhichCase__to_String,
  (void*) CmdWhichCase__resolve,
  (void*) CmdWhichCase__init_object,
  (void*) CmdWhichCase__type_name,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__create_duplicate,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__resolve,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__optimize,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__write_etc,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__init_object,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__type_name,
  (void*) SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__init__SignalHandler,
  (void*) SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__init_object,
  (void*) SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__type_name,
  (void*) CmdUnresolvedNewObject__init__Token_TypeInfo_CmdList,
  (void*) CmdUnresolvedNewObject__create_duplicate,
  (void*) CmdUnresolvedNewObject__resolve,
  (void*) CmdUnresolvedNewObject__init_object,
  (void*) CmdUnresolvedNewObject__type_name,
  (void*) ArrayReader_of_ParameterInfo__to_List,
  (void*) ArrayReader_of_ParameterInfo__to_String,
  (void*) ArrayReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo_Int32_Int32,
  (void*) ArrayReader_of_ParameterInfo__create_duplicate,
  (void*) ArrayReader_of_ParameterInfo__has_another,
  (void*) ArrayReader_of_ParameterInfo__remaining,
  (void*) ArrayReader_of_ParameterInfo__read,
  (void*) ArrayReader_of_ParameterInfo__init_object,
  (void*) ArrayReader_of_ParameterInfo__type_name,
  (void*) HeapSort_of_MethodInfo__sort__ArrayList_of_MethodInfo_Comparator_of_MethodInfo,
  (void*) HeapSort_of_MethodInfo__init_object,
  (void*) HeapSort_of_MethodInfo__type_name,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__create_duplicate,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__resolve,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__optimize,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__write_etc,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_cpp,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_cs,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_java,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__init_object,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__type_name,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__create_duplicate,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__to_String,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init_object,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__type_name,
  (void*) HashTable_of_Int32_and_KeywordPairing__init_object,
  (void*) HashTable_of_Int32_and_KeywordPairing__type_name,
  NULL,
  NULL,
  NULL,
  (void*) ArrayList_of_Object__to_String,
  (void*) ArrayList_of_Object__init,
  (void*) ArrayList_of_Object__init__Int32,
  (void*) ArrayList_of_Object__ensure_capacity__Int32,
  (void*) ArrayList_of_Object__ensure_count__Int32,
  (void*) ArrayList_of_Object__add__Object,
  (void*) ArrayList_of_Object__insert__Object_Int32,
  (void*) ArrayList_of_Object__remove__Int32,
  (void*) ArrayList_of_Object__discard__Int32_Int32,
  (void*) ArrayList_of_Object__discard_last,
  (void*) ArrayList_of_Object__trim_to_count,
  (void*) ArrayList_of_Object__create_duplicate,
  (void*) ArrayList_of_Object__clear,
  (void*) ArrayList_of_Object__init_object,
  (void*) ArrayList_of_Object__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) ParseReader__available,
  (void*) ParseReader__to_List,
  (void*) ParseReader__to_String,
  (void*) ParseReader__read_line,
  (void*) ParseReader__init__Reader_of_Char,
  (void*) ParseReader__init__ArrayList_of_Char,
  (void*) ParseReader__init__Array_of_Char,
  (void*) ParseReader__init__String,
  (void*)(void(*)(SXCRef)) ParseReader__prep_data,
  (void*)(SlagLogical(*)(SXCRef)) ParseReader__has_another,
  (void*)(SlagChar(*)(SXCRef)) ParseReader__peek,
  (void*)(SlagChar(*)(SXCRef,SlagInt32)) ParseReader__peek__Int32,
  (void*)(SlagChar(*)(SXCRef)) ParseReader__read,
  (void*)(SlagLogical(*)(SXCRef,SlagChar)) ParseReader__consume__Char,
  (void*)(SlagLogical(*)(SXCRef,SXCRef)) ParseReader__consume__String,
  (void*) ParseReader__cur_pos,
  (void*) ParseReader__init_object,
  (void*) ParseReader__type_name,
  (void*) ArrayReader_of_Cmd__to_List,
  (void*) ArrayReader_of_Cmd__to_String,
  (void*) ArrayReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd_Int32_Int32,
  (void*) ArrayReader_of_Cmd__create_duplicate,
  (void*) ArrayReader_of_Cmd__has_another,
  (void*) ArrayReader_of_Cmd__remaining,
  (void*) ArrayReader_of_Cmd__read,
  (void*) ArrayReader_of_Cmd__init_object,
  (void*) ArrayReader_of_Cmd__type_name,
  NULL,
  (void*) CmdLiteralString__init__Token_String_Int32,
  (void*) CmdLiteralString__create_duplicate,
  (void*) CmdLiteralString__type,
  (void*) CmdLiteralString__to_String,
  (void*) CmdLiteralString__resolve,
  (void*) CmdLiteralString__write_etc,
  (void*) CmdLiteralString__to_cpp,
  (void*) CmdLiteralString__to_cs,
  (void*) CmdLiteralString__to_java,
  (void*) CmdLiteralString__init_object,
  (void*) CmdLiteralString__type_name,
  (void*) StringReader__consume__Char,
  (void*) StringReader__to_List,
  (void*) StringReader__to_String,
  (void*) StringReader__init__String_Int32_Int32,
  (void*) StringReader__create_duplicate,
  (void*) StringReader__has_another,
  (void*) StringReader__remaining,
  (void*) StringReader__peek,
  (void*) StringReader__read,
  (void*) StringReader__init_object,
  (void*) StringReader__type_name,
  (void*) ArrayReverseReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd,
  (void*) ArrayReverseReader_of_Cmd__init__Collection_of_Cmd_Array_of_Cmd_Int32_Int32_Int32,
  (void*) ArrayReverseReader_of_Cmd__create_duplicate,
  (void*) ArrayReverseReader_of_Cmd__has_another,
  (void*) ArrayReverseReader_of_Cmd__remaining,
  (void*) ArrayReverseReader_of_Cmd__read,
  (void*) ArrayReverseReader_of_Cmd__init_object,
  (void*) ArrayReverseReader_of_Cmd__type_name,
  (void*) Mapping_of_Int32_and_Cmd__to_String,
  (void*) Mapping_of_Int32_and_Cmd__init_object,
  (void*) Mapping_of_Int32_and_Cmd__type_name,
  (void*) CmdNextIteration__create_duplicate,
  (void*) CmdNextIteration__resolve,
  (void*) CmdNextIteration__write_etc,
  (void*) CmdNextIteration__to_cpp,
  (void*) CmdNextIteration__to_cs,
  (void*) CmdNextIteration__to_java,
  (void*) CmdNextIteration__init_object,
  (void*) CmdNextIteration__type_name,
  (void*) CmdEscape__create_duplicate,
  (void*) CmdEscape__write_etc,
  (void*) CmdEscape__to_cpp,
  (void*) CmdEscape__to_cs,
  (void*) CmdEscape__to_java,
  (void*) CmdEscape__init_object,
  (void*) CmdEscape__type_name,
  (void*) CmdForEachOf__create_duplicate,
  (void*) CmdForEachOf__resolve,
  (void*) CmdForEachOf__init_object,
  (void*) CmdForEachOf__type_name,
  (void*) CmdNewCompound__init__Token_TypeInfo_CmdList,
  (void*) CmdNewCompound__create_duplicate,
  (void*) CmdNewCompound__type,
  (void*) CmdNewCompound__to_String,
  (void*) CmdNewCompound__resolve,
  (void*) CmdNewCompound__finalize_calls,
  (void*) CmdNewCompound__finalize_structure_info,
  (void*) CmdNewCompound__group_dynamic_methods,
  (void*) CmdNewCompound__to_inline__CmdList,
  (void*) CmdNewCompound__write_etc,
  (void*) CmdNewCompound__to_cpp,
  (void*) CmdNewCompound__to_cs,
  (void*) CmdNewCompound__to_java,
  (void*) CmdNewCompound__init_object,
  (void*) CmdNewCompound__type_name,
  (void*)(SlagObject*(*)(SXCRef,SXCRef,SlagLogical)) FileWriter__init__String_Logical,
  (void*)(void(*)(SXCRef)) FileWriter__close,
  (void*)(void(*)(SXCRef,SlagChar)) FileWriter__write__Char,
  (void*)(void(*)(SXCRef,SXCRef)) FileWriter__write__String,
  (void*) FileWriter__print__String,
  (void*) FileWriter__clean_up,
  (void*) FileWriter__init_object,
  (void*) FileWriter__type_name,
  (void*) ArrayReader_of_ParamInfo__to_List,
  (void*) ArrayReader_of_ParamInfo__to_String,
  (void*) ArrayReader_of_ParamInfo__init__Collection_of_ParamInfo_Array_of_ParamInfo_Int32_Int32,
  (void*) ArrayReader_of_ParamInfo__create_duplicate,
  (void*) ArrayReader_of_ParamInfo__has_another,
  (void*) ArrayReader_of_ParamInfo__remaining,
  (void*) ArrayReader_of_ParamInfo__read,
  (void*) ArrayReader_of_ParamInfo__init_object,
  (void*) ArrayReader_of_ParamInfo__type_name,
  (void*) HashTableKeyReader_of_Object_and_Int32__available,
  (void*) HashTableKeyReader_of_Object_and_Int32__to_List,
  (void*) HashTableKeyReader_of_Object_and_Int32__to_String,
  (void*) HashTableKeyReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32,
  (void*) HashTableKeyReader_of_Object_and_Int32__prep_next,
  (void*) HashTableKeyReader_of_Object_and_Int32__has_another,
  (void*) HashTableKeyReader_of_Object_and_Int32__read,
  (void*) HashTableKeyReader_of_Object_and_Int32__init_object,
  (void*) HashTableKeyReader_of_Object_and_Int32__type_name,
  NULL,
  NULL,
  NULL,
  NULL,
  NULL,
  (void*) StackTraceInfo__init,
  (void*) StackTraceInfo__to_String,
  (void*) StackTraceInfo__init_object,
  (void*) StackTraceInfo__type_name,
  (void*) ArrayReader_of_Qualifiers__to_List,
  (void*) ArrayReader_of_Qualifiers__to_String,
  (void*) ArrayReader_of_Qualifiers__init__Collection_of_Qualifiers_Array_of_Qualifiers_Int32_Int32,
  (void*) ArrayReader_of_Qualifiers__create_duplicate,
  (void*) ArrayReader_of_Qualifiers__has_another,
  (void*) ArrayReader_of_Qualifiers__remaining,
  (void*) ArrayReader_of_Qualifiers__read,
  (void*) ArrayReader_of_Qualifiers__init_object,
  (void*) ArrayReader_of_Qualifiers__type_name,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__init__Token_MethodVarInfo_Cmd,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__create_duplicate,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__to_String,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__resolve,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__finalize_structure_info,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__write_etc,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__init_object,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__type_name,
  (void*) CmdLocalVarAddAndAssign__to_cpp,
  (void*) CmdLocalVarAddAndAssign__to_cs,
  (void*) CmdLocalVarAddAndAssign__to_java,
  (void*) CmdLocalVarAddAndAssign__init_object,
  (void*) CmdLocalVarAddAndAssign__type_name,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init__Int32_Real64,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__create_duplicate,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__to_String,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init_object,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__type_name,
  (void*) HashTable_of_String_and_Qualifiers__init_object,
  (void*) HashTable_of_String_and_Qualifiers__type_name,
  NULL,
  NULL,
  (void*) StringBuilder__swap__Int32_Int32,
  (void*) StringBuilder__ensure_capacity__Int32,
  (void*) StringBuilder__ensure_count__Int32,
  (void*) StringBuilder__add__Char,
  (void*) StringBuilder__create_duplicate,
  (void*) StringBuilder__reverse,
  (void*) StringBuilder__init,
  (void*) StringBuilder__init__Int32,
  (void*) StringBuilder__init__String,
  (void*) StringBuilder__add__String,
  (void*) StringBuilder__print__String,
  (void*)(void(*)(SXCRef,SXCRef,SXCRef,SlagInt32)) StringBuilder__native_copy__String_Array_of_Char_Int32,
  (void*) StringBuilder__write__Char,
  (void*) StringBuilder__clear,
  (void*) StringBuilder__count,
  (void*) StringBuilder__modification_count,
  (void*) StringBuilder__insert__Char_Int32,
  (void*) StringBuilder__to_String,
  (void*) StringBuilder__init_object,
  (void*) StringBuilder__type_name,
  (void*) SlagScanner__available,
  (void*) SlagScanner__to_List,
  (void*) SlagScanner__to_String,
  (void*) SlagScanner__init__String,
  (void*) SlagScanner__init__String_String,
  (void*) SlagScanner__has_another,
  (void*) SlagScanner__peek,
  (void*) SlagScanner__read,
  (void*) SlagScanner__consume__Int32,
  (void*) SlagScanner__must_consume__Int32_String,
  (void*) SlagScanner__prep_next,
  (void*) SlagScanner__consume_ws,
  (void*) SlagScanner__scan_number,
  (void*) SlagScanner__scan_number__Int32,
  (void*) SlagScanner__scan_integer__Int32,
  (void*) SlagScanner__scan_fraction__Int32,
  (void*) SlagScanner__scan_id,
  (void*) SlagScanner__check_for_keywords,
  (void*) SlagScanner__scan_string,
  (void*) SlagScanner__scan_alternate_string,
  (void*) SlagScanner__scan_literal_char,
  (void*) SlagScanner__scan_symbol,
  (void*) SlagScanner__check_for_special,
  (void*) SlagScanner__scan_single_line_comment,
  (void*) SlagScanner__scan_multi_line_comment,
  (void*) SlagScanner__init_object,
  (void*) SlagScanner__type_name,
  (void*) SlagPreprocessor__init__String,
  (void*) SlagPreprocessor__init__String_String,
  (void*) SlagPreprocessor__prep_next,
  (void*) SlagPreprocessor__preprocessor_evaluate_literal_expression,
  (void*) SlagPreprocessor__evaluate_literal_or,
  (void*) SlagPreprocessor__evaluate_literal_or__LiteralTerm,
  (void*) SlagPreprocessor__evaluate_literal_and,
  (void*) SlagPreprocessor__evaluate_literal_and__LiteralTerm,
  (void*) SlagPreprocessor__evaluate_literal_not,
  (void*) SlagPreprocessor__evaluate_literal_term,
  (void*) SlagPreprocessor__init_object,
  (void*) SlagPreprocessor__type_name,
  (void*) CmdBreakpoint__init__Token_Int32,
  (void*) CmdBreakpoint__create_duplicate,
  (void*) CmdBreakpoint__to_String,
  (void*) CmdBreakpoint__resolve,
  (void*) CmdBreakpoint__write_etc,
  (void*) CmdBreakpoint__to_cpp,
  (void*) CmdBreakpoint__to_cs,
  (void*) CmdBreakpoint__to_java,
  (void*) CmdBreakpoint__init_object,
  (void*) CmdBreakpoint__type_name,
  (void*) CmdContingent__create_duplicate,
  (void*) CmdContingent__to_String,
  (void*) CmdContingent__resolve,
  (void*) CmdContingent__finalize_calls,
  (void*) CmdContingent__finalize_structure_info,
  (void*) CmdContingent__group_dynamic_methods,
  (void*) CmdContingent__to_inline__CmdList,
  (void*) CmdContingent__write_etc,
  (void*) CmdContingent__to_cpp,
  (void*) CmdContingent__to_cs,
  (void*) CmdContingent__to_java,
  (void*) CmdContingent__init_object,
  (void*) CmdContingent__type_name,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__create_duplicate,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__resolve,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__optimize,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__write_etc,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__init_object,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__type_name,
  (void*) CmdLoop__create_duplicate,
  (void*) CmdLoop__resolve,
  (void*) CmdLoop__write_etc,
  (void*) CmdLoop__to_cpp,
  (void*) CmdLoop__to_cs,
  (void*) CmdLoop__to_java,
  (void*) CmdLoop__init_object,
  (void*) CmdLoop__type_name,
  (void*) Date__init,
  (void*)(SlagObject*(*)(SXCRef,SlagInt64)) Date__init__Int64,
  (void*) Date__to_String,
  (void*) Date__init_object,
  (void*) Date__type_name,
  (void*)(SlagObject*(*)(SXCRef,SXCRef,SlagInt32)) StringManager__create_from__Array_of_Char_Int32,
  (void*) StringManager__create_from__ArrayList_of_Char,
  (void*)(SlagObject*(*)(SXCRef,SlagChar)) StringManager__create_from__Char,
  (void*) StringManager__create_from__Int64,
  (void*) StringManager__init_object,
  (void*) StringManager__type_name,
  (void*) Mapping_of_Int32_and_Object__init__Int32_Object,
  (void*) Mapping_of_Int32_and_Object__to_String,
  (void*) Mapping_of_Int32_and_Object__init_object,
  (void*) Mapping_of_Int32_and_Object__type_name,
  (void*) CmdLiteralReal32__init__Token_Real32,
  (void*) CmdLiteralReal32__create_duplicate,
  (void*) CmdLiteralReal32__type,
  (void*) CmdLiteralReal32__to_String,
  (void*) CmdLiteralReal32__write_etc,
  (void*) CmdLiteralReal32__to_cpp,
  (void*) CmdLiteralReal32__to_cs,
  (void*) CmdLiteralReal32__to_java,
  (void*) CmdLiteralReal32__init_object,
  (void*) CmdLiteralReal32__type_name,
  (void*) CmdCastToReal32__create_duplicate,
  (void*) CmdCastToReal32__type,
  (void*) CmdCastToReal32__optimize,
  (void*) CmdCastToReal32__write_etc,
  (void*) CmdCastToReal32__statement_to_cpp,
  (void*) CmdCastToReal32__to_cpp,
  (void*) CmdCastToReal32__statement_to_cs,
  (void*) CmdCastToReal32__to_cs,
  (void*) CmdCastToReal32__statement_to_java,
  (void*) CmdCastToReal32__to_java,
  (void*) CmdCastToReal32__init_object,
  (void*) CmdCastToReal32__type_name,
  (void*) JavaWriter__write__String,
  (void*) JavaWriter__do_indent,
  (void*) JavaWriter__print__Char,
  (void*) JavaWriter__print__String,
  (void*) JavaWriter__println__String,
  (void*) JavaWriter__println__Char,
  (void*) JavaWriter__println,
  (void*) JavaWriter__open_file__String,
  (void*) JavaWriter__assign_cross_compile_names,
  (void*) JavaWriter__fix_array_type__TypeInfo,
  (void*) JavaWriter__print_globals,
  (void*) JavaWriter__print_types,
  (void*) JavaWriter__print_constructor__TypeInfo_MethodInfo,
  (void*) JavaWriter__print_prototype__MethodInfo_Logical,
  (void*) JavaWriter__print_method__MethodInfo,
  (void*) JavaWriter__write_end_id__CmdStructure,
  (void*) JavaWriter__native_call__String_String_String_CmdList,
  (void*) JavaWriter__native_call__String_String_String_ArrayList_of_String,
  (void*) JavaWriter__init_object,
  (void*) JavaWriter__type_name,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init__Token_MethodVarInfo,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__create_duplicate,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__to_String,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__resolve,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__finalize_structure_info,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__write_etc,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init_object,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__type_name,
  (void*) MissingReturnError__init,
  (void*) MissingReturnError__init__String,
  (void*) MissingReturnError__init_object,
  (void*) MissingReturnError__type_name,
  (void*) SlagScannerManager__add_define__String_String,
  (void*) SlagScannerManager__set_up_keywords,
  (void*) SlagScannerManager__init_object,
  (void*) SlagScannerManager__type_name,
  (void*) ArrayList_of_Qualifiers__to_String,
  (void*) ArrayList_of_Qualifiers__init,
  (void*) ArrayList_of_Qualifiers__init__Int32,
  (void*) ArrayList_of_Qualifiers__create_reader,
  (void*) ArrayList_of_Qualifiers__count,
  (void*) ArrayList_of_Qualifiers__modification_count,
  (void*) ArrayList_of_Qualifiers__ensure_count__Int32,
  (void*) ArrayList_of_Qualifiers__add__Qualifiers,
  (void*) ArrayList_of_Qualifiers__create_duplicate,
  (void*) ArrayList_of_Qualifiers__clear,
  (void*) ArrayList_of_Qualifiers__init_object,
  (void*) ArrayList_of_Qualifiers__type_name,
  (void*) ArrayReader_of_Char__consume__Char,
  (void*) ArrayReader_of_Char__to_List,
  (void*) ArrayReader_of_Char__to_String,
  (void*) ArrayReader_of_Char__init__Collection_of_Char_Array_of_Char_Int32_Int32,
  (void*) ArrayReader_of_Char__create_duplicate,
  (void*) ArrayReader_of_Char__has_another,
  (void*) ArrayReader_of_Char__remaining,
  (void*) ArrayReader_of_Char__peek,
  (void*) ArrayReader_of_Char__read,
  (void*) ArrayReader_of_Char__init_object,
  (void*) ArrayReader_of_Char__type_name,
  (void*) CmdDynamicCall__create_duplicate,
  (void*) CmdDynamicCall__to_String,
  (void*) CmdDynamicCall__resolve,
  (void*) CmdDynamicCall__finalize_calls,
  (void*) CmdDynamicCall__group_dynamic_methods,
  (void*) CmdDynamicCall__add_overrides_to_group__MethodInfo_MethodGroup,
  (void*) CmdDynamicCall__write_etc,
  (void*) CmdDynamicCall__statement_to_cpp,
  (void*) CmdDynamicCall__to_cpp,
  (void*) CmdDynamicCall__to_cpp__Logical,
  (void*) CmdDynamicCall__statement_to_cs,
  (void*) CmdDynamicCall__to_cs,
  (void*) CmdDynamicCall__to_cs__Logical,
  (void*) CmdDynamicCall__statement_to_java,
  (void*) CmdDynamicCall__to_java,
  (void*) CmdDynamicCall__to_java__Logical,
  (void*) CmdDynamicCall__init_object,
  (void*) CmdDynamicCall__type_name,
  (void*) CmdReturnValue__init__Token_Cmd_Logical,
  (void*) CmdReturnValue__create_duplicate,
  (void*) CmdReturnValue__to_String,
  (void*) CmdReturnValue__resolve,
  (void*) CmdReturnValue__to_inline__CmdList,
  (void*) CmdReturnValue__write_etc,
  (void*) CmdReturnValue__to_cpp,
  (void*) CmdReturnValue__to_cs,
  (void*) CmdReturnValue__to_java,
  (void*) CmdReturnValue__init_object,
  (void*) CmdReturnValue__type_name,
  (void*) CmdAdd__init_object,
  (void*) CmdAdd__type_name,
  (void*) LiteralTerm__require_logical,
  (void*) LiteralTerm__as_Logical,
  (void*) LiteralTerm__init_object,
  (void*) LiteralTerm__type_name,
  (void*) ArrayList_of_SlagError__remove_last,
  (void*) ArrayList_of_SlagError__discard_from__Int32,
  (void*) ArrayList_of_SlagError__to_String,
  (void*) ArrayList_of_SlagError__init,
  (void*) ArrayList_of_SlagError__init__Int32,
  (void*) ArrayList_of_SlagError__create_reader,
  (void*) ArrayList_of_SlagError__count,
  (void*) ArrayList_of_SlagError__modification_count,
  (void*) ArrayList_of_SlagError__ensure_count__Int32,
  (void*) ArrayList_of_SlagError__add__SlagError,
  (void*) ArrayList_of_SlagError__create_duplicate,
  (void*) ArrayList_of_SlagError__clear,
  (void*) ArrayList_of_SlagError__init_object,
  (void*) ArrayList_of_SlagError__type_name,
  (void*) CmdExp__init_object,
  (void*) CmdExp__type_name,
  NULL,
  NULL,
  (void*) Global__init_singleton,
  (void*) Global__set_up_stdio,
  (void*) Global__print__Object,
  (void*) Global__print__String,
  (void*) Global__println__Object,
  (void*) Global__println__String,
  (void*)(SlagInt64(*)(SXCRef)) Global__time_ms,
  (void*) Global__to_String__Object,
  (void*) Global__to_String__Exception,
  (void*) Global__to_String__Char,
  (void*) Global__to_String__Real64,
  (void*) Global__to_String__Logical,
  (void*) Global__to_String__Int64_Int32,
  (void*) Global__to_String__Int32_Int32,
  (void*) Global__to_String__Char_Int32,
  (void*) Global__to_String__Byte_Int32,
  (void*) Global__format_string__String_Int32_Int32_Char,
  (void*) Global__format_string__Real64_Int32_Int32_Char,
  (void*) Global__format_string__Int32_Int32_Int32_Char,
  (void*) Global__format_string__Object_Int32_Int32_Char,
  (void*) Global__is_digit__Char_Int32,
  (void*) Global__to_value__Char,
  (void*) Global__hash_code__Int32,
  (void*) Global__requisite_kludges,
  (void*) Global__abs__BigInt,
  (void*) Global__is_odd__BigInt,
  (void*) Global__init_object,
  (void*) Global__type_name,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__to_List,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__to_String,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__init__Collection_of_Mapping_of_Object_and_Int32_Array_of_Mapping_of_Object_and_Int32_Int32_Int32,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__create_duplicate,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__has_another,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__remaining,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__read,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__init_object,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__type_name,
  (void*) ArrayReverseReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo,
  (void*) ArrayReverseReader_of_ParameterInfo__init__Collection_of_ParameterInfo_Array_of_ParameterInfo_Int32_Int32_Int32,
  (void*) ArrayReverseReader_of_ParameterInfo__create_duplicate,
  (void*) ArrayReverseReader_of_ParameterInfo__has_another,
  (void*) ArrayReverseReader_of_ParameterInfo__remaining,
  (void*) ArrayReverseReader_of_ParameterInfo__read,
  (void*) ArrayReverseReader_of_ParameterInfo__init_object,
  (void*) ArrayReverseReader_of_ParameterInfo__type_name,
  (void*) ArrayReader_of_CmdElseIf__to_List,
  (void*) ArrayReader_of_CmdElseIf__to_String,
  (void*) ArrayReader_of_CmdElseIf__init__Collection_of_CmdElseIf_Array_of_CmdElseIf_Int32_Int32,
  (void*) ArrayReader_of_CmdElseIf__create_duplicate,
  (void*) ArrayReader_of_CmdElseIf__has_another,
  (void*) ArrayReader_of_CmdElseIf__remaining,
  (void*) ArrayReader_of_CmdElseIf__read,
  (void*) ArrayReader_of_CmdElseIf__init_object,
  (void*) ArrayReader_of_CmdElseIf__type_name,
  (void*) CmdLocalVarDecrement__to_cpp,
  (void*) CmdLocalVarDecrement__to_cs,
  (void*) CmdLocalVarDecrement__to_java,
  (void*) CmdLocalVarDecrement__init_object,
  (void*) CmdLocalVarDecrement__type_name,
  (void*) CmdWhile__init__Token_Int32_Cmd,
  (void*) CmdWhile__init__Token_Int32_Cmd_CmdStatementList,
  (void*) CmdWhile__create_duplicate,
  (void*) CmdWhile__to_String,
  (void*) CmdWhile__resolve,
  (void*) CmdWhile__optimize,
  (void*) CmdWhile__finalize_calls,
  (void*) CmdWhile__finalize_structure_info,
  (void*) CmdWhile__group_dynamic_methods,
  (void*) CmdWhile__to_inline__CmdList,
  (void*) CmdWhile__to_java,
  (void*) CmdWhile__write_etc,
  (void*) CmdWhile__to_cpp,
  (void*) CmdWhile__to_cs,
  (void*) CmdWhile__init_object,
  (void*) CmdWhile__type_name,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__create_duplicate,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__resolve,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__optimize,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__write_etc,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__init_object,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__type_name,
  (void*) CmdCmpGE__to_cpp,
  (void*) CmdCmpGE__to_cs,
  (void*) CmdCmpGE__to_java,
  (void*) CmdCmpGE__init_object,
  (void*) CmdCmpGE__type_name,
  (void*) SignalObjectArg__init__Object,
  (void*) SignalObjectArg__init__Object_Real64_Real64,
  (void*) SignalObjectArg__init_object,
  (void*) SignalObjectArg__type_name,
  (void*) Runtime__init_singleton,
  (void*) Runtime__init_object,
  (void*) Runtime__type_name,
  (void*) CmdCast__init__Token_Cmd_TypeInfo,
  (void*) CmdCast__create_duplicate,
  (void*) CmdCast__type,
  (void*) CmdCast__to_String,
  (void*) CmdCast__resolve,
  (void*) CmdCast__init_object,
  (void*) CmdCast__type_name,
  (void*) CmdNarrowingCast__create_duplicate,
  (void*) CmdNarrowingCast__resolve,
  (void*) CmdNarrowingCast__write_etc,
  (void*) CmdNarrowingCast__statement_to_cpp,
  (void*) CmdNarrowingCast__to_cpp,
  (void*) CmdNarrowingCast__statement_to_cs,
  (void*) CmdNarrowingCast__to_cs,
  (void*) CmdNarrowingCast__statement_to_java,
  (void*) CmdNarrowingCast__to_java,
  (void*) CmdNarrowingCast__init_object,
  (void*) CmdNarrowingCast__type_name,
  (void*) CmdPropertyWrite__init__Token_Cmd_PropertyInfo_Cmd,
  (void*) CmdPropertyWrite__create_duplicate,
  (void*) CmdPropertyWrite__to_String,
  (void*) CmdPropertyWrite__resolve,
  (void*) CmdPropertyWrite__optimize,
  (void*) CmdPropertyWrite__finalize_calls,
  (void*) CmdPropertyWrite__finalize_structure_info,
  (void*) CmdPropertyWrite__group_dynamic_methods,
  (void*) CmdPropertyWrite__to_inline__CmdList,
  (void*) CmdPropertyWrite__write_etc,
  (void*) CmdPropertyWrite__to_cpp,
  (void*) CmdPropertyWrite__to_cs,
  (void*) CmdPropertyWrite__to_java,
  (void*) CmdPropertyWrite__init_object,
  (void*) CmdPropertyWrite__type_name,
  (void*) CmdContingentControl__init__Token_Cmd_Int32,
  (void*) CmdContingentControl__to_String,
  (void*) CmdContingentControl__resolve,
  (void*) CmdContingentControl__finalize_calls,
  (void*) CmdContingentControl__finalize_structure_info,
  (void*) CmdContingentControl__to_inline__CmdList,
  (void*) CmdContingentControl__init_object,
  (void*) CmdContingentControl__type_name,
  (void*) CmdSufficient__create_duplicate,
  (void*) CmdSufficient__write_etc,
  (void*) CmdSufficient__to_cpp,
  (void*) CmdSufficient__to_cs,
  (void*) CmdSufficient__to_java,
  (void*) CmdSufficient__init_object,
  (void*) CmdSufficient__type_name,
  (void*) CmdBlock__create_duplicate,
  (void*) CmdBlock__resolve,
  (void*) CmdBlock__write_etc,
  (void*) CmdBlock__to_cpp,
  (void*) CmdBlock__to_cs,
  (void*) CmdBlock__to_java,
  (void*) CmdBlock__init_object,
  (void*) CmdBlock__type_name,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__init__Token_PropertyInfo_Cmd,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__create_duplicate,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__to_String,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__resolve,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__finalize_structure_info,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__write_etc,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__init_object,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__type_name,
  (void*) CmdThisPropertyDivAndAssign__to_cpp,
  (void*) CmdThisPropertyDivAndAssign__to_cs,
  (void*) CmdThisPropertyDivAndAssign__to_java,
  (void*) CmdThisPropertyDivAndAssign__init_object,
  (void*) CmdThisPropertyDivAndAssign__type_name,
  (void*) ArrayReader_of_String__to_List,
  (void*) ArrayReader_of_String__to_String,
  (void*) ArrayReader_of_String__init__Collection_of_String_Array_of_String_Int32_Int32,
  (void*) ArrayReader_of_String__create_duplicate,
  (void*) ArrayReader_of_String__has_another,
  (void*) ArrayReader_of_String__remaining,
  (void*) ArrayReader_of_String__read,
  (void*) ArrayReader_of_String__init_object,
  (void*) ArrayReader_of_String__type_name,
  (void*) DegreesManager__init_object,
  (void*) DegreesManager__type_name,
  (void*) BigIntManager__init_object,
  (void*) BigIntManager__create_from__Int64,
  (void*) BigIntManager__type_name,
  (void*) CmdArrayGet__init__Token_Cmd_Cmd,
  (void*) CmdArrayGet__create_duplicate,
  (void*) CmdArrayGet__type,
  (void*) CmdArrayGet__to_String,
  (void*) CmdArrayGet__resolve,
  (void*) CmdArrayGet__finalize_calls,
  (void*) CmdArrayGet__finalize_structure_info,
  (void*) CmdArrayGet__group_dynamic_methods,
  (void*) CmdArrayGet__to_inline__CmdList,
  (void*) CmdArrayGet__write_etc,
  (void*) CmdArrayGet__to_cpp,
  (void*) CmdArrayGet__to_cs,
  (void*) CmdArrayGet__to_java,
  (void*) CmdArrayGet__init_object,
  (void*) CmdArrayGet__type_name,
  (void*) TypeCastError__init,
  (void*) TypeCastError__init__String,
  (void*) TypeCastError__init_object,
  (void*) TypeCastError__type_name,
  (void*) RangeIteratorGE_of_Int32__available,
  (void*) RangeIteratorGE_of_Int32__to_List,
  (void*) RangeIteratorGE_of_Int32__to_String,
  (void*) RangeIteratorGE_of_Int32__init__Int32_Int32_Int32,
  (void*) RangeIteratorGE_of_Int32__create_duplicate,
  (void*) RangeIteratorGE_of_Int32__has_another,
  (void*) RangeIteratorGE_of_Int32__read,
  (void*) RangeIteratorGE_of_Int32__init_object,
  (void*) RangeIteratorGE_of_Int32__type_name,
  (void*) CmdArraySet__init__Token_Cmd_Cmd_Cmd,
  (void*) CmdArraySet__create_duplicate,
  (void*) CmdArraySet__to_String,
  (void*) CmdArraySet__resolve,
  (void*) CmdArraySet__finalize_calls,
  (void*) CmdArraySet__finalize_structure_info,
  (void*) CmdArraySet__group_dynamic_methods,
  (void*) CmdArraySet__to_inline__CmdList,
  (void*) CmdArraySet__write_etc,
  (void*) CmdArraySet__to_cpp,
  (void*) CmdArraySet__to_cs,
  (void*) CmdArraySet__to_java,
  (void*) CmdArraySet__init_object,
  (void*) CmdArraySet__type_name,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__init__Token_MethodVarInfo_Cmd,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__create_duplicate,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__to_String,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__resolve,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__finalize_structure_info,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__write_etc,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__init_object,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__type_name,
  (void*) CmdLocalVarSubAndAssign__to_cpp,
  (void*) CmdLocalVarSubAndAssign__to_cs,
  (void*) CmdLocalVarSubAndAssign__to_java,
  (void*) CmdLocalVarSubAndAssign__init_object,
  (void*) CmdLocalVarSubAndAssign__type_name,
  (void*) CmdCmpGT__to_cpp,
  (void*) CmdCmpGT__to_cs,
  (void*) CmdCmpGT__to_java,
  (void*) CmdCmpGT__init_object,
  (void*) CmdCmpGT__type_name,
  NULL,
  NULL,
  (void*) ArrayReader_of_Signal__to_List,
  (void*) ArrayReader_of_Signal__to_String,
  (void*) ArrayReader_of_Signal__init__Collection_of_Signal_Array_of_Signal_Int32_Int32,
  (void*) ArrayReader_of_Signal__create_duplicate,
  (void*) ArrayReader_of_Signal__has_another,
  (void*) ArrayReader_of_Signal__remaining,
  (void*) ArrayReader_of_Signal__read,
  (void*) ArrayReader_of_Signal__init_object,
  (void*) ArrayReader_of_Signal__type_name,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__init__Token_MethodVarInfo_Cmd,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__create_duplicate,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__to_String,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__resolve,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__finalize_structure_info,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__write_etc,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__init_object,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__type_name,
  (void*) CmdLocalVarMulAndAssign__to_cpp,
  (void*) CmdLocalVarMulAndAssign__to_cs,
  (void*) CmdLocalVarMulAndAssign__to_java,
  (void*) CmdLocalVarMulAndAssign__init_object,
  (void*) CmdLocalVarMulAndAssign__type_name,
  (void*) SignalManager__init_singleton,
  (void*) SignalManager__find_signal_id__String,
  (void*) SignalManager__queue__Signal,
  (void*) SignalManager__queue_native__Signal,
  (void*) SignalManager__queue_native__String_Object,
  (void*) SignalManager__raise__Signal,
  (void*) SignalManager__raise_pending,
  (void*) SignalManager__install_default_signal_handlers,
  (void*) SignalManager__init_object,
  (void*) SignalManager__type_name,
  (void*) StdInReader__consume__Char,
  (void*) StdInReader__to_List,
  (void*) StdInReader__to_String,
  (void*) StdInReader__init,
  (void*) StdInReader__has_another,
  (void*) StdInReader__peek,
  (void*) StdInReader__read,
  (void*)(SlagChar(*)(SXCRef)) StdInReader__native_read_char,
  (void*) StdInReader__prep_next,
  (void*) StdInReader__available,
  (void*) StdInReader__init_object,
  (void*) StdInReader__type_name,
  (void*) Array_of_Mapping_of_Object_and_Object__create_duplicate,
  (void*) Array_of_Mapping_of_Object_and_Object__init_object,
  (void*) Array_of_Mapping_of_Object_and_Object__type_name,
  (void*) CmdLogicalize__create_duplicate,
  (void*) CmdLogicalize__resolve,
  (void*) CmdLogicalize__init_object,
  (void*) CmdLogicalize__type_name,
  (void*) HashTable_of_String_and_StructureType__init_object,
  (void*) HashTable_of_String_and_StructureType__type_name,
  (void*) OutOfBoundsError__init,
  (void*) OutOfBoundsError__init__String,
  (void*) OutOfBoundsError__init_object,
  (void*) OutOfBoundsError__type_name,
  (void*) ArrayReverseReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo,
  (void*) ArrayReverseReader_of_ControlStructureInfo__init__Collection_of_ControlStructureInfo_Array_of_ControlStructureInfo_Int32_Int32_Int32,
  (void*) ArrayReverseReader_of_ControlStructureInfo__create_duplicate,
  (void*) ArrayReverseReader_of_ControlStructureInfo__has_another,
  (void*) ArrayReverseReader_of_ControlStructureInfo__remaining,
  (void*) ArrayReverseReader_of_ControlStructureInfo__read,
  (void*) ArrayReverseReader_of_ControlStructureInfo__init_object,
  (void*) ArrayReverseReader_of_ControlStructureInfo__type_name,
  (void*) WeakReferenceManager__init_object,
  (void*) WeakReferenceManager__type_name,
  (void*) CmdArrayCreate__init__Token_TypeInfo_Cmd,
  (void*) CmdArrayCreate__create_duplicate,
  (void*) CmdArrayCreate__type,
  (void*) CmdArrayCreate__to_String,
  (void*) CmdArrayCreate__resolve,
  (void*) CmdArrayCreate__finalize_calls,
  (void*) CmdArrayCreate__finalize_structure_info,
  (void*) CmdArrayCreate__group_dynamic_methods,
  (void*) CmdArrayCreate__to_inline__CmdList,
  (void*) CmdArrayCreate__write_etc,
  (void*) CmdArrayCreate__to_cpp,
  (void*) CmdArrayCreate__to_cs,
  (void*) CmdArrayCreate__to_java,
  (void*) CmdArrayCreate__init_object,
  (void*) CmdArrayCreate__type_name,
  (void*) CmdLiteralChar__init__Token_Char,
  (void*) CmdLiteralChar__create_duplicate,
  (void*) CmdLiteralChar__type,
  (void*) CmdLiteralChar__to_String,
  (void*) CmdLiteralChar__write_etc,
  (void*) CmdLiteralChar__to_cpp,
  (void*) CmdLiteralChar__to_cs,
  (void*) CmdLiteralChar__to_java,
  (void*) CmdLiteralChar__init_object,
  (void*) CmdLiteralChar__type_name,
  (void*) CmdCastToChar__create_duplicate,
  (void*) CmdCastToChar__type,
  (void*) CmdCastToChar__optimize,
  (void*) CmdCastToChar__write_etc,
  (void*) CmdCastToChar__statement_to_cpp,
  (void*) CmdCastToChar__to_cpp,
  (void*) CmdCastToChar__statement_to_cs,
  (void*) CmdCastToChar__to_cs,
  (void*) CmdCastToChar__statement_to_java,
  (void*) CmdCastToChar__to_java,
  (void*) CmdCastToChar__init_object,
  (void*) CmdCastToChar__type_name,
  (void*) SlagFile__init__Token_String_String,
  (void*) SlagFile__to_String,
  (void*) SlagFile__init_object,
  (void*) SlagFile__type_name,
  (void*) HashTableMappingReader_of_Object_and_Object__available,
  (void*) HashTableMappingReader_of_Object_and_Object__to_List,
  (void*) HashTableMappingReader_of_Object_and_Object__to_String,
  (void*) HashTableMappingReader_of_Object_and_Object__init__Reader_of_HashTableBin_of_Object_and_Object,
  (void*) HashTableMappingReader_of_Object_and_Object__prep_next,
  (void*) HashTableMappingReader_of_Object_and_Object__has_another,
  (void*) HashTableMappingReader_of_Object_and_Object__read,
  (void*) HashTableMappingReader_of_Object_and_Object__init_object,
  (void*) HashTableMappingReader_of_Object_and_Object__type_name,
  (void*) PriorSlagError__init__Token_String_Token,
  (void*) PriorSlagError__to_String,
  (void*) PriorSlagError__init_object,
  (void*) PriorSlagError__type_name,
  (void*) ParameterInfo__init__Token_MethodInfo_TypeInfo_String_Cmd_Int32,
  (void*) ParameterInfo__create_duplicate,
  (void*) ParameterInfo__to_String,
  (void*) ParameterInfo__x_name,
  (void*) ParameterInfo__init_object,
  (void*) ParameterInfo__type_name,
  (void*) CmdCompoundPropertyRead__create_duplicate,
  (void*) CmdCompoundPropertyRead__to_String,
  (void*) CmdCompoundPropertyRead__resolve,
  (void*) CmdCompoundPropertyRead__write_etc,
  (void*) CmdCompoundPropertyRead__to_cpp,
  (void*) CmdCompoundPropertyRead__to_cs,
  (void*) CmdCompoundPropertyRead__to_java,
  (void*) CmdCompoundPropertyRead__init_object,
  (void*) CmdCompoundPropertyRead__type_name,
  (void*) CmdNecessary__create_duplicate,
  (void*) CmdNecessary__write_etc,
  (void*) CmdNecessary__to_cpp,
  (void*) CmdNecessary__to_cs,
  (void*) CmdNecessary__to_java,
  (void*) CmdNecessary__init_object,
  (void*) CmdNecessary__type_name,
  (void*) StringTriplet__init__String_String_String,
  (void*) StringTriplet__to_String,
  (void*) StringTriplet__init_object,
  (void*) StringTriplet__type_name,
  (void*) TypeTemplate__init__Token_Qualifiers_String_ArrayList_of_String_Int32_String,
  (void*) TypeTemplate__init_object,
  (void*) TypeTemplate__type_name,
  (void*) Mapping_of_String_and_TypeTemplate__to_String,
  (void*) Mapping_of_String_and_TypeTemplate__init_object,
  (void*) Mapping_of_String_and_TypeTemplate__type_name,
  (void*) FileNotFoundError__init,
  (void*) FileNotFoundError__init__String,
  (void*) FileNotFoundError__init_object,
  (void*) FileNotFoundError__type_name,
  (void*) CmdLiteralLogical__init__Token_Logical,
  (void*) CmdLiteralLogical__create_duplicate,
  (void*) CmdLiteralLogical__type,
  (void*) CmdLiteralLogical__to_String,
  (void*) CmdLiteralLogical__write_etc,
  (void*) CmdLiteralLogical__to_cpp,
  (void*) CmdLiteralLogical__to_cs,
  (void*) CmdLiteralLogical__to_java,
  (void*) CmdLiteralLogical__init_object,
  (void*) CmdLiteralLogical__type_name,
  (void*) CmdElseIf__init__Token_Cmd_CmdStatementList,
  (void*) CmdElseIf__create_duplicate,
  (void*) CmdElseIf__to_String,
  (void*) CmdElseIf__resolve,
  (void*) CmdElseIf__finalize_calls,
  (void*) CmdElseIf__finalize_structure_info,
  (void*) CmdElseIf__group_dynamic_methods,
  (void*) CmdElseIf__to_inline__CmdList,
  (void*) CmdElseIf__write_etc,
  (void*) CmdElseIf__to_cpp,
  (void*) CmdElseIf__to_cs,
  (void*) CmdElseIf__to_java,
  (void*) CmdElseIf__init_object,
  (void*) CmdElseIf__type_name,
  (void*) CompilerError__init_object,
  (void*) CompilerError__type_name,
  (void*) CmdCmpIsNot__create_duplicate,
  (void*) CmdCmpIsNot__resolve,
  (void*) CmdCmpIsNot__write_etc,
  (void*) CmdCmpIsNot__to_cpp,
  (void*) CmdCmpIsNot__to_cs,
  (void*) CmdCmpIsNot__to_java,
  (void*) CmdCmpIsNot__init_object,
  (void*) CmdCmpIsNot__type_name,
  NULL,
  NULL,
  NULL,
  (void*) ArrayReader_of_TypeInfo__to_List,
  (void*) ArrayReader_of_TypeInfo__to_String,
  (void*) ArrayReader_of_TypeInfo__init__Collection_of_TypeInfo_Array_of_TypeInfo_Int32_Int32,
  (void*) ArrayReader_of_TypeInfo__create_duplicate,
  (void*) ArrayReader_of_TypeInfo__has_another,
  (void*) ArrayReader_of_TypeInfo__remaining,
  (void*) ArrayReader_of_TypeInfo__read,
  (void*) ArrayReader_of_TypeInfo__init_object,
  (void*) ArrayReader_of_TypeInfo__type_name,
  (void*) RandomNumberGenerator__init_singleton,
  (void*) RandomNumberGenerator__init__Int64,
  (void*) RandomNumberGenerator__init__RandomNumberGenerator,
  (void*) RandomNumberGenerator__create_duplicate,
  (void*) RandomNumberGenerator__rewind,
  (void*) RandomNumberGenerator__advance_random,
  (void*) RandomNumberGenerator__init_object,
  (void*) RandomNumberGenerator__type_name,
  (void*) CmdCastToLogical__create_duplicate,
  (void*) CmdCastToLogical__type,
  (void*) CmdCastToLogical__optimize,
  (void*) CmdCastToLogical__write_etc,
  (void*) CmdCastToLogical__statement_to_cpp,
  (void*) CmdCastToLogical__to_cpp,
  (void*) CmdCastToLogical__statement_to_cs,
  (void*) CmdCastToLogical__to_cs,
  (void*) CmdCastToLogical__statement_to_java,
  (void*) CmdCastToLogical__to_java,
  (void*) CmdCastToLogical__init_object,
  (void*) CmdCastToLogical__type_name,
  (void*) CmdLocalVarRead__init__Token_MethodVarInfo,
  (void*) CmdLocalVarRead__create_duplicate,
  (void*) CmdLocalVarRead__type,
  (void*) CmdLocalVarRead__to_String,
  (void*) CmdLocalVarRead__finalize_structure_info,
  (void*) CmdLocalVarRead__to_inline__CmdList,
  (void*) CmdLocalVarRead__write_etc,
  (void*) CmdLocalVarRead__to_cpp,
  (void*) CmdLocalVarRead__to_cs,
  (void*) CmdLocalVarRead__to_java,
  (void*) CmdLocalVarRead__init_object,
  (void*) CmdLocalVarRead__type_name,
  (void*) CSWriter__write__String,
  (void*) CSWriter__do_indent,
  (void*) CSWriter__print__Char,
  (void*) CSWriter__print__String,
  (void*) CSWriter__println__String,
  (void*) CSWriter__println__Char,
  (void*) CSWriter__println,
  (void*) CSWriter__print_header,
  (void*) CSWriter__print_helper_functions,
  (void*) CSWriter__assign_cross_compile_names,
  (void*) CSWriter__fix_array_type__TypeInfo,
  (void*) CSWriter__print_runtime_helpers,
  (void*) CSWriter__print_types,
  (void*) CSWriter__print_constructor__TypeInfo_MethodInfo,
  (void*) CSWriter__print_prototype__MethodInfo_Logical,
  (void*) CSWriter__print_method__MethodInfo,
  (void*) CSWriter__write_continue_id__CmdStructure,
  (void*) CSWriter__write_end_id__CmdStructure,
  (void*) CSWriter__native_call__String_String_String_CmdList,
  (void*) CSWriter__native_call__String_String_String_ArrayList_of_String,
  (void*) CSWriter__init_object,
  (void*) CSWriter__type_name,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__create_duplicate,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__resolve,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__optimize,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__write_etc,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_cpp,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_cs,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_java,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__init_object,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__type_name,
  (void*) KeywordPairing__init__String_String,
  (void*) KeywordPairing__init_object,
  (void*) KeywordPairing__type_name,
  (void*) Mapping_of_Int32_and_KeywordPairing__to_String,
  (void*) Mapping_of_Int32_and_KeywordPairing__init_object,
  (void*) Mapping_of_Int32_and_KeywordPairing__type_name,
  (void*) UnsupportedMethodError__init,
  (void*) UnsupportedMethodError__init__String,
  (void*) UnsupportedMethodError__init_object,
  (void*) UnsupportedMethodError__type_name,
  (void*) CmdExplicitListLiteral__init__Token_TypeInfo_ArrayList_of_Cmd,
  (void*) CmdExplicitListLiteral__create_duplicate,
  (void*) CmdExplicitListLiteral__resolve,
  (void*) CmdExplicitListLiteral__init_object,
  (void*) CmdExplicitListLiteral__type_name,
  (void*) CmdForEachInWithRemoveCurrent__create_duplicate,
  (void*) CmdForEachInWithRemoveCurrent__resolve,
  (void*) CmdForEachInWithRemoveCurrent__init_object,
  (void*) CmdForEachInWithRemoveCurrent__type_name,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init__Token_PropertyInfo,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__create_duplicate,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__to_String,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__resolve,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__finalize_structure_info,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__write_etc,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init_object,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__type_name,
  (void*) CmdThisPropertyDecrement__to_cpp,
  (void*) CmdThisPropertyDecrement__to_cs,
  (void*) CmdThisPropertyDecrement__to_java,
  (void*) CmdThisPropertyDecrement__init_object,
  (void*) CmdThisPropertyDecrement__type_name,
  (void*) Range_of_Int32__init__Int32_Int32_Int32,
  (void*) Range_of_Int32__create_reader,
  (void*) Range_of_Int32__to_String,
  (void*) Range_of_Int32__init_object,
  (void*) Range_of_Int32__type_name,
  (void*) RangeGE_of_Int32__init__Int32_Int32_Int32,
  (void*) RangeGE_of_Int32__create_reader,
  (void*) RangeGE_of_Int32__init_object,
  (void*) RangeGE_of_Int32__type_name,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__create_duplicate,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__resolve,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__optimize,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__write_etc,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__init_object,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__type_name,
  (void*) CoerceReader_of_MethodGroup__available,
  (void*) CoerceReader_of_MethodGroup__to_List,
  (void*) CoerceReader_of_MethodGroup__to_String,
  (void*) CoerceReader_of_MethodGroup__init__Reader_of_Object,
  (void*) CoerceReader_of_MethodGroup__has_another,
  (void*) CoerceReader_of_MethodGroup__read,
  (void*) CoerceReader_of_MethodGroup__init_object,
  (void*) CoerceReader_of_MethodGroup__type_name,
  (void*) CmdAccessIndex__init__Token_Cmd_CmdList,
  (void*) CmdAccessIndex__create_duplicate,
  (void*) CmdAccessIndex__resolve,
  (void*) CmdAccessIndex__init_object,
  (void*) CmdAccessIndex__type_name,
  (void*) CmdUnderlyingCall__init__Token,
  (void*) CmdUnderlyingCall__create_duplicate,
  (void*) CmdUnderlyingCall__resolve,
  (void*) CmdUnderlyingCall__init_object,
  (void*) CmdUnderlyingCall__type_name,
  (void*) CmdWideningCast__create_duplicate,
  (void*) CmdWideningCast__resolve,
  (void*) CmdWideningCast__write_etc,
  (void*) CmdWideningCast__statement_to_cpp,
  (void*) CmdWideningCast__to_cpp,
  (void*) CmdWideningCast__statement_to_cs,
  (void*) CmdWideningCast__to_cs,
  (void*) CmdWideningCast__statement_to_java,
  (void*) CmdWideningCast__to_java,
  (void*) CmdWideningCast__init_object,
  (void*) CmdWideningCast__type_name,
  (void*) Array_of_StackTraceInfo__create_duplicate,
  (void*) Array_of_StackTraceInfo__init_object,
  (void*) Array_of_StackTraceInfo__type_name,
  (void*) SignalHandlerManager__init_object,
  (void*) SignalHandlerManager__type_name,
  (void*) CmdLazyAnd__init__Token_Cmd_Cmd,
  (void*) CmdLazyAnd__init__Token_Cmd_Cmd_Int32,
  (void*) CmdLazyAnd__create_duplicate,
  (void*) CmdLazyAnd__resolve,
  (void*) CmdLazyAnd__optimize,
  (void*) CmdLazyAnd__write_etc,
  (void*) CmdLazyAnd__to_cpp,
  (void*) CmdLazyAnd__to_cs,
  (void*) CmdLazyAnd__to_java,
  (void*) CmdLazyAnd__init_object,
  (void*) CmdLazyAnd__type_name,
  NULL,
  NULL,
  (void*) CmdLocalVarDeclaration__init__Token_LocalVarInfo_Cmd,
  (void*) CmdLocalVarDeclaration__create_duplicate,
  (void*) CmdLocalVarDeclaration__resolve,
  (void*) CmdLocalVarDeclaration__init_object,
  (void*) CmdLocalVarDeclaration__type_name,
  (void*) CmdLazyOr__init__Token_Cmd_Cmd,
  (void*) CmdLazyOr__init__Token_Cmd_Cmd_Int32,
  (void*) CmdLazyOr__create_duplicate,
  (void*) CmdLazyOr__resolve,
  (void*) CmdLazyOr__optimize,
  (void*) CmdLazyOr__to_cs,
  (void*) CmdLazyOr__to_java,
  (void*) CmdLazyOr__write_etc,
  (void*) CmdLazyOr__to_cpp,
  (void*) CmdLazyOr__init_object,
  (void*) CmdLazyOr__type_name,
  (void*) CmdAssignZeroValue__init__Token_LocalVarInfo,
  (void*) CmdAssignZeroValue__create_duplicate,
  (void*) CmdAssignZeroValue__resolve,
  (void*) CmdAssignZeroValue__init_object,
  (void*) CmdAssignZeroValue__type_name,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__create_duplicate,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__resolve,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__optimize,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__write_etc,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_cpp,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_cs,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_java,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__init_object,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__type_name,
  (void*) CmdSub__init_object,
  (void*) CmdSub__type_name,
  (void*) Stopwatch__init__Logical,
  (void*) Stopwatch__elapsed_ms,
  (void*) Stopwatch__to_String,
  (void*) Stopwatch__init_object,
  (void*) Stopwatch__type_name,
  (void*) LiteralLogical__init__Token_Logical,
  (void*) LiteralLogical__require_logical,
  (void*) LiteralLogical__as_Logical,
  (void*) LiteralLogical__init_object,
  (void*) LiteralLogical__type_name,
  (void*) HashTableMappingReader_of_Object_and_Int32__available,
  (void*) HashTableMappingReader_of_Object_and_Int32__to_List,
  (void*) HashTableMappingReader_of_Object_and_Int32__to_String,
  (void*) HashTableMappingReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32,
  (void*) HashTableMappingReader_of_Object_and_Int32__prep_next,
  (void*) HashTableMappingReader_of_Object_and_Int32__has_another,
  (void*) HashTableMappingReader_of_Object_and_Int32__read,
  (void*) HashTableMappingReader_of_Object_and_Int32__init_object,
  (void*) HashTableMappingReader_of_Object_and_Int32__type_name,
  (void*) RangeIteratorAscending_of_Int32__available,
  (void*) RangeIteratorAscending_of_Int32__to_List,
  (void*) RangeIteratorAscending_of_Int32__to_String,
  (void*) RangeIteratorAscending_of_Int32__init__Int32_Int32_Int32,
  (void*) RangeIteratorAscending_of_Int32__create_duplicate,
  (void*) RangeIteratorAscending_of_Int32__has_another,
  (void*) RangeIteratorAscending_of_Int32__read,
  (void*) RangeIteratorAscending_of_Int32__init_object,
  (void*) RangeIteratorAscending_of_Int32__type_name,
  (void*) Enum_of_Qualifiers__prep__Qualifiers_String,
  (void*) Enum_of_Qualifiers__init_object,
  (void*) Enum_of_Qualifiers__type_name,
  (void*) DelegateMaker__filter__String,
  (void*) DelegateMaker__init_object,
  (void*) DelegateMaker__type_name,
  (void*) Mapping_of_Int32_and_Int32__init__Int32_Int32,
  (void*) Mapping_of_Int32_and_Int32__to_String,
  (void*) Mapping_of_Int32_and_Int32__init_object,
  (void*) Mapping_of_Int32_and_Int32__type_name,
  (void*) CmdMul__optimize,
  (void*) CmdMul__init_object,
  (void*) CmdMul__type_name,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__to_List,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__to_String,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__init__Collection_of_Mapping_of_Object_and_Object_Array_of_Mapping_of_Object_and_Object_Int32_Int32,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__create_duplicate,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__has_another,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__remaining,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__read,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__init_object,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__type_name,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__to_List,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__to_String,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__init__Collection_of_HashTable_of_String_and_LocalVarInfo_Array_of_HashTable_of_String_and_LocalVarInfo_Int32_Int32,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__create_duplicate,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__has_another,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__remaining,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__read,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__init_object,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__type_name,
  (void*) CmdDiv__optimize,
  (void*) CmdDiv__init_object,
  (void*) CmdDiv__type_name,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__to_List,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__to_String,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__init__Collection_of_HashTableBin_of_Int32_and_Int32_Array_of_HashTableBin_of_Int32_and_Int32_Int32_Int32,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__create_duplicate,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__has_another,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__remaining,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__read,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__init_object,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__type_name,
  (void*) ArrayReader_of_CmdCatch__to_List,
  (void*) ArrayReader_of_CmdCatch__to_String,
  (void*) ArrayReader_of_CmdCatch__init__Collection_of_CmdCatch_Array_of_CmdCatch_Int32_Int32,
  (void*) ArrayReader_of_CmdCatch__create_duplicate,
  (void*) ArrayReader_of_CmdCatch__has_another,
  (void*) ArrayReader_of_CmdCatch__remaining,
  (void*) ArrayReader_of_CmdCatch__read,
  (void*) ArrayReader_of_CmdCatch__init_object,
  (void*) ArrayReader_of_CmdCatch__type_name,
  (void*) ArrayReverseReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo,
  (void*) ArrayReverseReader_of_PropertyInfo__init__Collection_of_PropertyInfo_Array_of_PropertyInfo_Int32_Int32_Int32,
  (void*) ArrayReverseReader_of_PropertyInfo__create_duplicate,
  (void*) ArrayReverseReader_of_PropertyInfo__has_another,
  (void*) ArrayReverseReader_of_PropertyInfo__remaining,
  (void*) ArrayReverseReader_of_PropertyInfo__read,
  (void*) ArrayReverseReader_of_PropertyInfo__init_object,
  (void*) ArrayReverseReader_of_PropertyInfo__type_name,
  (void*) ArrayList_of_StructureType__to_String,
  (void*) ArrayList_of_StructureType__init,
  (void*) ArrayList_of_StructureType__init__Int32,
  (void*) ArrayList_of_StructureType__ensure_count__Int32,
  (void*) ArrayList_of_StructureType__add__StructureType,
  (void*) ArrayList_of_StructureType__create_duplicate,
  (void*) ArrayList_of_StructureType__clear,
  (void*) ArrayList_of_StructureType__init_object,
  (void*) ArrayList_of_StructureType__type_name,
  (void*) CmdCmpLE__to_cpp,
  (void*) CmdCmpLE__to_cs,
  (void*) CmdCmpLE__to_java,
  (void*) CmdCmpLE__init_object,
  (void*) CmdCmpLE__type_name,
  (void*) CmdNegate__create_duplicate,
  (void*) CmdNegate__resolve,
  (void*) CmdNegate__write_etc,
  (void*) CmdNegate__to_cpp,
  (void*) CmdNegate__to_cs,
  (void*) CmdNegate__to_java,
  (void*) CmdNegate__init_object,
  (void*) CmdNegate__type_name,
  (void*) CmdOr__init_object,
  (void*) CmdOr__type_name,
  (void*) SpecializedComparator_2189__init,
  (void*) SpecializedComparator_2189__a_before_b__MethodInfo_MethodInfo,
  (void*) SpecializedComparator_2189__init_object,
  (void*) SpecializedComparator_2189__type_name,
  (void*) Mapping_of_Object_and_Object__init__Object_Object,
  (void*) Mapping_of_Object_and_Object__to_String,
  (void*) Mapping_of_Object_and_Object__init_object,
  (void*) Mapping_of_Object_and_Object__type_name,
  (void*) RadiansManager__init_object,
  (void*) RadiansManager__type_name,
  (void*) CmdOpenScope__init__Token,
  (void*) CmdOpenScope__create_duplicate,
  (void*) CmdOpenScope__resolve,
  (void*) CmdOpenScope__init_object,
  (void*) CmdOpenScope__type_name,
  (void*) SignalDataArg__init__Int32_Int32_Logical_Real64_Real64,
  (void*) SignalDataArg__init_object,
  (void*) SignalDataArg__type_name,
  (void*) ListOf_of_MethodInfo__create__Int32,
  (void*) ListOf_of_MethodInfo__init_object,
  (void*) ListOf_of_MethodInfo__type_name,
  (void*) CmdRangeGE__create_duplicate,
  (void*) CmdRangeGE__resolve,
  (void*) CmdRangeGE__init_object,
  (void*) CmdRangeGE__type_name,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__init__Token_MethodVarInfo_Cmd,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__create_duplicate,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__to_String,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__resolve,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__finalize_structure_info,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__write_etc,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__init_object,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__type_name,
  (void*) CmdLocalVarModAndAssign__to_cpp,
  (void*) CmdLocalVarModAndAssign__to_cs,
  (void*) CmdLocalVarModAndAssign__to_java,
  (void*) CmdLocalVarModAndAssign__init_object,
  (void*) CmdLocalVarModAndAssign__type_name,
  (void*) CmdCmpLT__to_cpp,
  (void*) CmdCmpLT__to_cs,
  (void*) CmdCmpLT__to_java,
  (void*) CmdCmpLT__init_object,
  (void*) CmdCmpLT__type_name,
  (void*) ArrayReverseReader_of_Char__init__Collection_of_Char_Array_of_Char,
  (void*) ArrayReverseReader_of_Char__init__Collection_of_Char_Array_of_Char_Int32_Int32_Int32,
  (void*) ArrayReverseReader_of_Char__create_duplicate,
  (void*) ArrayReverseReader_of_Char__has_another,
  (void*) ArrayReverseReader_of_Char__remaining,
  (void*) ArrayReverseReader_of_Char__peek,
  (void*) ArrayReverseReader_of_Char__read,
  (void*) ArrayReverseReader_of_Char__init_object,
  (void*) ArrayReverseReader_of_Char__type_name,
  (void*) FileReader__consume__Char,
  (void*)(SlagObject*(*)(SXCRef,SXCRef)) FileReader__init__String,
  (void*)(void(*)(SXCRef)) FileReader__close,
  (void*)(SlagLogical(*)(SXCRef)) FileReader__has_another,
  (void*)(SlagChar(*)(SXCRef)) FileReader__peek,
  (void*)(SlagChar(*)(SXCRef)) FileReader__read,
  (void*)(SlagInt32(*)(SXCRef,SXCRef,SlagInt32,SlagInt32)) FileReader__read__Array_of_Char_Int32_Int32,
  (void*)(SlagInt32(*)(SXCRef)) FileReader__remaining,
  (void*) FileReader__to_List,
  (void*) FileReader__to_String,
  (void*) FileReader__clean_up,
  (void*) FileReader__init_object,
  (void*) FileReader__type_name,
  (void*) CmdRightShifted__to_cpp,
  (void*) CmdRightShifted__to_cs,
  (void*) CmdRightShifted__to_java,
  (void*) CmdRightShifted__init_object,
  (void*) CmdRightShifted__type_name,
  (void*) CallStackLimitReached__init__Array_of_Int64,
  (void*) CallStackLimitReached__init_object,
  (void*) CallStackLimitReached__type_name,
  (void*) DivideByZeroError__init,
  (void*) DivideByZeroError__init__String,
  (void*) DivideByZeroError__init_object,
  (void*) DivideByZeroError__type_name,
  (void*) HashTableValueReader_of_Object_and_Int32__available,
  (void*) HashTableValueReader_of_Object_and_Int32__to_List,
  (void*) HashTableValueReader_of_Object_and_Int32__to_String,
  (void*) HashTableValueReader_of_Object_and_Int32__init__Reader_of_HashTableBin_of_Object_and_Int32,
  (void*) HashTableValueReader_of_Object_and_Int32__prep_next,
  (void*) HashTableValueReader_of_Object_and_Int32__has_another,
  (void*) HashTableValueReader_of_Object_and_Int32__read,
  (void*) HashTableValueReader_of_Object_and_Int32__init_object,
  (void*) HashTableValueReader_of_Object_and_Int32__type_name,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__to_List,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__to_String,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__init__Collection_of_HashTableBin_of_Int32_and_Object_Array_of_HashTableBin_of_Int32_and_Object_Int32_Int32,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__create_duplicate,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__has_another,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__remaining,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__read,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__init_object,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__type_name,
  (void*) CmdPropertyRead__create_duplicate,
  (void*) CmdPropertyRead__to_String,
  (void*) CmdPropertyRead__resolve,
  (void*) CmdPropertyRead__write_etc,
  (void*) CmdPropertyRead__to_cpp,
  (void*) CmdPropertyRead__to_cs,
  (void*) CmdPropertyRead__to_java,
  (void*) CmdPropertyRead__init_object,
  (void*) CmdPropertyRead__type_name,
  (void*) LineReader__available,
  (void*) LineReader__to_List,
  (void*) LineReader__to_String,
  (void*) LineReader__init__Reader_of_Char,
  (void*) LineReader__has_another,
  (void*) LineReader__read,
  (void*) LineReader__prep_next,
  (void*) LineReader__init_object,
  (void*) LineReader__type_name,
  (void*) Mapping_of_String_and_Int32__to_String,
  (void*) Mapping_of_String_and_Int32__init_object,
  (void*) Mapping_of_String_and_Int32__type_name,
  (void*) CoerceReader_of_TypeInfo__available,
  (void*) CoerceReader_of_TypeInfo__to_List,
  (void*) CoerceReader_of_TypeInfo__to_String,
  (void*) CoerceReader_of_TypeInfo__init__Reader_of_Object,
  (void*) CoerceReader_of_TypeInfo__has_another,
  (void*) CoerceReader_of_TypeInfo__read,
  (void*) CoerceReader_of_TypeInfo__init_object,
  (void*) CoerceReader_of_TypeInfo__type_name,
  (void*) Mapping_of_String_and_MethodGroup__to_String,
  (void*) Mapping_of_String_and_MethodGroup__init_object,
  (void*) Mapping_of_String_and_MethodGroup__type_name,
  (void*) CmdRangeGT__create_duplicate,
  (void*) CmdRangeGT__resolve,
  (void*) CmdRangeGT__init_object,
  (void*) CmdRangeGT__type_name,
  (void*) ArrayList_of_ControlStructureInfo__remove_last,
  (void*) ArrayList_of_ControlStructureInfo__to_String,
  (void*) ArrayList_of_ControlStructureInfo__init,
  (void*) ArrayList_of_ControlStructureInfo__init__Int32,
  (void*) ArrayList_of_ControlStructureInfo__create_reader,
  (void*) ArrayList_of_ControlStructureInfo__reverse_order,
  (void*) ArrayList_of_ControlStructureInfo__count,
  (void*) ArrayList_of_ControlStructureInfo__modification_count,
  (void*) ArrayList_of_ControlStructureInfo__ensure_count__Int32,
  (void*) ArrayList_of_ControlStructureInfo__add__ControlStructureInfo,
  (void*) ArrayList_of_ControlStructureInfo__create_duplicate,
  (void*) ArrayList_of_ControlStructureInfo__clear,
  (void*) ArrayList_of_ControlStructureInfo__init_object,
  (void*) ArrayList_of_ControlStructureInfo__type_name,
  (void*) CmdCatch__init__Token_LocalVarInfo_CmdStatementList,
  (void*) CmdCatch__create_duplicate,
  (void*) CmdCatch__resolve,
  (void*) CmdCatch__finalize_calls,
  (void*) CmdCatch__finalize_structure_info,
  (void*) CmdCatch__group_dynamic_methods,
  (void*) CmdCatch__to_inline__CmdList,
  (void*) CmdCatch__write_etc,
  (void*) CmdCatch__to_cpp,
  (void*) CmdCatch__to_cs,
  (void*) CmdCatch__to_java,
  (void*) CmdCatch__init_object,
  (void*) CmdCatch__type_name,
  (void*) ArrayReader_of_CategoryInfo__to_List,
  (void*) ArrayReader_of_CategoryInfo__to_String,
  (void*) ArrayReader_of_CategoryInfo__init__Collection_of_CategoryInfo_Array_of_CategoryInfo_Int32_Int32,
  (void*) ArrayReader_of_CategoryInfo__create_duplicate,
  (void*) ArrayReader_of_CategoryInfo__has_another,
  (void*) ArrayReader_of_CategoryInfo__remaining,
  (void*) ArrayReader_of_CategoryInfo__read,
  (void*) ArrayReader_of_CategoryInfo__init_object,
  (void*) ArrayReader_of_CategoryInfo__type_name,
  (void*) ObjectManager__create_duplicate__Object,
  (void*) ObjectManager__init_object,
  (void*) ObjectManager__type_name,
  (void*) ControlStructureInfo__init__StructureType_CmdStructure_String,
  (void*) ControlStructureInfo__init_object,
  (void*) ControlStructureInfo__type_name,
  (void*) ArrayList_of_StackTraceInfo__last,
  (void*) ArrayList_of_StackTraceInfo__remove_last,
  (void*) ArrayList_of_StackTraceInfo__to_String,
  (void*) ArrayList_of_StackTraceInfo__init,
  (void*) ArrayList_of_StackTraceInfo__init__Int32,
  (void*) ArrayList_of_StackTraceInfo__create_reader,
  (void*) ArrayList_of_StackTraceInfo__count,
  (void*) ArrayList_of_StackTraceInfo__modification_count,
  (void*) ArrayList_of_StackTraceInfo__ensure_count__Int32,
  (void*) ArrayList_of_StackTraceInfo__add__StackTraceInfo,
  (void*) ArrayList_of_StackTraceInfo__create_duplicate,
  (void*) ArrayList_of_StackTraceInfo__clear,
  (void*) ArrayList_of_StackTraceInfo__init_object,
  (void*) ArrayList_of_StackTraceInfo__type_name,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__to_String,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__init,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__init__Int32,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__create_reader,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__count,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__modification_count,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__ensure_count__Int32,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__add__Mapping_of_Object_and_Object,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__create_duplicate,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__clear,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__init_object,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__type_name,
  (void*) HashTableBin_of_Object_and_Object__init__Int32,
  (void*) HashTableBin_of_Object_and_Object__index_of_entry__Object,
  (void*) HashTableBin_of_Object_and_Object__find_entry__Object,
  (void*) HashTableBin_of_Object_and_Object__add_entry__Object_Object,
  (void*) HashTableBin_of_Object_and_Object__add_entry__Mapping_of_Object_and_Object,
  (void*) HashTableBin_of_Object_and_Object__to_String,
  (void*) HashTableBin_of_Object_and_Object__init_object,
  (void*) HashTableBin_of_Object_and_Object__type_name,
  (void*) CmdLogicalNot__create_duplicate,
  (void*) CmdLogicalNot__resolve,
  (void*) CmdLogicalNot__to_cpp,
  (void*) CmdLogicalNot__init_object,
  (void*) CmdLogicalNot__type_name,
  (void*) CmdLogicalXor__create_duplicate,
  (void*) CmdLogicalXor__resolve,
  (void*) CmdLogicalXor__init_object,
  (void*) CmdLogicalXor__type_name,
  (void*) ArrayReader_of_SlagError__to_List,
  (void*) ArrayReader_of_SlagError__to_String,
  (void*) ArrayReader_of_SlagError__init__Collection_of_SlagError_Array_of_SlagError_Int32_Int32,
  (void*) ArrayReader_of_SlagError__create_duplicate,
  (void*) ArrayReader_of_SlagError__has_another,
  (void*) ArrayReader_of_SlagError__remaining,
  (void*) ArrayReader_of_SlagError__read,
  (void*) ArrayReader_of_SlagError__init_object,
  (void*) ArrayReader_of_SlagError__type_name,
  (void*) SlagParser__init__TokenReader,
  (void*) SlagParser__parse_pending,
  (void*) SlagParser__parse_framework__TypeInfo,
  (void*) SlagParser__include__SlagFile,
  (void*) SlagParser__include_dir__String_Token,
  (void*) SlagParser__already_included__String,
  (void*) SlagParser__find_file__String_Token,
  (void*) SlagParser__next_is_end_cmd,
  (void*) SlagParser__next_elseif_is_not_at_eol,
  (void*) SlagParser__consume__Int32,
  (void*) SlagParser__consume_id__String,
  (void*) SlagParser__must_consume_id__String,
  (void*) SlagParser__discard_eols,
  (void*) SlagParser__must_consume__Int32_String,
  (void*) SlagParser__consume_eol,
  (void*) SlagParser__consume_end_cmd,
  (void*) SlagParser__must_consume_eol,
  (void*) SlagParser__must_consume_end_cmd,
  (void*) SlagParser__must_read_identifier__String,
  (void*) SlagParser__must_read_string__String,
  (void*) SlagParser__parse_next,
  (void*) SlagParser__parse_directive,
  (void*) SlagParser__parse_framework,
  (void*) SlagParser__parse_data_type,
  (void*) SlagParser__parse_substitution_tokens,
  (void*) SlagParser__parse_list_dimensions,
  (void*) SlagParser__parse_type_qualifiers,
  (void*) SlagParser__parse_property_qualifiers,
  (void*) SlagParser__parse_method_qualifiers,
  (void*) SlagParser__parse_type_def__Token_Qualifiers_Int32_String,
  (void*) SlagParser__parse_type_def__TokenReader_TypeInfo_Qualifiers_Int32_String,
  (void*) SlagParser__parse_compound_def__Token_Qualifiers,
  (void*) SlagParser__parse_compound_def__TokenReader_TypeInfo,
  (void*) SlagParser__parse_placeholder_types__Logical,
  (void*) SlagParser__parse_placeholder_type__Logical,
  (void*) SlagParser__parse_doc_comment,
  (void*) SlagParser__parse_param_list__MethodInfo,
  (void*) SlagParser__parse_param__MethodInfo,
  (void*) SlagParser__parse_member_defs__TypeInfo_Int32_String,
  (void*) SlagParser__parse_method__TypeInfo_Logical,
  (void*) SlagParser__next_is_method,
  (void*) SlagParser__parse_construct__Logical,
  (void*) SlagParser__parse_singletons__TypeInfo,
  (void*) SlagParser__parse_category_defs__TypeInfo,
  (void*) SlagParser__parse_enumerate_defs__TypeInfo,
  (void*) SlagParser__parse_properties__TypeInfo_Logical,
  (void*) SlagParser__parse_property_decl_list,
  (void*) SlagParser__parse_property_decl,
  (void*) SlagParser__parse_opX,
  (void*) SlagParser__parse_multi_line_statements,
  (void*) SlagParser__parse_multi_line_statements__ArrayList_of_Int32,
  (void*) SlagParser__next_is_statement__ArrayList_of_Int32,
  (void*) SlagParser__check_out_of_place_keywords,
  (void*) SlagParser__parse_single_line_statements,
  (void*) SlagParser__parse_statement__CmdStatementList_Logical,
  (void*) SlagParser__parse_label_def,
  (void*) SlagParser__create_escape_cmd__Token_StructureType,
  (void*) SlagParser__must_find_structure_id__StructureType_String_Token,
  (void*) SlagParser__must_find_structure_id__StructureType_Token,
  (void*) SlagParser__must_find_iteration_id__String_Token,
  (void*) SlagParser__must_find_iteration_id__Token,
  (void*) SlagParser__must_find_foreach_in_with_named_var__Token_String,
  (void*) SlagParser__push_structure_info__StructureType_CmdStructure_String,
  (void*) SlagParser__parse_block,
  (void*) SlagParser__parse_if_statement,
  (void*) SlagParser__parse_which_statement__Logical,
  (void*) SlagParser__parse_contingent,
  (void*) SlagParser__parse_try_statement,
  (void*) SlagParser__parse_loop,
  (void*) SlagParser__parse_while_statement,
  (void*) SlagParser__parse_foreach_loop,
  (void*) SlagParser__parse_local_vars__CmdStatementList,
  (void*) SlagParser__parse_op_range,
  (void*) SlagParser__parse_op_logical_xor,
  (void*) SlagParser__parse_op_logical_xor__Cmd,
  (void*) SlagParser__parse_op_logical_or,
  (void*) SlagParser__parse_op_logical_or__Cmd,
  (void*) SlagParser__parse_op_logical_and,
  (void*) SlagParser__parse_op_logical_and__Cmd,
  (void*) SlagParser__parse_op_relational,
  (void*) SlagParser__parse_op_relational__Cmd,
  (void*) SlagParser__parse_op_bitwise_xor,
  (void*) SlagParser__parse_op_bitwise_xor__Cmd,
  (void*) SlagParser__parse_op_bitwise_or,
  (void*) SlagParser__parse_op_bitwise_or__Cmd,
  (void*) SlagParser__parse_op_bitwise_and,
  (void*) SlagParser__parse_op_bitwise_and__Cmd,
  (void*) SlagParser__parse_op_summation,
  (void*) SlagParser__parse_op_summation__Cmd,
  (void*) SlagParser__parse_op_product,
  (void*) SlagParser__parse_op_product__Cmd,
  (void*) SlagParser__parse_op_exponent,
  (void*) SlagParser__parse_op_exponent__Cmd,
  (void*) SlagParser__parse_op_unary,
  (void*) SlagParser__parse_op_query_valid,
  (void*) SlagParser__parse_op_member,
  (void*) SlagParser__parse_op_member__Cmd,
  (void*) SlagParser__parse_op_term,
  (void*) SlagParser__parse_meta_expression,
  (void*) SlagParser__parse_anonymous_class__CmdConstruct,
  (void*) SlagParser__parse_arg_list__Int32_Int32_String_String_Logical,
  (void*) SlagParser__parse_arg__Logical_Int32,
  (void*) SlagParser__init_object,
  (void*) SlagParser__type_name,
  (void*) CmdFormattedString__init__Token_String_CmdList,
  (void*) CmdFormattedString__create_duplicate,
  (void*) CmdFormattedString__resolve,
  (void*) CmdFormattedString__split_around_next_marker__Token_String,
  (void*) CmdFormattedString__init_object,
  (void*) CmdFormattedString__type_name,
  (void*) CoerceReader_of_Int32__available,
  (void*) CoerceReader_of_Int32__to_List,
  (void*) CoerceReader_of_Int32__to_String,
  (void*) CoerceReader_of_Int32__init__Reader_of_Int32,
  (void*) CoerceReader_of_Int32__has_another,
  (void*) CoerceReader_of_Int32__read,
  (void*) CoerceReader_of_Int32__init_object,
  (void*) CoerceReader_of_Int32__type_name,
  (void*) CompareFn_of_MethodInfo_and_a_of___init,
  (void*) CompareFn_of_MethodInfo_and_a_of___a_before_b__MethodInfo_MethodInfo,
  (void*) CompareFn_of_MethodInfo_and_a_of___init_object,
  (void*) CompareFn_of_MethodInfo_and_a_of___type_name,
  (void*) Mapping_of_String_and_MethodInfo__to_String,
  (void*) Mapping_of_String_and_MethodInfo__init_object,
  (void*) Mapping_of_String_and_MethodInfo__type_name,
  (void*) CoerceReader_of_Cmd__available,
  (void*) CoerceReader_of_Cmd__to_List,
  (void*) CoerceReader_of_Cmd__to_String,
  (void*) CoerceReader_of_Cmd__init__Reader_of_Object,
  (void*) CoerceReader_of_Cmd__has_another,
  (void*) CoerceReader_of_Cmd__read,
  (void*) CoerceReader_of_Cmd__init_object,
  (void*) CoerceReader_of_Cmd__type_name,
  (void*) Mapping_of_String_and_LocalVarInfo__to_String,
  (void*) Mapping_of_String_and_LocalVarInfo__init_object,
  (void*) Mapping_of_String_and_LocalVarInfo__type_name,
  (void*) ConcurrentModificationError__init,
  (void*) ConcurrentModificationError__init__String,
  (void*) ConcurrentModificationError__init_object,
  (void*) ConcurrentModificationError__type_name,
  (void*) CmdThisPropertyAddAndAssign__to_cpp,
  (void*) CmdThisPropertyAddAndAssign__to_cs,
  (void*) CmdThisPropertyAddAndAssign__to_java,
  (void*) CmdThisPropertyAddAndAssign__init_object,
  (void*) CmdThisPropertyAddAndAssign__type_name,
  (void*) CmdCmpIsNull__create_duplicate,
  (void*) CmdCmpIsNull__type,
  (void*) CmdCmpIsNull__resolve,
  (void*) CmdCmpIsNull__write_etc,
  (void*) CmdCmpIsNull__to_cpp,
  (void*) CmdCmpIsNull__to_cs,
  (void*) CmdCmpIsNull__to_java,
  (void*) CmdCmpIsNull__init_object,
  (void*) CmdCmpIsNull__type_name,
  (void*) HashTableBin_of_Object_and_Int32__init__Int32,
  (void*) HashTableBin_of_Object_and_Int32__index_of_entry__Object,
  (void*) HashTableBin_of_Object_and_Int32__find_entry__Object,
  (void*) HashTableBin_of_Object_and_Int32__add_entry__Object_Int32,
  (void*) HashTableBin_of_Object_and_Int32__add_entry__Mapping_of_Object_and_Int32,
  (void*) HashTableBin_of_Object_and_Int32__to_String,
  (void*) HashTableBin_of_Object_and_Int32__init_object,
  (void*) HashTableBin_of_Object_and_Int32__type_name,
  (void*) InvalidOperandError__init,
  (void*) InvalidOperandError__init__String,
  (void*) InvalidOperandError__init__String_String,
  (void*) InvalidOperandError__init_object,
  (void*) InvalidOperandError__type_name,
  (void*) CmdForEachIn__init__Token_Int32_LocalVarInfo_Cmd_CmdStatementList_Logical,
  (void*) CmdForEachIn__create_duplicate,
  (void*) CmdForEachIn__resolve,
  (void*) CmdForEachIn__convert_to_while,
  (void*) CmdForEachIn__init_object,
  (void*) CmdForEachIn__type_name,
  (void*) SlagParserManager__unique_id,
  (void*) SlagParserManager__init_object,
  (void*) SlagParserManager__type_name,
  (void*) InlineClassPropertyDeclaration__init__TypeInfo_String_Cmd,
  (void*) InlineClassPropertyDeclaration__init_object,
  (void*) InlineClassPropertyDeclaration__type_name,
  (void*) HashTableMappingReader_of_Int32_and_Object__available,
  (void*) HashTableMappingReader_of_Int32_and_Object__to_List,
  (void*) HashTableMappingReader_of_Int32_and_Object__to_String,
  (void*) HashTableMappingReader_of_Int32_and_Object__init__Reader_of_HashTableBin_of_Int32_and_Object,
  (void*) HashTableMappingReader_of_Int32_and_Object__prep_next,
  (void*) HashTableMappingReader_of_Int32_and_Object__has_another,
  (void*) HashTableMappingReader_of_Int32_and_Object__read,
  (void*) HashTableMappingReader_of_Int32_and_Object__init_object,
  (void*) HashTableMappingReader_of_Int32_and_Object__type_name,
  (void*) ArrayReader_of_StackTraceInfo__to_List,
  (void*) ArrayReader_of_StackTraceInfo__to_String,
  (void*) ArrayReader_of_StackTraceInfo__init__Collection_of_StackTraceInfo_Array_of_StackTraceInfo_Int32_Int32,
  (void*) ArrayReader_of_StackTraceInfo__create_duplicate,
  (void*) ArrayReader_of_StackTraceInfo__has_another,
  (void*) ArrayReader_of_StackTraceInfo__remaining,
  (void*) ArrayReader_of_StackTraceInfo__read,
  (void*) ArrayReader_of_StackTraceInfo__init_object,
  (void*) ArrayReader_of_StackTraceInfo__type_name,
  (void*) Mapping_of_String_and_PropertyInfo__to_String,
  (void*) Mapping_of_String_and_PropertyInfo__init_object,
  (void*) Mapping_of_String_and_PropertyInfo__type_name,
  (void*) Enum_of_StructureType__prep__StructureType_String,
  (void*) Enum_of_StructureType__init_object,
  (void*) Enum_of_StructureType__type_name,
  (void*) ParsePosManager__init_object,
  (void*) ParsePosManager__type_name,
  (void*) Errors__add__SlagError,
  (void*) Errors__print,
  (void*) Errors__init_object,
  (void*) Errors__type_name,
  (void*) CmdImplicitListLiteral__init__Token_ArrayList_of_Cmd,
  (void*) CmdImplicitListLiteral__create_duplicate,
  (void*) CmdImplicitListLiteral__resolve,
  (void*) CmdImplicitListLiteral__init_object,
  (void*) CmdImplicitListLiteral__type_name
};

static void call____( void* method_ptr )
{
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef))method_ptr)(context);
}

static void call____Int32( void* method_ptr )
{
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT32( ((SlagInt32(*)(SXCRef))method_ptr)(context) );
}

static void call____Object( void* method_ptr )
{
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef))method_ptr)(context) );
}

static void call__Object__Logical( void* method_ptr )
{
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SXCRef))method_ptr)(context,p1) );
}

static void call__Object__Int32( void* method_ptr )
{
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT32( ((SlagInt32(*)(SXCRef,SXCRef))method_ptr)(context,p1) );
}

static void call____Char( void* method_ptr )
{
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_CHAR( ((SlagChar(*)(SXCRef))method_ptr)(context) );
}

static void call__Char_Int32__Int32( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagChar    p1 = SLAG_POP_CHAR();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT32( ((SlagInt32(*)(SXCRef,SlagChar,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Int32__Char( void* method_ptr )
{
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_CHAR( ((SlagChar(*)(SXCRef,SlagInt32))method_ptr)(context,p1) );
}

static void call__Object__Object( void* method_ptr )
{
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SXCRef))method_ptr)(context,p1) );
}

static void call__Char__Object( void* method_ptr )
{
  SlagChar    p1 = SLAG_POP_CHAR();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagChar))method_ptr)(context,p1) );
}

static void call__Int32_Int32__Object( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagInt32,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Int32__Object( void* method_ptr )
{
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagInt32))method_ptr)(context,p1) );
}

static void call__Object_Int32__Int32( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT32( ((SlagInt32(*)(SXCRef,SXCRef,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Char__Logical( void* method_ptr )
{
  SlagChar    p1 = SLAG_POP_CHAR();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SlagChar))method_ptr)(context,p1) );
}

static void call__Object_Object__Object( void* method_ptr )
{
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2) );
}

static void call__Int32_Object_ParsePos_Object__( void* method_ptr )
{
  SlagObject* p4 = SLAG_POP_REF();
  CompoundParsePos p3 = SLAG_POP(CompoundParsePos);
  SlagObject* p2 = SLAG_POP_REF();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SlagInt32,SXCRef,CompoundParsePos,SXCRef))method_ptr)(context,p1,p2,p3,p4);
}

static void call__Object__( void* method_ptr )
{
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef))method_ptr)(context,p1);
}

static void call____Logical( void* method_ptr )
{
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef))method_ptr)(context) );
}

static void call__Object_Object_Object__( void* method_ptr )
{
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2,p3);
}

static void call__Object_Int32_Int32_Int32__( void* method_ptr )
{
  SlagInt32   p4 = SLAG_POP_INT32();
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagInt32,SlagInt32,SlagInt32))method_ptr)(context,p1,p2,p3,p4);
}

static void call__Int32_Int32__( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SlagInt32,SlagInt32))method_ptr)(context,p1,p2);
}

static void call__Int32__( void* method_ptr )
{
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SlagInt32))method_ptr)(context,p1);
}

static void call__Int32_Real64__( void* method_ptr )
{
  SlagReal64  p2 = SLAG_POP_REAL64();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SlagInt32,SlagReal64))method_ptr)(context,p1,p2);
}

static void call__Object_Object__( void* method_ptr )
{
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2);
}

static void call__Int32_Object__( void* method_ptr )
{
  SlagObject* p2 = SLAG_POP_REF();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SlagInt32,SXCRef))method_ptr)(context,p1,p2);
}

static void call__Object_Object_Object__Object( void* method_ptr )
{
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2,p3) );
}

static void call__Object_Int32__( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagInt32))method_ptr)(context,p1,p2);
}

static void call__Object_Object_Object_Object__( void* method_ptr )
{
  SlagObject* p4 = SLAG_POP_REF();
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2,p3,p4);
}

static void call__Object_Logical__( void* method_ptr )
{
  SlagLogical p2 = SLAG_POP_LOGICAL();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagLogical))method_ptr)(context,p1,p2);
}

static void call__Object_Logical__Object( void* method_ptr )
{
  SlagLogical p2 = SLAG_POP_LOGICAL();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SXCRef,SlagLogical))method_ptr)(context,p1,p2) );
}

static void call__Object_Object_Object_Object_Int32__( void* method_ptr )
{
  SlagInt32   p5 = SLAG_POP_INT32();
  SlagObject* p4 = SLAG_POP_REF();
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SXCRef,SXCRef,SlagInt32))method_ptr)(context,p1,p2,p3,p4,p5);
}

static void call__Object_Int32_Object__( void* method_ptr )
{
  SlagObject* p3 = SLAG_POP_REF();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagInt32,SXCRef))method_ptr)(context,p1,p2,p3);
}

static void call__Object_Int32_Object_Object_Object__( void* method_ptr )
{
  SlagObject* p5 = SLAG_POP_REF();
  SlagObject* p4 = SLAG_POP_REF();
  SlagObject* p3 = SLAG_POP_REF();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagInt32,SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2,p3,p4,p5);
}

static void call__Object_Object_Int32_Int32__( void* method_ptr )
{
  SlagInt32   p4 = SLAG_POP_INT32();
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SlagInt32,SlagInt32))method_ptr)(context,p1,p2,p3,p4);
}

static void call__Char__( void* method_ptr )
{
  SlagChar    p1 = SLAG_POP_CHAR();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SlagChar))method_ptr)(context,p1);
}

static void call__Int32__Int32( void* method_ptr )
{
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT32( ((SlagInt32(*)(SXCRef,SlagInt32))method_ptr)(context,p1) );
}

static void call__Int32__Logical( void* method_ptr )
{
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SlagInt32))method_ptr)(context,p1) );
}

static void call__Real64__Real64( void* method_ptr )
{
  SlagReal64  p1 = SLAG_POP_REAL64();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REAL64( ((SlagReal64(*)(SXCRef,SlagReal64))method_ptr)(context,p1) );
}

static void call__Int32_Int32__Int32( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT32( ((SlagInt32(*)(SXCRef,SlagInt32,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Real64__Logical( void* method_ptr )
{
  SlagReal64  p1 = SLAG_POP_REAL64();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SlagReal64))method_ptr)(context,p1) );
}

static void call__Object_Object_Object_Object_Object_Object_Int32__( void* method_ptr )
{
  SlagInt32   p7 = SLAG_POP_INT32();
  SlagObject* p6 = SLAG_POP_REF();
  SlagObject* p5 = SLAG_POP_REF();
  SlagObject* p4 = SLAG_POP_REF();
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SXCRef,SXCRef,SXCRef,SXCRef,SlagInt32))method_ptr)(context,p1,p2,p3,p4,p5,p6,p7);
}

static void call__Object_Int64__( void* method_ptr )
{
  SlagInt64   p2 = SLAG_POP_INT64();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagInt64))method_ptr)(context,p1,p2);
}

static void call__Char_Int32__Object( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagChar    p1 = SLAG_POP_CHAR();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagChar,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Int64__Object( void* method_ptr )
{
  SlagInt64   p1 = SLAG_POP_INT64();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagInt64))method_ptr)(context,p1) );
}

static void call__Logical__Object( void* method_ptr )
{
  SlagLogical p1 = SLAG_POP_LOGICAL();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagLogical))method_ptr)(context,p1) );
}

static void call__Object_ParsePos__Object( void* method_ptr )
{
  CompoundParsePos p2 = SLAG_POP(CompoundParsePos);
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SXCRef,CompoundParsePos))method_ptr)(context,p1,p2) );
}

static void call__Object_Int32__Object( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SXCRef,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Int32_Int32__Logical( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SlagInt32,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Object_Object_Logical__Object( void* method_ptr )
{
  SlagLogical p3 = SLAG_POP_LOGICAL();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SXCRef,SXCRef,SlagLogical))method_ptr)(context,p1,p2,p3) );
}

static void call__Object_Object_Object_Object__Object( void* method_ptr )
{
  SlagObject* p4 = SLAG_POP_REF();
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SXCRef,SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2,p3,p4) );
}

static void call__Object_Object_Object_Object_Object__Object( void* method_ptr )
{
  SlagObject* p5 = SLAG_POP_REF();
  SlagObject* p4 = SLAG_POP_REF();
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SXCRef,SXCRef,SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2,p3,p4,p5) );
}

static void call__Object_Object_Object__Logical( void* method_ptr )
{
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2,p3) );
}

static void call__Object_Object_Object_Int32__Object( void* method_ptr )
{
  SlagInt32   p4 = SLAG_POP_INT32();
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SXCRef,SXCRef,SXCRef,SlagInt32))method_ptr)(context,p1,p2,p3,p4) );
}

static void call__Int32_Object__Logical( void* method_ptr )
{
  SlagObject* p2 = SLAG_POP_REF();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SlagInt32,SXCRef))method_ptr)(context,p1,p2) );
}

static void call____Int64( void* method_ptr )
{
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT64( ((SlagInt64(*)(SXCRef))method_ptr)(context) );
}

static void call__Int64__( void* method_ptr )
{
  SlagInt64   p1 = SLAG_POP_INT64();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SlagInt64))method_ptr)(context,p1);
}

static void call__Logical__( void* method_ptr )
{
  SlagLogical p1 = SLAG_POP_LOGICAL();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SlagLogical))method_ptr)(context,p1);
}

static void call__Object_Real64__( void* method_ptr )
{
  SlagReal64  p2 = SLAG_POP_REAL64();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagReal64))method_ptr)(context,p1,p2);
}

static void call__Int32_Int32_Int32__( void* method_ptr )
{
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SlagInt32,SlagInt32,SlagInt32))method_ptr)(context,p1,p2,p3);
}

static void call__Byte__Object( void* method_ptr )
{
  SlagByte    p1 = SLAG_POP_BYTE();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagByte))method_ptr)(context,p1) );
}

static void call__Object_Object_Logical__( void* method_ptr )
{
  SlagLogical p3 = SLAG_POP_LOGICAL();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SlagLogical))method_ptr)(context,p1,p2,p3);
}

static void call__Char_Int32__Logical( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagChar    p1 = SLAG_POP_CHAR();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SlagChar,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Char__Int32( void* method_ptr )
{
  SlagChar    p1 = SLAG_POP_CHAR();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT32( ((SlagInt32(*)(SXCRef,SlagChar))method_ptr)(context,p1) );
}

static void call__Int64_Int32_Int32__Object( void* method_ptr )
{
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagInt64   p1 = SLAG_POP_INT64();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagInt64,SlagInt32,SlagInt32))method_ptr)(context,p1,p2,p3) );
}

static void call__Real64_Int32_Int32_Int32_Char__Object( void* method_ptr )
{
  SlagChar    p5 = SLAG_POP_CHAR();
  SlagInt32   p4 = SLAG_POP_INT32();
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagReal64  p1 = SLAG_POP_REAL64();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagReal64,SlagInt32,SlagInt32,SlagInt32,SlagChar))method_ptr)(context,p1,p2,p3,p4,p5) );
}

static void call__Object_Int32__Int64( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT64( ((SlagInt64(*)(SXCRef,SXCRef,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Object__Real64( void* method_ptr )
{
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REAL64( ((SlagReal64(*)(SXCRef,SXCRef))method_ptr)(context,p1) );
}

static void call__Object_Int32_Object_Object__( void* method_ptr )
{
  SlagObject* p4 = SLAG_POP_REF();
  SlagObject* p3 = SLAG_POP_REF();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagInt32,SXCRef,SXCRef))method_ptr)(context,p1,p2,p3,p4);
}

static void call__Int64__Logical( void* method_ptr )
{
  SlagInt64   p1 = SLAG_POP_INT64();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SlagInt64))method_ptr)(context,p1) );
}

static void call__Int64__Int32( void* method_ptr )
{
  SlagInt64   p1 = SLAG_POP_INT64();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT32( ((SlagInt32(*)(SXCRef,SlagInt64))method_ptr)(context,p1) );
}

static void call__Object_Object__Logical( void* method_ptr )
{
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2) );
}

static void call__Object_Int32_Object_Logical__( void* method_ptr )
{
  SlagLogical p4 = SLAG_POP_LOGICAL();
  SlagObject* p3 = SLAG_POP_REF();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagInt32,SXCRef,SlagLogical))method_ptr)(context,p1,p2,p3,p4);
}

static void call__Object_Byte__( void* method_ptr )
{
  SlagByte    p2 = SLAG_POP_BYTE();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagByte))method_ptr)(context,p1,p2);
}

static void call____ParsePos( void* method_ptr )
{
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH( CompoundParsePos, ((CompoundParsePos(*)(SXCRef))method_ptr)(context) );
}

static void call__Object_Object_Int32__( void* method_ptr )
{
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SlagInt32))method_ptr)(context,p1,p2,p3);
}

static void call__Object_Int32_Int32__( void* method_ptr )
{
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagInt32,SlagInt32))method_ptr)(context,p1,p2,p3);
}

static void call__Object_Object_Int32_Int32_Int32__( void* method_ptr )
{
  SlagInt32   p5 = SLAG_POP_INT32();
  SlagInt32   p4 = SLAG_POP_INT32();
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SlagInt32,SlagInt32,SlagInt32))method_ptr)(context,p1,p2,p3,p4,p5);
}

static void call__Int32__Real64( void* method_ptr )
{
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REAL64( ((SlagReal64(*)(SXCRef,SlagInt32))method_ptr)(context,p1) );
}

static void call__Object_Real32__( void* method_ptr )
{
  SlagReal32  p2 = SLAG_POP_REAL32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagReal32))method_ptr)(context,p1,p2);
}

static void call__Real64__Object( void* method_ptr )
{
  SlagReal64  p1 = SLAG_POP_REAL64();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagReal64))method_ptr)(context,p1) );
}

static void call__Int64_Int32__Object( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagInt64   p1 = SLAG_POP_INT64();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagInt64,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Byte_Int32__Object( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagByte    p1 = SLAG_POP_BYTE();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagByte,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Object_Int32_Int32_Char__Object( void* method_ptr )
{
  SlagChar    p4 = SLAG_POP_CHAR();
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SXCRef,SlagInt32,SlagInt32,SlagChar))method_ptr)(context,p1,p2,p3,p4) );
}

static void call__Real64_Int32_Int32_Char__Object( void* method_ptr )
{
  SlagChar    p4 = SLAG_POP_CHAR();
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagReal64  p1 = SLAG_POP_REAL64();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagReal64,SlagInt32,SlagInt32,SlagChar))method_ptr)(context,p1,p2,p3,p4) );
}

static void call__Int32_Int32_Int32_Char__Object( void* method_ptr )
{
  SlagChar    p4 = SLAG_POP_CHAR();
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagInt32,SlagInt32,SlagInt32,SlagChar))method_ptr)(context,p1,p2,p3,p4) );
}

static void call__Object_Real64_Real64__( void* method_ptr )
{
  SlagReal64  p3 = SLAG_POP_REAL64();
  SlagReal64  p2 = SLAG_POP_REAL64();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagReal64,SlagReal64))method_ptr)(context,p1,p2,p3);
}

static void call__Object_Char__( void* method_ptr )
{
  SlagChar    p2 = SLAG_POP_CHAR();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagChar))method_ptr)(context,p1,p2);
}

static void call__Object_Object_Object_Object_Object_Int32__( void* method_ptr )
{
  SlagInt32   p6 = SLAG_POP_INT32();
  SlagObject* p5 = SLAG_POP_REF();
  SlagObject* p4 = SLAG_POP_REF();
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SXCRef,SXCRef,SXCRef,SlagInt32))method_ptr)(context,p1,p2,p3,p4,p5,p6);
}

static void call__Object_Object_Object_Object_Int32_Object__( void* method_ptr )
{
  SlagObject* p6 = SLAG_POP_REF();
  SlagInt32   p5 = SLAG_POP_INT32();
  SlagObject* p4 = SLAG_POP_REF();
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SXCRef,SXCRef,SlagInt32,SXCRef))method_ptr)(context,p1,p2,p3,p4,p5,p6);
}

static void call__Object_Object_Object_Int32__( void* method_ptr )
{
  SlagInt32   p4 = SLAG_POP_INT32();
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SXCRef,SlagInt32))method_ptr)(context,p1,p2,p3,p4);
}

static void call__Int32_Int32_Logical_Real64_Real64__( void* method_ptr )
{
  SlagReal64  p5 = SLAG_POP_REAL64();
  SlagReal64  p4 = SLAG_POP_REAL64();
  SlagLogical p3 = SLAG_POP_LOGICAL();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SlagInt32,SlagInt32,SlagLogical,SlagReal64,SlagReal64))method_ptr)(context,p1,p2,p3,p4,p5);
}

static void call__Object_Int32_Int32__Int32( void* method_ptr )
{
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT32( ((SlagInt32(*)(SXCRef,SXCRef,SlagInt32,SlagInt32))method_ptr)(context,p1,p2,p3) );
}

static void call__Object_Object_Int32_Object__( void* method_ptr )
{
  SlagObject* p4 = SLAG_POP_REF();
  SlagInt32   p3 = SLAG_POP_INT32();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SlagInt32,SXCRef))method_ptr)(context,p1,p2,p3,p4);
}

static void call__Object_Object_Object_Int32_Object__( void* method_ptr )
{
  SlagObject* p5 = SLAG_POP_REF();
  SlagInt32   p4 = SLAG_POP_INT32();
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SXCRef,SXCRef,SlagInt32,SXCRef))method_ptr)(context,p1,p2,p3,p4,p5);
}

static void call__Object_Logical__Logical( void* method_ptr )
{
  SlagLogical p2 = SLAG_POP_LOGICAL();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SXCRef,SlagLogical))method_ptr)(context,p1,p2) );
}

static void call__Object_Object_Object__Int32( void* method_ptr )
{
  SlagObject* p3 = SLAG_POP_REF();
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT32( ((SlagInt32(*)(SXCRef,SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2,p3) );
}

static void call__Object_Object__Int32( void* method_ptr )
{
  SlagObject* p2 = SLAG_POP_REF();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_INT32( ((SlagInt32(*)(SXCRef,SXCRef,SXCRef))method_ptr)(context,p1,p2) );
}

static void call__Int32_Int32_Object_Object_Logical__Object( void* method_ptr )
{
  SlagLogical p5 = SLAG_POP_LOGICAL();
  SlagObject* p4 = SLAG_POP_REF();
  SlagObject* p3 = SLAG_POP_REF();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagInt32   p1 = SLAG_POP_INT32();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagInt32,SlagInt32,SXCRef,SXCRef,SlagLogical))method_ptr)(context,p1,p2,p3,p4,p5) );
}

static void call__Logical_Int32__Object( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagLogical p1 = SLAG_POP_LOGICAL();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_REF( ((SlagObject*(*)(SXCRef,SlagLogical,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Object_Int32__Logical( void* method_ptr )
{
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  SLAG_PUSH_LOGICAL( ((SlagLogical(*)(SXCRef,SXCRef,SlagInt32))method_ptr)(context,p1,p2) );
}

static void call__Object_Int32_Object_Object_Object_Logical__( void* method_ptr )
{
  SlagLogical p6 = SLAG_POP_LOGICAL();
  SlagObject* p5 = SLAG_POP_REF();
  SlagObject* p4 = SLAG_POP_REF();
  SlagObject* p3 = SLAG_POP_REF();
  SlagInt32   p2 = SLAG_POP_INT32();
  SlagObject* p1 = SLAG_POP_REF();
  SlagObject* context = SLAG_POP_REF();
  ((void(*)(SXCRef,SXCRef,SlagInt32,SXCRef,SXCRef,SXCRef,SlagLogical))method_ptr)(context,p1,p2,p3,p4,p5,p6);
}

void* sxc_caller_table[] =
{
  (void*) call____,
  (void*) call____Int32,
  (void*) call____Object,
  (void*) call__Object__Logical,
  (void*) call__Object__Int32,
  (void*) call____Char,
  (void*) call__Char_Int32__Int32,
  (void*) call__Int32__Char,
  (void*) call__Object__Object,
  (void*) call__Char__Object,
  (void*) call__Int32_Int32__Object,
  (void*) call__Int32__Object,
  (void*) call__Object_Int32__Int32,
  (void*) call__Char__Logical,
  (void*) call__Object_Object__Object,
  (void*) call__Int32_Object_ParsePos_Object__,
  (void*) call__Object__,
  (void*) call____Logical,
  (void*) call__Object_Object_Object__,
  (void*) call__Object_Int32_Int32_Int32__,
  (void*) call__Int32_Int32__,
  (void*) call__Int32__,
  (void*) call__Int32_Real64__,
  (void*) call__Object_Object__,
  (void*) call__Int32_Object__,
  (void*) call__Object_Object_Object__Object,
  (void*) call__Object_Int32__,
  (void*) call__Object_Object_Object_Object__,
  (void*) call__Object_Logical__,
  (void*) call__Object_Logical__Object,
  (void*) call__Object_Object_Object_Object_Int32__,
  (void*) call__Object_Int32_Object__,
  (void*) call__Object_Int32_Object_Object_Object__,
  (void*) call__Object_Object_Int32_Int32__,
  (void*) call__Char__,
  (void*) call__Int32__Int32,
  (void*) call__Int32__Logical,
  (void*) call__Real64__Real64,
  (void*) call__Int32_Int32__Int32,
  (void*) call__Real64__Logical,
  (void*) call__Object_Object_Object_Object_Object_Object_Int32__,
  (void*) call__Object_Int64__,
  (void*) call__Char_Int32__Object,
  (void*) call__Int64__Object,
  (void*) call__Logical__Object,
  (void*) call__Object_ParsePos__Object,
  (void*) call__Object_Int32__Object,
  (void*) call__Int32_Int32__Logical,
  (void*) call__Object_Object_Logical__Object,
  (void*) call__Object_Object_Object_Object__Object,
  (void*) call__Object_Object_Object_Object_Object__Object,
  (void*) call__Object_Object_Object__Logical,
  (void*) call__Object_Object_Object_Int32__Object,
  (void*) call__Int32_Object__Logical,
  (void*) call____Int64,
  (void*) call__Int64__,
  (void*) call__Logical__,
  (void*) call__Object_Real64__,
  (void*) call__Int32_Int32_Int32__,
  (void*) call__Byte__Object,
  (void*) call__Object_Object_Logical__,
  (void*) call__Char_Int32__Logical,
  (void*) call__Char__Int32,
  (void*) call__Int64_Int32_Int32__Object,
  (void*) call__Real64_Int32_Int32_Int32_Char__Object,
  (void*) call__Object_Int32__Int64,
  (void*) call__Object__Real64,
  (void*) call__Object_Int32_Object_Object__,
  (void*) call__Int64__Logical,
  (void*) call__Int64__Int32,
  (void*) call__Object_Object__Logical,
  (void*) call__Object_Int32_Object_Logical__,
  (void*) call__Object_Byte__,
  (void*) call____ParsePos,
  (void*) call__Object_Object_Int32__,
  (void*) call__Object_Int32_Int32__,
  (void*) call__Object_Object_Int32_Int32_Int32__,
  (void*) call__Int32__Real64,
  (void*) call__Object_Real32__,
  (void*) call__Real64__Object,
  (void*) call__Int64_Int32__Object,
  (void*) call__Byte_Int32__Object,
  (void*) call__Object_Int32_Int32_Char__Object,
  (void*) call__Real64_Int32_Int32_Char__Object,
  (void*) call__Int32_Int32_Int32_Char__Object,
  (void*) call__Object_Real64_Real64__,
  (void*) call__Object_Char__,
  (void*) call__Object_Object_Object_Object_Object_Int32__,
  (void*) call__Object_Object_Object_Object_Int32_Object__,
  (void*) call__Object_Object_Object_Int32__,
  (void*) call__Int32_Int32_Logical_Real64_Real64__,
  (void*) call__Object_Int32_Int32__Int32,
  (void*) call__Object_Object_Int32_Object__,
  (void*) call__Object_Object_Object_Int32_Object__,
  (void*) call__Object_Logical__Logical,
  (void*) call__Object_Object_Object__Int32,
  (void*) call__Object_Object__Int32,
  (void*) call__Int32_Int32_Object_Object_Logical__Object,
  (void*) call__Logical_Int32__Object,
  (void*) call__Object_Int32__Logical,
  (void*) call__Object_Int32_Object_Object_Object_Logical__
};

int sxc_method_info_table[] =
{
  752, 1821, 0,
  753, 1821, 1,
  754, 1821, 2,
  755, 1821, 2,
  756, 1822, 3,
  757, 1822, 4,
  758, 1821, 2,
  759, 1821, 0,
  760, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  766, 1821, 5,
  767, 1823, 6,
  768, 1823, 6,
  752, 1821, 0,
  764, 1821, 1,
  753, 1821, 1,
  769, 1824, 7,
  770, 1821, 2,
  755, 1821, 2,
  765, 1821, 1,
  754, 1821, 2,
  756, 1822, 3,
  756, 1825, 3,
  757, 1825, 4,
  771, 1825, 8,
  771, 1826, 9,
  772, 1827, 10,
  772, 1824, 11,
  773, 1821, 2,
  767, 1828, 12,
  768, 1828, 12,
  774, 1826, 13,
  775, 1825, 3,
  775, 1826, 13,
  776, 1829, 14,
  777, 1824, 11,
  778, 1824, 11,
  779, 1826, 9,
  780, 1826, 9,
  781, 1826, 9,
  782, 1826, 9,
  779, 1825, 8,
  783, 1825, 8,
  781, 1825, 8,
  784, 1821, 2,
  785, 1821, 2,
  786, 1826, 9,
  787, 1821, 2,
  788, 1824, 11,
  789, 1821, 2,
  790, 1821, 2,
  791, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1830, 15,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1831, 16,
  792, 1821, 2,
  797, 1821, 17,
  798, 1825, 8,
  755, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  802, 1821, 2,
  803, 1821, 2,
  804, 1832, 8,
  805, 1821, 17,
  806, 1821, 0,
  807, 1821, 2,
  808, 1821, 2,
  809, 1821, 2,
  810, 1821, 2,
  811, 1821, 2,
  812, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1833, 18,
  792, 1821, 2,
  755, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 1,
  815, 1834, 19,
  816, 1827, 20,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  817, 1824, 21,
  819, 1835, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1836, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  827, 1838, 23,
  827, 1839, 16,
  769, 1822, 8,
  828, 1822, 8,
  829, 1822, 3,
  830, 1822, 8,
  831, 1822, 8,
  819, 1840, 16,
  832, 1821, 0,
  755, 1821, 2,
  833, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  769, 1825, 8,
  819, 1841, 23,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  836, 1842, 24,
  837, 1821, 2,
  769, 1825, 8,
  838, 1821, 2,
  839, 1821, 2,
  840, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  820, 1821, 0,
  816, 1821, 0,
  820, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  766, 1821, 2,
  819, 1843, 8,
  841, 1844, 25,
  841, 1829, 14,
  842, 1827, 10,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  843, 1824, 11,
  844, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1845, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1846, 26,
  752, 1845, 16,
  754, 1821, 2,
  797, 1821, 17,
  846, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  757, 1847, 4,
  753, 1821, 1,
  752, 1821, 0,
  752, 1824, 21,
  752, 1847, 16,
  756, 1822, 3,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1848, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  820, 1821, 0,
  816, 1821, 0,
  820, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  767, 1849, 12,
  819, 1850, 8,
  851, 1821, 2,
  852, 1851, 3,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  843, 1824, 11,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1851, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  820, 1821, 0,
  816, 1821, 0,
  820, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  767, 1852, 12,
  853, 1827, 20,
  819, 1853, 8,
  852, 1854, 3,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  752, 1855, 24,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1854, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  820, 1821, 0,
  816, 1821, 0,
  820, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  819, 1856, 8,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  843, 1824, 11,
  844, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1857, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  820, 1821, 0,
  816, 1821, 0,
  820, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  819, 1858, 8,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  843, 1824, 11,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1859, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  820, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  820, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  817, 1824, 21,
  819, 1860, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1861, 27,
  752, 1851, 16,
  855, 1821, 2,
  894, 1821, 17,
  895, 1821, 17,
  896, 1821, 17,
  897, 1821, 17,
  898, 1821, 17,
  798, 1825, 8,
  755, 1821, 2,
  899, 1821, 0,
  900, 1821, 2,
  901, 1821, 2,
  902, 1821, 0,
  903, 1821, 0,
  904, 1862, 16,
  905, 1863, 23,
  906, 1851, 16,
  907, 1821, 0,
  908, 1851, 16,
  802, 1821, 0,
  909, 1831, 16,
  910, 1821, 0,
  911, 1851, 16,
  912, 1857, 16,
  913, 1864, 23,
  914, 1821, 0,
  915, 1854, 16,
  916, 1851, 16,
  917, 1851, 16,
  918, 1865, 28,
  919, 1825, 8,
  920, 1825, 8,
  921, 1851, 3,
  922, 1825, 8,
  923, 1821, 2,
  924, 1821, 2,
  925, 1821, 2,
  926, 1821, 2,
  927, 1821, 2,
  928, 1821, 2,
  929, 1851, 3,
  930, 1851, 3,
  890, 1821, 2,
  931, 1821, 0,
  932, 1821, 2,
  933, 1821, 2,
  934, 1825, 8,
  935, 1821, 0,
  936, 1821, 0,
  937, 1821, 2,
  938, 1821, 2,
  939, 1825, 8,
  940, 1865, 29,
  941, 1865, 29,
  942, 1854, 8,
  943, 1866, 29,
  944, 1825, 8,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  843, 1824, 11,
  844, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  769, 1824, 11,
  819, 1867, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  820, 1821, 0,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  820, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  820, 1821, 0,
  819, 1825, 8,
  820, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1841, 23,
  819, 1854, 16,
  947, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  843, 1824, 11,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1868, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1869, 27,
  754, 1821, 2,
  970, 1821, 17,
  960, 1821, 1,
  971, 1821, 2,
  802, 1821, 0,
  972, 1821, 0,
  973, 1821, 17,
  799, 1821, 17,
  800, 1821, 17,
  890, 1821, 2,
  974, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1870, 30,
  890, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  890, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1871, 31,
  755, 1821, 2,
  981, 1821, 0,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  759, 1821, 0,
  758, 1821, 2,
  752, 1872, 32,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  988, 1821, 2,
  755, 1821, 2,
  752, 1873, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1824, 21,
  752, 1845, 16,
  752, 1874, 23,
  752, 1875, 18,
  754, 1821, 2,
  802, 1821, 0,
  799, 1821, 0,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 16,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  792, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1876, 27,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1877, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1878, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1879, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  995, 1826, 0,
  996, 1821, 0,
  997, 1821, 0,
  998, 1821, 0,
  995, 1826, 34,
  999, 1826, 34,
  999, 1825, 16,
  999, 1822, 16,
  1000, 1825, 16,
  1000, 1822, 16,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  995, 1826, 34,
  999, 1826, 34,
  999, 1825, 16,
  996, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1880, 18,
  752, 1881, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1882, 23,
  792, 1821, 2,
  755, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  759, 1821, 0,
  758, 1821, 2,
  752, 1883, 18,
  754, 1821, 2,
  802, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1884, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  827, 1827, 20,
  827, 1885, 16,
  769, 1824, 35,
  829, 1824, 36,
  831, 1824, 11,
  819, 1886, 16,
  832, 1821, 0,
  755, 1821, 2,
  833, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  820, 1821, 0,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  820, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1887, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  827, 1888, 26,
  827, 1879, 16,
  769, 1822, 4,
  828, 1822, 8,
  829, 1822, 3,
  831, 1822, 8,
  819, 1889, 16,
  832, 1821, 0,
  755, 1821, 2,
  833, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  820, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  820, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  766, 1821, 2,
  767, 1828, 12,
  819, 1890, 8,
  815, 1890, 8,
  841, 1844, 25,
  841, 1829, 14,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  843, 1824, 11,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  769, 1824, 11,
  819, 1825, 8,
  754, 1821, 2,
  816, 1821, 0,
  1004, 1825, 8,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  988, 1821, 2,
  755, 1821, 2,
  752, 1891, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  759, 1821, 0,
  758, 1821, 2,
  752, 1892, 23,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1893, 18,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  810, 1821, 2,
  809, 1821, 2,
  812, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  989, 1821, 0,
  991, 1821, 0,
  988, 1821, 2,
  755, 1821, 2,
  752, 1894, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 1,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  989, 1821, 0,
  991, 1821, 0,
  755, 1821, 0,
  989, 1821, 0,
  991, 1821, 0,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1895, 16,
  1172, 1821, 0,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1175, 1896, 37,
  1176, 1896, 37,
  1177, 1827, 38,
  1178, 1896, 39,
  1179, 1821, 1,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  817, 1824, 21,
  819, 1897, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  757, 1897, 4,
  753, 1821, 1,
  752, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  909, 1898, 14,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1828, 26,
  1285, 1899, 16,
  1286, 1899, 8,
  1287, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  1285, 1899, 16,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1900, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1901, 40,
  754, 1821, 2,
  890, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  759, 1821, 0,
  758, 1821, 2,
  752, 1902, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1903, 16,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  843, 1824, 11,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1904, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  755, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1905, 41,
  754, 1821, 2,
  792, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1902, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  766, 1821, 5,
  853, 1827, 20,
  851, 1821, 5,
  1292, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  752, 1906, 28,
  820, 1821, 2,
  844, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  1293, 1824, 21,
  817, 1824, 21,
  819, 1826, 9,
  1294, 1823, 42,
  830, 1824, 7,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  820, 1821, 0,
  816, 1821, 0,
  820, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  819, 1907, 8,
  851, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  769, 1824, 11,
  819, 1831, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1846, 26,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  792, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  752, 1908, 28,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  1293, 1824, 21,
  817, 1824, 21,
  819, 1909, 43,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1910, 16,
  755, 1821, 2,
  755, 1911, 44,
  1296, 1821, 2,
  1297, 1909, 43,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  752, 1821, 0,
  755, 1821, 2,
  758, 1821, 2,
  759, 1821, 0,
  752, 1821, 0,
  752, 1825, 16,
  758, 1821, 2,
  752, 1912, 23,
  752, 1829, 23,
  755, 1821, 2,
  1301, 1913, 45,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1285, 1899, 0,
  752, 1831, 16,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  759, 1821, 0,
  758, 1821, 2,
  752, 1914, 18,
  792, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  752, 1892, 23,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1915, 27,
  792, 1821, 2,
  1305, 1828, 46,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1885, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1824, 21,
  1306, 1824, 35,
  1307, 1824, 11,
  1308, 1827, 47,
  1308, 1885, 3,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  989, 1821, 0,
  991, 1821, 0,
  755, 1821, 0,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1916, 16,
  1172, 1821, 0,
  989, 1821, 17,
  991, 1821, 1,
  759, 1821, 0,
  758, 1821, 2,
  752, 1917, 23,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  755, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1918, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  989, 1821, 17,
  1311, 1824, 11,
  991, 1821, 2,
  1172, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1919, 23,
  1172, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1920, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  820, 1821, 2,
  833, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1921, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  820, 1821, 2,
  769, 1825, 4,
  759, 1821, 0,
  758, 1821, 2,
  1351, 1821, 0,
  1352, 1918, 16,
  1353, 1918, 16,
  769, 1922, 14,
  1354, 1923, 25,
  1354, 1924, 25,
  1355, 1851, 8,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  1356, 1821, 17,
  1357, 1851, 16,
  1358, 1821, 0,
  1359, 1892, 14,
  1360, 1925, 14,
  1361, 1845, 8,
  1361, 1892, 23,
  1362, 1892, 23,
  1363, 1926, 25,
  1363, 1927, 25,
  1364, 1892, 23,
  1365, 1892, 23,
  1366, 1845, 16,
  1367, 1892, 23,
  1368, 1925, 14,
  1369, 1845, 16,
  1370, 1928, 23,
  1371, 1851, 3,
  1372, 1925, 14,
  1373, 1929, 48,
  1374, 1930, 8,
  1375, 1930, 8,
  1376, 1930, 8,
  1377, 1833, 25,
  1377, 1931, 25,
  1378, 1932, 14,
  1379, 1932, 14,
  1380, 1933, 49,
  1381, 1934, 50,
  1382, 1935, 50,
  1383, 1832, 8,
  1384, 1936, 51,
  1385, 1936, 51,
  1386, 1936, 51,
  1387, 1931, 25,
  1388, 1937, 14,
  1387, 1938, 14,
  1389, 1939, 52,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  792, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  810, 1821, 2,
  809, 1821, 2,
  812, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1916, 16,
  1172, 1821, 0,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1903, 16,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1831, 16,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1940, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1824, 21,
  1306, 1824, 35,
  1307, 1824, 11,
  1308, 1941, 53,
  1308, 1940, 3,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  988, 1821, 2,
  755, 1821, 2,
  752, 1942, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  766, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1943, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  989, 1821, 0,
  991, 1821, 0,
  755, 1821, 0,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1944, 16,
  1172, 1821, 0,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1945, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1946, 27,
  802, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  1391, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  807, 1911, 44,
  810, 1821, 2,
  809, 1821, 2,
  809, 1911, 44,
  812, 1821, 2,
  811, 1821, 2,
  811, 1911, 44,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  988, 1821, 2,
  755, 1821, 2,
  752, 1947, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  1392, 1824, 21,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1948, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1824, 21,
  827, 1949, 23,
  769, 1825, 8,
  1394, 1825, 8,
  830, 1825, 8,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1950, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1893, 18,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  817, 1824, 21,
  819, 1862, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1951, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  759, 1821, 0,
  758, 1821, 2,
  752, 1920, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1952, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 54,
  759, 1821, 0,
  758, 1821, 2,
  752, 1909, 55,
  752, 1824, 21,
  752, 1828, 26,
  752, 1835, 16,
  752, 1821, 0,
  1397, 1824, 11,
  1398, 1824, 11,
  1399, 1821, 2,
  755, 1824, 11,
  755, 1821, 2,
  1400, 1821, 54,
  1401, 1821, 17,
  1402, 1821, 17,
  1403, 1821, 1,
  1404, 1821, 54,
  1405, 1821, 17,
  756, 1822, 3,
  756, 1835, 3,
  757, 1835, 4,
  1406, 1821, 2,
  771, 1835, 8,
  1406, 1835, 8,
  1407, 1835, 8,
  1408, 1835, 8,
  1409, 1835, 8,
  759, 1821, 0,
  758, 1821, 2,
  752, 1953, 16,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  755, 1821, 2,
  757, 1954, 4,
  753, 1821, 1,
  752, 1911, 56,
  759, 1821, 0,
  758, 1821, 2,
  752, 1882, 23,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1902, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  792, 1821, 2,
  802, 1821, 2,
  807, 1821, 2,
  811, 1821, 2,
  806, 1821, 0,
  809, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1955, 57,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  792, 1821, 2,
  803, 1821, 2,
  812, 1821, 2,
  811, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  810, 1821, 2,
  809, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1956, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1957, 23,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1958, 58,
  754, 1821, 2,
  989, 1821, 17,
  991, 1821, 1,
  759, 1821, 0,
  758, 1821, 2,
  817, 1824, 0,
  816, 1821, 0,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  820, 1821, 0,
  816, 1821, 0,
  820, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  819, 1959, 8,
  1415, 1960, 8,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1899, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1961, 23,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  752, 1962, 28,
  1293, 1824, 21,
  817, 1824, 21,
  819, 1963, 59,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1964, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  809, 1821, 2,
  811, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  988, 1821, 2,
  755, 1821, 2,
  752, 1965, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  820, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  752, 1854, 16,
  1419, 1868, 8,
  769, 1825, 8,
  759, 1821, 0,
  758, 1821, 2,
  820, 1821, 0,
  819, 1824, 11,
  820, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1966, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  827, 1941, 24,
  827, 1940, 16,
  769, 1824, 11,
  828, 1824, 11,
  831, 1824, 11,
  819, 1967, 16,
  832, 1821, 0,
  755, 1821, 2,
  833, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  820, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  766, 1821, 1,
  819, 1968, 8,
  851, 1821, 1,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  1293, 1824, 21,
  817, 1824, 21,
  819, 1824, 11,
  830, 1824, 35,
  1420, 1821, 0,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1969, 60,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  995, 1825, 16,
  1436, 1821, 0,
  999, 1826, 34,
  999, 1825, 16,
  999, 1824, 21,
  1000, 1825, 16,
  1000, 1826, 34,
  1000, 1821, 0,
  1437, 1825, 16,
  1438, 1821, 0,
  1439, 1821, 0,
  1440, 1821, 0,
  1441, 1821, 0,
  1442, 1821, 0,
  1443, 1821, 0,
  1444, 1821, 0,
  1445, 1821, 0,
  1446, 1821, 0,
  1447, 1821, 0,
  1448, 1821, 0,
  1449, 1821, 0,
  1450, 1821, 0,
  1451, 1821, 0,
  1452, 1911, 56,
  1453, 1821, 0,
  1454, 1970, 16,
  1455, 1970, 16,
  1456, 1971, 25,
  1456, 1972, 25,
  759, 1821, 0,
  758, 1821, 2,
  1457, 1824, 7,
  1458, 1823, 61,
  1459, 1826, 62,
  1460, 1973, 63,
  1461, 1974, 64,
  1462, 1828, 65,
  1463, 1828, 12,
  1464, 1825, 66,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1975, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1976, 16,
  759, 1821, 0,
  758, 1821, 2,
  752, 1977, 23,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  803, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1978, 16,
  995, 1826, 34,
  995, 1827, 20,
  1469, 1909, 55,
  759, 1821, 0,
  758, 1821, 2,
  995, 1978, 16,
  1476, 1825, 16,
  1477, 1851, 16,
  1478, 1900, 16,
  1479, 1854, 16,
  1480, 1851, 16,
  1481, 1854, 16,
  1482, 1824, 21,
  1483, 1825, 16,
  1484, 1825, 8,
  1485, 1831, 16,
  1486, 1970, 16,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  820, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1903, 16,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  816, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  752, 1888, 26,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1903, 16,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1979, 31,
  752, 1980, 67,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1846, 26,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1825, 16,
  1493, 1821, 17,
  1494, 1821, 17,
  1495, 1821, 2,
  1299, 1821, 2,
  755, 1821, 2,
  1496, 1821, 2,
  1497, 1821, 2,
  1497, 1981, 16,
  1497, 1824, 11,
  759, 1821, 0,
  758, 1821, 2,
  1515, 1821, 0,
  752, 1821, 0,
  1516, 1821, 0,
  1517, 1825, 16,
  1518, 1825, 16,
  1519, 1825, 8,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1982, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1983, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1520, 1827, 38,
  1521, 1827, 38,
  1522, 1909, 68,
  1522, 1824, 36,
  1523, 1909, 69,
  1523, 1824, 35,
  1524, 1824, 35,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  817, 1824, 0,
  816, 1821, 0,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1902, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1846, 26,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1525, 1984, 0,
  752, 1821, 0,
  1525, 1984, 70,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1985, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1986, 71,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1893, 18,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  810, 1821, 2,
  809, 1821, 2,
  812, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1882, 23,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1987, 72,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  792, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  810, 1821, 2,
  809, 1821, 2,
  812, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1988, 28,
  754, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1534, 1821, 5,
  1535, 1821, 5,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1989, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1949, 23,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  998, 1821, 0,
  998, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1882, 23,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  752, 1990, 18,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  792, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  810, 1821, 2,
  809, 1821, 2,
  812, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1831, 16,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1991, 16,
  759, 1821, 0,
  758, 1821, 2,
  752, 1880, 18,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1992, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1538, 1993, 23,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  1293, 1824, 21,
  817, 1824, 21,
  819, 1822, 8,
  1294, 1888, 46,
  830, 1824, 11,
  1539, 1827, 20,
  1420, 1821, 0,
  846, 1821, 2,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  1540, 1826, 0,
  988, 1821, 0,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  1543, 1821, 2,
  752, 1994, 16,
  752, 1995, 16,
  752, 1996, 16,
  752, 1825, 16,
  1544, 1821, 0,
  989, 1821, 17,
  1311, 1821, 5,
  1311, 1824, 7,
  991, 1821, 5,
  1540, 1826, 13,
  1540, 1825, 3,
  1545, 1821, 73,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 1997, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  816, 1821, 0,
  752, 1998, 74,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1540, 1826, 13,
  988, 1821, 2,
  755, 1821, 2,
  752, 1999, 75,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  1311, 1821, 5,
  991, 1821, 5,
  759, 1821, 0,
  758, 1821, 2,
  752, 2000, 23,
  752, 2001, 76,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1880, 18,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1866, 28,
  997, 1821, 0,
  995, 1826, 34,
  995, 1825, 16,
  999, 1825, 16,
  998, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2002, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 2003, 16,
  1172, 1821, 0,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  764, 1821, 0,
  765, 1821, 0,
  816, 1821, 0,
  817, 1824, 0,
  816, 1821, 0,
  752, 1821, 0,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2004, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1920, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1837, 22,
  754, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  817, 1824, 0,
  816, 1821, 0,
  853, 1827, 20,
  1293, 1824, 21,
  817, 1824, 21,
  819, 1826, 9,
  754, 1821, 2,
  1292, 1821, 0,
  752, 1821, 0,
  752, 1824, 21,
  752, 1825, 16,
  819, 1825, 8,
  999, 1825, 16,
  1549, 2005, 74,
  995, 1826, 34,
  816, 1821, 0,
  764, 1821, 1,
  765, 1821, 1,
  1294, 1823, 42,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1825, 16,
  752, 1829, 23,
  989, 1821, 17,
  1311, 1821, 2,
  991, 1821, 2,
  1540, 1824, 36,
  1558, 1842, 24,
  1172, 1821, 0,
  1559, 1821, 0,
  1560, 1821, 0,
  1560, 1824, 21,
  1561, 1824, 11,
  1562, 1824, 77,
  1563, 1821, 2,
  1564, 1821, 17,
  1565, 1821, 0,
  1566, 1821, 2,
  1567, 1821, 5,
  1568, 1821, 17,
  1569, 1821, 17,
  1570, 1821, 2,
  1571, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1825, 16,
  752, 1829, 23,
  1172, 1821, 0,
  1575, 1821, 17,
  1576, 1821, 2,
  1576, 2006, 8,
  1577, 1821, 2,
  1577, 2006, 8,
  1578, 1821, 2,
  1579, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1846, 26,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1909, 55,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1591, 2007, 46,
  1591, 1995, 8,
  1591, 1826, 9,
  1591, 1909, 43,
  759, 1821, 0,
  758, 1821, 2,
  752, 1941, 24,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2008, 78,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  792, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  810, 1821, 2,
  809, 1821, 2,
  812, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  995, 1825, 16,
  1436, 1821, 0,
  999, 1826, 34,
  999, 1825, 16,
  1000, 1825, 16,
  1000, 1826, 34,
  1000, 1821, 0,
  1593, 1825, 16,
  1438, 1821, 0,
  1594, 1851, 16,
  1595, 1821, 0,
  1596, 1821, 0,
  1597, 2009, 23,
  1598, 1865, 28,
  1599, 1854, 16,
  1455, 1970, 16,
  1456, 2010, 49,
  1456, 2011, 49,
  759, 1821, 0,
  758, 1821, 2,
  752, 1917, 23,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  1603, 1829, 23,
  1604, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1847, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  1540, 1826, 13,
  988, 1821, 2,
  755, 1821, 2,
  752, 2012, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  1311, 1821, 5,
  991, 1821, 5,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  801, 1821, 0,
  1605, 2013, 23,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  807, 1911, 44,
  810, 1821, 2,
  809, 1821, 2,
  809, 1911, 44,
  812, 1821, 2,
  811, 1821, 2,
  811, 1911, 44,
  759, 1821, 0,
  758, 1821, 2,
  752, 2014, 60,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1370, 1821, 0,
  1606, 1821, 17,
  759, 1821, 0,
  758, 1821, 2,
  851, 1821, 2,
  1392, 1824, 21,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 2015, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  817, 1824, 0,
  816, 1821, 0,
  1351, 1821, 0,
  1610, 1821, 0,
  999, 1822, 16,
  999, 1825, 16,
  1000, 1822, 16,
  1000, 1825, 16,
  1611, 1821, 54,
  755, 1822, 8,
  755, 2016, 8,
  755, 1826, 9,
  755, 1896, 79,
  755, 1911, 44,
  755, 2017, 80,
  755, 1827, 10,
  755, 1823, 42,
  755, 2018, 81,
  1612, 2019, 82,
  1612, 2020, 83,
  1612, 2021, 84,
  1612, 2022, 82,
  1458, 1823, 61,
  1459, 1826, 62,
  753, 1824, 35,
  1613, 1821, 0,
  1614, 1835, 8,
  1615, 1835, 3,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2023, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2024, 23,
  752, 2025, 76,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2026, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1979, 31,
  752, 1980, 67,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  811, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1822, 16,
  752, 2027, 85,
  759, 1821, 0,
  758, 1821, 2,
  1351, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1893, 18,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  810, 1821, 2,
  809, 1821, 2,
  812, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2028, 27,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2029, 74,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  804, 1832, 8,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1902, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2030, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  1591, 1909, 43,
  758, 1821, 2,
  752, 1833, 18,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1958, 58,
  754, 1821, 2,
  989, 1821, 17,
  991, 1821, 1,
  759, 1821, 0,
  758, 1821, 2,
  752, 1915, 27,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1920, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  988, 1821, 2,
  755, 1821, 2,
  752, 2031, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1920, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1351, 1821, 0,
  1634, 1825, 8,
  1635, 1899, 16,
  1636, 1899, 16,
  1636, 1961, 23,
  1637, 1899, 16,
  1638, 1821, 17,
  1639, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  1540, 1826, 13,
  988, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  989, 1821, 17,
  1311, 1821, 5,
  991, 1821, 5,
  1641, 1821, 5,
  1172, 1821, 17,
  1171, 1821, 1,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  752, 2032, 23,
  752, 2033, 76,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1964, 18,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2034, 86,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  792, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  810, 1821, 2,
  809, 1821, 2,
  812, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2035, 18,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1944, 16,
  1172, 1821, 0,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2036, 18,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2037, 87,
  754, 1821, 2,
  755, 1821, 2,
  890, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1844, 18,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2038, 88,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  752, 1988, 28,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2039, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  989, 1821, 0,
  991, 1821, 0,
  988, 1821, 0,
  988, 1821, 2,
  755, 1821, 2,
  752, 2040, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1351, 1821, 0,
  752, 1909, 55,
  752, 2041, 16,
  754, 1821, 2,
  1652, 1821, 0,
  1653, 1821, 54,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  792, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  810, 1821, 2,
  809, 1821, 2,
  812, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1917, 23,
  754, 1821, 2,
  792, 1821, 2,
  755, 1821, 2,
  800, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  995, 1825, 16,
  1436, 1821, 0,
  999, 1826, 34,
  999, 1825, 16,
  1000, 1825, 16,
  1000, 1826, 34,
  1000, 1821, 0,
  1437, 1821, 0,
  1654, 1821, 0,
  1438, 1821, 0,
  1594, 1851, 16,
  1655, 1821, 0,
  1596, 1821, 0,
  1597, 2009, 23,
  1598, 1865, 28,
  1599, 1854, 16,
  1454, 1970, 16,
  1455, 1970, 16,
  1456, 2010, 49,
  1456, 2011, 49,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1829, 23,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  752, 2042, 18,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1977, 23,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1958, 58,
  820, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1958, 58,
  820, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1903, 16,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2043, 18,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1831, 16,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  808, 1821, 2,
  807, 1821, 2,
  810, 1821, 2,
  809, 1821, 2,
  812, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1833, 18,
  752, 2044, 89,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  817, 1824, 0,
  816, 1821, 0,
  752, 2045, 18,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1833, 18,
  752, 2044, 89,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2046, 23,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  803, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1911, 56,
  1663, 1821, 54,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1988, 28,
  1370, 1821, 0,
  1606, 1821, 17,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 2003, 16,
  1172, 1821, 0,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1958, 58,
  754, 1821, 2,
  989, 1821, 17,
  991, 1821, 1,
  759, 1821, 0,
  758, 1821, 2,
  909, 2047, 14,
  759, 1821, 0,
  758, 1821, 2,
  1694, 1825, 8,
  759, 1821, 0,
  758, 1821, 2,
  752, 1827, 20,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  803, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2048, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2049, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  803, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2050, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2051, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2052, 23,
  752, 2053, 76,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  817, 1824, 21,
  819, 1954, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  1525, 1984, 70,
  759, 1821, 0,
  758, 1821, 2,
  752, 1838, 23,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1831, 16,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2054, 90,
  759, 1821, 0,
  758, 1821, 2,
  1696, 1824, 11,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1920, 18,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  800, 1821, 0,
  806, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2055, 23,
  752, 2056, 76,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  1311, 1821, 5,
  991, 1821, 5,
  759, 1821, 0,
  758, 1821, 2,
  1540, 1826, 13,
  752, 1825, 16,
  997, 1821, 0,
  989, 1821, 17,
  1311, 1821, 5,
  991, 1821, 5,
  991, 2057, 91,
  990, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  998, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1910, 16,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 2003, 16,
  1172, 1821, 0,
  989, 1821, 17,
  991, 1821, 1,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2058, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  755, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1994, 16,
  989, 1821, 17,
  991, 1821, 2,
  1172, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1903, 16,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  851, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  844, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 2059, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 2060, 18,
  754, 1821, 2,
  802, 1821, 2,
  799, 1821, 2,
  800, 1821, 0,
  801, 1821, 0,
  804, 1832, 8,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2061, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1822, 8,
  759, 1821, 0,
  758, 1821, 2,
  752, 2062, 18,
  759, 1821, 0,
  758, 1821, 2,
  766, 1821, 2,
  851, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 2063, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  752, 1821, 0,
  752, 1824, 21,
  820, 1821, 2,
  764, 1821, 1,
  765, 1821, 1,
  817, 1824, 21,
  819, 1839, 8,
  754, 1821, 2,
  816, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1824, 21,
  1306, 1822, 4,
  1307, 1822, 8,
  1308, 1838, 70,
  1308, 1839, 3,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  807, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2064, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 2065, 16,
  1721, 1821, 17,
  1722, 1851, 16,
  1723, 1945, 16,
  1724, 1922, 23,
  1725, 1825, 3,
  1519, 1922, 14,
  1726, 1821, 17,
  1727, 1821, 17,
  1540, 1824, 36,
  1728, 1825, 3,
  1729, 1825, 16,
  1730, 1821, 0,
  1558, 1842, 24,
  1731, 1821, 17,
  1732, 1821, 17,
  1733, 1821, 0,
  1734, 1821, 0,
  1735, 1825, 8,
  1736, 1825, 8,
  1737, 1821, 17,
  1738, 1821, 0,
  1722, 1821, 0,
  1739, 1821, 2,
  1740, 1821, 2,
  1741, 1821, 1,
  1742, 1821, 2,
  1743, 1821, 2,
  1744, 1821, 2,
  1745, 2066, 92,
  1745, 2067, 93,
  1746, 2068, 23,
  1746, 2069, 23,
  1747, 1911, 44,
  1748, 1911, 44,
  1749, 1821, 2,
  1750, 1854, 16,
  1751, 1854, 16,
  1752, 2070, 31,
  1753, 2071, 94,
  1754, 1821, 17,
  1755, 1911, 44,
  1756, 1851, 16,
  1757, 1851, 16,
  1758, 1851, 16,
  1759, 2071, 28,
  1760, 1821, 2,
  1761, 1821, 2,
  1762, 1821, 2,
  1763, 1821, 2,
  1763, 2072, 8,
  1764, 2072, 3,
  1765, 1821, 0,
  1766, 1821, 2,
  1767, 2073, 28,
  1768, 1821, 2,
  1769, 2074, 14,
  1770, 2075, 95,
  1770, 2076, 96,
  1771, 1922, 96,
  1771, 1831, 4,
  1772, 1912, 96,
  1773, 2062, 18,
  1774, 1821, 2,
  1775, 1821, 2,
  1776, 1911, 44,
  1777, 1821, 2,
  1778, 1821, 2,
  1779, 1821, 2,
  1780, 1821, 2,
  1781, 1821, 2,
  1782, 2077, 16,
  1783, 1821, 2,
  1784, 1821, 2,
  1784, 1845, 8,
  1785, 1821, 2,
  1785, 1845, 8,
  1786, 1821, 2,
  1786, 1845, 8,
  1787, 1821, 2,
  1787, 1845, 8,
  1788, 1821, 2,
  1788, 1845, 8,
  1789, 1821, 2,
  1789, 1845, 8,
  1790, 1821, 2,
  1790, 1845, 8,
  1791, 1821, 2,
  1791, 1845, 8,
  1792, 1821, 2,
  1792, 1845, 8,
  1793, 1821, 2,
  1793, 1845, 8,
  1794, 1821, 2,
  1795, 1821, 2,
  1796, 1821, 2,
  1796, 1845, 8,
  1797, 1821, 2,
  1798, 1821, 2,
  1799, 1976, 8,
  1800, 2078, 97,
  1801, 2079, 98,
  759, 1821, 0,
  758, 1821, 2,
  752, 1881, 18,
  754, 1821, 2,
  802, 1821, 2,
  1803, 1912, 14,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 2080, 16,
  989, 1821, 17,
  991, 1821, 1,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  1525, 1984, 70,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1903, 16,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  759, 1821, 0,
  758, 1821, 2,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  754, 1821, 2,
  792, 1821, 2,
  802, 1821, 2,
  806, 1821, 0,
  807, 1821, 2,
  809, 1821, 2,
  811, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1824, 21,
  1306, 1822, 4,
  1307, 1822, 8,
  1308, 1888, 99,
  1308, 1879, 3,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  752, 1821, 0,
  752, 1825, 16,
  752, 1829, 23,
  759, 1821, 0,
  758, 1821, 2,
  752, 2081, 100,
  754, 1821, 2,
  802, 1821, 2,
  1805, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  1810, 1821, 1,
  759, 1821, 0,
  758, 1821, 2,
  752, 2082, 18,
  759, 1821, 0,
  758, 1821, 2,
  1171, 1821, 1,
  988, 1821, 2,
  755, 1821, 2,
  752, 1895, 16,
  1172, 1821, 0,
  989, 1821, 17,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  988, 1821, 2,
  755, 1821, 2,
  752, 2083, 33,
  754, 1821, 2,
  989, 1821, 17,
  990, 1821, 1,
  991, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  755, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  909, 2084, 14,
  759, 1821, 0,
  758, 1821, 2,
  759, 1821, 0,
  758, 1821, 2,
  819, 2015, 3,
  999, 1821, 0,
  759, 1821, 0,
  758, 1821, 2,
  752, 1938, 23,
  754, 1821, 2,
  802, 1821, 2,
  759, 1821, 0,
  758, 1821, 2
};

int sxc_method_list_table[] =
{
  2,8,0,1,2,3,4,5,6,7,4,9,0,1,2,4,
  5,8,9,10,11,5,8,0,1,2,4,5,12,13,14,13,
  44,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,
  32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,
  48,49,50,51,52,53,54,55,56,57,58,59,60,14,9,0,
  1,4,5,61,62,63,64,65,15,26,0,1,2,4,5,66,
  67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,
  83,84,85,86,16,27,0,1,2,4,5,66,68,69,74,75,
  77,78,79,80,81,82,83,84,87,88,89,90,91,92,93,94,
  95,17,27,0,1,4,5,66,68,69,77,79,80,81,82,83,
  84,87,88,89,90,91,92,93,96,97,98,99,100,101,18,27,
  0,1,4,5,66,68,69,77,80,82,84,87,88,89,90,91,
  92,93,96,97,98,99,102,103,104,105,106,19,11,0,1,2,
  3,4,5,107,108,109,110,111,20,11,0,1,3,4,5,107,
  108,109,112,113,114,26,12,1,4,5,118,119,120,121,122,123,
  124,125,126,29,11,0,1,3,4,5,107,108,109,129,130,131,
  34,15,1,4,5,137,138,139,140,141,142,143,144,145,146,147,
  148,35,19,1,2,4,5,149,150,151,152,153,154,155,156,157,
  158,159,160,161,162,163,37,9,1,4,5,164,165,166,167,168,
  169,38,9,1,4,5,164,165,166,167,170,171,39,11,1,4,
  5,164,165,166,167,172,173,174,175,40,11,0,1,3,4,5,
  107,108,109,176,177,178,42,14,0,1,2,3,4,5,179,180,
  181,182,183,184,185,186,43,11,0,1,3,4,5,107,108,109,
  187,188,189,48,22,1,4,5,197,198,199,200,201,202,203,204,
  205,206,207,208,209,210,211,212,213,214,215,49,29,0,1,4,
  5,66,67,69,75,77,80,82,84,216,217,218,219,220,221,222,
  223,224,225,226,227,228,229,230,231,232,52,10,2,233,234,235,
  236,237,238,239,240,241,53,11,0,1,3,4,5,107,108,109,
  242,243,244,58,15,1,4,5,250,251,252,253,254,255,256,257,
  258,259,260,261,59,11,0,1,3,4,5,107,108,109,262,263,
  264,64,20,1,4,5,272,273,274,275,276,277,278,279,280,281,
  282,283,284,285,286,287,288,65,11,0,1,3,4,5,107,108,
  109,289,290,291,70,20,1,4,5,299,300,301,302,303,304,305,
  306,307,308,309,310,311,312,313,314,315,71,11,0,1,3,4,
  5,107,108,109,316,317,318,76,18,1,4,5,326,327,328,329,
  330,331,332,333,334,335,336,337,338,339,340,77,11,0,1,3,
  4,5,107,108,109,341,342,343,82,17,1,4,5,351,352,353,
  354,355,356,357,358,359,360,361,362,363,364,83,10,1,4,5,
  365,366,367,368,369,370,371,84,10,1,4,5,365,366,367,368,
  369,372,373,85,10,1,4,5,374,375,376,377,378,379,380,86,
  10,1,4,5,374,375,376,377,378,381,382,87,11,0,1,3,
  4,5,107,108,109,383,384,385,92,12,1,4,5,389,390,391,
  392,393,394,395,396,397,93,65,0,1,2,4,5,398,399,400,
  401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,
  417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,
  433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,
  449,450,451,452,453,454,455,456,457,94,11,0,1,3,4,5,
  107,108,109,458,459,460,99,18,1,4,5,466,467,468,469,470,
  471,472,473,474,475,476,477,478,479,480,101,10,1,4,5,482,
  483,484,485,486,487,488,102,10,1,4,5,482,483,484,485,486,
  489,490,104,11,1,4,5,482,483,484,485,492,493,494,495,105,
  11,0,1,2,3,4,5,496,497,498,499,500,106,11,0,1,
  3,4,5,107,108,109,501,502,503,111,16,1,4,5,509,510,
  511,512,513,514,515,516,517,518,519,520,521,112,19,0,1,3,
  4,5,522,523,524,525,526,527,528,529,530,531,532,533,534,535,
  113,8,0,1,2,3,4,5,536,537,114,10,0,1,2,3,
  4,5,538,539,540,541,115,10,0,1,2,3,4,5,538,542,
  543,544,116,28,0,1,2,4,5,66,67,68,69,74,75,77,
  78,79,80,81,82,83,84,545,546,547,548,549,550,551,552,553,
  117,29,0,1,2,4,5,66,67,68,69,75,77,78,79,80,
  81,82,83,84,545,546,547,548,549,550,551,554,555,556,557,119,
  27,0,1,4,5,66,68,69,77,80,82,84,87,88,89,90,
  91,92,93,560,561,562,563,564,565,566,567,568,120,8,0,1,
  2,3,4,5,569,570,126,11,0,1,3,4,5,107,108,109,
  576,577,578,129,13,0,1,4,5,581,582,583,584,585,586,587,
  588,589,133,9,1,4,5,593,594,595,596,597,598,134,9,1,
  4,5,593,594,595,596,599,600,135,34,1,4,5,197,198,199,
  200,201,202,203,205,206,207,208,209,210,211,213,601,602,603,604,
  605,606,607,608,609,610,611,612,613,614,615,616,136,26,0,1,
  2,4,5,66,68,69,70,71,72,73,74,75,76,77,78,79,
  80,81,82,83,84,617,618,619,137,27,0,1,4,5,66,68,
  69,75,77,80,82,84,620,621,622,623,624,625,626,627,628,629,
  630,631,632,633,634,139,13,0,1,4,5,635,636,637,638,639,
  640,641,642,643,140,27,0,1,4,5,66,68,69,77,80,82,
  84,87,88,89,90,91,92,93,644,645,646,647,648,649,650,651,
  652,141,27,0,1,4,5,66,68,69,77,80,82,84,87,88,
  89,90,91,92,93,644,645,646,647,648,649,650,653,654,146,11,
  0,1,3,4,5,107,108,109,660,661,662,148,13,0,1,4,
  5,663,664,665,666,667,668,669,670,671,150,11,0,1,3,4,
  5,107,108,109,674,675,676,155,15,1,4,5,682,683,684,685,
  686,687,688,689,690,691,692,693,157,17,0,1,2,3,4,5,
  695,696,697,698,699,700,701,702,703,704,705,158,17,1,2,3,
  4,5,696,697,701,702,703,706,707,708,709,710,711,712,159,28,
  0,1,4,5,66,67,68,69,71,72,73,75,76,77,78,79,
  80,81,82,83,84,713,714,715,716,717,718,719,160,27,0,1,
  2,4,5,66,68,69,74,75,77,78,79,80,81,82,83,84,
  720,721,722,723,724,725,726,727,728,161,28,0,1,4,5,66,
  68,69,75,77,78,79,80,81,82,83,84,720,721,723,724,725,
  726,729,730,731,732,733,734,162,11,0,1,3,4,5,107,108,
  109,735,736,737,167,15,1,4,5,743,744,745,746,747,748,749,
  750,751,752,753,754,168,17,1,2,4,5,755,756,757,758,759,
  760,761,762,763,764,765,766,767,170,10,1,4,5,769,770,771,
  772,773,774,775,171,11,0,1,3,4,5,107,108,109,776,777,
  778,176,15,1,4,5,784,785,786,787,788,789,790,791,792,793,
  794,795,177,18,1,2,4,5,796,797,798,799,800,801,802,803,
  804,805,806,807,808,809,178,10,1,4,5,810,811,812,813,814,
  815,816,179,10,1,4,5,810,811,812,813,814,817,818,180,11,
  0,1,3,4,5,107,108,109,819,820,821,184,24,1,4,5,
  826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,
  842,843,844,845,846,185,8,0,1,2,3,4,5,847,848,187,
  13,0,1,4,5,851,852,853,854,855,856,857,858,859,188,26,
  0,1,2,4,5,66,67,68,69,70,75,77,78,79,80,81,
  82,83,84,860,861,862,863,864,865,866,189,27,0,1,4,5,
  66,68,69,75,77,80,82,84,861,863,867,868,869,870,871,872,
  873,874,875,876,877,878,879,190,28,0,1,4,5,66,68,69,
  75,77,720,724,725,726,880,881,882,883,884,885,886,887,888,889,
  890,891,892,893,894,191,11,0,1,3,4,5,107,108,109,895,
  896,897,194,13,0,1,4,5,902,903,904,905,906,907,908,909,
  910,195,11,0,1,3,4,5,107,108,109,911,912,913,197,8,
  0,1,2,3,4,5,914,915,201,14,0,1,2,4,5,923,
  924,925,926,927,928,929,930,931,202,13,0,1,2,3,4,5,
  932,933,934,935,936,937,938,208,11,0,1,3,4,5,107,108,
  109,946,947,948,213,12,1,4,5,952,953,954,955,956,957,958,
  959,960,214,9,1,4,5,961,962,963,964,965,966,215,9,1,
  4,5,961,962,963,964,967,968,217,8,2,4,969,970,971,972,
  973,974,219,9,0,1,2,3,4,5,975,976,977,220,8,0,
  1,2,3,4,5,978,979,222,8,0,1,2,3,4,5,980,
  981,223,8,0,1,2,3,4,5,982,983,224,12,0,1,2,
  3,4,5,984,985,986,987,988,989,225,12,0,1,2,3,4,
  5,984,986,987,990,991,992,226,11,0,1,3,4,5,107,108,
  109,993,994,995,231,15,1,4,5,1001,1002,1003,1004,1005,1006,1007,
  1008,1009,1010,1011,1012,232,10,0,1,3,4,5,1013,1014,1015,1016,
  1017,233,26,0,1,2,4,5,66,67,68,69,70,74,75,77,
  78,79,80,81,82,83,84,1018,1019,1020,1021,1022,1023,234,27,0,
  1,4,5,66,67,68,69,75,77,79,80,81,82,83,84,1018,
  1020,1021,1024,1025,1026,1027,1028,1029,1030,1031,235,27,0,1,4,5,
  66,67,68,69,75,77,80,82,84,1018,1020,1021,1024,1025,1026,1027,
  1028,1029,1032,1033,1034,1035,1036,237,13,0,1,2,4,5,1039,1040,
  1041,1042,1043,1044,1045,1046,239,9,1,4,5,1047,1048,1049,1050,1051,
  1052,240,11,0,1,3,4,5,107,108,109,1053,1054,1055,241,16,
  1,4,5,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,
  242,28,0,1,4,5,66,67,68,69,75,77,80,82,84,545,
  547,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,245,26,
  0,1,2,4,5,66,67,68,69,70,75,77,78,79,80,81,
  82,83,84,860,861,862,863,864,1084,1085,246,27,0,1,4,5,
  66,68,69,70,75,77,80,82,84,860,861,862,863,864,1086,1087,
  1088,1089,1090,1091,1092,1093,1094,247,27,0,1,4,5,66,67,68,
  69,75,77,79,80,81,82,83,84,1018,1020,1021,1095,1096,1097,1098,
  1099,1100,1101,1102,248,27,0,1,4,5,66,67,68,69,75,77,
  80,82,84,1018,1020,1021,1095,1096,1097,1098,1099,1100,1103,1104,1105,1106,
  1107,254,27,0,1,4,5,66,68,69,77,80,82,84,87,88,
  89,90,91,92,93,1112,1113,1114,1115,1116,1117,1118,1119,1120,255,11,
  0,1,3,4,5,107,108,109,1121,1122,1123,259,24,1,4,5,
  1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,
  1143,1144,1145,1146,1147,261,11,0,1,3,4,5,107,108,109,1148,
  1149,1150,266,18,1,4,5,1158,1159,1160,1161,1162,1163,1164,1165,1166,
  1167,1168,1169,1170,1171,1172,267,27,0,1,2,4,5,66,67,68,
  69,75,77,78,79,80,81,82,83,84,1173,1174,1175,1176,1177,1178,
  1179,1180,1181,268,27,0,1,4,5,66,68,69,75,77,78,79,
  80,81,82,83,84,87,89,90,91,92,93,1182,1183,1184,1185,1186,
  269,27,0,1,4,5,66,68,69,77,79,80,81,82,83,84,
  87,89,90,91,92,93,1183,1187,1188,1189,1190,1191,1192,275,17,1,
  4,5,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,
  276,12,1,2,4,5,1212,1213,1214,1215,1216,1217,1218,1219,277,8,
  1,2,4,5,1220,1221,1222,1223,278,9,1,2,4,5,1222,1224,
  1225,1226,1227,279,12,1,2,4,5,1225,1226,1228,1229,1230,1231,1232,
  1233,280,11,0,1,3,4,5,107,108,109,1234,1235,1236,282,26,
  0,1,4,5,68,69,75,77,80,82,84,860,861,862,863,864,
  1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,283,26,0,1,2,4,
  5,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
  81,82,83,84,1248,1249,284,26,0,1,2,4,5,66,67,68,
  69,70,74,75,77,78,79,80,81,82,83,84,1250,1251,1252,1253,
  1254,1255,285,27,0,1,2,4,5,66,68,69,70,74,75,77,
  78,79,80,81,82,83,84,1250,1251,1252,1253,1256,1257,1258,1259,290,
  27,0,1,4,5,66,68,69,75,77,80,82,84,862,863,1265,
  1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,291,28,0,1,
  2,4,5,66,68,69,70,71,72,73,74,75,76,77,78,79,
  80,81,82,83,84,1278,1279,1280,1281,1282,292,28,0,1,4,5,
  66,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,
  84,1278,1279,1280,1283,1284,1285,1286,293,26,0,1,2,4,5,66,
  67,68,69,70,74,75,77,78,79,80,81,82,83,84,1287,1288,
  1289,1290,1291,1292,294,11,0,1,3,4,5,107,108,109,1293,1294,
  1295,299,15,1,4,5,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,
  1311,1312,300,13,0,1,2,4,5,1313,1314,1315,1316,1317,1318,1319,
  1320,301,27,0,1,4,5,66,68,69,77,79,80,81,82,83,
  84,87,89,90,91,92,93,1183,1321,1322,1323,1324,1325,1326,302,27,
  0,1,4,5,66,68,69,77,80,82,84,87,89,90,91,92,
  93,1183,1321,1322,1323,1324,1327,1328,1329,1330,1331,306,14,0,1,2,
  4,5,1337,1338,1339,1340,1341,1342,1343,1344,1345,307,27,0,1,4,
  5,66,67,68,69,75,77,79,80,81,82,83,84,1287,1289,1290,
  1346,1347,1348,1349,1350,1351,1352,1353,308,27,0,1,4,5,66,67,
  68,69,75,77,80,82,84,1287,1289,1290,1346,1347,1348,1349,1350,1351,
  1354,1355,1356,1357,1358,312,15,1,4,5,1362,1363,1364,1365,1366,1367,
  1368,1369,1370,1371,1372,1373,313,8,0,1,2,4,5,1374,1375,1376,
  316,9,1,4,5,1379,1380,1381,1382,1383,1384,317,9,1,4,5,
  1379,1380,1381,1382,1385,1386,318,14,0,1,2,4,5,1387,1388,1389,
  1390,1391,1392,1393,1394,1395,319,15,0,1,2,4,5,1387,1388,1389,
  1390,1391,1392,1396,1397,1398,1399,320,27,0,1,4,5,66,67,68,
  69,75,77,79,80,81,82,83,84,1018,1020,1021,1400,1401,1402,1403,
  1404,1405,1406,1407,321,27,0,1,4,5,66,67,68,69,75,77,
  80,82,84,1018,1020,1021,1400,1401,1402,1403,1404,1405,1408,1409,1410,1411,
  1412,322,11,1,4,5,1413,1414,1415,1416,1417,1418,1419,1420,323,11,
  1,4,5,1413,1414,1415,1416,1417,1418,1421,1422,325,9,1,4,5,
  1423,1424,1425,1426,1427,1428,326,9,1,4,5,1423,1424,1425,1426,1429,
  1430,327,9,1,4,5,1431,1432,1433,1434,1435,1436,328,9,1,4,
  5,1431,1432,1433,1434,1437,1438,329,9,1,4,5,1047,1048,1049,1050,
  1439,1440,330,11,0,1,3,4,5,107,108,109,1441,1442,1443,334,
  15,1,4,5,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,
  335,10,1,2,3,4,5,1461,1462,1463,1464,1465,336,15,0,1,
  2,3,4,5,1466,1467,1468,1469,1470,1471,1472,1473,1474,337,11,0,
  1,3,4,5,107,108,109,1475,1476,1477,338,46,1,2,3,4,
  5,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,
  1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,
  1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,342,27,0,1,2,4,
  5,66,68,69,75,77,78,79,80,81,82,83,84,720,721,722,
  723,724,725,726,1522,1523,1524,343,27,0,1,4,5,66,68,69,
  77,720,722,723,724,725,726,1522,1525,1526,1527,1528,1529,1530,1531,1532,
  1533,1534,1535,1536,344,28,0,1,4,5,66,68,69,70,71,72,
  73,75,76,77,78,79,80,81,82,83,84,1278,1279,1280,1537,1538,
  1539,1540,345,27,0,1,4,5,66,68,69,77,80,82,84,87,
  88,89,90,91,92,93,1541,1542,1543,1544,1545,1546,1547,1548,1549,346,
  14,0,1,2,4,5,1550,1551,1552,1553,1554,1555,1556,1557,1558,348,
  8,0,1,2,3,4,5,1561,1562,351,13,0,1,2,4,5,
  1565,1566,1567,1568,1569,1570,1571,1572,353,9,1,4,5,1573,1574,1575,
  1576,1577,1578,354,26,0,1,4,5,67,68,69,70,75,77,78,
  79,80,81,82,83,84,1287,1288,1289,1290,1579,1580,1581,1582,1583,355,
  11,0,1,3,4,5,107,108,109,1584,1585,1586,357,15,1,4,
  5,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,358,13,0,
  1,2,4,5,1601,1602,1603,1604,1605,1606,1607,1608,359,9,1,2,
  4,5,1222,1609,1610,1611,1612,360,27,0,1,4,5,66,68,69,
  77,79,80,81,82,83,84,87,89,90,91,92,93,1183,1613,1614,
  1615,1616,1617,1618,362,13,0,1,4,5,1621,1622,1623,1624,1625,1626,
  1627,1628,1629,363,27,0,1,4,5,66,68,69,75,77,78,79,
  80,81,82,83,84,87,88,89,90,91,92,93,1630,1631,1632,1633,
  364,9,1,2,4,5,1222,1634,1635,1636,1637,365,10,1,4,5,
  769,770,771,772,773,1638,1639,366,11,0,1,3,4,5,107,108,
  109,1640,1641,1642,367,16,1,4,5,1643,1644,1645,1646,1647,1648,1649,
  1650,1651,1652,1653,1654,1655,370,14,0,1,2,4,5,1661,1662,1663,
  1664,1665,1666,1667,1668,1669,371,9,1,2,4,5,1222,1670,1671,1672,
  1673,372,27,0,1,4,5,66,68,69,75,77,80,82,84,87,
  89,90,91,92,93,1183,1674,1675,1676,1677,1678,1679,1680,1681,373,15,
  1,4,5,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,374,
  27,0,1,2,4,5,66,68,69,70,71,75,77,78,79,80,
  81,82,83,84,617,1694,1695,1696,1697,1698,1699,1700,375,31,0,1,
  4,5,66,68,69,75,77,617,1694,1696,1697,1698,1701,1702,1703,1704,
  1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,376,8,0,
  1,2,4,5,1718,1719,1720,378,11,0,1,3,4,5,107,108,
  109,1723,1724,1725,381,13,0,1,4,5,1728,1729,1730,1731,1732,1733,
  1734,1735,1736,382,11,0,1,3,4,5,107,108,109,1737,1738,1739,
  383,11,0,1,3,4,5,107,108,109,1740,1741,1742,386,16,1,
  4,5,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,388,
  11,0,1,3,4,5,107,108,109,1759,1760,1761,389,13,0,1,
  2,3,4,5,1762,1763,1764,1765,1766,1767,1768,390,13,0,1,4,
  5,1769,1770,1771,1772,1773,1774,1775,1776,1777,391,8,0,1,2,4,
  5,1778,1779,1780,392,28,0,1,4,5,66,68,69,75,77,80,
  82,84,720,723,724,725,726,1781,1782,1783,1784,1785,1786,1787,1788,1789,
  1790,1791,393,11,0,1,3,4,5,107,108,109,1792,1793,1794,396,
  12,1,4,5,1798,1799,1800,1801,1802,1803,1804,1805,1806,397,13,0,
  1,4,5,1807,1808,1809,1810,1811,1812,1813,1814,1815,399,26,0,1,
  2,4,5,66,67,68,69,75,77,78,79,80,81,82,83,84,
  1818,1819,1820,1821,1822,1823,1824,1825,400,27,0,1,4,5,66,67,
  68,69,77,80,82,84,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,
  1836,1837,1838,1839,1840,402,13,0,1,4,5,1841,1842,1843,1844,1845,
  1846,1847,1848,1849,403,29,1,2,1850,1851,1852,1853,1854,1855,1856,1857,
  1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,
  1874,1875,1876,404,9,0,1,2,3,4,5,1877,1878,1879,406,9,
  2,4,1880,1881,1882,1883,1884,1885,1886,407,27,0,1,4,5,66,
  67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,
  84,1887,1888,1889,1890,1891,408,27,0,1,4,5,66,68,69,77,
  79,80,81,82,83,84,87,88,89,90,91,92,93,1892,1893,1894,
  1895,1896,1897,409,27,0,1,4,5,66,67,68,69,75,77,79,
  80,81,82,83,84,1018,1020,1021,1898,1899,1900,1901,1902,1903,1904,1905,
  410,27,0,1,4,5,66,68,69,75,77,80,82,84,720,722,
  723,724,725,726,1906,1907,1908,1909,1910,1911,1912,1913,1914,411,27,0,
  1,4,5,66,68,69,75,77,80,82,84,860,861,862,863,864,
  1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,412,27,0,1,4,5,
  66,68,69,77,720,722,723,724,725,726,1522,1925,1926,1927,1928,1929,
  1930,1931,1932,1933,1934,1935,1936,413,11,0,1,3,4,5,107,108,
  109,1937,1938,1939,414,13,0,1,4,5,1940,1941,1942,1943,1944,1945,
  1946,1947,1948,416,27,0,1,4,5,66,67,68,69,70,71,72,
  73,75,76,77,78,79,80,81,82,83,84,1949,1950,1951,1952,1953,
  417,13,0,1,4,5,1954,1955,1956,1957,1958,1959,1960,1961,1962,419,
  11,0,1,3,4,5,107,108,109,1965,1966,1967,423,17,1,4,
  5,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,424,
  9,0,1,2,3,4,5,1987,1988,1989,429,14,1,4,5,1993,
  1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,430,27,0,1,4,5,
  66,67,68,69,75,77,80,82,84,2004,2005,2006,2007,2008,2009,2010,
  2011,2012,2013,2014,2015,2016,2017,432,13,0,1,4,5,2020,2021,2022,
  2023,2024,2025,2026,2027,2028,436,11,0,1,2,3,4,5,2033,2034,
  2035,2036,2037,438,11,1,4,5,769,770,771,772,2039,2040,2041,2042,
  439,15,1,4,5,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,
  2054,440,17,1,2,4,5,2055,2056,2057,2058,2059,2060,2061,2062,2063,
  2064,2065,2066,2067,441,10,1,4,5,2068,2069,2070,2071,2072,2073,2074,
  442,10,1,4,5,2068,2069,2070,2071,2072,2075,2076,443,21,1,4,
  5,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,
  2092,2093,2094,444,9,0,1,3,4,5,2095,2096,2097,2098,445,11,
  0,1,3,4,5,107,108,109,2099,2100,2101,446,37,0,1,2,
  3,4,5,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,
  2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,
  2131,2132,447,16,0,1,2,3,4,5,2133,2134,2135,2136,2137,2138,
  2139,2140,2141,2142,449,13,0,1,4,5,2143,2144,2145,2146,2147,2148,
  2149,2150,2151,450,27,0,1,4,5,66,68,69,77,80,82,84,
  87,88,89,90,91,92,93,1892,1893,1894,1895,2152,2153,2154,2155,2156,
  451,9,0,1,2,3,4,5,2157,2158,2159,452,27,0,1,4,
  5,66,67,68,69,75,77,79,80,81,82,83,84,1287,1289,1290,
  2160,2161,2162,2163,2164,2165,2166,2167,453,27,0,1,4,5,66,67,
  68,69,75,77,80,82,84,1287,1289,1290,2160,2161,2162,2163,2164,2165,
  2168,2169,2170,2171,2172,456,9,1,4,5,2175,2176,2177,2178,2179,2180,
  457,9,1,4,5,2175,2176,2177,2178,2181,2182,458,27,0,1,4,
  5,66,68,69,77,80,82,84,87,88,89,90,91,92,93,2183,
  2184,2185,2186,2187,2188,2189,2190,2191,459,27,0,1,4,5,66,68,
  69,77,80,82,84,87,88,89,90,91,92,93,2183,2184,2186,2187,
  2188,2189,2192,2193,2194,460,12,0,1,2,3,4,5,2195,2196,2197,
  2198,2199,2200,461,20,0,1,2,3,4,5,2201,2202,2203,2204,2205,
  2206,2207,2208,2209,2210,2211,2212,2213,2214,462,10,1,4,5,2215,2216,
  2217,2218,2219,2220,2221,463,10,1,4,5,2215,2216,2217,2218,2219,2222,
  2223,464,8,0,1,2,4,5,2224,2225,2226,466,13,0,1,2,
  4,5,2229,2230,2231,2232,2233,2234,2235,2236,474,9,1,2,4,5,
  1222,2244,2245,2246,2247,475,9,0,1,2,4,5,2248,2249,2250,2251,
  476,27,0,1,4,5,66,68,69,77,80,82,84,87,88,89,
  90,91,92,93,2252,2253,2254,2255,2256,2257,2258,2259,2260,477,13,0,
  1,2,4,5,2261,2262,2263,2264,2265,2266,2267,2268,478,8,0,1,
  2,4,5,2269,2270,2271,480,30,0,1,4,5,66,67,68,69,
  77,80,82,84,545,547,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,
  2282,2283,2284,2285,2286,2287,481,27,0,1,4,5,66,67,68,69,
  70,75,77,78,79,80,81,82,83,84,1287,1288,1289,1290,2288,2289,
  2290,2291,2292,483,17,0,1,2,4,5,2293,2294,2295,2296,2297,2298,
  2299,2300,2301,2302,2303,2304,484,13,1,2,3,4,5,2305,2306,2307,
  2308,2309,2310,2311,2312,485,13,0,1,4,5,2313,2314,2315,2316,2317,
  2318,2319,2320,2321,486,11,0,1,3,4,5,107,108,109,2322,2323,
  2324,488,13,0,1,4,5,2325,2326,2327,2328,2329,2330,2331,2332,2333,
  489,27,0,1,4,5,66,68,69,75,77,80,82,84,720,721,
  722,723,724,725,726,2334,2335,2336,2337,2338,2339,2340,2341,490,15,0,
  1,2,3,4,5,2342,2343,2344,2345,2346,2347,2348,2349,2350,491,27,
  0,1,4,5,66,68,69,77,80,82,84,87,88,89,90,91,
  92,93,2252,2253,2254,2255,2256,2257,2258,2351,2352,493,27,0,1,4,
  5,66,68,69,75,77,78,79,80,81,82,83,84,720,721,722,
  723,724,725,726,2355,2356,2357,2358,494,27,0,1,4,5,66,67,
  68,69,75,77,79,80,81,82,83,84,1018,1020,1021,2359,2360,2361,
  2362,2363,2364,2365,2366,495,27,0,1,4,5,66,67,68,69,75,
  77,80,82,84,1018,1020,1021,2359,2360,2361,2362,2363,2364,2367,2368,2369,
  2370,2371,496,27,0,1,4,5,66,68,69,75,77,80,82,84,
  860,861,862,863,864,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,497,
  27,0,1,4,5,66,68,69,77,80,82,84,87,89,90,91,
  92,93,1183,1187,1188,1189,1190,2382,2383,2384,2385,2386,499,9,1,2,
  3,4,5,2388,2389,2390,2391,500,15,1,4,5,2392,2393,2394,2395,
  2396,2397,2398,2399,2400,2401,2402,2403,501,29,0,1,4,5,66,67,
  68,69,75,77,78,79,80,81,82,83,84,545,547,548,549,550,
  551,2404,2405,2406,2407,2408,2409,502,28,0,1,4,5,66,68,69,
  75,77,720,723,724,725,726,2410,2411,2412,2413,2414,2415,2416,2417,2418,
  2419,2420,2421,2422,2423,503,27,0,1,4,5,66,68,69,75,77,
  80,82,84,2424,2425,2426,2427,2428,2429,2430,2431,2432,2433,2434,2435,2436,
  2437,2438,505,27,0,1,4,5,66,68,69,75,77,80,82,84,
  860,861,862,863,864,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,506,
  27,0,1,4,5,66,68,69,77,720,722,723,724,725,726,1522,
  2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,507,27,0,1,
  4,5,66,67,68,69,70,75,77,80,82,84,1287,1288,1289,1290,
  2461,2462,2463,2464,2465,2466,2467,2468,2469,508,10,0,1,2,3,4,
  5,2470,2471,2472,2473,509,13,0,1,4,5,2474,2475,2476,2477,2478,
  2479,2480,2481,2482,510,9,0,1,2,4,5,2483,2484,2485,2486,512,
  9,0,1,2,3,4,5,2488,2489,2490,513,27,0,1,4,5,
  66,67,68,69,75,77,80,82,84,1020,2491,2492,2493,2494,2495,2496,
  2497,2498,2499,2500,2501,2502,2503,514,9,1,2,4,5,1222,2504,2505,
  2506,2507,515,27,0,1,4,5,66,67,68,69,70,71,72,73,
  75,76,77,78,79,80,81,82,83,84,2508,2509,2510,2511,2512,516,
  9,1,2,4,5,1222,2513,2514,2515,2516,517,27,0,1,4,5,
  66,68,69,77,720,722,723,724,725,726,1522,2517,2518,2519,2520,2521,
  2522,2523,2524,2525,2526,2527,2528,519,8,0,1,2,4,5,2529,2530,
  2531,520,26,0,1,4,5,67,68,69,71,72,73,75,76,77,
  78,79,80,81,82,83,84,2532,2533,2534,2535,2536,2537,521,27,0,
  1,4,5,66,68,69,77,79,80,81,82,83,84,87,89,90,
  91,92,93,1183,2538,2539,2540,2541,2542,2543,522,9,0,1,2,3,
  4,5,2544,2545,2546,523,27,0,1,4,5,66,67,68,69,70,
  71,72,73,75,76,77,78,79,80,81,82,83,84,2547,2548,2549,
  2550,2551,524,13,0,1,4,5,2552,2553,2554,2555,2556,2557,2558,2559,
  2560,525,9,0,1,2,3,4,5,2561,2562,2563,526,27,0,1,
  4,5,66,68,69,77,80,82,84,87,88,89,90,91,92,93,
  2564,2565,2566,2567,2568,2569,2570,2571,2572,527,9,1,4,5,2573,2574,
  2575,2576,2577,2578,528,9,1,4,5,2573,2574,2575,2576,2579,2580,531,
  18,1,4,5,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595,
  2596,2597,2598,534,23,0,1,2,4,5,2603,2604,2605,2606,2607,2608,
  2609,2610,2611,2612,2613,2614,2615,2616,2617,2618,2619,2620,535,13,0,1,
  4,5,2621,2622,2623,2624,2625,2626,2627,2628,2629,537,27,0,1,4,
  5,66,68,69,75,77,80,82,84,861,862,863,864,2631,2632,2633,
  2634,2635,2636,2637,2638,2639,2640,2641,538,15,0,1,4,5,2642,2643,
  2644,2645,2646,2647,2648,2649,2650,2651,2652,539,15,0,1,4,5,2621,
  2622,2623,2653,2654,2655,2656,2657,2658,2659,2660,540,8,0,1,2,4,
  5,2661,2662,2663,541,27,0,1,4,5,66,67,68,69,75,77,
  80,82,84,1173,1174,1176,1177,1178,1179,2664,2665,2666,2667,2668,2669,2670,
  2671,542,27,0,1,4,5,66,67,68,69,75,77,80,82,84,
  1173,1174,1175,1176,1177,1178,1179,2672,2673,2674,2675,2676,2677,2678,543,29,
  0,1,4,5,66,67,68,69,75,77,78,79,80,81,82,83,
  84,545,546,547,548,549,550,551,554,2679,2680,2681,2682,544,27,0,
  1,4,5,66,68,69,75,77,80,82,84,2683,2684,2685,2686,2687,
  2688,2689,2690,2691,2692,2693,2694,2695,2696,2697,545,19,0,1,2,3,
  4,5,695,699,701,702,703,2698,2699,2700,2701,2702,2703,2704,2705,547,
  13,0,1,4,5,2706,2707,2708,2709,2710,2711,2712,2713,2714,548,14,
  0,1,2,4,5,2715,2716,2717,2718,2719,2720,2721,2722,2723,552,8,
  1,2,4,5,2729,2730,2731,2732,553,13,0,1,4,5,2733,2734,
  2735,2736,2737,2738,2739,2740,2741,554,27,0,1,4,5,66,67,68,
  69,75,77,79,80,81,82,83,84,1018,1020,1021,2742,2743,2744,2745,
  2746,2747,2748,2749,555,27,0,1,4,5,66,67,68,69,75,77,
  80,82,84,1018,1020,1021,2742,2743,2744,2745,2746,2747,2750,2751,2752,2753,
  2754,556,9,1,4,5,2755,2756,2757,2758,2759,2760,557,9,1,4,
  5,2755,2756,2757,2758,2761,2762,559,30,1,4,5,695,696,697,699,
  701,702,703,2765,2766,2767,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,
  2778,2779,2780,2781,2782,2783,2784,560,32,0,1,2,4,5,2785,2786,
  2787,2788,2789,2790,2791,2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,
  2803,2804,2805,2806,2807,2808,2809,2810,2811,561,23,0,1,2,4,5,
  1387,1388,1389,1390,1391,1392,2812,2813,2814,2815,2816,2817,2818,2819,2820,2821,
  2822,2823,562,27,0,1,4,5,66,67,68,69,75,77,80,82,
  84,1287,1288,1289,1290,2824,2825,2826,2827,2828,2829,2830,2831,2832,2833,563,
  28,0,1,4,5,66,67,68,69,75,77,80,82,84,545,547,
  2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,564,27,0,
  1,4,5,66,68,69,77,79,80,81,82,83,84,87,88,89,
  90,91,92,93,2847,2848,2849,2850,2851,2852,565,28,0,1,4,5,
  66,67,68,69,75,77,80,82,84,545,546,547,548,549,550,551,
  2853,2854,2855,2856,2857,2858,2859,2860,566,9,1,2,4,5,2861,2862,
  2863,2864,2865,567,12,0,1,2,3,4,5,2866,2867,2868,2869,2870,
  2871,568,9,0,1,2,4,5,2872,2873,2874,2875,569,27,0,1,
  4,5,66,68,69,75,77,80,82,84,860,861,862,863,864,2876,
  2877,2878,2879,2880,2881,2882,2883,2884,2885,570,27,0,1,4,5,66,
  68,69,77,720,722,723,724,725,726,1522,2886,2887,2888,2889,2890,2891,
  2892,2893,2894,2895,2896,2897,571,26,0,1,2,3,4,5,2898,2899,
  2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,
  2916,2917,572,27,0,1,4,5,66,67,68,69,75,77,79,80,
  81,82,83,84,1287,1289,1290,2918,2919,2920,2921,2922,2923,2924,2925,574,
  9,1,2,4,5,1222,2926,2927,2928,2929,575,10,0,1,2,3,
  4,5,2930,2931,2932,2933,576,15,1,4,5,2934,2935,2936,2937,2938,
  2939,2940,2941,2942,2943,2944,2945,577,15,0,1,4,5,2946,2947,2948,
  2949,2950,2951,2952,2953,2954,2955,2956,578,31,0,1,4,5,66,68,
  69,75,77,617,1694,1696,1698,2957,2958,2959,2960,2961,2962,2963,2964,2965,
  2966,2967,2968,2969,2970,2971,2972,2973,2974,579,27,0,1,4,5,66,
  67,68,69,75,77,80,82,84,1018,1019,1020,2975,2976,2977,2978,2979,
  2980,2981,2982,2983,2984,2985,580,27,0,1,4,5,66,68,69,77,
  80,82,84,87,88,89,90,91,92,93,1112,1113,1114,1115,1116,1117,
  1118,2986,2987,581,28,0,1,2,4,5,66,67,68,69,70,71,
  72,73,74,75,76,77,78,79,80,81,82,83,84,2988,2989,2990,
  2991,582,17,1,4,5,2992,2993,2994,2995,2996,2997,2998,2999,3000,3001,
  3002,3003,3004,3005,583,27,0,1,4,5,66,68,69,77,80,82,
  84,87,88,89,90,91,92,93,560,561,562,563,564,565,566,3006,
  3007,585,34,0,1,2,3,4,5,3010,3011,3012,3013,3014,3015,3016,
  3017,3018,3019,3020,3021,3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,
  3033,3034,3035,3036,3037,586,13,0,1,4,5,3038,3039,3040,3041,3042,
  3043,3044,3045,3046,587,15,0,1,4,5,2552,2553,2554,3047,3048,3049,
  3050,3051,3052,3053,3054,589,13,0,1,4,5,3055,3056,3057,3058,3059,
  3060,3061,3062,3063,590,27,0,1,4,5,66,67,68,69,75,77,
  80,82,84,1287,1289,1290,2918,2919,2920,2921,2922,2923,3064,3065,3066,3067,
  3068,591,30,0,1,4,5,66,67,68,69,77,80,82,84,545,
  547,3069,3070,3071,3072,3073,3074,3075,3076,3077,3078,3079,3080,3081,3082,3083,
  3084,592,27,0,1,4,5,66,68,69,77,79,80,81,82,83,
  84,87,89,90,91,92,93,1183,3085,3086,3087,3088,3089,3090,593,27,
  0,1,4,5,66,68,69,77,80,82,84,87,89,90,91,92,
  93,1183,3085,3086,3087,3088,3091,3092,3093,3094,3095,594,11,0,1,2,
  3,4,5,1987,3096,3097,3098,3099,595,9,0,1,2,3,4,5,
  3100,3101,3102,596,28,0,1,4,5,66,68,69,75,77,78,79,
  80,81,82,83,84,720,723,724,725,726,3103,3104,3105,3106,3107,3108,
  3109,597,28,0,1,4,5,66,68,69,75,77,720,723,724,725,
  726,3103,3105,3106,3110,3111,3112,3113,3114,3115,3116,3117,3118,3119,3120,598,
  27,0,1,4,5,66,67,68,69,77,80,82,84,3121,3122,3123,
  3124,3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,599,27,0,1,
  2,4,5,66,67,68,69,75,77,78,79,80,81,82,83,84,
  1020,3136,3137,3138,3139,3140,3141,3142,3143,600,27,0,1,4,5,66,
  67,68,69,75,77,80,82,84,1020,3136,3137,3138,3139,3140,3141,3144,
  3145,3146,3147,3148,3149,3150,601,28,0,1,4,5,66,67,68,69,
  75,77,80,82,84,545,546,547,548,549,550,551,3151,3152,3153,3154,
  3155,3156,3157,3158,602,27,0,1,4,5,66,67,68,69,75,77,
  79,80,81,82,83,84,1018,1020,1021,3159,3160,3161,3162,3163,3164,3165,
  3166,603,27,0,1,4,5,66,67,68,69,75,77,80,82,84,
  1018,1020,1021,3159,3160,3161,3162,3163,3164,3167,3168,3169,3170,3171,604,13,
  0,1,4,5,3172,3173,3174,3175,3176,3177,3178,3179,3180,605,8,0,
  1,2,3,4,5,3181,3182,606,9,0,1,2,3,4,5,3183,
  3184,3185,607,27,0,1,4,5,66,68,69,75,77,80,82,84,
  3186,3187,3188,3189,3190,3191,3192,3193,3194,3195,3196,3197,3198,3199,3200,608,
  9,1,2,4,5,1222,3201,3202,3203,3204,609,13,0,1,4,5,
  3205,3206,3207,3208,3209,3210,3211,3212,3213,610,27,0,1,4,5,66,
  67,68,69,75,77,80,82,84,3214,3215,3216,3217,3218,3219,3220,3221,
  3222,3223,3224,3225,3226,3227,611,27,0,1,4,5,66,67,68,69,
  75,77,79,80,81,82,83,84,1018,1020,1021,3228,3229,3230,3231,3232,
  3233,3234,3235,612,27,0,1,4,5,66,67,68,69,75,77,80,
  82,84,1018,1020,1021,3228,3229,3230,3231,3232,3233,3236,3237,3238,3239,3240,
  613,27,0,1,4,5,66,68,69,77,80,82,84,87,89,90,
  91,92,93,1183,2538,2539,2540,2541,3241,3242,3243,3244,3245,615,13,0,
  1,4,5,3248,3249,3250,3251,3252,3253,3254,3255,3256,616,27,0,1,
  4,5,66,67,68,69,75,77,79,80,81,82,83,84,1018,1020,
  1021,3257,3258,3259,3260,3261,3262,3263,3264,617,27,0,1,4,5,66,
  67,68,69,75,77,80,82,84,1018,1020,1021,3257,3258,3259,3260,3261,
  3262,3265,3266,3267,3268,3269,618,16,0,1,2,3,4,5,3270,3271,
  3272,3273,3274,3275,3276,3277,3278,3279,620,16,1,2,4,5,3280,3281,
  3282,3283,3284,3285,3286,3287,3288,3289,3290,3291,621,11,0,1,3,4,
  5,107,108,109,3292,3293,3294,622,27,0,1,4,5,66,68,69,
  75,77,78,79,80,81,82,83,84,720,721,722,723,724,725,726,
  3295,3296,3297,3298,623,9,1,4,5,1573,1574,1575,1576,3299,3300,624,
  9,1,2,4,5,1222,3301,3302,3303,3304,625,15,0,1,4,5,
  2325,2326,2327,3305,3306,3307,3308,3309,3310,3311,3312,626,8,0,1,2,
  3,4,5,3313,3314,627,27,0,1,4,5,66,68,69,75,77,
  80,82,84,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,
  3328,3329,628,27,0,1,4,5,66,68,69,75,77,80,82,84,
  860,861,862,863,864,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,629,
  27,0,1,4,5,66,68,69,77,720,722,723,724,725,726,1522,
  3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3350,3351,630,9,0,1,
  2,4,5,3352,3353,3354,3355,631,14,0,1,2,4,5,3356,3357,
  3358,3359,3360,3361,3362,3363,3364,632,13,1,2,4,5,1225,1226,1228,
  1229,1231,3365,3366,3367,3368,633,11,0,1,4,5,538,3369,3370,3371,
  3372,3373,3374,634,27,0,1,4,5,66,68,69,75,77,80,82,
  84,1250,1251,1252,1253,1256,1257,3375,3376,3377,3378,3379,3380,3381,3382,3383,
  635,27,0,1,4,5,66,67,68,69,75,77,80,82,84,1020,
  3136,3137,3138,3139,3140,3141,3384,3385,3386,3387,3388,3389,3390,636,9,0,
  1,2,4,5,3391,3392,3393,3394,637,9,0,1,2,3,4,5,
  3395,3396,3397,638,8,0,1,2,4,5,3398,3399,3400,639,9,1,
  2,4,5,1222,3401,3402,3403,3404,640,27,0,1,4,5,66,68,
  69,75,77,80,82,84,860,861,862,863,864,3405,3406,3407,3408,3409,
  3410,3411,3412,3413,3414,641,27,0,1,4,5,66,67,68,69,75,
  77,80,82,84,3415,3416,3417,3418,3419,3420,3421,3422,3423,3424,3425,3426,
  3427,3428,642,9,1,2,4,5,1222,1225,1226,3429,3430,643,27,0,
  1,4,5,66,68,69,75,77,80,82,84,87,89,90,91,92,
  93,1183,3431,3432,3433,3434,3435,3436,3437,3438,645,13,0,1,4,5,
  3442,3443,3444,3445,3446,3447,3448,3449,3450,646,13,0,1,3,4,5,
  3451,3452,3453,3454,3455,3456,3457,3458,648,27,0,1,4,5,66,68,
  69,77,720,722,723,724,725,726,1522,3459,3460,3461,3462,3463,3464,3465,
  3466,3467,3468,3469,3470,649,27,0,1,4,5,66,68,69,75,77,
  80,82,84,1819,1820,1822,3471,3472,3473,3474,3475,3476,3477,3478,3479,3480,
  3481,3482,650,28,0,1,2,3,4,5,3483,3484,3485,3486,3487,3488,
  3489,3490,3491,3492,3493,3494,3495,3496,3497,3498,3499,3500,3501,3502,3503,3504,
  651,27,0,1,4,5,66,68,69,77,80,82,84,87,88,89,
  90,91,92,93,3505,3506,3507,3508,3509,3510,3511,3512,3513,652,9,0,
  1,2,3,4,5,3514,3515,3516,653,8,0,1,2,4,5,3517,
  3518,3519,654,9,1,2,4,5,1222,3520,3521,3522,3523,655,27,0,
  1,4,5,66,67,68,69,70,71,72,73,75,76,77,78,79,
  80,81,82,83,84,3524,3525,3526,3527,3528,656,29,0,1,4,5,
  66,67,68,69,75,77,78,79,80,81,82,83,84,545,546,547,
  548,549,550,551,554,3529,3530,3531,3532,657,27,0,1,4,5,66,
  67,68,69,75,77,79,80,81,82,83,84,1287,1289,1290,3533,3534,
  3535,3536,3537,3538,3539,3540,658,27,0,1,4,5,66,67,68,69,
  75,77,80,82,84,1287,1289,1290,3533,3534,3535,3536,3537,3538,3541,3542,
  3543,3544,3545,659,10,0,1,2,4,5,3546,3547,3548,3549,3550,660,
  10,0,1,2,4,5,3548,3551,3552,3553,3554,661,27,0,1,4,
  5,66,68,69,77,79,80,81,82,83,84,87,89,90,91,92,
  93,1183,3555,3556,3557,3558,3559,3560,662,13,0,1,2,4,5,3561,
  3562,3563,3564,3565,3566,3567,3568,663,28,0,1,4,5,66,68,69,
  75,77,78,79,80,81,82,83,84,720,721,722,723,724,725,726,
  3569,3570,3571,3572,3573,664,26,0,1,4,5,67,68,69,70,75,
  77,78,79,80,81,82,83,84,1287,1288,1289,1290,3574,3575,3576,3577,
  3578,665,28,0,1,4,5,66,68,69,75,77,720,723,724,725,
  726,3103,3105,3106,3579,3580,3581,3582,3583,3584,3585,3586,3587,3588,3589,666,
  11,0,1,3,4,5,107,108,109,3590,3591,3592,667,8,0,1,
  2,3,4,5,3593,3594,668,28,0,1,4,5,66,68,69,77,
  80,82,84,88,89,90,91,92,93,3595,3596,3597,3598,3599,3600,3601,
  3602,3603,3604,3605,670,27,0,1,4,5,66,67,68,69,70,71,
  72,73,75,76,77,78,79,80,81,82,83,84,3608,3609,3610,3611,
  3612,671,28,0,1,4,5,66,68,69,77,80,82,84,88,89,
  90,91,92,93,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,672,
  27,0,1,4,5,66,67,68,69,70,71,72,73,75,76,77,
  78,79,80,81,82,83,84,3624,3625,3626,3627,3628,673,27,0,1,
  4,5,66,68,69,77,80,82,84,87,88,89,90,91,92,93,
  3629,3630,3631,3632,3633,3634,3635,3636,3637,674,27,0,1,4,5,66,
  68,69,77,80,82,84,87,88,89,90,91,92,93,3629,3630,3631,
  3632,3633,3634,3635,3638,3639,675,10,0,1,2,4,5,3640,3641,3642,
  3643,3644,676,29,0,1,2,4,5,66,67,68,69,70,71,72,
  73,74,75,76,77,78,79,80,81,82,83,84,3645,3646,3647,3648,
  3649,677,14,0,1,2,4,5,3650,3651,3652,3653,3654,3655,3656,3657,
  3658,678,13,0,1,4,5,3659,3660,3661,3662,3663,3664,3665,3666,3667,
  679,9,0,1,2,3,4,5,3668,3669,3670,680,9,0,1,2,
  3,4,5,3671,3672,3673,681,9,0,1,2,4,5,3674,3675,3676,
  3677,682,27,0,1,4,5,66,68,69,77,80,82,84,87,88,
  89,90,91,92,93,2564,2565,2567,2568,2569,2570,3678,3679,3680,683,13,
  0,1,4,5,3681,3682,3683,3684,3685,3686,3687,3688,3689,684,13,0,
  1,4,5,3690,3691,3692,3693,3694,3695,3696,3697,3698,685,27,0,1,
  4,5,66,68,69,77,80,82,84,87,88,89,90,91,92,93,
  1541,1542,1544,1545,1546,1547,3699,3700,3701,686,13,0,1,4,5,3702,
  3703,3704,3705,3706,3707,3708,3709,3710,688,13,0,1,4,5,3711,3712,
  3713,3714,3715,3716,3717,3718,3719,689,15,0,1,4,5,2313,2314,2315,
  3720,3721,3722,3723,3724,3725,3726,3727,690,12,1,4,5,3728,3729,3730,
  3731,3732,3733,3734,3735,3736,691,27,0,1,4,5,66,68,69,77,
  80,82,84,87,89,90,91,92,93,1183,3555,3556,3557,3558,3737,3738,
  3739,3740,3741,693,27,0,1,4,5,66,68,69,75,77,80,82,
  84,720,721,722,723,724,725,726,3742,3743,3744,3745,3746,3747,3748,3749,
  694,27,0,1,4,5,66,68,69,77,80,82,84,87,88,89,
  90,91,92,93,3505,3506,3507,3508,3509,3510,3511,3750,3751,695,9,1,
  2,3,4,5,3752,3753,3754,3755,696,9,0,1,2,4,5,3756,
  3757,3758,3759,697,8,0,1,2,3,4,5,3760,3761,698,26,0,
  1,4,5,67,68,69,70,75,77,78,79,80,81,82,83,84,
  1287,1288,1289,1290,3762,3763,3764,3765,3766,699,9,0,1,2,3,4,
  5,3767,3768,3769,700,9,0,1,2,3,4,5,3770,3771,3772,701,
  28,0,1,4,5,66,68,69,70,71,72,73,75,76,77,78,
  79,80,81,82,83,84,1278,1279,1280,3773,3774,3775,3776,702,27,0,
  1,4,5,66,67,68,69,75,77,79,80,81,82,83,84,1018,
  1020,1021,3777,3778,3779,3780,3781,3782,3783,3784,703,27,0,1,4,5,
  66,67,68,69,75,77,80,82,84,1018,1020,1021,3777,3778,3779,3780,
  3781,3782,3785,3786,3787,3788,3789,704,27,0,1,4,5,66,68,69,
  77,80,82,84,87,89,90,91,92,93,1183,1613,1614,1615,1616,3790,
  3791,3792,3793,3794,705,17,0,1,4,5,2946,2947,2948,2949,3795,3796,
  3797,3798,3799,3800,3801,3802,3803,706,18,0,1,2,4,5,3804,3805,
  3806,3807,3808,3809,3810,3811,3812,3813,3814,3815,3816,707,27,0,1,4,
  5,66,68,69,77,80,82,84,87,88,89,90,91,92,93,2847,
  2848,2849,2850,3817,3818,3819,3820,3821,708,10,1,2,4,5,1222,1225,
  1226,3822,3823,3824,709,9,1,2,4,5,1222,3825,3826,3827,3828,710,
  14,0,1,2,4,5,3829,3830,3831,3832,3833,3834,3835,3836,3837,711,
  13,0,1,4,5,3838,3839,3840,3841,3842,3843,3844,3845,3846,712,27,
  0,1,4,5,66,68,69,75,77,80,82,84,1250,1251,1252,1253,
  1256,1257,3847,3848,3849,3850,3851,3852,3853,3854,3855,713,14,0,1,2,
  4,5,3856,3857,3858,3859,3860,3861,3862,3863,3864,714,8,0,1,2,
  4,5,3865,3866,3867,715,13,0,1,2,4,5,3868,3869,3870,3871,
  3872,3873,3874,3875,716,8,0,1,2,4,5,3876,3877,3878,717,28,
  0,1,4,5,66,68,69,70,71,72,73,75,76,77,78,79,
  80,81,82,83,84,1278,1279,1280,3879,3880,3881,3882,718,17,1,4,
  5,3883,3884,3885,3886,3887,3888,3889,3890,3891,3892,3893,3894,3895,3896,719,
  27,0,1,4,5,66,67,68,69,70,75,77,80,82,84,3897,
  3898,3899,3900,3901,3902,3903,3904,3905,3906,3907,3908,3909,720,13,0,1,
  4,5,3910,3911,3912,3913,3914,3915,3916,3917,3918,721,9,0,1,2,
  3,4,5,3919,3920,3921,722,9,0,1,2,3,4,5,3922,3923,
  3924,724,17,1,4,5,3925,3926,3927,3928,3929,3930,3931,3932,3933,3934,
  3935,3936,3937,3938,725,15,1,4,5,3939,3940,3941,3942,3943,3944,3945,
  3946,3947,3948,3949,3950,726,13,0,1,2,4,5,3951,3952,3953,3954,
  3955,3956,3957,3958,727,27,0,1,4,5,66,68,69,75,77,80,
  82,84,720,721,722,723,724,725,726,2336,2338,2339,3959,3960,3961,3962,
  3963,728,27,0,1,4,5,66,68,69,77,80,82,84,87,88,
  89,90,91,92,93,2254,2255,2256,2257,2258,3964,3965,3966,3967,729,13,
  0,1,4,5,3968,3969,3970,3971,3972,3973,3974,3975,3976,730,110,0,
  1,2,3,4,5,3977,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,
  3988,3989,3990,3991,3992,3993,3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,
  4004,4005,4006,4007,4008,4009,4010,4011,4012,4013,4014,4015,4016,4017,4018,4019,
  4020,4021,4022,4023,4024,4025,4026,4027,4028,4029,4030,4031,4032,4033,4034,4035,
  4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4048,4049,4050,4051,
  4052,4053,4054,4055,4056,4057,4058,4059,4060,4061,4062,4063,4064,4065,4066,4067,
  4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,4080,731,28,0,
  1,4,5,66,67,68,69,70,71,72,73,75,76,77,78,79,
  80,81,82,83,84,4081,4082,4083,4084,4085,4086,732,13,0,1,2,
  4,5,4087,4088,4089,4090,4091,4092,4093,4094,733,9,1,2,3,4,
  5,4095,4096,4097,4098,734,8,0,1,2,4,5,4099,4100,4101,735,
  13,0,1,2,4,5,4102,4103,4104,4105,4106,4107,4108,4109,736,8,
  0,1,2,4,5,4110,4111,4112,737,9,1,2,4,5,1222,4113,
  4114,4115,4116,738,27,0,1,4,5,66,67,68,69,75,77,80,
  82,84,1018,1020,1021,1898,1899,1900,1901,1902,1903,4117,4118,4119,4120,4121,
  739,27,0,1,4,5,66,68,69,75,77,80,82,84,720,722,
  723,724,725,726,4122,4123,4124,4125,4126,4127,4128,4129,4130,740,13,0,
  1,2,4,5,4131,4132,4133,4134,4135,4136,4137,4138,741,10,1,2,
  4,5,1222,4139,4140,4141,4142,4143,742,31,0,1,4,5,66,67,
  68,69,75,77,78,79,80,81,82,83,84,545,546,547,548,549,
  550,551,554,4144,4145,4146,4147,4148,4149,743,9,0,1,2,3,4,
  5,4150,4151,4152,744,27,0,1,2,4,5,66,67,68,69,70,
  71,72,73,74,75,76,77,78,79,80,81,82,83,84,4153,4154,
  4155,745,14,0,1,2,4,5,4156,4157,4158,4159,4160,4161,4162,4163,
  4164,746,13,0,1,4,5,4165,4166,4167,4168,4169,4170,4171,4172,4173,
  747,8,0,1,2,4,5,4174,4175,4176,748,9,0,1,2,3,
  4,5,4177,4178,4179,749,8,0,1,2,3,4,5,4180,4181,750,
  10,0,1,2,3,4,5,4182,4183,4184,4185,751,27,0,1,4,
  5,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,
  82,83,84,4186,4187,4188,4189,4190
};

void* sxc_dispatch_table[] =
{
  NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) WeakReference__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) WeakReference__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) WeakReference__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Weak_of_SignalListener__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Weak_of_SignalListener__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Weak_of_SignalListener__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) String__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) String__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) String__count, NULL, NULL, NULL, NULL, NULL,
  (void*) String__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) String__init_object, NULL,
  (void*) String__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) String__hash_code, NULL, NULL, NULL,
  (void*) String__to_String,
  (void*) String__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Token__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Token__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Token__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Token__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) Cmd__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) Cmd__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdBinary__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdBinary__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__write_etc, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__optimize, NULL, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__write_etc, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLeftShifted__to_cpp,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLeftShifted__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__optimize, NULL, NULL, NULL,
  (void*) CmdLeftShifted__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLeftShifted__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdLeftShifted__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericArray__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericArray__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_BigInt__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_BigInt__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_BigInt__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_BigInt__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_BigInt__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_BigInt__init_object, NULL,
  (void*) ArrayList_of_BigInt__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_BigInt__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Object_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__init_object, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__create_reader, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__to_String,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Object__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object,
  (void*) GenericHashTable_of_Object_and_Object__values, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Object_and_Object__find__Object, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Object_and_Object__init_object, NULL,
  (void*) GenericHashTable_of_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_MethodInfo____type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_MethodInfo____init_object, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MethodTable__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MethodTable__init_object, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Int64__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Int64__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Int64__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) System__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) System__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Cmd__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Cmd__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Cmd__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Cmd__create_duplicate,
  (void*) ArrayList_of_Cmd__init__Int32, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Cmd__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Cmd__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Cmd__init_object, NULL,
  (void*) ArrayList_of_Cmd__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_Cmd__create_reader, NULL, NULL,
  (void*) ArrayList_of_Cmd__to_String,
  (void*) ArrayList_of_Cmd__modification_count,
  (void*) Cmd__type,
  (void*) CmdStatementList__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdStatementList__write_etc, NULL, NULL,
  (void*) CmdStatementList__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdStatementList__to_cpp,
  (void*) CmdStatementList__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStatementList__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdStatementList__type_name, NULL,
  (void*) CmdStatementList__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdStatementList__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdStatementList__to_cs, NULL, NULL,
  (void*) CmdStatementList__group_dynamic_methods, NULL, NULL,
  (void*) CmdStatementList__to_java,
  (void*) CmdStatementList__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStatementList__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Qualifiers__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Qualifiers__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Qualifiers__init_object, NULL,
  (void*) Qualifiers__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Qualifiers__hash_code, NULL, NULL, NULL,
  (void*) Qualifiers__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ArrayList_of_Token__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ArrayList_of_Token__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ArrayList_of_Token__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ArrayList_of_Token__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ArrayList_of_Token__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ArrayList_of_Token__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ArrayList_of_Token__init_object, NULL,
  (void*) ArrayList_of_ArrayList_of_Token__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_ArrayList_of_Token__to_String,
  (void*) ArrayList_of_ArrayList_of_Token__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_TypeInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_TypeInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_TypeInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeInfo__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeInfo__init_object, NULL,
  (void*) ArrayList_of_TypeInfo__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_TypeInfo__create_reader, NULL, NULL,
  (void*) ArrayList_of_TypeInfo__to_String,
  (void*) ArrayList_of_TypeInfo__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_MethodInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_MethodInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_MethodInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_MethodInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_MethodInfo__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_MethodInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_MethodInfo__init_object, NULL,
  (void*) ArrayList_of_MethodInfo__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_MethodInfo__create_reader, NULL, NULL,
  (void*) ArrayList_of_MethodInfo__to_String,
  (void*) ArrayList_of_MethodInfo__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_PropertyInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_PropertyInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_PropertyInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_PropertyInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_PropertyInfo__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_PropertyInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_PropertyInfo__init_object, NULL,
  (void*) ArrayList_of_PropertyInfo__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_PropertyInfo__create_reader, NULL, NULL,
  (void*) ArrayList_of_PropertyInfo__to_String,
  (void*) ArrayList_of_PropertyInfo__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CategoryInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CategoryInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CategoryInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CategoryInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CategoryInfo__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CategoryInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CategoryInfo__init_object, NULL,
  (void*) ArrayList_of_CategoryInfo__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_CategoryInfo__create_reader, NULL, NULL,
  (void*) ArrayList_of_CategoryInfo__to_String,
  (void*) ArrayList_of_CategoryInfo__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_PropertyInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_PropertyInfo__init_object, NULL,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_MethodInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_MethodInfo__init_object, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_TypeMapping__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_TypeMapping__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_TypeMapping__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeMapping__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeMapping__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeMapping__init_object, NULL,
  (void*) ArrayList_of_TypeMapping__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeMapping__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TypeInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TypeInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) TypeInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ParameterInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ParameterInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ParameterInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ParameterInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ParameterInfo__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ParameterInfo__type_name,
  (void*) ArrayList_of_ParameterInfo__get__Int32, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ParameterInfo__init_object, NULL,
  (void*) ArrayList_of_ParameterInfo__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_ParameterInfo__to_String,
  (void*) ArrayList_of_ParameterInfo__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_String__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_String__init_object, NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashSet_of_String__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashSet_of_String__init_object, NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashSet_of_String__create_reader, NULL, NULL,
  (void*) HashTableBase_of_String_and_String_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MethodGroup__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MethodGroup__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_LocalVarInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_LocalVarInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_LocalVarInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_LocalVarInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_LocalVarInfo__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_LocalVarInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_LocalVarInfo__init_object, NULL,
  (void*) ArrayList_of_LocalVarInfo__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_LocalVarInfo__to_String,
  (void*) ArrayList_of_LocalVarInfo__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) MethodInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MethodInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MethodInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericVarInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericVarInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MethodVarInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MethodVarInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL,
  (void*) LocalVarInfo__x_name, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) LocalVarInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) LocalVarInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStructure__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStructure__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdStructure__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdStructure__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStructure__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStructure__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStructure__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStructure__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdForEach__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStructure__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdForEach__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdForEach__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStructure__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStructure__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStructure__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_cpp,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__optimize, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) QualifiersManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) QualifiersManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_SlagFile__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_SlagFile__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_SlagFile__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_SlagFile__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_SlagFile__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_SlagFile__remaining,
  (void*) ArrayReader_of_SlagFile__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_SlagFile__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_LocalVarInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_LocalVarInfo__init_object, NULL,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) CmdList__create_duplicate,
  (void*) CmdList__init__Int32, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Cmd__count, NULL, NULL, NULL, NULL, NULL,
  (void*) CmdList__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CmdList__init_object, NULL,
  (void*) ArrayList_of_Cmd__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_Cmd__create_reader, NULL, NULL,
  (void*) ArrayList_of_Cmd__to_String,
  (void*) ArrayList_of_Cmd__modification_count,
  (void*) CmdCall__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCall__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCall__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdNewObject__type,
  (void*) CmdNewObject__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdNewObject__write_etc, NULL, NULL,
  (void*) CmdNewObject__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdNewObject__to_cpp,
  (void*) CmdNewObject__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdNewObject__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdNewObject__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdNewObject__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdNewObject__to_cs, NULL, NULL,
  (void*) CmdNewObject__group_dynamic_methods, NULL, NULL,
  (void*) CmdNewObject__to_java,
  (void*) CmdNewObject__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdNewObject__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ArrayList_of_Token__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ArrayList_of_Token__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ArrayList_of_Token__remaining,
  (void*) ArrayReader_of_ArrayList_of_Token__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_ArrayList_of_Token__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__write_etc, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_cpp,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__optimize, NULL, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__write_etc, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_cpp,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdAnd__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__optimize, NULL, NULL, NULL,
  (void*) CmdAnd__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_TypeTemplate__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_TypeTemplate__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_TypeTemplate__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_TypeTemplate__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_TypeTemplate__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_TypeTemplate__remaining,
  (void*) ArrayReader_of_TypeTemplate__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_TypeTemplate__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Object_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Object_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__init_object, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__to_String,
  (void*) ArrayList_of_Mapping_of_Object_and_Int32__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL,
  (void*) TextWriter__print__String, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TextWriter__write__Char, NULL,
  (void*) TextWriter__close, NULL, NULL,
  (void*) TextWriter__flush, NULL,
  (void*) TextWriter__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TextWriter__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL,
  (void*) TextWriter__print__Char,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL,
  (void*)(void(*)(SXCRef,SXCRef)) StdOutWriter__print__String, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(void(*)(SXCRef,SlagChar)) StdOutWriter__write__Char, NULL,
  (void*) TextWriter__close, NULL, NULL,
  (void*)(void(*)(SXCRef)) StdOutWriter__flush, NULL,
  (void*) StdOutWriter__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StdOutWriter__init_object, NULL,
  (void*) StdOutWriter__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL,
  (void*)(void(*)(SXCRef,SlagChar)) StdOutWriter__print__Char,
  (void*) Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdConstruct__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdConstruct__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdConstruct__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdConstruct__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdConstruct__to_String, NULL,
  (void*) CmdUnary__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdUnary__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdUnary__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL,
  (void*) CmdUnary__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdMemberAccess__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdMemberAccess__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdMemberAccess__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdMemberAccess__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdMemberAccess__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Int32_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Int32_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__init_object, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__create_reader, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__to_String,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Int32__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object,
  (void*) GenericHashTable_of_Int32_and_Int32__values, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Int32_and_Int32__init_object, NULL,
  (void*) GenericHashTable_of_Int32_and_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Int32_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init_object, NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__create_reader, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Object_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Object_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__init_object, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__create_reader, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__to_String,
  (void*) ArrayList_of_HashTableBin_of_Object_and_Int32__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object,
  (void*) GenericHashTable_of_Object_and_Int32__values, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Object_and_Int32__find__Object, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Object_and_Int32__init_object, NULL,
  (void*) GenericHashTable_of_Object_and_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Object_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__init_object, NULL,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__create_reader, NULL, NULL,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_Int32__init_object, NULL,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__create_reader, NULL, NULL,
  (void*) HashTableBase_of_String_and_Int32_and_Object_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_String__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_String__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_String__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_String__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_String__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_String__type_name,
  (void*) ArrayList_of_String__get__Int32, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_String__init_object, NULL,
  (void*) ArrayList_of_String__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_String__create_reader, NULL, NULL,
  (void*) ArrayList_of_String__to_String,
  (void*) ArrayList_of_String__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TokenManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TokenManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__remaining,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__read, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Int32__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdTerm__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdTerm__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdTerm__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdTerm__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdThisReference__type,
  (void*) CmdThisReference__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdThisReference__write_etc, NULL, NULL,
  (void*) CmdThisReference__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdThisReference__to_cpp,
  (void*) CmdThisReference__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdThisReference__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdThisReference__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdThisReference__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdThisReference__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) CmdThisReference__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdThisReference__to_String, NULL,
  (void*) CmdCoerceAs__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdCoerceAs__statement_to_java,
  (void*) CmdCoerceAs__write_etc, NULL, NULL,
  (void*) CmdCoerceAs__create_duplicate, NULL,
  (void*) CmdCoerceAs__statement_to_cpp, NULL, NULL,
  (void*) CmdCoerceAs__to_cpp,
  (void*) CmdCoerceAs__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCoerceAs__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCoerceAs__init_object,
  (void*) CmdCoerceAs__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCoerceAs__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCoerceAs__to_java,
  (void*) CmdCoerceAs__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdCoerceAs__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Int32__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Int32__type_name, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Int32__read,
  (void*) ArrayReader_of_Int32__remaining,
  (void*) ArrayReader_of_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Int32_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTableBin_of_Int32_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ParseReaderMarkManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ParseReaderMarkManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Int32_and_Object__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Int32_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) HashTableValueReader_of_Int32_and_Object__read, NULL,
  (void*) HashTableValueReader_of_Int32_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Math__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Math__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CMD__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CMD__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CMD__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CMD__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CMD__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CMD__init_object, NULL,
  (void*) ArrayList_of_CMD__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_CMD__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_CMD__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_CMD__init_object, NULL,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_CMD_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CMD__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CMD__init_object, NULL,
  (void*) CMD__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CMD__hash_code, NULL, NULL, NULL,
  (void*) CMD__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Enum_of_CMD__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Enum_of_CMD__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CmdManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CmdManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) DelegateType__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) DelegateType__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Delegate______type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Delegate______init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SignalHandler__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SignalHandler__init_object, NULL,
  (void*) Object__init, NULL, NULL,
  (void*) SignalHandler__on__Signal, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SpecializedSignalHandler_460__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SpecializedSignalHandler_460__init_object, NULL,
  (void*) Object__init, NULL, NULL,
  (void*) SpecializedSignalHandler_460__on__Signal, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ParamInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ParamInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ParamInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ParamInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ParamInfo__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ParamInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ParamInfo__init_object, NULL,
  (void*) ArrayList_of_ParamInfo__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_ParamInfo__to_String,
  (void*) ArrayList_of_ParamInfo__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) PropertyInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) PropertyInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) PropertyInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStatementWithOperand__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdStatementWithOperand__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdStatementWithOperand__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdThisPropertySubAndAssign__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdThisPropertySubAndAssign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdThisPropertySubAndAssign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdThisPropertySubAndAssign__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdThisPropertySubAndAssign__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) CoerceReader_of_PropertyInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_PropertyInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_PropertyInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) CoerceReader_of_PropertyInfo__read, NULL,
  (void*) CoerceReader_of_PropertyInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CmdCatch__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CmdCatch__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CmdCatch__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdCatch__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdCatch__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdCatch__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdCatch__init_object, NULL,
  (void*) ArrayList_of_CmdCatch__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdCatch__to_String,
  (void*) ArrayList_of_CmdCatch__modification_count,
  (void*) Cmd__type,
  (void*) CmdTry__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdTry__write_etc, NULL, NULL,
  (void*) CmdTry__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdTry__to_cpp,
  (void*) CmdTry__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTry__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdTry__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdTry__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdTry__to_cs, NULL, NULL,
  (void*) CmdTry__group_dynamic_methods, NULL, NULL,
  (void*) CmdTry__to_java,
  (void*) CmdTry__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdTry__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdTerm__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdTerm__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLiteralPrimitive__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLiteralPrimitive__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdLiteralInt64__type,
  (void*) CmdTerm__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLiteralInt64__write_etc, NULL, NULL,
  (void*) CmdLiteralInt64__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLiteralInt64__to_cpp,
  (void*) CmdTerm__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLiteralInt64__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLiteralInt64__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLiteralInt64__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) CmdLiteralInt64__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdThisPropertyMulAndAssign__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdThisPropertyMulAndAssign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdThisPropertyMulAndAssign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdThisPropertyMulAndAssign__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdThisPropertyMulAndAssign__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_cpp,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__optimize, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Char__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Char__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Char__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Char__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Char__count, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Char__clear,
  (void*) ArrayList_of_Char__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Char__init_object, NULL,
  (void*) ArrayList_of_Char__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_Char__create_reader, NULL, NULL,
  (void*) ArrayList_of_Char__to_String,
  (void*) ArrayList_of_Char__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Token__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Token__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Token__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Token__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Token__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Token__type_name,
  (void*) ArrayList_of_Token__get__Int32, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Token__init_object, NULL,
  (void*) ArrayList_of_Token__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_Token__create_reader, NULL, NULL,
  (void*) ArrayList_of_Token__to_String,
  (void*) ArrayList_of_Token__modification_count,
  (void*) Cmd__type,
  (void*) CmdStructureControl__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdStructureControl__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStructureControl__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdStructureControl__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdStructureControl__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStructureControl__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStructureControl__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStructureControl__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdCompare__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdCompare__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCompare__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCompare__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__write_etc, NULL, NULL,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__optimize, NULL, NULL, NULL,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Int64__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Int64__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Int64__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Int64__init_object, NULL,
  (void*) ArrayList_of_Int64__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_Int64__to_String,
  (void*) ArrayList_of_Int64__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StackTrace__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StackTrace__init_object, NULL,
  (void*) StackTrace__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) StackTrace__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Exception__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Exception__init_object, NULL,
  (void*) Exception__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Error__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Error__init_object, NULL,
  (void*) Error__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagError__init_object, NULL,
  (void*) Error__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) SlagError__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Byte__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Byte__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Byte__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdLiteralNull__type,
  (void*) CmdTerm__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLiteralNull__write_etc, NULL, NULL,
  (void*) CmdLiteralNull__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLiteralNull__to_cpp,
  (void*) CmdTerm__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLiteralNull__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLiteralNull__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLiteralNull__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) CmdLiteralNull__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdLiteralNull__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdVarAccess__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdVarAccess__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdMemberVarAccess__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdMemberVarAccess__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdMemberVarAccess__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdMemberVarAccess__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdMemberVarAccess__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdMemberVarAccess__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdMemberVarRead__type,
  (void*) CmdMemberVarAccess__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdMemberVarAccess__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdMemberVarRead__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdMemberVarRead__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdMemberVarAccess__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdMemberVarAccess__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdSingletonReference__type,
  (void*) CmdSingletonReference__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdSingletonReference__write_etc, NULL, NULL,
  (void*) CmdSingletonReference__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdSingletonReference__to_cpp,
  (void*) CmdSingletonReference__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdSingletonReference__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdSingletonReference__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdSingletonReference__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) CmdSingletonReference__to_java,
  (void*) CmdSingletonReference__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdSingletonReference__to_String, NULL,
  (void*) CmdRange__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdRange__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdRange__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdRange__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdRangeLE__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdRangeLE__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdRangeLE__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdRangeLE__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStatement__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdStatement__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdStatement__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Int32_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Int32_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__init_object, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__to_String,
  (void*) ArrayList_of_Mapping_of_Int32_and_Int32__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBin_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBin_of_Int32_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBin_of_Int32_and_Int32__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__write_etc, NULL, NULL,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__optimize, NULL, NULL, NULL,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__write_etc, NULL, NULL,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCmpEQ__to_cpp,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpEQ__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__optimize, NULL, NULL, NULL,
  (void*) CmdCmpEQ__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCmpEQ__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCmpEQ__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Int32_and_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Int32_and_Int32__read, NULL,
  (void*) HashTableValueReader_of_Int32_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Int32_and_Int32__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__write_etc, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__write_etc, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLocalVarIncrement__to_cpp,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLocalVarIncrement__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLocalVarIncrement__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLocalVarIncrement__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) CmdLocalVarIncrement__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeTemplate__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeTemplate__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeTemplate__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeTemplate__init_object, NULL,
  (void*) ArrayList_of_TypeTemplate__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_TypeTemplate__to_String,
  (void*) ArrayList_of_TypeTemplate__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_TypeTemplate____type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_TypeTemplate____init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_TypeTemplate____to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_Token____type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_Token____init_object, NULL,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Token___and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) TokenReader__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TokenReader__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TokenReader__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) TokenReader__read, NULL,
  (void*) TokenReader__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) TokenReader__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TemplateReader__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TemplateReader__init_object, NULL,
  (void*) Object__init, NULL,
  (void*) TemplateReader__prep_next, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) TokenReader__read, NULL,
  (void*) TokenReader__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLocalVarDivAndAssign__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLocalVarDivAndAssign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLocalVarDivAndAssign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLocalVarDivAndAssign__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdLocalVarDivAndAssign__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__values, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__values, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_TypeInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_TypeInfo__init_object, NULL,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_TypeTemplate____type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_TypeTemplate____init_object, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_TypeTemplate__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_TypeTemplate__init_object, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_MethodGroup__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_MethodGroup__init_object, NULL,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_MethodGroup__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_MethodGroup__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_MethodGroup__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_MethodGroup__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_MethodGroup__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_MethodGroup__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_MethodGroup__init_object, NULL,
  (void*) ArrayList_of_MethodGroup__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_MethodGroup__to_String,
  (void*) ArrayList_of_MethodGroup__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StringTable__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StringTable__init_object, NULL,
  (void*) StringTable__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) StringTable__create_reader, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TypeManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TypeManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagAnalyzer__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagAnalyzer__init_object, NULL,
  (void*) SlagAnalyzer__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdUnary__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdPrimitiveCast__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdPrimitiveCast__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdPrimitiveCast__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL,
  (void*) CmdCastToInt64__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdCastToInt64__statement_to_java,
  (void*) CmdCastToInt64__write_etc, NULL, NULL,
  (void*) CmdCastToInt64__create_duplicate, NULL,
  (void*) CmdCastToInt64__statement_to_cpp, NULL, NULL,
  (void*) CmdCastToInt64__to_cpp,
  (void*) CmdPrimitiveCast__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCastToInt64__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCastToInt64__optimize, NULL, NULL, NULL,
  (void*) CmdCastToInt64__init_object,
  (void*) CmdCastToInt64__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCastToInt64__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCastToInt64__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL,
  (void*) CmdRange__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdRangeLT__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdRangeLT__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdRangeLT__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdRangeLT__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_cpp,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__optimize, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Int32_and_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Int32_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) HashTableMappingReader_of_Int32_and_Int32__read, NULL,
  (void*) HashTableMappingReader_of_Int32_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MethodTableManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MethodTableManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) CoerceReader_of_TypeTemplate____has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_TypeTemplate____type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_TypeTemplate____init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) CoerceReader_of_TypeTemplate____read, NULL,
  (void*) CoerceReader_of_TypeTemplate____to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdCloseScope__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdCloseScope__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStatement__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCloseScope__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCloseScope__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Int32_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Int32_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__init_object, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__to_String,
  (void*) ArrayList_of_Mapping_of_Int32_and_Object__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBin_of_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBin_of_Int32_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBin_of_Int32_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) FileError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) FileError__init_object, NULL,
  (void*) FileError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__write_etc, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__optimize, NULL, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_MethodGroup__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_MethodGroup__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_MethodGroup__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_MethodGroup__remaining,
  (void*) ArrayReader_of_MethodGroup__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_MethodGroup__read, NULL,
  (void*) ArrayReader_of_MethodGroup__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdAssign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdAssign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdAssign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdAssign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) NullReferenceError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) NullReferenceError__init_object, NULL,
  (void*) NullReferenceError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_Int32_and_Int32__init_object, NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__create_reader, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTable_of_String_and_LocalVarInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTable_of_String_and_LocalVarInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_HashTable_of_String_and_LocalVarInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__init_object, NULL,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__to_String,
  (void*) ArrayList_of_HashTable_of_String_and_LocalVarInfo__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Object_and_Object__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Object_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) HashTableValueReader_of_Object_and_Object__read, NULL,
  (void*) HashTableValueReader_of_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) InvalidStateError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) InvalidStateError__init_object, NULL,
  (void*) InvalidStateError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpIs__write_etc, NULL, NULL,
  (void*) CmdCmpIs__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCmpIs__to_cpp,
  (void*) CmdCmpIs__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpIs__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCmpIs__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCmpIs__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCmpIs__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_SlagFile__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_SlagFile__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_SlagFile__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_SlagFile__init_object, NULL,
  (void*) ArrayList_of_SlagFile__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_SlagFile__to_String,
  (void*) ArrayList_of_SlagFile__modification_count,
  (void*) CmdCall__type,
  (void*) CmdContextCall__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdContextCall__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdContextCall__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdContextCall__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdContextCall__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdContextCall__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdCall__type,
  (void*) CmdContextCall__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdStaticCall__statement_to_java,
  (void*) CmdStaticCall__write_etc, NULL, NULL,
  (void*) CmdStaticCall__create_duplicate, NULL,
  (void*) CmdStaticCall__statement_to_cpp, NULL, NULL,
  (void*) CmdStaticCall__to_cpp,
  (void*) CmdStaticCall__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdContextCall__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdStaticCall__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdStaticCall__init_object,
  (void*) CmdStaticCall__statement_to_cs,
  (void*) Object__init,
  (void*) CmdStaticCall__to_cs, NULL, NULL,
  (void*) CmdContextCall__group_dynamic_methods, NULL, NULL,
  (void*) CmdStaticCall__to_java,
  (void*) CmdStaticCall__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStaticCall__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_MethodInfo____type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_MethodInfo____init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_MethodInfo____to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CmdWhichCase__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CmdWhichCase__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CmdWhichCase__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdWhichCase__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdWhichCase__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdWhichCase__remaining,
  (void*) ArrayReader_of_CmdWhichCase__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdWhichCase__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Qualifiers__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Qualifiers__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Qualifiers__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CmdElseIf__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CmdElseIf__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_CmdElseIf__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdElseIf__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdElseIf__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdElseIf__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdElseIf__init_object, NULL,
  (void*) ArrayList_of_CmdElseIf__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdElseIf__to_String,
  (void*) ArrayList_of_CmdElseIf__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_String_and_SignalHandler__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_String_and_SignalHandler__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_String_and_SignalHandler__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ReferenceTable_of_String_and_SignalHandler__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ReferenceTable_of_String_and_SignalHandler__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__remaining,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__read, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_Token____type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_Token____init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_Token____to_String, NULL,
  (void*) CmdCmpInstanceOf__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpInstanceOf__write_etc, NULL, NULL,
  (void*) CmdCmpInstanceOf__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCmpInstanceOf__to_cpp,
  (void*) CmdCmpInstanceOf__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpInstanceOf__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCmpInstanceOf__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCmpInstanceOf__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCmpInstanceOf__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdCmpInstanceOf__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ArrayList_of_TypeTemplate__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ArrayList_of_TypeTemplate__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ArrayList_of_TypeTemplate__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__init_object, NULL,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_ArrayList_of_TypeTemplate__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Token__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_Token__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Token__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Token__remaining,
  (void*) ArrayReader_of_Token__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_Token__read, NULL,
  (void*) ArrayReader_of_Token__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdLocalVarAccess__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdLocalVarAccess__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdLocalVarAccess__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLocalVarAccess__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLocalVarAccess__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdLocalVarAccess__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdLocalVarAccess__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdLocalVarAccess__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdLocalVarWrite__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLocalVarWrite__write_etc, NULL, NULL,
  (void*) CmdLocalVarWrite__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLocalVarWrite__to_cpp,
  (void*) CmdLocalVarWrite__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdLocalVarWrite__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLocalVarWrite__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdLocalVarWrite__optimize, NULL, NULL, NULL,
  (void*) CmdLocalVarWrite__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLocalVarWrite__to_cs, NULL, NULL,
  (void*) CmdLocalVarWrite__group_dynamic_methods, NULL, NULL,
  (void*) CmdLocalVarWrite__to_java,
  (void*) CmdLocalVarWrite__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdLocalVarWrite__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Int64__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Int64__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Int64__remaining,
  (void*) ArrayReader_of_Int64__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_Int64__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) BigInt__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) BigInt__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) BigInt__init_object, NULL,
  (void*) BigInt__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) BigInt__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ParamInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ParamInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StructureType__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StructureType__init_object, NULL,
  (void*) StructureType__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StructureType__hash_code, NULL, NULL, NULL,
  (void*) StructureType__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdInitialAssignment__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdInitialAssignment__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdInitialAssignment__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdInitialAssignment__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__write_etc, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__optimize, NULL, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__to_String, NULL,
  (void*) CmdCmpIsNotNull__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpIsNotNull__write_etc, NULL, NULL,
  (void*) CmdCmpIsNotNull__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCmpIsNotNull__to_cpp,
  (void*) CmdCmpIsNotNull__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpIsNotNull__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCmpIsNotNull__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCmpIsNotNull__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCmpIsNotNull__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL,
  (void*) CmdLiteralReal64__type,
  (void*) CmdTerm__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLiteralReal64__write_etc, NULL, NULL,
  (void*) CmdLiteralReal64__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLiteralReal64__to_cpp,
  (void*) CmdTerm__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLiteralReal64__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLiteralReal64__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLiteralReal64__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) CmdLiteralReal64__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdLiteralReal64__to_String, NULL,
  (void*) CmdCastToReal64__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdCastToReal64__statement_to_java,
  (void*) CmdCastToReal64__write_etc, NULL, NULL,
  (void*) CmdCastToReal64__create_duplicate, NULL,
  (void*) CmdCastToReal64__statement_to_cpp, NULL, NULL,
  (void*) CmdCastToReal64__to_cpp,
  (void*) CmdPrimitiveCast__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCastToReal64__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCastToReal64__optimize, NULL, NULL, NULL,
  (void*) CmdCastToReal64__init_object,
  (void*) CmdCastToReal64__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCastToReal64__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCastToReal64__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_StructureType__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_StructureType__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_StructureType__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__remaining,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__read, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Int32__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdInitialConstructor__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdInitialConstructor__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdInitialConstructor__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdInitialConstructor__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) RangeIteratorDescending_of_Int32__create_duplicate, NULL, NULL, NULL,
  (void*) RangeIteratorDescending_of_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) RangeIteratorDescending_of_Int32__type_name, NULL, NULL, NULL, NULL,
  (void*) RangeIteratorDescending_of_Int32__read, NULL,
  (void*) RangeIteratorDescending_of_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) RangeIteratorDescending_of_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Signal__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Signal__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Signal__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Signal__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Signal__count, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Signal__clear,
  (void*) ArrayList_of_Signal__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Signal__init_object, NULL,
  (void*) ArrayList_of_Signal__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_Signal__create_reader, NULL, NULL,
  (void*) ArrayList_of_Signal__to_String,
  (void*) ArrayList_of_Signal__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Signal__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Signal__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Byte__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Byte__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Byte__init_object, NULL,
  (void*) ArrayList_of_Byte__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_Byte__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdSingletonWrite__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdSingletonWrite__write_etc, NULL, NULL,
  (void*) CmdSingletonWrite__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdSingletonWrite__to_cpp,
  (void*) CmdSingletonWrite__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdSingletonWrite__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdSingletonWrite__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdSingletonWrite__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdSingletonWrite__to_cs, NULL, NULL,
  (void*) CmdSingletonWrite__group_dynamic_methods, NULL, NULL,
  (void*) CmdSingletonWrite__to_java,
  (void*) CmdSingletonWrite__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdSingletonWrite__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_MethodInfo__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_MethodInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_MethodInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_MethodInfo__remaining,
  (void*) ArrayReader_of_MethodInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_MethodInfo__read, NULL,
  (void*) ArrayReader_of_MethodInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) LocalVarTable__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) LocalVarTable__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashSet_of_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashSet_of_Int32__init_object, NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashSet_of_Int32__create_reader, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__init_object, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__create_reader, NULL, NULL,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__to_String,
  (void*) ArrayList_of_HashTableBin_of_Int32_and_Object__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object,
  (void*) GenericHashTable_of_Int32_and_Object__values, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Int32_and_Object__type_name,
  (void*) GenericHashTable_of_Int32_and_Object__get__Int32, NULL, NULL, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Int32_and_Object__init_object, NULL,
  (void*) GenericHashTable_of_Int32_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) GenericHashTable_of_Int32_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init_object, NULL,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_Int32_and_Cmd__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_Int32_and_Cmd__init_object, NULL,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Int32__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Int32__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Int32__init_object, NULL,
  (void*) ArrayList_of_Int32__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) ArrayList_of_Int32__create_reader, NULL, NULL,
  (void*) ArrayList_of_Int32__to_String,
  (void*) ArrayList_of_Int32__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Context__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Context__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Context__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_SlagError__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_SlagError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_SlagError__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CPPWriter__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CPPWriter__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) NumberConversions__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) NumberConversions__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_LocalVarInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_LocalVarInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_LocalVarInfo__remaining,
  (void*) ArrayReader_of_LocalVarInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_LocalVarInfo__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__write_etc, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdRightXShifted__to_cpp,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdRightXShifted__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__optimize, NULL, NULL, NULL,
  (void*) CmdRightXShifted__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdRightXShifted__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdRightXShifted__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CategoryInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CategoryInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__write_etc, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__write_etc, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdThisPropertyIncrement__to_cpp,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdThisPropertyIncrement__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdThisPropertyIncrement__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdThisPropertyIncrement__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) CmdThisPropertyIncrement__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_RuntimeType__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_RuntimeType__init_object, NULL,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_cpp,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__optimize, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_cpp,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdMod__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdMod__optimize, NULL, NULL, NULL,
  (void*) CmdMod__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) BitWriter__write__Char, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) BitWriter__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) BitWriter__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ETCWriter__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ETCWriter__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__init_object, NULL,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_Int32_and_String__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_Int32_and_String__init_object, NULL,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__create_reader, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_String_and_Int32_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TypeMapping__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TypeMapping__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) TypeMapping__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) CoerceReader_of_String__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_String__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_String__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) CoerceReader_of_String__read, NULL,
  (void*) CoerceReader_of_String__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) NoNextValueError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) NoNextValueError__init_object, NULL,
  (void*) NoNextValueError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Object_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_Object_and_Int32__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__write_etc, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cpp,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__optimize, NULL, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) CoerceReader_of_MethodInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_MethodInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_MethodInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) CoerceReader_of_MethodInfo__read, NULL,
  (void*) CoerceReader_of_MethodInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_String__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_String__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_String__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdIf__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdIf__write_etc, NULL, NULL,
  (void*) CmdIf__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdIf__to_cpp,
  (void*) CmdIf__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdIf__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdIf__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdIf__optimize, NULL, NULL, NULL,
  (void*) CmdIf__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdIf__to_cs, NULL, NULL,
  (void*) CmdIf__group_dynamic_methods, NULL, NULL,
  (void*) CmdIf__to_java,
  (void*) CmdIf__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdIf__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdRemoveCurrent__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdRemoveCurrent__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStatement__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdRemoveCurrent__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdRemoveCurrent__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) File__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) File__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) File__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagCompiler__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagCompiler__init_object, NULL,
  (void*) SlagCompiler__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_PropertyInfo__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_PropertyInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_PropertyInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_PropertyInfo__remaining,
  (void*) ArrayReader_of_PropertyInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_PropertyInfo__read, NULL,
  (void*) ArrayReader_of_PropertyInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ControlStructureInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ControlStructureInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_ControlStructureInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ControlStructureInfo__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_ControlStructureInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ControlStructureInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ControlStructureInfo__remaining,
  (void*) ArrayReader_of_ControlStructureInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_ControlStructureInfo__read, NULL,
  (void*) ArrayReader_of_ControlStructureInfo__to_String, NULL,
  (void*) CmdUnary__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdNot__write_etc, NULL, NULL,
  (void*) CmdNot__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdNot__to_cpp,
  (void*) CmdNot__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdNot__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdNot__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdNot__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdNot__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) BitwiseOperations__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) BitwiseOperations__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__write_etc, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cpp,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdXor__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__optimize, NULL, NULL, NULL,
  (void*) CmdXor__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) CmdUnary__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdDuplicate__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdDuplicate__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdDuplicate__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdDuplicate__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdThisPropertyModAndAssign__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdThisPropertyModAndAssign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdThisPropertyModAndAssign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdThisPropertyModAndAssign__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdThisPropertyModAndAssign__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__to_String, NULL,
  (void*) CmdLiteralInt32__type,
  (void*) CmdTerm__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLiteralInt32__write_etc, NULL, NULL,
  (void*) CmdLiteralInt32__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLiteralInt32__to_cpp,
  (void*) CmdTerm__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLiteralInt32__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLiteralInt32__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLiteralInt32__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) CmdLiteralInt32__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdLiteralInt32__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__write_etc, NULL, NULL,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCmpNE__to_cpp,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpNE__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__optimize, NULL, NULL, NULL,
  (void*) CmdCmpNE__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCmpNE__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCmpNE__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SpecializedComparator_2167__a_before_b__MethodInfo_MethodInfo, NULL, NULL,
  (void*) SpecializedComparator_2167__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SpecializedComparator_2167__init_object, NULL,
  (void*) SpecializedComparator_2167__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdWhichCase__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdWhichCase__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdWhichCase__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdWhichCase__init_object, NULL,
  (void*) ArrayList_of_CmdWhichCase__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_CmdWhichCase__to_String,
  (void*) ArrayList_of_CmdWhichCase__modification_count,
  (void*) Cmd__type,
  (void*) CmdStructure__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdWhich__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdWhich__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStructure__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdWhich__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdWhich__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStructure__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStructure__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdWhich__to_String, NULL,
  (void*) CmdAs__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdAs__statement_to_java,
  (void*) CmdAs__write_etc, NULL, NULL,
  (void*) CmdAs__create_duplicate, NULL,
  (void*) CmdAs__statement_to_cpp, NULL, NULL,
  (void*) CmdAs__to_cpp,
  (void*) CmdAs__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdAs__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdAs__init_object,
  (void*) CmdAs__statement_to_cs,
  (void*) Object__init,
  (void*) CmdAs__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdAs__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdAs__to_String, NULL,
  (void*) CmdArrayDuplicate__type,
  (void*) CmdArrayDuplicate__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdArrayDuplicate__write_etc, NULL, NULL,
  (void*) CmdArrayDuplicate__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdArrayDuplicate__to_cpp,
  (void*) CmdArrayDuplicate__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdArrayDuplicate__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdArrayDuplicate__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdArrayDuplicate__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdArrayDuplicate__to_cs, NULL, NULL,
  (void*) CmdArrayDuplicate__group_dynamic_methods, NULL, NULL,
  (void*) CmdArrayDuplicate__to_java,
  (void*) CmdArrayDuplicate__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdArrayDuplicate__to_String, NULL,
  (void*) CmdLiteralByte__type,
  (void*) CmdTerm__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLiteralByte__write_etc, NULL, NULL,
  (void*) CmdLiteralByte__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLiteralByte__to_cpp,
  (void*) CmdTerm__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLiteralByte__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLiteralByte__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLiteralByte__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) CmdLiteralByte__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdLiteralByte__to_String, NULL,
  (void*) CmdCastToByte__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdCastToByte__statement_to_java,
  (void*) CmdCastToByte__write_etc, NULL, NULL,
  (void*) CmdCastToByte__create_duplicate, NULL,
  (void*) CmdCastToByte__statement_to_cpp, NULL, NULL,
  (void*) CmdCastToByte__to_cpp,
  (void*) CmdPrimitiveCast__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCastToByte__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCastToByte__optimize, NULL, NULL, NULL,
  (void*) CmdCastToByte__init_object,
  (void*) CmdCastToByte__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCastToByte__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCastToByte__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdReturnNil__write_etc, NULL, NULL,
  (void*) CmdReturnNil__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdReturnNil__to_cpp,
  (void*) CmdReturnNil__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStatement__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdReturnNil__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdReturnNil__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdReturnNil__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) CmdReturnNil__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) FileManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) FileManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__remaining,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__read, NULL,
  (void*) ArrayReader_of_Mapping_of_Int32_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_SignalHandler__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_SignalHandler__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_SignalHandler__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) NativeData__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) NativeData__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdThrow__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdThrow__write_etc, NULL, NULL,
  (void*) CmdThrow__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdThrow__to_cpp,
  (void*) CmdThrow__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdThrow__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdThrow__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdThrow__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdThrow__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdThrow__to_java,
  (void*) CmdThrow__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdThrow__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) NoSuchElementError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) NoSuchElementError__init_object, NULL,
  (void*) NoSuchElementError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdAssignNewObject__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdAssignNewObject__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdAssignNewObject__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdAssignNewObject__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SocketError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SocketError__init_object, NULL,
  (void*) SocketError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL,
  (void*) CmdCastToInt32__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdCastToInt32__statement_to_java,
  (void*) CmdCastToInt32__write_etc, NULL, NULL,
  (void*) CmdCastToInt32__create_duplicate, NULL,
  (void*) CmdCastToInt32__statement_to_cpp, NULL, NULL,
  (void*) CmdCastToInt32__to_cpp,
  (void*) CmdPrimitiveCast__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCastToInt32__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCastToInt32__optimize, NULL, NULL, NULL,
  (void*) CmdCastToInt32__init_object,
  (void*) CmdCastToInt32__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCastToInt32__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCastToInt32__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_TypeInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_TypeInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_TypeInfo__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdWhichCase__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdWhichCase__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdWhichCase__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdWhichCase__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdWhichCase__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__write_etc, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__optimize, NULL, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdUnresolvedNewObject__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdUnresolvedNewObject__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdUnresolvedNewObject__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdUnresolvedNewObject__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ParameterInfo__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_ParameterInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ParameterInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ParameterInfo__remaining,
  (void*) ArrayReader_of_ParameterInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_ParameterInfo__read, NULL,
  (void*) ArrayReader_of_ParameterInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HeapSort_of_MethodInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HeapSort_of_MethodInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_cpp,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__optimize, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init_object, NULL,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_Int32_and_KeywordPairing__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_Int32_and_KeywordPairing__init_object, NULL,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Object__init_object, NULL,
  (void*) ArrayList_of_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL,
  (void*)(SlagLogical(*)(SXCRef,SlagChar)) ParseReader__consume__Char,
  (void*) Object__create_duplicate, NULL, NULL,
  (void*) ParseReader__to_List,
  (void*)(SlagLogical(*)(SXCRef)) ParseReader__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ParseReader__type_name, NULL, NULL, NULL,
  (void*)(SlagChar(*)(SXCRef)) ParseReader__read, NULL, NULL,
  (void*) ParseReader__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ParseReader__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Cmd__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_Cmd__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Cmd__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Cmd__remaining,
  (void*) ArrayReader_of_Cmd__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_Cmd__read, NULL,
  (void*) ArrayReader_of_Cmd__to_String, NULL,
  (void*) CmdLiteralString__type,
  (void*) CmdTerm__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLiteralString__write_etc, NULL, NULL,
  (void*) CmdLiteralString__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLiteralString__to_cpp,
  (void*) CmdLiteralString__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLiteralString__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLiteralString__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLiteralString__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) CmdLiteralString__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdLiteralString__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL,
  (void*) StringReader__consume__Char,
  (void*) StringReader__create_duplicate, NULL, NULL,
  (void*) StringReader__to_List,
  (void*) StringReader__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StringReader__type_name, NULL, NULL, NULL,
  (void*) StringReader__read, NULL,
  (void*) StringReader__remaining,
  (void*) StringReader__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) StringReader__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_Cmd__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_Cmd__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_Cmd__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_Cmd__remaining,
  (void*) ArrayReverseReader_of_Cmd__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReverseReader_of_Cmd__read, NULL,
  (void*) ArrayReader_of_Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_Cmd__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_Cmd__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_Cmd__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStructureControl__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdNextIteration__write_etc, NULL, NULL,
  (void*) CmdNextIteration__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdNextIteration__to_cpp,
  (void*) CmdNextIteration__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStructureControl__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdNextIteration__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdNextIteration__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdNextIteration__to_cs, NULL, NULL,
  (void*) CmdStructureControl__group_dynamic_methods, NULL, NULL,
  (void*) CmdNextIteration__to_java,
  (void*) CmdStructureControl__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStructureControl__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStructureControl__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdEscape__write_etc, NULL, NULL,
  (void*) CmdEscape__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdEscape__to_cpp,
  (void*) CmdStructureControl__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStructureControl__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdEscape__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdEscape__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdEscape__to_cs, NULL, NULL,
  (void*) CmdStructureControl__group_dynamic_methods, NULL, NULL,
  (void*) CmdEscape__to_java,
  (void*) CmdStructureControl__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStructureControl__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStructure__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdForEachOf__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdForEachOf__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStructure__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdForEachOf__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdForEachOf__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStructure__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStructure__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStructure__to_String, NULL,
  (void*) CmdNewCompound__type,
  (void*) CmdNewCompound__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdNewCompound__write_etc, NULL, NULL,
  (void*) CmdNewCompound__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdNewCompound__to_cpp,
  (void*) CmdNewCompound__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdNewCompound__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdNewCompound__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdNewCompound__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdNewCompound__to_cs, NULL, NULL,
  (void*) CmdNewCompound__group_dynamic_methods, NULL, NULL,
  (void*) CmdNewCompound__to_java,
  (void*) CmdNewCompound__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdNewCompound__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL,
  (void*) FileWriter__print__String, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(void(*)(SXCRef,SlagChar)) FileWriter__write__Char, NULL,
  (void*)(void(*)(SXCRef)) FileWriter__close, NULL, NULL,
  (void*) TextWriter__flush, NULL,
  (void*) FileWriter__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) FileWriter__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL,
  (void*) TextWriter__print__Char,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ParamInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ParamInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_ParamInfo__remaining,
  (void*) ArrayReader_of_ParamInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_ParamInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) HashTableKeyReader_of_Object_and_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableKeyReader_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableKeyReader_of_Object_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) HashTableKeyReader_of_Object_and_Int32__read, NULL,
  (void*) HashTableKeyReader_of_Object_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StackTraceInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StackTraceInfo__init_object, NULL,
  (void*) StackTraceInfo__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) StackTraceInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Qualifiers__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Qualifiers__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Qualifiers__remaining,
  (void*) ArrayReader_of_Qualifiers__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_Qualifiers__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLocalVarAddAndAssign__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLocalVarAddAndAssign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLocalVarAddAndAssign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLocalVarAddAndAssign__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdLocalVarAddAndAssign__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init_object, NULL,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_Qualifiers__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_Qualifiers__init_object, NULL,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL,
  (void*) StringBuilder__print__String, NULL,
  (void*) StringBuilder__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StringBuilder__write__Char,
  (void*) StringBuilder__count,
  (void*) TextWriter__close, NULL, NULL,
  (void*) TextWriter__flush, NULL,
  (void*) StringBuilder__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StringBuilder__init_object, NULL,
  (void*) StringBuilder__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL,
  (void*) TextWriter__print__Char,
  (void*) StringBuilder__to_String,
  (void*) StringBuilder__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) SlagScanner__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagScanner__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagScanner__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) SlagScanner__read, NULL,
  (void*) SlagScanner__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) TokenReader__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagPreprocessor__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagPreprocessor__init_object, NULL,
  (void*) Object__init, NULL,
  (void*) SlagPreprocessor__prep_next, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) TokenReader__read, NULL,
  (void*) TokenReader__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBreakpoint__write_etc, NULL, NULL,
  (void*) CmdBreakpoint__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdBreakpoint__to_cpp,
  (void*) CmdBreakpoint__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStatement__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdBreakpoint__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdBreakpoint__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdBreakpoint__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) CmdBreakpoint__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBreakpoint__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdContingent__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdContingent__write_etc, NULL, NULL,
  (void*) CmdContingent__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdContingent__to_cpp,
  (void*) CmdContingent__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdContingent__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdContingent__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdContingent__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdContingent__to_cs, NULL, NULL,
  (void*) CmdContingent__group_dynamic_methods, NULL, NULL,
  (void*) CmdContingent__to_java,
  (void*) CmdContingent__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdContingent__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__write_etc, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__optimize, NULL, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStructure__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLoop__write_etc, NULL, NULL,
  (void*) CmdLoop__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLoop__to_cpp,
  (void*) CmdLoop__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStructure__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLoop__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLoop__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLoop__to_cs, NULL, NULL,
  (void*) CmdStructure__group_dynamic_methods, NULL, NULL,
  (void*) CmdLoop__to_java,
  (void*) CmdStructure__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStructure__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Date__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Date__init_object, NULL,
  (void*) Date__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Date__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StringManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StringManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_Object__to_String, NULL,
  (void*) CmdLiteralReal32__type,
  (void*) CmdTerm__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLiteralReal32__write_etc, NULL, NULL,
  (void*) CmdLiteralReal32__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLiteralReal32__to_cpp,
  (void*) CmdTerm__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLiteralReal32__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLiteralReal32__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLiteralReal32__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) CmdLiteralReal32__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdLiteralReal32__to_String, NULL,
  (void*) CmdCastToReal32__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdCastToReal32__statement_to_java,
  (void*) CmdCastToReal32__write_etc, NULL, NULL,
  (void*) CmdCastToReal32__create_duplicate, NULL,
  (void*) CmdCastToReal32__statement_to_cpp, NULL, NULL,
  (void*) CmdCastToReal32__to_cpp,
  (void*) CmdPrimitiveCast__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCastToReal32__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCastToReal32__optimize, NULL, NULL, NULL,
  (void*) CmdCastToReal32__init_object,
  (void*) CmdCastToReal32__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCastToReal32__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCastToReal32__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) JavaWriter__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) JavaWriter__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__write_etc, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MissingReturnError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) MissingReturnError__init_object, NULL,
  (void*) MissingReturnError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagScannerManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagScannerManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Qualifiers__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Qualifiers__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Qualifiers__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Qualifiers__init_object, NULL,
  (void*) ArrayList_of_Qualifiers__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_Qualifiers__to_String,
  (void*) ArrayList_of_Qualifiers__modification_count, NULL, NULL, NULL,
  (void*) ArrayReader_of_Char__peek,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Char__consume__Char,
  (void*) ArrayReader_of_Char__create_duplicate, NULL, NULL,
  (void*) ArrayReader_of_Char__to_List,
  (void*) ArrayReader_of_Char__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Char__type_name, NULL, NULL, NULL,
  (void*) ArrayReader_of_Char__read, NULL,
  (void*) ArrayReader_of_Char__remaining,
  (void*) ArrayReader_of_Char__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_Char__to_String, NULL,
  (void*) CmdCall__type,
  (void*) CmdContextCall__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdDynamicCall__statement_to_java,
  (void*) CmdDynamicCall__write_etc, NULL, NULL,
  (void*) CmdDynamicCall__create_duplicate, NULL,
  (void*) CmdDynamicCall__statement_to_cpp, NULL, NULL,
  (void*) CmdDynamicCall__to_cpp,
  (void*) CmdDynamicCall__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdContextCall__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdDynamicCall__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdDynamicCall__init_object,
  (void*) CmdDynamicCall__statement_to_cs,
  (void*) Object__init,
  (void*) CmdDynamicCall__to_cs, NULL, NULL,
  (void*) CmdDynamicCall__group_dynamic_methods, NULL, NULL,
  (void*) CmdDynamicCall__to_java,
  (void*) CmdDynamicCall__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdDynamicCall__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdReturnValue__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdReturnValue__write_etc, NULL, NULL,
  (void*) CmdReturnValue__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdReturnValue__to_cpp,
  (void*) CmdReturnValue__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStatementWithOperand__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdReturnValue__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdReturnValue__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdReturnValue__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdReturnValue__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdReturnValue__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_cpp,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdAdd__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__optimize, NULL, NULL, NULL,
  (void*) CmdAdd__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) LiteralTerm__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) LiteralTerm__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods,
  (void*) LiteralTerm__as_Logical,
  (void*) LiteralTerm__require_logical,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_SlagError__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_SlagError__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_SlagError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_SlagError__init_object, NULL,
  (void*) ArrayList_of_SlagError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_SlagError__to_String,
  (void*) ArrayList_of_SlagError__modification_count,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_cpp,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdExp__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__optimize, NULL, NULL, NULL,
  (void*) CmdExp__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL,
  (void*) Global__print__String, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Global__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Global__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__remaining,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__read, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_ParameterInfo__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_ParameterInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_ParameterInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_ParameterInfo__remaining,
  (void*) ArrayReverseReader_of_ParameterInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReverseReader_of_ParameterInfo__read, NULL,
  (void*) ArrayReader_of_ParameterInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdElseIf__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdElseIf__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdElseIf__remaining,
  (void*) ArrayReader_of_CmdElseIf__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdElseIf__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__write_etc, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLocalVarDecrement__to_cpp,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLocalVarDecrement__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLocalVarDecrement__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLocalVarDecrement__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) CmdLocalVarDecrement__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdWhile__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdWhile__write_etc, NULL, NULL,
  (void*) CmdWhile__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdWhile__to_cpp,
  (void*) CmdWhile__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdWhile__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdWhile__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdWhile__optimize, NULL, NULL, NULL,
  (void*) CmdWhile__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdWhile__to_cs, NULL, NULL,
  (void*) CmdWhile__group_dynamic_methods, NULL, NULL,
  (void*) CmdWhile__to_java,
  (void*) CmdWhile__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdWhile__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__write_etc, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__optimize, NULL, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__write_etc, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCmpGE__to_cpp,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpGE__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__optimize, NULL, NULL, NULL,
  (void*) CmdCmpGE__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCmpGE__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCmpGE__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SignalObjectArg__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SignalObjectArg__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Runtime__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Runtime__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdCast__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdCast__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdCast__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCast__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCast__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdCast__to_String, NULL,
  (void*) CmdCast__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdNarrowingCast__statement_to_java,
  (void*) CmdNarrowingCast__write_etc, NULL, NULL,
  (void*) CmdNarrowingCast__create_duplicate, NULL,
  (void*) CmdNarrowingCast__statement_to_cpp, NULL, NULL,
  (void*) CmdNarrowingCast__to_cpp,
  (void*) CmdNarrowingCast__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdNarrowingCast__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdNarrowingCast__init_object,
  (void*) CmdNarrowingCast__statement_to_cs,
  (void*) Object__init,
  (void*) CmdNarrowingCast__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdNarrowingCast__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdCast__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdPropertyWrite__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdPropertyWrite__write_etc, NULL, NULL,
  (void*) CmdPropertyWrite__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdPropertyWrite__to_cpp,
  (void*) CmdPropertyWrite__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdPropertyWrite__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdPropertyWrite__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdPropertyWrite__optimize, NULL, NULL, NULL,
  (void*) CmdPropertyWrite__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdPropertyWrite__to_cs, NULL, NULL,
  (void*) CmdPropertyWrite__group_dynamic_methods, NULL, NULL,
  (void*) CmdPropertyWrite__to_java,
  (void*) CmdPropertyWrite__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdPropertyWrite__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdContingentControl__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdContingentControl__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdContingentControl__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdContingentControl__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdContingentControl__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdContingentControl__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdContingentControl__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdContingentControl__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdSufficient__write_etc, NULL, NULL,
  (void*) CmdSufficient__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdSufficient__to_cpp,
  (void*) CmdContingentControl__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdContingentControl__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdSufficient__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdSufficient__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdSufficient__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdSufficient__to_java,
  (void*) CmdContingentControl__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdContingentControl__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStructure__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBlock__write_etc, NULL, NULL,
  (void*) CmdBlock__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdBlock__to_cpp,
  (void*) CmdBlock__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStructure__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdBlock__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdBlock__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdBlock__to_cs, NULL, NULL,
  (void*) CmdStructure__group_dynamic_methods, NULL, NULL,
  (void*) CmdBlock__to_java,
  (void*) CmdStructure__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStructure__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdThisPropertyDivAndAssign__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdThisPropertyDivAndAssign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdThisPropertyDivAndAssign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdThisPropertyDivAndAssign__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdThisPropertyDivAndAssign__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_String__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_String__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_String__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_String__remaining,
  (void*) ArrayReader_of_String__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_String__read, NULL,
  (void*) ArrayReader_of_String__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) DegreesManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) DegreesManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) BigIntManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) BigIntManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdArrayGet__type,
  (void*) CmdArrayGet__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdArrayGet__write_etc, NULL, NULL,
  (void*) CmdArrayGet__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdArrayGet__to_cpp,
  (void*) CmdArrayGet__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdArrayGet__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdArrayGet__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdArrayGet__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdArrayGet__to_cs, NULL, NULL,
  (void*) CmdArrayGet__group_dynamic_methods, NULL, NULL,
  (void*) CmdArrayGet__to_java,
  (void*) CmdArrayGet__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdArrayGet__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TypeCastError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TypeCastError__init_object, NULL,
  (void*) TypeCastError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) RangeIteratorGE_of_Int32__create_duplicate, NULL, NULL, NULL,
  (void*) RangeIteratorGE_of_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) RangeIteratorGE_of_Int32__type_name, NULL, NULL, NULL, NULL,
  (void*) RangeIteratorGE_of_Int32__read, NULL,
  (void*) RangeIteratorGE_of_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) RangeIteratorGE_of_Int32__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdArraySet__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdArraySet__write_etc, NULL, NULL,
  (void*) CmdArraySet__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdArraySet__to_cpp,
  (void*) CmdArraySet__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdArraySet__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdArraySet__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdArraySet__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdArraySet__to_cs, NULL, NULL,
  (void*) CmdArraySet__group_dynamic_methods, NULL, NULL,
  (void*) CmdArraySet__to_java,
  (void*) CmdArraySet__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdArraySet__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLocalVarSubAndAssign__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLocalVarSubAndAssign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLocalVarSubAndAssign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLocalVarSubAndAssign__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdLocalVarSubAndAssign__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__write_etc, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCmpGT__to_cpp,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpGT__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__optimize, NULL, NULL, NULL,
  (void*) CmdCmpGT__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCmpGT__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCmpGT__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Signal__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_Signal__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Signal__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Signal__remaining,
  (void*) ArrayReader_of_Signal__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_Signal__read, NULL,
  (void*) ArrayReader_of_Signal__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLocalVarMulAndAssign__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLocalVarMulAndAssign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLocalVarMulAndAssign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLocalVarMulAndAssign__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdLocalVarMulAndAssign__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SignalManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SignalManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL,
  (void*) StdInReader__consume__Char,
  (void*) Object__create_duplicate, NULL, NULL,
  (void*) StdInReader__to_List,
  (void*) StdInReader__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StdInReader__type_name, NULL, NULL, NULL,
  (void*) StdInReader__read, NULL, NULL,
  (void*) StdInReader__init_object, NULL,
  (void*) StdInReader__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) StdInReader__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_Mapping_of_Object_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdUnary__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdLogicalize__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdLogicalize__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLogicalize__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLogicalize__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_StructureType__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTable_of_String_and_StructureType__init_object, NULL,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBase_of_String_and_StructureType_and_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) OutOfBoundsError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) OutOfBoundsError__init_object, NULL,
  (void*) OutOfBoundsError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_ControlStructureInfo__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_ControlStructureInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_ControlStructureInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_ControlStructureInfo__remaining,
  (void*) ArrayReverseReader_of_ControlStructureInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReverseReader_of_ControlStructureInfo__read, NULL,
  (void*) ArrayReader_of_ControlStructureInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) WeakReferenceManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) WeakReferenceManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdArrayCreate__type,
  (void*) CmdArrayCreate__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdArrayCreate__write_etc, NULL, NULL,
  (void*) CmdArrayCreate__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdArrayCreate__to_cpp,
  (void*) CmdArrayCreate__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdArrayCreate__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdArrayCreate__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdArrayCreate__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdArrayCreate__to_cs, NULL, NULL,
  (void*) CmdArrayCreate__group_dynamic_methods, NULL, NULL,
  (void*) CmdArrayCreate__to_java,
  (void*) CmdArrayCreate__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdArrayCreate__to_String, NULL,
  (void*) CmdLiteralChar__type,
  (void*) CmdTerm__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLiteralChar__write_etc, NULL, NULL,
  (void*) CmdLiteralChar__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLiteralChar__to_cpp,
  (void*) CmdTerm__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLiteralChar__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLiteralChar__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLiteralChar__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) CmdLiteralChar__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdLiteralChar__to_String, NULL,
  (void*) CmdCastToChar__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdCastToChar__statement_to_java,
  (void*) CmdCastToChar__write_etc, NULL, NULL,
  (void*) CmdCastToChar__create_duplicate, NULL,
  (void*) CmdCastToChar__statement_to_cpp, NULL, NULL,
  (void*) CmdCastToChar__to_cpp,
  (void*) CmdPrimitiveCast__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCastToChar__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCastToChar__optimize, NULL, NULL, NULL,
  (void*) CmdCastToChar__init_object,
  (void*) CmdCastToChar__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCastToChar__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCastToChar__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagFile__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagFile__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) SlagFile__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Object_and_Object__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Object_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) HashTableMappingReader_of_Object_and_Object__read, NULL,
  (void*) HashTableMappingReader_of_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) PriorSlagError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) PriorSlagError__init_object, NULL,
  (void*) Error__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) PriorSlagError__to_String, NULL, NULL, NULL,
  (void*) ParameterInfo__x_name, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ParameterInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ParameterInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ParameterInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ParameterInfo__to_String, NULL,
  (void*) CmdMemberVarRead__type,
  (void*) CmdMemberVarAccess__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCompoundPropertyRead__write_etc, NULL, NULL,
  (void*) CmdCompoundPropertyRead__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCompoundPropertyRead__to_cpp,
  (void*) CmdCompoundPropertyRead__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdMemberVarAccess__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCompoundPropertyRead__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCompoundPropertyRead__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCompoundPropertyRead__to_cs, NULL, NULL,
  (void*) CmdMemberVarAccess__group_dynamic_methods, NULL, NULL,
  (void*) CmdCompoundPropertyRead__to_java,
  (void*) CmdMemberVarAccess__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdCompoundPropertyRead__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdContingentControl__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdNecessary__write_etc, NULL, NULL,
  (void*) CmdNecessary__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdNecessary__to_cpp,
  (void*) CmdContingentControl__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdContingentControl__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdNecessary__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdNecessary__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdNecessary__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdNecessary__to_java,
  (void*) CmdContingentControl__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdContingentControl__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StringTriplet__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) StringTriplet__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) StringTriplet__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TypeTemplate__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) TypeTemplate__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_TypeTemplate__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_TypeTemplate__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_TypeTemplate__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) FileNotFoundError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) FileNotFoundError__init_object, NULL,
  (void*) FileNotFoundError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL,
  (void*) CmdLiteralLogical__type,
  (void*) CmdTerm__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLiteralLogical__write_etc, NULL, NULL,
  (void*) CmdLiteralLogical__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLiteralLogical__to_cpp,
  (void*) CmdTerm__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdTerm__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLiteralLogical__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLiteralLogical__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLiteralLogical__to_cs, NULL, NULL,
  (void*) CmdTerm__group_dynamic_methods, NULL, NULL,
  (void*) CmdLiteralLogical__to_java,
  (void*) CmdTerm__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdLiteralLogical__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdElseIf__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdElseIf__write_etc, NULL, NULL,
  (void*) CmdElseIf__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdElseIf__to_cpp,
  (void*) CmdElseIf__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdElseIf__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdElseIf__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdElseIf__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdElseIf__to_cs, NULL, NULL,
  (void*) CmdElseIf__group_dynamic_methods, NULL, NULL,
  (void*) CmdElseIf__to_java,
  (void*) CmdElseIf__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdElseIf__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CompilerError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CompilerError__init_object, NULL,
  (void*) Error__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpIsNot__write_etc, NULL, NULL,
  (void*) CmdCmpIsNot__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCmpIsNot__to_cpp,
  (void*) CmdCmpIsNot__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpIsNot__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCmpIsNot__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCmpIsNot__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCmpIsNot__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_TypeInfo__create_duplicate, NULL, NULL,
  (void*) ArrayReader_of_TypeInfo__to_List,
  (void*) ArrayReader_of_TypeInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_TypeInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_TypeInfo__remaining,
  (void*) ArrayReader_of_TypeInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_TypeInfo__read, NULL,
  (void*) ArrayReader_of_TypeInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) RandomNumberGenerator__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) RandomNumberGenerator__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) RandomNumberGenerator__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdCastToLogical__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdCastToLogical__statement_to_java,
  (void*) CmdCastToLogical__write_etc, NULL, NULL,
  (void*) CmdCastToLogical__create_duplicate, NULL,
  (void*) CmdCastToLogical__statement_to_cpp, NULL, NULL,
  (void*) CmdCastToLogical__to_cpp,
  (void*) CmdPrimitiveCast__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCastToLogical__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCastToLogical__optimize, NULL, NULL, NULL,
  (void*) CmdCastToLogical__init_object,
  (void*) CmdCastToLogical__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCastToLogical__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCastToLogical__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL,
  (void*) CmdLocalVarRead__type,
  (void*) CmdLocalVarRead__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLocalVarRead__write_etc, NULL, NULL,
  (void*) CmdLocalVarRead__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLocalVarRead__to_cpp,
  (void*) CmdLocalVarAccess__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdLocalVarRead__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLocalVarRead__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLocalVarRead__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLocalVarRead__to_cs, NULL, NULL,
  (void*) CmdLocalVarAccess__group_dynamic_methods, NULL, NULL,
  (void*) CmdLocalVarRead__to_java,
  (void*) CmdLocalVarAccess__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdLocalVarRead__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CSWriter__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CSWriter__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__write_etc, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_cpp,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__optimize, NULL, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) KeywordPairing__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) KeywordPairing__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_KeywordPairing__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_KeywordPairing__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_KeywordPairing__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) UnsupportedMethodError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) UnsupportedMethodError__init_object, NULL,
  (void*) UnsupportedMethodError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdExplicitListLiteral__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdExplicitListLiteral__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdExplicitListLiteral__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdExplicitListLiteral__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStructure__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdForEachInWithRemoveCurrent__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdForEachInWithRemoveCurrent__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStructure__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdForEachInWithRemoveCurrent__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdForEachInWithRemoveCurrent__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStructure__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStructure__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStructure__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__write_etc, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__write_etc, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdThisPropertyDecrement__to_cpp,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdThisPropertyDecrement__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdThisPropertyDecrement__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdThisPropertyDecrement__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) CmdThisPropertyDecrement__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Range_of_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Range_of_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) Range_of_Int32__create_reader, NULL, NULL,
  (void*) Range_of_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) RangeGE_of_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) RangeGE_of_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code,
  (void*) RangeGE_of_Int32__create_reader, NULL, NULL,
  (void*) Range_of_Int32__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__write_etc, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__optimize, NULL, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) CoerceReader_of_MethodGroup__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_MethodGroup__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_MethodGroup__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) CoerceReader_of_MethodGroup__read, NULL,
  (void*) CoerceReader_of_MethodGroup__to_String, NULL,
  (void*) CmdUnary__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdAccessIndex__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdAccessIndex__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdAccessIndex__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdAccessIndex__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdUnderlyingCall__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdUnderlyingCall__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStatement__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdUnderlyingCall__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdUnderlyingCall__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdCast__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) CmdWideningCast__statement_to_java,
  (void*) CmdWideningCast__write_etc, NULL, NULL,
  (void*) CmdWideningCast__create_duplicate, NULL,
  (void*) CmdWideningCast__statement_to_cpp, NULL, NULL,
  (void*) CmdWideningCast__to_cpp,
  (void*) CmdWideningCast__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdWideningCast__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdWideningCast__init_object,
  (void*) CmdWideningCast__statement_to_cs,
  (void*) Object__init,
  (void*) CmdWideningCast__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdWideningCast__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdCast__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_StackTraceInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_StackTraceInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Array_of_StackTraceInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SignalHandlerManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SignalHandlerManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLazyAnd__write_etc, NULL, NULL,
  (void*) CmdLazyAnd__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLazyAnd__to_cpp,
  (void*) CmdLazyAnd__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLazyAnd__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdLazyAnd__optimize, NULL, NULL, NULL,
  (void*) CmdLazyAnd__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLazyAnd__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdLazyAnd__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdLocalVarDeclaration__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdLocalVarDeclaration__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLocalVarDeclaration__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLocalVarDeclaration__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdLazyOr__write_etc, NULL, NULL,
  (void*) CmdLazyOr__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLazyOr__to_cpp,
  (void*) CmdLazyOr__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLazyOr__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdLazyOr__optimize, NULL, NULL, NULL,
  (void*) CmdLazyOr__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLazyOr__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdLazyOr__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdAssignZeroValue__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdAssignZeroValue__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdAssignZeroValue__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdAssignZeroValue__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_cpp,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__optimize, NULL, NULL, NULL,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_cpp,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdSub__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__optimize, NULL, NULL, NULL,
  (void*) CmdSub__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Stopwatch__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Stopwatch__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Stopwatch__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) LiteralLogical__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) LiteralLogical__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods,
  (void*) LiteralLogical__as_Logical,
  (void*) LiteralLogical__require_logical,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Object_and_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Object_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) HashTableMappingReader_of_Object_and_Int32__read, NULL,
  (void*) HashTableMappingReader_of_Object_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) RangeIteratorAscending_of_Int32__create_duplicate, NULL, NULL, NULL,
  (void*) RangeIteratorAscending_of_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) RangeIteratorAscending_of_Int32__type_name, NULL, NULL, NULL, NULL,
  (void*) RangeIteratorAscending_of_Int32__read, NULL,
  (void*) RangeIteratorAscending_of_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) RangeIteratorAscending_of_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Enum_of_Qualifiers__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Enum_of_Qualifiers__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) DelegateMaker__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) DelegateMaker__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_Int32_and_Int32__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_cpp,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdMul__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdMul__optimize, NULL, NULL, NULL,
  (void*) CmdMul__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__remaining,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__read, NULL,
  (void*) ArrayReader_of_Mapping_of_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__remaining,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__write_etc, NULL, NULL,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_cpp,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdDiv__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdDiv__optimize, NULL, NULL, NULL,
  (void*) CmdDiv__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__remaining,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__read, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdCatch__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdCatch__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdCatch__remaining,
  (void*) ArrayReader_of_CmdCatch__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_CmdCatch__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_PropertyInfo__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_PropertyInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_PropertyInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_PropertyInfo__remaining,
  (void*) ArrayReverseReader_of_PropertyInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReverseReader_of_PropertyInfo__read, NULL,
  (void*) ArrayReader_of_PropertyInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_StructureType__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_StructureType__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_StructureType__init_object, NULL,
  (void*) ArrayList_of_StructureType__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_StructureType__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__write_etc, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCmpLE__to_cpp,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpLE__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__optimize, NULL, NULL, NULL,
  (void*) CmdCmpLE__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCmpLE__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCmpLE__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL,
  (void*) CmdUnary__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdNegate__write_etc, NULL, NULL,
  (void*) CmdNegate__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdNegate__to_cpp,
  (void*) CmdNegate__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdNegate__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdNegate__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdNegate__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdNegate__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__write_etc, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_cpp,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdOr__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__optimize, NULL, NULL, NULL,
  (void*) CmdOr__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SpecializedComparator_2189__a_before_b__MethodInfo_MethodInfo, NULL, NULL,
  (void*) SpecializedComparator_2189__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SpecializedComparator_2189__init_object, NULL,
  (void*) SpecializedComparator_2189__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_Object_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_Object_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) RadiansManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) RadiansManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatement__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdOpenScope__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdOpenScope__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStatement__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdOpenScope__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdOpenScope__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatement__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatement__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SignalDataArg__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SignalDataArg__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ListOf_of_MethodInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ListOf_of_MethodInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) CmdRange__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdRangeGE__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdRangeGE__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdRangeGE__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdRangeGE__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLocalVarModAndAssign__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLocalVarModAndAssign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLocalVarModAndAssign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdLocalVarModAndAssign__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdLocalVarModAndAssign__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__to_String, NULL,
  (void*) CmdCompare__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__write_etc, NULL, NULL,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCmpLT__to_cpp,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpLT__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__optimize, NULL, NULL, NULL,
  (void*) CmdCmpLT__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCmpLT__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCmpLT__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_Char__peek,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_Char__consume__Char,
  (void*) ArrayReverseReader_of_Char__create_duplicate, NULL, NULL,
  (void*) ArrayReader_of_Char__to_List,
  (void*) ArrayReverseReader_of_Char__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_Char__type_name, NULL, NULL, NULL,
  (void*) ArrayReverseReader_of_Char__read, NULL,
  (void*) ArrayReverseReader_of_Char__remaining,
  (void*) ArrayReverseReader_of_Char__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_Char__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL,
  (void*) FileReader__consume__Char,
  (void*) Object__create_duplicate, NULL, NULL,
  (void*) FileReader__to_List,
  (void*)(SlagLogical(*)(SXCRef)) FileReader__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) FileReader__type_name, NULL, NULL, NULL,
  (void*)(SlagChar(*)(SXCRef)) FileReader__read, NULL, NULL,
  (void*) FileReader__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) FileReader__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__write_etc, NULL, NULL,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdRightShifted__to_cpp,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdRightShifted__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__optimize, NULL, NULL, NULL,
  (void*) CmdRightShifted__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdRightShifted__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdRightShifted__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CallStackLimitReached__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CallStackLimitReached__init_object, NULL,
  (void*) Error__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) DivideByZeroError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) DivideByZeroError__init_object, NULL,
  (void*) DivideByZeroError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Object_and_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Object_and_Int32__read, NULL,
  (void*) HashTableValueReader_of_Object_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableValueReader_of_Object_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__remaining,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__read, NULL,
  (void*) ArrayReader_of_HashTableBin_of_Int32_and_Object__to_String, NULL,
  (void*) CmdMemberVarRead__type,
  (void*) CmdMemberVarAccess__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdPropertyRead__write_etc, NULL, NULL,
  (void*) CmdPropertyRead__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdPropertyRead__to_cpp,
  (void*) CmdPropertyRead__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdMemberVarAccess__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdPropertyRead__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdPropertyRead__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdPropertyRead__to_cs, NULL, NULL,
  (void*) CmdMemberVarAccess__group_dynamic_methods, NULL, NULL,
  (void*) CmdPropertyRead__to_java,
  (void*) CmdMemberVarAccess__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdPropertyRead__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) LineReader__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) LineReader__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) LineReader__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) LineReader__read, NULL,
  (void*) LineReader__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL,
  (void*) CoerceReader_of_TypeInfo__to_List,
  (void*) CoerceReader_of_TypeInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_TypeInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_TypeInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) CoerceReader_of_TypeInfo__read, NULL,
  (void*) CoerceReader_of_TypeInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_MethodGroup__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_MethodGroup__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_MethodGroup__to_String, NULL,
  (void*) CmdRange__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdRangeGT__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdRangeGT__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdRangeGT__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdRangeGT__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ControlStructureInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ControlStructureInfo__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ControlStructureInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_ControlStructureInfo__init_object, NULL,
  (void*) ArrayList_of_ControlStructureInfo__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_ControlStructureInfo__to_String,
  (void*) ArrayList_of_ControlStructureInfo__modification_count,
  (void*) Cmd__type,
  (void*) CmdCatch__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCatch__write_etc, NULL, NULL,
  (void*) CmdCatch__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCatch__to_cpp,
  (void*) CmdCatch__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdCatch__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCatch__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCatch__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCatch__to_cs, NULL, NULL,
  (void*) CmdCatch__group_dynamic_methods, NULL, NULL,
  (void*) CmdCatch__to_java,
  (void*) CmdCatch__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CategoryInfo__create_duplicate, NULL, NULL, NULL,
  (void*) ArrayReader_of_CategoryInfo__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CategoryInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_CategoryInfo__remaining,
  (void*) ArrayReader_of_CategoryInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) ArrayReader_of_CategoryInfo__read, NULL,
  (void*) ArrayReader_of_CategoryInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ObjectManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ObjectManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ControlStructureInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ControlStructureInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_StackTraceInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_StackTraceInfo__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_StackTraceInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_StackTraceInfo__init_object, NULL,
  (void*) ArrayList_of_StackTraceInfo__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_StackTraceInfo__to_String,
  (void*) ArrayList_of_StackTraceInfo__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__count, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__init_object, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__to_String,
  (void*) ArrayList_of_Mapping_of_Object_and_Object__modification_count, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBin_of_Object_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBin_of_Object_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBin_of_Object_and_Object__to_String, NULL,
  (void*) CmdUnary__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdNot__write_etc, NULL, NULL,
  (void*) CmdLogicalNot__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdLogicalNot__to_cpp,
  (void*) CmdLogicalNot__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLogicalNot__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdLogicalNot__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdNot__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdNot__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL,
  (void*) CmdBinary__type,
  (void*) CmdBinary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__write_etc, NULL, NULL,
  (void*) CmdLogicalXor__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cpp,
  (void*) CmdLogicalXor__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdBinary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdLogicalXor__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__optimize, NULL, NULL, NULL,
  (void*) CmdLogicalXor__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_cs, NULL, NULL,
  (void*) CmdBinary__group_dynamic_methods, NULL, NULL,
  (void*) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__to_java,
  (void*) CmdBinary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdBinary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_SlagError__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_SlagError__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_SlagError__remaining,
  (void*) ArrayReader_of_SlagError__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_SlagError__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagParser__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagParser__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdFormattedString__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdFormattedString__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdFormattedString__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdFormattedString__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) CoerceReader_of_Int32__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_Int32__type_name, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_Int32__read, NULL,
  (void*) CoerceReader_of_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CoerceReader_of_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CompareFn_of_MethodInfo_and_a_of___a_before_b__MethodInfo_MethodInfo, NULL, NULL,
  (void*) CompareFn_of_MethodInfo_and_a_of___type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CompareFn_of_MethodInfo_and_a_of___init_object, NULL,
  (void*) CompareFn_of_MethodInfo_and_a_of___init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_MethodInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_MethodInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_MethodInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) CoerceReader_of_Cmd__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_Cmd__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) CoerceReader_of_Cmd__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) CoerceReader_of_Cmd__read, NULL,
  (void*) CoerceReader_of_Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_LocalVarInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_LocalVarInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_LocalVarInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ConcurrentModificationError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ConcurrentModificationError__init_object, NULL,
  (void*) ConcurrentModificationError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStatementWithOperand__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__write_etc, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdThisPropertyAddAndAssign__to_cpp,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdThisPropertyAddAndAssign__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdThisPropertyAddAndAssign__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdThisPropertyAddAndAssign__to_cs, NULL, NULL,
  (void*) CmdStatementWithOperand__group_dynamic_methods, NULL, NULL,
  (void*) CmdThisPropertyAddAndAssign__to_java,
  (void*) CmdStatementWithOperand__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__to_String, NULL,
  (void*) CmdCmpIsNull__type,
  (void*) CmdUnary__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) CmdCmpIsNull__write_etc, NULL, NULL,
  (void*) CmdCmpIsNull__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) CmdCmpIsNull__to_cpp,
  (void*) CmdCmpIsNull__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdUnary__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdCmpIsNull__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdCmpIsNull__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) CmdCmpIsNull__to_cs, NULL, NULL,
  (void*) CmdUnary__group_dynamic_methods, NULL, NULL,
  (void*) CmdCmpIsNull__to_java,
  (void*) CmdUnary__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdUnary__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBin_of_Object_and_Int32__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableBin_of_Object_and_Int32__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) HashTableBin_of_Object_and_Int32__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) InvalidOperandError__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) InvalidOperandError__init_object, NULL,
  (void*) InvalidOperandError__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Exception__to_String, NULL,
  (void*) Cmd__type,
  (void*) CmdStructure__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdForEachIn__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdForEachIn__resolve, NULL, NULL, NULL, NULL,
  (void*) CmdStructure__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdForEachIn__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdForEachIn__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) CmdStructure__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) CmdStructure__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) CmdStructure__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagParserManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) SlagParserManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) Object__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) Cmd__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) InlineClassPropertyDeclaration__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) InlineClassPropertyDeclaration__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Int32_and_Object__has_another, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Int32_and_Object__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) HashTableMappingReader_of_Int32_and_Object__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL,
  (void*) HashTableMappingReader_of_Int32_and_Object__read, NULL,
  (void*) HashTableMappingReader_of_Int32_and_Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_StackTraceInfo__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_StackTraceInfo__type_name, NULL, NULL, NULL, NULL, NULL,
  (void*) ArrayReader_of_StackTraceInfo__remaining,
  (void*) ArrayReader_of_StackTraceInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) ArrayReader_of_StackTraceInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_PropertyInfo__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_PropertyInfo__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Mapping_of_String_and_PropertyInfo__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Enum_of_StructureType__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Enum_of_StructureType__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ParsePosManager__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) ParsePosManager__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__opEQ__Object, NULL, NULL, NULL, NULL, NULL,
  (void*) Object__create_duplicate, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Errors__type_name, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*) Errors__init_object, NULL,
  (void*) Object__init, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Object__to_String, NULL,
  (void*) Cmd__type,
  (void*) Cmd__to_inline__CmdList, NULL, NULL,
  (void*) Object__opEQ__Object, NULL,
  (void*) Cmd__statement_to_java,
  (void*) Cmd__write_etc, NULL, NULL,
  (void*) CmdImplicitListLiteral__create_duplicate, NULL,
  (void*) Cmd__statement_to_cpp, NULL, NULL,
  (void*) Cmd__to_cpp,
  (void*) CmdImplicitListLiteral__resolve, NULL, NULL, NULL, NULL,
  (void*) Cmd__finalize_structure_info, NULL, NULL, NULL,
  (void*) CmdImplicitListLiteral__type_name, NULL,
  (void*) Cmd__is_statement_list,
  (void*) Cmd__optimize, NULL, NULL, NULL,
  (void*) CmdImplicitListLiteral__init_object,
  (void*) Cmd__statement_to_cs,
  (void*) Object__init,
  (void*) Cmd__to_cs, NULL, NULL,
  (void*) Cmd__group_dynamic_methods, NULL, NULL,
  (void*) Cmd__to_java,
  (void*) Cmd__finalize_calls,
  (void*)(SlagInt32(*)(SXCRef)) Object__hash_code, NULL, NULL, NULL,
  (void*) Cmd__to_String, NULL
};

void sxc_configure()
{
  sxc_main_class = &type_ClassSlagCompiler;

  int* type_table = sxc_base_type_index_table;
  type_AspectReader_of_Qualifiers.set_base_types(type_table,0);
  type_ClassObject.dispatch_table = sxc_dispatch_table+0;
  type_ClassWeakReference.set_base_types(type_table,1);
  type_ClassWeakReference.method_init_object = (SlagFn) WeakReference__init_object;
  type_ClassWeakReference.dispatch_table = sxc_dispatch_table+49;
  type_ClassWeak_of_SignalListener.set_property_info( sxc_property_info, 0, 1 );
  type_ClassWeak_of_SignalListener.set_base_types(type_table,3);
  type_ClassWeak_of_SignalListener.method_init_object = (SlagFn) Weak_of_SignalListener__init_object;
  type_ClassWeak_of_SignalListener.dispatch_table = sxc_dispatch_table+98;
  type_AspectReadable_of_Byte.set_base_types(type_table,4);
  type_CompoundParsePos.set_property_info( sxc_property_info, 2, 2 );
  type_AspectReadable_of_Char.set_base_types(type_table,5);
  type_ClassString.set_base_types(type_table,6);
  type_ClassString.method_init_object = (SlagFn) String__init_object;
  type_ClassString.dispatch_table = sxc_dispatch_table+147;
  type_ClassToken.set_property_info( sxc_property_info, 6, 4 );
  type_ClassToken.set_base_types(type_table,11);
  type_ClassToken.method_init_object = (SlagFn) Token__init_object;
  type_ClassToken.dispatch_table = sxc_dispatch_table+196;
  type_ClassCmd.set_property_info( sxc_property_info, 14, 1 );
  type_ClassCmd.set_base_types(type_table,12);
  type_ClassCmd.method_init_object = (SlagFn) Cmd__init_object;
  type_ClassCmd.dispatch_table = sxc_dispatch_table+245;
  type_ClassCmdBinary.set_property_info( sxc_property_info, 16, 3 );
  type_ClassCmdBinary.set_base_types(type_table,13);
  type_ClassCmdBinary.method_init_object = (SlagFn) CmdBinary__init_object;
  type_ClassCmdBinary.dispatch_table = sxc_dispatch_table+294;
  type_ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted.set_property_info( sxc_property_info, 22, 3 );
  type_ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted.set_base_types(type_table,15);
  type_ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted.method_init_object = (SlagFn) CmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted__init_object;
  type_ClassCmdBitwiseMovement_of_CmdLeftShifted_and_left_shifted_and_cmd_left_shifted.dispatch_table = sxc_dispatch_table+343;
  type_ClassCmdLeftShifted.set_property_info( sxc_property_info, 28, 3 );
  type_ClassCmdLeftShifted.set_base_types(type_table,18);
  type_ClassCmdLeftShifted.method_init_object = (SlagFn) CmdLeftShifted__init_object;
  type_ClassCmdLeftShifted.dispatch_table = sxc_dispatch_table+392;
  type_ClassGenericArray.set_base_types(type_table,22);
  type_ClassGenericArray.method_init_object = (SlagFn) GenericArray__init_object;
  type_ClassGenericArray.dispatch_table = sxc_dispatch_table+441;
  type_ClassArray_of_BigInt.set_base_types(type_table,23);
  type_ClassArray_of_BigInt.element_size = sizeof(SlagObject*);
  type_ClassArray_of_BigInt.method_init_object = (SlagFn) Array_of_BigInt__init_object;
  type_ClassArray_of_BigInt.dispatch_table = sxc_dispatch_table+490;
  type_AspectReadable_of_BigInt.set_base_types(type_table,25);
  type_AspectList_of_BigInt.set_base_types(type_table,26);
  type_AspectListOperations_of_BigInt_and_ArrayList_of_BigInt.set_base_types(type_table,30);
  type_ClassArrayList_of_BigInt.set_property_info( sxc_property_info, 34, 3 );
  type_ClassArrayList_of_BigInt.set_base_types(type_table,35);
  type_ClassArrayList_of_BigInt.method_init_object = (SlagFn) ArrayList_of_BigInt__init_object;
  type_ClassArrayList_of_BigInt.dispatch_table = sxc_dispatch_table+539;
  type_ClassArray_of_HashTableBin_of_Object_and_Object.set_base_types(type_table,42);
  type_ClassArray_of_HashTableBin_of_Object_and_Object.element_size = sizeof(SlagObject*);
  type_ClassArray_of_HashTableBin_of_Object_and_Object.method_init_object = (SlagFn) Array_of_HashTableBin_of_Object_and_Object__init_object;
  type_ClassArray_of_HashTableBin_of_Object_and_Object.dispatch_table = sxc_dispatch_table+588;
  type_AspectReadable_of_HashTableBin_of_Object_and_Object.set_base_types(type_table,44);
  type_AspectList_of_HashTableBin_of_Object_and_Object.set_base_types(type_table,45);
  type_AspectListOperations_of_HashTableBin_of_Object_and_Object_and_ArrayList_of_HashTableBin_of_Object_and_Object.set_base_types(type_table,49);
  type_ClassArrayList_of_HashTableBin_of_Object_and_Object.set_property_info( sxc_property_info, 40, 3 );
  type_ClassArrayList_of_HashTableBin_of_Object_and_Object.set_base_types(type_table,54);
  type_ClassArrayList_of_HashTableBin_of_Object_and_Object.method_init_object = (SlagFn) ArrayList_of_HashTableBin_of_Object_and_Object__init_object;
  type_ClassArrayList_of_HashTableBin_of_Object_and_Object.dispatch_table = sxc_dispatch_table+637;
  type_ClassGenericHashTable_of_Object_and_Object.set_property_info( sxc_property_info, 46, 6 );
  type_ClassGenericHashTable_of_Object_and_Object.set_base_types(type_table,61);
  type_ClassGenericHashTable_of_Object_and_Object.method_init_object = (SlagFn) GenericHashTable_of_Object_and_Object__init_object;
  type_ClassGenericHashTable_of_Object_and_Object.dispatch_table = sxc_dispatch_table+686;
  type_AspectReadable_of_MethodInfo__.set_base_types(type_table,62);
  type_ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object.set_property_info( sxc_property_info, 58, 1 );
  type_ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object.set_base_types(type_table,63);
  type_ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_MethodInfo___and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_MethodInfo___and_Object_and_Object.dispatch_table = sxc_dispatch_table+735;
  type_ClassHashTable_of_String_and_MethodInfo__.set_property_info( sxc_property_info, 60, 1 );
  type_ClassHashTable_of_String_and_MethodInfo__.set_base_types(type_table,66);
  type_ClassHashTable_of_String_and_MethodInfo__.method_init_object = (SlagFn) HashTable_of_String_and_MethodInfo____init_object;
  type_ClassHashTable_of_String_and_MethodInfo__.dispatch_table = sxc_dispatch_table+784;
  type_ClassMethodTable.set_property_info( sxc_property_info, 62, 1 );
  type_ClassMethodTable.set_base_types(type_table,70);
  type_ClassMethodTable.method_init_object = (SlagFn) MethodTable__init_object;
  type_ClassMethodTable.dispatch_table = sxc_dispatch_table+833;
  type_ClassArray_of_Int64.set_base_types(type_table,75);
  type_ClassArray_of_Int64.element_size = sizeof(SlagInt64);
  type_ClassArray_of_Int64.method_init_object = (SlagFn) Array_of_Int64__init_object;
  type_ClassArray_of_Int64.dispatch_table = sxc_dispatch_table+882;
  type_ClassSystem.set_property_info( sxc_property_info, 64, 2 );
  type_ClassSystem.set_base_types(type_table,77);
  type_ClassSystem.method_init_object = (SlagFn) System__init_object;
  type_ClassSystem.dispatch_table = sxc_dispatch_table+931;
  type_ClassArray_of_Cmd.set_base_types(type_table,78);
  type_ClassArray_of_Cmd.element_size = sizeof(SlagObject*);
  type_ClassArray_of_Cmd.method_init_object = (SlagFn) Array_of_Cmd__init_object;
  type_ClassArray_of_Cmd.dispatch_table = sxc_dispatch_table+980;
  type_AspectReadable_of_Cmd.set_base_types(type_table,80);
  type_AspectList_of_Cmd.set_base_types(type_table,81);
  type_AspectListOperations_of_Cmd_and_ArrayList_of_Cmd.set_base_types(type_table,85);
  type_ClassArrayList_of_Cmd.set_property_info( sxc_property_info, 68, 3 );
  type_ClassArrayList_of_Cmd.set_base_types(type_table,90);
  type_ClassArrayList_of_Cmd.method_init_object = (SlagFn) ArrayList_of_Cmd__init_object;
  type_ClassArrayList_of_Cmd.dispatch_table = sxc_dispatch_table+1029;
  type_ClassCmdStatementList.set_property_info( sxc_property_info, 74, 2 );
  type_ClassCmdStatementList.set_base_types(type_table,97);
  type_ClassCmdStatementList.method_init_object = (SlagFn) CmdStatementList__init_object;
  type_ClassCmdStatementList.dispatch_table = sxc_dispatch_table+1078;
  type_ClassQualifiers.set_property_info( sxc_property_info, 78, 3 );
  type_ClassQualifiers.set_base_types(type_table,99);
  type_ClassQualifiers.method_init_object = (SlagFn) Qualifiers__init_object;
  type_ClassQualifiers.dispatch_table = sxc_dispatch_table+1127;
  type_ClassArray_of_ArrayList_of_Token.set_base_types(type_table,102);
  type_ClassArray_of_ArrayList_of_Token.element_size = sizeof(SlagObject*);
  type_ClassArray_of_ArrayList_of_Token.method_init_object = (SlagFn) Array_of_ArrayList_of_Token__init_object;
  type_ClassArray_of_ArrayList_of_Token.dispatch_table = sxc_dispatch_table+1176;
  type_AspectReadable_of_ArrayList_of_Token.set_base_types(type_table,104);
  type_AspectList_of_ArrayList_of_Token.set_base_types(type_table,105);
  type_AspectListOperations_of_ArrayList_of_Token_and_ArrayList_of_ArrayList_of_Token.set_base_types(type_table,109);
  type_ClassArrayList_of_ArrayList_of_Token.set_property_info( sxc_property_info, 84, 3 );
  type_ClassArrayList_of_ArrayList_of_Token.set_base_types(type_table,114);
  type_ClassArrayList_of_ArrayList_of_Token.method_init_object = (SlagFn) ArrayList_of_ArrayList_of_Token__init_object;
  type_ClassArrayList_of_ArrayList_of_Token.dispatch_table = sxc_dispatch_table+1225;
  type_ClassArray_of_TypeInfo.set_base_types(type_table,121);
  type_ClassArray_of_TypeInfo.element_size = sizeof(SlagObject*);
  type_ClassArray_of_TypeInfo.method_init_object = (SlagFn) Array_of_TypeInfo__init_object;
  type_ClassArray_of_TypeInfo.dispatch_table = sxc_dispatch_table+1274;
  type_AspectReadable_of_TypeInfo.set_base_types(type_table,123);
  type_AspectList_of_TypeInfo.set_base_types(type_table,124);
  type_AspectListOperations_of_TypeInfo_and_ArrayList_of_TypeInfo.set_base_types(type_table,128);
  type_ClassArrayList_of_TypeInfo.set_property_info( sxc_property_info, 90, 3 );
  type_ClassArrayList_of_TypeInfo.set_base_types(type_table,133);
  type_ClassArrayList_of_TypeInfo.method_init_object = (SlagFn) ArrayList_of_TypeInfo__init_object;
  type_ClassArrayList_of_TypeInfo.dispatch_table = sxc_dispatch_table+1323;
  type_ClassArray_of_MethodInfo.set_base_types(type_table,140);
  type_ClassArray_of_MethodInfo.element_size = sizeof(SlagObject*);
  type_ClassArray_of_MethodInfo.method_init_object = (SlagFn) Array_of_MethodInfo__init_object;
  type_ClassArray_of_MethodInfo.dispatch_table = sxc_dispatch_table+1372;
  type_AspectReadable_of_MethodInfo.set_base_types(type_table,142);
  type_AspectList_of_MethodInfo.set_base_types(type_table,143);
  type_AspectListOperations_of_MethodInfo_and_ArrayList_of_MethodInfo.set_base_types(type_table,147);
  type_ClassArrayList_of_MethodInfo.set_property_info( sxc_property_info, 96, 3 );
  type_ClassArrayList_of_MethodInfo.set_base_types(type_table,152);
  type_ClassArrayList_of_MethodInfo.method_init_object = (SlagFn) ArrayList_of_MethodInfo__init_object;
  type_ClassArrayList_of_MethodInfo.dispatch_table = sxc_dispatch_table+1421;
  type_ClassArray_of_PropertyInfo.set_base_types(type_table,159);
  type_ClassArray_of_PropertyInfo.element_size = sizeof(SlagObject*);
  type_ClassArray_of_PropertyInfo.method_init_object = (SlagFn) Array_of_PropertyInfo__init_object;
  type_ClassArray_of_PropertyInfo.dispatch_table = sxc_dispatch_table+1470;
  type_AspectReadable_of_PropertyInfo.set_base_types(type_table,161);
  type_AspectList_of_PropertyInfo.set_base_types(type_table,162);
  type_AspectListOperations_of_PropertyInfo_and_ArrayList_of_PropertyInfo.set_base_types(type_table,166);
  type_ClassArrayList_of_PropertyInfo.set_property_info( sxc_property_info, 102, 3 );
  type_ClassArrayList_of_PropertyInfo.set_base_types(type_table,171);
  type_ClassArrayList_of_PropertyInfo.method_init_object = (SlagFn) ArrayList_of_PropertyInfo__init_object;
  type_ClassArrayList_of_PropertyInfo.dispatch_table = sxc_dispatch_table+1519;
  type_ClassArray_of_CategoryInfo.set_base_types(type_table,178);
  type_ClassArray_of_CategoryInfo.element_size = sizeof(SlagObject*);
  type_ClassArray_of_CategoryInfo.method_init_object = (SlagFn) Array_of_CategoryInfo__init_object;
  type_ClassArray_of_CategoryInfo.dispatch_table = sxc_dispatch_table+1568;
  type_AspectReadable_of_CategoryInfo.set_base_types(type_table,180);
  type_AspectList_of_CategoryInfo.set_base_types(type_table,181);
  type_AspectListOperations_of_CategoryInfo_and_ArrayList_of_CategoryInfo.set_base_types(type_table,185);
  type_ClassArrayList_of_CategoryInfo.set_property_info( sxc_property_info, 108, 3 );
  type_ClassArrayList_of_CategoryInfo.set_base_types(type_table,190);
  type_ClassArrayList_of_CategoryInfo.method_init_object = (SlagFn) ArrayList_of_CategoryInfo__init_object;
  type_ClassArrayList_of_CategoryInfo.dispatch_table = sxc_dispatch_table+1617;
  type_ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object.set_property_info( sxc_property_info, 114, 1 );
  type_ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object.set_base_types(type_table,197);
  type_ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_PropertyInfo_and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_PropertyInfo_and_Object_and_Object.dispatch_table = sxc_dispatch_table+1666;
  type_ClassHashTable_of_String_and_PropertyInfo.set_property_info( sxc_property_info, 116, 1 );
  type_ClassHashTable_of_String_and_PropertyInfo.set_base_types(type_table,200);
  type_ClassHashTable_of_String_and_PropertyInfo.method_init_object = (SlagFn) HashTable_of_String_and_PropertyInfo__init_object;
  type_ClassHashTable_of_String_and_PropertyInfo.dispatch_table = sxc_dispatch_table+1715;
  type_ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object.set_property_info( sxc_property_info, 118, 1 );
  type_ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object.set_base_types(type_table,204);
  type_ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_MethodInfo_and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_MethodInfo_and_Object_and_Object.dispatch_table = sxc_dispatch_table+1764;
  type_ClassHashTable_of_String_and_MethodInfo.set_property_info( sxc_property_info, 120, 1 );
  type_ClassHashTable_of_String_and_MethodInfo.set_base_types(type_table,207);
  type_ClassHashTable_of_String_and_MethodInfo.method_init_object = (SlagFn) HashTable_of_String_and_MethodInfo__init_object;
  type_ClassHashTable_of_String_and_MethodInfo.dispatch_table = sxc_dispatch_table+1813;
  type_ClassArray_of_TypeMapping.set_base_types(type_table,211);
  type_ClassArray_of_TypeMapping.element_size = sizeof(SlagObject*);
  type_ClassArray_of_TypeMapping.method_init_object = (SlagFn) Array_of_TypeMapping__init_object;
  type_ClassArray_of_TypeMapping.dispatch_table = sxc_dispatch_table+1862;
  type_AspectReadable_of_TypeMapping.set_base_types(type_table,213);
  type_AspectList_of_TypeMapping.set_base_types(type_table,214);
  type_AspectListOperations_of_TypeMapping_and_ArrayList_of_TypeMapping.set_base_types(type_table,218);
  type_ClassArrayList_of_TypeMapping.set_property_info( sxc_property_info, 122, 3 );
  type_ClassArrayList_of_TypeMapping.set_base_types(type_table,223);
  type_ClassArrayList_of_TypeMapping.method_init_object = (SlagFn) ArrayList_of_TypeMapping__init_object;
  type_ClassArrayList_of_TypeMapping.dispatch_table = sxc_dispatch_table+1911;
  type_ClassTypeInfo.set_property_info( sxc_property_info, 128, 42 );
  type_ClassTypeInfo.set_base_types(type_table,230);
  type_ClassTypeInfo.method_init_object = (SlagFn) TypeInfo__init_object;
  type_ClassTypeInfo.dispatch_table = sxc_dispatch_table+1960;
  type_ClassArray_of_ParameterInfo.set_base_types(type_table,231);
  type_ClassArray_of_ParameterInfo.element_size = sizeof(SlagObject*);
  type_ClassArray_of_ParameterInfo.method_init_object = (SlagFn) Array_of_ParameterInfo__init_object;
  type_ClassArray_of_ParameterInfo.dispatch_table = sxc_dispatch_table+2009;
  type_AspectReadable_of_ParameterInfo.set_base_types(type_table,233);
  type_AspectList_of_ParameterInfo.set_base_types(type_table,234);
  type_AspectListOperations_of_ParameterInfo_and_ArrayList_of_ParameterInfo.set_base_types(type_table,238);
  type_ClassArrayList_of_ParameterInfo.set_property_info( sxc_property_info, 212, 3 );
  type_ClassArrayList_of_ParameterInfo.set_base_types(type_table,243);
  type_ClassArrayList_of_ParameterInfo.method_init_object = (SlagFn) ArrayList_of_ParameterInfo__init_object;
  type_ClassArrayList_of_ParameterInfo.dispatch_table = sxc_dispatch_table+2058;
  type_AspectReadable_of_String.set_base_types(type_table,250);
  type_ClassHashTableBase_of_String_and_String_and_Object_and_Object.set_property_info( sxc_property_info, 218, 1 );
  type_ClassHashTableBase_of_String_and_String_and_Object_and_Object.set_base_types(type_table,251);
  type_ClassHashTableBase_of_String_and_String_and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_String_and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_String_and_Object_and_Object.dispatch_table = sxc_dispatch_table+2107;
  type_ClassHashTable_of_String_and_String.set_property_info( sxc_property_info, 220, 1 );
  type_ClassHashTable_of_String_and_String.set_base_types(type_table,254);
  type_ClassHashTable_of_String_and_String.method_init_object = (SlagFn) HashTable_of_String_and_String__init_object;
  type_ClassHashTable_of_String_and_String.dispatch_table = sxc_dispatch_table+2156;
  type_AspectSet_of_String.set_base_types(type_table,258);
  type_ClassHashSet_of_String.set_property_info( sxc_property_info, 222, 1 );
  type_ClassHashSet_of_String.set_base_types(type_table,260);
  type_ClassHashSet_of_String.method_init_object = (SlagFn) HashSet_of_String__init_object;
  type_ClassHashSet_of_String.dispatch_table = sxc_dispatch_table+2205;
  type_ClassMethodGroup.set_property_info( sxc_property_info, 224, 5 );
  type_ClassMethodGroup.set_base_types(type_table,266);
  type_ClassMethodGroup.method_init_object = (SlagFn) MethodGroup__init_object;
  type_ClassMethodGroup.dispatch_table = sxc_dispatch_table+2254;
  type_ClassArray_of_LocalVarInfo.set_base_types(type_table,267);
  type_ClassArray_of_LocalVarInfo.element_size = sizeof(SlagObject*);
  type_ClassArray_of_LocalVarInfo.method_init_object = (SlagFn) Array_of_LocalVarInfo__init_object;
  type_ClassArray_of_LocalVarInfo.dispatch_table = sxc_dispatch_table+2303;
  type_AspectReadable_of_LocalVarInfo.set_base_types(type_table,269);
  type_AspectList_of_LocalVarInfo.set_base_types(type_table,270);
  type_AspectListOperations_of_LocalVarInfo_and_ArrayList_of_LocalVarInfo.set_base_types(type_table,274);
  type_ClassArrayList_of_LocalVarInfo.set_property_info( sxc_property_info, 234, 3 );
  type_ClassArrayList_of_LocalVarInfo.set_base_types(type_table,279);
  type_ClassArrayList_of_LocalVarInfo.method_init_object = (SlagFn) ArrayList_of_LocalVarInfo__init_object;
  type_ClassArrayList_of_LocalVarInfo.dispatch_table = sxc_dispatch_table+2352;
  type_ClassMethodInfo.set_property_info( sxc_property_info, 240, 32 );
  type_ClassMethodInfo.set_base_types(type_table,286);
  type_ClassMethodInfo.method_init_object = (SlagFn) MethodInfo__init_object;
  type_ClassMethodInfo.dispatch_table = sxc_dispatch_table+2401;
  type_ClassGenericVarInfo.set_property_info( sxc_property_info, 304, 6 );
  type_ClassGenericVarInfo.set_base_types(type_table,287);
  type_ClassGenericVarInfo.method_init_object = (SlagFn) GenericVarInfo__init_object;
  type_ClassGenericVarInfo.dispatch_table = sxc_dispatch_table+2450;
  type_ClassMethodVarInfo.set_property_info( sxc_property_info, 316, 8 );
  type_ClassMethodVarInfo.set_base_types(type_table,288);
  type_ClassMethodVarInfo.method_init_object = (SlagFn) MethodVarInfo__init_object;
  type_ClassMethodVarInfo.dispatch_table = sxc_dispatch_table+2499;
  type_ClassLocalVarInfo.set_property_info( sxc_property_info, 332, 9 );
  type_ClassLocalVarInfo.set_base_types(type_table,290);
  type_ClassLocalVarInfo.method_init_object = (SlagFn) LocalVarInfo__init_object;
  type_ClassLocalVarInfo.dispatch_table = sxc_dispatch_table+2548;
  type_ClassCmdStructure.set_property_info( sxc_property_info, 350, 4 );
  type_ClassCmdStructure.set_base_types(type_table,293);
  type_ClassCmdStructure.method_init_object = (SlagFn) CmdStructure__init_object;
  type_ClassCmdStructure.dispatch_table = sxc_dispatch_table+2597;
  type_ClassCmdForEach.set_property_info( sxc_property_info, 358, 6 );
  type_ClassCmdForEach.set_base_types(type_table,295);
  type_ClassCmdForEach.method_init_object = (SlagFn) CmdForEach__init_object;
  type_ClassCmdForEach.dispatch_table = sxc_dispatch_table+2646;
  type_ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp.set_property_info( sxc_property_info, 370, 3 );
  type_ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp.set_base_types(type_table,298);
  type_ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp.method_init_object = (SlagFn) CmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp__init_object;
  type_ClassCmdMathOp_of_CmdExp_and__EXP__and_EXP__and_cmd_exp.dispatch_table = sxc_dispatch_table+2695;
  type_ClassQualifiersManager.set_property_info( sxc_property_info, 376, 1 );
  type_ClassQualifiersManager.set_base_types(type_table,301);
  type_ClassQualifiersManager.method_init_object = (SlagFn) QualifiersManager__init_object;
  type_ClassQualifiersManager.dispatch_table = sxc_dispatch_table+2744;
  type_AspectReadable_of_KeywordPairing.set_base_types(type_table,302);
  type_AspectReadable_of_CmdCatch.set_base_types(type_table,303);
  type_AspectList_of_CmdCatch.set_base_types(type_table,304);
  type_AspectListOperations_of_CmdCatch_and_ArrayList_of_CmdCatch.set_base_types(type_table,308);
  type_ClassArray_of_SlagFile.set_base_types(type_table,313);
  type_ClassArray_of_SlagFile.element_size = sizeof(SlagObject*);
  type_ClassArray_of_SlagFile.method_init_object = (SlagFn) Array_of_SlagFile__init_object;
  type_ClassArray_of_SlagFile.dispatch_table = sxc_dispatch_table+2793;
  type_AspectReader_of_SlagFile.set_base_types(type_table,315);
  type_ClassArrayReader_of_SlagFile.set_property_info( sxc_property_info, 378, 5 );
  type_ClassArrayReader_of_SlagFile.set_base_types(type_table,316);
  type_ClassArrayReader_of_SlagFile.method_init_object = (SlagFn) ArrayReader_of_SlagFile__init_object;
  type_ClassArrayReader_of_SlagFile.dispatch_table = sxc_dispatch_table+2842;
  type_AspectReadable_of_Mapping_of_Int32_and_Object.set_base_types(type_table,319);
  type_AspectList_of_Mapping_of_Int32_and_Object.set_base_types(type_table,320);
  type_ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object.set_property_info( sxc_property_info, 388, 1 );
  type_ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object.set_base_types(type_table,324);
  type_ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_LocalVarInfo_and_Object_and_Object.dispatch_table = sxc_dispatch_table+2891;
  type_ClassHashTable_of_String_and_LocalVarInfo.set_property_info( sxc_property_info, 390, 1 );
  type_ClassHashTable_of_String_and_LocalVarInfo.set_base_types(type_table,327);
  type_ClassHashTable_of_String_and_LocalVarInfo.method_init_object = (SlagFn) HashTable_of_String_and_LocalVarInfo__init_object;
  type_ClassHashTable_of_String_and_LocalVarInfo.dispatch_table = sxc_dispatch_table+2940;
  type_ClassCmdList.set_property_info( sxc_property_info, 392, 3 );
  type_ClassCmdList.set_base_types(type_table,331);
  type_ClassCmdList.method_init_object = (SlagFn) CmdList__init_object;
  type_ClassCmdList.dispatch_table = sxc_dispatch_table+2989;
  type_ClassCmdCall.set_property_info( sxc_property_info, 398, 3 );
  type_ClassCmdCall.set_base_types(type_table,339);
  type_ClassCmdCall.method_init_object = (SlagFn) CmdCall__init_object;
  type_ClassCmdCall.dispatch_table = sxc_dispatch_table+3038;
  type_ClassCmdNewObject.set_property_info( sxc_property_info, 404, 4 );
  type_ClassCmdNewObject.set_base_types(type_table,341);
  type_ClassCmdNewObject.method_init_object = (SlagFn) CmdNewObject__init_object;
  type_ClassCmdNewObject.dispatch_table = sxc_dispatch_table+3087;
  type_AspectReader_of_ArrayList_of_Token.set_base_types(type_table,344);
  type_ClassArrayReader_of_ArrayList_of_Token.set_property_info( sxc_property_info, 412, 5 );
  type_ClassArrayReader_of_ArrayList_of_Token.set_base_types(type_table,345);
  type_ClassArrayReader_of_ArrayList_of_Token.method_init_object = (SlagFn) ArrayReader_of_ArrayList_of_Token__init_object;
  type_ClassArrayReader_of_ArrayList_of_Token.dispatch_table = sxc_dispatch_table+3136;
  type_ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and.set_property_info( sxc_property_info, 422, 3 );
  type_ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and.set_base_types(type_table,348);
  type_ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and.method_init_object = (SlagFn) CmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and__init_object;
  type_ClassCmdBitwiseOp_of_CmdAnd_and__AND__and_AND__and_cmd_and.dispatch_table = sxc_dispatch_table+3185;
  type_ClassCmdAnd.set_property_info( sxc_property_info, 428, 3 );
  type_ClassCmdAnd.set_base_types(type_table,351);
  type_ClassCmdAnd.method_init_object = (SlagFn) CmdAnd__init_object;
  type_ClassCmdAnd.dispatch_table = sxc_dispatch_table+3234;
  type_AspectReadable_of_TypeTemplate.set_base_types(type_table,355);
  type_AspectList_of_TypeTemplate.set_base_types(type_table,356);
  type_AspectListOperations_of_TypeTemplate_and_ArrayList_of_TypeTemplate.set_base_types(type_table,360);
  type_ClassArray_of_TypeTemplate.set_base_types(type_table,365);
  type_ClassArray_of_TypeTemplate.element_size = sizeof(SlagObject*);
  type_ClassArray_of_TypeTemplate.method_init_object = (SlagFn) Array_of_TypeTemplate__init_object;
  type_ClassArray_of_TypeTemplate.dispatch_table = sxc_dispatch_table+3283;
  type_AspectReader_of_TypeTemplate.set_base_types(type_table,367);
  type_ClassArrayReader_of_TypeTemplate.set_property_info( sxc_property_info, 434, 5 );
  type_ClassArrayReader_of_TypeTemplate.set_base_types(type_table,368);
  type_ClassArrayReader_of_TypeTemplate.method_init_object = (SlagFn) ArrayReader_of_TypeTemplate__init_object;
  type_ClassArrayReader_of_TypeTemplate.dispatch_table = sxc_dispatch_table+3332;
  type_ClassArray_of_Mapping_of_Object_and_Int32.set_base_types(type_table,371);
  type_ClassArray_of_Mapping_of_Object_and_Int32.element_size = sizeof(SlagObject*);
  type_ClassArray_of_Mapping_of_Object_and_Int32.method_init_object = (SlagFn) Array_of_Mapping_of_Object_and_Int32__init_object;
  type_ClassArray_of_Mapping_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+3381;
  type_AspectReadable_of_Mapping_of_Object_and_Int32.set_base_types(type_table,373);
  type_AspectList_of_Mapping_of_Object_and_Int32.set_base_types(type_table,374);
  type_AspectListOperations_of_Mapping_of_Object_and_Int32_and_ArrayList_of_Mapping_of_Object_and_Int32.set_base_types(type_table,378);
  type_ClassArrayList_of_Mapping_of_Object_and_Int32.set_property_info( sxc_property_info, 444, 3 );
  type_ClassArrayList_of_Mapping_of_Object_and_Int32.set_base_types(type_table,383);
  type_ClassArrayList_of_Mapping_of_Object_and_Int32.method_init_object = (SlagFn) ArrayList_of_Mapping_of_Object_and_Int32__init_object;
  type_ClassArrayList_of_Mapping_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+3430;
  type_ClassTextWriter.set_base_types(type_table,390);
  type_ClassTextWriter.method_init_object = (SlagFn) TextWriter__init_object;
  type_ClassTextWriter.dispatch_table = sxc_dispatch_table+3479;
  type_ClassStdOutWriter.set_base_types(type_table,392);
  type_ClassStdOutWriter.method_init_object = (SlagFn) StdOutWriter__init_object;
  type_ClassStdOutWriter.dispatch_table = sxc_dispatch_table+3528;
  type_ClassCmdConstruct.set_property_info( sxc_property_info, 450, 3 );
  type_ClassCmdConstruct.set_base_types(type_table,395);
  type_ClassCmdConstruct.method_init_object = (SlagFn) CmdConstruct__init_object;
  type_ClassCmdConstruct.dispatch_table = sxc_dispatch_table+3577;
  type_ClassCmdUnary.set_property_info( sxc_property_info, 456, 2 );
  type_ClassCmdUnary.set_base_types(type_table,397);
  type_ClassCmdUnary.method_init_object = (SlagFn) CmdUnary__init_object;
  type_ClassCmdUnary.dispatch_table = sxc_dispatch_table+3626;
  type_ClassCmdMemberAccess.set_property_info( sxc_property_info, 460, 3 );
  type_ClassCmdMemberAccess.set_base_types(type_table,399);
  type_ClassCmdMemberAccess.method_init_object = (SlagFn) CmdMemberAccess__init_object;
  type_ClassCmdMemberAccess.dispatch_table = sxc_dispatch_table+3675;
  type_ClassArray_of_HashTableBin_of_Int32_and_Int32.set_base_types(type_table,402);
  type_ClassArray_of_HashTableBin_of_Int32_and_Int32.element_size = sizeof(SlagObject*);
  type_ClassArray_of_HashTableBin_of_Int32_and_Int32.method_init_object = (SlagFn) Array_of_HashTableBin_of_Int32_and_Int32__init_object;
  type_ClassArray_of_HashTableBin_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+3724;
  type_AspectReadable_of_HashTableBin_of_Int32_and_Int32.set_base_types(type_table,404);
  type_AspectList_of_HashTableBin_of_Int32_and_Int32.set_base_types(type_table,405);
  type_AspectListOperations_of_HashTableBin_of_Int32_and_Int32_and_ArrayList_of_HashTableBin_of_Int32_and_Int32.set_base_types(type_table,409);
  type_ClassArrayList_of_HashTableBin_of_Int32_and_Int32.set_property_info( sxc_property_info, 466, 3 );
  type_ClassArrayList_of_HashTableBin_of_Int32_and_Int32.set_base_types(type_table,414);
  type_ClassArrayList_of_HashTableBin_of_Int32_and_Int32.method_init_object = (SlagFn) ArrayList_of_HashTableBin_of_Int32_and_Int32__init_object;
  type_ClassArrayList_of_HashTableBin_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+3773;
  type_ClassGenericHashTable_of_Int32_and_Int32.set_property_info( sxc_property_info, 472, 6 );
  type_ClassGenericHashTable_of_Int32_and_Int32.set_base_types(type_table,421);
  type_ClassGenericHashTable_of_Int32_and_Int32.method_init_object = (SlagFn) GenericHashTable_of_Int32_and_Int32__init_object;
  type_ClassGenericHashTable_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+3822;
  type_AspectReadable_of_Int32.set_base_types(type_table,422);
  type_ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32.set_property_info( sxc_property_info, 484, 1 );
  type_ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32.set_base_types(type_table,423);
  type_ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32.method_init_object = (SlagFn) HashTableBase_of_Int32_and_Int32_and_Int32_and_Int32__init_object;
  type_ClassHashTableBase_of_Int32_and_Int32_and_Int32_and_Int32.dispatch_table = sxc_dispatch_table+3871;
  type_ClassArray_of_HashTableBin_of_Object_and_Int32.set_base_types(type_table,426);
  type_ClassArray_of_HashTableBin_of_Object_and_Int32.element_size = sizeof(SlagObject*);
  type_ClassArray_of_HashTableBin_of_Object_and_Int32.method_init_object = (SlagFn) Array_of_HashTableBin_of_Object_and_Int32__init_object;
  type_ClassArray_of_HashTableBin_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+3920;
  type_AspectReadable_of_HashTableBin_of_Object_and_Int32.set_base_types(type_table,428);
  type_AspectList_of_HashTableBin_of_Object_and_Int32.set_base_types(type_table,429);
  type_AspectListOperations_of_HashTableBin_of_Object_and_Int32_and_ArrayList_of_HashTableBin_of_Object_and_Int32.set_base_types(type_table,433);
  type_ClassArrayList_of_HashTableBin_of_Object_and_Int32.set_property_info( sxc_property_info, 486, 3 );
  type_ClassArrayList_of_HashTableBin_of_Object_and_Int32.set_base_types(type_table,438);
  type_ClassArrayList_of_HashTableBin_of_Object_and_Int32.method_init_object = (SlagFn) ArrayList_of_HashTableBin_of_Object_and_Int32__init_object;
  type_ClassArrayList_of_HashTableBin_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+3969;
  type_ClassGenericHashTable_of_Object_and_Int32.set_property_info( sxc_property_info, 492, 6 );
  type_ClassGenericHashTable_of_Object_and_Int32.set_base_types(type_table,445);
  type_ClassGenericHashTable_of_Object_and_Int32.method_init_object = (SlagFn) GenericHashTable_of_Object_and_Int32__init_object;
  type_ClassGenericHashTable_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+4018;
  type_ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32.set_property_info( sxc_property_info, 504, 1 );
  type_ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32.set_base_types(type_table,446);
  type_ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32.method_init_object = (SlagFn) HashTableBase_of_String_and_Int32_and_Object_and_Int32__init_object;
  type_ClassHashTableBase_of_String_and_Int32_and_Object_and_Int32.dispatch_table = sxc_dispatch_table+4067;
  type_ClassHashTable_of_String_and_Int32.set_property_info( sxc_property_info, 506, 1 );
  type_ClassHashTable_of_String_and_Int32.set_base_types(type_table,449);
  type_ClassHashTable_of_String_and_Int32.method_init_object = (SlagFn) HashTable_of_String_and_Int32__init_object;
  type_ClassHashTable_of_String_and_Int32.dispatch_table = sxc_dispatch_table+4116;
  type_ClassArray_of_String.set_base_types(type_table,453);
  type_ClassArray_of_String.element_size = sizeof(SlagObject*);
  type_ClassArray_of_String.method_init_object = (SlagFn) Array_of_String__init_object;
  type_ClassArray_of_String.dispatch_table = sxc_dispatch_table+4165;
  type_AspectList_of_String.set_base_types(type_table,455);
  type_AspectListOperations_of_String_and_ArrayList_of_String.set_base_types(type_table,460);
  type_ClassArrayList_of_String.set_property_info( sxc_property_info, 508, 3 );
  type_ClassArrayList_of_String.set_base_types(type_table,466);
  type_ClassArrayList_of_String.method_init_object = (SlagFn) ArrayList_of_String__init_object;
  type_ClassArrayList_of_String.dispatch_table = sxc_dispatch_table+4214;
  type_ClassTokenManager.set_property_info( sxc_property_info, 514, 164 );
  type_ClassTokenManager.set_base_types(type_table,474);
  type_ClassTokenManager.method_init_object = (SlagFn) TokenManager__init_object;
  type_ClassTokenManager.dispatch_table = sxc_dispatch_table+4263;
  type_AspectReader_of_HashTableBin_of_Object_and_Int32.set_base_types(type_table,475);
  type_ClassArrayReader_of_HashTableBin_of_Object_and_Int32.set_property_info( sxc_property_info, 842, 5 );
  type_ClassArrayReader_of_HashTableBin_of_Object_and_Int32.set_base_types(type_table,476);
  type_ClassArrayReader_of_HashTableBin_of_Object_and_Int32.method_init_object = (SlagFn) ArrayReader_of_HashTableBin_of_Object_and_Int32__init_object;
  type_ClassArrayReader_of_HashTableBin_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+4312;
  type_ClassCmdTerm.set_property_info( sxc_property_info, 852, 1 );
  type_ClassCmdTerm.set_base_types(type_table,479);
  type_ClassCmdTerm.method_init_object = (SlagFn) CmdTerm__init_object;
  type_ClassCmdTerm.dispatch_table = sxc_dispatch_table+4361;
  type_ClassCmdThisReference.set_property_info( sxc_property_info, 854, 2 );
  type_ClassCmdThisReference.set_base_types(type_table,481);
  type_ClassCmdThisReference.method_init_object = (SlagFn) CmdThisReference__init_object;
  type_ClassCmdThisReference.dispatch_table = sxc_dispatch_table+4410;
  type_ClassCmdCoerceAs.set_property_info( sxc_property_info, 858, 3 );
  type_ClassCmdCoerceAs.set_base_types(type_table,484);
  type_ClassCmdCoerceAs.method_init_object = (SlagFn) CmdCoerceAs__init_object;
  type_ClassCmdCoerceAs.dispatch_table = sxc_dispatch_table+4459;
  type_ClassArray_of_Int32.set_base_types(type_table,487);
  type_ClassArray_of_Int32.element_size = sizeof(SlagInt32);
  type_ClassArray_of_Int32.method_init_object = (SlagFn) Array_of_Int32__init_object;
  type_ClassArray_of_Int32.dispatch_table = sxc_dispatch_table+4508;
  type_AspectReader_of_Int32.set_base_types(type_table,489);
  type_ClassArrayReader_of_Int32.set_property_info( sxc_property_info, 864, 5 );
  type_ClassArrayReader_of_Int32.set_base_types(type_table,490);
  type_ClassArrayReader_of_Int32.method_init_object = (SlagFn) ArrayReader_of_Int32__init_object;
  type_ClassArrayReader_of_Int32.dispatch_table = sxc_dispatch_table+4557;
  type_ClassArray_of_HashTableBin_of_Int32_and_Object.set_base_types(type_table,493);
  type_ClassArray_of_HashTableBin_of_Int32_and_Object.element_size = sizeof(SlagObject*);
  type_ClassArray_of_HashTableBin_of_Int32_and_Object.method_init_object = (SlagFn) Array_of_HashTableBin_of_Int32_and_Object__init_object;
  type_ClassArray_of_HashTableBin_of_Int32_and_Object.dispatch_table = sxc_dispatch_table+4606;
  type_AspectReader_of_ParameterInfo.set_base_types(type_table,495);
  type_ClassParseReaderMarkManager.set_base_types(type_table,496);
  type_ClassParseReaderMarkManager.method_init_object = (SlagFn) ParseReaderMarkManager__init_object;
  type_ClassParseReaderMarkManager.dispatch_table = sxc_dispatch_table+4655;
  type_AspectReader_of_HashTableBin_of_Int32_and_Object.set_base_types(type_table,497);
  type_AspectReader_of_Mapping_of_Int32_and_Object.set_base_types(type_table,498);
  type_AspectReader_of_Object.set_base_types(type_table,499);
  type_ClassHashTableValueReader_of_Int32_and_Object.set_property_info( sxc_property_info, 874, 2 );
  type_ClassHashTableValueReader_of_Int32_and_Object.set_base_types(type_table,500);
  type_ClassHashTableValueReader_of_Int32_and_Object.method_init_object = (SlagFn) HashTableValueReader_of_Int32_and_Object__init_object;
  type_ClassHashTableValueReader_of_Int32_and_Object.dispatch_table = sxc_dispatch_table+4704;
  type_ClassMath.set_property_info( sxc_property_info, 878, 2 );
  type_ClassMath.set_base_types(type_table,503);
  type_ClassMath.method_init_object = (SlagFn) Math__init_object;
  type_ClassMath.dispatch_table = sxc_dispatch_table+4753;
  type_AspectReadable_of_HashTableBin_of_Int32_and_Object.set_base_types(type_table,504);
  type_AspectList_of_HashTableBin_of_Int32_and_Object.set_base_types(type_table,505);
  type_AspectListOperations_of_HashTableBin_of_Int32_and_Object_and_ArrayList_of_HashTableBin_of_Int32_and_Object.set_base_types(type_table,509);
  type_ClassArray_of_CMD.set_base_types(type_table,514);
  type_ClassArray_of_CMD.element_size = sizeof(SlagObject*);
  type_ClassArray_of_CMD.method_init_object = (SlagFn) Array_of_CMD__init_object;
  type_ClassArray_of_CMD.dispatch_table = sxc_dispatch_table+4802;
  type_AspectReadable_of_CMD.set_base_types(type_table,516);
  type_AspectList_of_CMD.set_base_types(type_table,517);
  type_AspectListOperations_of_CMD_and_ArrayList_of_CMD.set_base_types(type_table,521);
  type_ClassArrayList_of_CMD.set_property_info( sxc_property_info, 882, 3 );
  type_ClassArrayList_of_CMD.set_base_types(type_table,526);
  type_ClassArrayList_of_CMD.method_init_object = (SlagFn) ArrayList_of_CMD__init_object;
  type_ClassArrayList_of_CMD.dispatch_table = sxc_dispatch_table+4851;
  type_ClassHashTableBase_of_String_and_CMD_and_Object_and_Object.set_property_info( sxc_property_info, 888, 1 );
  type_ClassHashTableBase_of_String_and_CMD_and_Object_and_Object.set_base_types(type_table,533);
  type_ClassHashTableBase_of_String_and_CMD_and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_CMD_and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_CMD_and_Object_and_Object.dispatch_table = sxc_dispatch_table+4900;
  type_ClassHashTable_of_String_and_CMD.set_property_info( sxc_property_info, 890, 1 );
  type_ClassHashTable_of_String_and_CMD.set_base_types(type_table,536);
  type_ClassHashTable_of_String_and_CMD.method_init_object = (SlagFn) HashTable_of_String_and_CMD__init_object;
  type_ClassHashTable_of_String_and_CMD.dispatch_table = sxc_dispatch_table+4949;
  type_ClassCMD.set_property_info( sxc_property_info, 892, 2 );
  type_ClassCMD.set_base_types(type_table,540);
  type_ClassCMD.method_init_object = (SlagFn) CMD__init_object;
  type_ClassCMD.dispatch_table = sxc_dispatch_table+4998;
  type_ClassEnum_of_CMD.set_property_info( sxc_property_info, 896, 99 );
  type_ClassEnum_of_CMD.set_base_types(type_table,542);
  type_ClassEnum_of_CMD.method_init_object = (SlagFn) Enum_of_CMD__init_object;
  type_ClassEnum_of_CMD.dispatch_table = sxc_dispatch_table+5047;
  type_ClassCmdManager.set_property_info( sxc_property_info, 1094, 1 );
  type_ClassCmdManager.set_base_types(type_table,544);
  type_ClassCmdManager.method_init_object = (SlagFn) CmdManager__init_object;
  type_ClassCmdManager.dispatch_table = sxc_dispatch_table+5096;
  type_AspectReader_of_StackTraceInfo.set_base_types(type_table,545);
  type_ClassDelegateType.set_base_types(type_table,546);
  type_ClassDelegateType.method_init_object = (SlagFn) DelegateType__init_object;
  type_ClassDelegateType.dispatch_table = sxc_dispatch_table+5145;
  type_ClassDelegate____.set_base_types(type_table,547);
  type_ClassDelegate____.method_init_object = (SlagFn) Delegate______init_object;
  type_ClassDelegate____.dispatch_table = sxc_dispatch_table+5194;
  type_ClassSignalHandler.set_property_info( sxc_property_info, 1096, 5 );
  type_ClassSignalHandler.set_base_types(type_table,549);
  type_ClassSignalHandler.method_init_object = (SlagFn) SignalHandler__init_object;
  type_ClassSignalHandler.dispatch_table = sxc_dispatch_table+5243;
  type_ClassSpecializedSignalHandler_460.set_property_info( sxc_property_info, 1106, 5 );
  type_ClassSpecializedSignalHandler_460.set_base_types(type_table,550);
  type_ClassSpecializedSignalHandler_460.method_init_object = (SlagFn) SpecializedSignalHandler_460__init_object;
  type_ClassSpecializedSignalHandler_460.dispatch_table = sxc_dispatch_table+5292;
  type_ClassArray_of_ParamInfo.set_base_types(type_table,552);
  type_ClassArray_of_ParamInfo.element_size = sizeof(SlagObject*);
  type_ClassArray_of_ParamInfo.method_init_object = (SlagFn) Array_of_ParamInfo__init_object;
  type_ClassArray_of_ParamInfo.dispatch_table = sxc_dispatch_table+5341;
  type_AspectReadable_of_ParamInfo.set_base_types(type_table,554);
  type_AspectList_of_ParamInfo.set_base_types(type_table,555);
  type_AspectListOperations_of_ParamInfo_and_ArrayList_of_ParamInfo.set_base_types(type_table,559);
  type_ClassArrayList_of_ParamInfo.set_property_info( sxc_property_info, 1116, 3 );
  type_ClassArrayList_of_ParamInfo.set_base_types(type_table,564);
  type_ClassArrayList_of_ParamInfo.method_init_object = (SlagFn) ArrayList_of_ParamInfo__init_object;
  type_ClassArrayList_of_ParamInfo.dispatch_table = sxc_dispatch_table+5390;
  type_ClassPropertyInfo.set_property_info( sxc_property_info, 1122, 10 );
  type_ClassPropertyInfo.set_base_types(type_table,571);
  type_ClassPropertyInfo.method_init_object = (SlagFn) PropertyInfo__init_object;
  type_ClassPropertyInfo.dispatch_table = sxc_dispatch_table+5439;
  type_ClassCmdStatementWithOperand.set_property_info( sxc_property_info, 1142, 2 );
  type_ClassCmdStatementWithOperand.set_base_types(type_table,573);
  type_ClassCmdStatementWithOperand.method_init_object = (SlagFn) CmdStatementWithOperand__init_object;
  type_ClassCmdStatementWithOperand.dispatch_table = sxc_dispatch_table+5488;
  type_ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign.set_property_info( sxc_property_info, 1146, 3 );
  type_ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign.set_base_types(type_table,575);
  type_ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign.method_init_object = (SlagFn) CmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign__init_object;
  type_ClassCmdModifyAndAssign_of_CmdThisPropertySubAndAssign_and_PropertyInfo_and_cmd_this_property_sub_and_assign.dispatch_table = sxc_dispatch_table+5537;
  type_ClassCmdThisPropertySubAndAssign.set_property_info( sxc_property_info, 1152, 3 );
  type_ClassCmdThisPropertySubAndAssign.set_base_types(type_table,578);
  type_ClassCmdThisPropertySubAndAssign.method_init_object = (SlagFn) CmdThisPropertySubAndAssign__init_object;
  type_ClassCmdThisPropertySubAndAssign.dispatch_table = sxc_dispatch_table+5586;
  type_AspectReader_of_PropertyInfo.set_base_types(type_table,582);
  type_ClassCoerceReader_of_PropertyInfo.set_property_info( sxc_property_info, 1158, 1 );
  type_ClassCoerceReader_of_PropertyInfo.set_base_types(type_table,583);
  type_ClassCoerceReader_of_PropertyInfo.method_init_object = (SlagFn) CoerceReader_of_PropertyInfo__init_object;
  type_ClassCoerceReader_of_PropertyInfo.dispatch_table = sxc_dispatch_table+5635;
  type_AspectReadable_of_MethodGroup.set_base_types(type_table,586);
  type_ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object.set_property_info( sxc_property_info, 1160, 1 );
  type_ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object.set_base_types(type_table,587);
  type_ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_MethodGroup_and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_MethodGroup_and_Object_and_Object.dispatch_table = sxc_dispatch_table+5684;
  type_ClassArray_of_CmdCatch.set_base_types(type_table,590);
  type_ClassArray_of_CmdCatch.element_size = sizeof(SlagObject*);
  type_ClassArray_of_CmdCatch.method_init_object = (SlagFn) Array_of_CmdCatch__init_object;
  type_ClassArray_of_CmdCatch.dispatch_table = sxc_dispatch_table+5733;
  type_ClassArrayList_of_CmdCatch.set_property_info( sxc_property_info, 1162, 3 );
  type_ClassArrayList_of_CmdCatch.set_base_types(type_table,592);
  type_ClassArrayList_of_CmdCatch.method_init_object = (SlagFn) ArrayList_of_CmdCatch__init_object;
  type_ClassArrayList_of_CmdCatch.dispatch_table = sxc_dispatch_table+5782;
  type_ClassCmdTry.set_property_info( sxc_property_info, 1168, 5 );
  type_ClassCmdTry.set_base_types(type_table,599);
  type_ClassCmdTry.method_init_object = (SlagFn) CmdTry__init_object;
  type_ClassCmdTry.dispatch_table = sxc_dispatch_table+5831;
  type_ClassCmdLiteralPrimitive.set_property_info( sxc_property_info, 1178, 1 );
  type_ClassCmdLiteralPrimitive.set_base_types(type_table,602);
  type_ClassCmdLiteralPrimitive.method_init_object = (SlagFn) CmdLiteralPrimitive__init_object;
  type_ClassCmdLiteralPrimitive.dispatch_table = sxc_dispatch_table+5880;
  type_ClassCmdLiteralInt64.set_property_info( sxc_property_info, 1180, 2 );
  type_ClassCmdLiteralInt64.set_base_types(type_table,605);
  type_ClassCmdLiteralInt64.method_init_object = (SlagFn) CmdLiteralInt64__init_object;
  type_ClassCmdLiteralInt64.dispatch_table = sxc_dispatch_table+5929;
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign.set_property_info( sxc_property_info, 1184, 3 );
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign.set_base_types(type_table,609);
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign.method_init_object = (SlagFn) CmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign__init_object;
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyMulAndAssign_and_PropertyInfo_and_cmd_this_property_mul_and_assign.dispatch_table = sxc_dispatch_table+5978;
  type_ClassCmdThisPropertyMulAndAssign.set_property_info( sxc_property_info, 1190, 3 );
  type_ClassCmdThisPropertyMulAndAssign.set_base_types(type_table,612);
  type_ClassCmdThisPropertyMulAndAssign.method_init_object = (SlagFn) CmdThisPropertyMulAndAssign__init_object;
  type_ClassCmdThisPropertyMulAndAssign.dispatch_table = sxc_dispatch_table+6027;
  type_AspectReadable_of_ControlStructureInfo.set_base_types(type_table,616);
  type_AspectList_of_ControlStructureInfo.set_base_types(type_table,617);
  type_AspectReadable_of_SlagError.set_base_types(type_table,621);
  type_AspectList_of_SlagError.set_base_types(type_table,622);
  type_ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add.set_property_info( sxc_property_info, 1196, 3 );
  type_ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add.set_base_types(type_table,626);
  type_ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add.method_init_object = (SlagFn) CmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add__init_object;
  type_ClassCmdMathOp_of_CmdAdd_and__ADD__and_ADD__and_cmd_add.dispatch_table = sxc_dispatch_table+6076;
  type_ClassArray_of_Char.set_base_types(type_table,629);
  type_ClassArray_of_Char.element_size = sizeof(SlagChar);
  type_ClassArray_of_Char.method_init_object = (SlagFn) Array_of_Char__init_object;
  type_ClassArray_of_Char.dispatch_table = sxc_dispatch_table+6125;
  type_AspectList_of_Char.set_base_types(type_table,631);
  type_AspectListOperations_of_Char_and_ArrayList_of_Char.set_base_types(type_table,636);
  type_ClassArrayList_of_Char.set_property_info( sxc_property_info, 1202, 3 );
  type_ClassArrayList_of_Char.set_base_types(type_table,642);
  type_ClassArrayList_of_Char.method_init_object = (SlagFn) ArrayList_of_Char__init_object;
  type_ClassArrayList_of_Char.dispatch_table = sxc_dispatch_table+6174;
  type_AspectReadable_of_CmdElseIf.set_base_types(type_table,650);
  type_ClassArray_of_Token.set_base_types(type_table,651);
  type_ClassArray_of_Token.element_size = sizeof(SlagObject*);
  type_ClassArray_of_Token.method_init_object = (SlagFn) Array_of_Token__init_object;
  type_ClassArray_of_Token.dispatch_table = sxc_dispatch_table+6223;
  type_AspectReadable_of_Token.set_base_types(type_table,653);
  type_AspectList_of_Token.set_base_types(type_table,654);
  type_AspectListOperations_of_Token_and_ArrayList_of_Token.set_base_types(type_table,658);
  type_ClassArrayList_of_Token.set_property_info( sxc_property_info, 1208, 3 );
  type_ClassArrayList_of_Token.set_base_types(type_table,663);
  type_ClassArrayList_of_Token.method_init_object = (SlagFn) ArrayList_of_Token__init_object;
  type_ClassArrayList_of_Token.dispatch_table = sxc_dispatch_table+6272;
  type_ClassCmdStructureControl.set_property_info( sxc_property_info, 1214, 2 );
  type_ClassCmdStructureControl.set_base_types(type_table,670);
  type_ClassCmdStructureControl.method_init_object = (SlagFn) CmdStructureControl__init_object;
  type_ClassCmdStructureControl.dispatch_table = sxc_dispatch_table+6321;
  type_ClassCmdCompare.set_property_info( sxc_property_info, 1218, 3 );
  type_ClassCmdCompare.set_base_types(type_table,672);
  type_ClassCmdCompare.method_init_object = (SlagFn) CmdCompare__init_object;
  type_ClassCmdCompare.dispatch_table = sxc_dispatch_table+6370;
  type_ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne.set_property_info( sxc_property_info, 1224, 3 );
  type_ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne.set_base_types(type_table,675);
  type_ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne.method_init_object = (SlagFn) CmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne__init_object;
  type_ClassCmdCmpEquivalance_of_CmdCmpNE_and_NOT__and_true_and_cmd_cmp_ne.dispatch_table = sxc_dispatch_table+6419;
  type_AspectReadable_of_Object.set_base_types(type_table,679);
  type_AspectReadable_of_Int64.set_base_types(type_table,680);
  type_AspectList_of_Int64.set_base_types(type_table,681);
  type_AspectListOperations_of_Int64_and_ArrayList_of_Int64.set_base_types(type_table,686);
  type_ClassArrayList_of_Int64.set_property_info( sxc_property_info, 1230, 3 );
  type_ClassArrayList_of_Int64.set_base_types(type_table,692);
  type_ClassArrayList_of_Int64.method_init_object = (SlagFn) ArrayList_of_Int64__init_object;
  type_ClassArrayList_of_Int64.dispatch_table = sxc_dispatch_table+6468;
  type_ClassStackTrace.set_property_info( sxc_property_info, 1236, 1 );
  type_ClassStackTrace.set_base_types(type_table,700);
  type_ClassStackTrace.method_init_object = (SlagFn) StackTrace__init_object;
  type_ClassStackTrace.dispatch_table = sxc_dispatch_table+6517;
  type_ClassException.set_property_info( sxc_property_info, 1238, 2 );
  type_ClassException.set_base_types(type_table,701);
  type_ClassException.method_init_object = (SlagFn) Exception__init_object;
  type_ClassException.dispatch_table = sxc_dispatch_table+6566;
  type_ClassError.set_property_info( sxc_property_info, 1242, 2 );
  type_ClassError.set_base_types(type_table,702);
  type_ClassError.method_init_object = (SlagFn) Error__init_object;
  type_ClassError.dispatch_table = sxc_dispatch_table+6615;
  type_ClassSlagError.set_property_info( sxc_property_info, 1246, 5 );
  type_ClassSlagError.set_base_types(type_table,704);
  type_ClassSlagError.method_init_object = (SlagFn) SlagError__init_object;
  type_ClassSlagError.dispatch_table = sxc_dispatch_table+6664;
  type_ClassArray_of_Byte.set_base_types(type_table,707);
  type_ClassArray_of_Byte.element_size = sizeof(SlagByte);
  type_ClassArray_of_Byte.method_init_object = (SlagFn) Array_of_Byte__init_object;
  type_ClassArray_of_Byte.dispatch_table = sxc_dispatch_table+6713;
  type_ClassCmdLiteralNull.set_property_info( sxc_property_info, 1256, 1 );
  type_ClassCmdLiteralNull.set_base_types(type_table,709);
  type_ClassCmdLiteralNull.method_init_object = (SlagFn) CmdLiteralNull__init_object;
  type_ClassCmdLiteralNull.dispatch_table = sxc_dispatch_table+6762;
  type_ClassCmdVarAccess.set_property_info( sxc_property_info, 1258, 1 );
  type_ClassCmdVarAccess.set_base_types(type_table,712);
  type_ClassCmdVarAccess.method_init_object = (SlagFn) CmdVarAccess__init_object;
  type_ClassCmdVarAccess.dispatch_table = sxc_dispatch_table+6811;
  type_ClassCmdMemberVarAccess.set_property_info( sxc_property_info, 1260, 3 );
  type_ClassCmdMemberVarAccess.set_base_types(type_table,714);
  type_ClassCmdMemberVarAccess.method_init_object = (SlagFn) CmdMemberVarAccess__init_object;
  type_ClassCmdMemberVarAccess.dispatch_table = sxc_dispatch_table+6860;
  type_ClassCmdMemberVarRead.set_property_info( sxc_property_info, 1266, 3 );
  type_ClassCmdMemberVarRead.set_base_types(type_table,717);
  type_ClassCmdMemberVarRead.method_init_object = (SlagFn) CmdMemberVarRead__init_object;
  type_ClassCmdMemberVarRead.dispatch_table = sxc_dispatch_table+6909;
  type_AspectReadable_of_HashTable_of_String_and_LocalVarInfo.set_base_types(type_table,721);
  type_AspectList_of_HashTable_of_String_and_LocalVarInfo.set_base_types(type_table,722);
  type_AspectListOperations_of_HashTable_of_String_and_LocalVarInfo_and_ArrayList_of_HashTable_of_String_and_LocalVarInfo.set_base_types(type_table,726);
  type_ClassCmdSingletonReference.set_property_info( sxc_property_info, 1272, 2 );
  type_ClassCmdSingletonReference.set_base_types(type_table,731);
  type_ClassCmdSingletonReference.method_init_object = (SlagFn) CmdSingletonReference__init_object;
  type_ClassCmdSingletonReference.dispatch_table = sxc_dispatch_table+6958;
  type_ClassCmdRange.set_property_info( sxc_property_info, 1276, 4 );
  type_ClassCmdRange.set_base_types(type_table,734);
  type_ClassCmdRange.method_init_object = (SlagFn) CmdRange__init_object;
  type_ClassCmdRange.dispatch_table = sxc_dispatch_table+7007;
  type_ClassCmdRangeLE.set_property_info( sxc_property_info, 1284, 4 );
  type_ClassCmdRangeLE.set_base_types(type_table,736);
  type_ClassCmdRangeLE.method_init_object = (SlagFn) CmdRangeLE__init_object;
  type_ClassCmdRangeLE.dispatch_table = sxc_dispatch_table+7056;
  type_ClassCmdStatement.set_property_info( sxc_property_info, 1292, 1 );
  type_ClassCmdStatement.set_base_types(type_table,739);
  type_ClassCmdStatement.method_init_object = (SlagFn) CmdStatement__init_object;
  type_ClassCmdStatement.dispatch_table = sxc_dispatch_table+7105;
  type_ClassArray_of_Mapping_of_Int32_and_Int32.set_base_types(type_table,741);
  type_ClassArray_of_Mapping_of_Int32_and_Int32.element_size = sizeof(SlagObject*);
  type_ClassArray_of_Mapping_of_Int32_and_Int32.method_init_object = (SlagFn) Array_of_Mapping_of_Int32_and_Int32__init_object;
  type_ClassArray_of_Mapping_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+7154;
  type_AspectReadable_of_Mapping_of_Int32_and_Int32.set_base_types(type_table,743);
  type_AspectList_of_Mapping_of_Int32_and_Int32.set_base_types(type_table,744);
  type_AspectListOperations_of_Mapping_of_Int32_and_Int32_and_ArrayList_of_Mapping_of_Int32_and_Int32.set_base_types(type_table,748);
  type_ClassArrayList_of_Mapping_of_Int32_and_Int32.set_property_info( sxc_property_info, 1294, 3 );
  type_ClassArrayList_of_Mapping_of_Int32_and_Int32.set_base_types(type_table,753);
  type_ClassArrayList_of_Mapping_of_Int32_and_Int32.method_init_object = (SlagFn) ArrayList_of_Mapping_of_Int32_and_Int32__init_object;
  type_ClassArrayList_of_Mapping_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+7203;
  type_ClassHashTableBin_of_Int32_and_Int32.set_property_info( sxc_property_info, 1300, 1 );
  type_ClassHashTableBin_of_Int32_and_Int32.set_base_types(type_table,760);
  type_ClassHashTableBin_of_Int32_and_Int32.method_init_object = (SlagFn) HashTableBin_of_Int32_and_Int32__init_object;
  type_ClassHashTableBin_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+7252;
  type_ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq.set_property_info( sxc_property_info, 1302, 3 );
  type_ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq.set_base_types(type_table,761);
  type_ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq.method_init_object = (SlagFn) CmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq__init_object;
  type_ClassCmdCmpEquivalance_of_CmdCmpEQ_and____and_false_and_cmd_cmp_eq.dispatch_table = sxc_dispatch_table+7301;
  type_ClassCmdCmpEQ.set_property_info( sxc_property_info, 1308, 3 );
  type_ClassCmdCmpEQ.set_base_types(type_table,765);
  type_ClassCmdCmpEQ.method_init_object = (SlagFn) CmdCmpEQ__init_object;
  type_ClassCmdCmpEQ.dispatch_table = sxc_dispatch_table+7350;
  type_AspectReader_of_HashTableBin_of_Int32_and_Int32.set_base_types(type_table,770);
  type_AspectReader_of_Mapping_of_Int32_and_Int32.set_base_types(type_table,771);
  type_ClassHashTableValueReader_of_Int32_and_Int32.set_property_info( sxc_property_info, 1314, 2 );
  type_ClassHashTableValueReader_of_Int32_and_Int32.set_base_types(type_table,772);
  type_ClassHashTableValueReader_of_Int32_and_Int32.method_init_object = (SlagFn) HashTableValueReader_of_Int32_and_Int32__init_object;
  type_ClassHashTableValueReader_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+7399;
  type_ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment.set_property_info( sxc_property_info, 1318, 2 );
  type_ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment.set_base_types(type_table,775);
  type_ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment.method_init_object = (SlagFn) CmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment__init_object;
  type_ClassCmdStepVar_of_CmdLocalVarIncrement_and_MethodVarInfo_and_cmd_local_var_increment.dispatch_table = sxc_dispatch_table+7448;
  type_ClassCmdLocalVarIncrement.set_property_info( sxc_property_info, 1322, 2 );
  type_ClassCmdLocalVarIncrement.set_base_types(type_table,778);
  type_ClassCmdLocalVarIncrement.method_init_object = (SlagFn) CmdLocalVarIncrement__init_object;
  type_ClassCmdLocalVarIncrement.dispatch_table = sxc_dispatch_table+7497;
  type_AspectReader_of_Mapping_of_Object_and_Int32.set_base_types(type_table,782);
  type_AspectReadable_of_ArrayList_of_TypeTemplate.set_base_types(type_table,783);
  type_AspectReadable_of_Qualifiers.set_base_types(type_table,784);
  type_ClassArrayList_of_TypeTemplate.set_property_info( sxc_property_info, 1326, 3 );
  type_ClassArrayList_of_TypeTemplate.set_base_types(type_table,785);
  type_ClassArrayList_of_TypeTemplate.method_init_object = (SlagFn) ArrayList_of_TypeTemplate__init_object;
  type_ClassArrayList_of_TypeTemplate.dispatch_table = sxc_dispatch_table+7546;
  type_ClassMapping_of_String_and_TypeTemplate__.set_property_info( sxc_property_info, 1332, 2 );
  type_ClassMapping_of_String_and_TypeTemplate__.set_base_types(type_table,792);
  type_ClassMapping_of_String_and_TypeTemplate__.method_init_object = (SlagFn) Mapping_of_String_and_TypeTemplate____init_object;
  type_ClassMapping_of_String_and_TypeTemplate__.dispatch_table = sxc_dispatch_table+7595;
  type_AspectReader_of_Token.set_base_types(type_table,793);
  type_AspectReadable_of_Token__.set_base_types(type_table,794);
  type_ClassHashTableBase_of_String_and_Token___and_Object_and_Object.set_property_info( sxc_property_info, 1336, 1 );
  type_ClassHashTableBase_of_String_and_Token___and_Object_and_Object.set_base_types(type_table,795);
  type_ClassHashTableBase_of_String_and_Token___and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_Token___and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_Token___and_Object_and_Object.dispatch_table = sxc_dispatch_table+7644;
  type_ClassHashTable_of_String_and_Token__.set_property_info( sxc_property_info, 1338, 1 );
  type_ClassHashTable_of_String_and_Token__.set_base_types(type_table,798);
  type_ClassHashTable_of_String_and_Token__.method_init_object = (SlagFn) HashTable_of_String_and_Token____init_object;
  type_ClassHashTable_of_String_and_Token__.dispatch_table = sxc_dispatch_table+7693;
  type_ClassTokenReader.set_property_info( sxc_property_info, 1340, 1 );
  type_ClassTokenReader.set_base_types(type_table,802);
  type_ClassTokenReader.method_init_object = (SlagFn) TokenReader__init_object;
  type_ClassTokenReader.dispatch_table = sxc_dispatch_table+7742;
  type_ClassTemplateReader.set_property_info( sxc_property_info, 1342, 4 );
  type_ClassTemplateReader.set_base_types(type_table,805);
  type_ClassTemplateReader.method_init_object = (SlagFn) TemplateReader__init_object;
  type_ClassTemplateReader.dispatch_table = sxc_dispatch_table+7791;
  type_ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign.set_property_info( sxc_property_info, 1350, 3 );
  type_ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign.set_base_types(type_table,809);
  type_ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign.method_init_object = (SlagFn) CmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign__init_object;
  type_ClassCmdModifyAndAssign_of_CmdLocalVarDivAndAssign_and_MethodVarInfo_and_cmd_local_var_div_and_assign.dispatch_table = sxc_dispatch_table+7840;
  type_ClassCmdLocalVarDivAndAssign.set_property_info( sxc_property_info, 1356, 3 );
  type_ClassCmdLocalVarDivAndAssign.set_base_types(type_table,812);
  type_ClassCmdLocalVarDivAndAssign.method_init_object = (SlagFn) CmdLocalVarDivAndAssign__init_object;
  type_ClassCmdLocalVarDivAndAssign.dispatch_table = sxc_dispatch_table+7889;
  type_ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object.set_property_info( sxc_property_info, 1362, 1 );
  type_ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object.set_base_types(type_table,816);
  type_ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_TypeInfo_and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_TypeInfo_and_Object_and_Object.dispatch_table = sxc_dispatch_table+7938;
  type_ClassHashTable_of_String_and_TypeInfo.set_property_info( sxc_property_info, 1364, 1 );
  type_ClassHashTable_of_String_and_TypeInfo.set_base_types(type_table,819);
  type_ClassHashTable_of_String_and_TypeInfo.method_init_object = (SlagFn) HashTable_of_String_and_TypeInfo__init_object;
  type_ClassHashTable_of_String_and_TypeInfo.dispatch_table = sxc_dispatch_table+7987;
  type_AspectReadable_of_TypeTemplate__.set_base_types(type_table,823);
  type_ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object.set_property_info( sxc_property_info, 1366, 1 );
  type_ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object.set_base_types(type_table,824);
  type_ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_TypeTemplate___and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_TypeTemplate___and_Object_and_Object.dispatch_table = sxc_dispatch_table+8036;
  type_ClassHashTable_of_String_and_TypeTemplate__.set_property_info( sxc_property_info, 1368, 1 );
  type_ClassHashTable_of_String_and_TypeTemplate__.set_base_types(type_table,827);
  type_ClassHashTable_of_String_and_TypeTemplate__.method_init_object = (SlagFn) HashTable_of_String_and_TypeTemplate____init_object;
  type_ClassHashTable_of_String_and_TypeTemplate__.dispatch_table = sxc_dispatch_table+8085;
  type_ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object.set_property_info( sxc_property_info, 1370, 1 );
  type_ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object.set_base_types(type_table,831);
  type_ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_TypeTemplate_and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_TypeTemplate_and_Object_and_Object.dispatch_table = sxc_dispatch_table+8134;
  type_ClassHashTable_of_String_and_TypeTemplate.set_property_info( sxc_property_info, 1372, 1 );
  type_ClassHashTable_of_String_and_TypeTemplate.set_base_types(type_table,834);
  type_ClassHashTable_of_String_and_TypeTemplate.method_init_object = (SlagFn) HashTable_of_String_and_TypeTemplate__init_object;
  type_ClassHashTable_of_String_and_TypeTemplate.dispatch_table = sxc_dispatch_table+8183;
  type_ClassHashTable_of_String_and_MethodGroup.set_property_info( sxc_property_info, 1374, 1 );
  type_ClassHashTable_of_String_and_MethodGroup.set_base_types(type_table,838);
  type_ClassHashTable_of_String_and_MethodGroup.method_init_object = (SlagFn) HashTable_of_String_and_MethodGroup__init_object;
  type_ClassHashTable_of_String_and_MethodGroup.dispatch_table = sxc_dispatch_table+8232;
  type_ClassArray_of_MethodGroup.set_base_types(type_table,842);
  type_ClassArray_of_MethodGroup.element_size = sizeof(SlagObject*);
  type_ClassArray_of_MethodGroup.method_init_object = (SlagFn) Array_of_MethodGroup__init_object;
  type_ClassArray_of_MethodGroup.dispatch_table = sxc_dispatch_table+8281;
  type_AspectList_of_MethodGroup.set_base_types(type_table,844);
  type_AspectListOperations_of_MethodGroup_and_ArrayList_of_MethodGroup.set_base_types(type_table,848);
  type_ClassArrayList_of_MethodGroup.set_property_info( sxc_property_info, 1376, 3 );
  type_ClassArrayList_of_MethodGroup.set_base_types(type_table,853);
  type_ClassArrayList_of_MethodGroup.method_init_object = (SlagFn) ArrayList_of_MethodGroup__init_object;
  type_ClassArrayList_of_MethodGroup.dispatch_table = sxc_dispatch_table+8330;
  type_ClassStringTable.set_property_info( sxc_property_info, 1382, 2 );
  type_ClassStringTable.set_base_types(type_table,860);
  type_ClassStringTable.method_init_object = (SlagFn) StringTable__init_object;
  type_ClassStringTable.dispatch_table = sxc_dispatch_table+8379;
  type_ClassTypeManager.set_property_info( sxc_property_info, 1386, 38 );
  type_ClassTypeManager.set_base_types(type_table,863);
  type_ClassTypeManager.method_init_object = (SlagFn) TypeManager__init_object;
  type_ClassTypeManager.dispatch_table = sxc_dispatch_table+8428;
  type_ClassArray_of_Object.set_base_types(type_table,864);
  type_ClassArray_of_Object.element_size = sizeof(SlagObject*);
  type_ClassArray_of_Object.method_init_object = (SlagFn) Array_of_Object__init_object;
  type_ClassArray_of_Object.dispatch_table = sxc_dispatch_table+8477;
  type_ClassSlagAnalyzer.set_base_types(type_table,866);
  type_ClassSlagAnalyzer.method_init_object = (SlagFn) SlagAnalyzer__init_object;
  type_ClassSlagAnalyzer.dispatch_table = sxc_dispatch_table+8526;
  type_AspectReadable_of_SlagFile.set_base_types(type_table,867);
  type_AspectList_of_SlagFile.set_base_types(type_table,868);
  type_AspectListOperations_of_SlagFile_and_ArrayList_of_SlagFile.set_base_types(type_table,872);
  type_ClassCmdPrimitiveCast.set_property_info( sxc_property_info, 1462, 2 );
  type_ClassCmdPrimitiveCast.set_base_types(type_table,877);
  type_ClassCmdPrimitiveCast.method_init_object = (SlagFn) CmdPrimitiveCast__init_object;
  type_ClassCmdPrimitiveCast.dispatch_table = sxc_dispatch_table+8575;
  type_ClassCmdCastToInt64.set_property_info( sxc_property_info, 1466, 2 );
  type_ClassCmdCastToInt64.set_base_types(type_table,880);
  type_ClassCmdCastToInt64.method_init_object = (SlagFn) CmdCastToInt64__init_object;
  type_ClassCmdCastToInt64.dispatch_table = sxc_dispatch_table+8624;
  type_ClassCmdRangeLT.set_property_info( sxc_property_info, 1470, 4 );
  type_ClassCmdRangeLT.set_base_types(type_table,884);
  type_ClassCmdRangeLT.method_init_object = (SlagFn) CmdRangeLT__init_object;
  type_ClassCmdRangeLT.dispatch_table = sxc_dispatch_table+8673;
  type_ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div.set_property_info( sxc_property_info, 1478, 3 );
  type_ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div.set_base_types(type_table,887);
  type_ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div.method_init_object = (SlagFn) CmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div__init_object;
  type_ClassCmdMathOp_of_CmdDiv_and__DIV__and_DIV__and_cmd_div.dispatch_table = sxc_dispatch_table+8722;
  type_ClassHashTableMappingReader_of_Int32_and_Int32.set_property_info( sxc_property_info, 1484, 2 );
  type_ClassHashTableMappingReader_of_Int32_and_Int32.set_base_types(type_table,890);
  type_ClassHashTableMappingReader_of_Int32_and_Int32.method_init_object = (SlagFn) HashTableMappingReader_of_Int32_and_Int32__init_object;
  type_ClassHashTableMappingReader_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+8771;
  type_ClassMethodTableManager.set_property_info( sxc_property_info, 1488, 1 );
  type_ClassMethodTableManager.set_base_types(type_table,893);
  type_ClassMethodTableManager.method_init_object = (SlagFn) MethodTableManager__init_object;
  type_ClassMethodTableManager.dispatch_table = sxc_dispatch_table+8820;
  type_AspectReadable_of_StackTraceInfo.set_base_types(type_table,894);
  type_AspectReader_of_TypeTemplate__.set_base_types(type_table,895);
  type_ClassCoerceReader_of_TypeTemplate__.set_property_info( sxc_property_info, 1490, 1 );
  type_ClassCoerceReader_of_TypeTemplate__.set_base_types(type_table,896);
  type_ClassCoerceReader_of_TypeTemplate__.method_init_object = (SlagFn) CoerceReader_of_TypeTemplate____init_object;
  type_ClassCoerceReader_of_TypeTemplate__.dispatch_table = sxc_dispatch_table+8869;
  type_AspectReadable_of_StructureType.set_base_types(type_table,899);
  type_ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object.set_property_info( sxc_property_info, 1492, 1 );
  type_ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object.set_base_types(type_table,900);
  type_ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_StructureType_and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_StructureType_and_Object_and_Object.dispatch_table = sxc_dispatch_table+8918;
  type_ClassCmdCloseScope.set_property_info( sxc_property_info, 1494, 1 );
  type_ClassCmdCloseScope.set_base_types(type_table,903);
  type_ClassCmdCloseScope.method_init_object = (SlagFn) CmdCloseScope__init_object;
  type_ClassCmdCloseScope.dispatch_table = sxc_dispatch_table+8967;
  type_ClassArray_of_Mapping_of_Int32_and_Object.set_base_types(type_table,906);
  type_ClassArray_of_Mapping_of_Int32_and_Object.element_size = sizeof(SlagObject*);
  type_ClassArray_of_Mapping_of_Int32_and_Object.method_init_object = (SlagFn) Array_of_Mapping_of_Int32_and_Object__init_object;
  type_ClassArray_of_Mapping_of_Int32_and_Object.dispatch_table = sxc_dispatch_table+9016;
  type_AspectListOperations_of_Mapping_of_Int32_and_Object_and_ArrayList_of_Mapping_of_Int32_and_Object.set_base_types(type_table,908);
  type_ClassArrayList_of_Mapping_of_Int32_and_Object.set_property_info( sxc_property_info, 1496, 3 );
  type_ClassArrayList_of_Mapping_of_Int32_and_Object.set_base_types(type_table,913);
  type_ClassArrayList_of_Mapping_of_Int32_and_Object.method_init_object = (SlagFn) ArrayList_of_Mapping_of_Int32_and_Object__init_object;
  type_ClassArrayList_of_Mapping_of_Int32_and_Object.dispatch_table = sxc_dispatch_table+9065;
  type_ClassHashTableBin_of_Int32_and_Object.set_property_info( sxc_property_info, 1502, 1 );
  type_ClassHashTableBin_of_Int32_and_Object.set_base_types(type_table,920);
  type_ClassHashTableBin_of_Int32_and_Object.method_init_object = (SlagFn) HashTableBin_of_Int32_and_Object__init_object;
  type_ClassHashTableBin_of_Int32_and_Object.dispatch_table = sxc_dispatch_table+9114;
  type_ClassFileError.set_property_info( sxc_property_info, 1504, 2 );
  type_ClassFileError.set_base_types(type_table,921);
  type_ClassFileError.method_init_object = (SlagFn) FileError__init_object;
  type_ClassFileError.dispatch_table = sxc_dispatch_table+9163;
  type_ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt.set_property_info( sxc_property_info, 1508, 3 );
  type_ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt.set_base_types(type_table,924);
  type_ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt.method_init_object = (SlagFn) CmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt__init_object;
  type_ClassCmdCmpRelative_of_CmdCmpLT_and__of_CmdCmpEQ_and_ffffffff_and_cmd_cmp_lt.dispatch_table = sxc_dispatch_table+9212;
  type_AspectReader_of_MethodGroup.set_base_types(type_table,928);
  type_ClassArrayReader_of_MethodGroup.set_property_info( sxc_property_info, 1514, 5 );
  type_ClassArrayReader_of_MethodGroup.set_base_types(type_table,929);
  type_ClassArrayReader_of_MethodGroup.method_init_object = (SlagFn) ArrayReader_of_MethodGroup__init_object;
  type_ClassArrayReader_of_MethodGroup.dispatch_table = sxc_dispatch_table+9261;
  type_ClassCmdAssign.set_property_info( sxc_property_info, 1524, 3 );
  type_ClassCmdAssign.set_base_types(type_table,932);
  type_ClassCmdAssign.method_init_object = (SlagFn) CmdAssign__init_object;
  type_ClassCmdAssign.dispatch_table = sxc_dispatch_table+9310;
  type_ClassNullReferenceError.set_property_info( sxc_property_info, 1530, 2 );
  type_ClassNullReferenceError.set_base_types(type_table,935);
  type_ClassNullReferenceError.method_init_object = (SlagFn) NullReferenceError__init_object;
  type_ClassNullReferenceError.dispatch_table = sxc_dispatch_table+9359;
  type_ClassHashTable_of_Int32_and_Int32.set_property_info( sxc_property_info, 1534, 1 );
  type_ClassHashTable_of_Int32_and_Int32.set_base_types(type_table,938);
  type_ClassHashTable_of_Int32_and_Int32.method_init_object = (SlagFn) HashTable_of_Int32_and_Int32__init_object;
  type_ClassHashTable_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+9408;
  type_ClassArray_of_HashTable_of_String_and_LocalVarInfo.set_base_types(type_table,942);
  type_ClassArray_of_HashTable_of_String_and_LocalVarInfo.element_size = sizeof(SlagObject*);
  type_ClassArray_of_HashTable_of_String_and_LocalVarInfo.method_init_object = (SlagFn) Array_of_HashTable_of_String_and_LocalVarInfo__init_object;
  type_ClassArray_of_HashTable_of_String_and_LocalVarInfo.dispatch_table = sxc_dispatch_table+9457;
  type_ClassArrayList_of_HashTable_of_String_and_LocalVarInfo.set_property_info( sxc_property_info, 1536, 3 );
  type_ClassArrayList_of_HashTable_of_String_and_LocalVarInfo.set_base_types(type_table,944);
  type_ClassArrayList_of_HashTable_of_String_and_LocalVarInfo.method_init_object = (SlagFn) ArrayList_of_HashTable_of_String_and_LocalVarInfo__init_object;
  type_ClassArrayList_of_HashTable_of_String_and_LocalVarInfo.dispatch_table = sxc_dispatch_table+9506;
  type_AspectReader_of_HashTableBin_of_Object_and_Object.set_base_types(type_table,951);
  type_AspectReader_of_Mapping_of_Object_and_Object.set_base_types(type_table,952);
  type_ClassHashTableValueReader_of_Object_and_Object.set_property_info( sxc_property_info, 1542, 2 );
  type_ClassHashTableValueReader_of_Object_and_Object.set_base_types(type_table,953);
  type_ClassHashTableValueReader_of_Object_and_Object.method_init_object = (SlagFn) HashTableValueReader_of_Object_and_Object__init_object;
  type_ClassHashTableValueReader_of_Object_and_Object.dispatch_table = sxc_dispatch_table+9555;
  type_ClassInvalidStateError.set_property_info( sxc_property_info, 1546, 2 );
  type_ClassInvalidStateError.set_base_types(type_table,956);
  type_ClassInvalidStateError.method_init_object = (SlagFn) InvalidStateError__init_object;
  type_ClassInvalidStateError.dispatch_table = sxc_dispatch_table+9604;
  type_ClassCmdCmpIs.set_property_info( sxc_property_info, 1550, 3 );
  type_ClassCmdCmpIs.set_base_types(type_table,959);
  type_ClassCmdCmpIs.method_init_object = (SlagFn) CmdCmpIs__init_object;
  type_ClassCmdCmpIs.dispatch_table = sxc_dispatch_table+9653;
  type_ClassArrayList_of_SlagFile.set_property_info( sxc_property_info, 1556, 3 );
  type_ClassArrayList_of_SlagFile.set_base_types(type_table,963);
  type_ClassArrayList_of_SlagFile.method_init_object = (SlagFn) ArrayList_of_SlagFile__init_object;
  type_ClassArrayList_of_SlagFile.dispatch_table = sxc_dispatch_table+9702;
  type_ClassCmdContextCall.set_property_info( sxc_property_info, 1562, 4 );
  type_ClassCmdContextCall.set_base_types(type_table,970);
  type_ClassCmdContextCall.method_init_object = (SlagFn) CmdContextCall__init_object;
  type_ClassCmdContextCall.dispatch_table = sxc_dispatch_table+9751;
  type_ClassCmdStaticCall.set_property_info( sxc_property_info, 1570, 4 );
  type_ClassCmdStaticCall.set_base_types(type_table,973);
  type_ClassCmdStaticCall.method_init_object = (SlagFn) CmdStaticCall__init_object;
  type_ClassCmdStaticCall.dispatch_table = sxc_dispatch_table+9800;
  type_ClassMapping_of_String_and_MethodInfo__.set_property_info( sxc_property_info, 1578, 2 );
  type_ClassMapping_of_String_and_MethodInfo__.set_base_types(type_table,977);
  type_ClassMapping_of_String_and_MethodInfo__.method_init_object = (SlagFn) Mapping_of_String_and_MethodInfo____init_object;
  type_ClassMapping_of_String_and_MethodInfo__.dispatch_table = sxc_dispatch_table+9849;
  type_AspectReader_of_Cmd.set_base_types(type_table,978);
  type_ClassArray_of_CmdWhichCase.set_base_types(type_table,979);
  type_ClassArray_of_CmdWhichCase.element_size = sizeof(SlagObject*);
  type_ClassArray_of_CmdWhichCase.method_init_object = (SlagFn) Array_of_CmdWhichCase__init_object;
  type_ClassArray_of_CmdWhichCase.dispatch_table = sxc_dispatch_table+9898;
  type_AspectReader_of_CmdWhichCase.set_base_types(type_table,981);
  type_ClassArrayReader_of_CmdWhichCase.set_property_info( sxc_property_info, 1582, 5 );
  type_ClassArrayReader_of_CmdWhichCase.set_base_types(type_table,982);
  type_ClassArrayReader_of_CmdWhichCase.method_init_object = (SlagFn) ArrayReader_of_CmdWhichCase__init_object;
  type_ClassArrayReader_of_CmdWhichCase.dispatch_table = sxc_dispatch_table+9947;
  type_ClassArray_of_Qualifiers.set_base_types(type_table,985);
  type_ClassArray_of_Qualifiers.element_size = sizeof(SlagObject*);
  type_ClassArray_of_Qualifiers.method_init_object = (SlagFn) Array_of_Qualifiers__init_object;
  type_ClassArray_of_Qualifiers.dispatch_table = sxc_dispatch_table+9996;
  type_ClassArray_of_CmdElseIf.set_base_types(type_table,987);
  type_ClassArray_of_CmdElseIf.element_size = sizeof(SlagObject*);
  type_ClassArray_of_CmdElseIf.method_init_object = (SlagFn) Array_of_CmdElseIf__init_object;
  type_ClassArray_of_CmdElseIf.dispatch_table = sxc_dispatch_table+10045;
  type_AspectList_of_CmdElseIf.set_base_types(type_table,989);
  type_AspectListOperations_of_CmdElseIf_and_ArrayList_of_CmdElseIf.set_base_types(type_table,993);
  type_ClassArrayList_of_CmdElseIf.set_property_info( sxc_property_info, 1592, 3 );
  type_ClassArrayList_of_CmdElseIf.set_base_types(type_table,998);
  type_ClassArrayList_of_CmdElseIf.method_init_object = (SlagFn) ArrayList_of_CmdElseIf__init_object;
  type_ClassArrayList_of_CmdElseIf.dispatch_table = sxc_dispatch_table+10094;
  type_ClassArray_of_Mapping_of_String_and_SignalHandler.set_base_types(type_table,1005);
  type_ClassArray_of_Mapping_of_String_and_SignalHandler.element_size = sizeof(SlagObject*);
  type_ClassArray_of_Mapping_of_String_and_SignalHandler.method_init_object = (SlagFn) Array_of_Mapping_of_String_and_SignalHandler__init_object;
  type_ClassArray_of_Mapping_of_String_and_SignalHandler.dispatch_table = sxc_dispatch_table+10143;
  type_ClassReferenceTable_of_String_and_SignalHandler.set_property_info( sxc_property_info, 1598, 2 );
  type_ClassReferenceTable_of_String_and_SignalHandler.set_base_types(type_table,1007);
  type_ClassReferenceTable_of_String_and_SignalHandler.method_init_object = (SlagFn) ReferenceTable_of_String_and_SignalHandler__init_object;
  type_ClassReferenceTable_of_String_and_SignalHandler.dispatch_table = sxc_dispatch_table+10192;
  type_ClassArrayReader_of_HashTableBin_of_Object_and_Object.set_property_info( sxc_property_info, 1602, 5 );
  type_ClassArrayReader_of_HashTableBin_of_Object_and_Object.set_base_types(type_table,1008);
  type_ClassArrayReader_of_HashTableBin_of_Object_and_Object.method_init_object = (SlagFn) ArrayReader_of_HashTableBin_of_Object_and_Object__init_object;
  type_ClassArrayReader_of_HashTableBin_of_Object_and_Object.dispatch_table = sxc_dispatch_table+10241;
  type_ClassMapping_of_String_and_Token__.set_property_info( sxc_property_info, 1612, 2 );
  type_ClassMapping_of_String_and_Token__.set_base_types(type_table,1011);
  type_ClassMapping_of_String_and_Token__.method_init_object = (SlagFn) Mapping_of_String_and_Token____init_object;
  type_ClassMapping_of_String_and_Token__.dispatch_table = sxc_dispatch_table+10290;
  type_ClassCmdCmpInstanceOf.set_property_info( sxc_property_info, 1616, 3 );
  type_ClassCmdCmpInstanceOf.set_base_types(type_table,1012);
  type_ClassCmdCmpInstanceOf.method_init_object = (SlagFn) CmdCmpInstanceOf__init_object;
  type_ClassCmdCmpInstanceOf.dispatch_table = sxc_dispatch_table+10339;
  type_ClassArray_of_ArrayList_of_TypeTemplate.set_base_types(type_table,1015);
  type_ClassArray_of_ArrayList_of_TypeTemplate.element_size = sizeof(SlagObject*);
  type_ClassArray_of_ArrayList_of_TypeTemplate.method_init_object = (SlagFn) Array_of_ArrayList_of_TypeTemplate__init_object;
  type_ClassArray_of_ArrayList_of_TypeTemplate.dispatch_table = sxc_dispatch_table+10388;
  type_AspectList_of_ArrayList_of_TypeTemplate.set_base_types(type_table,1017);
  type_AspectListOperations_of_ArrayList_of_TypeTemplate_and_ArrayList_of_ArrayList_of_TypeTemplate.set_base_types(type_table,1021);
  type_ClassArrayList_of_ArrayList_of_TypeTemplate.set_property_info( sxc_property_info, 1622, 3 );
  type_ClassArrayList_of_ArrayList_of_TypeTemplate.set_base_types(type_table,1026);
  type_ClassArrayList_of_ArrayList_of_TypeTemplate.method_init_object = (SlagFn) ArrayList_of_ArrayList_of_TypeTemplate__init_object;
  type_ClassArrayList_of_ArrayList_of_TypeTemplate.dispatch_table = sxc_dispatch_table+10437;
  type_ClassArrayReader_of_Token.set_property_info( sxc_property_info, 1628, 5 );
  type_ClassArrayReader_of_Token.set_base_types(type_table,1033);
  type_ClassArrayReader_of_Token.method_init_object = (SlagFn) ArrayReader_of_Token__init_object;
  type_ClassArrayReader_of_Token.dispatch_table = sxc_dispatch_table+10486;
  type_AspectListOperations_of_SlagError_and_ArrayList_of_SlagError.set_base_types(type_table,1036);
  type_ClassCmdLocalVarAccess.set_property_info( sxc_property_info, 1638, 2 );
  type_ClassCmdLocalVarAccess.set_base_types(type_table,1041);
  type_ClassCmdLocalVarAccess.method_init_object = (SlagFn) CmdLocalVarAccess__init_object;
  type_ClassCmdLocalVarAccess.dispatch_table = sxc_dispatch_table+10535;
  type_ClassCmdLocalVarWrite.set_property_info( sxc_property_info, 1642, 3 );
  type_ClassCmdLocalVarWrite.set_base_types(type_table,1044);
  type_ClassCmdLocalVarWrite.method_init_object = (SlagFn) CmdLocalVarWrite__init_object;
  type_ClassCmdLocalVarWrite.dispatch_table = sxc_dispatch_table+10584;
  type_AspectReader_of_Int64.set_base_types(type_table,1048);
  type_ClassArrayReader_of_Int64.set_property_info( sxc_property_info, 1648, 5 );
  type_ClassArrayReader_of_Int64.set_base_types(type_table,1049);
  type_ClassArrayReader_of_Int64.method_init_object = (SlagFn) ArrayReader_of_Int64__init_object;
  type_ClassArrayReader_of_Int64.dispatch_table = sxc_dispatch_table+10633;
  type_ClassBigInt.set_property_info( sxc_property_info, 1658, 2 );
  type_ClassBigInt.set_base_types(type_table,1052);
  type_ClassBigInt.method_init_object = (SlagFn) BigInt__init_object;
  type_ClassBigInt.dispatch_table = sxc_dispatch_table+10682;
  type_ClassParamInfo.set_property_info( sxc_property_info, 1662, 1 );
  type_ClassParamInfo.set_base_types(type_table,1053);
  type_ClassParamInfo.method_init_object = (SlagFn) ParamInfo__init_object;
  type_ClassParamInfo.dispatch_table = sxc_dispatch_table+10731;
  type_ClassStructureType.set_property_info( sxc_property_info, 1664, 3 );
  type_ClassStructureType.set_base_types(type_table,1054);
  type_ClassStructureType.method_init_object = (SlagFn) StructureType__init_object;
  type_ClassStructureType.dispatch_table = sxc_dispatch_table+10780;
  type_ClassCmdInitialAssignment.set_property_info( sxc_property_info, 1670, 2 );
  type_ClassCmdInitialAssignment.set_base_types(type_table,1056);
  type_ClassCmdInitialAssignment.method_init_object = (SlagFn) CmdInitialAssignment__init_object;
  type_ClassCmdInitialAssignment.dispatch_table = sxc_dispatch_table+10829;
  type_ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted.set_property_info( sxc_property_info, 1674, 3 );
  type_ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted.set_base_types(type_table,1058);
  type_ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted.method_init_object = (SlagFn) CmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted__init_object;
  type_ClassCmdBitwiseMovement_of_CmdRightXShifted_and_right_xshifted_and_cmd_right_xshifted.dispatch_table = sxc_dispatch_table+10878;
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign.set_property_info( sxc_property_info, 1680, 3 );
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign.set_base_types(type_table,1061);
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign.method_init_object = (SlagFn) CmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign__init_object;
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyAddAndAssign_and_PropertyInfo_and_cmd_this_property_add_and_assign.dispatch_table = sxc_dispatch_table+10927;
  type_ClassCmdCmpIsNotNull.set_property_info( sxc_property_info, 1686, 2 );
  type_ClassCmdCmpIsNotNull.set_base_types(type_table,1064);
  type_ClassCmdCmpIsNotNull.method_init_object = (SlagFn) CmdCmpIsNotNull__init_object;
  type_ClassCmdCmpIsNotNull.dispatch_table = sxc_dispatch_table+10976;
  type_ClassCmdLiteralReal64.set_property_info( sxc_property_info, 1690, 2 );
  type_ClassCmdLiteralReal64.set_base_types(type_table,1067);
  type_ClassCmdLiteralReal64.method_init_object = (SlagFn) CmdLiteralReal64__init_object;
  type_ClassCmdLiteralReal64.dispatch_table = sxc_dispatch_table+11025;
  type_ClassCmdCastToReal64.set_property_info( sxc_property_info, 1694, 2 );
  type_ClassCmdCastToReal64.set_base_types(type_table,1071);
  type_ClassCmdCastToReal64.method_init_object = (SlagFn) CmdCastToReal64__init_object;
  type_ClassCmdCastToReal64.dispatch_table = sxc_dispatch_table+11074;
  type_ClassArray_of_StructureType.set_base_types(type_table,1075);
  type_ClassArray_of_StructureType.element_size = sizeof(SlagObject*);
  type_ClassArray_of_StructureType.method_init_object = (SlagFn) Array_of_StructureType__init_object;
  type_ClassArray_of_StructureType.dispatch_table = sxc_dispatch_table+11123;
  type_ClassArrayReader_of_Mapping_of_Int32_and_Int32.set_property_info( sxc_property_info, 1698, 5 );
  type_ClassArrayReader_of_Mapping_of_Int32_and_Int32.set_base_types(type_table,1077);
  type_ClassArrayReader_of_Mapping_of_Int32_and_Int32.method_init_object = (SlagFn) ArrayReader_of_Mapping_of_Int32_and_Int32__init_object;
  type_ClassArrayReader_of_Mapping_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+11172;
  type_ClassCmdInitialConstructor.set_property_info( sxc_property_info, 1708, 2 );
  type_ClassCmdInitialConstructor.set_base_types(type_table,1080);
  type_ClassCmdInitialConstructor.method_init_object = (SlagFn) CmdInitialConstructor__init_object;
  type_ClassCmdInitialConstructor.dispatch_table = sxc_dispatch_table+11221;
  type_ClassRangeIteratorDescending_of_Int32.set_property_info( sxc_property_info, 1712, 3 );
  type_ClassRangeIteratorDescending_of_Int32.set_base_types(type_table,1082);
  type_ClassRangeIteratorDescending_of_Int32.method_init_object = (SlagFn) RangeIteratorDescending_of_Int32__init_object;
  type_ClassRangeIteratorDescending_of_Int32.dispatch_table = sxc_dispatch_table+11270;
  type_AspectListOperations_of_ControlStructureInfo_and_ArrayList_of_ControlStructureInfo.set_base_types(type_table,1085);
  type_ClassArray_of_Signal.set_base_types(type_table,1090);
  type_ClassArray_of_Signal.element_size = sizeof(SlagObject*);
  type_ClassArray_of_Signal.method_init_object = (SlagFn) Array_of_Signal__init_object;
  type_ClassArray_of_Signal.dispatch_table = sxc_dispatch_table+11319;
  type_AspectReadable_of_Signal.set_base_types(type_table,1092);
  type_AspectList_of_Signal.set_base_types(type_table,1093);
  type_AspectListOperations_of_Signal_and_ArrayList_of_Signal.set_base_types(type_table,1097);
  type_ClassArrayList_of_Signal.set_property_info( sxc_property_info, 1718, 3 );
  type_ClassArrayList_of_Signal.set_base_types(type_table,1102);
  type_ClassArrayList_of_Signal.method_init_object = (SlagFn) ArrayList_of_Signal__init_object;
  type_ClassArrayList_of_Signal.dispatch_table = sxc_dispatch_table+11368;
  type_ClassSignal.set_property_info( sxc_property_info, 1724, 2 );
  type_ClassSignal.set_base_types(type_table,1109);
  type_ClassSignal.method_init_object = (SlagFn) Signal__init_object;
  type_ClassSignal.dispatch_table = sxc_dispatch_table+11417;
  type_AspectList_of_Byte.set_base_types(type_table,1110);
  type_AspectListOperations_of_Byte_and_ArrayList_of_Byte.set_base_types(type_table,1115);
  type_ClassArrayList_of_Byte.set_property_info( sxc_property_info, 1728, 3 );
  type_ClassArrayList_of_Byte.set_base_types(type_table,1121);
  type_ClassArrayList_of_Byte.method_init_object = (SlagFn) ArrayList_of_Byte__init_object;
  type_ClassArrayList_of_Byte.dispatch_table = sxc_dispatch_table+11466;
  type_ClassCmdSingletonWrite.set_property_info( sxc_property_info, 1734, 3 );
  type_ClassCmdSingletonWrite.set_base_types(type_table,1129);
  type_ClassCmdSingletonWrite.method_init_object = (SlagFn) CmdSingletonWrite__init_object;
  type_ClassCmdSingletonWrite.dispatch_table = sxc_dispatch_table+11515;
  type_AspectReader_of_MethodInfo.set_base_types(type_table,1131);
  type_ClassArrayReader_of_MethodInfo.set_property_info( sxc_property_info, 1740, 5 );
  type_ClassArrayReader_of_MethodInfo.set_base_types(type_table,1132);
  type_ClassArrayReader_of_MethodInfo.method_init_object = (SlagFn) ArrayReader_of_MethodInfo__init_object;
  type_ClassArrayReader_of_MethodInfo.dispatch_table = sxc_dispatch_table+11564;
  type_AspectList_of_Int32.set_base_types(type_table,1135);
  type_AspectListOperations_of_Int32_and_ArrayList_of_Int32.set_base_types(type_table,1140);
  type_ClassLocalVarTable.set_property_info( sxc_property_info, 1750, 2 );
  type_ClassLocalVarTable.set_base_types(type_table,1146);
  type_ClassLocalVarTable.method_init_object = (SlagFn) LocalVarTable__init_object;
  type_ClassLocalVarTable.dispatch_table = sxc_dispatch_table+11613;
  type_AspectSet_of_Int32.set_base_types(type_table,1147);
  type_ClassHashSet_of_Int32.set_property_info( sxc_property_info, 1754, 1 );
  type_ClassHashSet_of_Int32.set_base_types(type_table,1149);
  type_ClassHashSet_of_Int32.method_init_object = (SlagFn) HashSet_of_Int32__init_object;
  type_ClassHashSet_of_Int32.dispatch_table = sxc_dispatch_table+11662;
  type_ClassArrayList_of_HashTableBin_of_Int32_and_Object.set_property_info( sxc_property_info, 1756, 3 );
  type_ClassArrayList_of_HashTableBin_of_Int32_and_Object.set_base_types(type_table,1155);
  type_ClassArrayList_of_HashTableBin_of_Int32_and_Object.method_init_object = (SlagFn) ArrayList_of_HashTableBin_of_Int32_and_Object__init_object;
  type_ClassArrayList_of_HashTableBin_of_Int32_and_Object.dispatch_table = sxc_dispatch_table+11711;
  type_ClassGenericHashTable_of_Int32_and_Object.set_property_info( sxc_property_info, 1762, 6 );
  type_ClassGenericHashTable_of_Int32_and_Object.set_base_types(type_table,1162);
  type_ClassGenericHashTable_of_Int32_and_Object.method_init_object = (SlagFn) GenericHashTable_of_Int32_and_Object__init_object;
  type_ClassGenericHashTable_of_Int32_and_Object.dispatch_table = sxc_dispatch_table+11760;
  type_ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object.set_property_info( sxc_property_info, 1774, 1 );
  type_ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object.set_base_types(type_table,1163);
  type_ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object.method_init_object = (SlagFn) HashTableBase_of_Int32_and_Cmd_and_Int32_and_Object__init_object;
  type_ClassHashTableBase_of_Int32_and_Cmd_and_Int32_and_Object.dispatch_table = sxc_dispatch_table+11809;
  type_ClassHashTable_of_Int32_and_Cmd.set_property_info( sxc_property_info, 1776, 1 );
  type_ClassHashTable_of_Int32_and_Cmd.set_base_types(type_table,1166);
  type_ClassHashTable_of_Int32_and_Cmd.method_init_object = (SlagFn) HashTable_of_Int32_and_Cmd__init_object;
  type_ClassHashTable_of_Int32_and_Cmd.dispatch_table = sxc_dispatch_table+11858;
  type_ClassArrayList_of_Int32.set_property_info( sxc_property_info, 1778, 3 );
  type_ClassArrayList_of_Int32.set_base_types(type_table,1170);
  type_ClassArrayList_of_Int32.method_init_object = (SlagFn) ArrayList_of_Int32__init_object;
  type_ClassArrayList_of_Int32.dispatch_table = sxc_dispatch_table+11907;
  type_ClassContext.set_property_info( sxc_property_info, 1784, 9 );
  type_ClassContext.set_base_types(type_table,1178);
  type_ClassContext.method_init_object = (SlagFn) Context__init_object;
  type_ClassContext.dispatch_table = sxc_dispatch_table+11956;
  type_ClassArray_of_SlagError.set_base_types(type_table,1179);
  type_ClassArray_of_SlagError.element_size = sizeof(SlagObject*);
  type_ClassArray_of_SlagError.method_init_object = (SlagFn) Array_of_SlagError__init_object;
  type_ClassArray_of_SlagError.dispatch_table = sxc_dispatch_table+12005;
  type_ClassCPPWriter.set_property_info( sxc_property_info, 1802, 10 );
  type_ClassCPPWriter.set_base_types(type_table,1181);
  type_ClassCPPWriter.method_init_object = (SlagFn) CPPWriter__init_object;
  type_ClassCPPWriter.dispatch_table = sxc_dispatch_table+12054;
  type_ClassNumberConversions.set_base_types(type_table,1182);
  type_ClassNumberConversions.method_init_object = (SlagFn) NumberConversions__init_object;
  type_ClassNumberConversions.dispatch_table = sxc_dispatch_table+12103;
  type_AspectReader_of_LocalVarInfo.set_base_types(type_table,1183);
  type_ClassArrayReader_of_LocalVarInfo.set_property_info( sxc_property_info, 1822, 5 );
  type_ClassArrayReader_of_LocalVarInfo.set_base_types(type_table,1184);
  type_ClassArrayReader_of_LocalVarInfo.method_init_object = (SlagFn) ArrayReader_of_LocalVarInfo__init_object;
  type_ClassArrayReader_of_LocalVarInfo.dispatch_table = sxc_dispatch_table+12152;
  type_ClassCmdRightXShifted.set_property_info( sxc_property_info, 1832, 3 );
  type_ClassCmdRightXShifted.set_base_types(type_table,1187);
  type_ClassCmdRightXShifted.method_init_object = (SlagFn) CmdRightXShifted__init_object;
  type_ClassCmdRightXShifted.dispatch_table = sxc_dispatch_table+12201;
  type_ClassCategoryInfo.set_property_info( sxc_property_info, 1838, 3 );
  type_ClassCategoryInfo.set_base_types(type_table,1191);
  type_ClassCategoryInfo.method_init_object = (SlagFn) CategoryInfo__init_object;
  type_ClassCategoryInfo.dispatch_table = sxc_dispatch_table+12250;
  type_ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment.set_property_info( sxc_property_info, 1844, 2 );
  type_ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment.set_base_types(type_table,1192);
  type_ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment.method_init_object = (SlagFn) CmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment__init_object;
  type_ClassCmdStepVar_of_CmdThisPropertyIncrement_and_PropertyInfo_and_cmd_this_property_increment.dispatch_table = sxc_dispatch_table+12299;
  type_ClassCmdThisPropertyIncrement.set_property_info( sxc_property_info, 1848, 2 );
  type_ClassCmdThisPropertyIncrement.set_base_types(type_table,1195);
  type_ClassCmdThisPropertyIncrement.method_init_object = (SlagFn) CmdThisPropertyIncrement__init_object;
  type_ClassCmdThisPropertyIncrement.dispatch_table = sxc_dispatch_table+12348;
  type_AspectReader_of_CategoryInfo.set_base_types(type_table,1199);
  type_AspectReadable_of_RuntimeType.set_base_types(type_table,1200);
  type_ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object.set_property_info( sxc_property_info, 1852, 1 );
  type_ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object.set_base_types(type_table,1201);
  type_ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_RuntimeType_and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_RuntimeType_and_Object_and_Object.dispatch_table = sxc_dispatch_table+12397;
  type_ClassHashTable_of_String_and_RuntimeType.set_property_info( sxc_property_info, 1854, 1 );
  type_ClassHashTable_of_String_and_RuntimeType.set_base_types(type_table,1204);
  type_ClassHashTable_of_String_and_RuntimeType.method_init_object = (SlagFn) HashTable_of_String_and_RuntimeType__init_object;
  type_ClassHashTable_of_String_and_RuntimeType.dispatch_table = sxc_dispatch_table+12446;
  type_ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod.set_property_info( sxc_property_info, 1856, 3 );
  type_ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod.set_base_types(type_table,1208);
  type_ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod.method_init_object = (SlagFn) CmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod__init_object;
  type_ClassCmdMathOp_of_CmdMod_and__MOD__and_MOD__and_cmd_mod.dispatch_table = sxc_dispatch_table+12495;
  type_ClassCmdMod.set_property_info( sxc_property_info, 1862, 3 );
  type_ClassCmdMod.set_base_types(type_table,1211);
  type_ClassCmdMod.method_init_object = (SlagFn) CmdMod__init_object;
  type_ClassCmdMod.dispatch_table = sxc_dispatch_table+12544;
  type_ClassBitWriter.set_property_info( sxc_property_info, 1868, 3 );
  type_ClassBitWriter.set_base_types(type_table,1215);
  type_ClassBitWriter.method_init_object = (SlagFn) BitWriter__init_object;
  type_ClassBitWriter.dispatch_table = sxc_dispatch_table+12593;
  type_ClassETCWriter.set_property_info( sxc_property_info, 1874, 9 );
  type_ClassETCWriter.set_base_types(type_table,1217);
  type_ClassETCWriter.method_init_object = (SlagFn) ETCWriter__init_object;
  type_ClassETCWriter.dispatch_table = sxc_dispatch_table+12642;
  type_ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object.set_property_info( sxc_property_info, 1892, 1 );
  type_ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object.set_base_types(type_table,1218);
  type_ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object.method_init_object = (SlagFn) HashTableBase_of_Int32_and_String_and_Int32_and_Object__init_object;
  type_ClassHashTableBase_of_Int32_and_String_and_Int32_and_Object.dispatch_table = sxc_dispatch_table+12691;
  type_ClassHashTable_of_Int32_and_String.set_property_info( sxc_property_info, 1894, 1 );
  type_ClassHashTable_of_Int32_and_String.set_base_types(type_table,1221);
  type_ClassHashTable_of_Int32_and_String.method_init_object = (SlagFn) HashTable_of_Int32_and_String__init_object;
  type_ClassHashTable_of_Int32_and_String.dispatch_table = sxc_dispatch_table+12740;
  type_ClassTypeMapping.set_property_info( sxc_property_info, 1896, 2 );
  type_ClassTypeMapping.set_base_types(type_table,1225);
  type_ClassTypeMapping.method_init_object = (SlagFn) TypeMapping__init_object;
  type_ClassTypeMapping.dispatch_table = sxc_dispatch_table+12789;
  type_AspectReader_of_String.set_base_types(type_table,1226);
  type_ClassCoerceReader_of_String.set_property_info( sxc_property_info, 1900, 1 );
  type_ClassCoerceReader_of_String.set_base_types(type_table,1227);
  type_ClassCoerceReader_of_String.method_init_object = (SlagFn) CoerceReader_of_String__init_object;
  type_ClassCoerceReader_of_String.dispatch_table = sxc_dispatch_table+12838;
  type_AspectReadable_of_Mapping_of_Object_and_Object.set_base_types(type_table,1230);
  type_AspectList_of_Mapping_of_Object_and_Object.set_base_types(type_table,1231);
  type_AspectList_of_StackTraceInfo.set_base_types(type_table,1235);
  type_AspectReadable_of_CmdWhichCase.set_base_types(type_table,1239);
  type_AspectList_of_CmdWhichCase.set_base_types(type_table,1240);
  type_AspectListOperations_of_CmdWhichCase_and_ArrayList_of_CmdWhichCase.set_base_types(type_table,1244);
  type_ClassNoNextValueError.set_property_info( sxc_property_info, 1902, 2 );
  type_ClassNoNextValueError.set_base_types(type_table,1249);
  type_ClassNoNextValueError.method_init_object = (SlagFn) NoNextValueError__init_object;
  type_ClassNoNextValueError.dispatch_table = sxc_dispatch_table+12887;
  type_ClassMapping_of_Object_and_Int32.set_property_info( sxc_property_info, 1906, 2 );
  type_ClassMapping_of_Object_and_Int32.set_base_types(type_table,1252);
  type_ClassMapping_of_Object_and_Int32.method_init_object = (SlagFn) Mapping_of_Object_and_Int32__init_object;
  type_ClassMapping_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+12936;
  type_ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor.set_property_info( sxc_property_info, 1910, 3 );
  type_ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor.set_base_types(type_table,1253);
  type_ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor.method_init_object = (SlagFn) CmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor__init_object;
  type_ClassCmdBitwiseOp_of_CmdXor_and__XOR__and_XOR__and_cmd_xor.dispatch_table = sxc_dispatch_table+12985;
  type_ClassCoerceReader_of_MethodInfo.set_property_info( sxc_property_info, 1916, 1 );
  type_ClassCoerceReader_of_MethodInfo.set_base_types(type_table,1256);
  type_ClassCoerceReader_of_MethodInfo.method_init_object = (SlagFn) CoerceReader_of_MethodInfo__init_object;
  type_ClassCoerceReader_of_MethodInfo.dispatch_table = sxc_dispatch_table+13034;
  type_ClassMapping_of_String_and_String.set_property_info( sxc_property_info, 1918, 2 );
  type_ClassMapping_of_String_and_String.set_base_types(type_table,1259);
  type_ClassMapping_of_String_and_String.method_init_object = (SlagFn) Mapping_of_String_and_String__init_object;
  type_ClassMapping_of_String_and_String.dispatch_table = sxc_dispatch_table+13083;
  type_AspectReader_of_SlagError.set_base_types(type_table,1260);
  type_ClassCmdIf.set_property_info( sxc_property_info, 1922, 7 );
  type_ClassCmdIf.set_base_types(type_table,1261);
  type_ClassCmdIf.method_init_object = (SlagFn) CmdIf__init_object;
  type_ClassCmdIf.dispatch_table = sxc_dispatch_table+13132;
  type_ClassCmdRemoveCurrent.set_property_info( sxc_property_info, 1936, 2 );
  type_ClassCmdRemoveCurrent.set_base_types(type_table,1264);
  type_ClassCmdRemoveCurrent.method_init_object = (SlagFn) CmdRemoveCurrent__init_object;
  type_ClassCmdRemoveCurrent.dispatch_table = sxc_dispatch_table+13181;
  type_ClassFile.set_property_info( sxc_property_info, 1940, 1 );
  type_ClassFile.set_base_types(type_table,1267);
  type_ClassFile.method_init_object = (SlagFn) File__init_object;
  type_ClassFile.dispatch_table = sxc_dispatch_table+13230;
  type_ClassSlagCompiler.set_property_info( sxc_property_info, 1942, 20 );
  type_ClassSlagCompiler.set_base_types(type_table,1271);
  type_ClassSlagCompiler.method_init_object = (SlagFn) SlagCompiler__init_object;
  type_ClassSlagCompiler.dispatch_table = sxc_dispatch_table+13279;
  type_ClassArrayReader_of_PropertyInfo.set_property_info( sxc_property_info, 1982, 5 );
  type_ClassArrayReader_of_PropertyInfo.set_base_types(type_table,1272);
  type_ClassArrayReader_of_PropertyInfo.method_init_object = (SlagFn) ArrayReader_of_PropertyInfo__init_object;
  type_ClassArrayReader_of_PropertyInfo.dispatch_table = sxc_dispatch_table+13328;
  type_ClassArray_of_ControlStructureInfo.set_base_types(type_table,1275);
  type_ClassArray_of_ControlStructureInfo.element_size = sizeof(SlagObject*);
  type_ClassArray_of_ControlStructureInfo.method_init_object = (SlagFn) Array_of_ControlStructureInfo__init_object;
  type_ClassArray_of_ControlStructureInfo.dispatch_table = sxc_dispatch_table+13377;
  type_AspectReader_of_ControlStructureInfo.set_base_types(type_table,1277);
  type_ClassArrayReader_of_ControlStructureInfo.set_property_info( sxc_property_info, 1992, 5 );
  type_ClassArrayReader_of_ControlStructureInfo.set_base_types(type_table,1278);
  type_ClassArrayReader_of_ControlStructureInfo.method_init_object = (SlagFn) ArrayReader_of_ControlStructureInfo__init_object;
  type_ClassArrayReader_of_ControlStructureInfo.dispatch_table = sxc_dispatch_table+13426;
  type_ClassCmdNot.set_property_info( sxc_property_info, 2002, 2 );
  type_ClassCmdNot.set_base_types(type_table,1281);
  type_ClassCmdNot.method_init_object = (SlagFn) CmdNot__init_object;
  type_ClassCmdNot.dispatch_table = sxc_dispatch_table+13475;
  type_ClassBitwiseOperations.set_base_types(type_table,1284);
  type_ClassBitwiseOperations.method_init_object = (SlagFn) BitwiseOperations__init_object;
  type_ClassBitwiseOperations.dispatch_table = sxc_dispatch_table+13524;
  type_ClassCmdXor.set_property_info( sxc_property_info, 2006, 3 );
  type_ClassCmdXor.set_base_types(type_table,1285);
  type_ClassCmdXor.method_init_object = (SlagFn) CmdXor__init_object;
  type_ClassCmdXor.dispatch_table = sxc_dispatch_table+13573;
  type_AspectListOperations_of_Mapping_of_Object_and_Object_and_ArrayList_of_Mapping_of_Object_and_Object.set_base_types(type_table,1289);
  type_ClassCmdDuplicate.set_property_info( sxc_property_info, 2012, 2 );
  type_ClassCmdDuplicate.set_base_types(type_table,1294);
  type_ClassCmdDuplicate.method_init_object = (SlagFn) CmdDuplicate__init_object;
  type_ClassCmdDuplicate.dispatch_table = sxc_dispatch_table+13622;
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign.set_property_info( sxc_property_info, 2016, 3 );
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign.set_base_types(type_table,1297);
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign.method_init_object = (SlagFn) CmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign__init_object;
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyModAndAssign_and_PropertyInfo_and_cmd_this_property_mod_and_assign.dispatch_table = sxc_dispatch_table+13671;
  type_ClassCmdThisPropertyModAndAssign.set_property_info( sxc_property_info, 2022, 3 );
  type_ClassCmdThisPropertyModAndAssign.set_base_types(type_table,1300);
  type_ClassCmdThisPropertyModAndAssign.method_init_object = (SlagFn) CmdThisPropertyModAndAssign__init_object;
  type_ClassCmdThisPropertyModAndAssign.dispatch_table = sxc_dispatch_table+13720;
  type_ClassCmdLiteralInt32.set_property_info( sxc_property_info, 2028, 2 );
  type_ClassCmdLiteralInt32.set_base_types(type_table,1304);
  type_ClassCmdLiteralInt32.method_init_object = (SlagFn) CmdLiteralInt32__init_object;
  type_ClassCmdLiteralInt32.dispatch_table = sxc_dispatch_table+13769;
  type_ClassCmdCmpNE.set_property_info( sxc_property_info, 2032, 3 );
  type_ClassCmdCmpNE.set_base_types(type_table,1308);
  type_ClassCmdCmpNE.method_init_object = (SlagFn) CmdCmpNE__init_object;
  type_ClassCmdCmpNE.dispatch_table = sxc_dispatch_table+13818;
  type_ClassSpecializedComparator_2167.set_base_types(type_table,1313);
  type_ClassSpecializedComparator_2167.method_init_object = (SlagFn) SpecializedComparator_2167__init_object;
  type_ClassSpecializedComparator_2167.dispatch_table = sxc_dispatch_table+13867;
  type_ClassArrayList_of_CmdWhichCase.set_property_info( sxc_property_info, 2038, 3 );
  type_ClassArrayList_of_CmdWhichCase.set_base_types(type_table,1315);
  type_ClassArrayList_of_CmdWhichCase.method_init_object = (SlagFn) ArrayList_of_CmdWhichCase__init_object;
  type_ClassArrayList_of_CmdWhichCase.dispatch_table = sxc_dispatch_table+13916;
  type_ClassCmdWhich.set_property_info( sxc_property_info, 2044, 8 );
  type_ClassCmdWhich.set_base_types(type_table,1322);
  type_ClassCmdWhich.method_init_object = (SlagFn) CmdWhich__init_object;
  type_ClassCmdWhich.dispatch_table = sxc_dispatch_table+13965;
  type_ClassCmdAs.set_property_info( sxc_property_info, 2060, 3 );
  type_ClassCmdAs.set_base_types(type_table,1325);
  type_ClassCmdAs.method_init_object = (SlagFn) CmdAs__init_object;
  type_ClassCmdAs.dispatch_table = sxc_dispatch_table+14014;
  type_ClassCmdArrayDuplicate.set_property_info( sxc_property_info, 2066, 2 );
  type_ClassCmdArrayDuplicate.set_base_types(type_table,1328);
  type_ClassCmdArrayDuplicate.method_init_object = (SlagFn) CmdArrayDuplicate__init_object;
  type_ClassCmdArrayDuplicate.dispatch_table = sxc_dispatch_table+14063;
  type_ClassCmdLiteralByte.set_property_info( sxc_property_info, 2070, 2 );
  type_ClassCmdLiteralByte.set_base_types(type_table,1330);
  type_ClassCmdLiteralByte.method_init_object = (SlagFn) CmdLiteralByte__init_object;
  type_ClassCmdLiteralByte.dispatch_table = sxc_dispatch_table+14112;
  type_ClassCmdCastToByte.set_property_info( sxc_property_info, 2074, 2 );
  type_ClassCmdCastToByte.set_base_types(type_table,1334);
  type_ClassCmdCastToByte.method_init_object = (SlagFn) CmdCastToByte__init_object;
  type_ClassCmdCastToByte.dispatch_table = sxc_dispatch_table+14161;
  type_ClassCmdReturnNil.set_property_info( sxc_property_info, 2078, 2 );
  type_ClassCmdReturnNil.set_base_types(type_table,1338);
  type_ClassCmdReturnNil.method_init_object = (SlagFn) CmdReturnNil__init_object;
  type_ClassCmdReturnNil.dispatch_table = sxc_dispatch_table+14210;
  type_ClassFileManager.set_property_info( sxc_property_info, 2082, 4 );
  type_ClassFileManager.set_base_types(type_table,1341);
  type_ClassFileManager.method_init_object = (SlagFn) FileManager__init_object;
  type_ClassFileManager.dispatch_table = sxc_dispatch_table+14259;
  type_ClassArrayReader_of_Mapping_of_Int32_and_Object.set_property_info( sxc_property_info, 2090, 5 );
  type_ClassArrayReader_of_Mapping_of_Int32_and_Object.set_base_types(type_table,1342);
  type_ClassArrayReader_of_Mapping_of_Int32_and_Object.method_init_object = (SlagFn) ArrayReader_of_Mapping_of_Int32_and_Object__init_object;
  type_ClassArrayReader_of_Mapping_of_Int32_and_Object.dispatch_table = sxc_dispatch_table+14308;
  type_ClassMapping_of_String_and_SignalHandler.set_property_info( sxc_property_info, 2100, 2 );
  type_ClassMapping_of_String_and_SignalHandler.set_base_types(type_table,1345);
  type_ClassMapping_of_String_and_SignalHandler.method_init_object = (SlagFn) Mapping_of_String_and_SignalHandler__init_object;
  type_ClassMapping_of_String_and_SignalHandler.dispatch_table = sxc_dispatch_table+14357;
  type_ClassNativeData.set_base_types(type_table,1346);
  type_ClassNativeData.method_init_object = (SlagFn) NativeData__init_object;
  type_ClassNativeData.method_clean_up = (SlagFn) NativeData__clean_up;
  type_ClassNativeData.dispatch_table = sxc_dispatch_table+14406;
  type_ClassCmdThrow.set_property_info( sxc_property_info, 2104, 2 );
  type_ClassCmdThrow.set_base_types(type_table,1348);
  type_ClassCmdThrow.method_init_object = (SlagFn) CmdThrow__init_object;
  type_ClassCmdThrow.dispatch_table = sxc_dispatch_table+14455;
  type_ClassNoSuchElementError.set_property_info( sxc_property_info, 2108, 2 );
  type_ClassNoSuchElementError.set_base_types(type_table,1351);
  type_ClassNoSuchElementError.method_init_object = (SlagFn) NoSuchElementError__init_object;
  type_ClassNoSuchElementError.dispatch_table = sxc_dispatch_table+14504;
  type_ClassCmdAssignNewObject.set_property_info( sxc_property_info, 2112, 3 );
  type_ClassCmdAssignNewObject.set_base_types(type_table,1354);
  type_ClassCmdAssignNewObject.method_init_object = (SlagFn) CmdAssignNewObject__init_object;
  type_ClassCmdAssignNewObject.dispatch_table = sxc_dispatch_table+14553;
  type_ClassSocketError.set_property_info( sxc_property_info, 2118, 2 );
  type_ClassSocketError.set_base_types(type_table,1356);
  type_ClassSocketError.method_init_object = (SlagFn) SocketError__init_object;
  type_ClassSocketError.dispatch_table = sxc_dispatch_table+14602;
  type_ClassCmdCastToInt32.set_property_info( sxc_property_info, 2122, 2 );
  type_ClassCmdCastToInt32.set_base_types(type_table,1359);
  type_ClassCmdCastToInt32.method_init_object = (SlagFn) CmdCastToInt32__init_object;
  type_ClassCmdCastToInt32.dispatch_table = sxc_dispatch_table+14651;
  type_ClassMapping_of_String_and_TypeInfo.set_property_info( sxc_property_info, 2126, 2 );
  type_ClassMapping_of_String_and_TypeInfo.set_base_types(type_table,1363);
  type_ClassMapping_of_String_and_TypeInfo.method_init_object = (SlagFn) Mapping_of_String_and_TypeInfo__init_object;
  type_ClassMapping_of_String_and_TypeInfo.dispatch_table = sxc_dispatch_table+14700;
  type_ClassCmdWhichCase.set_property_info( sxc_property_info, 2130, 3 );
  type_ClassCmdWhichCase.set_base_types(type_table,1364);
  type_ClassCmdWhichCase.method_init_object = (SlagFn) CmdWhichCase__init_object;
  type_ClassCmdWhichCase.dispatch_table = sxc_dispatch_table+14749;
  type_ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt.set_property_info( sxc_property_info, 2136, 3 );
  type_ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt.set_base_types(type_table,1366);
  type_ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt.method_init_object = (SlagFn) CmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt__init_object;
  type_ClassCmdCmpRelative_of_CmdCmpGT_and__and_CmdCmpEQ_and_1_and_cmd_cmp_gt.dispatch_table = sxc_dispatch_table+14798;
  type_ClassSpecializedDelegate_____of_SignalHandler_and_delegate_dummy.set_property_info( sxc_property_info, 2142, 1 );
  type_ClassSpecializedDelegate_____of_SignalHandler_and_delegate_dummy.set_base_types(type_table,1370);
  type_ClassSpecializedDelegate_____of_SignalHandler_and_delegate_dummy.method_init_object = (SlagFn) SpecializedDelegate_____of_SignalHandler_and_delegate_dummy__init_object;
  type_ClassSpecializedDelegate_____of_SignalHandler_and_delegate_dummy.dispatch_table = sxc_dispatch_table+14847;
  type_ClassCmdUnresolvedNewObject.set_property_info( sxc_property_info, 2144, 3 );
  type_ClassCmdUnresolvedNewObject.set_base_types(type_table,1373);
  type_ClassCmdUnresolvedNewObject.method_init_object = (SlagFn) CmdUnresolvedNewObject__init_object;
  type_ClassCmdUnresolvedNewObject.dispatch_table = sxc_dispatch_table+14896;
  type_ClassArrayReader_of_ParameterInfo.set_property_info( sxc_property_info, 2150, 5 );
  type_ClassArrayReader_of_ParameterInfo.set_base_types(type_table,1375);
  type_ClassArrayReader_of_ParameterInfo.method_init_object = (SlagFn) ArrayReader_of_ParameterInfo__init_object;
  type_ClassArrayReader_of_ParameterInfo.dispatch_table = sxc_dispatch_table+14945;
  type_ClassHeapSort_of_MethodInfo.set_property_info( sxc_property_info, 2160, 1 );
  type_ClassHeapSort_of_MethodInfo.set_base_types(type_table,1378);
  type_ClassHeapSort_of_MethodInfo.method_init_object = (SlagFn) HeapSort_of_MethodInfo__init_object;
  type_ClassHeapSort_of_MethodInfo.dispatch_table = sxc_dispatch_table+14994;
  type_ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul.set_property_info( sxc_property_info, 2162, 3 );
  type_ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul.set_base_types(type_table,1379);
  type_ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul.method_init_object = (SlagFn) CmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul__init_object;
  type_ClassCmdMathOp_of_CmdMul_and__MUL__and_MUL__and_cmd_mul.dispatch_table = sxc_dispatch_table+15043;
  type_ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object.set_property_info( sxc_property_info, 2168, 1 );
  type_ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object.set_base_types(type_table,1382);
  type_ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object.method_init_object = (SlagFn) HashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object__init_object;
  type_ClassHashTableBase_of_Int32_and_KeywordPairing_and_Int32_and_Object.dispatch_table = sxc_dispatch_table+15092;
  type_ClassHashTable_of_Int32_and_KeywordPairing.set_property_info( sxc_property_info, 2170, 1 );
  type_ClassHashTable_of_Int32_and_KeywordPairing.set_base_types(type_table,1385);
  type_ClassHashTable_of_Int32_and_KeywordPairing.method_init_object = (SlagFn) HashTable_of_Int32_and_KeywordPairing__init_object;
  type_ClassHashTable_of_Int32_and_KeywordPairing.dispatch_table = sxc_dispatch_table+15141;
  type_AspectList_of_Object.set_base_types(type_table,1389);
  type_AspectListOperations_of_Object_and_ArrayList_of_Object.set_base_types(type_table,1393);
  type_ClassArrayList_of_Object.set_property_info( sxc_property_info, 2172, 3 );
  type_ClassArrayList_of_Object.set_base_types(type_table,1398);
  type_ClassArrayList_of_Object.method_init_object = (SlagFn) ArrayList_of_Object__init_object;
  type_ClassArrayList_of_Object.dispatch_table = sxc_dispatch_table+15190;
  type_CompoundParseReaderMark.set_property_info( sxc_property_info, 2178, 4 );
  type_AspectReader_of_Char.set_base_types(type_table,1405);
  type_ClassParseReader.set_property_info( sxc_property_info, 2186, 7 );
  type_ClassParseReader.set_base_types(type_table,1406);
  type_ClassParseReader.method_init_object = (SlagFn) ParseReader__init_object;
  type_ClassParseReader.dispatch_table = sxc_dispatch_table+15239;
  type_ClassArrayReader_of_Cmd.set_property_info( sxc_property_info, 2200, 5 );
  type_ClassArrayReader_of_Cmd.set_base_types(type_table,1409);
  type_ClassArrayReader_of_Cmd.method_init_object = (SlagFn) ArrayReader_of_Cmd__init_object;
  type_ClassArrayReader_of_Cmd.dispatch_table = sxc_dispatch_table+15288;
  type_AspectList_of_StructureType.set_base_types(type_table,1412);
  type_ClassCmdLiteralString.set_property_info( sxc_property_info, 2210, 3 );
  type_ClassCmdLiteralString.set_base_types(type_table,1416);
  type_ClassCmdLiteralString.method_init_object = (SlagFn) CmdLiteralString__init_object;
  type_ClassCmdLiteralString.dispatch_table = sxc_dispatch_table+15337;
  type_ClassStringReader.set_property_info( sxc_property_info, 2216, 3 );
  type_ClassStringReader.set_base_types(type_table,1419);
  type_ClassStringReader.method_init_object = (SlagFn) StringReader__init_object;
  type_ClassStringReader.dispatch_table = sxc_dispatch_table+15386;
  type_ClassArrayReverseReader_of_Cmd.set_property_info( sxc_property_info, 2222, 5 );
  type_ClassArrayReverseReader_of_Cmd.set_base_types(type_table,1422);
  type_ClassArrayReverseReader_of_Cmd.method_init_object = (SlagFn) ArrayReverseReader_of_Cmd__init_object;
  type_ClassArrayReverseReader_of_Cmd.dispatch_table = sxc_dispatch_table+15435;
  type_ClassMapping_of_Int32_and_Cmd.set_property_info( sxc_property_info, 2232, 2 );
  type_ClassMapping_of_Int32_and_Cmd.set_base_types(type_table,1426);
  type_ClassMapping_of_Int32_and_Cmd.method_init_object = (SlagFn) Mapping_of_Int32_and_Cmd__init_object;
  type_ClassMapping_of_Int32_and_Cmd.dispatch_table = sxc_dispatch_table+15484;
  type_ClassCmdNextIteration.set_property_info( sxc_property_info, 2236, 2 );
  type_ClassCmdNextIteration.set_base_types(type_table,1427);
  type_ClassCmdNextIteration.method_init_object = (SlagFn) CmdNextIteration__init_object;
  type_ClassCmdNextIteration.dispatch_table = sxc_dispatch_table+15533;
  type_ClassCmdEscape.set_property_info( sxc_property_info, 2240, 2 );
  type_ClassCmdEscape.set_base_types(type_table,1430);
  type_ClassCmdEscape.method_init_object = (SlagFn) CmdEscape__init_object;
  type_ClassCmdEscape.dispatch_table = sxc_dispatch_table+15582;
  type_ClassCmdForEachOf.set_property_info( sxc_property_info, 2244, 6 );
  type_ClassCmdForEachOf.set_base_types(type_table,1433);
  type_ClassCmdForEachOf.method_init_object = (SlagFn) CmdForEachOf__init_object;
  type_ClassCmdForEachOf.dispatch_table = sxc_dispatch_table+15631;
  type_ClassCmdNewCompound.set_property_info( sxc_property_info, 2256, 3 );
  type_ClassCmdNewCompound.set_base_types(type_table,1437);
  type_ClassCmdNewCompound.method_init_object = (SlagFn) CmdNewCompound__init_object;
  type_ClassCmdNewCompound.dispatch_table = sxc_dispatch_table+15680;
  type_ClassFileWriter.set_property_info( sxc_property_info, 2262, 1 );
  type_ClassFileWriter.set_base_types(type_table,1439);
  type_ClassFileWriter.method_init_object = (SlagFn) FileWriter__init_object;
  type_ClassFileWriter.method_clean_up = (SlagFn) FileWriter__clean_up;
  type_ClassFileWriter.dispatch_table = sxc_dispatch_table+15729;
  type_AspectReader_of_ParamInfo.set_base_types(type_table,1443);
  type_ClassArrayReader_of_ParamInfo.set_property_info( sxc_property_info, 2264, 5 );
  type_ClassArrayReader_of_ParamInfo.set_base_types(type_table,1444);
  type_ClassArrayReader_of_ParamInfo.method_init_object = (SlagFn) ArrayReader_of_ParamInfo__init_object;
  type_ClassArrayReader_of_ParamInfo.dispatch_table = sxc_dispatch_table+15778;
  type_ClassHashTableKeyReader_of_Object_and_Int32.set_property_info( sxc_property_info, 2274, 2 );
  type_ClassHashTableKeyReader_of_Object_and_Int32.set_base_types(type_table,1447);
  type_ClassHashTableKeyReader_of_Object_and_Int32.method_init_object = (SlagFn) HashTableKeyReader_of_Object_and_Int32__init_object;
  type_ClassHashTableKeyReader_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+15827;
  type_AspectList_of_Qualifiers.set_base_types(type_table,1450);
  type_AspectListOperations_of_Qualifiers_and_ArrayList_of_Qualifiers.set_base_types(type_table,1454);
  type_ClassStackTraceInfo.set_property_info( sxc_property_info, 2278, 3 );
  type_ClassStackTraceInfo.set_base_types(type_table,1459);
  type_ClassStackTraceInfo.method_init_object = (SlagFn) StackTraceInfo__init_object;
  type_ClassStackTraceInfo.dispatch_table = sxc_dispatch_table+15876;
  type_ClassArrayReader_of_Qualifiers.set_property_info( sxc_property_info, 2284, 5 );
  type_ClassArrayReader_of_Qualifiers.set_base_types(type_table,1460);
  type_ClassArrayReader_of_Qualifiers.method_init_object = (SlagFn) ArrayReader_of_Qualifiers__init_object;
  type_ClassArrayReader_of_Qualifiers.dispatch_table = sxc_dispatch_table+15925;
  type_ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign.set_property_info( sxc_property_info, 2294, 3 );
  type_ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign.set_base_types(type_table,1463);
  type_ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign.method_init_object = (SlagFn) CmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign__init_object;
  type_ClassCmdModifyAndAssign_of_CmdLocalVarAddAndAssign_and_MethodVarInfo_and_cmd_local_var_add_and_assign.dispatch_table = sxc_dispatch_table+15974;
  type_ClassCmdLocalVarAddAndAssign.set_property_info( sxc_property_info, 2300, 3 );
  type_ClassCmdLocalVarAddAndAssign.set_base_types(type_table,1466);
  type_ClassCmdLocalVarAddAndAssign.method_init_object = (SlagFn) CmdLocalVarAddAndAssign__init_object;
  type_ClassCmdLocalVarAddAndAssign.dispatch_table = sxc_dispatch_table+16023;
  type_ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object.set_property_info( sxc_property_info, 2306, 1 );
  type_ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object.set_base_types(type_table,1470);
  type_ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object.method_init_object = (SlagFn) HashTableBase_of_String_and_Qualifiers_and_Object_and_Object__init_object;
  type_ClassHashTableBase_of_String_and_Qualifiers_and_Object_and_Object.dispatch_table = sxc_dispatch_table+16072;
  type_ClassHashTable_of_String_and_Qualifiers.set_property_info( sxc_property_info, 2308, 1 );
  type_ClassHashTable_of_String_and_Qualifiers.set_base_types(type_table,1473);
  type_ClassHashTable_of_String_and_Qualifiers.method_init_object = (SlagFn) HashTable_of_String_and_Qualifiers__init_object;
  type_ClassHashTable_of_String_and_Qualifiers.dispatch_table = sxc_dispatch_table+16121;
  type_AspectListOperations_of_Char_and_StringBuilder.set_base_types(type_table,1477);
  type_ClassStringBuilder.set_property_info( sxc_property_info, 2310, 1 );
  type_ClassStringBuilder.set_base_types(type_table,1483);
  type_ClassStringBuilder.method_init_object = (SlagFn) StringBuilder__init_object;
  type_ClassStringBuilder.dispatch_table = sxc_dispatch_table+16170;
  type_ClassSlagScanner.set_property_info( sxc_property_info, 2312, 10 );
  type_ClassSlagScanner.set_base_types(type_table,1493);
  type_ClassSlagScanner.method_init_object = (SlagFn) SlagScanner__init_object;
  type_ClassSlagScanner.dispatch_table = sxc_dispatch_table+16219;
  type_ClassSlagPreprocessor.set_property_info( sxc_property_info, 2332, 5 );
  type_ClassSlagPreprocessor.set_base_types(type_table,1496);
  type_ClassSlagPreprocessor.method_init_object = (SlagFn) SlagPreprocessor__init_object;
  type_ClassSlagPreprocessor.dispatch_table = sxc_dispatch_table+16268;
  type_ClassCmdBreakpoint.set_property_info( sxc_property_info, 2342, 2 );
  type_ClassCmdBreakpoint.set_base_types(type_table,1500);
  type_ClassCmdBreakpoint.method_init_object = (SlagFn) CmdBreakpoint__init_object;
  type_ClassCmdBreakpoint.dispatch_table = sxc_dispatch_table+16317;
  type_ClassCmdContingent.set_property_info( sxc_property_info, 2346, 6 );
  type_ClassCmdContingent.set_base_types(type_table,1503);
  type_ClassCmdContingent.method_init_object = (SlagFn) CmdContingent__init_object;
  type_ClassCmdContingent.dispatch_table = sxc_dispatch_table+16366;
  type_ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted.set_property_info( sxc_property_info, 2358, 3 );
  type_ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted.set_base_types(type_table,1506);
  type_ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted.method_init_object = (SlagFn) CmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted__init_object;
  type_ClassCmdBitwiseMovement_of_CmdRightShifted_and_right_shifted_and_cmd_right_shifted.dispatch_table = sxc_dispatch_table+16415;
  type_ClassCmdLoop.set_property_info( sxc_property_info, 2364, 4 );
  type_ClassCmdLoop.set_base_types(type_table,1509);
  type_ClassCmdLoop.method_init_object = (SlagFn) CmdLoop__init_object;
  type_ClassCmdLoop.dispatch_table = sxc_dispatch_table+16464;
  type_ClassDate.set_property_info( sxc_property_info, 2372, 7 );
  type_ClassDate.set_base_types(type_table,1512);
  type_ClassDate.method_init_object = (SlagFn) Date__init_object;
  type_ClassDate.dispatch_table = sxc_dispatch_table+16513;
  type_ClassStringManager.set_property_info( sxc_property_info, 2386, 2 );
  type_ClassStringManager.set_base_types(type_table,1513);
  type_ClassStringManager.method_init_object = (SlagFn) StringManager__init_object;
  type_ClassStringManager.dispatch_table = sxc_dispatch_table+16562;
  type_ClassMapping_of_Int32_and_Object.set_property_info( sxc_property_info, 2390, 2 );
  type_ClassMapping_of_Int32_and_Object.set_base_types(type_table,1514);
  type_ClassMapping_of_Int32_and_Object.method_init_object = (SlagFn) Mapping_of_Int32_and_Object__init_object;
  type_ClassMapping_of_Int32_and_Object.dispatch_table = sxc_dispatch_table+16611;
  type_ClassCmdLiteralReal32.set_property_info( sxc_property_info, 2394, 2 );
  type_ClassCmdLiteralReal32.set_base_types(type_table,1515);
  type_ClassCmdLiteralReal32.method_init_object = (SlagFn) CmdLiteralReal32__init_object;
  type_ClassCmdLiteralReal32.dispatch_table = sxc_dispatch_table+16660;
  type_ClassCmdCastToReal32.set_property_info( sxc_property_info, 2398, 2 );
  type_ClassCmdCastToReal32.set_base_types(type_table,1519);
  type_ClassCmdCastToReal32.method_init_object = (SlagFn) CmdCastToReal32__init_object;
  type_ClassCmdCastToReal32.dispatch_table = sxc_dispatch_table+16709;
  type_ClassJavaWriter.set_property_info( sxc_property_info, 2402, 9 );
  type_ClassJavaWriter.set_base_types(type_table,1523);
  type_ClassJavaWriter.method_init_object = (SlagFn) JavaWriter__init_object;
  type_ClassJavaWriter.dispatch_table = sxc_dispatch_table+16758;
  type_ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement.set_property_info( sxc_property_info, 2420, 2 );
  type_ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement.set_base_types(type_table,1524);
  type_ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement.method_init_object = (SlagFn) CmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement__init_object;
  type_ClassCmdStepVar_of_CmdLocalVarDecrement_and_MethodVarInfo_and_cmd_local_var_decrement.dispatch_table = sxc_dispatch_table+16807;
  type_ClassMissingReturnError.set_property_info( sxc_property_info, 2424, 2 );
  type_ClassMissingReturnError.set_base_types(type_table,1527);
  type_ClassMissingReturnError.method_init_object = (SlagFn) MissingReturnError__init_object;
  type_ClassMissingReturnError.dispatch_table = sxc_dispatch_table+16856;
  type_ClassSlagScannerManager.set_property_info( sxc_property_info, 2428, 3 );
  type_ClassSlagScannerManager.set_base_types(type_table,1530);
  type_ClassSlagScannerManager.method_init_object = (SlagFn) SlagScannerManager__init_object;
  type_ClassSlagScannerManager.dispatch_table = sxc_dispatch_table+16905;
  type_ClassArrayList_of_Qualifiers.set_property_info( sxc_property_info, 2434, 3 );
  type_ClassArrayList_of_Qualifiers.set_base_types(type_table,1531);
  type_ClassArrayList_of_Qualifiers.method_init_object = (SlagFn) ArrayList_of_Qualifiers__init_object;
  type_ClassArrayList_of_Qualifiers.dispatch_table = sxc_dispatch_table+16954;
  type_ClassArrayReader_of_Char.set_property_info( sxc_property_info, 2440, 5 );
  type_ClassArrayReader_of_Char.set_base_types(type_table,1538);
  type_ClassArrayReader_of_Char.method_init_object = (SlagFn) ArrayReader_of_Char__init_object;
  type_ClassArrayReader_of_Char.dispatch_table = sxc_dispatch_table+17003;
  type_ClassCmdDynamicCall.set_property_info( sxc_property_info, 2450, 4 );
  type_ClassCmdDynamicCall.set_base_types(type_table,1541);
  type_ClassCmdDynamicCall.method_init_object = (SlagFn) CmdDynamicCall__init_object;
  type_ClassCmdDynamicCall.dispatch_table = sxc_dispatch_table+17052;
  type_ClassCmdReturnValue.set_property_info( sxc_property_info, 2458, 3 );
  type_ClassCmdReturnValue.set_base_types(type_table,1545);
  type_ClassCmdReturnValue.method_init_object = (SlagFn) CmdReturnValue__init_object;
  type_ClassCmdReturnValue.dispatch_table = sxc_dispatch_table+17101;
  type_ClassCmdAdd.set_property_info( sxc_property_info, 2464, 3 );
  type_ClassCmdAdd.set_base_types(type_table,1548);
  type_ClassCmdAdd.method_init_object = (SlagFn) CmdAdd__init_object;
  type_ClassCmdAdd.dispatch_table = sxc_dispatch_table+17150;
  type_ClassLiteralTerm.set_property_info( sxc_property_info, 2470, 1 );
  type_ClassLiteralTerm.set_base_types(type_table,1552);
  type_ClassLiteralTerm.method_init_object = (SlagFn) LiteralTerm__init_object;
  type_ClassLiteralTerm.dispatch_table = sxc_dispatch_table+17199;
  type_ClassArrayList_of_SlagError.set_property_info( sxc_property_info, 2472, 3 );
  type_ClassArrayList_of_SlagError.set_base_types(type_table,1554);
  type_ClassArrayList_of_SlagError.method_init_object = (SlagFn) ArrayList_of_SlagError__init_object;
  type_ClassArrayList_of_SlagError.dispatch_table = sxc_dispatch_table+17248;
  type_ClassCmdExp.set_property_info( sxc_property_info, 2478, 3 );
  type_ClassCmdExp.set_base_types(type_table,1561);
  type_ClassCmdExp.method_init_object = (SlagFn) CmdExp__init_object;
  type_ClassCmdExp.dispatch_table = sxc_dispatch_table+17297;
  type_AspectListOperations_of_StructureType_and_ArrayList_of_StructureType.set_base_types(type_table,1565);
  type_ClassGlobal.set_property_info( sxc_property_info, 2484, 3 );
  type_ClassGlobal.set_base_types(type_table,1570);
  type_ClassGlobal.method_init_object = (SlagFn) Global__init_object;
  type_ClassGlobal.dispatch_table = sxc_dispatch_table+17346;
  type_ClassArrayReader_of_Mapping_of_Object_and_Int32.set_property_info( sxc_property_info, 2490, 5 );
  type_ClassArrayReader_of_Mapping_of_Object_and_Int32.set_base_types(type_table,1571);
  type_ClassArrayReader_of_Mapping_of_Object_and_Int32.method_init_object = (SlagFn) ArrayReader_of_Mapping_of_Object_and_Int32__init_object;
  type_ClassArrayReader_of_Mapping_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+17395;
  type_ClassArrayReverseReader_of_ParameterInfo.set_property_info( sxc_property_info, 2500, 5 );
  type_ClassArrayReverseReader_of_ParameterInfo.set_base_types(type_table,1574);
  type_ClassArrayReverseReader_of_ParameterInfo.method_init_object = (SlagFn) ArrayReverseReader_of_ParameterInfo__init_object;
  type_ClassArrayReverseReader_of_ParameterInfo.dispatch_table = sxc_dispatch_table+17444;
  type_AspectReader_of_CmdElseIf.set_base_types(type_table,1578);
  type_ClassArrayReader_of_CmdElseIf.set_property_info( sxc_property_info, 2510, 5 );
  type_ClassArrayReader_of_CmdElseIf.set_base_types(type_table,1579);
  type_ClassArrayReader_of_CmdElseIf.method_init_object = (SlagFn) ArrayReader_of_CmdElseIf__init_object;
  type_ClassArrayReader_of_CmdElseIf.dispatch_table = sxc_dispatch_table+17493;
  type_ClassCmdLocalVarDecrement.set_property_info( sxc_property_info, 2520, 2 );
  type_ClassCmdLocalVarDecrement.set_base_types(type_table,1582);
  type_ClassCmdLocalVarDecrement.method_init_object = (SlagFn) CmdLocalVarDecrement__init_object;
  type_ClassCmdLocalVarDecrement.dispatch_table = sxc_dispatch_table+17542;
  type_ClassCmdWhile.set_property_info( sxc_property_info, 2524, 5 );
  type_ClassCmdWhile.set_base_types(type_table,1586);
  type_ClassCmdWhile.method_init_object = (SlagFn) CmdWhile__init_object;
  type_ClassCmdWhile.dispatch_table = sxc_dispatch_table+17591;
  type_ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge.set_property_info( sxc_property_info, 2534, 3 );
  type_ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge.set_base_types(type_table,1589);
  type_ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge.method_init_object = (SlagFn) CmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge__init_object;
  type_ClassCmdCmpRelative_of_CmdCmpGE_and___and_CmdCmpNE_and_ffffffff_and_cmd_cmp_ge.dispatch_table = sxc_dispatch_table+17640;
  type_ClassCmdCmpGE.set_property_info( sxc_property_info, 2540, 3 );
  type_ClassCmdCmpGE.set_base_types(type_table,1593);
  type_ClassCmdCmpGE.method_init_object = (SlagFn) CmdCmpGE__init_object;
  type_ClassCmdCmpGE.dispatch_table = sxc_dispatch_table+17689;
  type_ClassSignalObjectArg.set_property_info( sxc_property_info, 2546, 5 );
  type_ClassSignalObjectArg.set_base_types(type_table,1598);
  type_ClassSignalObjectArg.method_init_object = (SlagFn) SignalObjectArg__init_object;
  type_ClassSignalObjectArg.dispatch_table = sxc_dispatch_table+17738;
  type_ClassRuntime.set_property_info( sxc_property_info, 2556, 1 );
  type_ClassRuntime.set_base_types(type_table,1600);
  type_ClassRuntime.method_init_object = (SlagFn) Runtime__init_object;
  type_ClassRuntime.dispatch_table = sxc_dispatch_table+17787;
  type_ClassCmdCast.set_property_info( sxc_property_info, 2558, 3 );
  type_ClassCmdCast.set_base_types(type_table,1601);
  type_ClassCmdCast.method_init_object = (SlagFn) CmdCast__init_object;
  type_ClassCmdCast.dispatch_table = sxc_dispatch_table+17836;
  type_ClassCmdNarrowingCast.set_property_info( sxc_property_info, 2564, 3 );
  type_ClassCmdNarrowingCast.set_base_types(type_table,1604);
  type_ClassCmdNarrowingCast.method_init_object = (SlagFn) CmdNarrowingCast__init_object;
  type_ClassCmdNarrowingCast.dispatch_table = sxc_dispatch_table+17885;
  type_ClassCmdPropertyWrite.set_property_info( sxc_property_info, 2570, 4 );
  type_ClassCmdPropertyWrite.set_base_types(type_table,1608);
  type_ClassCmdPropertyWrite.method_init_object = (SlagFn) CmdPropertyWrite__init_object;
  type_ClassCmdPropertyWrite.dispatch_table = sxc_dispatch_table+17934;
  type_ClassCmdContingentControl.set_property_info( sxc_property_info, 2578, 3 );
  type_ClassCmdContingentControl.set_base_types(type_table,1612);
  type_ClassCmdContingentControl.method_init_object = (SlagFn) CmdContingentControl__init_object;
  type_ClassCmdContingentControl.dispatch_table = sxc_dispatch_table+17983;
  type_ClassCmdSufficient.set_property_info( sxc_property_info, 2584, 3 );
  type_ClassCmdSufficient.set_base_types(type_table,1615);
  type_ClassCmdSufficient.method_init_object = (SlagFn) CmdSufficient__init_object;
  type_ClassCmdSufficient.dispatch_table = sxc_dispatch_table+18032;
  type_ClassCmdBlock.set_property_info( sxc_property_info, 2590, 4 );
  type_ClassCmdBlock.set_base_types(type_table,1619);
  type_ClassCmdBlock.method_init_object = (SlagFn) CmdBlock__init_object;
  type_ClassCmdBlock.dispatch_table = sxc_dispatch_table+18081;
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign.set_property_info( sxc_property_info, 2598, 3 );
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign.set_base_types(type_table,1622);
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign.method_init_object = (SlagFn) CmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign__init_object;
  type_ClassCmdModifyAndAssign_of_CmdThisPropertyDivAndAssign_and_PropertyInfo_and_cmd_this_property_div_and_assign.dispatch_table = sxc_dispatch_table+18130;
  type_ClassCmdThisPropertyDivAndAssign.set_property_info( sxc_property_info, 2604, 3 );
  type_ClassCmdThisPropertyDivAndAssign.set_base_types(type_table,1625);
  type_ClassCmdThisPropertyDivAndAssign.method_init_object = (SlagFn) CmdThisPropertyDivAndAssign__init_object;
  type_ClassCmdThisPropertyDivAndAssign.dispatch_table = sxc_dispatch_table+18179;
  type_ClassArrayReader_of_String.set_property_info( sxc_property_info, 2610, 5 );
  type_ClassArrayReader_of_String.set_base_types(type_table,1629);
  type_ClassArrayReader_of_String.method_init_object = (SlagFn) ArrayReader_of_String__init_object;
  type_ClassArrayReader_of_String.dispatch_table = sxc_dispatch_table+18228;
  type_ClassDegreesManager.set_base_types(type_table,1632);
  type_ClassDegreesManager.method_init_object = (SlagFn) DegreesManager__init_object;
  type_ClassDegreesManager.dispatch_table = sxc_dispatch_table+18277;
  type_ClassBigIntManager.set_property_info( sxc_property_info, 2620, 10 );
  type_ClassBigIntManager.set_base_types(type_table,1633);
  type_ClassBigIntManager.method_init_object = (SlagFn) BigIntManager__init_object;
  type_ClassBigIntManager.dispatch_table = sxc_dispatch_table+18326;
  type_ClassCmdArrayGet.set_property_info( sxc_property_info, 2640, 3 );
  type_ClassCmdArrayGet.set_base_types(type_table,1634);
  type_ClassCmdArrayGet.method_init_object = (SlagFn) CmdArrayGet__init_object;
  type_ClassCmdArrayGet.dispatch_table = sxc_dispatch_table+18375;
  type_ClassTypeCastError.set_property_info( sxc_property_info, 2646, 2 );
  type_ClassTypeCastError.set_base_types(type_table,1636);
  type_ClassTypeCastError.method_init_object = (SlagFn) TypeCastError__init_object;
  type_ClassTypeCastError.dispatch_table = sxc_dispatch_table+18424;
  type_ClassRangeIteratorGE_of_Int32.set_property_info( sxc_property_info, 2650, 3 );
  type_ClassRangeIteratorGE_of_Int32.set_base_types(type_table,1639);
  type_ClassRangeIteratorGE_of_Int32.method_init_object = (SlagFn) RangeIteratorGE_of_Int32__init_object;
  type_ClassRangeIteratorGE_of_Int32.dispatch_table = sxc_dispatch_table+18473;
  type_ClassCmdArraySet.set_property_info( sxc_property_info, 2656, 4 );
  type_ClassCmdArraySet.set_base_types(type_table,1642);
  type_ClassCmdArraySet.method_init_object = (SlagFn) CmdArraySet__init_object;
  type_ClassCmdArraySet.dispatch_table = sxc_dispatch_table+18522;
  type_ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign.set_property_info( sxc_property_info, 2664, 3 );
  type_ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign.set_base_types(type_table,1644);
  type_ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign.method_init_object = (SlagFn) CmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign__init_object;
  type_ClassCmdModifyAndAssign_of_CmdLocalVarSubAndAssign_and_MethodVarInfo_and_cmd_local_var_sub_and_assign.dispatch_table = sxc_dispatch_table+18571;
  type_ClassCmdLocalVarSubAndAssign.set_property_info( sxc_property_info, 2670, 3 );
  type_ClassCmdLocalVarSubAndAssign.set_base_types(type_table,1647);
  type_ClassCmdLocalVarSubAndAssign.method_init_object = (SlagFn) CmdLocalVarSubAndAssign__init_object;
  type_ClassCmdLocalVarSubAndAssign.dispatch_table = sxc_dispatch_table+18620;
  type_ClassCmdCmpGT.set_property_info( sxc_property_info, 2676, 3 );
  type_ClassCmdCmpGT.set_base_types(type_table,1651);
  type_ClassCmdCmpGT.method_init_object = (SlagFn) CmdCmpGT__init_object;
  type_ClassCmdCmpGT.dispatch_table = sxc_dispatch_table+18669;
  type_AspectReader_of_Signal.set_base_types(type_table,1656);
  type_ClassArrayReader_of_Signal.set_property_info( sxc_property_info, 2682, 5 );
  type_ClassArrayReader_of_Signal.set_base_types(type_table,1657);
  type_ClassArrayReader_of_Signal.method_init_object = (SlagFn) ArrayReader_of_Signal__init_object;
  type_ClassArrayReader_of_Signal.dispatch_table = sxc_dispatch_table+18718;
  type_ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign.set_property_info( sxc_property_info, 2692, 3 );
  type_ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign.set_base_types(type_table,1660);
  type_ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign.method_init_object = (SlagFn) CmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign__init_object;
  type_ClassCmdModifyAndAssign_of_CmdLocalVarMulAndAssign_and_MethodVarInfo_and_cmd_local_var_mul_and_assign.dispatch_table = sxc_dispatch_table+18767;
  type_ClassCmdLocalVarMulAndAssign.set_property_info( sxc_property_info, 2698, 3 );
  type_ClassCmdLocalVarMulAndAssign.set_base_types(type_table,1663);
  type_ClassCmdLocalVarMulAndAssign.method_init_object = (SlagFn) CmdLocalVarMulAndAssign__init_object;
  type_ClassCmdLocalVarMulAndAssign.dispatch_table = sxc_dispatch_table+18816;
  type_ClassSignalManager.set_property_info( sxc_property_info, 2704, 4 );
  type_ClassSignalManager.set_base_types(type_table,1667);
  type_ClassSignalManager.method_init_object = (SlagFn) SignalManager__init_object;
  type_ClassSignalManager.dispatch_table = sxc_dispatch_table+18865;
  type_ClassStdInReader.set_property_info( sxc_property_info, 2712, 2 );
  type_ClassStdInReader.set_base_types(type_table,1668);
  type_ClassStdInReader.method_init_object = (SlagFn) StdInReader__init_object;
  type_ClassStdInReader.dispatch_table = sxc_dispatch_table+18914;
  type_ClassArray_of_Mapping_of_Object_and_Object.set_base_types(type_table,1671);
  type_ClassArray_of_Mapping_of_Object_and_Object.element_size = sizeof(SlagObject*);
  type_ClassArray_of_Mapping_of_Object_and_Object.method_init_object = (SlagFn) Array_of_Mapping_of_Object_and_Object__init_object;
  type_ClassArray_of_Mapping_of_Object_and_Object.dispatch_table = sxc_dispatch_table+18963;
  type_ClassCmdLogicalize.set_property_info( sxc_property_info, 2716, 2 );
  type_ClassCmdLogicalize.set_base_types(type_table,1673);
  type_ClassCmdLogicalize.method_init_object = (SlagFn) CmdLogicalize__init_object;
  type_ClassCmdLogicalize.dispatch_table = sxc_dispatch_table+19012;
  type_ClassHashTable_of_String_and_StructureType.set_property_info( sxc_property_info, 2720, 1 );
  type_ClassHashTable_of_String_and_StructureType.set_base_types(type_table,1676);
  type_ClassHashTable_of_String_and_StructureType.method_init_object = (SlagFn) HashTable_of_String_and_StructureType__init_object;
  type_ClassHashTable_of_String_and_StructureType.dispatch_table = sxc_dispatch_table+19061;
  type_ClassOutOfBoundsError.set_property_info( sxc_property_info, 2722, 2 );
  type_ClassOutOfBoundsError.set_base_types(type_table,1680);
  type_ClassOutOfBoundsError.method_init_object = (SlagFn) OutOfBoundsError__init_object;
  type_ClassOutOfBoundsError.dispatch_table = sxc_dispatch_table+19110;
  type_ClassArrayReverseReader_of_ControlStructureInfo.set_property_info( sxc_property_info, 2726, 5 );
  type_ClassArrayReverseReader_of_ControlStructureInfo.set_base_types(type_table,1683);
  type_ClassArrayReverseReader_of_ControlStructureInfo.method_init_object = (SlagFn) ArrayReverseReader_of_ControlStructureInfo__init_object;
  type_ClassArrayReverseReader_of_ControlStructureInfo.dispatch_table = sxc_dispatch_table+19159;
  type_ClassWeakReferenceManager.set_base_types(type_table,1687);
  type_ClassWeakReferenceManager.method_init_object = (SlagFn) WeakReferenceManager__init_object;
  type_ClassWeakReferenceManager.dispatch_table = sxc_dispatch_table+19208;
  type_ClassCmdArrayCreate.set_property_info( sxc_property_info, 2736, 3 );
  type_ClassCmdArrayCreate.set_base_types(type_table,1688);
  type_ClassCmdArrayCreate.method_init_object = (SlagFn) CmdArrayCreate__init_object;
  type_ClassCmdArrayCreate.dispatch_table = sxc_dispatch_table+19257;
  type_ClassCmdLiteralChar.set_property_info( sxc_property_info, 2742, 2 );
  type_ClassCmdLiteralChar.set_base_types(type_table,1690);
  type_ClassCmdLiteralChar.method_init_object = (SlagFn) CmdLiteralChar__init_object;
  type_ClassCmdLiteralChar.dispatch_table = sxc_dispatch_table+19306;
  type_ClassCmdCastToChar.set_property_info( sxc_property_info, 2746, 2 );
  type_ClassCmdCastToChar.set_base_types(type_table,1694);
  type_ClassCmdCastToChar.method_init_object = (SlagFn) CmdCastToChar__init_object;
  type_ClassCmdCastToChar.dispatch_table = sxc_dispatch_table+19355;
  type_ClassSlagFile.set_property_info( sxc_property_info, 2750, 3 );
  type_ClassSlagFile.set_base_types(type_table,1698);
  type_ClassSlagFile.method_init_object = (SlagFn) SlagFile__init_object;
  type_ClassSlagFile.dispatch_table = sxc_dispatch_table+19404;
  type_ClassHashTableMappingReader_of_Object_and_Object.set_property_info( sxc_property_info, 2756, 2 );
  type_ClassHashTableMappingReader_of_Object_and_Object.set_base_types(type_table,1699);
  type_ClassHashTableMappingReader_of_Object_and_Object.method_init_object = (SlagFn) HashTableMappingReader_of_Object_and_Object__init_object;
  type_ClassHashTableMappingReader_of_Object_and_Object.dispatch_table = sxc_dispatch_table+19453;
  type_ClassPriorSlagError.set_property_info( sxc_property_info, 2760, 7 );
  type_ClassPriorSlagError.set_base_types(type_table,1702);
  type_ClassPriorSlagError.method_init_object = (SlagFn) PriorSlagError__init_object;
  type_ClassPriorSlagError.dispatch_table = sxc_dispatch_table+19502;
  type_ClassParameterInfo.set_property_info( sxc_property_info, 2774, 9 );
  type_ClassParameterInfo.set_base_types(type_table,1706);
  type_ClassParameterInfo.method_init_object = (SlagFn) ParameterInfo__init_object;
  type_ClassParameterInfo.dispatch_table = sxc_dispatch_table+19551;
  type_ClassCmdCompoundPropertyRead.set_property_info( sxc_property_info, 2792, 3 );
  type_ClassCmdCompoundPropertyRead.set_base_types(type_table,1709);
  type_ClassCmdCompoundPropertyRead.method_init_object = (SlagFn) CmdCompoundPropertyRead__init_object;
  type_ClassCmdCompoundPropertyRead.dispatch_table = sxc_dispatch_table+19600;
  type_ClassCmdNecessary.set_property_info( sxc_property_info, 2798, 3 );
  type_ClassCmdNecessary.set_base_types(type_table,1714);
  type_ClassCmdNecessary.method_init_object = (SlagFn) CmdNecessary__init_object;
  type_ClassCmdNecessary.dispatch_table = sxc_dispatch_table+19649;
  type_ClassStringTriplet.set_property_info( sxc_property_info, 2804, 3 );
  type_ClassStringTriplet.set_base_types(type_table,1718);
  type_ClassStringTriplet.method_init_object = (SlagFn) StringTriplet__init_object;
  type_ClassStringTriplet.dispatch_table = sxc_dispatch_table+19698;
  type_ClassTypeTemplate.set_property_info( sxc_property_info, 2810, 7 );
  type_ClassTypeTemplate.set_base_types(type_table,1719);
  type_ClassTypeTemplate.method_init_object = (SlagFn) TypeTemplate__init_object;
  type_ClassTypeTemplate.dispatch_table = sxc_dispatch_table+19747;
  type_ClassMapping_of_String_and_TypeTemplate.set_property_info( sxc_property_info, 2824, 2 );
  type_ClassMapping_of_String_and_TypeTemplate.set_base_types(type_table,1720);
  type_ClassMapping_of_String_and_TypeTemplate.method_init_object = (SlagFn) Mapping_of_String_and_TypeTemplate__init_object;
  type_ClassMapping_of_String_and_TypeTemplate.dispatch_table = sxc_dispatch_table+19796;
  type_ClassFileNotFoundError.set_property_info( sxc_property_info, 2828, 2 );
  type_ClassFileNotFoundError.set_base_types(type_table,1721);
  type_ClassFileNotFoundError.method_init_object = (SlagFn) FileNotFoundError__init_object;
  type_ClassFileNotFoundError.dispatch_table = sxc_dispatch_table+19845;
  type_ClassCmdLiteralLogical.set_property_info( sxc_property_info, 2832, 2 );
  type_ClassCmdLiteralLogical.set_base_types(type_table,1725);
  type_ClassCmdLiteralLogical.method_init_object = (SlagFn) CmdLiteralLogical__init_object;
  type_ClassCmdLiteralLogical.dispatch_table = sxc_dispatch_table+19894;
  type_ClassCmdElseIf.set_property_info( sxc_property_info, 2836, 3 );
  type_ClassCmdElseIf.set_base_types(type_table,1729);
  type_ClassCmdElseIf.method_init_object = (SlagFn) CmdElseIf__init_object;
  type_ClassCmdElseIf.dispatch_table = sxc_dispatch_table+19943;
  type_ClassCompilerError.set_property_info( sxc_property_info, 2842, 2 );
  type_ClassCompilerError.set_base_types(type_table,1731);
  type_ClassCompilerError.method_init_object = (SlagFn) CompilerError__init_object;
  type_ClassCompilerError.dispatch_table = sxc_dispatch_table+19992;
  type_ClassCmdCmpIsNot.set_property_info( sxc_property_info, 2846, 3 );
  type_ClassCmdCmpIsNot.set_base_types(type_table,1734);
  type_ClassCmdCmpIsNot.method_init_object = (SlagFn) CmdCmpIsNot__init_object;
  type_ClassCmdCmpIsNot.dispatch_table = sxc_dispatch_table+20041;
  type_AspectReader_of_TypeInfo.set_base_types(type_table,1738);
  type_ClassArrayReader_of_TypeInfo.set_property_info( sxc_property_info, 2852, 5 );
  type_ClassArrayReader_of_TypeInfo.set_base_types(type_table,1739);
  type_ClassArrayReader_of_TypeInfo.method_init_object = (SlagFn) ArrayReader_of_TypeInfo__init_object;
  type_ClassArrayReader_of_TypeInfo.dispatch_table = sxc_dispatch_table+20090;
  type_ClassRandomNumberGenerator.set_property_info( sxc_property_info, 2862, 2 );
  type_ClassRandomNumberGenerator.set_base_types(type_table,1742);
  type_ClassRandomNumberGenerator.method_init_object = (SlagFn) RandomNumberGenerator__init_object;
  type_ClassRandomNumberGenerator.dispatch_table = sxc_dispatch_table+20139;
  type_AspectReader_of_HashTable_of_String_and_LocalVarInfo.set_base_types(type_table,1743);
  type_ClassCmdCastToLogical.set_property_info( sxc_property_info, 2866, 2 );
  type_ClassCmdCastToLogical.set_base_types(type_table,1744);
  type_ClassCmdCastToLogical.method_init_object = (SlagFn) CmdCastToLogical__init_object;
  type_ClassCmdCastToLogical.dispatch_table = sxc_dispatch_table+20188;
  type_ClassCmdLocalVarRead.set_property_info( sxc_property_info, 2870, 2 );
  type_ClassCmdLocalVarRead.set_base_types(type_table,1748);
  type_ClassCmdLocalVarRead.method_init_object = (SlagFn) CmdLocalVarRead__init_object;
  type_ClassCmdLocalVarRead.dispatch_table = sxc_dispatch_table+20237;
  type_ClassCSWriter.set_property_info( sxc_property_info, 2874, 8 );
  type_ClassCSWriter.set_base_types(type_table,1752);
  type_ClassCSWriter.method_init_object = (SlagFn) CSWriter__init_object;
  type_ClassCSWriter.dispatch_table = sxc_dispatch_table+20286;
  type_ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or.set_property_info( sxc_property_info, 2890, 3 );
  type_ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or.set_base_types(type_table,1753);
  type_ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or.method_init_object = (SlagFn) CmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or__init_object;
  type_ClassCmdBitwiseOp_of_CmdOr_and__OR__and_OR__and_cmd_or.dispatch_table = sxc_dispatch_table+20335;
  type_ClassKeywordPairing.set_property_info( sxc_property_info, 2896, 2 );
  type_ClassKeywordPairing.set_base_types(type_table,1756);
  type_ClassKeywordPairing.method_init_object = (SlagFn) KeywordPairing__init_object;
  type_ClassKeywordPairing.dispatch_table = sxc_dispatch_table+20384;
  type_ClassMapping_of_Int32_and_KeywordPairing.set_property_info( sxc_property_info, 2900, 2 );
  type_ClassMapping_of_Int32_and_KeywordPairing.set_base_types(type_table,1757);
  type_ClassMapping_of_Int32_and_KeywordPairing.method_init_object = (SlagFn) Mapping_of_Int32_and_KeywordPairing__init_object;
  type_ClassMapping_of_Int32_and_KeywordPairing.dispatch_table = sxc_dispatch_table+20433;
  type_ClassUnsupportedMethodError.set_property_info( sxc_property_info, 2904, 2 );
  type_ClassUnsupportedMethodError.set_base_types(type_table,1758);
  type_ClassUnsupportedMethodError.method_init_object = (SlagFn) UnsupportedMethodError__init_object;
  type_ClassUnsupportedMethodError.dispatch_table = sxc_dispatch_table+20482;
  type_ClassCmdExplicitListLiteral.set_property_info( sxc_property_info, 2908, 3 );
  type_ClassCmdExplicitListLiteral.set_base_types(type_table,1761);
  type_ClassCmdExplicitListLiteral.method_init_object = (SlagFn) CmdExplicitListLiteral__init_object;
  type_ClassCmdExplicitListLiteral.dispatch_table = sxc_dispatch_table+20531;
  type_ClassCmdForEachInWithRemoveCurrent.set_property_info( sxc_property_info, 2914, 6 );
  type_ClassCmdForEachInWithRemoveCurrent.set_base_types(type_table,1763);
  type_ClassCmdForEachInWithRemoveCurrent.method_init_object = (SlagFn) CmdForEachInWithRemoveCurrent__init_object;
  type_ClassCmdForEachInWithRemoveCurrent.dispatch_table = sxc_dispatch_table+20580;
  type_ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement.set_property_info( sxc_property_info, 2926, 2 );
  type_ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement.set_base_types(type_table,1767);
  type_ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement.method_init_object = (SlagFn) CmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement__init_object;
  type_ClassCmdStepVar_of_CmdThisPropertyDecrement_and_PropertyInfo_and_cmd_this_property_decrement.dispatch_table = sxc_dispatch_table+20629;
  type_ClassCmdThisPropertyDecrement.set_property_info( sxc_property_info, 2930, 2 );
  type_ClassCmdThisPropertyDecrement.set_base_types(type_table,1770);
  type_ClassCmdThisPropertyDecrement.method_init_object = (SlagFn) CmdThisPropertyDecrement__init_object;
  type_ClassCmdThisPropertyDecrement.dispatch_table = sxc_dispatch_table+20678;
  type_ClassRange_of_Int32.set_property_info( sxc_property_info, 2934, 3 );
  type_ClassRange_of_Int32.set_base_types(type_table,1774);
  type_ClassRange_of_Int32.method_init_object = (SlagFn) Range_of_Int32__init_object;
  type_ClassRange_of_Int32.dispatch_table = sxc_dispatch_table+20727;
  type_ClassRangeGE_of_Int32.set_property_info( sxc_property_info, 2940, 3 );
  type_ClassRangeGE_of_Int32.set_base_types(type_table,1778);
  type_ClassRangeGE_of_Int32.method_init_object = (SlagFn) RangeGE_of_Int32__init_object;
  type_ClassRangeGE_of_Int32.dispatch_table = sxc_dispatch_table+20776;
  type_ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le.set_property_info( sxc_property_info, 2946, 3 );
  type_ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le.set_base_types(type_table,1783);
  type_ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le.method_init_object = (SlagFn) CmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le__init_object;
  type_ClassCmdCmpRelative_of_CmdCmpLE_and__of__and_CmdCmpNE_and_1_and_cmd_cmp_le.dispatch_table = sxc_dispatch_table+20825;
  type_ClassCoerceReader_of_MethodGroup.set_property_info( sxc_property_info, 2952, 1 );
  type_ClassCoerceReader_of_MethodGroup.set_base_types(type_table,1787);
  type_ClassCoerceReader_of_MethodGroup.method_init_object = (SlagFn) CoerceReader_of_MethodGroup__init_object;
  type_ClassCoerceReader_of_MethodGroup.dispatch_table = sxc_dispatch_table+20874;
  type_ClassCmdAccessIndex.set_property_info( sxc_property_info, 2954, 3 );
  type_ClassCmdAccessIndex.set_base_types(type_table,1790);
  type_ClassCmdAccessIndex.method_init_object = (SlagFn) CmdAccessIndex__init_object;
  type_ClassCmdAccessIndex.dispatch_table = sxc_dispatch_table+20923;
  type_ClassCmdUnderlyingCall.set_property_info( sxc_property_info, 2960, 1 );
  type_ClassCmdUnderlyingCall.set_base_types(type_table,1793);
  type_ClassCmdUnderlyingCall.method_init_object = (SlagFn) CmdUnderlyingCall__init_object;
  type_ClassCmdUnderlyingCall.dispatch_table = sxc_dispatch_table+20972;
  type_ClassCmdWideningCast.set_property_info( sxc_property_info, 2962, 3 );
  type_ClassCmdWideningCast.set_base_types(type_table,1796);
  type_ClassCmdWideningCast.method_init_object = (SlagFn) CmdWideningCast__init_object;
  type_ClassCmdWideningCast.dispatch_table = sxc_dispatch_table+21021;
  type_ClassArray_of_StackTraceInfo.set_base_types(type_table,1800);
  type_ClassArray_of_StackTraceInfo.element_size = sizeof(SlagObject*);
  type_ClassArray_of_StackTraceInfo.method_init_object = (SlagFn) Array_of_StackTraceInfo__init_object;
  type_ClassArray_of_StackTraceInfo.dispatch_table = sxc_dispatch_table+21070;
  type_ClassSignalHandlerManager.set_property_info( sxc_property_info, 2968, 4 );
  type_ClassSignalHandlerManager.set_base_types(type_table,1802);
  type_ClassSignalHandlerManager.method_init_object = (SlagFn) SignalHandlerManager__init_object;
  type_ClassSignalHandlerManager.dispatch_table = sxc_dispatch_table+21119;
  type_ClassCmdLazyAnd.set_property_info( sxc_property_info, 2976, 4 );
  type_ClassCmdLazyAnd.set_base_types(type_table,1803);
  type_ClassCmdLazyAnd.method_init_object = (SlagFn) CmdLazyAnd__init_object;
  type_ClassCmdLazyAnd.dispatch_table = sxc_dispatch_table+21168;
  type_AspectListOperations_of_StackTraceInfo_and_ArrayList_of_StackTraceInfo.set_base_types(type_table,1806);
  type_ClassCmdLocalVarDeclaration.set_property_info( sxc_property_info, 2984, 3 );
  type_ClassCmdLocalVarDeclaration.set_base_types(type_table,1811);
  type_ClassCmdLocalVarDeclaration.method_init_object = (SlagFn) CmdLocalVarDeclaration__init_object;
  type_ClassCmdLocalVarDeclaration.dispatch_table = sxc_dispatch_table+21217;
  type_ClassCmdLazyOr.set_property_info( sxc_property_info, 2990, 4 );
  type_ClassCmdLazyOr.set_base_types(type_table,1813);
  type_ClassCmdLazyOr.method_init_object = (SlagFn) CmdLazyOr__init_object;
  type_ClassCmdLazyOr.dispatch_table = sxc_dispatch_table+21266;
  type_ClassCmdAssignZeroValue.set_property_info( sxc_property_info, 2998, 2 );
  type_ClassCmdAssignZeroValue.set_base_types(type_table,1816);
  type_ClassCmdAssignZeroValue.method_init_object = (SlagFn) CmdAssignZeroValue__init_object;
  type_ClassCmdAssignZeroValue.dispatch_table = sxc_dispatch_table+21315;
  type_ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub.set_property_info( sxc_property_info, 3002, 3 );
  type_ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub.set_base_types(type_table,1818);
  type_ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub.method_init_object = (SlagFn) CmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub__init_object;
  type_ClassCmdMathOp_of_CmdSub_and__SUB__and_SUB__and_cmd_sub.dispatch_table = sxc_dispatch_table+21364;
  type_ClassCmdSub.set_property_info( sxc_property_info, 3008, 3 );
  type_ClassCmdSub.set_base_types(type_table,1821);
  type_ClassCmdSub.method_init_object = (SlagFn) CmdSub__init_object;
  type_ClassCmdSub.dispatch_table = sxc_dispatch_table+21413;
  type_ClassStopwatch.set_property_info( sxc_property_info, 3014, 2 );
  type_ClassStopwatch.set_base_types(type_table,1825);
  type_ClassStopwatch.method_init_object = (SlagFn) Stopwatch__init_object;
  type_ClassStopwatch.dispatch_table = sxc_dispatch_table+21462;
  type_ClassLiteralLogical.set_property_info( sxc_property_info, 3018, 2 );
  type_ClassLiteralLogical.set_base_types(type_table,1826);
  type_ClassLiteralLogical.method_init_object = (SlagFn) LiteralLogical__init_object;
  type_ClassLiteralLogical.dispatch_table = sxc_dispatch_table+21511;
  type_ClassHashTableMappingReader_of_Object_and_Int32.set_property_info( sxc_property_info, 3022, 2 );
  type_ClassHashTableMappingReader_of_Object_and_Int32.set_base_types(type_table,1829);
  type_ClassHashTableMappingReader_of_Object_and_Int32.method_init_object = (SlagFn) HashTableMappingReader_of_Object_and_Int32__init_object;
  type_ClassHashTableMappingReader_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+21560;
  type_ClassRangeIteratorAscending_of_Int32.set_property_info( sxc_property_info, 3026, 3 );
  type_ClassRangeIteratorAscending_of_Int32.set_base_types(type_table,1832);
  type_ClassRangeIteratorAscending_of_Int32.method_init_object = (SlagFn) RangeIteratorAscending_of_Int32__init_object;
  type_ClassRangeIteratorAscending_of_Int32.dispatch_table = sxc_dispatch_table+21609;
  type_ClassEnum_of_Qualifiers.set_property_info( sxc_property_info, 3032, 32 );
  type_ClassEnum_of_Qualifiers.set_base_types(type_table,1835);
  type_ClassEnum_of_Qualifiers.method_init_object = (SlagFn) Enum_of_Qualifiers__init_object;
  type_ClassEnum_of_Qualifiers.dispatch_table = sxc_dispatch_table+21658;
  type_ClassDelegateMaker.set_base_types(type_table,1837);
  type_ClassDelegateMaker.method_init_object = (SlagFn) DelegateMaker__init_object;
  type_ClassDelegateMaker.dispatch_table = sxc_dispatch_table+21707;
  type_ClassMapping_of_Int32_and_Int32.set_property_info( sxc_property_info, 3096, 2 );
  type_ClassMapping_of_Int32_and_Int32.set_base_types(type_table,1838);
  type_ClassMapping_of_Int32_and_Int32.method_init_object = (SlagFn) Mapping_of_Int32_and_Int32__init_object;
  type_ClassMapping_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+21756;
  type_ClassCmdMul.set_property_info( sxc_property_info, 3100, 3 );
  type_ClassCmdMul.set_base_types(type_table,1839);
  type_ClassCmdMul.method_init_object = (SlagFn) CmdMul__init_object;
  type_ClassCmdMul.dispatch_table = sxc_dispatch_table+21805;
  type_ClassArrayReader_of_Mapping_of_Object_and_Object.set_property_info( sxc_property_info, 3106, 5 );
  type_ClassArrayReader_of_Mapping_of_Object_and_Object.set_base_types(type_table,1843);
  type_ClassArrayReader_of_Mapping_of_Object_and_Object.method_init_object = (SlagFn) ArrayReader_of_Mapping_of_Object_and_Object__init_object;
  type_ClassArrayReader_of_Mapping_of_Object_and_Object.dispatch_table = sxc_dispatch_table+21854;
  type_ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo.set_property_info( sxc_property_info, 3116, 5 );
  type_ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo.set_base_types(type_table,1846);
  type_ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo.method_init_object = (SlagFn) ArrayReader_of_HashTable_of_String_and_LocalVarInfo__init_object;
  type_ClassArrayReader_of_HashTable_of_String_and_LocalVarInfo.dispatch_table = sxc_dispatch_table+21903;
  type_ClassCmdDiv.set_property_info( sxc_property_info, 3126, 3 );
  type_ClassCmdDiv.set_base_types(type_table,1849);
  type_ClassCmdDiv.method_init_object = (SlagFn) CmdDiv__init_object;
  type_ClassCmdDiv.dispatch_table = sxc_dispatch_table+21952;
  type_ClassArrayReader_of_HashTableBin_of_Int32_and_Int32.set_property_info( sxc_property_info, 3132, 5 );
  type_ClassArrayReader_of_HashTableBin_of_Int32_and_Int32.set_base_types(type_table,1853);
  type_ClassArrayReader_of_HashTableBin_of_Int32_and_Int32.method_init_object = (SlagFn) ArrayReader_of_HashTableBin_of_Int32_and_Int32__init_object;
  type_ClassArrayReader_of_HashTableBin_of_Int32_and_Int32.dispatch_table = sxc_dispatch_table+22001;
  type_AspectReader_of_CmdCatch.set_base_types(type_table,1856);
  type_ClassArrayReader_of_CmdCatch.set_property_info( sxc_property_info, 3142, 5 );
  type_ClassArrayReader_of_CmdCatch.set_base_types(type_table,1857);
  type_ClassArrayReader_of_CmdCatch.method_init_object = (SlagFn) ArrayReader_of_CmdCatch__init_object;
  type_ClassArrayReader_of_CmdCatch.dispatch_table = sxc_dispatch_table+22050;
  type_ClassArrayReverseReader_of_PropertyInfo.set_property_info( sxc_property_info, 3152, 5 );
  type_ClassArrayReverseReader_of_PropertyInfo.set_base_types(type_table,1860);
  type_ClassArrayReverseReader_of_PropertyInfo.method_init_object = (SlagFn) ArrayReverseReader_of_PropertyInfo__init_object;
  type_ClassArrayReverseReader_of_PropertyInfo.dispatch_table = sxc_dispatch_table+22099;
  type_ClassArrayList_of_StructureType.set_property_info( sxc_property_info, 3162, 3 );
  type_ClassArrayList_of_StructureType.set_base_types(type_table,1864);
  type_ClassArrayList_of_StructureType.method_init_object = (SlagFn) ArrayList_of_StructureType__init_object;
  type_ClassArrayList_of_StructureType.dispatch_table = sxc_dispatch_table+22148;
  type_ClassCmdCmpLE.set_property_info( sxc_property_info, 3168, 3 );
  type_ClassCmdCmpLE.set_base_types(type_table,1871);
  type_ClassCmdCmpLE.method_init_object = (SlagFn) CmdCmpLE__init_object;
  type_ClassCmdCmpLE.dispatch_table = sxc_dispatch_table+22197;
  type_ClassCmdNegate.set_property_info( sxc_property_info, 3174, 2 );
  type_ClassCmdNegate.set_base_types(type_table,1876);
  type_ClassCmdNegate.method_init_object = (SlagFn) CmdNegate__init_object;
  type_ClassCmdNegate.dispatch_table = sxc_dispatch_table+22246;
  type_ClassCmdOr.set_property_info( sxc_property_info, 3178, 3 );
  type_ClassCmdOr.set_base_types(type_table,1879);
  type_ClassCmdOr.method_init_object = (SlagFn) CmdOr__init_object;
  type_ClassCmdOr.dispatch_table = sxc_dispatch_table+22295;
  type_ClassSpecializedComparator_2189.set_base_types(type_table,1883);
  type_ClassSpecializedComparator_2189.method_init_object = (SlagFn) SpecializedComparator_2189__init_object;
  type_ClassSpecializedComparator_2189.dispatch_table = sxc_dispatch_table+22344;
  type_ClassMapping_of_Object_and_Object.set_property_info( sxc_property_info, 3184, 2 );
  type_ClassMapping_of_Object_and_Object.set_base_types(type_table,1885);
  type_ClassMapping_of_Object_and_Object.method_init_object = (SlagFn) Mapping_of_Object_and_Object__init_object;
  type_ClassMapping_of_Object_and_Object.dispatch_table = sxc_dispatch_table+22393;
  type_ClassRadiansManager.set_base_types(type_table,1886);
  type_ClassRadiansManager.method_init_object = (SlagFn) RadiansManager__init_object;
  type_ClassRadiansManager.dispatch_table = sxc_dispatch_table+22442;
  type_ClassCmdOpenScope.set_property_info( sxc_property_info, 3188, 1 );
  type_ClassCmdOpenScope.set_base_types(type_table,1887);
  type_ClassCmdOpenScope.method_init_object = (SlagFn) CmdOpenScope__init_object;
  type_ClassCmdOpenScope.dispatch_table = sxc_dispatch_table+22491;
  type_ClassSignalDataArg.set_property_info( sxc_property_info, 3190, 5 );
  type_ClassSignalDataArg.set_base_types(type_table,1890);
  type_ClassSignalDataArg.method_init_object = (SlagFn) SignalDataArg__init_object;
  type_ClassSignalDataArg.dispatch_table = sxc_dispatch_table+22540;
  type_ClassListOf_of_MethodInfo.set_base_types(type_table,1891);
  type_ClassListOf_of_MethodInfo.method_init_object = (SlagFn) ListOf_of_MethodInfo__init_object;
  type_ClassListOf_of_MethodInfo.dispatch_table = sxc_dispatch_table+22589;
  type_ClassCmdRangeGE.set_property_info( sxc_property_info, 3200, 4 );
  type_ClassCmdRangeGE.set_base_types(type_table,1892);
  type_ClassCmdRangeGE.method_init_object = (SlagFn) CmdRangeGE__init_object;
  type_ClassCmdRangeGE.dispatch_table = sxc_dispatch_table+22638;
  type_ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign.set_property_info( sxc_property_info, 3208, 3 );
  type_ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign.set_base_types(type_table,1895);
  type_ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign.method_init_object = (SlagFn) CmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign__init_object;
  type_ClassCmdModifyAndAssign_of_CmdLocalVarModAndAssign_and_MethodVarInfo_and_cmd_local_var_mod_and_assign.dispatch_table = sxc_dispatch_table+22687;
  type_ClassCmdLocalVarModAndAssign.set_property_info( sxc_property_info, 3214, 3 );
  type_ClassCmdLocalVarModAndAssign.set_base_types(type_table,1898);
  type_ClassCmdLocalVarModAndAssign.method_init_object = (SlagFn) CmdLocalVarModAndAssign__init_object;
  type_ClassCmdLocalVarModAndAssign.dispatch_table = sxc_dispatch_table+22736;
  type_ClassCmdCmpLT.set_property_info( sxc_property_info, 3220, 3 );
  type_ClassCmdCmpLT.set_base_types(type_table,1902);
  type_ClassCmdCmpLT.method_init_object = (SlagFn) CmdCmpLT__init_object;
  type_ClassCmdCmpLT.dispatch_table = sxc_dispatch_table+22785;
  type_ClassArrayReverseReader_of_Char.set_property_info( sxc_property_info, 3226, 5 );
  type_ClassArrayReverseReader_of_Char.set_base_types(type_table,1907);
  type_ClassArrayReverseReader_of_Char.method_init_object = (SlagFn) ArrayReverseReader_of_Char__init_object;
  type_ClassArrayReverseReader_of_Char.dispatch_table = sxc_dispatch_table+22834;
  type_ClassFileReader.set_property_info( sxc_property_info, 3236, 1 );
  type_ClassFileReader.set_base_types(type_table,1911);
  type_ClassFileReader.method_init_object = (SlagFn) FileReader__init_object;
  type_ClassFileReader.method_clean_up = (SlagFn) FileReader__clean_up;
  type_ClassFileReader.dispatch_table = sxc_dispatch_table+22883;
  type_ClassCmdRightShifted.set_property_info( sxc_property_info, 3238, 3 );
  type_ClassCmdRightShifted.set_base_types(type_table,1915);
  type_ClassCmdRightShifted.method_init_object = (SlagFn) CmdRightShifted__init_object;
  type_ClassCmdRightShifted.dispatch_table = sxc_dispatch_table+22932;
  type_ClassCallStackLimitReached.set_property_info( sxc_property_info, 3244, 2 );
  type_ClassCallStackLimitReached.set_base_types(type_table,1919);
  type_ClassCallStackLimitReached.method_init_object = (SlagFn) CallStackLimitReached__init_object;
  type_ClassCallStackLimitReached.dispatch_table = sxc_dispatch_table+22981;
  type_ClassDivideByZeroError.set_property_info( sxc_property_info, 3248, 2 );
  type_ClassDivideByZeroError.set_base_types(type_table,1922);
  type_ClassDivideByZeroError.method_init_object = (SlagFn) DivideByZeroError__init_object;
  type_ClassDivideByZeroError.dispatch_table = sxc_dispatch_table+23030;
  type_ClassHashTableValueReader_of_Object_and_Int32.set_property_info( sxc_property_info, 3252, 2 );
  type_ClassHashTableValueReader_of_Object_and_Int32.set_base_types(type_table,1925);
  type_ClassHashTableValueReader_of_Object_and_Int32.method_init_object = (SlagFn) HashTableValueReader_of_Object_and_Int32__init_object;
  type_ClassHashTableValueReader_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+23079;
  type_ClassArrayReader_of_HashTableBin_of_Int32_and_Object.set_property_info( sxc_property_info, 3256, 5 );
  type_ClassArrayReader_of_HashTableBin_of_Int32_and_Object.set_base_types(type_table,1928);
  type_ClassArrayReader_of_HashTableBin_of_Int32_and_Object.method_init_object = (SlagFn) ArrayReader_of_HashTableBin_of_Int32_and_Object__init_object;
  type_ClassArrayReader_of_HashTableBin_of_Int32_and_Object.dispatch_table = sxc_dispatch_table+23128;
  type_ClassCmdPropertyRead.set_property_info( sxc_property_info, 3266, 3 );
  type_ClassCmdPropertyRead.set_base_types(type_table,1931);
  type_ClassCmdPropertyRead.method_init_object = (SlagFn) CmdPropertyRead__init_object;
  type_ClassCmdPropertyRead.dispatch_table = sxc_dispatch_table+23177;
  type_ClassLineReader.set_property_info( sxc_property_info, 3272, 2 );
  type_ClassLineReader.set_base_types(type_table,1936);
  type_ClassLineReader.method_init_object = (SlagFn) LineReader__init_object;
  type_ClassLineReader.dispatch_table = sxc_dispatch_table+23226;
  type_ClassMapping_of_String_and_Int32.set_property_info( sxc_property_info, 3276, 2 );
  type_ClassMapping_of_String_and_Int32.set_base_types(type_table,1939);
  type_ClassMapping_of_String_and_Int32.method_init_object = (SlagFn) Mapping_of_String_and_Int32__init_object;
  type_ClassMapping_of_String_and_Int32.dispatch_table = sxc_dispatch_table+23275;
  type_ClassCoerceReader_of_TypeInfo.set_property_info( sxc_property_info, 3280, 1 );
  type_ClassCoerceReader_of_TypeInfo.set_base_types(type_table,1940);
  type_ClassCoerceReader_of_TypeInfo.method_init_object = (SlagFn) CoerceReader_of_TypeInfo__init_object;
  type_ClassCoerceReader_of_TypeInfo.dispatch_table = sxc_dispatch_table+23324;
  type_ClassMapping_of_String_and_MethodGroup.set_property_info( sxc_property_info, 3282, 2 );
  type_ClassMapping_of_String_and_MethodGroup.set_base_types(type_table,1943);
  type_ClassMapping_of_String_and_MethodGroup.method_init_object = (SlagFn) Mapping_of_String_and_MethodGroup__init_object;
  type_ClassMapping_of_String_and_MethodGroup.dispatch_table = sxc_dispatch_table+23373;
  type_ClassCmdRangeGT.set_property_info( sxc_property_info, 3286, 4 );
  type_ClassCmdRangeGT.set_base_types(type_table,1944);
  type_ClassCmdRangeGT.method_init_object = (SlagFn) CmdRangeGT__init_object;
  type_ClassCmdRangeGT.dispatch_table = sxc_dispatch_table+23422;
  type_ClassArrayList_of_ControlStructureInfo.set_property_info( sxc_property_info, 3294, 3 );
  type_ClassArrayList_of_ControlStructureInfo.set_base_types(type_table,1947);
  type_ClassArrayList_of_ControlStructureInfo.method_init_object = (SlagFn) ArrayList_of_ControlStructureInfo__init_object;
  type_ClassArrayList_of_ControlStructureInfo.dispatch_table = sxc_dispatch_table+23471;
  type_ClassCmdCatch.set_property_info( sxc_property_info, 3300, 3 );
  type_ClassCmdCatch.set_base_types(type_table,1954);
  type_ClassCmdCatch.method_init_object = (SlagFn) CmdCatch__init_object;
  type_ClassCmdCatch.dispatch_table = sxc_dispatch_table+23520;
  type_ClassArrayReader_of_CategoryInfo.set_property_info( sxc_property_info, 3306, 5 );
  type_ClassArrayReader_of_CategoryInfo.set_base_types(type_table,1956);
  type_ClassArrayReader_of_CategoryInfo.method_init_object = (SlagFn) ArrayReader_of_CategoryInfo__init_object;
  type_ClassArrayReader_of_CategoryInfo.dispatch_table = sxc_dispatch_table+23569;
  type_ClassObjectManager.set_base_types(type_table,1959);
  type_ClassObjectManager.method_init_object = (SlagFn) ObjectManager__init_object;
  type_ClassObjectManager.dispatch_table = sxc_dispatch_table+23618;
  type_ClassControlStructureInfo.set_property_info( sxc_property_info, 3316, 3 );
  type_ClassControlStructureInfo.set_base_types(type_table,1960);
  type_ClassControlStructureInfo.method_init_object = (SlagFn) ControlStructureInfo__init_object;
  type_ClassControlStructureInfo.dispatch_table = sxc_dispatch_table+23667;
  type_ClassArrayList_of_StackTraceInfo.set_property_info( sxc_property_info, 3322, 3 );
  type_ClassArrayList_of_StackTraceInfo.set_base_types(type_table,1961);
  type_ClassArrayList_of_StackTraceInfo.method_init_object = (SlagFn) ArrayList_of_StackTraceInfo__init_object;
  type_ClassArrayList_of_StackTraceInfo.dispatch_table = sxc_dispatch_table+23716;
  type_ClassArrayList_of_Mapping_of_Object_and_Object.set_property_info( sxc_property_info, 3328, 3 );
  type_ClassArrayList_of_Mapping_of_Object_and_Object.set_base_types(type_table,1968);
  type_ClassArrayList_of_Mapping_of_Object_and_Object.method_init_object = (SlagFn) ArrayList_of_Mapping_of_Object_and_Object__init_object;
  type_ClassArrayList_of_Mapping_of_Object_and_Object.dispatch_table = sxc_dispatch_table+23765;
  type_ClassHashTableBin_of_Object_and_Object.set_property_info( sxc_property_info, 3334, 1 );
  type_ClassHashTableBin_of_Object_and_Object.set_base_types(type_table,1975);
  type_ClassHashTableBin_of_Object_and_Object.method_init_object = (SlagFn) HashTableBin_of_Object_and_Object__init_object;
  type_ClassHashTableBin_of_Object_and_Object.dispatch_table = sxc_dispatch_table+23814;
  type_ClassCmdLogicalNot.set_property_info( sxc_property_info, 3336, 2 );
  type_ClassCmdLogicalNot.set_base_types(type_table,1976);
  type_ClassCmdLogicalNot.method_init_object = (SlagFn) CmdLogicalNot__init_object;
  type_ClassCmdLogicalNot.dispatch_table = sxc_dispatch_table+23863;
  type_ClassCmdLogicalXor.set_property_info( sxc_property_info, 3340, 3 );
  type_ClassCmdLogicalXor.set_base_types(type_table,1980);
  type_ClassCmdLogicalXor.method_init_object = (SlagFn) CmdLogicalXor__init_object;
  type_ClassCmdLogicalXor.dispatch_table = sxc_dispatch_table+23912;
  type_ClassArrayReader_of_SlagError.set_property_info( sxc_property_info, 3346, 5 );
  type_ClassArrayReader_of_SlagError.set_base_types(type_table,1985);
  type_ClassArrayReader_of_SlagError.method_init_object = (SlagFn) ArrayReader_of_SlagError__init_object;
  type_ClassArrayReader_of_SlagError.dispatch_table = sxc_dispatch_table+23961;
  type_ClassSlagParser.set_property_info( sxc_property_info, 3356, 26 );
  type_ClassSlagParser.set_base_types(type_table,1988);
  type_ClassSlagParser.method_init_object = (SlagFn) SlagParser__init_object;
  type_ClassSlagParser.dispatch_table = sxc_dispatch_table+24010;
  type_ClassCmdFormattedString.set_property_info( sxc_property_info, 3408, 3 );
  type_ClassCmdFormattedString.set_base_types(type_table,1989);
  type_ClassCmdFormattedString.method_init_object = (SlagFn) CmdFormattedString__init_object;
  type_ClassCmdFormattedString.dispatch_table = sxc_dispatch_table+24059;
  type_ClassCoerceReader_of_Int32.set_property_info( sxc_property_info, 3414, 1 );
  type_ClassCoerceReader_of_Int32.set_base_types(type_table,1991);
  type_ClassCoerceReader_of_Int32.method_init_object = (SlagFn) CoerceReader_of_Int32__init_object;
  type_ClassCoerceReader_of_Int32.dispatch_table = sxc_dispatch_table+24108;
  type_ClassCompareFn_of_MethodInfo_and_a_of_.set_base_types(type_table,1994);
  type_ClassCompareFn_of_MethodInfo_and_a_of_.method_init_object = (SlagFn) CompareFn_of_MethodInfo_and_a_of___init_object;
  type_ClassCompareFn_of_MethodInfo_and_a_of_.dispatch_table = sxc_dispatch_table+24157;
  type_ClassMapping_of_String_and_MethodInfo.set_property_info( sxc_property_info, 3416, 2 );
  type_ClassMapping_of_String_and_MethodInfo.set_base_types(type_table,1996);
  type_ClassMapping_of_String_and_MethodInfo.method_init_object = (SlagFn) Mapping_of_String_and_MethodInfo__init_object;
  type_ClassMapping_of_String_and_MethodInfo.dispatch_table = sxc_dispatch_table+24206;
  type_ClassCoerceReader_of_Cmd.set_property_info( sxc_property_info, 3420, 1 );
  type_ClassCoerceReader_of_Cmd.set_base_types(type_table,1997);
  type_ClassCoerceReader_of_Cmd.method_init_object = (SlagFn) CoerceReader_of_Cmd__init_object;
  type_ClassCoerceReader_of_Cmd.dispatch_table = sxc_dispatch_table+24255;
  type_ClassMapping_of_String_and_LocalVarInfo.set_property_info( sxc_property_info, 3422, 2 );
  type_ClassMapping_of_String_and_LocalVarInfo.set_base_types(type_table,2000);
  type_ClassMapping_of_String_and_LocalVarInfo.method_init_object = (SlagFn) Mapping_of_String_and_LocalVarInfo__init_object;
  type_ClassMapping_of_String_and_LocalVarInfo.dispatch_table = sxc_dispatch_table+24304;
  type_ClassConcurrentModificationError.set_property_info( sxc_property_info, 3426, 2 );
  type_ClassConcurrentModificationError.set_base_types(type_table,2001);
  type_ClassConcurrentModificationError.method_init_object = (SlagFn) ConcurrentModificationError__init_object;
  type_ClassConcurrentModificationError.dispatch_table = sxc_dispatch_table+24353;
  type_ClassCmdThisPropertyAddAndAssign.set_property_info( sxc_property_info, 3430, 3 );
  type_ClassCmdThisPropertyAddAndAssign.set_base_types(type_table,2004);
  type_ClassCmdThisPropertyAddAndAssign.method_init_object = (SlagFn) CmdThisPropertyAddAndAssign__init_object;
  type_ClassCmdThisPropertyAddAndAssign.dispatch_table = sxc_dispatch_table+24402;
  type_ClassCmdCmpIsNull.set_property_info( sxc_property_info, 3436, 2 );
  type_ClassCmdCmpIsNull.set_base_types(type_table,2008);
  type_ClassCmdCmpIsNull.method_init_object = (SlagFn) CmdCmpIsNull__init_object;
  type_ClassCmdCmpIsNull.dispatch_table = sxc_dispatch_table+24451;
  type_ClassHashTableBin_of_Object_and_Int32.set_property_info( sxc_property_info, 3440, 1 );
  type_ClassHashTableBin_of_Object_and_Int32.set_base_types(type_table,2011);
  type_ClassHashTableBin_of_Object_and_Int32.method_init_object = (SlagFn) HashTableBin_of_Object_and_Int32__init_object;
  type_ClassHashTableBin_of_Object_and_Int32.dispatch_table = sxc_dispatch_table+24500;
  type_ClassInvalidOperandError.set_property_info( sxc_property_info, 3442, 2 );
  type_ClassInvalidOperandError.set_base_types(type_table,2012);
  type_ClassInvalidOperandError.method_init_object = (SlagFn) InvalidOperandError__init_object;
  type_ClassInvalidOperandError.dispatch_table = sxc_dispatch_table+24549;
  type_ClassCmdForEachIn.set_property_info( sxc_property_info, 3446, 7 );
  type_ClassCmdForEachIn.set_base_types(type_table,2015);
  type_ClassCmdForEachIn.method_init_object = (SlagFn) CmdForEachIn__init_object;
  type_ClassCmdForEachIn.dispatch_table = sxc_dispatch_table+24598;
  type_ClassSlagParserManager.set_property_info( sxc_property_info, 3460, 4 );
  type_ClassSlagParserManager.set_base_types(type_table,2019);
  type_ClassSlagParserManager.method_init_object = (SlagFn) SlagParserManager__init_object;
  type_ClassSlagParserManager.dispatch_table = sxc_dispatch_table+24647;
  type_ClassInlineClassPropertyDeclaration.set_property_info( sxc_property_info, 3468, 4 );
  type_ClassInlineClassPropertyDeclaration.set_base_types(type_table,2020);
  type_ClassInlineClassPropertyDeclaration.method_init_object = (SlagFn) InlineClassPropertyDeclaration__init_object;
  type_ClassInlineClassPropertyDeclaration.dispatch_table = sxc_dispatch_table+24696;
  type_ClassHashTableMappingReader_of_Int32_and_Object.set_property_info( sxc_property_info, 3476, 2 );
  type_ClassHashTableMappingReader_of_Int32_and_Object.set_base_types(type_table,2022);
  type_ClassHashTableMappingReader_of_Int32_and_Object.method_init_object = (SlagFn) HashTableMappingReader_of_Int32_and_Object__init_object;
  type_ClassHashTableMappingReader_of_Int32_and_Object.dispatch_table = sxc_dispatch_table+24745;
  type_ClassArrayReader_of_StackTraceInfo.set_property_info( sxc_property_info, 3480, 5 );
  type_ClassArrayReader_of_StackTraceInfo.set_base_types(type_table,2025);
  type_ClassArrayReader_of_StackTraceInfo.method_init_object = (SlagFn) ArrayReader_of_StackTraceInfo__init_object;
  type_ClassArrayReader_of_StackTraceInfo.dispatch_table = sxc_dispatch_table+24794;
  type_ClassMapping_of_String_and_PropertyInfo.set_property_info( sxc_property_info, 3490, 2 );
  type_ClassMapping_of_String_and_PropertyInfo.set_base_types(type_table,2028);
  type_ClassMapping_of_String_and_PropertyInfo.method_init_object = (SlagFn) Mapping_of_String_and_PropertyInfo__init_object;
  type_ClassMapping_of_String_and_PropertyInfo.dispatch_table = sxc_dispatch_table+24843;
  type_ClassEnum_of_StructureType.set_property_info( sxc_property_info, 3494, 11 );
  type_ClassEnum_of_StructureType.set_base_types(type_table,2029);
  type_ClassEnum_of_StructureType.method_init_object = (SlagFn) Enum_of_StructureType__init_object;
  type_ClassEnum_of_StructureType.dispatch_table = sxc_dispatch_table+24892;
  type_ClassParsePosManager.set_base_types(type_table,2031);
  type_ClassParsePosManager.method_init_object = (SlagFn) ParsePosManager__init_object;
  type_ClassParsePosManager.dispatch_table = sxc_dispatch_table+24941;
  type_ClassErrors.set_property_info( sxc_property_info, 3516, 1 );
  type_ClassErrors.set_base_types(type_table,2032);
  type_ClassErrors.method_init_object = (SlagFn) Errors__init_object;
  type_ClassErrors.dispatch_table = sxc_dispatch_table+24990;
  type_ClassCmdImplicitListLiteral.set_property_info( sxc_property_info, 3518, 2 );
  type_ClassCmdImplicitListLiteral.set_base_types(type_table,2033);
  type_ClassCmdImplicitListLiteral.method_init_object = (SlagFn) CmdImplicitListLiteral__init_object;
  type_ClassCmdImplicitListLiteral.dispatch_table = sxc_dispatch_table+25039;

  sxc.set_up_method_info( sxc_method_info_table, 4191 );
  sxc.create_method_lists( sxc_method_list_table, 512 );
  sxc_write_ref( &sxc_singletons[0], type_ClassSystem.create_without_init() );
  sxc_write_ref( &sxc_singletons[1], type_ClassQualifiersManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[2], type_ClassTokenManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[3], type_ClassParseReaderMarkManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[4], type_ClassMath.create_without_init() );
  sxc_write_ref( &sxc_singletons[5], type_ClassEnum_of_CMD.create_without_init() );
  sxc_write_ref( &sxc_singletons[6], type_ClassCmdManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[7], type_ClassTypeManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[8], type_ClassSlagAnalyzer.create_without_init() );
  sxc_write_ref( &sxc_singletons[9], type_ClassMethodTableManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[10], type_ClassContext.create_without_init() );
  sxc_write_ref( &sxc_singletons[11], type_ClassCPPWriter.create_without_init() );
  sxc_write_ref( &sxc_singletons[12], type_ClassNumberConversions.create_without_init() );
  sxc_write_ref( &sxc_singletons[13], type_ClassETCWriter.create_without_init() );
  sxc_write_ref( &sxc_singletons[14], type_ClassSlagCompiler.create_without_init() );
  sxc_write_ref( &sxc_singletons[15], type_ClassBitwiseOperations.create_without_init() );
  sxc_write_ref( &sxc_singletons[16], type_ClassFileManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[17], type_ClassHeapSort_of_MethodInfo.create_without_init() );
  sxc_write_ref( &sxc_singletons[18], type_ClassStringManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[19], type_ClassJavaWriter.create_without_init() );
  sxc_write_ref( &sxc_singletons[20], type_ClassSlagScannerManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[21], type_ClassGlobal.create_without_init() );
  sxc_write_ref( &sxc_singletons[22], type_ClassRuntime.create_without_init() );
  sxc_write_ref( &sxc_singletons[23], type_ClassDegreesManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[24], type_ClassBigIntManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[25], type_ClassSignalManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[26], type_ClassWeakReferenceManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[27], type_ClassRandomNumberGenerator.create_without_init() );
  sxc_write_ref( &sxc_singletons[28], type_ClassCSWriter.create_without_init() );
  sxc_write_ref( &sxc_singletons[29], type_ClassSignalHandlerManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[30], type_ClassEnum_of_Qualifiers.create_without_init() );
  sxc_write_ref( &sxc_singletons[31], type_ClassDelegateMaker.create_without_init() );
  sxc_write_ref( &sxc_singletons[32], type_ClassRadiansManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[33], type_ClassListOf_of_MethodInfo.create_without_init() );
  sxc_write_ref( &sxc_singletons[34], type_ClassObjectManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[35], type_ClassSlagParserManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[36], type_ClassEnum_of_StructureType.create_without_init() );
  sxc_write_ref( &sxc_singletons[37], type_ClassParsePosManager.create_without_init() );
  sxc_write_ref( &sxc_singletons[38], type_ClassErrors.create_without_init() );

  Global__set_up_stdio( type_ClassGlobal.singleton() );

  SlagObject* main_obj;
  main_obj = sxc_singletons[14];
  slag_main_object = main_obj;

  System__init_object( sxc_singletons[0] );
  QualifiersManager__init_object( sxc_singletons[1] );
  TokenManager__init_object( sxc_singletons[2] );
  ParseReaderMarkManager__init_object( sxc_singletons[3] );
  Math__init_object( sxc_singletons[4] );
  Enum_of_CMD__init_object( sxc_singletons[5] );
  CmdManager__init_object( sxc_singletons[6] );
  TypeManager__init_object( sxc_singletons[7] );
  SlagAnalyzer__init_object( sxc_singletons[8] );
  MethodTableManager__init_object( sxc_singletons[9] );
  Context__init_object( sxc_singletons[10] );
  CPPWriter__init_object( sxc_singletons[11] );
  NumberConversions__init_object( sxc_singletons[12] );
  ETCWriter__init_object( sxc_singletons[13] );
  BitwiseOperations__init_object( sxc_singletons[15] );
  FileManager__init_object( sxc_singletons[16] );
  HeapSort_of_MethodInfo__init_object( sxc_singletons[17] );
  StringManager__init_object( sxc_singletons[18] );
  JavaWriter__init_object( sxc_singletons[19] );
  SlagScannerManager__init_object( sxc_singletons[20] );
  Global__init_object( sxc_singletons[21] );
  Runtime__init_object( sxc_singletons[22] );
  DegreesManager__init_object( sxc_singletons[23] );
  BigIntManager__init_object( sxc_singletons[24] );
  SignalManager__init_object( sxc_singletons[25] );
  WeakReferenceManager__init_object( sxc_singletons[26] );
  RandomNumberGenerator__init_object( sxc_singletons[27] );
  CSWriter__init_object( sxc_singletons[28] );
  SignalHandlerManager__init_object( sxc_singletons[29] );
  Enum_of_Qualifiers__init_object( sxc_singletons[30] );
  DelegateMaker__init_object( sxc_singletons[31] );
  RadiansManager__init_object( sxc_singletons[32] );
  ListOf_of_MethodInfo__init_object( sxc_singletons[33] );
  ObjectManager__init_object( sxc_singletons[34] );
  SlagParserManager__init_object( sxc_singletons[35] );
  Enum_of_StructureType__init_object( sxc_singletons[36] );
  ParsePosManager__init_object( sxc_singletons[37] );
  Errors__init_object( sxc_singletons[38] );

  TypeManager__init_singleton( sxc_singletons[7] );
  Global__init_singleton( sxc_singletons[21] );
  Runtime__init_singleton( sxc_singletons[22] );
  SignalManager__init_singleton( sxc_singletons[25] );
  RandomNumberGenerator__init_singleton( sxc_singletons[27] );
}

SlagObject* sxc_get_global_cmd_line_args_list()
{
  return ((ClassGlobal*)sxc_singletons[21])->property_command_line_args;
}

